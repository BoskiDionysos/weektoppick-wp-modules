[{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hr.php","ext":"php","size":3750,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - Tim Fish\n * - shaishavgandhi05\n * - Serhan Apaydın\n * - JD Isaacks\n * - tomhorvat\n * - Josh Soref\n * - François B\n * - shaishavgandhi05\n * - Serhan Apaydın\n * - JD Isaacks\n * - tomhorvat\n * - Stjepan Majdak\n * - Vanja Retkovac (vr00)\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count godinu|:count godine|:count godina',\n    'y' => ':count god.|:count god.|:count god.',\n    'month' => ':count mjesec|:count mjeseca|:count mjeseci',\n    'm' => ':count mj.|:count mj.|:count mj.',\n    'week' => ':count tjedan|:count tjedna|:count tjedana',\n    'w' => ':count tj.|:count tj.|:count tj.',\n    'day' => ':count dan|:count dana|:count dana',\n    'd' => ':count d.|:count d.|:count d.',\n    'hour' => ':count sat|:count sata|:count sati',\n    'h' => ':count sat|:count sata|:count sati',\n    'minute' => ':count minutu|:count minute|:count minuta',\n    'min' => ':count min.|:count min.|:count min.',\n    'second' => ':count sekundu|:count sekunde|:count sekundi',\n    'a_second' => 'nekoliko sekundi|:count sekunde|:count sekundi',\n    's' => ':count sek.|:count sek.|:count sek.',\n    'ago' => 'prije :time',\n    'from_now' => 'za :time',\n    'after' => ':time poslije',\n    'before' => ':time prije',\n    'diff_now' => 'sad',\n    'diff_today' => 'danas',\n    'diff_today_regexp' => 'danas(?:\\\\s+u)?',\n    'diff_yesterday' => 'jučer',\n    'diff_yesterday_regexp' => 'jučer(?:\\\\s+u)?',\n    'diff_tomorrow' => 'sutra',\n    'diff_tomorrow_regexp' => 'sutra(?:\\\\s+u)?',\n    'diff_before_yesterday' => 'prekjučer',\n    'diff_after_tomorrow' => 'prekosutra',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'D. M. YYYY.',\n        'LL' => 'D. MMMM YYYY.',\n        'LLL' => 'D. MMMM YYYY. H:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY. H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[danas u] LT',\n        'nextDay' => '[sutra u] LT',\n        'nextWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[u] [nedjelju] [u] LT',\n            3 => '[u] [srijedu] [u] LT',\n            6 => '[u] [subotu] [u] LT',\n            default => '[u] dddd [u] LT',\n        },\n        'lastDay' => '[jučer u] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0, 3 => '[prošlu] dddd [u] LT',\n            6 => '[prošle] [subote] [u] LT',\n            default => '[prošli] dddd [u] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['siječnja', 'veljače', 'ožujka', 'travnja', 'svibnja', 'lipnja', 'srpnja', 'kolovoza', 'rujna', 'listopada', 'studenoga', 'prosinca'],\n    'months_standalone' => ['siječanj', 'veljača', 'ožujak', 'travanj', 'svibanj', 'lipanj', 'srpanj', 'kolovoz', 'rujan', 'listopad', 'studeni', 'prosinac'],\n    'months_short' => ['sij.', 'velj.', 'ožu.', 'tra.', 'svi.', 'lip.', 'srp.', 'kol.', 'ruj.', 'lis.', 'stu.', 'pro.'],\n    'months_regexp' => '/(D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['nedjelju', 'ponedjeljak', 'utorak', 'srijedu', 'četvrtak', 'petak', 'subotu'],\n    'weekdays_standalone' => ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],\n    'weekdays_short' => ['ned.', 'pon.', 'uto.', 'sri.', 'čet.', 'pet.', 'sub.'],\n    'weekdays_min' => ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' i '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/li.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/li_NL.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tcy.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/tcy_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mai.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mai_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_CO.php","ext":"php","size":422,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_US.php","ext":"php","size":327,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lb_LU.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/lb.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mag_IN.php","ext":"php","size":1481,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bhashaghar@googlegroups.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'months_short' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'weekdays' => ['एतवार', 'सोमार', 'मंगर', 'बुध', 'बिफे', 'सूक', 'सनिचर'],\n    'weekdays_short' => ['एतवार', 'सोमार', 'मंगर', 'बुध', 'बिफे', 'सूक', 'सनिचर'],\n    'weekdays_min' => ['एतवार', 'सोमार', 'मंगर', 'बुध', 'बिफे', 'सूक', 'सनिचर'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lv_LV.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/lv.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MF.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ve.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ve_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hif.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/hif_FJ.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CH.php","ext":"php","size":459,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Dieter Sting\n * - François B\n * - Gaspard Bucher\n * - Maxime VALY\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_TD.php","ext":"php","size":522,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_EH.php","ext":"php","size":297,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ga.php","ext":"php","size":2720,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Thanks to André Silva : https://github.com/askpt\n */\n\nreturn [\n    'year' => ':count bliain',\n    'a_year' => '{1}bliain|:count bliain',\n    'y' => ':countb',\n    'month' => ':count mí',\n    'a_month' => '{1}mí|:count mí',\n    'm' => ':countm',\n    'week' => ':count sheachtain',\n    'a_week' => '{1}sheachtain|:count sheachtain',\n    'w' => ':countsh',\n    'day' => ':count lá',\n    'a_day' => '{1}lá|:count lá',\n    'd' => ':countl',\n    'hour' => ':count uair an chloig',\n    'a_hour' => '{1}uair an chloig|:count uair an chloig',\n    'h' => ':countu',\n    'minute' => ':count nóiméad',\n    'a_minute' => '{1}nóiméad|:count nóiméad',\n    'min' => ':countn',\n    'second' => ':count soicind',\n    'a_second' => '{1}cúpla soicind|:count soicind',\n    's' => ':countso',\n    'ago' => ':time ó shin',\n    'from_now' => 'i :time',\n    'after' => ':time tar éis',\n    'before' => ':time roimh',\n    'diff_now' => 'anois',\n    'diff_today' => 'Inniu',\n    'diff_today_regexp' => 'Inniu(?:\\\\s+ag)?',\n    'diff_yesterday' => 'inné',\n    'diff_yesterday_regexp' => 'Inné(?:\\\\s+aig)?',\n    'diff_tomorrow' => 'amárach',\n    'diff_tomorrow_regexp' => 'Amárach(?:\\\\s+ag)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Inniu ag] LT',\n        'nextDay' => '[Amárach ag] LT',\n        'nextWeek' => 'dddd [ag] LT',\n        'lastDay' => '[Inné aig] LT',\n        'lastWeek' => 'dddd [seo caite] [ag] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'],\n    'months_short' => ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'],\n    'weekdays' => ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'],\n    'weekdays_short' => ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'],\n    'weekdays_min' => ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'],\n    'ordinal' => static fn ($number) => $number.($number === 1 ? 'd' : ($number % 10 === 2 ? 'na' : 'mh')),\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' agus '],\n    'meridiem' => ['r.n.', 'i.n.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/naq.php","ext":"php","size":2008,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['ǁgoagas', 'ǃuias'],\n    'weekdays' => ['Sontaxtsees', 'Mantaxtsees', 'Denstaxtsees', 'Wunstaxtsees', 'Dondertaxtsees', 'Fraitaxtsees', 'Satertaxtsees'],\n    'weekdays_short' => ['Son', 'Ma', 'De', 'Wu', 'Do', 'Fr', 'Sat'],\n    'weekdays_min' => ['Son', 'Ma', 'De', 'Wu', 'Do', 'Fr', 'Sat'],\n    'months' => ['ǃKhanni', 'ǃKhanǀgôab', 'ǀKhuuǁkhâb', 'ǃHôaǂkhaib', 'ǃKhaitsâb', 'Gamaǀaeb', 'ǂKhoesaob', 'Aoǁkhuumûǁkhâb', 'Taraǀkhuumûǁkhâb', 'ǂNûǁnâiseb', 'ǀHooǂgaeb', 'Hôasoreǁkhâb'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm a',\n    ],\n\n    'year' => ':count kurigu',\n    'y' => ':count kurigu',\n    'a_year' => ':count kurigu',\n\n    'month' => ':count ǁaub', // less reliable\n    'm' => ':count ǁaub', // less reliable\n    'a_month' => ':count ǁaub', // less reliable\n\n    'week' => ':count hû', // less reliable\n    'w' => ':count hû', // less reliable\n    'a_week' => ':count hû', // less reliable\n\n    'day' => ':count ǀhobas', // less reliable\n    'd' => ':count ǀhobas', // less reliable\n    'a_day' => ':count ǀhobas', // less reliable\n\n    'hour' => ':count ǂgaes', // less reliable\n    'h' => ':count ǂgaes', // less reliable\n    'a_hour' => ':count ǂgaes', // less reliable\n\n    'minute' => ':count minutga', // less reliable\n    'min' => ':count minutga', // less reliable\n    'a_minute' => ':count minutga', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sv_FI.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sv.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sd_IN@devanagari.php","ext":"php","size":1563,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat, Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/sd.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फबरवरी', 'मार्चि', 'अप्रेल', 'मे', 'जूनि', 'जूलाइ', 'आगस्टु', 'सेप्टेंबरू', 'आक्टूबरू', 'नवंबरू', 'ॾिसंबरू'],\n    'months_short' => ['जनवरी', 'फबरवरी', 'मार्चि', 'अप्रेल', 'मे', 'जूनि', 'जूलाइ', 'आगस्टु', 'सेप्टेंबरू', 'आक्टूबरू', 'नवंबरू', 'ॾिसंबरू'],\n    'weekdays' => ['आर्तवारू', 'सूमरू', 'मंगलू', 'ॿुधरू', 'विस्पति', 'जुमो', 'छंछस'],\n    'weekdays_short' => ['आर्तवारू', 'सूमरू', 'मंगलू', 'ॿुधरू', 'विस्पति', 'जुमो', 'छंछस'],\n    'weekdays_min' => ['आर्तवारू', 'सूमरू', 'मंगलू', 'ॿुधरू', 'विस्पति', 'जुमो', 'छंछस'],\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['म.पू.', 'म.नं.'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tet.php","ext":"php","size":2222,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Joshua Brooks\n * - François B\n */\nreturn [\n    'year' => 'tinan :count',\n    'a_year' => '{1}tinan ida|tinan :count',\n    'month' => 'fulan :count',\n    'a_month' => '{1}fulan ida|fulan :count',\n    'week' => 'semana :count',\n    'a_week' => '{1}semana ida|semana :count',\n    'day' => 'loron :count',\n    'a_day' => '{1}loron ida|loron :count',\n    'hour' => 'oras :count',\n    'a_hour' => '{1}oras ida|oras :count',\n    'minute' => 'minutu :count',\n    'a_minute' => '{1}minutu ida|minutu :count',\n    'second' => 'segundu :count',\n    'a_second' => '{1}segundu balun|segundu :count',\n    'ago' => ':time liuba',\n    'from_now' => 'iha :time',\n    'diff_yesterday' => 'Horiseik',\n    'diff_yesterday_regexp' => 'Horiseik(?:\\\\s+iha)?',\n    'diff_today' => 'Ohin',\n    'diff_today_regexp' => 'Ohin(?:\\\\s+iha)?',\n    'diff_tomorrow' => 'Aban',\n    'diff_tomorrow_regexp' => 'Aban(?:\\\\s+iha)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Ohin iha] LT',\n        'nextDay' => '[Aban iha] LT',\n        'nextWeek' => 'dddd [iha] LT',\n        'lastDay' => '[Horiseik iha] LT',\n        'lastWeek' => 'dddd [semana kotuk] [iha] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberº',\n    'months' => ['Janeiru', 'Fevereiru', 'Marsu', 'Abril', 'Maiu', 'Juñu', 'Jullu', 'Agustu', 'Setembru', 'Outubru', 'Novembru', 'Dezembru'],\n    'months_short' => ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n    'weekdays' => ['Domingu', 'Segunda', 'Tersa', 'Kuarta', 'Kinta', 'Sesta', 'Sabadu'],\n    'weekdays_short' => ['Dom', 'Seg', 'Ters', 'Kua', 'Kint', 'Sest', 'Sab'],\n    'weekdays_min' => ['Do', 'Seg', 'Te', 'Ku', 'Ki', 'Ses', 'Sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_GN.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/shs.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/shs_CA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt.php","ext":"php","size":3794,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Cassiano Montanari\n * - Matt Pope\n * - François B\n * - Prodis\n * - JD Isaacks\n * - Raphael Amorim\n * - João Magalhães\n * - victortobias\n * - Paulo Freitas\n * - Sebastian Thierer\n * - Claudson Martins (claudsonm)\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count ano|:count anos',\n    'a_year' => 'um ano|:count anos',\n    'y' => ':counta',\n    'month' => ':count mês|:count meses',\n    'a_month' => 'um mês|:count meses',\n    'm' => ':countm',\n    'week' => ':count semana|:count semanas',\n    'a_week' => 'uma semana|:count semanas',\n    'w' => ':countsem',\n    'day' => ':count dia|:count dias',\n    'a_day' => 'um dia|:count dias',\n    'd' => ':countd',\n    'hour' => ':count hora|:count horas',\n    'a_hour' => 'uma hora|:count horas',\n    'h' => ':counth',\n    'minute' => ':count minuto|:count minutos',\n    'a_minute' => 'um minuto|:count minutos',\n    'min' => ':countmin',\n    'second' => ':count segundo|:count segundos',\n    'a_second' => 'alguns segundos|:count segundos',\n    's' => ':counts',\n    'millisecond' => ':count milissegundo|:count milissegundos',\n    'a_millisecond' => 'um milissegundo|:count milissegundos',\n    'ms' => ':countms',\n    'microsecond' => ':count microssegundo|:count microssegundos',\n    'a_microsecond' => 'um microssegundo|:count microssegundos',\n    'µs' => ':countµs',\n    'ago' => 'há :time',\n    'from_now' => 'em :time',\n    'after' => ':time depois',\n    'before' => ':time antes',\n    'diff_now' => 'agora',\n    'diff_today' => 'Hoje',\n    'diff_today_regexp' => 'Hoje(?:\\\\s+às)?',\n    'diff_yesterday' => 'ontem',\n    'diff_yesterday_regexp' => 'Ontem(?:\\\\s+às)?',\n    'diff_tomorrow' => 'amanhã',\n    'diff_tomorrow_regexp' => 'Amanhã(?:\\\\s+às)?',\n    'diff_before_yesterday' => 'anteontem',\n    'diff_after_tomorrow' => 'depois de amanhã',\n    'period_recurrences' => 'uma vez|:count vezes',\n    'period_interval' => 'cada :interval',\n    'period_start_date' => 'de :date',\n    'period_end_date' => 'até :date',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D [de] MMMM [de] YYYY',\n        'LLL' => 'D [de] MMMM [de] YYYY HH:mm',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Hoje às] LT',\n        'nextDay' => '[Amanhã às] LT',\n        'nextWeek' => 'dddd [às] LT',\n        'lastDay' => '[Ontem às] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0, 6 => '[Último] dddd [às] LT',\n            default => '[Última] dddd [às] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberº',\n    'months' => ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro'],\n    'months_short' => ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez'],\n    'weekdays' => ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado'],\n    'weekdays_short' => ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'],\n    'weekdays_min' => ['Do', '2ª', '3ª', '4ª', '5ª', '6ª', 'Sá'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' e '],\n    'ordinal_words' => [\n        'of' => 'de',\n        'first' => 'primeira',\n        'second' => 'segunda',\n        'third' => 'terceira',\n        'fourth' => 'quarta',\n        'fifth' => 'quinta',\n        'last' => 'última',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/niu_NU.php","ext":"php","size":1679,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RockET Systems Emani Fakaotimanava-Lui emani@niue.nu\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Ianuali', 'Fepuali', 'Masi', 'Apelila', 'Me', 'Iuni', 'Iulai', 'Aokuso', 'Sepetema', 'Oketopa', 'Novema', 'Tesemo'],\n    'months_short' => ['Ian', 'Fep', 'Mas', 'Ape', 'Me', 'Iun', 'Iul', 'Aok', 'Sep', 'Oke', 'Nov', 'Tes'],\n    'weekdays' => ['Aho Tapu', 'Aho Gofua', 'Aho Ua', 'Aho Lotu', 'Aho Tuloto', 'Aho Falaile', 'Aho Faiumu'],\n    'weekdays_short' => ['Tapu', 'Gofua', 'Ua', 'Lotu', 'Tuloto', 'Falaile', 'Faiumu'],\n    'weekdays_min' => ['Tapu', 'Gofua', 'Ua', 'Lotu', 'Tuloto', 'Falaile', 'Faiumu'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count tau',\n    'y' => ':count tau',\n    'a_year' => ':count tau',\n\n    'month' => ':count mahina',\n    'm' => ':count mahina',\n    'a_month' => ':count mahina',\n\n    'week' => ':count faahi tapu',\n    'w' => ':count faahi tapu',\n    'a_week' => ':count faahi tapu',\n\n    'day' => ':count aho',\n    'd' => ':count aho',\n    'a_day' => ':count aho',\n\n    'hour' => ':count e tulā',\n    'h' => ':count e tulā',\n    'a_hour' => ':count e tulā',\n\n    'minute' => ':count minuti',\n    'min' => ':count minuti',\n    'a_minute' => ':count minuti',\n\n    'second' => ':count sekone',\n    's' => ':count sekone',\n    'a_second' => ':count sekone',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_IN.php","ext":"php","size":629,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory  bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YY',\n        'LL' => 'MMMM DD, YYYY',\n        'LLL' => 'DD MMM HH:mm',\n        'LLLL' => 'MMMM DD, YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_AO.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ber_MA.php","ext":"php","size":1023,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['yanvar', 'fevral', 'mart', 'aprel', 'may', 'iyun', 'iyul', 'avqust', 'sentyabr', 'oktyabr', 'noyabr', 'dekabr'],\n    'months_short' => ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'İyn', 'İyl', 'Avq', 'Sen', 'Okt', 'Noy', 'Dek'],\n    'weekdays' => ['bazar günü', 'birinci gün', 'ikinci gün', 'üçüncü gün', 'dördüncü gün', 'beşinci gün', 'altıncı gün'],\n    'weekdays_short' => ['baz', 'bir', 'iki', 'üçü', 'dör', 'beş', 'alt'],\n    'weekdays_min' => ['baz', 'bir', 'iki', 'üçü', 'dör', 'beş', 'alt'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_AS.php","ext":"php","size":327,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_NR.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/qu_BO.php","ext":"php","size":327,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/qu.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/aa_ER.php","ext":"php","size":1060,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Qunxa Garablu', 'Naharsi Kudo', 'Ciggilta Kudo', 'Agda Baxisso', 'Caxah Alsa', 'Qasa Dirri', 'Qado Dirri', 'Leqeeni', 'Waysu', 'Diteli', 'Ximoli', 'Kaxxa Garablu'],\n    'months_short' => ['Qun', 'Nah', 'Cig', 'Agd', 'Cax', 'Qas', 'Qad', 'Leq', 'Way', 'Dit', 'Xim', 'Kax'],\n    'weekdays' => ['Acaada', 'Etleeni', 'Talaata', 'Arbaqa', 'Kamiisi', 'Gumqata', 'Sabti'],\n    'weekdays_short' => ['Aca', 'Etl', 'Tal', 'Arb', 'Kam', 'Gum', 'Sab'],\n    'weekdays_min' => ['Aca', 'Etl', 'Tal', 'Arb', 'Kam', 'Gum', 'Sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['saaku', 'carra'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ii.php","ext":"php","size":1937,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['ꎸꄑ', 'ꁯꋒ'],\n    'weekdays' => ['ꑭꆏꑍ', 'ꆏꊂꋍ', 'ꆏꊂꑍ', 'ꆏꊂꌕ', 'ꆏꊂꇖ', 'ꆏꊂꉬ', 'ꆏꊂꃘ'],\n    'weekdays_short' => ['ꑭꆏ', 'ꆏꋍ', 'ꆏꑍ', 'ꆏꌕ', 'ꆏꇖ', 'ꆏꉬ', 'ꆏꃘ'],\n    'weekdays_min' => ['ꑭꆏ', 'ꆏꋍ', 'ꆏꑍ', 'ꆏꌕ', 'ꆏꇖ', 'ꆏꉬ', 'ꆏꃘ'],\n    'months' => null,\n    'months_short' => ['ꋍꆪ', 'ꑍꆪ', 'ꌕꆪ', 'ꇖꆪ', 'ꉬꆪ', 'ꃘꆪ', 'ꏃꆪ', 'ꉆꆪ', 'ꈬꆪ', 'ꊰꆪ', 'ꊰꊪꆪ', 'ꊰꑋꆪ'],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D h:mm a',\n        'LLLL' => 'YYYY MMMM D, dddd h:mm a',\n    ],\n\n    'year' => ':count ꒉ', // less reliable\n    'y' => ':count ꒉ', // less reliable\n    'a_year' => ':count ꒉ', // less reliable\n\n    'month' => ':count ꆪ',\n    'm' => ':count ꆪ',\n    'a_month' => ':count ꆪ',\n\n    'week' => ':count ꏃ', // less reliable\n    'w' => ':count ꏃ', // less reliable\n    'a_week' => ':count ꏃ', // less reliable\n\n    'day' => ':count ꏜ', // less reliable\n    'd' => ':count ꏜ', // less reliable\n    'a_day' => ':count ꏜ', // less reliable\n\n    'hour' => ':count ꄮꈉ',\n    'h' => ':count ꄮꈉ',\n    'a_hour' => ':count ꄮꈉ',\n\n    'minute' => ':count ꀄꊭ', // less reliable\n    'min' => ':count ꀄꊭ', // less reliable\n    'a_minute' => ':count ꀄꊭ', // less reliable\n\n    'second' => ':count ꇅ', // less reliable\n    's' => ':count ꇅ', // less reliable\n    'a_second' => ':count ꇅ', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ms_BN.php","ext":"php","size":547,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ms.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/MM/yy',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, h:mm a',\n        'LLLL' => 'dd MMMM YYYY, h:mm a',\n    ],\n    'meridiem' => ['a', 'p'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/brx_IN.php","ext":"php","size":1584,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'M/D/YY',\n    ],\n    'months' => ['जानुवारी', 'फेब्रुवारी', 'मार्स', 'एफ्रिल', 'मे', 'जुन', 'जुलाइ', 'आगस्थ', 'सेबथेज्ब़र', 'अखथबर', 'नबेज्ब़र', 'दिसेज्ब़र'],\n    'months_short' => ['जानुवारी', 'फेब्रुवारी', 'मार्स', 'एप्रिल', 'मे', 'जुन', 'जुलाइ', 'आगस्थ', 'सेबथेज्ब़र', 'अखथबर', 'नबेज्ब़र', 'दिसेज्ब़र'],\n    'weekdays' => ['रबिबार', 'सोबार', 'मंगलबार', 'बुदबार', 'बिसथिबार', 'सुखुरबार', 'सुनिबार'],\n    'weekdays_short' => ['रबि', 'सम', 'मंगल', 'बुद', 'बिसथि', 'सुखुर', 'सुनि'],\n    'weekdays_min' => ['रबि', 'सम', 'मंगल', 'बुद', 'बिसथि', 'सुखुर', 'सुनि'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['फुं.', 'बेलासे.'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zu.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/zu_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/my_MM.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/my.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_AE.php","ext":"php","size":1997,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت '],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wa_BE.php","ext":"php","size":1688,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Djan SACRE Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['di djanvî', 'di fevrî', 'di måss', 'd’ avri', 'di may', 'di djun', 'di djulete', 'd’ awousse', 'di setimbe', 'd’ octôbe', 'di nôvimbe', 'di decimbe'],\n    'months_short' => ['dja', 'fev', 'mås', 'avr', 'may', 'djn', 'djl', 'awo', 'set', 'oct', 'nôv', 'dec'],\n    'weekdays' => ['dimegne', 'londi', 'mårdi', 'mierkidi', 'djudi', 'vénrdi', 'semdi'],\n    'weekdays_short' => ['dim', 'lon', 'mår', 'mie', 'dju', 'vén', 'sem'],\n    'weekdays_min' => ['dim', 'lon', 'mår', 'mie', 'dju', 'vén', 'sem'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count anêye',\n    'y' => ':count anêye',\n    'a_year' => ':count anêye',\n\n    'month' => ':count meûs',\n    'm' => ':count meûs',\n    'a_month' => ':count meûs',\n\n    'week' => ':count samwinne',\n    'w' => ':count samwinne',\n    'a_week' => ':count samwinne',\n\n    'day' => ':count djoû',\n    'd' => ':count djoû',\n    'a_day' => ':count djoû',\n\n    'hour' => ':count eure',\n    'h' => ':count eure',\n    'a_hour' => ':count eure',\n\n    'minute' => ':count munute',\n    'min' => ':count munute',\n    'a_minute' => ':count munute',\n\n    'second' => ':count Sigonde',\n    's' => ':count Sigonde',\n    'a_second' => ':count Sigonde',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/vo.php","ext":"php","size":1372,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'months' => ['M01', 'M02', 'M03', 'M04', 'M05', 'M06', 'M07', 'M08', 'M09', 'M10', 'M11', 'M12'],\n    'months_short' => ['M01', 'M02', 'M03', 'M04', 'M05', 'M06', 'M07', 'M08', 'M09', 'M10', 'M11', 'M12'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'YYYY MMMM D, dddd HH:mm',\n    ],\n\n    'year' => ':count yel',\n    'y' => ':count yel',\n    'a_year' => ':count yel',\n\n    'month' => ':count mul',\n    'm' => ':count mul',\n    'a_month' => ':count mul',\n\n    'week' => ':count vig',\n    'w' => ':count vig',\n    'a_week' => ':count vig',\n\n    'day' => ':count del',\n    'd' => ':count del',\n    'a_day' => ':count del',\n\n    'hour' => ':count düp',\n    'h' => ':count düp',\n    'a_hour' => ':count düp',\n\n    'minute' => ':count minut',\n    'min' => ':count minut',\n    'a_minute' => ':count minut',\n\n    'second' => ':count sekun',\n    's' => ':count sekun',\n    'a_second' => ':count sekun',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/unm_US.php","ext":"php","size":1977,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['enikwsi', 'chkwali', 'xamokhwite', 'kwetayoxe', 'tainipen', 'kichinipen', 'lainipen', 'winaminke', 'kichitahkok', 'puksit', 'wini', 'muxkotae'],\n    'months_short' => ['eni', 'chk', 'xam', 'kwe', 'tai', 'nip', 'lai', 'win', 'tah', 'puk', 'kun', 'mux'],\n    'weekdays' => ['kentuwei', 'manteke', 'tusteke', 'lelai', 'tasteke', 'pelaiteke', 'sateteke'],\n    'weekdays_short' => ['ken', 'man', 'tus', 'lel', 'tas', 'pel', 'sat'],\n    'weekdays_min' => ['ken', 'man', 'tus', 'lel', 'tas', 'pel', 'sat'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    // Too unreliable\n    /*\n    'year' => ':count kaxtëne',\n    'y' => ':count kaxtëne',\n    'a_year' => ':count kaxtëne',\n\n    'month' => ':count piskewëni kishux', // less reliable\n    'm' => ':count piskewëni kishux', // less reliable\n    'a_month' => ':count piskewëni kishux', // less reliable\n\n    'week' => ':count kishku', // less reliable\n    'w' => ':count kishku', // less reliable\n    'a_week' => ':count kishku', // less reliable\n\n    'day' => ':count kishku',\n    'd' => ':count kishku',\n    'a_day' => ':count kishku',\n\n    'hour' => ':count xkuk', // less reliable\n    'h' => ':count xkuk', // less reliable\n    'a_hour' => ':count xkuk', // less reliable\n\n    'minute' => ':count txituwàk', // less reliable\n    'min' => ':count txituwàk', // less reliable\n    'a_minute' => ':count txituwàk', // less reliable\n\n    'second' => ':count nisha', // less reliable\n    's' => ':count nisha', // less reliable\n    'a_second' => ':count nisha', // less reliable\n    */\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gez_ER.php","ext":"php","size":2176,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጠሐረ', 'ከተተ', 'መገበ', 'አኀዘ', 'ግንባት', 'ሠንየ', 'ሐመለ', 'ነሐሰ', 'ከረመ', 'ጠቀመ', 'ኀደረ', 'ኀሠሠ'],\n    'months_short' => ['ጠሐረ', 'ከተተ', 'መገበ', 'አኀዘ', 'ግንባ', 'ሠንየ', 'ሐመለ', 'ነሐሰ', 'ከረመ', 'ጠቀመ', 'ኀደረ', 'ኀሠሠ'],\n    'weekdays' => ['እኁድ', 'ሰኑይ', 'ሠሉስ', 'ራብዕ', 'ሐሙስ', 'ዓርበ', 'ቀዳሚት'],\n    'weekdays_short' => ['እኁድ', 'ሰኑይ', 'ሠሉስ', 'ራብዕ', 'ሐሙስ', 'ዓርበ', 'ቀዳሚ'],\n    'weekdays_min' => ['እኁድ', 'ሰኑይ', 'ሠሉስ', 'ራብዕ', 'ሐሙስ', 'ዓርበ', 'ቀዳሚ'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ጽባሕ', 'ምሴት'],\n\n    'month' => ':count ወርሕ', // less reliable\n    'm' => ':count ወርሕ', // less reliable\n    'a_month' => ':count ወርሕ', // less reliable\n\n    'week' => ':count ሰብዑ', // less reliable\n    'w' => ':count ሰብዑ', // less reliable\n    'a_week' => ':count ሰብዑ', // less reliable\n\n    'hour' => ':count አንትሙ', // less reliable\n    'h' => ':count አንትሙ', // less reliable\n    'a_hour' => ':count አንትሙ', // less reliable\n\n    'minute' => ':count ንኡስ', // less reliable\n    'min' => ':count ንኡስ', // less reliable\n    'a_minute' => ':count ንኡስ', // less reliable\n\n    'year' => ':count ዓመት',\n    'y' => ':count ዓመት',\n    'a_year' => ':count ዓመት',\n\n    'day' => ':count ዕለት',\n    'd' => ':count ዕለት',\n    'a_day' => ':count ዕለት',\n\n    'second' => ':count ካልእ',\n    's' => ':count ካልእ',\n    'a_second' => ':count ካልእ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ms_SG.php","ext":"php","size":552,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ms.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/MM/yy',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, h:mm a',\n        'LLLL' => 'dddd, D MMMM YYYY, h:mm a',\n    ],\n    'meridiem' => ['a', 'p'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es.php","ext":"php","size":4400,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - kostas\n * - François B\n * - Tim Fish\n * - Claire Coloma\n * - Steven Heinrich\n * - JD Isaacks\n * - Raphael Amorim\n * - Jorge Y. Castillo\n * - Víctor Díaz\n * - Diego\n * - Sebastian Thierer\n * - quinterocesar\n * - Daniel Commesse Liévanos (danielcommesse)\n * - Pete Scopes (pdscopes)\n * - gam04\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count año|:count años',\n    'a_year' => 'un año|:count años',\n    'y' => ':count año|:count años',\n    'month' => ':count mes|:count meses',\n    'a_month' => 'un mes|:count meses',\n    'm' => ':count mes|:count meses',\n    'week' => ':count semana|:count semanas',\n    'a_week' => 'una semana|:count semanas',\n    'w' => ':countsem',\n    'day' => ':count día|:count días',\n    'a_day' => 'un día|:count días',\n    'd' => ':countd',\n    'hour' => ':count hora|:count horas',\n    'a_hour' => 'una hora|:count horas',\n    'h' => ':counth',\n    'minute' => ':count minuto|:count minutos',\n    'a_minute' => 'un minuto|:count minutos',\n    'min' => ':countm',\n    'second' => ':count segundo|:count segundos',\n    'a_second' => 'unos segundos|:count segundos',\n    's' => ':counts',\n    'millisecond' => ':count milisegundo|:count milisegundos',\n    'a_millisecond' => 'un milisegundo|:count milisegundos',\n    'ms' => ':countms',\n    'microsecond' => ':count microsegundo|:count microsegundos',\n    'a_microsecond' => 'un microsegundo|:count microsegundos',\n    'µs' => ':countµs',\n    'ago' => 'hace :time',\n    'from_now' => 'en :time',\n    'after' => ':time después',\n    'before' => ':time antes',\n    'diff_now' => 'ahora mismo',\n    'diff_today' => 'hoy',\n    'diff_today_regexp' => 'hoy(?:\\\\s+a)?(?:\\\\s+las)?',\n    'diff_yesterday' => 'ayer',\n    'diff_yesterday_regexp' => 'ayer(?:\\\\s+a)?(?:\\\\s+las)?',\n    'diff_tomorrow' => 'mañana',\n    'diff_tomorrow_regexp' => 'mañana(?:\\\\s+a)?(?:\\\\s+las)?',\n    'diff_before_yesterday' => 'anteayer',\n    'diff_after_tomorrow' => 'pasado mañana',\n    'period_recurrences' => 'una vez|:count veces',\n    'period_interval' => 'cada :interval',\n    'period_start_date' => 'de :date',\n    'period_end_date' => 'a :date',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D [de] MMMM [de] YYYY',\n        'LLL' => 'D [de] MMMM [de] YYYY H:mm',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => static function (CarbonInterface $current) {\n            return '[hoy a la'.($current->hour !== 1 ? 's' : '').'] LT';\n        },\n        'nextDay' => static function (CarbonInterface $current) {\n            return '[mañana a la'.($current->hour !== 1 ? 's' : '').'] LT';\n        },\n        'nextWeek' => static function (CarbonInterface $current) {\n            return 'dddd [a la'.($current->hour !== 1 ? 's' : '').'] LT';\n        },\n        'lastDay' => static function (CarbonInterface $current) {\n            return '[ayer a la'.($current->hour !== 1 ? 's' : '').'] LT';\n        },\n        'lastWeek' => static function (CarbonInterface $current) {\n            return '[el] dddd [pasado a la'.($current->hour !== 1 ? 's' : '').'] LT';\n        },\n        'sameElse' => 'L',\n    ],\n    'months' => ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\n    'months_short' => ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\n    'mmm_suffix' => '.',\n    'ordinal' => ':numberº',\n    'weekdays' => ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\n    'weekdays_short' => ['dom.', 'lun.', 'mar.', 'mié.', 'jue.', 'vie.', 'sáb.'],\n    'weekdays_min' => ['do', 'lu', 'ma', 'mi', 'ju', 'vi', 'sá'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' y '],\n    'meridiem' => ['a. m.', 'p. m.'],\n    'ordinal_words' => [\n        'of' => 'de',\n        'first' => 'primer',\n        'second' => 'segundo',\n        'third' => 'tercer',\n        'fourth' => 'cuarto',\n        'fifth' => 'quinto',\n        'last' => 'último',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lag.php","ext":"php","size":1208,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['TOO', 'MUU'],\n    'weekdays' => ['Jumapíiri', 'Jumatátu', 'Jumaíne', 'Jumatáano', 'Alamíisi', 'Ijumáa', 'Jumamóosi'],\n    'weekdays_short' => ['Píili', 'Táatu', 'Íne', 'Táano', 'Alh', 'Ijm', 'Móosi'],\n    'weekdays_min' => ['Píili', 'Táatu', 'Íne', 'Táano', 'Alh', 'Ijm', 'Móosi'],\n    'months' => ['Kʉfúngatɨ', 'Kʉnaanɨ', 'Kʉkeenda', 'Kwiikumi', 'Kwiinyambála', 'Kwiidwaata', 'Kʉmʉʉnchɨ', 'Kʉvɨɨrɨ', 'Kʉsaatʉ', 'Kwiinyi', 'Kʉsaano', 'Kʉsasatʉ'],\n    'months_short' => ['Fúngatɨ', 'Naanɨ', 'Keenda', 'Ikúmi', 'Inyambala', 'Idwaata', 'Mʉʉnchɨ', 'Vɨɨrɨ', 'Saatʉ', 'Inyi', 'Saano', 'Sasatʉ'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/it.php","ext":"php","size":3830,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ash\n * - François B\n * - Marco Perrando\n * - Massimiliano Caniparoli\n * - JD Isaacks\n * - Andrea Martini\n * - Francesco Marasco\n * - Tizianoz93\n * - Davide Casiraghi (davide-casiraghi)\n * - Pete Scopes (pdscopes)\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count anno|:count anni',\n    'a_year' => 'un anno|:count anni',\n    'y' => ':count anno|:count anni',\n    'month' => ':count mese|:count mesi',\n    'a_month' => 'un mese|:count mesi',\n    'm' => ':count mese|:count mesi',\n    'week' => ':count settimana|:count settimane',\n    'a_week' => 'una settimana|:count settimane',\n    'w' => ':count set.',\n    'day' => ':count giorno|:count giorni',\n    'a_day' => 'un giorno|:count giorni',\n    'd' => ':count g|:count gg',\n    'hour' => ':count ora|:count ore',\n    'a_hour' => 'un\\'ora|:count ore',\n    'h' => ':count h',\n    'minute' => ':count minuto|:count minuti',\n    'a_minute' => 'un minuto|:count minuti',\n    'min' => ':count min.',\n    'second' => ':count secondo|:count secondi',\n    'a_second' => 'alcuni secondi|:count secondi',\n    's' => ':count sec.',\n    'millisecond' => ':count millisecondo|:count millisecondi',\n    'a_millisecond' => 'un millisecondo|:count millisecondi',\n    'ms' => ':countms',\n    'microsecond' => ':count microsecondo|:count microsecondi',\n    'a_microsecond' => 'un microsecondo|:count microsecondi',\n    'µs' => ':countµs',\n    'ago' => ':time fa',\n    'from_now' => static function ($time) {\n        return (preg_match('/^\\d.+$/', $time) ? 'tra' : 'in').\" $time\";\n    },\n    'after' => ':time dopo',\n    'before' => ':time prima',\n    'diff_now' => 'proprio ora',\n    'diff_today' => 'Oggi',\n    'diff_today_regexp' => 'Oggi(?:\\\\s+alle)?',\n    'diff_yesterday' => 'ieri',\n    'diff_yesterday_regexp' => 'Ieri(?:\\\\s+alle)?',\n    'diff_tomorrow' => 'domani',\n    'diff_tomorrow_regexp' => 'Domani(?:\\\\s+alle)?',\n    'diff_before_yesterday' => 'l\\'altro ieri',\n    'diff_after_tomorrow' => 'dopodomani',\n    'period_interval' => 'ogni :interval',\n    'period_start_date' => 'dal :date',\n    'period_end_date' => 'al :date',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Oggi alle] LT',\n        'nextDay' => '[Domani alle] LT',\n        'nextWeek' => 'dddd [alle] LT',\n        'lastDay' => '[Ieri alle] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[la scorsa] dddd [alle] LT',\n            default => '[lo scorso] dddd [alle] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberº',\n    'months' => ['gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre'],\n    'months_short' => ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],\n    'weekdays' => ['domenica', 'lunedì', 'martedì', 'mercoledì', 'giovedì', 'venerdì', 'sabato'],\n    'weekdays_short' => ['dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab'],\n    'weekdays_min' => ['do', 'lu', 'ma', 'me', 'gi', 've', 'sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' e '],\n    'ordinal_words' => [\n        'of' => 'di',\n        'first' => 'primo',\n        'second' => 'secondo',\n        'third' => 'terzo',\n        'fourth' => 'quarto',\n        'fifth' => 'quinto',\n        'last' => 'ultimo',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fa.php","ext":"php","size":4093,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - Nasser Ghiasi\n * - JD Isaacks\n * - Hossein Jabbari\n * - nimamo\n * - hafezdivandari\n * - Hassan Pezeshk (hpez)\n */\nreturn [\n    'year' => ':count سال',\n    'a_year' => 'یک سال'.'|:count '.'سال',\n    'y' => ':count سال',\n    'month' => ':count ماه',\n    'a_month' => 'یک ماه'.'|:count '.'ماه',\n    'm' => ':count ماه',\n    'week' => ':count هفته',\n    'a_week' => 'یک هفته'.'|:count '.'هفته',\n    'w' => ':count هفته',\n    'day' => ':count روز',\n    'a_day' => 'یک روز'.'|:count '.'روز',\n    'd' => ':count روز',\n    'hour' => ':count ساعت',\n    'a_hour' => 'یک ساعت'.'|:count '.'ساعت',\n    'h' => ':count ساعت',\n    'minute' => ':count دقیقه',\n    'a_minute' => 'یک دقیقه'.'|:count '.'دقیقه',\n    'min' => ':count دقیقه',\n    'second' => ':count ثانیه',\n    's' => ':count ثانیه',\n    'ago' => ':time پیش',\n    'from_now' => ':time دیگر',\n    'after' => ':time پس از',\n    'before' => ':time پیش از',\n    'diff_now' => 'اکنون',\n    'diff_today' => 'امروز',\n    'diff_today_regexp' => 'امروز(?:\\\\s+ساعت)?',\n    'diff_yesterday' => 'دیروز',\n    'diff_yesterday_regexp' => 'دیروز(?:\\\\s+ساعت)?',\n    'diff_tomorrow' => 'فردا',\n    'diff_tomorrow_regexp' => 'فردا(?:\\\\s+ساعت)?',\n    'formats' => [\n        'LT' => 'OH:Om',\n        'LTS' => 'OH:Om:Os',\n        'L' => 'OD/OM/OY',\n        'LL' => 'OD MMMM OY',\n        'LLL' => 'OD MMMM OY OH:Om',\n        'LLLL' => 'dddd, OD MMMM OY OH:Om',\n    ],\n    'calendar' => [\n        'sameDay' => '[امروز ساعت] LT',\n        'nextDay' => '[فردا ساعت] LT',\n        'nextWeek' => 'dddd [ساعت] LT',\n        'lastDay' => '[دیروز ساعت] LT',\n        'lastWeek' => 'dddd [پیش] [ساعت] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':timeم',\n    'meridiem' => ['قبل از ظهر', 'بعد از ظهر'],\n    'months' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر'],\n    'months_short' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر'],\n    'weekdays' => ['یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه'],\n    'weekdays_short' => ['یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه'],\n    'weekdays_min' => ['ی', 'د', 'س', 'چ', 'پ', 'ج', 'ش'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'list' => ['، ', ' و '],\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰۴', '۰۵', '۰۶', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱۴', '۱۵', '۱۶', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲۴', '۲۵', '۲۶', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳۴', '۳۵', '۳۶', '۳۷', '۳۸', '۳۹', '۴۰', '۴۱', '۴۲', '۴۳', '۴۴', '۴۵', '۴۶', '۴۷', '۴۸', '۴۹', '۵۰', '۵۱', '۵۲', '۵۳', '۵۴', '۵۵', '۵۶', '۵۷', '۵۸', '۵۹', '۶۰', '۶۱', '۶۲', '۶۳', '۶۴', '۶۵', '۶۶', '۶۷', '۶۸', '۶۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷۴', '۷۵', '۷۶', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸۴', '۸۵', '۸۶', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹۴', '۹۵', '۹۶', '۹۷', '۹۸', '۹۹'],\n    'months_short_standalone' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر'],\n    'weekend' => [5, 5],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ug.php","ext":"php","size":3273,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - yasinn\n */\nreturn [\n    'year' => '{1}'.'بىر يىل'.'|:count '.'يىل',\n    'month' => '{1}'.'بىر ئاي'.'|:count '.'ئاي',\n    'week' => '{1}'.'بىر ھەپتە'.'|:count '.'ھەپتە',\n    'day' => '{1}'.'بىر كۈن'.'|:count '.'كۈن',\n    'hour' => '{1}'.'بىر سائەت'.'|:count '.'سائەت',\n    'minute' => '{1}'.'بىر مىنۇت'.'|:count '.'مىنۇت',\n    'second' => '{1}'.'نەچچە سېكونت'.'|:count '.'سېكونت',\n    'ago' => ':time بۇرۇن',\n    'from_now' => ':time كېيىن',\n    'diff_today' => 'بۈگۈن',\n    'diff_yesterday' => 'تۆنۈگۈن',\n    'diff_tomorrow' => 'ئەتە',\n    'diff_tomorrow_regexp' => 'ئەتە(?:\\\\s+سائەت)?',\n    'diff_today_regexp' => 'بۈگۈن(?:\\\\s+سائەت)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n        'LLL' => 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n        'LLLL' => 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[بۈگۈن سائەت] LT',\n        'nextDay' => '[ئەتە سائەت] LT',\n        'nextWeek' => '[كېلەركى] dddd [سائەت] LT',\n        'lastDay' => '[تۆنۈگۈن] LT',\n        'lastWeek' => '[ئالدىنقى] dddd [سائەت] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'd', 'D', 'DDD' => $number.'-كۈنى',\n            'w', 'W' => $number.'-ھەپتە',\n            default => $number,\n        };\n    },\n    'meridiem' => static function ($hour, $minute) {\n        $time = $hour * 100 + $minute;\n        if ($time < 600) {\n            return 'يېرىم كېچە';\n        }\n        if ($time < 900) {\n            return 'سەھەر';\n        }\n        if ($time < 1130) {\n            return 'چۈشتىن بۇرۇن';\n        }\n        if ($time < 1230) {\n            return 'چۈش';\n        }\n        if ($time < 1800) {\n            return 'چۈشتىن كېيىن';\n        }\n\n        return 'كەچ';\n    },\n    'months' => ['يانۋار', 'فېۋرال', 'مارت', 'ئاپرېل', 'ماي', 'ئىيۇن', 'ئىيۇل', 'ئاۋغۇست', 'سېنتەبىر', 'ئۆكتەبىر', 'نويابىر', 'دېكابىر'],\n    'months_short' => ['يانۋار', 'فېۋرال', 'مارت', 'ئاپرېل', 'ماي', 'ئىيۇن', 'ئىيۇل', 'ئاۋغۇست', 'سېنتەبىر', 'ئۆكتەبىر', 'نويابىر', 'دېكابىر'],\n    'weekdays' => ['يەكشەنبە', 'دۈشەنبە', 'سەيشەنبە', 'چارشەنبە', 'پەيشەنبە', 'جۈمە', 'شەنبە'],\n    'weekdays_short' => ['يە', 'دۈ', 'سە', 'چا', 'پە', 'جۈ', 'شە'],\n    'weekdays_min' => ['يە', 'دۈ', 'سە', 'چا', 'پە', 'جۈ', 'شە'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' ۋە '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_FM.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/brx.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/brx_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SH.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_GW.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_CC.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/it_IT.php","ext":"php","size":324,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn require __DIR__.'/it.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_TL.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_MO.php","ext":"php","size":516,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/pt.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'LLL' => 'D [de] MMMM [de] YYYY, h:mm a',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY, h:mm a',\n    ],\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sg.php","ext":"php","size":2011,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['ND', 'LK'],\n    'weekdays' => ['Bikua-ôko', 'Bïkua-ûse', 'Bïkua-ptâ', 'Bïkua-usïö', 'Bïkua-okü', 'Lâpôsö', 'Lâyenga'],\n    'weekdays_short' => ['Bk1', 'Bk2', 'Bk3', 'Bk4', 'Bk5', 'Lâp', 'Lây'],\n    'weekdays_min' => ['Bk1', 'Bk2', 'Bk3', 'Bk4', 'Bk5', 'Lâp', 'Lây'],\n    'months' => ['Nyenye', 'Fulundïgi', 'Mbängü', 'Ngubùe', 'Bêläwü', 'Föndo', 'Lengua', 'Kükürü', 'Mvuka', 'Ngberere', 'Nabändüru', 'Kakauka'],\n    'months_short' => ['Nye', 'Ful', 'Mbä', 'Ngu', 'Bêl', 'Fön', 'Len', 'Kük', 'Mvu', 'Ngb', 'Nab', 'Kak'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count dā', // less reliable\n    'y' => ':count dā', // less reliable\n    'a_year' => ':count dā', // less reliable\n\n    'week' => ':count bïkua-okü', // less reliable\n    'w' => ':count bïkua-okü', // less reliable\n    'a_week' => ':count bïkua-okü', // less reliable\n\n    'day' => ':count ziggawâ', // less reliable\n    'd' => ':count ziggawâ', // less reliable\n    'a_day' => ':count ziggawâ', // less reliable\n\n    'hour' => ':count yângâködörö', // less reliable\n    'h' => ':count yângâködörö', // less reliable\n    'a_hour' => ':count yângâködörö', // less reliable\n\n    'second' => ':count bïkua-ôko', // less reliable\n    's' => ':count bïkua-ôko', // less reliable\n    'a_second' => ':count bïkua-ôko', // less reliable\n\n    'month' => ':count Nze tî ngu',\n    'm' => ':count Nze tî ngu',\n    'a_month' => ':count Nze tî ngu',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nb_NO.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/nb.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_BH.php","ext":"php","size":1996,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ja_JP.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ja.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kn.php","ext":"php","size":3769,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - MOHAN M U\n * - François B\n * - rajeevnaikte\n */\nreturn [\n    'year' => '{1}:count ವರ್ಷ|[-Inf,Inf]:count ವರ್ಷಗಳು',\n    'a_year' => '{1}ಒಂದು ವರ್ಷ|[-Inf,Inf]:count ವರ್ಷಗಳು',\n    'month' => ':count ತಿಂಗಳು',\n    'a_month' => '{1}ಒಂದು ತಿಂಗಳು|[-Inf,Inf]:count ತಿಂಗಳು',\n    'week' => '{1}:count ವಾರ|[-Inf,Inf]:count ವಾರಗಳು',\n    'a_week' => '{1}ಒಂದು ವಾರ|[-Inf,Inf]:count ವಾರಗಳು',\n    'day' => '{1}:count ದಿನ|[-Inf,Inf]:count ದಿನಗಳು',\n    'a_day' => '{1}ಒಂದು ದಿನ|[-Inf,Inf]:count ದಿನಗಳು',\n    'hour' => '{1}:count ಗಂಟೆ|[-Inf,Inf]:count ಗಂಟೆಗಳು',\n    'a_hour' => '{1}ಒಂದು ಗಂಟೆ|[-Inf,Inf]:count ಗಂಟೆಗಳು',\n    'minute' => '{1}:count ನಿಮಿಷ|[-Inf,Inf]:count ನಿಮಿಷಗಳು',\n    'a_minute' => '{1}ಒಂದು ನಿಮಿಷ|[-Inf,Inf]:count ನಿಮಿಷಗಳು',\n    'second' => '{0,1}:count ಸೆಕೆಂಡ್|[-Inf,Inf]:count ಸೆಕೆಂಡುಗಳು',\n    'a_second' => '{0,1}ಕೆಲವು ಕ್ಷಣಗಳು|[-Inf,Inf]:count ಸೆಕೆಂಡುಗಳು',\n    'ago' => ':time ಹಿಂದೆ',\n    'from_now' => ':time ನಂತರ',\n    'diff_now' => 'ಈಗ',\n    'diff_today' => 'ಇಂದು',\n    'diff_yesterday' => 'ನಿನ್ನೆ',\n    'diff_tomorrow' => 'ನಾಳೆ',\n    'formats' => [\n        'LT' => 'A h:mm',\n        'LTS' => 'A h:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ಇಂದು] LT',\n        'nextDay' => '[ನಾಳೆ] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[ನಿನ್ನೆ] LT',\n        'lastWeek' => '[ಕೊನೆಯ] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberನೇ',\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'ರಾತ್ರಿ';\n        }\n        if ($hour < 10) {\n            return 'ಬೆಳಿಗ್ಗೆ';\n        }\n        if ($hour < 17) {\n            return 'ಮಧ್ಯಾಹ್ನ';\n        }\n        if ($hour < 20) {\n            return 'ಸಂಜೆ';\n        }\n\n        return 'ರಾತ್ರಿ';\n    },\n    'months' => ['ಜನವರಿ', 'ಫೆಬ್ರವರಿ', 'ಮಾರ್ಚ್', 'ಏಪ್ರಿಲ್', 'ಮೇ', 'ಜೂನ್', 'ಜುಲೈ', 'ಆಗಸ್ಟ್', 'ಸೆಪ್ಟೆಂಬರ್', 'ಅಕ್ಟೋಬರ್', 'ನವೆಂಬರ್', 'ಡಿಸೆಂಬರ್'],\n    'months_short' => ['ಜನ', 'ಫೆಬ್ರ', 'ಮಾರ್ಚ್', 'ಏಪ್ರಿಲ್', 'ಮೇ', 'ಜೂನ್', 'ಜುಲೈ', 'ಆಗಸ್ಟ್', 'ಸೆಪ್ಟೆಂ', 'ಅಕ್ಟೋ', 'ನವೆಂ', 'ಡಿಸೆಂ'],\n    'weekdays' => ['ಭಾನುವಾರ', 'ಸೋಮವಾರ', 'ಮಂಗಳವಾರ', 'ಬುಧವಾರ', 'ಗುರುವಾರ', 'ಶುಕ್ರವಾರ', 'ಶನಿವಾರ'],\n    'weekdays_short' => ['ಭಾನು', 'ಸೋಮ', 'ಮಂಗಳ', 'ಬುಧ', 'ಗುರು', 'ಶುಕ್ರ', 'ಶನಿ'],\n    'weekdays_min' => ['ಭಾ', 'ಸೋ', 'ಮಂ', 'ಬು', 'ಗು', 'ಶು', 'ಶ'],\n    'list' => ', ',\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bo_CN.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/bo.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cmn.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/cmn_TW.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hak.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/hak_TW.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_JO.php","ext":"php","size":2110,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'months_short' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/jmc.php","ext":"php","size":1091,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['utuko', 'kyiukonyi'],\n    'weekdays' => ['Jumapilyi', 'Jumatatuu', 'Jumanne', 'Jumatanu', 'Alhamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'weekdays_min' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprilyi', 'Mei', 'Junyi', 'Julyai', 'Agusti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_BE.php","ext":"php","size":324,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lo.php","ext":"php","size":2822,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - ryanhart2\n */\nreturn [\n    'year' => ':count ປີ',\n    'y' => ':count ປີ',\n    'month' => ':count ເດືອນ',\n    'm' => ':count ດ. ',\n    'week' => ':count ອາທິດ',\n    'w' => ':count ອທ. ',\n    'day' => ':count ມື້',\n    'd' => ':count ມື້',\n    'hour' => ':count ຊົ່ວໂມງ',\n    'h' => ':count ຊມ. ',\n    'minute' => ':count ນາທີ',\n    'min' => ':count ນທ. ',\n    'second' => ':count ວິນາທີ',\n    'a_second' => '{0,1}ບໍ່ເທົ່າໃດວິນາທີ|[-Inf,Inf]:count ວິນາທີ',\n    's' => ':count ວິ. ',\n    'ago' => ':timeຜ່ານມາ',\n    'from_now' => 'ອີກ :time',\n    'diff_now' => 'ຕອນນີ້',\n    'diff_today' => 'ມື້ນີ້ເວລາ',\n    'diff_yesterday' => 'ມື້ວານນີ້ເວລາ',\n    'diff_tomorrow' => 'ມື້ອື່ນເວລາ',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'ວັນdddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ມື້ນີ້ເວລາ] LT',\n        'nextDay' => '[ມື້ອື່ນເວລາ] LT',\n        'nextWeek' => '[ວັນ]dddd[ໜ້າເວລາ] LT',\n        'lastDay' => '[ມື້ວານນີ້ເວລາ] LT',\n        'lastWeek' => '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => 'ທີ່:number',\n    'meridiem' => ['ຕອນເຊົ້າ', 'ຕອນແລງ'],\n    'months' => ['ມັງກອນ', 'ກຸມພາ', 'ມີນາ', 'ເມສາ', 'ພຶດສະພາ', 'ມິຖຸນາ', 'ກໍລະກົດ', 'ສິງຫາ', 'ກັນຍາ', 'ຕຸລາ', 'ພະຈິກ', 'ທັນວາ'],\n    'months_short' => ['ມັງກອນ', 'ກຸມພາ', 'ມີນາ', 'ເມສາ', 'ພຶດສະພາ', 'ມິຖຸນາ', 'ກໍລະກົດ', 'ສິງຫາ', 'ກັນຍາ', 'ຕຸລາ', 'ພະຈິກ', 'ທັນວາ'],\n    'weekdays' => ['ອາທິດ', 'ຈັນ', 'ອັງຄານ', 'ພຸດ', 'ພະຫັດ', 'ສຸກ', 'ເສົາ'],\n    'weekdays_short' => ['ທິດ', 'ຈັນ', 'ອັງຄານ', 'ພຸດ', 'ພະຫັດ', 'ສຸກ', 'ເສົາ'],\n    'weekdays_min' => ['ທ', 'ຈ', 'ອຄ', 'ພ', 'ພຫ', 'ສກ', 'ສ'],\n    'list' => [', ', 'ແລະ '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_GF.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/da.php","ext":"php","size":2775,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Rune Mønnike\n * - François B\n * - codenhagen\n * - JD Isaacks\n * - Jens Herlevsen\n * - Ulrik McArdle (mcardle)\n * - Frederik Sauer (FrittenKeeZ)\n * - Janus Bahs Jacquet (kokoshneta)\n */\nreturn [\n    'year' => ':count år|:count år',\n    'a_year' => 'et år|:count år',\n    'y' => ':count år|:count år',\n    'month' => ':count måned|:count måneder',\n    'a_month' => 'en måned|:count måneder',\n    'm' => ':count mdr.',\n    'week' => ':count uge|:count uger',\n    'a_week' => 'en uge|:count uger',\n    'w' => ':count u.',\n    'day' => ':count dag|:count dage',\n    'a_day' => ':count dag|:count dage',\n    'd' => ':count d.',\n    'hour' => ':count time|:count timer',\n    'a_hour' => 'en time|:count timer',\n    'h' => ':count t.',\n    'minute' => ':count minut|:count minutter',\n    'a_minute' => 'et minut|:count minutter',\n    'min' => ':count min.',\n    'second' => ':count sekund|:count sekunder',\n    'a_second' => 'få sekunder|:count sekunder',\n    's' => ':count s.',\n    'ago' => 'for :time siden',\n    'from_now' => 'om :time',\n    'after' => ':time efter',\n    'before' => ':time før',\n    'diff_now' => 'nu',\n    'diff_today' => 'i dag',\n    'diff_today_regexp' => 'i dag(?:\\\\s+kl.)?',\n    'diff_yesterday' => 'i går',\n    'diff_yesterday_regexp' => 'i går(?:\\\\s+kl.)?',\n    'diff_tomorrow' => 'i morgen',\n    'diff_tomorrow_regexp' => 'i morgen(?:\\\\s+kl.)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[i dag kl.] LT',\n        'nextDay' => '[i morgen kl.] LT',\n        'nextWeek' => 'på dddd [kl.] LT',\n        'lastDay' => '[i går kl.] LT',\n        'lastWeek' => '[i] dddd[s kl.] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['januar', 'februar', 'marts', 'april', 'maj', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'december'],\n    'months_short' => ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun.', 'jul.', 'aug.', 'sep.', 'okt.', 'nov.', 'dec.'],\n    'weekdays' => ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag'],\n    'weekdays_short' => ['søn.', 'man.', 'tir.', 'ons.', 'tor.', 'fre.', 'lør.'],\n    'weekdays_min' => ['sø.', 'ma.', 'ti.', 'on.', 'to.', 'fr.', 'lø.'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' og '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ff_CM.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ff.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ht.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ht_HT.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/da_DK.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/da.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/et_EE.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/et.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tzl.php","ext":"php","size":2336,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn [\n    'year' => '[0,1]:count ar|:count ars',\n    'y' => '[0,1]:count ar|:count ars',\n    'month' => '[0,1]:count mes|:count mesen',\n    'm' => '[0,1]:count mes|:count mesen',\n    'week' => '[0,1]:count seifetziua|:count seifetziuas',\n    'w' => '[0,1]:count seifetziua|:count seifetziuas',\n    'day' => '[0,1]:count ziua|:count ziuas',\n    'd' => '[0,1]:count ziua|:count ziuas',\n    'hour' => '[0,1]:count þora|:count þoras',\n    'h' => '[0,1]:count þora|:count þoras',\n    'minute' => '[0,1]:count míut|:count míuts',\n    'min' => '[0,1]:count míut|:count míuts',\n    'second' => ':count secunds',\n    's' => ':count secunds',\n\n    'ago' => 'ja :time',\n    'from_now' => 'osprei :time',\n\n    'diff_yesterday' => 'ieiri',\n    'diff_yesterday_regexp' => 'ieiri(?:\\\\s+à)?',\n    'diff_today' => 'oxhi',\n    'diff_today_regexp' => 'oxhi(?:\\\\s+à)?',\n    'diff_tomorrow' => 'demà',\n    'diff_tomorrow_regexp' => 'demà(?:\\\\s+à)?',\n\n    'formats' => [\n        'LT' => 'HH.mm',\n        'LTS' => 'HH.mm.ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM [dallas] YYYY',\n        'LLL' => 'D. MMMM [dallas] YYYY HH.mm',\n        'LLLL' => 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',\n    ],\n\n    'calendar' => [\n        'sameDay' => '[oxhi à] LT',\n        'nextDay' => '[demà à] LT',\n        'nextWeek' => 'dddd [à] LT',\n        'lastDay' => '[ieiri à] LT',\n        'lastWeek' => '[sür el] dddd [lasteu à] LT',\n        'sameElse' => 'L',\n    ],\n\n    'meridiem' => [\"D'A\", \"D'O\"],\n    'months' => ['Januar', 'Fevraglh', 'Març', 'Avrïu', 'Mai', 'Gün', 'Julia', 'Guscht', 'Setemvar', 'Listopäts', 'Noemvar', 'Zecemvar'],\n    'months_short' => ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Gün', 'Jul', 'Gus', 'Set', 'Lis', 'Noe', 'Zec'],\n    'weekdays' => ['Súladi', 'Lúneçi', 'Maitzi', 'Márcuri', 'Xhúadi', 'Viénerçi', 'Sáturi'],\n    'weekdays_short' => ['Súl', 'Lún', 'Mai', 'Már', 'Xhú', 'Vié', 'Sát'],\n    'weekdays_min' => ['Sú', 'Lú', 'Ma', 'Má', 'Xh', 'Vi', 'Sá'],\n    'ordinal' => ':number.',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/niu.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/niu_NU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mg_MG.php","ext":"php","size":1795,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - The Debian Project modified by GNU//Linux Malagasy Rado Ramarotafika,Do-Risika RAFIEFERANTSIARONJY rado@linuxmg.org,dourix@free.fr\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Janoary', 'Febroary', 'Martsa', 'Aprily', 'Mey', 'Jona', 'Jolay', 'Aogositra', 'Septambra', 'Oktobra', 'Novambra', 'Desambra'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'Mey', 'Jon', 'Jol', 'Aog', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['alahady', 'alatsinainy', 'talata', 'alarobia', 'alakamisy', 'zoma', 'sabotsy'],\n    'weekdays_short' => ['lhd', 'lts', 'tlt', 'lrb', 'lkm', 'zom', 'sab'],\n    'weekdays_min' => ['lhd', 'lts', 'tlt', 'lrb', 'lkm', 'zom', 'sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'minute' => ':count minitra', // less reliable\n    'min' => ':count minitra', // less reliable\n    'a_minute' => ':count minitra', // less reliable\n\n    'year' => ':count taona',\n    'y' => ':count taona',\n    'a_year' => ':count taona',\n\n    'month' => ':count volana',\n    'm' => ':count volana',\n    'a_month' => ':count volana',\n\n    'week' => ':count herinandro',\n    'w' => ':count herinandro',\n    'a_week' => ':count herinandro',\n\n    'day' => ':count andro',\n    'd' => ':count andro',\n    'a_day' => ':count andro',\n\n    'hour' => ':count ora',\n    'h' => ':count ora',\n    'a_hour' => ':count ora',\n\n    'second' => ':count segondra',\n    's' => ':count segondra',\n    'a_second' => ':count segondra',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ne_NP.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ne.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/smn.php","ext":"php","size":2054,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['ip.', 'ep.'],\n    'weekdays' => ['pasepeeivi', 'vuossaargâ', 'majebaargâ', 'koskoho', 'tuorâstuv', 'vástuppeeivi', 'lávurduv'],\n    'weekdays_short' => ['pas', 'vuo', 'maj', 'kos', 'tuo', 'vás', 'láv'],\n    'weekdays_min' => ['pa', 'vu', 'ma', 'ko', 'tu', 'vá', 'lá'],\n    'weekdays_standalone' => ['pasepeivi', 'vuossargâ', 'majebargâ', 'koskokko', 'tuorâstâh', 'vástuppeivi', 'lávurdâh'],\n    'months' => ['uđđâivemáánu', 'kuovâmáánu', 'njuhčâmáánu', 'cuáŋuimáánu', 'vyesimáánu', 'kesimáánu', 'syeinimáánu', 'porgemáánu', 'čohčâmáánu', 'roovvâdmáánu', 'skammâmáánu', 'juovlâmáánu'],\n    'months_short' => ['uđiv', 'kuovâ', 'njuhčâ', 'cuáŋui', 'vyesi', 'kesi', 'syeini', 'porge', 'čohčâ', 'roovvâd', 'skammâ', 'juovlâ'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'H.mm',\n        'LTS' => 'H.mm.ss',\n        'L' => 'D.M.YYYY',\n        'LL' => 'MMM D. YYYY',\n        'LLL' => 'MMMM D. YYYY H.mm',\n        'LLLL' => 'dddd, MMMM D. YYYY H.mm',\n    ],\n\n    'hour' => ':count äigi', // less reliable\n    'h' => ':count äigi', // less reliable\n    'a_hour' => ':count äigi', // less reliable\n\n    'year' => ':count ihe',\n    'y' => ':count ihe',\n    'a_year' => ':count ihe',\n\n    'month' => ':count mánuppaje',\n    'm' => ':count mánuppaje',\n    'a_month' => ':count mánuppaje',\n\n    'week' => ':count okko',\n    'w' => ':count okko',\n    'a_week' => ':count okko',\n\n    'day' => ':count peivi',\n    'd' => ':count peivi',\n    'a_day' => ':count peivi',\n\n    'minute' => ':count miinut',\n    'min' => ':count miinut',\n    'a_minute' => ':count miinut',\n\n    'second' => ':count nubbe',\n    's' => ':count nubbe',\n    'a_second' => ':count nubbe',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gsw.php","ext":"php","size":1547,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Christopher Dell\n * - Akira Matsuda\n * - Enrique Vidal\n * - Simone Carletti\n * - Henning Kiel\n * - Aaron Patterson\n * - Florian Hanke\n */\nreturn [\n    'year' => ':count Johr',\n    'month' => ':count Monet',\n    'week' => ':count Woche',\n    'day' => ':count Tag',\n    'hour' => ':count Schtund',\n    'minute' => ':count Minute',\n    'second' => ':count Sekunde',\n    'weekdays' => ['Sunntig', 'Mäntig', 'Ziischtig', 'Mittwuch', 'Dunschtig', 'Friitig', 'Samschtig'],\n    'weekdays_short' => ['Su', 'Mä', 'Zi', 'Mi', 'Du', 'Fr', 'Sa'],\n    'weekdays_min' => ['Su', 'Mä', 'Zi', 'Mi', 'Du', 'Fr', 'Sa'],\n    'months' => ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'Auguscht', 'September', 'Oktober', 'November', 'Dezember'],\n    'months_short' => ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    'meridiem' => ['am Vormittag', 'am Namittag'],\n    'ordinal' => ':number.',\n    'list' => [', ', ' und '],\n    'diff_now' => 'now',\n    'diff_yesterday' => 'geschter',\n    'diff_tomorrow' => 'moorn',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'Do MMMM YYYY',\n        'LLL' => 'Do MMMM, HH:mm [Uhr]',\n        'LLLL' => 'dddd, Do MMMM YYYY, HH:mm [Uhr]',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_IN.php","ext":"php","size":1114,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yo.php","ext":"php","size":2524,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Atolagbe Abisoye\n */\nreturn [\n    'year' => 'ọdún :count',\n    'a_year' => '{1}ọdún kan|ọdún :count',\n    'month' => 'osù :count',\n    'a_month' => '{1}osù kan|osù :count',\n    'week' => 'ọsẹ :count',\n    'a_week' => '{1}ọsẹ kan|ọsẹ :count',\n    'day' => 'ọjọ́ :count',\n    'a_day' => '{1}ọjọ́ kan|ọjọ́ :count',\n    'hour' => 'wákati :count',\n    'a_hour' => '{1}wákati kan|wákati :count',\n    'minute' => 'ìsẹjú :count',\n    'a_minute' => '{1}ìsẹjú kan|ìsẹjú :count',\n    'second' => 'iaayá :count',\n    'a_second' => '{1}ìsẹjú aayá die|aayá :count',\n    'ago' => ':time kọjá',\n    'from_now' => 'ní :time',\n    'diff_yesterday' => 'Àna',\n    'diff_yesterday_regexp' => 'Àna(?:\\\\s+ni)?',\n    'diff_today' => 'Ònì',\n    'diff_today_regexp' => 'Ònì(?:\\\\s+ni)?',\n    'diff_tomorrow' => 'Ọ̀la',\n    'diff_tomorrow_regexp' => 'Ọ̀la(?:\\\\s+ni)?',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm A',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm A',\n    ],\n    'calendar' => [\n        'sameDay' => '[Ònì ni] LT',\n        'nextDay' => '[Ọ̀la ni] LT',\n        'nextWeek' => 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n        'lastDay' => '[Àna ni] LT',\n        'lastWeek' => 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => 'ọjọ́ :number',\n    'months' => ['Sẹ́rẹ́', 'Èrèlè', 'Ẹrẹ̀nà', 'Ìgbé', 'Èbibi', 'Òkùdu', 'Agẹmo', 'Ògún', 'Owewe', 'Ọ̀wàrà', 'Bélú', 'Ọ̀pẹ̀̀'],\n    'months_short' => ['Sẹ́r', 'Èrl', 'Ẹrn', 'Ìgb', 'Èbi', 'Òkù', 'Agẹ', 'Ògú', 'Owe', 'Ọ̀wà', 'Bél', 'Ọ̀pẹ̀̀'],\n    'weekdays' => ['Àìkú', 'Ajé', 'Ìsẹ́gun', 'Ọjọ́rú', 'Ọjọ́bọ', 'Ẹtì', 'Àbámẹ́ta'],\n    'weekdays_short' => ['Àìk', 'Ajé', 'Ìsẹ́', 'Ọjr', 'Ọjb', 'Ẹtì', 'Àbá'],\n    'weekdays_min' => ['Àì', 'Aj', 'Ìs', 'Ọr', 'Ọb', 'Ẹt', 'Àb'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'meridiem' => ['Àárọ̀', 'Ọ̀sán'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MP.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/eu.php","ext":"php","size":2288,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - JD Isaacks\n */\nreturn [\n    'year' => 'urte bat|:count urte',\n    'y' => 'Urte 1|:count urte',\n    'month' => 'hilabete bat|:count hilabete',\n    'm' => 'Hile 1|:count hile',\n    'week' => 'Aste 1|:count aste',\n    'w' => 'Aste 1|:count aste',\n    'day' => 'egun bat|:count egun',\n    'd' => 'Egun 1|:count egun',\n    'hour' => 'ordu bat|:count ordu',\n    'h' => 'Ordu 1|:count ordu',\n    'minute' => 'minutu bat|:count minutu',\n    'min' => 'Minutu 1|:count minutu',\n    'second' => 'segundo batzuk|:count segundo',\n    's' => 'Segundu 1|:count segundu',\n    'ago' => 'duela :time',\n    'from_now' => ':time barru',\n    'after' => ':time geroago',\n    'before' => ':time lehenago',\n    'diff_now' => 'orain',\n    'diff_today' => 'gaur',\n    'diff_yesterday' => 'atzo',\n    'diff_tomorrow' => 'bihar',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'YYYY[ko] MMMM[ren] D[a]',\n        'LLL' => 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n        'LLLL' => 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[gaur] LT[etan]',\n        'nextDay' => '[bihar] LT[etan]',\n        'nextWeek' => 'dddd LT[etan]',\n        'lastDay' => '[atzo] LT[etan]',\n        'lastWeek' => '[aurreko] dddd LT[etan]',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['urtarrila', 'otsaila', 'martxoa', 'apirila', 'maiatza', 'ekaina', 'uztaila', 'abuztua', 'iraila', 'urria', 'azaroa', 'abendua'],\n    'months_short' => ['urt.', 'ots.', 'mar.', 'api.', 'mai.', 'eka.', 'uzt.', 'abu.', 'ira.', 'urr.', 'aza.', 'abe.'],\n    'weekdays' => ['igandea', 'astelehena', 'asteartea', 'asteazkena', 'osteguna', 'ostirala', 'larunbata'],\n    'weekdays_short' => ['ig.', 'al.', 'ar.', 'az.', 'og.', 'ol.', 'lr.'],\n    'weekdays_min' => ['ig', 'al', 'ar', 'az', 'og', 'ol', 'lr'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' eta '],\n    'meridiem' => ['g', 'a'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/km_KH.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/km.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/an.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/an_ES.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_YE.php","ext":"php","size":1966,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/miq.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/miq_NI.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_PR.php","ext":"php","size":449,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hy.php","ext":"php","size":3462,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - mhamlet\n */\nreturn [\n    'year' => ':count տարի',\n    'a_year' => 'տարի|:count տարի',\n    'y' => ':countտ',\n    'month' => ':count ամիս',\n    'a_month' => 'ամիս|:count ամիս',\n    'm' => ':countամ',\n    'week' => ':count շաբաթ',\n    'a_week' => 'շաբաթ|:count շաբաթ',\n    'w' => ':countշ',\n    'day' => ':count օր',\n    'a_day' => 'օր|:count օր',\n    'd' => ':countօր',\n    'hour' => ':count ժամ',\n    'a_hour' => 'ժամ|:count ժամ',\n    'h' => ':countժ',\n    'minute' => ':count րոպե',\n    'a_minute' => 'րոպե|:count րոպե',\n    'min' => ':countր',\n    'second' => ':count վայրկյան',\n    'a_second' => 'մի քանի վայրկյան|:count վայրկյան',\n    's' => ':countվրկ',\n    'ago' => ':time առաջ',\n    'from_now' => ':timeից',\n    'after' => ':time հետո',\n    'before' => ':time առաջ',\n    'diff_now' => 'հիմա',\n    'diff_today' => 'այսօր',\n    'diff_yesterday' => 'երեկ',\n    'diff_tomorrow' => 'վաղը',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY թ.',\n        'LLL' => 'D MMMM YYYY թ., HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY թ., HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[այսօր] LT',\n        'nextDay' => '[վաղը] LT',\n        'nextWeek' => 'dddd [օրը ժամը] LT',\n        'lastDay' => '[երեկ] LT',\n        'lastWeek' => '[անցած] dddd [օրը ժամը] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'DDD', 'w', 'W', 'DDDo' => $number.($number === 1 ? '-ին' : '-րդ'),\n            default => $number,\n        };\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'գիշերվա';\n        }\n        if ($hour < 12) {\n            return 'առավոտվա';\n        }\n        if ($hour < 17) {\n            return 'ցերեկվա';\n        }\n\n        return 'երեկոյան';\n    },\n    'months' => ['հունվարի', 'փետրվարի', 'մարտի', 'ապրիլի', 'մայիսի', 'հունիսի', 'հուլիսի', 'օգոստոսի', 'սեպտեմբերի', 'հոկտեմբերի', 'նոյեմբերի', 'դեկտեմբերի'],\n    'months_standalone' => ['հունվար', 'փետրվար', 'մարտ', 'ապրիլ', 'մայիս', 'հունիս', 'հուլիս', 'օգոստոս', 'սեպտեմբեր', 'հոկտեմբեր', 'նոյեմբեր', 'դեկտեմբեր'],\n    'months_short' => ['հնվ', 'փտր', 'մրտ', 'ապր', 'մյս', 'հնս', 'հլս', 'օգս', 'սպտ', 'հկտ', 'նմբ', 'դկտ'],\n    'months_regexp' => '/(D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['կիրակի', 'երկուշաբթի', 'երեքշաբթի', 'չորեքշաբթի', 'հինգշաբթի', 'ուրբաթ', 'շաբաթ'],\n    'weekdays_short' => ['կրկ', 'երկ', 'երք', 'չրք', 'հնգ', 'ուրբ', 'շբթ'],\n    'weekdays_min' => ['կրկ', 'երկ', 'երք', 'չրք', 'հնգ', 'ուրբ', 'շբթ'],\n    'list' => [', ', ' եւ '],\n    'first_day_of_week' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_PW.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bhb_IN.php","ext":"php","size":997,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Samsung Electronics Co., Ltd.    alexey.merzlyakov@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'weekdays' => ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'weekdays_short' => ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'weekdays_min' => ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nds_NL.php","ext":"php","size":1056,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - information from Kenneth Christiansen Kenneth Christiansen, Pablo Saratxaga kenneth@gnu.org, pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Jaunuwoa', 'Februwoa', 'Moaz', 'Aprell', 'Mai', 'Juni', 'Juli', 'August', 'Septamba', 'Oktoba', 'Nowamba', 'Dezamba'],\n    'months_short' => ['Jan', 'Feb', 'Moz', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Now', 'Dez'],\n    'weekdays' => ['Sinndag', 'Mondag', 'Dingsdag', 'Meddwäakj', 'Donnadag', 'Friedag', 'Sinnowend'],\n    'weekdays_short' => ['Sdg', 'Mdg', 'Dsg', 'Mwk', 'Ddg', 'Fdg', 'Swd'],\n    'weekdays_min' => ['Sdg', 'Mdg', 'Dsg', 'Mwk', 'Ddg', 'Fdg', 'Swd'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/st_ZA.php","ext":"php","size":1979,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Pherekgong', 'Hlakola', 'Tlhakubele', 'Mmese', 'Motsheanong', 'Phupjane', 'Phupu', 'Phato', 'Leotse', 'Mphalane', 'Pudungwana', 'Tshitwe'],\n    'months_short' => ['Phe', 'Hla', 'TlH', 'Mme', 'Mot', 'Jan', 'Upu', 'Pha', 'Leo', 'Mph', 'Pud', 'Tsh'],\n    'weekdays' => ['Sontaha', 'Mantaha', 'Labobedi', 'Laboraro', 'Labone', 'Labohlano', 'Moqebelo'],\n    'weekdays_short' => ['Son', 'Mma', 'Bed', 'Rar', 'Ne', 'Hla', 'Moq'],\n    'weekdays_min' => ['Son', 'Mma', 'Bed', 'Rar', 'Ne', 'Hla', 'Moq'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'week' => ':count Sontaha', // less reliable\n    'w' => ':count Sontaha', // less reliable\n    'a_week' => ':count Sontaha', // less reliable\n\n    'day' => ':count letsatsi', // less reliable\n    'd' => ':count letsatsi', // less reliable\n    'a_day' => ':count letsatsi', // less reliable\n\n    'hour' => ':count sešupanako', // less reliable\n    'h' => ':count sešupanako', // less reliable\n    'a_hour' => ':count sešupanako', // less reliable\n\n    'minute' => ':count menyane', // less reliable\n    'min' => ':count menyane', // less reliable\n    'a_minute' => ':count menyane', // less reliable\n\n    'second' => ':count thusa', // less reliable\n    's' => ':count thusa', // less reliable\n    'a_second' => ':count thusa', // less reliable\n\n    'year' => ':count selemo',\n    'y' => ':count selemo',\n    'a_year' => ':count selemo',\n\n    'month' => ':count kgwedi',\n    'm' => ':count kgwedi',\n    'a_month' => ':count kgwedi',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GG.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_TO.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_YUE.php","ext":"php","size":472,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/zh.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_US_Posix.php","ext":"php","size":270,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en_US.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hans.php","ext":"php","size":3170,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - monkeycon\n * - François B\n * - Jason Katz-Brown\n * - Konstantin Konev\n * - Chris Lam\n * - Serhan Apaydın\n * - Gary Lo\n * - JD Isaacks\n * - Chris Hemp\n * - shankesgk2\n * - Daniel Cheung (danvim)\n */\nreturn [\n    'year' => ':count:optional-space年',\n    'y' => ':count:optional-space年',\n    'month' => ':count:optional-space个月',\n    'm' => ':count:optional-space个月',\n    'week' => ':count:optional-space周',\n    'w' => ':count:optional-space周',\n    'day' => ':count:optional-space天',\n    'd' => ':count:optional-space天',\n    'hour' => ':count:optional-space小时',\n    'h' => ':count:optional-space小时',\n    'minute' => ':count:optional-space分钟',\n    'min' => ':count:optional-space分钟',\n    'second' => ':count:optional-space秒',\n    'a_second' => '{1}几秒|[-Inf,Inf]:count:optional-space秒',\n    's' => ':count:optional-space秒',\n    'ago' => ':time前',\n    'from_now' => ':time后',\n    'after' => ':time后',\n    'before' => ':time前',\n    'diff_now' => '现在',\n    'diff_today' => '今天',\n    'diff_yesterday' => '昨天',\n    'diff_tomorrow' => '明天',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY/MM/DD',\n        'LL' => 'YYYY年M月D日',\n        'LLL' => 'YYYY年M月D日 HH:mm',\n        'LLLL' => 'YYYY年M月D日dddd HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[今天]LT',\n        'nextDay' => '[明天]LT',\n        'nextWeek' => '[下]ddddLT',\n        'lastDay' => '[昨天]LT',\n        'lastWeek' => '[上]ddddLT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'd', 'D', 'DDD' => $number.'日',\n            'M' => $number.'月',\n            'w', 'W' => $number.'周',\n            default => $number,\n        };\n    },\n    'meridiem' => static function ($hour, $minute) {\n        $time = $hour * 100 + $minute;\n        if ($time < 600) {\n            return '凌晨';\n        }\n        if ($time < 900) {\n            return '早上';\n        }\n        if ($time < 1130) {\n            return '上午';\n        }\n        if ($time < 1230) {\n            return '中午';\n        }\n        if ($time < 1800) {\n            return '下午';\n        }\n\n        return '晚上';\n    },\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    'weekdays' => ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    'weekdays_short' => ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => '',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Cyrl.php","ext":"php","size":4030,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - shaishavgandhi05\n * - Serhan Apaydın\n * - JD Isaacks\n * - Glavić\n * - Nikola Zeravcic\n * - Milos Sakovic\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count година|:count године|:count година',\n    'y' => ':count г.',\n    'month' => ':count месец|:count месеца|:count месеци',\n    'm' => ':count м.',\n    'week' => ':count недеља|:count недеље|:count недеља',\n    'w' => ':count нед.',\n    'day' => ':count дан|:count дана|:count дана',\n    'd' => ':count д.',\n    'hour' => ':count сат|:count сата|:count сати',\n    'h' => ':count ч.',\n    'minute' => ':count минут|:count минута|:count минута',\n    'min' => ':count мин.',\n    'second' => ':count секунд|:count секунде|:count секунди',\n    's' => ':count сек.',\n    'ago' => 'пре :time',\n    'from_now' => 'за :time',\n    'after' => ':time након',\n    'before' => ':time пре',\n    'year_from_now' => ':count годину|:count године|:count година',\n    'year_ago' => ':count годину|:count године|:count година',\n    'week_from_now' => ':count недељу|:count недеље|:count недеља',\n    'week_ago' => ':count недељу|:count недеље|:count недеља',\n    'diff_now' => 'управо сада',\n    'diff_today' => 'данас',\n    'diff_today_regexp' => 'данас(?:\\\\s+у)?',\n    'diff_yesterday' => 'јуче',\n    'diff_yesterday_regexp' => 'јуче(?:\\\\s+у)?',\n    'diff_tomorrow' => 'сутра',\n    'diff_tomorrow_regexp' => 'сутра(?:\\\\s+у)?',\n    'diff_before_yesterday' => 'прекјуче',\n    'diff_after_tomorrow' => 'прекосутра',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[данас у] LT',\n        'nextDay' => '[сутра у] LT',\n        'nextWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[у недељу у] LT',\n            3 => '[у среду у] LT',\n            6 => '[у суботу у] LT',\n            default => '[у] dddd [у] LT',\n        },\n        'lastDay' => '[јуче у] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[прошле недеље у] LT',\n            1 => '[прошлог понедељка у] LT',\n            2 => '[прошлог уторка у] LT',\n            3 => '[прошле среде у] LT',\n            4 => '[прошлог четвртка у] LT',\n            5 => '[прошлог петка у] LT',\n            default => '[прошле суботе у] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],\n    'months_short' => ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],\n    'weekdays' => ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n    'weekdays_short' => ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],\n    'weekdays_min' => ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' и '],\n    'meridiem' => ['АМ', 'ПМ'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sv_SE.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sv.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pap_AW.php","ext":"php","size":363,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - information from native speaker Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn require __DIR__.'/pap.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/eo.php","ext":"php","size":2666,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - Mia Nordentoft\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count jaro|:count jaroj',\n    'a_year' => 'jaro|:count jaroj',\n    'y' => ':count j.',\n    'month' => ':count monato|:count monatoj',\n    'a_month' => 'monato|:count monatoj',\n    'm' => ':count mo.',\n    'week' => ':count semajno|:count semajnoj',\n    'a_week' => 'semajno|:count semajnoj',\n    'w' => ':count sem.',\n    'day' => ':count tago|:count tagoj',\n    'a_day' => 'tago|:count tagoj',\n    'd' => ':count t.',\n    'hour' => ':count horo|:count horoj',\n    'a_hour' => 'horo|:count horoj',\n    'h' => ':count h.',\n    'minute' => ':count minuto|:count minutoj',\n    'a_minute' => 'minuto|:count minutoj',\n    'min' => ':count min.',\n    'second' => ':count sekundo|:count sekundoj',\n    'a_second' => 'sekundoj|:count sekundoj',\n    's' => ':count sek.',\n    'ago' => 'antaŭ :time',\n    'from_now' => 'post :time',\n    'after' => ':time poste',\n    'before' => ':time antaŭe',\n    'diff_yesterday' => 'Hieraŭ',\n    'diff_yesterday_regexp' => 'Hieraŭ(?:\\\\s+je)?',\n    'diff_today' => 'Hodiaŭ',\n    'diff_today_regexp' => 'Hodiaŭ(?:\\\\s+je)?',\n    'diff_tomorrow' => 'Morgaŭ',\n    'diff_tomorrow_regexp' => 'Morgaŭ(?:\\\\s+je)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'D[-a de] MMMM, YYYY',\n        'LLL' => 'D[-a de] MMMM, YYYY HH:mm',\n        'LLLL' => 'dddd, [la] D[-a de] MMMM, YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Hodiaŭ je] LT',\n        'nextDay' => '[Morgaŭ je] LT',\n        'nextWeek' => 'dddd [je] LT',\n        'lastDay' => '[Hieraŭ je] LT',\n        'lastWeek' => '[pasinta] dddd [je] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numbera',\n    'meridiem' => ['a.t.m.', 'p.t.m.'],\n    'months' => ['januaro', 'februaro', 'marto', 'aprilo', 'majo', 'junio', 'julio', 'aŭgusto', 'septembro', 'oktobro', 'novembro', 'decembro'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aŭg', 'sep', 'okt', 'nov', 'dec'],\n    'weekdays' => ['dimanĉo', 'lundo', 'mardo', 'merkredo', 'ĵaŭdo', 'vendredo', 'sabato'],\n    'weekdays_short' => ['dim', 'lun', 'mard', 'merk', 'ĵaŭ', 'ven', 'sab'],\n    'weekdays_min' => ['di', 'lu', 'ma', 'me', 'ĵa', 've', 'sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' kaj '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nhn.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/nhn_MX.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_VU.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gez_ET.php","ext":"php","size":1274,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጃንዩወሪ', 'ፌብሩወሪ', 'ማርች', 'ኤፕረል', 'ሜይ', 'ጁን', 'ጁላይ', 'ኦገስት', 'ሴፕቴምበር', 'ኦክተውበር', 'ኖቬምበር', 'ዲሴምበር'],\n    'months_short' => ['ጃንዩ', 'ፌብሩ', 'ማርች', 'ኤፕረ', 'ሜይ ', 'ጁን ', 'ጁላይ', 'ኦገስ', 'ሴፕቴ', 'ኦክተ', 'ኖቬም', 'ዲሴም'],\n    'weekdays' => ['እኁድ', 'ሰኑይ', 'ሠሉስ', 'ራብዕ', 'ሐሙስ', 'ዓርበ', 'ቀዳሚት'],\n    'weekdays_short' => ['እኁድ', 'ሰኑይ', 'ሠሉስ', 'ራብዕ', 'ሐሙስ', 'ዓርበ', 'ቀዳሚ'],\n    'weekdays_min' => ['እኁድ', 'ሰኑይ', 'ሠሉስ', 'ራብዕ', 'ሐሙስ', 'ዓርበ', 'ቀዳሚ'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ጽባሕ', 'ምሴት'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nds.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/nds_DE.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kab.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/kab_DZ.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/seh.php","ext":"php","size":1071,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'weekdays' => ['Dimingu', 'Chiposi', 'Chipiri', 'Chitatu', 'Chinai', 'Chishanu', 'Sabudu'],\n    'weekdays_short' => ['Dim', 'Pos', 'Pir', 'Tat', 'Nai', 'Sha', 'Sab'],\n    'weekdays_min' => ['Dim', 'Pos', 'Pir', 'Tat', 'Nai', 'Sha', 'Sab'],\n    'months' => ['Janeiro', 'Fevreiro', 'Marco', 'Abril', 'Maio', 'Junho', 'Julho', 'Augusto', 'Setembro', 'Otubro', 'Novembro', 'Decembro'],\n    'months_short' => ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Aug', 'Set', 'Otu', 'Nov', 'Dec'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'd [de] MMM [de] YYYY',\n        'LLL' => 'd [de] MMMM [de] YYYY HH:mm',\n        'LLLL' => 'dddd, d [de] MMMM [de] YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hant_TW.php","ext":"php","size":272,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hant.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mt.php","ext":"php","size":2678,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Alessandro Maruccia\n */\nreturn [\n    'year' => 'sena|:count sni|:count sni|:count sni',\n    'y' => 'sa sena|:count snin|:count snin|:count snin',\n    'month' => 'xahar|:count xhur|:count xhur|:count xhur',\n    'm' => ':count xahar|:count xhur|:count xhur|:count xhur',\n    'week' => 'gimgħa|:count ġimgħat|:count ġimgħat|:count ġimgħat',\n    'w' => 'ġimgħa|:count ġimgħat|:count ġimgħat|:count ġimgħat',\n    'day' => 'ġurnata|:count ġranet|:count ġranet|:count ġranet',\n    'd' => 'ġurnata|:count ġranet|:count ġranet|:count ġranet',\n    'hour' => 'siegħa|:count siegħat|:count siegħat|:count siegħat',\n    'h' => 'siegħa|:count sigħat|:count sigħat|:count sigħat',\n    'minute' => 'minuta|:count minuti|:count minuti|:count minuti',\n    'min' => 'min.|:count min.|:count min.|:count min.',\n    'second' => 'ftit sekondi|:count sekondi|:count sekondi|:count sekondi',\n    's' => 'sek.|:count sek.|:count sek.|:count sek.',\n    'ago' => ':time ilu',\n    'from_now' => 'f’ :time',\n    'diff_now' => 'issa',\n    'diff_today' => 'Illum',\n    'diff_today_regexp' => 'Illum(?:\\\\s+fil-)?',\n    'diff_yesterday' => 'lbieraħ',\n    'diff_yesterday_regexp' => 'Il-bieraħ(?:\\\\s+fil-)?',\n    'diff_tomorrow' => 'għada',\n    'diff_tomorrow_regexp' => 'Għada(?:\\\\s+fil-)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Illum fil-]LT',\n        'nextDay' => '[Għada fil-]LT',\n        'nextWeek' => 'dddd [fil-]LT',\n        'lastDay' => '[Il-bieraħ fil-]LT',\n        'lastWeek' => 'dddd [li għadda] [fil-]LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberº',\n    'months' => ['Jannar', 'Frar', 'Marzu', 'April', 'Mejju', 'Ġunju', 'Lulju', 'Awwissu', 'Settembru', 'Ottubru', 'Novembru', 'Diċembru'],\n    'months_short' => ['Jan', 'Fra', 'Mar', 'Apr', 'Mej', 'Ġun', 'Lul', 'Aww', 'Set', 'Ott', 'Nov', 'Diċ'],\n    'weekdays' => ['Il-Ħadd', 'It-Tnejn', 'It-Tlieta', 'L-Erbgħa', 'Il-Ħamis', 'Il-Ġimgħa', 'Is-Sibt'],\n    'weekdays_short' => ['Ħad', 'Tne', 'Tli', 'Erb', 'Ħam', 'Ġim', 'Sib'],\n    'weekdays_min' => ['Ħa', 'Tn', 'Tl', 'Er', 'Ħa', 'Ġi', 'Si'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' u '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cmn_TW.php","ext":"php","size":1639,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'YYYY年MM月DD號',\n    ],\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => [' 1月', ' 2月', ' 3月', ' 4月', ' 5月', ' 6月', ' 7月', ' 8月', ' 9月', '10月', '11月', '12月'],\n    'weekdays' => ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    'weekdays_short' => ['日', '一', '二', '三', '四', '五', '六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'meridiem' => ['上午', '下午'],\n\n    'year' => ':count 年',\n    'y' => ':count 年',\n    'a_year' => ':count 年',\n\n    'month' => ':count 月',\n    'm' => ':count 月',\n    'a_month' => ':count 月',\n\n    'week' => ':count 周',\n    'w' => ':count 周',\n    'a_week' => ':count 周',\n\n    'day' => ':count 白天',\n    'd' => ':count 白天',\n    'a_day' => ':count 白天',\n\n    'hour' => ':count 小时',\n    'h' => ':count 小时',\n    'a_hour' => ':count 小时',\n\n    'minute' => ':count 分钟',\n    'min' => ':count 分钟',\n    'a_minute' => ':count 分钟',\n\n    'second' => ':count 秒',\n    's' => ':count 秒',\n    'a_second' => ':count 秒',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/se_SE.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/se.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fi.php","ext":"php","size":2794,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Janne Warén\n * - digitalfrost\n * - Tsutomu Kuroda\n * - Roope Salmi\n * - tjku\n * - Max Melentiev\n * - Sami Haahtinen\n * - Teemu Leisti\n * - Artem Ignatyev\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Robert Bjarnason\n * - Aaron Patterson\n * - Nicolás Hock Isaza\n * - Tom Hughes\n * - Sven Fuchs\n * - Petri Kivikangas\n * - Nizar Jouini\n * - Marko Seppae\n * - Tomi Mynttinen (Pikseli)\n * - Petteri (powergrip)\n */\nreturn [\n    'year' => ':count vuosi|:count vuotta',\n    'y' => ':count v',\n    'month' => ':count kuukausi|:count kuukautta',\n    'm' => ':count kk',\n    'week' => ':count viikko|:count viikkoa',\n    'w' => ':count vk',\n    'day' => ':count päivä|:count päivää',\n    'd' => ':count pv',\n    'hour' => ':count tunti|:count tuntia',\n    'h' => ':count t',\n    'minute' => ':count minuutti|:count minuuttia',\n    'min' => ':count min',\n    'second' => ':count sekunti|:count sekuntia',\n    'a_second' => 'muutama sekunti|:count sekuntia',\n    's' => ':count s',\n    'ago' => ':time sitten',\n    'from_now' => ':time päästä',\n    'year_from_now' => ':count vuoden',\n    'month_from_now' => ':count kuukauden',\n    'week_from_now' => ':count viikon',\n    'day_from_now' => ':count päivän',\n    'hour_from_now' => ':count tunnin',\n    'minute_from_now' => ':count minuutin',\n    'second_from_now' => ':count sekunnin',\n    'after' => ':time sen jälkeen',\n    'before' => ':time ennen',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' ja '],\n    'diff_now' => 'nyt',\n    'diff_yesterday' => 'eilen',\n    'diff_tomorrow' => 'huomenna',\n    'formats' => [\n        'LT' => 'HH.mm',\n        'LTS' => 'HH.mm:ss',\n        'L' => 'D.M.YYYY',\n        'LL' => 'dddd D. MMMM[ta] YYYY',\n        'll' => 'ddd D. MMM YYYY',\n        'LLL' => 'D.MM. HH.mm',\n        'LLLL' => 'D. MMMM[ta] YYYY HH.mm',\n        'llll' => 'D. MMM YY HH.mm',\n    ],\n    'weekdays' => ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai'],\n    'weekdays_short' => ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la'],\n    'weekdays_min' => ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la'],\n    'months' => ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu'],\n    'months_short' => ['tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesä', 'heinä', 'elo', 'syys', 'loka', 'marras', 'joulu'],\n    'meridiem' => ['aamupäivä', 'iltapäivä'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sl_SI.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ro_MD.php","ext":"php","size":521,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ro.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uk.php","ext":"php","size":8977,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Carbon\\CarbonInterface;\n\n$processHoursFunction = static function (CarbonInterface $date, string $format) {\n    return $format.'о'.($date->hour === 11 ? 'б' : '').'] LT';\n};\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - Josh Soref\n * - François B\n * - Tim Fish\n * - Serhan Apaydın\n * - Max Mykhailenko\n * - JD Isaacks\n * - Max Kovpak\n * - AucT\n * - Philippe Vaucher\n * - Ilya Shaplyko\n * - Vadym Ievsieiev\n * - Denys Kurets\n * - Igor Kasyanchuk\n * - Tsutomu Kuroda\n * - tjku\n * - Max Melentiev\n * - Oleh\n * - epaminond\n * - Juanito Fatas\n * - Vitalii Khustochka\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Andriy Tyurnikov\n * - Nicolás Hock Isaza\n * - Iwakura Taro\n * - Andrii Ponomarov\n * - alecrabbit\n * - vystepanenko\n * - AlexWalkerson\n * - Andre Havryliuk (Andrend)\n * - Max Datsenko (datsenko-md)\n */\nreturn [\n    'year' => ':count рік|:count роки|:count років',\n    'y' => ':countр|:countрр|:countрр',\n    'a_year' => '{1}рік|:count рік|:count роки|:count років',\n    'month' => ':count місяць|:count місяці|:count місяців',\n    'm' => ':countм',\n    'a_month' => '{1}місяць|:count місяць|:count місяці|:count місяців',\n    'week' => ':count тиждень|:count тижні|:count тижнів',\n    'w' => ':countт',\n    'a_week' => '{1}тиждень|:count тиждень|:count тижні|:count тижнів',\n    'day' => ':count день|:count дні|:count днів',\n    'd' => ':countд',\n    'a_day' => '{1}день|:count день|:count дні|:count днів',\n    'hour' => ':count година|:count години|:count годин',\n    'h' => ':countг',\n    'a_hour' => '{1}година|:count година|:count години|:count годин',\n    'minute' => ':count хвилина|:count хвилини|:count хвилин',\n    'min' => ':countхв',\n    'a_minute' => '{1}хвилина|:count хвилина|:count хвилини|:count хвилин',\n    'second' => ':count секунда|:count секунди|:count секунд',\n    's' => ':countсек',\n    'a_second' => '{1}декілька секунд|:count секунда|:count секунди|:count секунд',\n\n    'hour_ago' => ':count годину|:count години|:count годин',\n    'a_hour_ago' => '{1}годину|:count годину|:count години|:count годин',\n    'minute_ago' => ':count хвилину|:count хвилини|:count хвилин',\n    'a_minute_ago' => '{1}хвилину|:count хвилину|:count хвилини|:count хвилин',\n    'second_ago' => ':count секунду|:count секунди|:count секунд',\n    'a_second_ago' => '{1}декілька секунд|:count секунду|:count секунди|:count секунд',\n\n    'hour_from_now' => ':count годину|:count години|:count годин',\n    'a_hour_from_now' => '{1}годину|:count годину|:count години|:count годин',\n    'minute_from_now' => ':count хвилину|:count хвилини|:count хвилин',\n    'a_minute_from_now' => '{1}хвилину|:count хвилину|:count хвилини|:count хвилин',\n    'second_from_now' => ':count секунду|:count секунди|:count секунд',\n    'a_second_from_now' => '{1}декілька секунд|:count секунду|:count секунди|:count секунд',\n\n    'hour_after' => ':count годину|:count години|:count годин',\n    'a_hour_after' => '{1}годину|:count годину|:count години|:count годин',\n    'minute_after' => ':count хвилину|:count хвилини|:count хвилин',\n    'a_minute_after' => '{1}хвилину|:count хвилину|:count хвилини|:count хвилин',\n    'second_after' => ':count секунду|:count секунди|:count секунд',\n    'a_second_after' => '{1}декілька секунд|:count секунду|:count секунди|:count секунд',\n\n    'hour_before' => ':count годину|:count години|:count годин',\n    'a_hour_before' => '{1}годину|:count годину|:count години|:count годин',\n    'minute_before' => ':count хвилину|:count хвилини|:count хвилин',\n    'a_minute_before' => '{1}хвилину|:count хвилину|:count хвилини|:count хвилин',\n    'second_before' => ':count секунду|:count секунди|:count секунд',\n    'a_second_before' => '{1}декілька секунд|:count секунду|:count секунди|:count секунд',\n\n    'ago' => ':time тому',\n    'from_now' => 'за :time',\n    'after' => ':time після',\n    'before' => ':time до',\n    'diff_now' => 'щойно',\n    'diff_today' => 'Сьогодні',\n    'diff_today_regexp' => 'Сьогодні(?:\\\\s+о)?',\n    'diff_yesterday' => 'вчора',\n    'diff_yesterday_regexp' => 'Вчора(?:\\\\s+о)?',\n    'diff_tomorrow' => 'завтра',\n    'diff_tomorrow_regexp' => 'Завтра(?:\\\\s+о)?',\n    'diff_before_yesterday' => 'позавчора',\n    'diff_after_tomorrow' => 'післязавтра',\n    'period_recurrences' => 'один раз|:count рази|:count разів',\n    'period_interval' => 'кожні :interval',\n    'period_start_date' => 'з :date',\n    'period_end_date' => 'до :date',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => static fn (CarbonInterface $date) => $processHoursFunction($date, '[Сьогодні '),\n        'nextDay' => static fn (CarbonInterface $date) => $processHoursFunction($date, '[Завтра '),\n        'nextWeek' => static fn (CarbonInterface $date) => $processHoursFunction($date, '[У] dddd ['),\n        'lastDay' => static fn (CarbonInterface $date) => $processHoursFunction($date, '[Вчора '),\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0, 3, 5, 6 => $processHoursFunction($date, '[Минулої] dddd ['),\n            default => $processHoursFunction($date, '[Минулого] dddd ['),\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static fn ($number, $period) => match ($period) {\n        'M', 'd', 'DDD', 'w', 'W' => $number.'-й',\n        'D' => $number.'-го',\n        default => $number,\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'ночі';\n        }\n\n        if ($hour < 12) {\n            return 'ранку';\n        }\n\n        if ($hour < 17) {\n            return 'дня';\n        }\n\n        return 'вечора';\n    },\n    'months' => ['січня', 'лютого', 'березня', 'квітня', 'травня', 'червня', 'липня', 'серпня', 'вересня', 'жовтня', 'листопада', 'грудня'],\n    'months_standalone' => ['січень', 'лютий', 'березень', 'квітень', 'травень', 'червень', 'липень', 'серпень', 'вересень', 'жовтень', 'листопад', 'грудень'],\n    'months_short' => ['січ', 'лют', 'бер', 'кві', 'тра', 'чер', 'лип', 'сер', 'вер', 'жов', 'лис', 'гру'],\n    'months_regexp' => '/(D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => static function (CarbonInterface $date, $format, $index) {\n        static $words = [\n            'nominative' => ['неділя', 'понеділок', 'вівторок', 'середа', 'четвер', 'п’ятниця', 'субота'],\n            'accusative' => ['неділю', 'понеділок', 'вівторок', 'середу', 'четвер', 'п’ятницю', 'суботу'],\n            'genitive' => ['неділі', 'понеділка', 'вівторка', 'середи', 'четверга', 'п’ятниці', 'суботи'],\n        ];\n\n        $format ??= '';\n        $nounCase = preg_match('/(\\[(В|в|У|у)\\])\\s+dddd/u', $format)\n            ? 'accusative'\n            : (\n                preg_match('/\\[?(?:минулої|наступної)?\\s*\\]\\s+dddd/u', $format)\n                    ? 'genitive'\n                    : 'nominative'\n            );\n\n        return $words[$nounCase][$index] ?? null;\n    },\n    'weekdays_short' => ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n    'weekdays_min' => ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' i '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yue_HK.php","ext":"php","size":1024,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/zh_HK.php', [\n    'formats' => [\n        'L' => 'YYYY年MM月DD日 dddd',\n    ],\n    'months' => ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    'months_short' => ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    'weekdays' => ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    'weekdays_short' => ['日', '一', '二', '三', '四', '五', '六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['上午', '下午'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ms.php","ext":"php","size":3319,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Azri Jamil\n * - JD Isaacks\n * - Josh Soref\n * - Azri Jamil\n * - Hariadi Hinta\n * - Ashraf Kamarudin\n */\nreturn [\n    'year' => ':count tahun',\n    'a_year' => '{1}setahun|[-Inf,Inf]:count tahun',\n    'y' => ':count tahun',\n    'month' => ':count bulan',\n    'a_month' => '{1}sebulan|[-Inf,Inf]:count bulan',\n    'm' => ':count bulan',\n    'week' => ':count minggu',\n    'a_week' => '{1}seminggu|[-Inf,Inf]:count minggu',\n    'w' => ':count minggu',\n    'day' => ':count hari',\n    'a_day' => '{1}sehari|[-Inf,Inf]:count hari',\n    'd' => ':count hari',\n    'hour' => ':count jam',\n    'a_hour' => '{1}sejam|[-Inf,Inf]:count jam',\n    'h' => ':count jam',\n    'minute' => ':count minit',\n    'a_minute' => '{1}seminit|[-Inf,Inf]:count minit',\n    'min' => ':count minit',\n    'second' => ':count saat',\n    'a_second' => '{1}beberapa saat|[-Inf,Inf]:count saat',\n    'millisecond' => ':count milisaat',\n    'a_millisecond' => '{1}semilisaat|[-Inf,Inf]:count milliseconds',\n    'microsecond' => ':count mikrodetik',\n    'a_microsecond' => '{1}semikrodetik|[-Inf,Inf]:count mikrodetik',\n    's' => ':count saat',\n    'ago' => ':time yang lepas',\n    'from_now' => ':time dari sekarang',\n    'after' => ':time kemudian',\n    'before' => ':time sebelum',\n    'diff_now' => 'sekarang',\n    'diff_today' => 'Hari',\n    'diff_today_regexp' => 'Hari(?:\\\\s+ini)?(?:\\\\s+pukul)?',\n    'diff_yesterday' => 'semalam',\n    'diff_yesterday_regexp' => 'Semalam(?:\\\\s+pukul)?',\n    'diff_tomorrow' => 'esok',\n    'diff_tomorrow_regexp' => 'Esok(?:\\\\s+pukul)?',\n    'diff_before_yesterday' => 'kelmarin',\n    'diff_after_tomorrow' => 'lusa',\n    'formats' => [\n        'LT' => 'HH.mm',\n        'LTS' => 'HH.mm.ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY [pukul] HH.mm',\n        'LLLL' => 'dddd, D MMMM YYYY [pukul] HH.mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Hari ini pukul] LT',\n        'nextDay' => '[Esok pukul] LT',\n        'nextWeek' => 'dddd [pukul] LT',\n        'lastDay' => '[Kelmarin pukul] LT',\n        'lastWeek' => 'dddd [lepas pukul] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 1) {\n            return 'tengah malam';\n        }\n\n        if ($hour < 12) {\n            return 'pagi';\n        }\n\n        if ($hour < 13) {\n            return 'tengah hari';\n        }\n\n        if ($hour < 19) {\n            return 'petang';\n        }\n\n        return 'malam';\n    },\n    'months' => ['Januari', 'Februari', 'Mac', 'April', 'Mei', 'Jun', 'Julai', 'Ogos', 'September', 'Oktober', 'November', 'Disember'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ogs', 'Sep', 'Okt', 'Nov', 'Dis'],\n    'weekdays' => ['Ahad', 'Isnin', 'Selasa', 'Rabu', 'Khamis', 'Jumaat', 'Sabtu'],\n    'weekdays_short' => ['Ahd', 'Isn', 'Sel', 'Rab', 'Kha', 'Jum', 'Sab'],\n    'weekdays_min' => ['Ah', 'Is', 'Sl', 'Rb', 'Km', 'Jm', 'Sb'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' dan '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lb.php","ext":"php","size":2934,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - dan-nl\n * - Simon Lelorrain (slelorrain)\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count Joer',\n    'y' => ':countJ',\n    'month' => ':count Mount|:count Méint',\n    'm' => ':countMo',\n    'week' => ':count Woch|:count Wochen',\n    'w' => ':countWo|:countWo',\n    'day' => ':count Dag|:count Deeg',\n    'd' => ':countD',\n    'hour' => ':count Stonn|:count Stonnen',\n    'h' => ':countSto',\n    'minute' => ':count Minutt|:count Minutten',\n    'min' => ':countM',\n    'second' => ':count Sekonn|:count Sekonnen',\n    's' => ':countSek',\n\n    'ago' => 'virun :time',\n    'from_now' => 'an :time',\n    'before' => ':time virdrun',\n    'after' => ':time duerno',\n\n    'diff_today' => 'Haut',\n    'diff_yesterday' => 'Gëschter',\n    'diff_yesterday_regexp' => 'Gëschter(?:\\\\s+um)?',\n    'diff_tomorrow' => 'Muer',\n    'diff_tomorrow_regexp' => 'Muer(?:\\\\s+um)?',\n    'diff_today_regexp' => 'Haut(?:\\\\s+um)?',\n    'formats' => [\n        'LT' => 'H:mm [Auer]',\n        'LTS' => 'H:mm:ss [Auer]',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY H:mm [Auer]',\n        'LLLL' => 'dddd, D. MMMM YYYY H:mm [Auer]',\n    ],\n\n    'calendar' => [\n        'sameDay' => '[Haut um] LT',\n        'nextDay' => '[Muer um] LT',\n        'nextWeek' => 'dddd [um] LT',\n        'lastDay' => '[Gëschter um] LT',\n        'lastWeek' => static function (CarbonInterface $date) {\n            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n            return match ($date->dayOfWeek) {\n                2, 4 => '[Leschten] dddd [um] LT',\n                default => '[Leschte] dddd [um] LT',\n            };\n        },\n        'sameElse' => 'L',\n    ],\n\n    'months' => ['Januar', 'Februar', 'Mäerz', 'Abrëll', 'Mee', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n    'months_short' => ['Jan.', 'Febr.', 'Mrz.', 'Abr.', 'Mee', 'Jun.', 'Jul.', 'Aug.', 'Sept.', 'Okt.', 'Nov.', 'Dez.'],\n    'weekdays' => ['Sonndeg', 'Méindeg', 'Dënschdeg', 'Mëttwoch', 'Donneschdeg', 'Freideg', 'Samschdeg'],\n    'weekdays_short' => ['So.', 'Mé.', 'Dë.', 'Më.', 'Do.', 'Fr.', 'Sa.'],\n    'weekdays_min' => ['So', 'Mé', 'Dë', 'Më', 'Do', 'Fr', 'Sa'],\n    'ordinal' => ':number.',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' an '],\n    'meridiem' => ['moies', 'mëttes'],\n    'weekdays_short_standalone' => ['Son', 'Méi', 'Dën', 'Mët', 'Don', 'Fre', 'Sam'],\n    'months_short_standalone' => ['Jan', 'Feb', 'Mäe', 'Abr', 'Mee', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SB.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ksf.php","ext":"php","size":1285,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['sárúwá', 'cɛɛ́nko'],\n    'weekdays' => ['sɔ́ndǝ', 'lǝndí', 'maadí', 'mɛkrɛdí', 'jǝǝdí', 'júmbá', 'samdí'],\n    'weekdays_short' => ['sɔ́n', 'lǝn', 'maa', 'mɛk', 'jǝǝ', 'júm', 'sam'],\n    'weekdays_min' => ['sɔ́n', 'lǝn', 'maa', 'mɛk', 'jǝǝ', 'júm', 'sam'],\n    'months' => ['ŋwíí a ntɔ́ntɔ', 'ŋwíí akǝ bɛ́ɛ', 'ŋwíí akǝ ráá', 'ŋwíí akǝ nin', 'ŋwíí akǝ táan', 'ŋwíí akǝ táafɔk', 'ŋwíí akǝ táabɛɛ', 'ŋwíí akǝ táaraa', 'ŋwíí akǝ táanin', 'ŋwíí akǝ ntɛk', 'ŋwíí akǝ ntɛk di bɔ́k', 'ŋwíí akǝ ntɛk di bɛ́ɛ'],\n    'months_short' => ['ŋ1', 'ŋ2', 'ŋ3', 'ŋ4', 'ŋ5', 'ŋ6', 'ŋ7', 'ŋ8', 'ŋ9', 'ŋ10', 'ŋ11', 'ŋ12'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MO.php","ext":"php","size":327,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ce_RU.php","ext":"php","size":1842,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - ANCHR\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY.DD.MM',\n    ],\n    'months' => ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    'months_short' => ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'weekdays' => ['КӀиранан де', 'Оршотан де', 'Шинарин де', 'Кхаарин де', 'Еарин де', 'ПӀераскан де', 'Шот де'],\n    'weekdays_short' => ['КӀ', 'Ор', 'Ши', 'Кх', 'Еа', 'ПӀ', 'Шо'],\n    'weekdays_min' => ['КӀ', 'Ор', 'Ши', 'Кх', 'Еа', 'ПӀ', 'Шо'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count шо',\n    'y' => ':count шо',\n    'a_year' => ':count шо',\n\n    'month' => ':count бутт',\n    'm' => ':count бутт',\n    'a_month' => ':count бутт',\n\n    'week' => ':count кӏира',\n    'w' => ':count кӏира',\n    'a_week' => ':count кӏира',\n\n    'day' => ':count де',\n    'd' => ':count де',\n    'a_day' => ':count де',\n\n    'hour' => ':count сахьт',\n    'h' => ':count сахьт',\n    'a_hour' => ':count сахьт',\n\n    'minute' => ':count минот',\n    'min' => ':count минот',\n    'a_minute' => ':count минот',\n\n    'second' => ':count секунд',\n    's' => ':count секунд',\n    'a_second' => ':count секунд',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_PN.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl.php","ext":"php","size":3600,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Roy\n * - Stephan\n * - François B\n * - Tim Fish\n * - Kevin Huang\n * - Jacob Middag\n * - JD Isaacks\n * - Roy\n * - Stephan\n * - François B\n * - Tim Fish\n * - Jacob Middag\n * - JD Isaacks\n * - Propaganistas\n * - MegaXLR\n * - adriaanzon\n * - MonkeyPhysics\n * - JeroenG\n * - RikSomers\n * - proclame\n * - Rik de Groot (hwdegroot)\n */\nreturn [\n    'year' => ':count jaar|:count jaar',\n    'a_year' => 'een jaar|:count jaar',\n    'y' => ':countj',\n    'month' => ':count maand|:count maanden',\n    'a_month' => 'een maand|:count maanden',\n    'm' => ':countmnd',\n    'week' => ':count week|:count weken',\n    'a_week' => 'een week|:count weken',\n    'w' => ':countw',\n    'day' => ':count dag|:count dagen',\n    'a_day' => 'een dag|:count dagen',\n    'd' => ':countd',\n    'hour' => ':count uur|:count uur',\n    'a_hour' => 'een uur|:count uur',\n    'h' => ':countu',\n    'minute' => ':count minuut|:count minuten',\n    'a_minute' => 'een minuut|:count minuten',\n    'min' => ':countmin',\n    'second' => ':count seconde|:count seconden',\n    'a_second' => 'een paar seconden|:count seconden',\n    's' => ':counts',\n    'ago' => ':time geleden',\n    'from_now' => 'over :time',\n    'after' => ':time later',\n    'before' => ':time eerder',\n    'diff_now' => 'nu',\n    'diff_today' => 'vandaag',\n    'diff_today_regexp' => 'vandaag(?:\\\\s+om)?',\n    'diff_yesterday' => 'gisteren',\n    'diff_yesterday_regexp' => 'gisteren(?:\\\\s+om)?',\n    'diff_tomorrow' => 'morgen',\n    'diff_tomorrow_regexp' => 'morgen(?:\\\\s+om)?',\n    'diff_after_tomorrow' => 'overmorgen',\n    'diff_before_yesterday' => 'eergisteren',\n    'period_recurrences' => ':count keer',\n    'period_interval' => static function (string $interval = '') {\n        /** @var string $output */\n        $output = preg_replace('/^(een|één|1)\\s+/u', '', $interval);\n\n        if (preg_match('/^(een|één|1)( jaar|j| uur|u)/u', $interval)) {\n            return \"elk $output\";\n        }\n\n        return \"elke $output\";\n    },\n    'period_start_date' => 'van :date',\n    'period_end_date' => 'tot :date',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD-MM-YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[vandaag om] LT',\n        'nextDay' => '[morgen om] LT',\n        'nextWeek' => 'dddd [om] LT',\n        'lastDay' => '[gisteren om] LT',\n        'lastWeek' => '[afgelopen] dddd [om] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        return $number.(($number === 1 || $number === 8 || $number >= 20) ? 'ste' : 'de');\n    },\n    'months' => ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n    'months_short' => ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    'mmm_suffix' => '.',\n    'weekdays' => ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n    'weekdays_short' => ['zo.', 'ma.', 'di.', 'wo.', 'do.', 'vr.', 'za.'],\n    'weekdays_min' => ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' en '],\n    'meridiem' => ['\\'s ochtends', '\\'s middags'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_GP.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fa_IR.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fa.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mgo.php","ext":"php","size":1239,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['Aneg 1', 'Aneg 2', 'Aneg 3', 'Aneg 4', 'Aneg 5', 'Aneg 6', 'Aneg 7'],\n    'weekdays_short' => ['Aneg 1', 'Aneg 2', 'Aneg 3', 'Aneg 4', 'Aneg 5', 'Aneg 6', 'Aneg 7'],\n    'weekdays_min' => ['1', '2', '3', '4', '5', '6', '7'],\n    'months' => ['iməg mbegtug', 'imeg àbùbì', 'imeg mbəŋchubi', 'iməg ngwə̀t', 'iməg fog', 'iməg ichiibɔd', 'iməg àdùmbə̀ŋ', 'iməg ichika', 'iməg kud', 'iməg tèsiʼe', 'iməg zò', 'iməg krizmed'],\n    'months_short' => ['mbegtug', 'imeg àbùbì', 'imeg mbəŋchubi', 'iməg ngwə̀t', 'iməg fog', 'iməg ichiibɔd', 'iməg àdùmbə̀ŋ', 'iməg ichika', 'iməg kud', 'iməg tèsiʼe', 'iməg zò', 'iməg krizmed'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'dddd, YYYY MMMM DD HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ko_KR.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ko.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_LC.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_AR.php","ext":"php","size":422,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_SC.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CG.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ca.php","ext":"php","size":4517,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - mestremuten\n * - François B\n * - Marc Ordinas i Llopis\n * - Pere Orga\n * - JD Isaacks\n * - Quentí\n * - Víctor Díaz\n * - Xavi\n * - qcardona\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count any|:count anys',\n    'a_year' => 'un any|:count anys',\n    'y' => ':count any|:count anys',\n    'month' => ':count mes|:count mesos',\n    'a_month' => 'un mes|:count mesos',\n    'm' => ':count mes|:count mesos',\n    'week' => ':count setmana|:count setmanes',\n    'a_week' => 'una setmana|:count setmanes',\n    'w' => ':count setmana|:count setmanes',\n    'day' => ':count dia|:count dies',\n    'a_day' => 'un dia|:count dies',\n    'd' => ':count d',\n    'hour' => ':count hora|:count hores',\n    'a_hour' => 'una hora|:count hores',\n    'h' => ':count h',\n    'minute' => ':count minut|:count minuts',\n    'a_minute' => 'un minut|:count minuts',\n    'min' => ':count min',\n    'second' => ':count segon|:count segons',\n    'a_second' => 'uns segons|:count segons',\n    's' => ':count s',\n    'ago' => 'fa :time',\n    'from_now' => 'd\\'aquí a :time',\n    'after' => ':time després',\n    'before' => ':time abans',\n    'diff_now' => 'ara mateix',\n    'diff_today' => 'avui',\n    'diff_today_regexp' => 'avui(?:\\\\s+a)?(?:\\\\s+les)?',\n    'diff_yesterday' => 'ahir',\n    'diff_yesterday_regexp' => 'ahir(?:\\\\s+a)?(?:\\\\s+les)?',\n    'diff_tomorrow' => 'demà',\n    'diff_tomorrow_regexp' => 'demà(?:\\\\s+a)?(?:\\\\s+les)?',\n    'diff_before_yesterday' => 'abans d\\'ahir',\n    'diff_after_tomorrow' => 'demà passat',\n    'period_recurrences' => ':count cop|:count cops',\n    'period_interval' => 'cada :interval',\n    'period_start_date' => 'de :date',\n    'period_end_date' => 'fins a :date',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM [de] YYYY',\n        'LLL' => 'D MMMM [de] YYYY [a les] H:mm',\n        'LLLL' => 'dddd D MMMM [de] YYYY [a les] H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => static function (CarbonInterface $current) {\n            return '[avui a '.($current->hour !== 1 ? 'les' : 'la').'] LT';\n        },\n        'nextDay' => static function (CarbonInterface $current) {\n            return '[demà a '.($current->hour !== 1 ? 'les' : 'la').'] LT';\n        },\n        'nextWeek' => static function (CarbonInterface $current) {\n            return 'dddd [a '.($current->hour !== 1 ? 'les' : 'la').'] LT';\n        },\n        'lastDay' => static function (CarbonInterface $current) {\n            return '[ahir a '.($current->hour !== 1 ? 'les' : 'la').'] LT';\n        },\n        'lastWeek' => static function (CarbonInterface $current) {\n            return '[el] dddd [passat a '.($current->hour !== 1 ? 'les' : 'la').'] LT';\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return $number.(\n            ($period === 'w' || $period === 'W') ? 'a' : (\n                ($number === 1) ? 'r' : (\n                    ($number === 2) ? 'n' : (\n                        ($number === 3) ? 'r' : (\n                            ($number === 4) ? 't' : 'è'\n                        )\n                    )\n                )\n            )\n        );\n    },\n    'months' => ['de gener', 'de febrer', 'de març', 'd\\'abril', 'de maig', 'de juny', 'de juliol', 'd\\'agost', 'de setembre', 'd\\'octubre', 'de novembre', 'de desembre'],\n    'months_standalone' => ['gener', 'febrer', 'març', 'abril', 'maig', 'juny', 'juliol', 'agost', 'setembre', 'octubre', 'novembre', 'desembre'],\n    'months_short' => ['de gen.', 'de febr.', 'de març', 'd\\'abr.', 'de maig', 'de juny', 'de jul.', 'd\\'ag.', 'de set.', 'd\\'oct.', 'de nov.', 'de des.'],\n    'months_short_standalone' => ['gen.', 'febr.', 'març', 'abr.', 'maig', 'juny', 'jul.', 'ag.', 'set.', 'oct.', 'nov.', 'des.'],\n    'months_regexp' => '/(D[oD]?[\\s,]+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['diumenge', 'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres', 'dissabte'],\n    'weekdays_short' => ['dg.', 'dl.', 'dt.', 'dc.', 'dj.', 'dv.', 'ds.'],\n    'weekdays_min' => ['dg', 'dl', 'dt', 'dc', 'dj', 'dv', 'ds'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' i '],\n    'meridiem' => ['a. m.', 'p. m.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SS.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_ISO.php","ext":"php","size":550,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'dddd, YYYY MMMM DD HH:mm',\n    ],\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_UY.php","ext":"php","size":672,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'months' => ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'setiembre', 'octubre', 'noviembre', 'diciembre'],\n    'months_short' => ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'set', 'oct', 'nov', 'dic'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/to.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/to_TO.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_AT.php","ext":"php","size":520,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - sheriffmarley\n * - Timo\n * - Michael Hohl\n * - Namoshek\n * - Bernhard Baumrock (BernhardBaumrock)\n */\nreturn array_replace_recursive(require __DIR__.'/de.php', [\n    'months' => [\n        0 => 'Jänner',\n    ],\n    'months_short' => [\n        0 => 'Jän',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_IO.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dsb.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/dsb_DE.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/so_KE.php","ext":"php","size":337,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn require __DIR__.'/so.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/rwk.php","ext":"php","size":1091,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['utuko', 'kyiukonyi'],\n    'weekdays' => ['Jumapilyi', 'Jumatatuu', 'Jumanne', 'Jumatanu', 'Alhamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'weekdays_min' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprilyi', 'Mei', 'Junyi', 'Julyai', 'Agusti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_ER.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tzm.php","ext":"php","size":2732,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n */\nreturn [\n    'year' => '{1}ⴰⵙⴳⴰⵙ|:count ⵉⵙⴳⴰⵙⵏ',\n    'month' => '{1}ⴰⵢoⵓⵔ|:count ⵉⵢⵢⵉⵔⵏ',\n    'week' => ':count ⵉⵎⴰⵍⴰⵙⵙ',\n    'day' => '{1}ⴰⵙⵙ|:count oⵙⵙⴰⵏ',\n    'hour' => '{1}ⵙⴰⵄⴰ|:count ⵜⴰⵙⵙⴰⵄⵉⵏ',\n    'minute' => '{1}ⵎⵉⵏⵓⴺ|:count ⵎⵉⵏⵓⴺ',\n    'second' => '{1}ⵉⵎⵉⴽ|:count ⵉⵎⵉⴽ',\n    'ago' => 'ⵢⴰⵏ :time',\n    'from_now' => 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ :time',\n    'diff_today' => 'ⴰⵙⴷⵅ',\n    'diff_yesterday' => 'ⴰⵚⴰⵏⵜ',\n    'diff_yesterday_regexp' => 'ⴰⵚⴰⵏⵜ(?:\\\\s+ⴴ)?',\n    'diff_tomorrow' => 'ⴰⵙⴽⴰ',\n    'diff_tomorrow_regexp' => 'ⴰⵙⴽⴰ(?:\\\\s+ⴴ)?',\n    'diff_today_regexp' => 'ⴰⵙⴷⵅ(?:\\\\s+ⴴ)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ⴰⵙⴷⵅ ⴴ] LT',\n        'nextDay' => '[ⴰⵙⴽⴰ ⴴ] LT',\n        'nextWeek' => 'dddd [ⴴ] LT',\n        'lastDay' => '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n        'lastWeek' => 'dddd [ⴴ] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['ⵉⵏⵏⴰⵢⵔ', 'ⴱⵕⴰⵢⵕ', 'ⵎⴰⵕⵚ', 'ⵉⴱⵔⵉⵔ', 'ⵎⴰⵢⵢⵓ', 'ⵢⵓⵏⵢⵓ', 'ⵢⵓⵍⵢⵓⵣ', 'ⵖⵓⵛⵜ', 'ⵛⵓⵜⴰⵏⴱⵉⵔ', 'ⴽⵟⵓⴱⵕ', 'ⵏⵓⵡⴰⵏⴱⵉⵔ', 'ⴷⵓⵊⵏⴱⵉⵔ'],\n    'months_short' => ['ⵉⵏⵏⴰⵢⵔ', 'ⴱⵕⴰⵢⵕ', 'ⵎⴰⵕⵚ', 'ⵉⴱⵔⵉⵔ', 'ⵎⴰⵢⵢⵓ', 'ⵢⵓⵏⵢⵓ', 'ⵢⵓⵍⵢⵓⵣ', 'ⵖⵓⵛⵜ', 'ⵛⵓⵜⴰⵏⴱⵉⵔ', 'ⴽⵟⵓⴱⵕ', 'ⵏⵓⵡⴰⵏⴱⵉⵔ', 'ⴷⵓⵊⵏⴱⵉⵔ'],\n    'weekdays' => ['ⴰⵙⴰⵎⴰⵙ', 'ⴰⵢⵏⴰⵙ', 'ⴰⵙⵉⵏⴰⵙ', 'ⴰⴽⵔⴰⵙ', 'ⴰⴽⵡⴰⵙ', 'ⴰⵙⵉⵎⵡⴰⵙ', 'ⴰⵙⵉⴹⵢⴰⵙ'],\n    'weekdays_short' => ['ⴰⵙⴰⵎⴰⵙ', 'ⴰⵢⵏⴰⵙ', 'ⴰⵙⵉⵏⴰⵙ', 'ⴰⴽⵔⴰⵙ', 'ⴰⴽⵡⴰⵙ', 'ⴰⵙⵉⵎⵡⴰⵙ', 'ⴰⵙⵉⴹⵢⴰⵙ'],\n    'weekdays_min' => ['ⴰⵙⴰⵎⴰⵙ', 'ⴰⵢⵏⴰⵙ', 'ⴰⵙⵉⵏⴰⵙ', 'ⴰⴽⵔⴰⵙ', 'ⴰⴽⵡⴰⵙ', 'ⴰⵙⵉⵎⵡⴰⵙ', 'ⴰⵙⵉⴹⵢⴰⵙ'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wo.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/wo_SN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BB.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fy.php","ext":"php","size":2645,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Tim Fish\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count jier|:count jierren',\n    'a_year' => 'ien jier|:count jierren',\n    'y' => ':count j',\n    'month' => ':count moanne|:count moannen',\n    'a_month' => 'ien moanne|:count moannen',\n    'm' => ':count moa.',\n    'week' => ':count wike|:count wiken',\n    'a_week' => 'in wike|:count wiken',\n    'a' => ':count w.',\n    'day' => ':count dei|:count dagen',\n    'a_day' => 'ien dei|:count dagen',\n    'd' => ':count d.',\n    'hour' => ':count oere|:count oeren',\n    'a_hour' => 'ien oere|:count oeren',\n    'h' => ':count o.',\n    'minute' => ':count minút|:count minuten',\n    'a_minute' => 'ien minút|:count minuten',\n    'min' => ':count min.',\n    'second' => ':count sekonde|:count sekonden',\n    'a_second' => 'in pear sekonden|:count sekonden',\n    's' => ':count s.',\n    'ago' => ':time lyn',\n    'from_now' => 'oer :time',\n    'diff_yesterday' => 'juster',\n    'diff_yesterday_regexp' => 'juster(?:\\\\s+om)?',\n    'diff_today' => 'hjoed',\n    'diff_today_regexp' => 'hjoed(?:\\\\s+om)?',\n    'diff_tomorrow' => 'moarn',\n    'diff_tomorrow_regexp' => 'moarn(?:\\\\s+om)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD-MM-YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[hjoed om] LT',\n        'nextDay' => '[moarn om] LT',\n        'nextWeek' => 'dddd [om] LT',\n        'lastDay' => '[juster om] LT',\n        'lastWeek' => '[ôfrûne] dddd [om] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        return $number.(($number === 1 || $number === 8 || $number >= 20) ? 'ste' : 'de');\n    },\n    'months' => ['jannewaris', 'febrewaris', 'maart', 'april', 'maaie', 'juny', 'july', 'augustus', 'septimber', 'oktober', 'novimber', 'desimber'],\n    'months_short' => ['jan', 'feb', 'mrt', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    'mmm_suffix' => '.',\n    'weekdays' => ['snein', 'moandei', 'tiisdei', 'woansdei', 'tongersdei', 'freed', 'sneon'],\n    'weekdays_short' => ['si.', 'mo.', 'ti.', 'wo.', 'to.', 'fr.', 'so.'],\n    'weekdays_min' => ['Si', 'Mo', 'Ti', 'Wo', 'To', 'Fr', 'So'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' en '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dv.php","ext":"php","size":2703,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n$months = [\n    'ޖަނަވަރީ',\n    'ފެބުރުވަރީ',\n    'މާރިޗު',\n    'އެޕްރީލް',\n    'މޭ',\n    'ޖޫން',\n    'ޖުލައި',\n    'އޮގަސްޓު',\n    'ސެޕްޓެންބަރު',\n    'އޮކްޓޫބަރު',\n    'ނޮވެންބަރު',\n    'ޑިސެންބަރު',\n];\n\n$weekdays = [\n    'އާދިއްތަ',\n    'ހޯމަ',\n    'އަންގާރަ',\n    'ބުދަ',\n    'ބުރާސްފަތި',\n    'ހުކުރު',\n    'ހޮނިހިރު',\n];\n\n/*\n * Authors:\n * - Josh Soref\n * - Jawish Hameed\n * - Saiph Muhammad\n */\nreturn [\n    'year' => ':count '.'އަހަރު',\n    'a_year' => '{1}'.'އަހަރެއް'.'|:count '.'އަހަރު',\n    'month' => ':count '.'މަސް',\n    'a_month' => '{1}'.'މަހެއް'.'|:count '.'މަސް',\n    'week' => ':count '.'ހަފްތާ',\n    'a_week' => '{1}'.'ސިކުންތުކޮޅެއް'.'|:count '.'ހަފްތާ',\n    'day' => ':count '.'ދުވަސް',\n    'a_day' => '{1}'.'ދުވަހެއް'.'|:count '.'ދުވަސް',\n    'hour' => ':count '.'ގަޑިއިރު',\n    'a_hour' => '{1}'.'ގަޑިއިރެއް'.'|:count '.'ގަޑިއިރު',\n    'minute' => ':count '.'މިނިޓު',\n    'a_minute' => '{1}'.'މިނިޓެއް'.'|:count '.'މިނިޓު',\n    'second' => ':count '.'ސިކުންތު',\n    'a_second' => '{1}'.'ސިކުންތުކޮޅެއް'.'|:count '.'ސިކުންތު',\n    'ago' => 'ކުރިން :time',\n    'from_now' => 'ތެރޭގައި :time',\n    'after' => ':time ފަހުން',\n    'before' => ':time ކުރި',\n    'diff_yesterday' => 'އިއްޔެ',\n    'diff_today' => 'މިއަދު',\n    'diff_tomorrow' => 'މާދަމާ',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[މިއަދު] LT',\n        'nextDay' => '[މާދަމާ] LT',\n        'nextWeek' => 'dddd LT',\n        'lastDay' => '[އިއްޔެ] LT',\n        'lastWeek' => '[ފާއިތުވި] dddd LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['މކ', 'މފ'],\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => $weekdays,\n    'weekdays_short' => $weekdays,\n    'weekdays_min' => ['އާދި', 'ހޯމަ', 'އަން', 'ބުދަ', 'ބުރާ', 'ހުކު', 'ހޮނި'],\n    'list' => [', ', ' އަދި '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nr_ZA.php","ext":"php","size":1041,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Janabari', 'uFeberbari', 'uMatjhi', 'u-Apreli', 'Meyi', 'Juni', 'Julayi', 'Arhostosi', 'Septemba', 'Oktoba', 'Usinyikhaba', 'Disemba'],\n    'months_short' => ['Jan', 'Feb', 'Mat', 'Apr', 'Mey', 'Jun', 'Jul', 'Arh', 'Sep', 'Okt', 'Usi', 'Dis'],\n    'weekdays' => ['uSonto', 'uMvulo', 'uLesibili', 'lesithathu', 'uLesine', 'ngoLesihlanu', 'umGqibelo'],\n    'weekdays_short' => ['Son', 'Mvu', 'Bil', 'Tha', 'Ne', 'Hla', 'Gqi'],\n    'weekdays_min' => ['Son', 'Mvu', 'Bil', 'Tha', 'Ne', 'Hla', 'Gqi'],\n    'day_of_first_week_of_year' => 1,\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_VE.php","ext":"php","size":422,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BW.php","ext":"php","size":327,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/az_Cyrl.php","ext":"php","size":1207,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/az.php', [\n    'weekdays' => ['базар', 'базар ертәси', 'чәршәнбә ахшамы', 'чәршәнбә', 'ҹүмә ахшамы', 'ҹүмә', 'шәнбә'],\n    'weekdays_short' => ['Б.', 'Б.Е.', 'Ч.А.', 'Ч.', 'Ҹ.А.', 'Ҹ.', 'Ш.'],\n    'weekdays_min' => ['Б.', 'Б.Е.', 'Ч.А.', 'Ч.', 'Ҹ.А.', 'Ҹ.', 'Ш.'],\n    'months' => ['јанвар', 'феврал', 'март', 'апрел', 'май', 'ијун', 'ијул', 'август', 'сентјабр', 'октјабр', 'нојабр', 'декабр'],\n    'months_short' => ['јан', 'фев', 'мар', 'апр', 'май', 'ијн', 'ијл', 'авг', 'сен', 'окт', 'ној', 'дек'],\n    'months_standalone' => ['Јанвар', 'Феврал', 'Март', 'Апрел', 'Май', 'Ијун', 'Ијул', 'Август', 'Сентјабр', 'Октјабр', 'Нојабр', 'Декабр'],\n    'meridiem' => ['а', 'п'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pa_Arab.php","ext":"php","size":1216,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ur.php', [\n    'weekdays' => ['اتوار', 'پیر', 'منگل', 'بُدھ', 'جمعرات', 'جمعہ', 'ہفتہ'],\n    'weekdays_short' => ['اتوار', 'پیر', 'منگل', 'بُدھ', 'جمعرات', 'جمعہ', 'ہفتہ'],\n    'weekdays_min' => ['اتوار', 'پیر', 'منگل', 'بُدھ', 'جمعرات', 'جمعہ', 'ہفتہ'],\n    'months' => ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئ', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئ', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd, DD MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ln_CD.php","ext":"php","size":343,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ubuntu René Manassé GALEKWA renemanasse@gmail.com\n */\nreturn require __DIR__.'/ln.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_DJ.php","ext":"php","size":297,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kw_GB.php","ext":"php","size":1681,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Alastair McKinstry    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['mis Genver', 'mis Hwevrer', 'mis Meurth', 'mis Ebrel', 'mis Me', 'mis Metheven', 'mis Gortheren', 'mis Est', 'mis Gwynngala', 'mis Hedra', 'mis Du', 'mis Kevardhu'],\n    'months_short' => ['Gen', 'Hwe', 'Meu', 'Ebr', 'Me', 'Met', 'Gor', 'Est', 'Gwn', 'Hed', 'Du', 'Kev'],\n    'weekdays' => ['De Sul', 'De Lun', 'De Merth', 'De Merher', 'De Yow', 'De Gwener', 'De Sadorn'],\n    'weekdays_short' => ['Sul', 'Lun', 'Mth', 'Mhr', 'Yow', 'Gwe', 'Sad'],\n    'weekdays_min' => ['Sul', 'Lun', 'Mth', 'Mhr', 'Yow', 'Gwe', 'Sad'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count bledhen',\n    'y' => ':count bledhen',\n    'a_year' => ':count bledhen',\n\n    'month' => ':count mis',\n    'm' => ':count mis',\n    'a_month' => ':count mis',\n\n    'week' => ':count seythen',\n    'w' => ':count seythen',\n    'a_week' => ':count seythen',\n\n    'day' => ':count dydh',\n    'd' => ':count dydh',\n    'a_day' => ':count dydh',\n\n    'hour' => ':count eur',\n    'h' => ':count eur',\n    'a_hour' => ':count eur',\n\n    'minute' => ':count mynysen',\n    'min' => ':count mynysen',\n    'a_minute' => ':count mynysen',\n\n    'second' => ':count pryjwyth',\n    's' => ':count pryjwyth',\n    'a_second' => ':count pryjwyth',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_HN.php","ext":"php","size":422,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/si.php","ext":"php","size":3421,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Serhan Apaydın\n * - JD Isaacks\n * - Malinda Weerasinghe (MalindaWMD)\n */\nreturn [\n    'year' => '{1}වසර 1|වසර :count',\n    'a_year' => '{1}වසරක්|වසර :count',\n    'month' => '{1}මාස 1|මාස :count',\n    'a_month' => '{1}මාසය|මාස :count',\n    'week' => '{1}සති 1|සති :count',\n    'a_week' => '{1}සතියක්|සති :count',\n    'day' => '{1}දින 1|දින :count',\n    'a_day' => '{1}දිනක්|දින :count',\n    'hour' => '{1}පැය 1|පැය :count',\n    'a_hour' => '{1}පැයක්|පැය :count',\n    'minute' => '{1}මිනිත්තු 1|මිනිත්තු :count',\n    'a_minute' => '{1}මිනිත්තුවක්|මිනිත්තු :count',\n    'second' => '{1}තත්පර 1|තත්පර :count',\n    'a_second' => '{1}තත්පර කිහිපයකට|තත්පර :count',\n    'ago' => ':time කට පෙර',\n    'from_now' => static function ($time) {\n        if (preg_match('/දින \\d+/u', $time)) {\n            return $time.' න්';\n        }\n\n        return $time.' කින්';\n    },\n    'before' => ':time කට පෙර',\n    'after' => static function ($time) {\n        if (preg_match('/දින \\d+/u', $time)) {\n            return $time.' න්';\n        }\n\n        return $time.' කින්';\n    },\n    'diff_now' => 'දැන්',\n    'diff_today' => 'අද',\n    'diff_yesterday' => 'ඊයේ',\n    'diff_tomorrow' => 'හෙට',\n    'formats' => [\n        'LT' => 'a h:mm',\n        'LTS' => 'a h:mm:ss',\n        'L' => 'YYYY/MM/DD',\n        'LL' => 'YYYY MMMM D',\n        'LLL' => 'YYYY MMMM D, a h:mm',\n        'LLLL' => 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',\n    ],\n    'calendar' => [\n        'sameDay' => '[අද] LT[ට]',\n        'nextDay' => '[හෙට] LT[ට]',\n        'nextWeek' => 'dddd LT[ට]',\n        'lastDay' => '[ඊයේ] LT[ට]',\n        'lastWeek' => '[පසුගිය] dddd LT[ට]',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number වැනි',\n    'meridiem' => ['පෙර වරු', 'පස් වරු', 'පෙ.ව.', 'ප.ව.'],\n    'months' => ['ජනවාරි', 'පෙබරවාරි', 'මාර්තු', 'අප්‍රේල්', 'මැයි', 'ජූනි', 'ජූලි', 'අගෝස්තු', 'සැප්තැම්බර්', 'ඔක්තෝබර්', 'නොවැම්බර්', 'දෙසැම්බර්'],\n    'months_short' => ['ජන', 'පෙබ', 'මාර්', 'අප්', 'මැයි', 'ජූනි', 'ජූලි', 'අගෝ', 'සැප්', 'ඔක්', 'නොවැ', 'දෙසැ'],\n    'weekdays' => ['ඉරිදා', 'සඳුදා', 'අඟහරුවාදා', 'බදාදා', 'බ්‍රහස්පතින්දා', 'සිකුරාදා', 'සෙනසුරාදා'],\n    'weekdays_short' => ['ඉරි', 'සඳු', 'අඟ', 'බදා', 'බ්‍රහ', 'සිකු', 'සෙන'],\n    'weekdays_min' => ['ඉ', 'ස', 'අ', 'බ', 'බ්‍ර', 'සි', 'සෙ'],\n    'first_day_of_week' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GI.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/luy.php","ext":"php","size":2114,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'weekdays' => ['Jumapiri', 'Jumatatu', 'Jumanne', 'Jumatano', 'Murwa wa Kanne', 'Murwa wa Katano', 'Jumamosi'],\n    'weekdays_short' => ['J2', 'J3', 'J4', 'J5', 'Al', 'Ij', 'J1'],\n    'weekdays_min' => ['J2', 'J3', 'J4', 'J5', 'Al', 'Ij', 'J1'],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprili', 'Mei', 'Juni', 'Julai', 'Agosti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    // Too unreliable\n    /*\n    'year' => ':count liliino', // less reliable\n    'y' => ':count liliino', // less reliable\n    'a_year' => ':count liliino', // less reliable\n\n    'month' => ':count kumwesi', // less reliable\n    'm' => ':count kumwesi', // less reliable\n    'a_month' => ':count kumwesi', // less reliable\n\n    'week' => ':count olutambi', // less reliable\n    'w' => ':count olutambi', // less reliable\n    'a_week' => ':count olutambi', // less reliable\n\n    'day' => ':count luno', // less reliable\n    'd' => ':count luno', // less reliable\n    'a_day' => ':count luno', // less reliable\n\n    'hour' => ':count ekengele', // less reliable\n    'h' => ':count ekengele', // less reliable\n    'a_hour' => ':count ekengele', // less reliable\n\n    'minute' => ':count omundu', // less reliable\n    'min' => ':count omundu', // less reliable\n    'a_minute' => ':count omundu', // less reliable\n\n    'second' => ':count liliino', // less reliable\n    's' => ':count liliino', // less reliable\n    'a_second' => ':count liliino', // less reliable\n    */\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_PT.php","ext":"php","size":971,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/pt.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro'],\n    'months_short' => ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez'],\n    'weekdays' => ['domingo', 'segunda', 'terça', 'quarta', 'quinta', 'sexta', 'sábado'],\n    'weekdays_short' => ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'],\n    'weekdays_min' => ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/haw.php","ext":"php","size":1695,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'months' => ['Ianuali', 'Pepeluali', 'Malaki', 'ʻApelila', 'Mei', 'Iune', 'Iulai', 'ʻAukake', 'Kepakemapa', 'ʻOkakopa', 'Nowemapa', 'Kekemapa'],\n    'months_short' => ['Ian.', 'Pep.', 'Mal.', 'ʻAp.', 'Mei', 'Iun.', 'Iul.', 'ʻAu.', 'Kep.', 'ʻOk.', 'Now.', 'Kek.'],\n    'weekdays' => ['Lāpule', 'Poʻakahi', 'Poʻalua', 'Poʻakolu', 'Poʻahā', 'Poʻalima', 'Poʻaono'],\n    'weekdays_short' => ['LP', 'P1', 'P2', 'P3', 'P4', 'P5', 'P6'],\n    'weekdays_min' => ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm a',\n    ],\n\n    'year' => ':count makahiki',\n    'y' => ':count makahiki',\n    'a_year' => ':count makahiki',\n\n    'month' => ':count mahina',\n    'm' => ':count mahina',\n    'a_month' => ':count mahina',\n\n    'week' => ':count pule',\n    'w' => ':count pule',\n    'a_week' => ':count pule',\n\n    'day' => ':count lā',\n    'd' => ':count lā',\n    'a_day' => ':count lā',\n\n    'hour' => ':count hola',\n    'h' => ':count hola',\n    'a_hour' => ':count hola',\n\n    'minute' => ':count minuke',\n    'min' => ':count minuke',\n    'a_minute' => ':count minuke',\n\n    'second' => ':count lua',\n    's' => ':count lua',\n    'a_second' => ':count lua',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_IC.php","ext":"php","size":327,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_IL.php","ext":"php","size":297,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_ML.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mn_MN.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/mn.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/os_RU.php","ext":"php","size":1991,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['январы', 'февралы', 'мартъийы', 'апрелы', 'майы', 'июны', 'июлы', 'августы', 'сентябры', 'октябры', 'ноябры', 'декабры'],\n    'months_short' => ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    'weekdays' => ['Хуыцаубон', 'Къуырисæр', 'Дыццæг', 'Æртыццæг', 'Цыппæрæм', 'Майрæмбон', 'Сабат'],\n    'weekdays_short' => ['Хцб', 'Крс', 'Дцг', 'Æрт', 'Цпр', 'Мрб', 'Сбт'],\n    'weekdays_min' => ['Хцб', 'Крс', 'Дцг', 'Æрт', 'Цпр', 'Мрб', 'Сбт'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'minute' => ':count гыццыл', // less reliable\n    'min' => ':count гыццыл', // less reliable\n    'a_minute' => ':count гыццыл', // less reliable\n\n    'second' => ':count æндæр', // less reliable\n    's' => ':count æндæр', // less reliable\n    'a_second' => ':count æндæр', // less reliable\n\n    'year' => ':count аз',\n    'y' => ':count аз',\n    'a_year' => ':count аз',\n\n    'month' => ':count мӕй',\n    'm' => ':count мӕй',\n    'a_month' => ':count мӕй',\n\n    'week' => ':count къуыри',\n    'w' => ':count къуыри',\n    'a_week' => ':count къуыри',\n\n    'day' => ':count бон',\n    'd' => ':count бон',\n    'a_day' => ':count бон',\n\n    'hour' => ':count сахат',\n    'h' => ':count сахат',\n    'a_hour' => ':count сахат',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ff_MR.php","ext":"php","size":521,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ff.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/teo.php","ext":"php","size":1116,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ta.php', [\n    'meridiem' => ['Taparachu', 'Ebongi'],\n    'weekdays' => ['Nakaejuma', 'Nakaebarasa', 'Nakaare', 'Nakauni', 'Nakaung’on', 'Nakakany', 'Nakasabiti'],\n    'weekdays_short' => ['Jum', 'Bar', 'Aar', 'Uni', 'Ung', 'Kan', 'Sab'],\n    'weekdays_min' => ['Jum', 'Bar', 'Aar', 'Uni', 'Ung', 'Kan', 'Sab'],\n    'months' => ['Orara', 'Omuk', 'Okwamg’', 'Odung’el', 'Omaruk', 'Omodok’king’ol', 'Ojola', 'Opedel', 'Osokosokoma', 'Otibar', 'Olabor', 'Opoo'],\n    'months_short' => ['Rar', 'Muk', 'Kwa', 'Dun', 'Mar', 'Mod', 'Jol', 'Ped', 'Sok', 'Tib', 'Lab', 'Poo'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bho.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/bho_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_VG.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cy_GB.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/cy.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sv.php","ext":"php","size":2855,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Kristoffer Snabb\n * - JD Isaacks\n * - Jens Herlevsen\n * - Nightpine\n * - Anders Nygren (litemerafrukt)\n */\nreturn [\n    'year' => ':count år',\n    'a_year' => 'ett år|:count år',\n    'y' => ':count år',\n    'month' => ':count månad|:count månader',\n    'a_month' => 'en månad|:count månader',\n    'm' => ':count mån',\n    'week' => ':count vecka|:count veckor',\n    'a_week' => 'en vecka|:count veckor',\n    'w' => ':count v',\n    'day' => ':count dag|:count dagar',\n    'a_day' => 'en dag|:count dagar',\n    'd' => ':count dgr',\n    'hour' => ':count timme|:count timmar',\n    'a_hour' => 'en timme|:count timmar',\n    'h' => ':count tim',\n    'minute' => ':count minut|:count minuter',\n    'a_minute' => 'en minut|:count minuter',\n    'min' => ':count min',\n    'second' => ':count sekund|:count sekunder',\n    'a_second' => 'några sekunder|:count sekunder',\n    's' => ':count s',\n    'ago' => 'för :time sedan',\n    'from_now' => 'om :time',\n    'after' => ':time efter',\n    'before' => ':time före',\n    'diff_now' => 'nu',\n    'diff_today' => 'I dag',\n    'diff_yesterday' => 'i går',\n    'diff_yesterday_regexp' => 'I går',\n    'diff_tomorrow' => 'i morgon',\n    'diff_tomorrow_regexp' => 'I morgon',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY [kl.] HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY [kl.] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[I dag] LT',\n        'nextDay' => '[I morgon] LT',\n        'nextWeek' => '[På] dddd LT',\n        'lastDay' => '[I går] LT',\n        'lastWeek' => '[I] dddd[s] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        $lastDigit = $number % 10;\n\n        return $number.(\n            ((int) ($number % 100 / 10) === 1) ? 'e' : (\n                ($lastDigit === 1 || $lastDigit === 2) ? 'a' : 'e'\n            )\n        );\n    },\n    'months' => ['januari', 'februari', 'mars', 'april', 'maj', 'juni', 'juli', 'augusti', 'september', 'oktober', 'november', 'december'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    'weekdays' => ['söndag', 'måndag', 'tisdag', 'onsdag', 'torsdag', 'fredag', 'lördag'],\n    'weekdays_short' => ['sön', 'mån', 'tis', 'ons', 'tors', 'fre', 'lör'],\n    'weekdays_min' => ['sö', 'må', 'ti', 'on', 'to', 'fr', 'lö'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' och '],\n    'meridiem' => ['fm', 'em'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lij_IT.php","ext":"php","size":1768,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Gastaldi    alessio.gastaldi@libero.it\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['zenâ', 'fevrâ', 'marzo', 'avrî', 'mazzo', 'zûgno', 'lûggio', 'agosto', 'settembre', 'ottobre', 'novembre', 'dixembre'],\n    'months_short' => ['zen', 'fev', 'mar', 'arv', 'maz', 'zûg', 'lûg', 'ago', 'set', 'ött', 'nov', 'dix'],\n    'weekdays' => ['domenega', 'lûnedì', 'martedì', 'mercUrdì', 'zêggia', 'venardì', 'sabbo'],\n    'weekdays_short' => ['dom', 'lûn', 'mar', 'mer', 'zêu', 'ven', 'sab'],\n    'weekdays_min' => ['dom', 'lûn', 'mar', 'mer', 'zêu', 'ven', 'sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count etæ', // less reliable\n    'y' => ':count etæ', // less reliable\n    'a_year' => ':count etæ', // less reliable\n\n    'month' => ':count meize',\n    'm' => ':count meize',\n    'a_month' => ':count meize',\n\n    'week' => ':count settemannha',\n    'w' => ':count settemannha',\n    'a_week' => ':count settemannha',\n\n    'day' => ':count giorno',\n    'd' => ':count giorno',\n    'a_day' => ':count giorno',\n\n    'hour' => ':count reléuio', // less reliable\n    'h' => ':count reléuio', // less reliable\n    'a_hour' => ':count reléuio', // less reliable\n\n    'minute' => ':count menûo',\n    'min' => ':count menûo',\n    'a_minute' => ':count menûo',\n\n    'second' => ':count segondo',\n    's' => ':count segondo',\n    'a_second' => ':count segondo',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_LU.php","ext":"php","size":409,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/de.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nan_TW.php","ext":"php","size":1719,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY年MM月DD日',\n    ],\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => [' 1月', ' 2月', ' 3月', ' 4月', ' 5月', ' 6月', ' 7月', ' 8月', ' 9月', '10月', '11月', '12月'],\n    'weekdays' => ['禮拜日', '禮拜一', '禮拜二', '禮拜三', '禮拜四', '禮拜五', '禮拜六'],\n    'weekdays_short' => ['日', '一', '二', '三', '四', '五', '六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['頂晡', '下晡'],\n\n    'year' => ':count 年',\n    'y' => ':count 年',\n    'a_year' => ':count 年',\n\n    'month' => ':count goe̍h',\n    'm' => ':count goe̍h',\n    'a_month' => ':count goe̍h',\n\n    'week' => ':count lé-pài',\n    'w' => ':count lé-pài',\n    'a_week' => ':count lé-pài',\n\n    'day' => ':count 日',\n    'd' => ':count 日',\n    'a_day' => ':count 日',\n\n    'hour' => ':count tiám-cheng',\n    'h' => ':count tiám-cheng',\n    'a_hour' => ':count tiám-cheng',\n\n    'minute' => ':count Hun-cheng',\n    'min' => ':count Hun-cheng',\n    'a_minute' => ':count Hun-cheng',\n\n    'second' => ':count Bió',\n    's' => ':count Bió',\n    'a_second' => ':count Bió',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/vai_Latn.php","ext":"php","size":1139,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['lahadi', 'tɛɛnɛɛ', 'talata', 'alaba', 'aimisa', 'aijima', 'siɓiti'],\n    'weekdays_short' => ['lahadi', 'tɛɛnɛɛ', 'talata', 'alaba', 'aimisa', 'aijima', 'siɓiti'],\n    'weekdays_min' => ['lahadi', 'tɛɛnɛɛ', 'talata', 'alaba', 'aimisa', 'aijima', 'siɓiti'],\n    'months' => ['luukao kemã', 'ɓandaɓu', 'vɔɔ', 'fulu', 'goo', '6', '7', 'kɔnde', 'saah', 'galo', 'kenpkato ɓololɔ', 'luukao lɔma'],\n    'months_short' => ['luukao kemã', 'ɓandaɓu', 'vɔɔ', 'fulu', 'goo', '6', '7', 'kɔnde', 'saah', 'galo', 'kenpkato ɓololɔ', 'luukao lɔma'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/he_IL.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/he.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/iw.php","ext":"php","size":2059,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'months' => ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'],\n    'months_short' => ['ינו׳', 'פבר׳', 'מרץ', 'אפר׳', 'מאי', 'יוני', 'יולי', 'אוג׳', 'ספט׳', 'אוק׳', 'נוב׳', 'דצמ׳'],\n    'weekdays' => ['יום ראשון', 'יום שני', 'יום שלישי', 'יום רביעי', 'יום חמישי', 'יום שישי', 'יום שבת'],\n    'weekdays_short' => ['יום א׳', 'יום ב׳', 'יום ג׳', 'יום ד׳', 'יום ה׳', 'יום ו׳', 'שבת'],\n    'weekdays_min' => ['א׳', 'ב׳', 'ג׳', 'ד׳', 'ה׳', 'ו׳', 'ש׳'],\n    'meridiem' => ['לפנה״צ', 'אחה״צ'],\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'D.M.YYYY',\n        'LL' => 'D בMMM YYYY',\n        'LLL' => 'D בMMMM YYYY H:mm',\n        'LLLL' => 'dddd, D בMMMM YYYY H:mm',\n    ],\n\n    'year' => ':count שנה',\n    'y' => ':count שנה',\n    'a_year' => ':count שנה',\n\n    'month' => ':count חודש',\n    'm' => ':count חודש',\n    'a_month' => ':count חודש',\n\n    'week' => ':count שבוע',\n    'w' => ':count שבוע',\n    'a_week' => ':count שבוע',\n\n    'day' => ':count יום',\n    'd' => ':count יום',\n    'a_day' => ':count יום',\n\n    'hour' => ':count שעה',\n    'h' => ':count שעה',\n    'a_hour' => ':count שעה',\n\n    'minute' => ':count דקה',\n    'min' => ':count דקה',\n    'a_minute' => ':count דקה',\n\n    'second' => ':count שניה',\n    's' => ':count שניה',\n    'a_second' => ':count שניה',\n\n    'ago' => 'לפני :time',\n    'from_now' => 'בעוד :time',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nso_ZA.php","ext":"php","size":1716,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Janaware', 'Febereware', 'Matšhe', 'Aprele', 'Mei', 'June', 'Julae', 'Agostose', 'Setemere', 'Oktobere', 'Nofemere', 'Disemere'],\n    'months_short' => ['Jan', 'Feb', 'Mat', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Set', 'Okt', 'Nof', 'Dis'],\n    'weekdays' => ['LaMorena', 'Mošupologo', 'Labobedi', 'Laboraro', 'Labone', 'Labohlano', 'Mokibelo'],\n    'weekdays_short' => ['Son', 'Moš', 'Bed', 'Rar', 'Ne', 'Hla', 'Mok'],\n    'weekdays_min' => ['Son', 'Moš', 'Bed', 'Rar', 'Ne', 'Hla', 'Mok'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count ngwaga',\n    'y' => ':count ngwaga',\n    'a_year' => ':count ngwaga',\n\n    'month' => ':count Kgwedi',\n    'm' => ':count Kgwedi',\n    'a_month' => ':count Kgwedi',\n\n    'week' => ':count Beke',\n    'w' => ':count Beke',\n    'a_week' => ':count Beke',\n\n    'day' => ':count Letšatši',\n    'd' => ':count Letšatši',\n    'a_day' => ':count Letšatši',\n\n    'hour' => ':count Iri',\n    'h' => ':count Iri',\n    'a_hour' => ':count Iri',\n\n    'minute' => ':count Motsotso',\n    'min' => ':count Motsotso',\n    'a_minute' => ':count Motsotso',\n\n    'second' => ':count motsotswana',\n    's' => ':count motsotswana',\n    'a_second' => ':count motsotswana',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sd_IN.php","ext":"php","size":1185,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat, Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/sd.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['جنوري', 'فبروري', 'مارچ', 'اپريل', 'مي', 'جون', 'جولاءِ', 'آگسٽ', 'سيپٽيمبر', 'آڪٽوبر', 'نومبر', 'ڊسمبر'],\n    'months_short' => ['جنوري', 'فبروري', 'مارچ', 'اپريل', 'مي', 'جون', 'جولاءِ', 'آگسٽ', 'سيپٽيمبر', 'آڪٽوبر', 'نومبر', 'ڊسمبر'],\n    'weekdays' => ['آرتوارُ', 'سومرُ', 'منگلُ', 'ٻُڌرُ', 'وسپت', 'جُمو', 'ڇنڇر'],\n    'weekdays_short' => ['آرتوارُ', 'سومرُ', 'منگلُ', 'ٻُڌرُ', 'وسپت', 'جُمو', 'ڇنڇر'],\n    'weekdays_min' => ['آرتوارُ', 'سومرُ', 'منگلُ', 'ٻُڌرُ', 'وسپت', 'جُمو', 'ڇنڇر'],\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gom.php","ext":"php","size":337,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/gom_Latn.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fo_DK.php","ext":"php","size":467,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fo.php', [\n    'formats' => [\n        'L' => 'DD.MM.yy',\n        'LL' => 'DD.MM.YYYY',\n        'LLL' => 'D. MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY, HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nso.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/nso_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/xh.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/xh_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mg.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mg_MG.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MS.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yuw.php","ext":"php","size":335,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/yuw_PG.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/am.php","ext":"php","size":334,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/am_ET.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_ZA.php","ext":"php","size":617,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YY',\n        'LL' => 'MMMM DD, YYYY',\n        'LLL' => 'DD MMM HH:mm',\n        'LLLL' => 'MMMM DD, YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ga_IE.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ga.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_PF.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MU.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_PM.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uz_UZ@cyrillic.php","ext":"php","size":1196,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Mashrab Kuvatov Mashrab Kuvatov, Pablo Saratxaga kmashrab@uni-bremen.de, pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/uz.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Январ', 'Феврал', 'Март', 'Апрел', 'Май', 'Июн', 'Июл', 'Август', 'Сентябр', 'Октябр', 'Ноябр', 'Декабр'],\n    'months_short' => ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    'weekdays' => ['Якшанба', 'Душанба', 'Сешанба', 'Чоршанба', 'Пайшанба', 'Жума', 'Шанба'],\n    'weekdays_short' => ['Якш', 'Душ', 'Сеш', 'Чор', 'Пай', 'Жум', 'Шан'],\n    'weekdays_min' => ['Якш', 'Душ', 'Сеш', 'Чор', 'Пай', 'Жум', 'Шан'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_Shakl.php","ext":"php","size":5068,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Abdellah Chadidi\n * - Atef Ben Ali (atefBB)\n * - Mohamed Sabil (mohamedsabil83)\n */\n// Same for long and short\n$months = [\n    // @TODO add shakl to months\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سَنَة', '{1}سَنَة', '{2}سَنَتَيْن', ']2,11[:count سَنَوَات', ']10,Inf[:count سَنَة']),\n    'a_year' => implode('|', ['{0}:count سَنَة', '{1}سَنَة', '{2}سَنَتَيْن', ']2,11[:count سَنَوَات', ']10,Inf[:count سَنَة']),\n    'month' => implode('|', ['{0}:count شَهْرَ', '{1}شَهْرَ', '{2}شَهْرَيْن', ']2,11[:count أَشْهُر', ']10,Inf[:count شَهْرَ']),\n    'a_month' => implode('|', ['{0}:count شَهْرَ', '{1}شَهْرَ', '{2}شَهْرَيْن', ']2,11[:count أَشْهُر', ']10,Inf[:count شَهْرَ']),\n    'week' => implode('|', ['{0}:count أُسْبُوع', '{1}أُسْبُوع', '{2}أُسْبُوعَيْن', ']2,11[:count أَسَابِيع', ']10,Inf[:count أُسْبُوع']),\n    'a_week' => implode('|', ['{0}:count أُسْبُوع', '{1}أُسْبُوع', '{2}أُسْبُوعَيْن', ']2,11[:count أَسَابِيع', ']10,Inf[:count أُسْبُوع']),\n    'day' => implode('|', ['{0}:count يَوْم', '{1}يَوْم', '{2}يَوْمَيْن', ']2,11[:count أَيَّام', ']10,Inf[:count يَوْم']),\n    'a_day' => implode('|', ['{0}:count يَوْم', '{1}يَوْم', '{2}يَوْمَيْن', ']2,11[:count أَيَّام', ']10,Inf[:count يَوْم']),\n    'hour' => implode('|', ['{0}:count سَاعَة', '{1}سَاعَة', '{2}سَاعَتَيْن', ']2,11[:count سَاعَات', ']10,Inf[:count سَاعَة']),\n    'a_hour' => implode('|', ['{0}:count سَاعَة', '{1}سَاعَة', '{2}سَاعَتَيْن', ']2,11[:count سَاعَات', ']10,Inf[:count سَاعَة']),\n    'minute' => implode('|', ['{0}:count دَقِيقَة', '{1}دَقِيقَة', '{2}دَقِيقَتَيْن', ']2,11[:count دَقَائِق', ']10,Inf[:count دَقِيقَة']),\n    'a_minute' => implode('|', ['{0}:count دَقِيقَة', '{1}دَقِيقَة', '{2}دَقِيقَتَيْن', ']2,11[:count دَقَائِق', ']10,Inf[:count دَقِيقَة']),\n    'second' => implode('|', ['{0}:count ثَانِيَة', '{1}ثَانِيَة', '{2}ثَانِيَتَيْن', ']2,11[:count ثَوَان', ']10,Inf[:count ثَانِيَة']),\n    'a_second' => implode('|', ['{0}:count ثَانِيَة', '{1}ثَانِيَة', '{2}ثَانِيَتَيْن', ']2,11[:count ثَوَان', ']10,Inf[:count ثَانِيَة']),\n    'ago' => 'مُنْذُ :time',\n    'from_now' => 'مِنَ الْآن :time',\n    'after' => 'بَعْدَ :time',\n    'before' => 'قَبْلَ :time',\n\n    // @TODO add shakl to translations below\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدًا(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'اث', 'ثل', 'أر', 'خم', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم عند الساعة] LT',\n        'nextDay' => '[غدًا عند الساعة] LT',\n        'nextWeek' => 'dddd [عند الساعة] LT',\n        'lastDay' => '[أمس عند الساعة] LT',\n        'lastWeek' => 'dddd [عند الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/khq.php","ext":"php","size":1084,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Adduha', 'Aluula'],\n    'weekdays' => ['Alhadi', 'Atini', 'Atalata', 'Alarba', 'Alhamiisa', 'Aljuma', 'Assabdu'],\n    'weekdays_short' => ['Alh', 'Ati', 'Ata', 'Ala', 'Alm', 'Alj', 'Ass'],\n    'weekdays_min' => ['Alh', 'Ati', 'Ata', 'Ala', 'Alm', 'Alj', 'Ass'],\n    'months' => ['Žanwiye', 'Feewiriye', 'Marsi', 'Awiril', 'Me', 'Žuweŋ', 'Žuyye', 'Ut', 'Sektanbur', 'Oktoobur', 'Noowanbur', 'Deesanbur'],\n    'months_short' => ['Žan', 'Fee', 'Mar', 'Awi', 'Me', 'Žuw', 'Žuy', 'Ut', 'Sek', 'Okt', 'Noo', 'Dee'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uz_UZ.php","ext":"php","size":1059,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Bobir Ismailov Bobir Ismailov, Pablo Saratxaga, Mashrab Kuvatov bobir_is@yahoo.com, pablo@mandrakesoft.com, kmashrab@uni-bremen.de\n */\nreturn array_replace_recursive(require __DIR__.'/uz_Latn.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'Iyun', 'Iyul', 'Avgust', 'Sentabr', 'Oktabr', 'Noyabr', 'Dekabr'],\n    'months_short' => ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'Iyn', 'Iyl', 'Avg', 'Sen', 'Okt', 'Noy', 'Dek'],\n    'weekdays' => ['Yakshanba', 'Dushanba', 'Seshanba', 'Chorshanba', 'Payshanba', 'Juma', 'Shanba'],\n    'weekdays_short' => ['Yak', 'Du', 'Se', 'Cho', 'Pay', 'Ju', 'Sha'],\n    'weekdays_min' => ['Yak', 'Du', 'Se', 'Cho', 'Pay', 'Ju', 'Sha'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_CV.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nus.php","ext":"php","size":1469,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['RW', 'TŊ'],\n    'weekdays' => ['Cäŋ kuɔth', 'Jiec la̱t', 'Rɛw lätni', 'Diɔ̱k lätni', 'Ŋuaan lätni', 'Dhieec lätni', 'Bäkɛl lätni'],\n    'weekdays_short' => ['Cäŋ', 'Jiec', 'Rɛw', 'Diɔ̱k', 'Ŋuaan', 'Dhieec', 'Bäkɛl'],\n    'weekdays_min' => ['Cäŋ', 'Jiec', 'Rɛw', 'Diɔ̱k', 'Ŋuaan', 'Dhieec', 'Bäkɛl'],\n    'months' => ['Tiop thar pɛt', 'Pɛt', 'Duɔ̱ɔ̱ŋ', 'Guak', 'Duät', 'Kornyoot', 'Pay yie̱tni', 'Tho̱o̱r', 'Tɛɛr', 'Laath', 'Kur', 'Tio̱p in di̱i̱t'],\n    'months_short' => ['Tiop', 'Pɛt', 'Duɔ̱ɔ̱', 'Guak', 'Duä', 'Kor', 'Pay', 'Thoo', 'Tɛɛ', 'Laa', 'Kur', 'Tid'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n\n    'year' => ':count jiök', // less reliable\n    'y' => ':count jiök', // less reliable\n    'a_year' => ':count jiök', // less reliable\n\n    'month' => ':count pay', // less reliable\n    'm' => ':count pay', // less reliable\n    'a_month' => ':count pay', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_SS.php","ext":"php","size":1150,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_PE.php","ext":"php","size":422,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sv_AX.php","ext":"php","size":464,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/sv.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/aa_ET.php","ext":"php","size":1051,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Qunxa Garablu', 'Kudo', 'Ciggilta Kudo', 'Agda Baxisso', 'Caxah Alsa', 'Qasa Dirri', 'Qado Dirri', 'Liiqen', 'Waysu', 'Diteli', 'Ximoli', 'Kaxxa Garablu'],\n    'months_short' => ['Qun', 'Kud', 'Cig', 'Agd', 'Cax', 'Qas', 'Qad', 'Leq', 'Way', 'Dit', 'Xim', 'Kax'],\n    'weekdays' => ['Acaada', 'Etleeni', 'Talaata', 'Arbaqa', 'Kamiisi', 'Gumqata', 'Sabti'],\n    'weekdays_short' => ['Aca', 'Etl', 'Tal', 'Arb', 'Kam', 'Gum', 'Sab'],\n    'weekdays_min' => ['Aca', 'Etl', 'Tal', 'Arb', 'Kam', 'Gum', 'Sab'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['saaku', 'carra'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/om.php","ext":"php","size":1934,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation & Sagalee Oromoo Publishing Co. Inc.    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'dd-MMM-YYYY',\n        'LLL' => 'dd MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, MMMM D, YYYY HH:mm',\n    ],\n    'months' => ['Amajjii', 'Guraandhala', 'Bitooteessa', 'Elba', 'Caamsa', 'Waxabajjii', 'Adooleessa', 'Hagayya', 'Fuulbana', 'Onkololeessa', 'Sadaasa', 'Muddee'],\n    'months_short' => ['Ama', 'Gur', 'Bit', 'Elb', 'Cam', 'Wax', 'Ado', 'Hag', 'Ful', 'Onk', 'Sad', 'Mud'],\n    'weekdays' => ['Dilbata', 'Wiixata', 'Qibxata', 'Roobii', 'Kamiisa', 'Jimaata', 'Sanbata'],\n    'weekdays_short' => ['Dil', 'Wix', 'Qib', 'Rob', 'Kam', 'Jim', 'San'],\n    'weekdays_min' => ['Dil', 'Wix', 'Qib', 'Rob', 'Kam', 'Jim', 'San'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['WD', 'WB'],\n\n    'year' => 'wggoota :count',\n    'y' => 'wggoota :count',\n    'a_year' => 'wggoota :count',\n\n    'month' => 'ji’a :count',\n    'm' => 'ji’a :count',\n    'a_month' => 'ji’a :count',\n\n    'week' => 'torban :count',\n    'w' => 'torban :count',\n    'a_week' => 'torban :count',\n\n    'day' => 'guyyaa :count',\n    'd' => 'guyyaa :count',\n    'a_day' => 'guyyaa :count',\n\n    'hour' => 'saʼaatii :count',\n    'h' => 'saʼaatii :count',\n    'a_hour' => 'saʼaatii :count',\n\n    'minute' => 'daqiiqaa :count',\n    'min' => 'daqiiqaa :count',\n    'a_minute' => 'daqiiqaa :count',\n\n    'second' => 'sekoondii :count',\n    's' => 'sekoondii :count',\n    'a_second' => 'sekoondii :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GB.php","ext":"php","size":659,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Mayank Badola\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ss.php","ext":"php","size":2567,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Nicolai Davies\n */\nreturn [\n    'year' => '{1}umnyaka|:count iminyaka',\n    'month' => '{1}inyanga|:count tinyanga',\n    'week' => '{1}:count liviki|:count emaviki',\n    'day' => '{1}lilanga|:count emalanga',\n    'hour' => '{1}lihora|:count emahora',\n    'minute' => '{1}umzuzu|:count emizuzu',\n    'second' => '{1}emizuzwana lomcane|:count mzuzwana',\n    'ago' => 'wenteka nga :time',\n    'from_now' => 'nga :time',\n    'diff_yesterday' => 'Itolo',\n    'diff_yesterday_regexp' => 'Itolo(?:\\\\s+nga)?',\n    'diff_today' => 'Namuhla',\n    'diff_today_regexp' => 'Namuhla(?:\\\\s+nga)?',\n    'diff_tomorrow' => 'Kusasa',\n    'diff_tomorrow_regexp' => 'Kusasa(?:\\\\s+nga)?',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm A',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm A',\n    ],\n    'calendar' => [\n        'sameDay' => '[Namuhla nga] LT',\n        'nextDay' => '[Kusasa nga] LT',\n        'nextWeek' => 'dddd [nga] LT',\n        'lastDay' => '[Itolo nga] LT',\n        'lastWeek' => 'dddd [leliphelile] [nga] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        $lastDigit = $number % 10;\n\n        return $number.(\n            ((int) ($number % 100 / 10) === 1) ? 'e' : (\n                ($lastDigit === 1 || $lastDigit === 2) ? 'a' : 'e'\n            )\n        );\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 11) {\n            return 'ekuseni';\n        }\n        if ($hour < 15) {\n            return 'emini';\n        }\n        if ($hour < 19) {\n            return 'entsambama';\n        }\n\n        return 'ebusuku';\n    },\n    'months' => ['Bhimbidvwane', 'Indlovana', 'Indlov\\'lenkhulu', 'Mabasa', 'Inkhwekhweti', 'Inhlaba', 'Kholwane', 'Ingci', 'Inyoni', 'Imphala', 'Lweti', 'Ingongoni'],\n    'months_short' => ['Bhi', 'Ina', 'Inu', 'Mab', 'Ink', 'Inh', 'Kho', 'Igc', 'Iny', 'Imp', 'Lwe', 'Igo'],\n    'weekdays' => ['Lisontfo', 'Umsombuluko', 'Lesibili', 'Lesitsatfu', 'Lesine', 'Lesihlanu', 'Umgcibelo'],\n    'weekdays_short' => ['Lis', 'Umb', 'Lsb', 'Les', 'Lsi', 'Lsh', 'Umg'],\n    'weekdays_min' => ['Li', 'Us', 'Lb', 'Lt', 'Ls', 'Lh', 'Ug'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/rof.php","ext":"php","size":1197,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['kang’ama', 'kingoto'],\n    'weekdays' => ['Ijumapili', 'Ijumatatu', 'Ijumanne', 'Ijumatano', 'Alhamisi', 'Ijumaa', 'Ijumamosi'],\n    'weekdays_short' => ['Ijp', 'Ijt', 'Ijn', 'Ijtn', 'Alh', 'Iju', 'Ijm'],\n    'weekdays_min' => ['Ijp', 'Ijt', 'Ijn', 'Ijtn', 'Alh', 'Iju', 'Ijm'],\n    'months' => ['Mweri wa kwanza', 'Mweri wa kaili', 'Mweri wa katatu', 'Mweri wa kaana', 'Mweri wa tanu', 'Mweri wa sita', 'Mweri wa saba', 'Mweri wa nane', 'Mweri wa tisa', 'Mweri wa ikumi', 'Mweri wa ikumi na moja', 'Mweri wa ikumi na mbili'],\n    'months_short' => ['M1', 'M2', 'M3', 'M4', 'M5', 'M6', 'M7', 'M8', 'M9', 'M10', 'M11', 'M12'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_BL.php","ext":"php","size":267,"mtime":1756373565,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MR.php","ext":"php","size":522,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/szl_PL.php","ext":"php","size":1709,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - szl_PL locale Przemyslaw Buczkowski libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['styczyń', 'luty', 'merc', 'kwjeciyń', 'moj', 'czyrwjyń', 'lipjyń', 'siyrpjyń', 'wrzesiyń', 'październik', 'listopad', 'grudziyń'],\n    'months_short' => ['sty', 'lut', 'mer', 'kwj', 'moj', 'czy', 'lip', 'siy', 'wrz', 'paź', 'lis', 'gru'],\n    'weekdays' => ['niydziela', 'pyńdziŏek', 'wtŏrek', 'strzŏda', 'sztwortek', 'pjōntek', 'sobŏta'],\n    'weekdays_short' => ['niy', 'pyń', 'wtŏ', 'str', 'szt', 'pjō', 'sob'],\n    'weekdays_min' => ['niy', 'pyń', 'wtŏ', 'str', 'szt', 'pjō', 'sob'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count rok',\n    'y' => ':count rok',\n    'a_year' => ':count rok',\n\n    'month' => ':count mjeśůnc',\n    'm' => ':count mjeśůnc',\n    'a_month' => ':count mjeśůnc',\n\n    'week' => ':count tydźyń',\n    'w' => ':count tydźyń',\n    'a_week' => ':count tydźyń',\n\n    'day' => ':count dźyń',\n    'd' => ':count dźyń',\n    'a_day' => ':count dźyń',\n\n    'hour' => ':count godzina',\n    'h' => ':count godzina',\n    'a_hour' => ':count godzina',\n\n    'minute' => ':count minuta',\n    'min' => ':count minuta',\n    'a_minute' => ':count minuta',\n\n    'second' => ':count sekůnda',\n    's' => ':count sekůnda',\n    'a_second' => ':count sekůnda',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mi.php","ext":"php","size":2356,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - John Corrigan\n * - François B\n */\nreturn [\n    'year' => ':count tau',\n    'a_year' => '{1}he tau|:count tau',\n    'month' => ':count marama',\n    'a_month' => '{1}he marama|:count marama',\n    'week' => ':count wiki',\n    'a_week' => '{1}he wiki|:count wiki',\n    'day' => ':count ra',\n    'a_day' => '{1}he ra|:count ra',\n    'hour' => ':count haora',\n    'a_hour' => '{1}te haora|:count haora',\n    'minute' => ':count meneti',\n    'a_minute' => '{1}he meneti|:count meneti',\n    'second' => ':count hēkona',\n    'a_second' => '{1}te hēkona ruarua|:count hēkona',\n    'ago' => ':time i mua',\n    'from_now' => 'i roto i :time',\n    'diff_yesterday' => 'inanahi',\n    'diff_yesterday_regexp' => 'inanahi(?:\\\\s+i)?',\n    'diff_today' => 'i teie',\n    'diff_today_regexp' => 'i teie(?:\\\\s+mahana,)?(?:\\\\s+i)?',\n    'diff_tomorrow' => 'apopo',\n    'diff_tomorrow_regexp' => 'apopo(?:\\\\s+i)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY [i] HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY [i] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[i teie mahana, i] LT',\n        'nextDay' => '[apopo i] LT',\n        'nextWeek' => 'dddd [i] LT',\n        'lastDay' => '[inanahi i] LT',\n        'lastWeek' => 'dddd [whakamutunga i] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberº',\n    'months' => ['Kohi-tāte', 'Hui-tanguru', 'Poutū-te-rangi', 'Paenga-whāwhā', 'Haratua', 'Pipiri', 'Hōngoingoi', 'Here-turi-kōkā', 'Mahuru', 'Whiringa-ā-nuku', 'Whiringa-ā-rangi', 'Hakihea'],\n    'months_short' => ['Kohi', 'Hui', 'Pou', 'Pae', 'Hara', 'Pipi', 'Hōngoi', 'Here', 'Mahu', 'Whi-nu', 'Whi-ra', 'Haki'],\n    'weekdays' => ['Rātapu', 'Mane', 'Tūrei', 'Wenerei', 'Tāite', 'Paraire', 'Hātarei'],\n    'weekdays_short' => ['Ta', 'Ma', 'Tū', 'We', 'Tāi', 'Pa', 'Hā'],\n    'weekdays_min' => ['Ta', 'Ma', 'Tū', 'We', 'Tāi', 'Pa', 'Hā'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' me te '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_AG.php","ext":"php","size":432,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.  bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_SG.php","ext":"php","size":1070,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/zh.php', [\n    'formats' => [\n        'L' => 'YYYY年MM月DD日',\n    ],\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'weekdays' => ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    'weekdays_short' => ['日', '一', '二', '三', '四', '五', '六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mjw_IN.php","ext":"php","size":977,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Jor Teron    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['Arkoi', 'Thangthang', 'There', 'Jangmi', 'Aru', 'Vosik', 'Jakhong', 'Paipai', 'Chiti', 'Phere', 'Phaikuni', 'Matijong'],\n    'months_short' => ['Ark', 'Thang', 'The', 'Jang', 'Aru', 'Vos', 'Jak', 'Pai', 'Chi', 'Phe', 'Phai', 'Mati'],\n    'weekdays' => ['Bhomkuru', 'Urmi', 'Durmi', 'Thelang', 'Theman', 'Bhomta', 'Bhomti'],\n    'weekdays_short' => ['Bhom', 'Ur', 'Dur', 'Tkel', 'Tkem', 'Bhta', 'Bhti'],\n    'weekdays_min' => ['Bhom', 'Ur', 'Dur', 'Tkel', 'Tkem', 'Bhta', 'Bhti'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_KW.php","ext":"php","size":5373,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Authors:\n * - Josh Soref\n * - Nusret Parlak\n * - JD Isaacks\n * - Atef Ben Ali (atefBB)\n * - Mohamed Sabil (mohamedsabil83)\n * - Abdullah-Alhariri\n */\n$months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'ماي',\n    'يونيو',\n    'يوليوز',\n    'غشت',\n    'شتنبر',\n    'أكتوبر',\n    'نونبر',\n    'دجنبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'a_year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'a_month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'a_week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'a_day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'a_hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'a_minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'a_second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => 'في :time',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدا(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم على الساعة] LT',\n        'nextDay' => '[غدا على الساعة] LT',\n        'nextWeek' => 'dddd [على الساعة] LT',\n        'lastDay' => '[أمس على الساعة] LT',\n        'lastWeek' => 'dddd [على الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ksh.php","ext":"php","size":1884,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['v.M.', 'n.M.'],\n    'weekdays' => ['Sunndaach', 'Mohndaach', 'Dinnsdaach', 'Metwoch', 'Dunnersdaach', 'Friidaach', 'Samsdaach'],\n    'weekdays_short' => ['Su.', 'Mo.', 'Di.', 'Me.', 'Du.', 'Fr.', 'Sa.'],\n    'weekdays_min' => ['Su', 'Mo', 'Di', 'Me', 'Du', 'Fr', 'Sa'],\n    'months' => ['Jannewa', 'Fäbrowa', 'Määz', 'Aprell', 'Mai', 'Juuni', 'Juuli', 'Oujoß', 'Septämber', 'Oktohber', 'Novämber', 'Dezämber'],\n    'months_short' => ['Jan', 'Fäb', 'Mäz', 'Apr', 'Mai', 'Jun', 'Jul', 'Ouj', 'Säp', 'Okt', 'Nov', 'Dez'],\n    'months_short_standalone' => ['Jan.', 'Fäb.', 'Mäz.', 'Apr.', 'Mai', 'Jun.', 'Jul.', 'Ouj.', 'Säp.', 'Okt.', 'Nov.', 'Dez.'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D. M. YYYY',\n        'LL' => 'D. MMM. YYYY',\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, [dä] D. MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count Johr',\n    'y' => ':count Johr',\n    'a_year' => ':count Johr',\n\n    'month' => ':count Moohnd',\n    'm' => ':count Moohnd',\n    'a_month' => ':count Moohnd',\n\n    'week' => ':count woch',\n    'w' => ':count woch',\n    'a_week' => ':count woch',\n\n    'day' => ':count Daach',\n    'd' => ':count Daach',\n    'a_day' => ':count Daach',\n\n    'hour' => ':count Uhr',\n    'h' => ':count Uhr',\n    'a_hour' => ':count Uhr',\n\n    'minute' => ':count Menutt',\n    'min' => ':count Menutt',\n    'a_minute' => ':count Menutt',\n\n    'second' => ':count Sekůndt',\n    's' => ':count Sekůndt',\n    'a_second' => ':count Sekůndt',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mua.php","ext":"php","size":1176,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['comme', 'lilli'],\n    'weekdays' => ['Com’yakke', 'Comlaaɗii', 'Comzyiiɗii', 'Comkolle', 'Comkaldǝɓlii', 'Comgaisuu', 'Comzyeɓsuu'],\n    'weekdays_short' => ['Cya', 'Cla', 'Czi', 'Cko', 'Cka', 'Cga', 'Cze'],\n    'weekdays_min' => ['Cya', 'Cla', 'Czi', 'Cko', 'Cka', 'Cga', 'Cze'],\n    'months' => ['Fĩi Loo', 'Cokcwaklaŋne', 'Cokcwaklii', 'Fĩi Marfoo', 'Madǝǝuutǝbijaŋ', 'Mamǝŋgwãafahbii', 'Mamǝŋgwãalii', 'Madǝmbii', 'Fĩi Dǝɓlii', 'Fĩi Mundaŋ', 'Fĩi Gwahlle', 'Fĩi Yuru'],\n    'months_short' => ['FLO', 'CLA', 'CKI', 'FMF', 'MAD', 'MBI', 'MLI', 'MAM', 'FDE', 'FMU', 'FGW', 'FYU'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/no.php","ext":"php","size":622,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Daniel S. Billing\n * - Paul\n * - Jimmie Johansson\n * - Jens Herlevsen\n */\nreturn array_replace_recursive(require __DIR__.'/nb.php', [\n    'formats' => [\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY [kl.] HH:mm',\n    ],\n    'calendar' => [\n        'nextWeek' => 'på dddd [kl.] LT',\n        'lastWeek' => '[i] dddd[s kl.] LT',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bs_Cyrl.php","ext":"php","size":1302,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/bs.php', [\n    'meridiem' => ['пре подне', 'поподне'],\n    'weekdays' => ['недјеља', 'понедјељак', 'уторак', 'сриједа', 'четвртак', 'петак', 'субота'],\n    'weekdays_short' => ['нед', 'пон', 'уто', 'сри', 'чет', 'пет', 'суб'],\n    'weekdays_min' => ['нед', 'пон', 'уто', 'сри', 'чет', 'пет', 'суб'],\n    'months' => ['јануар', 'фебруар', 'март', 'април', 'мај', 'јуни', 'јули', 'аугуст', 'септембар', 'октобар', 'новембар', 'децембар'],\n    'months_short' => ['јан', 'феб', 'мар', 'апр', 'мај', 'јун', 'јул', 'ауг', 'сеп', 'окт', 'нов', 'дец'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D.M.YYYY.',\n        'LL' => 'DD.MM.YYYY.',\n        'LLL' => 'DD. MMMM YYYY. HH:mm',\n        'LLLL' => 'dddd, DD. MMMM YYYY. HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ln_CG.php","ext":"php","size":654,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ln.php', [\n    'weekdays' => ['eyenga', 'mokɔlɔ mwa yambo', 'mokɔlɔ mwa míbalé', 'mokɔlɔ mwa mísáto', 'mokɔlɔ ya mínéi', 'mokɔlɔ ya mítáno', 'mpɔ́sɔ'],\n    'weekdays_short' => ['eye', 'ybo', 'mbl', 'mst', 'min', 'mtn', 'mps'],\n    'weekdays_min' => ['eye', 'ybo', 'mbl', 'mst', 'min', 'mtn', 'mps'],\n    'meridiem' => ['ntɔ́ngɔ́', 'mpókwa'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_IQ.php","ext":"php","size":2110,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'months_short' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yi_US.php","ext":"php","size":1984,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - http://www.uyip.org/ Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['יאַנואַר', 'פֿעברואַר', 'מערץ', 'אַפּריל', 'מיי', 'יוני', 'יולי', 'אויגוסט', 'סעפּטעמבער', 'אקטאבער', 'נאוועמבער', 'דעצעמבער'],\n    'months_short' => ['יאַנ', 'פֿעב', 'מאַר', 'אַפּר', 'מײַ ', 'יונ', 'יול', 'אױג', 'סעפּ', 'אָקט', 'נאָװ', 'דעצ'],\n    'weekdays' => ['זונטיק', 'מאָנטיק', 'דינסטיק', 'מיטװאָך', 'דאָנערשטיק', 'פֿרײַטיק', 'שבת'],\n    'weekdays_short' => ['זונ\\'', 'מאָנ\\'', 'דינ\\'', 'מיט\\'', 'דאָנ\\'', 'פֿרײַ\\'', 'שבת'],\n    'weekdays_min' => ['זונ\\'', 'מאָנ\\'', 'דינ\\'', 'מיט\\'', 'דאָנ\\'', 'פֿרײַ\\'', 'שבת'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count יאר',\n    'y' => ':count יאר',\n    'a_year' => ':count יאר',\n\n    'month' => ':count חודש',\n    'm' => ':count חודש',\n    'a_month' => ':count חודש',\n\n    'week' => ':count וואָך',\n    'w' => ':count וואָך',\n    'a_week' => ':count וואָך',\n\n    'day' => ':count טאָג',\n    'd' => ':count טאָג',\n    'a_day' => ':count טאָג',\n\n    'hour' => ':count שעה',\n    'h' => ':count שעה',\n    'a_hour' => ':count שעה',\n\n    'minute' => ':count מינוט',\n    'min' => ':count מינוט',\n    'a_minute' => ':count מינוט',\n\n    'second' => ':count סעקונדע',\n    's' => ':count סעקונדע',\n    'a_second' => ':count סעקונדע',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_BE.php","ext":"php","size":409,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/de.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_MR.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gv_GB.php","ext":"php","size":1742,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Alastair McKinstry    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Jerrey-geuree', 'Toshiaght-arree', 'Mayrnt', 'Averil', 'Boaldyn', 'Mean-souree', 'Jerrey-souree', 'Luanistyn', 'Mean-fouyir', 'Jerrey-fouyir', 'Mee Houney', 'Mee ny Nollick'],\n    'months_short' => ['J-guer', 'T-arree', 'Mayrnt', 'Avrril', 'Boaldyn', 'M-souree', 'J-souree', 'Luanistyn', 'M-fouyir', 'J-fouyir', 'M.Houney', 'M.Nollick'],\n    'weekdays' => ['Jedoonee', 'Jelhein', 'Jemayrt', 'Jercean', 'Jerdein', 'Jeheiney', 'Jesarn'],\n    'weekdays_short' => ['Jed', 'Jel', 'Jem', 'Jerc', 'Jerd', 'Jeh', 'Jes'],\n    'weekdays_min' => ['Jed', 'Jel', 'Jem', 'Jerc', 'Jerd', 'Jeh', 'Jes'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count blein',\n    'y' => ':count blein',\n    'a_year' => ':count blein',\n\n    'month' => ':count mee',\n    'm' => ':count mee',\n    'a_month' => ':count mee',\n\n    'week' => ':count shiaghtin',\n    'w' => ':count shiaghtin',\n    'a_week' => ':count shiaghtin',\n\n    'day' => ':count laa',\n    'd' => ':count laa',\n    'a_day' => ':count laa',\n\n    'hour' => ':count oor',\n    'h' => ':count oor',\n    'a_hour' => ':count oor',\n\n    'minute' => ':count feer veg',\n    'min' => ':count feer veg',\n    'a_minute' => ':count feer veg',\n\n    'second' => ':count derrey',\n    's' => ':count derrey',\n    'a_second' => ':count derrey',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SX.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/doi.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/doi_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ta_MY.php","ext":"php","size":1485,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ta.php', [\n    'formats' => [\n        'LT' => 'a h:mm',\n        'LTS' => 'a h:mm:ss',\n        'L' => 'D/M/yy',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM, YYYY, a h:mm',\n        'LLLL' => 'dddd, D MMMM, YYYY, a h:mm',\n    ],\n    'months' => ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'],\n    'months_short' => ['ஜன.', 'பிப்.', 'மார்.', 'ஏப்.', 'மே', 'ஜூன்', 'ஜூலை', 'ஆக.', 'செப்.', 'அக்.', 'நவ.', 'டிச.'],\n    'weekdays' => ['ஞாயிறு', 'திங்கள்', 'செவ்வாய்', 'புதன்', 'வியாழன்', 'வெள்ளி', 'சனி'],\n    'weekdays_short' => ['ஞாயி.', 'திங்.', 'செவ்.', 'புத.', 'வியா.', 'வெள்.', 'சனி'],\n    'weekdays_min' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'first_day_of_week' => 1,\n    'meridiem' => ['மு.ப', 'பி.ப'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ps.php","ext":"php","size":2496,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Muhammad Nasir Rahimi\n * - Nassim Nasibullah (spinzar)\n */\nreturn [\n    'year' => ':count کال|:count کاله',\n    'y' => ':countکال|:countکاله',\n    'month' => ':count مياشت|:count مياشتي',\n    'm' => ':countمياشت|:countمياشتي',\n    'week' => ':count اونۍ|:count اونۍ',\n    'w' => ':countاونۍ|:countاونۍ',\n    'day' => ':count ورځ|:count ورځي',\n    'd' => ':countورځ|:countورځي',\n    'hour' => ':count ساعت|:count ساعته',\n    'h' => ':countساعت|:countساعته',\n    'minute' => ':count دقيقه|:count دقيقې',\n    'min' => ':countدقيقه|:countدقيقې',\n    'second' => ':count ثانيه|:count ثانيې',\n    's' => ':countثانيه|:countثانيې',\n    'ago' => ':time دمخه',\n    'from_now' => ':time له اوس څخه',\n    'after' => ':time وروسته',\n    'before' => ':time دمخه',\n    'list' => ['، ', ' او '],\n    'meridiem' => ['غ.م.', 'غ.و.'],\n    'weekdays' => ['اتوار', 'ګل', 'نهه', 'شورو', 'زيارت', 'جمعه', 'خالي'],\n    'weekdays_short' => ['ا', 'ګ', 'ن', 'ش', 'ز', 'ج', 'خ'],\n    'weekdays_min' => ['ا', 'ګ', 'ن', 'ش', 'ز', 'ج', 'خ'],\n    'months' => ['جنوري', 'فبروري', 'مارچ', 'اپریل', 'مۍ', 'جون', 'جولای', 'اگست', 'سېپتمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنوري', 'فبروري', 'مارچ', 'اپریل', 'مۍ', 'جون', 'جولای', 'اگست', 'سېپتمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_standalone' => ['جنوري', 'فېبروري', 'مارچ', 'اپریل', 'مۍ', 'جون', 'جولای', 'اگست', 'سپتمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_short_standalone' => ['جنوري', 'فبروري', 'مارچ', 'اپریل', 'مۍ', 'جون', 'جولای', 'اگست', 'سپتمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'first_day_of_week' => 6,\n    'weekend' => [4, 5],\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'YYYY/M/d',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'د YYYY د MMMM D H:mm',\n        'LLLL' => 'dddd د YYYY د MMMM D H:mm',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ur_PK.php","ext":"php","size":1162,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/ur.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'weekdays' => ['اتوار', 'پير', 'منگل', 'بدھ', 'جمعرات', 'جمعه', 'هفته'],\n    'weekdays_short' => ['اتوار', 'پير', 'منگل', 'بدھ', 'جمعرات', 'جمعه', 'هفته'],\n    'weekdays_min' => ['اتوار', 'پير', 'منگل', 'بدھ', 'جمعرات', 'جمعه', 'هفته'],\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ص', 'ش'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl_CW.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/nl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tzm_Latn.php","ext":"php","size":2325,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n */\nreturn [\n    'year' => '{1}:count asgas|:count isgasn',\n    'a_year' => 'asgas|:count isgasn',\n    'month' => '{1}:count ayowr|:count iyyirn',\n    'a_month' => 'ayowr|:count iyyirn',\n    'week' => ':count imalass',\n    'a_week' => ':imalass',\n    'day' => '{1}:count ass|:count ossan',\n    'a_day' => 'ass|:count ossan',\n    'hour' => '{1}:count saɛa|:count tassaɛin',\n    'a_hour' => '{1}saɛa|:count tassaɛin',\n    'minute' => ':count minuḍ',\n    'a_minute' => '{1}minuḍ|:count minuḍ',\n    'second' => ':count imik',\n    'a_second' => '{1}imik|:count imik',\n    'ago' => 'yan :time',\n    'from_now' => 'dadkh s yan :time',\n    'diff_yesterday' => 'assant',\n    'diff_yesterday_regexp' => 'assant(?:\\\\s+g)?',\n    'diff_today' => 'asdkh',\n    'diff_today_regexp' => 'asdkh(?:\\\\s+g)?',\n    'diff_tomorrow' => 'aska',\n    'diff_tomorrow_regexp' => 'aska(?:\\\\s+g)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[asdkh g] LT',\n        'nextDay' => '[aska g] LT',\n        'nextWeek' => 'dddd [g] LT',\n        'lastDay' => '[assant g] LT',\n        'lastWeek' => 'dddd [g] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['innayr', 'brˤayrˤ', 'marˤsˤ', 'ibrir', 'mayyw', 'ywnyw', 'ywlywz', 'ɣwšt', 'šwtanbir', 'ktˤwbrˤ', 'nwwanbir', 'dwjnbir'],\n    'months_short' => ['innayr', 'brˤayrˤ', 'marˤsˤ', 'ibrir', 'mayyw', 'ywnyw', 'ywlywz', 'ɣwšt', 'šwtanbir', 'ktˤwbrˤ', 'nwwanbir', 'dwjnbir'],\n    'weekdays' => ['asamas', 'aynas', 'asinas', 'akras', 'akwas', 'asimwas', 'asiḍyas'],\n    'weekdays_short' => ['asamas', 'aynas', 'asinas', 'akras', 'akwas', 'asimwas', 'asiḍyas'],\n    'weekdays_min' => ['asamas', 'aynas', 'asinas', 'akras', 'akwas', 'asimwas', 'asiḍyas'],\n    'meridiem' => ['Zdat azal', 'Ḍeffir aza'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ast.php","ext":"php","size":1982,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Jordi Mallach jordi@gnu.org\n * - Adolfo Jayme-Barrientos (fitojb)\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['de xineru', 'de febreru', 'de marzu', 'd’abril', 'de mayu', 'de xunu', 'de xunetu', 'd’agostu', 'de setiembre', 'd’ochobre', 'de payares', 'd’avientu'],\n    'months_short' => ['xin', 'feb', 'mar', 'abr', 'may', 'xun', 'xnt', 'ago', 'set', 'och', 'pay', 'avi'],\n    'weekdays' => ['domingu', 'llunes', 'martes', 'miércoles', 'xueves', 'vienres', 'sábadu'],\n    'weekdays_short' => ['dom', 'llu', 'mar', 'mié', 'xue', 'vie', 'sáb'],\n    'weekdays_min' => ['dom', 'llu', 'mar', 'mié', 'xue', 'vie', 'sáb'],\n\n    'year' => ':count añu|:count años',\n    'y' => ':count añu|:count años',\n    'a_year' => 'un añu|:count años',\n\n    'month' => ':count mes',\n    'm' => ':count mes',\n    'a_month' => 'un mes|:count mes',\n\n    'week' => ':count selmana|:count selmanes',\n    'w' => ':count selmana|:count selmanes',\n    'a_week' => 'una selmana|:count selmanes',\n\n    'day' => ':count día|:count díes',\n    'd' => ':count día|:count díes',\n    'a_day' => 'un día|:count díes',\n\n    'hour' => ':count hora|:count hores',\n    'h' => ':count hora|:count hores',\n    'a_hour' => 'una hora|:count hores',\n\n    'minute' => ':count minutu|:count minutos',\n    'min' => ':count minutu|:count minutos',\n    'a_minute' => 'un minutu|:count minutos',\n\n    'second' => ':count segundu|:count segundos',\n    's' => ':count segundu|:count segundos',\n    'a_second' => 'un segundu|:count segundos',\n\n    'ago' => 'hai :time',\n    'from_now' => 'en :time',\n    'after' => ':time dempués',\n    'before' => ':time enantes',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ta.php","ext":"php","size":4461,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - JD Isaacks\n * - Satheez\n */\nreturn [\n    'year' => ':count வருடம்|:count ஆண்டுகள்',\n    'a_year' => 'ஒரு வருடம்|:count ஆண்டுகள்',\n    'y' => ':count வருட.|:count ஆண்.',\n    'month' => ':count மாதம்|:count மாதங்கள்',\n    'a_month' => 'ஒரு மாதம்|:count மாதங்கள்',\n    'm' => ':count மாத.',\n    'week' => ':count வாரம்|:count வாரங்கள்',\n    'a_week' => 'ஒரு வாரம்|:count வாரங்கள்',\n    'w' => ':count வார.',\n    'day' => ':count நாள்|:count நாட்கள்',\n    'a_day' => 'ஒரு நாள்|:count நாட்கள்',\n    'd' => ':count நாள்|:count நாட்.',\n    'hour' => ':count மணி நேரம்|:count மணி நேரம்',\n    'a_hour' => 'ஒரு மணி நேரம்|:count மணி நேரம்',\n    'h' => ':count மணி.',\n    'minute' => ':count நிமிடம்|:count நிமிடங்கள்',\n    'a_minute' => 'ஒரு நிமிடம்|:count நிமிடங்கள்',\n    'min' => ':count நிமி.',\n    'second' => ':count சில விநாடிகள்|:count விநாடிகள்',\n    'a_second' => 'ஒரு சில விநாடிகள்|:count விநாடிகள்',\n    's' => ':count விநா.',\n    'ago' => ':time முன்',\n    'from_now' => ':time இல்',\n    'before' => ':time முன்',\n    'after' => ':time பின்',\n    'diff_now' => 'இப்போது',\n    'diff_today' => 'இன்று',\n    'diff_yesterday' => 'நேற்று',\n    'diff_tomorrow' => 'நாளை',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[இன்று] LT',\n        'nextDay' => '[நாளை] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[நேற்று] LT',\n        'lastWeek' => '[கடந்த வாரம்] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberவது',\n    'meridiem' => static function ($hour) {\n        if ($hour < 2) {\n            return ' யாமம்';\n        }\n        if ($hour < 6) {\n            return ' வைகறை';\n        }\n        if ($hour < 10) {\n            return ' காலை';\n        }\n        if ($hour < 14) {\n            return ' நண்பகல்';\n        }\n        if ($hour < 18) {\n            return ' எற்பாடு';\n        }\n        if ($hour < 22) {\n            return ' மாலை';\n        }\n\n        return ' யாமம்';\n    },\n    'months' => ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டெம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'],\n    'months_short' => ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டெம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'],\n    'weekdays' => ['ஞாயிற்றுக்கிழமை', 'திங்கட்கிழமை', 'செவ்வாய்கிழமை', 'புதன்கிழமை', 'வியாழக்கிழமை', 'வெள்ளிக்கிழமை', 'சனிக்கிழமை'],\n    'weekdays_short' => ['ஞாயிறு', 'திங்கள்', 'செவ்வாய்', 'புதன்', 'வியாழன்', 'வெள்ளி', 'சனி'],\n    'weekdays_min' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' மற்றும் '],\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dje.php","ext":"php","size":1520,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Subbaahi', 'Zaarikay b'],\n    'weekdays' => ['Alhadi', 'Atinni', 'Atalaata', 'Alarba', 'Alhamisi', 'Alzuma', 'Asibti'],\n    'weekdays_short' => ['Alh', 'Ati', 'Ata', 'Ala', 'Alm', 'Alz', 'Asi'],\n    'weekdays_min' => ['Alh', 'Ati', 'Ata', 'Ala', 'Alm', 'Alz', 'Asi'],\n    'months' => ['Žanwiye', 'Feewiriye', 'Marsi', 'Awiril', 'Me', 'Žuweŋ', 'Žuyye', 'Ut', 'Sektanbur', 'Oktoobur', 'Noowanbur', 'Deesanbur'],\n    'months_short' => ['Žan', 'Fee', 'Mar', 'Awi', 'Me', 'Žuw', 'Žuy', 'Ut', 'Sek', 'Okt', 'Noo', 'Dee'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count hari', // less reliable\n    'y' => ':count hari', // less reliable\n    'a_year' => ':count hari', // less reliable\n\n    'week' => ':count alzuma', // less reliable\n    'w' => ':count alzuma', // less reliable\n    'a_week' => ':count alzuma', // less reliable\n\n    'second' => ':count atinni', // less reliable\n    's' => ':count atinni', // less reliable\n    'a_second' => ':count atinni', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hu_HU.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/hu.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nb_SJ.php","ext":"php","size":440,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/nb.php', [\n    'formats' => [\n        'LL' => 'D. MMM YYYY',\n        'LLL' => 'D. MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd D. MMMM YYYY, HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_KM.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yue.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/yue_HK.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ia.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ia_FR.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_NA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zu_ZA.php","ext":"php","size":1874,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Januwari', 'Februwari', 'Mashi', 'Ephreli', 'Meyi', 'Juni', 'Julayi', 'Agasti', 'Septhemba', 'Okthoba', 'Novemba', 'Disemba'],\n    'months_short' => ['Jan', 'Feb', 'Mas', 'Eph', 'Mey', 'Jun', 'Jul', 'Aga', 'Sep', 'Okt', 'Nov', 'Dis'],\n    'weekdays' => ['iSonto', 'uMsombuluko', 'uLwesibili', 'uLwesithathu', 'uLwesine', 'uLwesihlanu', 'uMgqibelo'],\n    'weekdays_short' => ['Son', 'Mso', 'Bil', 'Tha', 'Sin', 'Hla', 'Mgq'],\n    'weekdays_min' => ['Son', 'Mso', 'Bil', 'Tha', 'Sin', 'Hla', 'Mgq'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => 'kweminyaka engu-:count',\n    'y' => 'kweminyaka engu-:count',\n    'a_year' => 'kweminyaka engu-:count',\n\n    'month' => 'izinyanga ezingu-:count',\n    'm' => 'izinyanga ezingu-:count',\n    'a_month' => 'izinyanga ezingu-:count',\n\n    'week' => 'lwamasonto angu-:count',\n    'w' => 'lwamasonto angu-:count',\n    'a_week' => 'lwamasonto angu-:count',\n\n    'day' => 'ezingaba ngu-:count',\n    'd' => 'ezingaba ngu-:count',\n    'a_day' => 'ezingaba ngu-:count',\n\n    'hour' => 'amahora angu-:count',\n    'h' => 'amahora angu-:count',\n    'a_hour' => 'amahora angu-:count',\n\n    'minute' => 'ngemizuzu engu-:count',\n    'min' => 'ngemizuzu engu-:count',\n    'a_minute' => 'ngemizuzu engu-:count',\n\n    'second' => 'imizuzwana engu-:count',\n    's' => 'imizuzwana engu-:count',\n    'a_second' => 'imizuzwana engu-:count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hsb.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/hsb_DE.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_SN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/el_CY.php","ext":"php","size":440,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Greek Debian Translation Team    bug-glibc@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/el.php', [\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bn.php","ext":"php","size":4719,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Shakib Hossain\n * - Raju\n * - Aniruddha Adhikary\n * - JD Isaacks\n * - Saiful Islam\n * - Faisal Islam\n */\nreturn [\n    'year' => ':count বছর',\n    'a_year' => 'এক বছর|:count বছর',\n    'y' => '১ বছর|:count বছর',\n    'month' => ':count মাস',\n    'a_month' => 'এক মাস|:count মাস',\n    'm' => '১ মাস|:count মাস',\n    'week' => ':count সপ্তাহ',\n    'a_week' => '১ সপ্তাহ|:count সপ্তাহ',\n    'w' => '১ সপ্তাহ|:count সপ্তাহ',\n    'day' => ':count দিন',\n    'a_day' => 'এক দিন|:count দিন',\n    'd' => '১ দিন|:count দিন',\n    'hour' => ':count ঘন্টা',\n    'a_hour' => 'এক ঘন্টা|:count ঘন্টা',\n    'h' => '১ ঘন্টা|:count ঘন্টা',\n    'minute' => ':count মিনিট',\n    'a_minute' => 'এক মিনিট|:count মিনিট',\n    'min' => '১ মিনিট|:count মিনিট',\n    'second' => ':count সেকেন্ড',\n    'a_second' => 'কয়েক সেকেন্ড|:count সেকেন্ড',\n    's' => '১ সেকেন্ড|:count সেকেন্ড',\n    'ago' => ':time আগে',\n    'from_now' => ':time পরে',\n    'after' => ':time পরে',\n    'before' => ':time আগে',\n    'diff_now' => 'এখন',\n    'diff_today' => 'আজ',\n    'diff_yesterday' => 'গতকাল',\n    'diff_tomorrow' => 'আগামীকাল',\n    'period_recurrences' => ':count বার|:count বার',\n    'period_interval' => 'প্রতি :interval',\n    'period_start_date' => ':date থেকে',\n    'period_end_date' => ':date পর্যন্ত',\n    'formats' => [\n        'LT' => 'A Oh:Om সময়',\n        'LTS' => 'A Oh:Om:Os সময়',\n        'L' => 'OD/OM/OY',\n        'LL' => 'OD MMMM OY',\n        'LLL' => 'OD MMMM OY, A Oh:Om সময়',\n        'LLLL' => 'dddd, OD MMMM OY, A Oh:Om সময়',\n    ],\n    'calendar' => [\n        'sameDay' => '[আজ] LT',\n        'nextDay' => '[আগামীকাল] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[গতকাল] LT',\n        'lastWeek' => '[গত] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'রাত';\n        }\n        if ($hour < 10) {\n            return 'সকাল';\n        }\n        if ($hour < 17) {\n            return 'দুপুর';\n        }\n        if ($hour < 20) {\n            return 'বিকাল';\n        }\n\n        return 'রাত';\n    },\n    'months' => ['জানুয়ারী', 'ফেব্রুয়ারি', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'],\n    'months_short' => ['জানু', 'ফেব', 'মার্চ', 'এপ্র', 'মে', 'জুন', 'জুল', 'আগ', 'সেপ্ট', 'অক্টো', 'নভে', 'ডিসে'],\n    'weekdays' => ['রবিবার', 'সোমবার', 'মঙ্গলবার', 'বুধবার', 'বৃহস্পতিবার', 'শুক্রবার', 'শনিবার'],\n    'weekdays_short' => ['রবি', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহস্পতি', 'শুক্র', 'শনি'],\n    'weekdays_min' => ['রবি', 'সোম', 'মঙ্গ', 'বুধ', 'বৃহঃ', 'শুক্র', 'শনি'],\n    'list' => [', ', ' এবং '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'weekdays_standalone' => ['রবিবার', 'সোমবার', 'মঙ্গলবার', 'বুধবার', 'বৃহষ্পতিবার', 'শুক্রবার', 'শনিবার'],\n    'weekdays_min_standalone' => ['রঃ', 'সোঃ', 'মঃ', 'বুঃ', 'বৃঃ', 'শুঃ', 'শনি'],\n    'months_short_standalone' => ['জানুয়ারী', 'ফেব্রুয়ারী', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'],\n    'alt_numbers' => ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/om_ET.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/om.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ckb.php","ext":"php","size":4923,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Swara Mohammed\n * - Kawan Pshtiwan\n */\n$months = [\n    'کانونی دووەم',\n    'شوبات',\n    'ئازار',\n    'نیسان',\n    'ئایار',\n    'حوزەیران',\n    'تەمموز',\n    'ئاب',\n    'ئەیلوول',\n    'تشرینی یەکەم',\n    'تشرینی دووەم',\n    'کانونی یەکەم',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count ساڵێک', '{1}ساڵێک', '{2}دوو ساڵ', ']2,11[:count ساڵ', ']10,Inf[:count ساڵ']),\n    'a_year' => implode('|', ['{0}:count ساڵێک', '{1}ساڵێک', '{2}دوو ساڵ', ']2,11[:count ساڵ', ']10,Inf[:count ساڵ']),\n    'month' => implode('|', ['{0}:count مانگێک', '{1}مانگێک', '{2}دوو مانگ', ']2,11[:count مانگ', ']10,Inf[:count مانگ']),\n    'a_month' => implode('|', ['{0}:count مانگێک', '{1}مانگێک', '{2}دوو مانگ', ']2,11[:count مانگ', ']10,Inf[:count مانگ']),\n    'week' => implode('|', ['{0}:count هەفتەیەک', '{1}هەفتەیەک', '{2}دوو هەفتە', ']2,11[:count هەفتە', ']10,Inf[:count هەفتە']),\n    'a_week' => implode('|', ['{0}:count هەفتەیەک', '{1}هەفتەیەک', '{2}دوو هەفتە', ']2,11[:count هەفتە', ']10,Inf[:count هەفتە']),\n    'day' => implode('|', ['{0}:count ڕۆژێک', '{1}ڕۆژێک', '{2}دوو ڕۆژ', ']2,11[:count ڕۆژ', ']10,Inf[:count ڕۆژ']),\n    'a_day' => implode('|', ['{0}:count ڕۆژێک', '{1}ڕۆژێک', '{2}دوو ڕۆژ', ']2,11[:count ڕۆژ', ']10,Inf[:count ڕۆژ']),\n    'hour' => implode('|', ['{0}:count کاتژمێرێک', '{1}کاتژمێرێک', '{2}دوو کاتژمێر', ']2,11[:count کاتژمێر', ']10,Inf[:count کاتژمێر']),\n    'a_hour' => implode('|', ['{0}:count کاتژمێرێک', '{1}کاتژمێرێک', '{2}دوو کاتژمێر', ']2,11[:count کاتژمێر', ']10,Inf[:count کاتژمێر']),\n    'minute' => implode('|', ['{0}:count خولەکێک', '{1}خولەکێک', '{2}دوو خولەک', ']2,11[:count خولەک', ']10,Inf[:count خولەک']),\n    'a_minute' => implode('|', ['{0}:count خولەکێک', '{1}خولەکێک', '{2}دوو خولەک', ']2,11[:count خولەک', ']10,Inf[:count خولەک']),\n    'second' => implode('|', ['{0}:count چرکەیەک', '{1}چرکەیەک', '{2}دوو چرکە', ']2,11[:count چرکە', ']10,Inf[:count چرکە']),\n    'a_second' => implode('|', ['{0}:count چرکەیەک', '{1}چرکەیەک', '{2}دوو چرکە', ']2,11[:count چرکە', ']10,Inf[:count چرکە']),\n    'ago' => 'پێش :time',\n    'from_now' => ':time لە ئێستاوە',\n    'after' => 'دوای :time',\n    'before' => 'پێش :time',\n    'diff_now' => 'ئێستا',\n    'diff_today' => 'ئەمڕۆ',\n    'diff_today_regexp' => 'ڕۆژ(?:\\\\s+لە)?(?:\\\\s+کاتژمێر)?',\n    'diff_yesterday' => 'دوێنێ',\n    'diff_yesterday_regexp' => 'دوێنێ(?:\\\\s+لە)?(?:\\\\s+کاتژمێر)?',\n    'diff_tomorrow' => 'سبەینێ',\n    'diff_tomorrow_regexp' => 'سبەینێ(?:\\\\s+لە)?(?:\\\\s+کاتژمێر)?',\n    'diff_before_yesterday' => 'پێش دوێنێ',\n    'diff_after_tomorrow' => 'دوای سبەینێ',\n    'period_recurrences' => implode('|', ['{0}جار', '{1}جار', '{2}:count دووجار', ']2,11[:count جار', ']10,Inf[:count جار']),\n    'period_interval' => 'هەموو :interval',\n    'period_start_date' => 'لە :date',\n    'period_end_date' => 'بۆ :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['یەکشەممە', 'دووشەممە', 'سێشەممە', 'چوارشەممە', 'پێنجشەممە', 'هەینی', 'شەممە'],\n    'weekdays_short' => ['یەکشەممە', 'دووشەممە', 'سێشەممە', 'چوارشەممە', 'پێنجشەممە', 'هەینی', 'شەممە'],\n    'weekdays_min' => ['یەکشەممە', 'دووشەممە', 'سێشەممە', 'چوارشەممە', 'پێنجشەممە', 'هەینی', 'شەممە'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ئەمڕۆ لە کاتژمێر] LT',\n        'nextDay' => '[سبەینێ لە کاتژمێر] LT',\n        'nextWeek' => 'dddd [لە کاتژمێر] LT',\n        'lastDay' => '[دوێنێ لە کاتژمێر] LT',\n        'lastWeek' => 'dddd [لە کاتژمێر] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['پ.ن', 'د.ن'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ti.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ti_ER.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SL.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bi.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/bi_VU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_NE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_BR.php","ext":"php","size":894,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Cassiano Montanari\n * - Eduardo Dalla Vecchia\n * - David Rodrigues\n * - Matt Pope\n * - François B\n * - Prodis\n * - Marlon Maxwel\n * - JD Isaacks\n * - Raphael Amorim\n * - Rafael Raupp\n * - felipeleite1\n * - swalker\n * - Lucas Macedo\n * - Paulo Freitas\n * - Sebastian Thierer\n */\nreturn array_replace_recursive(require __DIR__.'/pt.php', [\n    'period_recurrences' => 'uma|:count vez',\n    'period_interval' => 'toda :interval',\n    'formats' => [\n        'LLL' => 'D [de] MMMM [de] YYYY [às] HH:mm',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',\n    ],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dav.php","ext":"php","size":1274,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['Luma lwa K', 'luma lwa p'],\n    'weekdays' => ['Ituku ja jumwa', 'Kuramuka jimweri', 'Kuramuka kawi', 'Kuramuka kadadu', 'Kuramuka kana', 'Kuramuka kasanu', 'Kifula nguwo'],\n    'weekdays_short' => ['Jum', 'Jim', 'Kaw', 'Kad', 'Kan', 'Kas', 'Ngu'],\n    'weekdays_min' => ['Jum', 'Jim', 'Kaw', 'Kad', 'Kan', 'Kas', 'Ngu'],\n    'months' => ['Mori ghwa imbiri', 'Mori ghwa kawi', 'Mori ghwa kadadu', 'Mori ghwa kana', 'Mori ghwa kasanu', 'Mori ghwa karandadu', 'Mori ghwa mfungade', 'Mori ghwa wunyanya', 'Mori ghwa ikenda', 'Mori ghwa ikumi', 'Mori ghwa ikumi na imweri', 'Mori ghwa ikumi na iwi'],\n    'months_short' => ['Imb', 'Kaw', 'Kad', 'Kan', 'Kas', 'Kar', 'Mfu', 'Wun', 'Ike', 'Iku', 'Imw', 'Iwi'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dv_MV.php","ext":"php","size":2693,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ahmed Ali\n */\n\n$months = [\n    'ޖެނުއަރީ',\n    'ފެބްރުއަރީ',\n    'މާރިޗު',\n    'އޭޕްރީލު',\n    'މޭ',\n    'ޖޫން',\n    'ޖުލައި',\n    'އޯގަސްޓު',\n    'ސެޕްޓެމްބަރު',\n    'އޮކްޓޯބަރު',\n    'ނޮވެމްބަރު',\n    'ޑިސެމްބަރު',\n];\n\n$weekdays = [\n    'އާދިއްތަ',\n    'ހޯމަ',\n    'އަންގާރަ',\n    'ބުދަ',\n    'ބުރާސްފަތި',\n    'ހުކުރު',\n    'ހޮނިހިރު',\n];\n\nreturn [\n    'year' => '{0}އަހަރެއް|[1,Inf]:count އަހަރު',\n    'y' => '{0}އަހަރެއް|[1,Inf]:count އަހަރު',\n    'month' => '{0}މައްސަރެއް|[1,Inf]:count މަސް',\n    'm' => '{0}މައްސަރެއް|[1,Inf]:count މަސް',\n    'week' => '{0}ހަފްތާއެއް|[1,Inf]:count ހަފްތާ',\n    'w' => '{0}ހަފްތާއެއް|[1,Inf]:count ހަފްތާ',\n    'day' => '{0}ދުވަސް|[1,Inf]:count ދުވަސް',\n    'd' => '{0}ދުވަސް|[1,Inf]:count ދުވަސް',\n    'hour' => '{0}ގަޑިއިރެއް|[1,Inf]:count ގަޑި',\n    'h' => '{0}ގަޑިއިރެއް|[1,Inf]:count ގަޑި',\n    'minute' => '{0}މިނެޓެއް|[1,Inf]:count މިނެޓް',\n    'min' => '{0}މިނެޓެއް|[1,Inf]:count މިނެޓް',\n    'second' => '{0}ސިކުންތެއް|[1,Inf]:count ސިކުންތު',\n    's' => '{0}ސިކުންތެއް|[1,Inf]:count ސިކުންތު',\n    'ago' => ':time ކުރިން',\n    'from_now' => ':time ފަހުން',\n    'after' => ':time ފަހުން',\n    'before' => ':time ކުރި',\n    'diff_yesterday' => 'އިއްޔެ',\n    'diff_today' => 'މިއަދު',\n    'diff_tomorrow' => 'މާދަމާ',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[މިއަދު] LT',\n        'nextDay' => '[މާދަމާ] LT',\n        'nextWeek' => 'dddd LT',\n        'lastDay' => '[އިއްޔެ] LT',\n        'lastWeek' => '[ފާއިތުވި] dddd LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['މކ', 'މފ'],\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => $weekdays,\n    'weekdays_short' => $weekdays,\n    'weekdays_min' => ['އާދި', 'ހޯމަ', 'އަން', 'ބުދަ', 'ބުރާ', 'ހުކު', 'ހޮނި'],\n    'list' => [', ', ' އަދި '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dua.php","ext":"php","size":2161,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['idiɓa', 'ebyámu'],\n    'weekdays' => ['éti', 'mɔ́sú', 'kwasú', 'mukɔ́sú', 'ŋgisú', 'ɗónɛsú', 'esaɓasú'],\n    'weekdays_short' => ['ét', 'mɔ́s', 'kwa', 'muk', 'ŋgi', 'ɗón', 'esa'],\n    'weekdays_min' => ['ét', 'mɔ́s', 'kwa', 'muk', 'ŋgi', 'ɗón', 'esa'],\n    'months' => ['dimɔ́di', 'ŋgɔndɛ', 'sɔŋɛ', 'diɓáɓá', 'emiasele', 'esɔpɛsɔpɛ', 'madiɓɛ́díɓɛ́', 'diŋgindi', 'nyɛtɛki', 'mayésɛ́', 'tiníní', 'eláŋgɛ́'],\n    'months_short' => ['di', 'ŋgɔn', 'sɔŋ', 'diɓ', 'emi', 'esɔ', 'mad', 'diŋ', 'nyɛt', 'may', 'tin', 'elá'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count ma mbu', // less reliable\n    'y' => ':count ma mbu', // less reliable\n    'a_year' => ':count ma mbu', // less reliable\n\n    'month' => ':count myo̱di', // less reliable\n    'm' => ':count myo̱di', // less reliable\n    'a_month' => ':count myo̱di', // less reliable\n\n    'week' => ':count woki', // less reliable\n    'w' => ':count woki', // less reliable\n    'a_week' => ':count woki', // less reliable\n\n    'day' => ':count buńa', // less reliable\n    'd' => ':count buńa', // less reliable\n    'a_day' => ':count buńa', // less reliable\n\n    'hour' => ':count ma awa', // less reliable\n    'h' => ':count ma awa', // less reliable\n    'a_hour' => ':count ma awa', // less reliable\n\n    'minute' => ':count minuti', // less reliable\n    'min' => ':count minuti', // less reliable\n    'a_minute' => ':count minuti', // less reliable\n\n    'second' => ':count maba', // less reliable\n    's' => ':count maba', // less reliable\n    'a_second' => ':count maba', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/quz_PE.php","ext":"php","size":1717,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Sugar Labs // OLPC sugarlabs.org libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['iniru', 'phiwriru', 'marsu', 'awril', 'mayu', 'huniyu', 'huliyu', 'agustu', 'siptiyimri', 'uktuwri', 'nuwiyimri', 'tisiyimri'],\n    'months_short' => ['ini', 'phi', 'mar', 'awr', 'may', 'hun', 'hul', 'agu', 'sip', 'ukt', 'nuw', 'tis'],\n    'weekdays' => ['tuminku', 'lunis', 'martis', 'miyirkulis', 'juywis', 'wiyirnis', 'sawatu'],\n    'weekdays_short' => ['tum', 'lun', 'mar', 'miy', 'juy', 'wiy', 'saw'],\n    'weekdays_min' => ['tum', 'lun', 'mar', 'miy', 'juy', 'wiy', 'saw'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'minute' => ':count uchuy', // less reliable\n    'min' => ':count uchuy', // less reliable\n    'a_minute' => ':count uchuy', // less reliable\n\n    'year' => ':count wata',\n    'y' => ':count wata',\n    'a_year' => ':count wata',\n\n    'month' => ':count killa',\n    'm' => ':count killa',\n    'a_month' => ':count killa',\n\n    'week' => ':count simana',\n    'w' => ':count simana',\n    'a_week' => ':count simana',\n\n    'day' => ':count pʼunchaw',\n    'd' => ':count pʼunchaw',\n    'a_day' => ':count pʼunchaw',\n\n    'hour' => ':count ura',\n    'h' => ':count ura',\n    'a_hour' => ':count ura',\n\n    'second' => ':count iskay ñiqin',\n    's' => ':count iskay ñiqin',\n    'a_second' => ':count iskay ñiqin',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/et.php","ext":"php","size":2851,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Andres Ivanov\n * - Tsutomu Kuroda\n * - tjku\n * - Max Melentiev\n * - Juanito Fatas\n * - RM87\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Esko Lehtme\n * - Mart Karu\n * - Nicolás Hock Isaza\n * - Kevin Valdek\n * - Zahhar Kirillov\n * - João Magalhães\n * - Ingmar\n * - Illimar Tambek\n * - Mihkel\n */\nreturn [\n    'year' => ':count aasta|:count aastat',\n    'y' => ':count a',\n    'month' => ':count kuu|:count kuud',\n    'm' => ':count k',\n    'week' => ':count nädal|:count nädalat',\n    'w' => ':count näd',\n    'day' => ':count päev|:count päeva',\n    'd' => ':count p',\n    'hour' => ':count tund|:count tundi',\n    'h' => ':count t',\n    'minute' => ':count minut|:count minutit',\n    'min' => ':count min',\n    'second' => ':count sekund|:count sekundit',\n    's' => ':count s',\n    'ago' => ':time tagasi',\n    'from_now' => ':time pärast',\n    'after' => ':time pärast',\n    'before' => ':time enne',\n    'year_from_now' => ':count aasta',\n    'month_from_now' => ':count kuu',\n    'week_from_now' => ':count nädala',\n    'day_from_now' => ':count päeva',\n    'hour_from_now' => ':count tunni',\n    'minute_from_now' => ':count minuti',\n    'second_from_now' => ':count sekundi',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'diff_now' => 'nüüd',\n    'diff_today' => 'täna',\n    'diff_yesterday' => 'eile',\n    'diff_tomorrow' => 'homme',\n    'diff_before_yesterday' => 'üleeile',\n    'diff_after_tomorrow' => 'ülehomme',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[täna] LT',\n        'nextDay' => '[homme] LT',\n        'lastDay' => '[eile] LT',\n        'nextWeek' => 'dddd LT',\n        'lastWeek' => '[eelmine] dddd LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['jaanuar', 'veebruar', 'märts', 'aprill', 'mai', 'juuni', 'juuli', 'august', 'september', 'oktoober', 'november', 'detsember'],\n    'months_short' => ['jaan', 'veebr', 'märts', 'apr', 'mai', 'juuni', 'juuli', 'aug', 'sept', 'okt', 'nov', 'dets'],\n    'weekdays' => ['pühapäev', 'esmaspäev', 'teisipäev', 'kolmapäev', 'neljapäev', 'reede', 'laupäev'],\n    'weekdays_short' => ['P', 'E', 'T', 'K', 'N', 'R', 'L'],\n    'weekdays_min' => ['P', 'E', 'T', 'K', 'N', 'R', 'L'],\n    'list' => [', ', ' ja '],\n    'meridiem' => ['enne lõunat', 'pärast lõunat'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_IT.php","ext":"php","size":346,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Matthias Dieter Wallno:fer libc-locales@sourceware.org\n */\nreturn require __DIR__.'/de.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MH.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mag.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mag_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kok.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/kok_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kl_GL.php","ext":"php","size":2620,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Danish Standards Association    bug-glibc-locales@gnu.org\n * - John Eyðstein Johannesen (mashema)\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',\n    ],\n    'months' => ['januaarip', 'februaarip', 'marsip', 'apriilip', 'maajip', 'juunip', 'juulip', 'aggustip', 'septembarip', 'oktobarip', 'novembarip', 'decembarip'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    'weekdays' => ['sapaat', 'ataasinngorneq', 'marlunngorneq', 'pingasunngorneq', 'sisamanngorneq', 'tallimanngorneq', 'arfininngorneq'],\n    'weekdays_short' => ['sap', 'ata', 'mar', 'pin', 'sis', 'tal', 'arf'],\n    'weekdays_min' => ['sap', 'ata', 'mar', 'pin', 'sis', 'tal', 'arf'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => '{1}ukioq :count|{0}:count ukiut|[-Inf,Inf]ukiut :count',\n    'a_year' => '{1}ukioq|{0}:count ukiut|[-Inf,Inf]ukiut :count',\n    'y' => '{1}:countyr|{0}:countyrs|[-Inf,Inf]:countyrs',\n\n    'month' => '{1}qaammat :count|{0}:count qaammatit|[-Inf,Inf]qaammatit :count',\n    'a_month' => '{1}qaammat|{0}:count qaammatit|[-Inf,Inf]qaammatit :count',\n    'm' => '{1}:countmo|{0}:countmos|[-Inf,Inf]:countmos',\n\n    'week' => '{1}:count sap. ak.|{0}:count sap. ak.|[-Inf,Inf]:count sap. ak.',\n    'a_week' => '{1}a sap. ak.|{0}:count sap. ak.|[-Inf,Inf]:count sap. ak.',\n    'w' => ':countw',\n\n    'day' => '{1}:count ulloq|{0}:count ullut|[-Inf,Inf]:count ullut',\n    'a_day' => '{1}a ulloq|{0}:count ullut|[-Inf,Inf]:count ullut',\n    'd' => ':countd',\n\n    'hour' => '{1}:count tiimi|{0}:count tiimit|[-Inf,Inf]:count tiimit',\n    'a_hour' => '{1}tiimi|{0}:count tiimit|[-Inf,Inf]:count tiimit',\n    'h' => ':counth',\n\n    'minute' => '{1}:count minutsi|{0}:count minutsit|[-Inf,Inf]:count minutsit',\n    'a_minute' => '{1}a minutsi|{0}:count minutsit|[-Inf,Inf]:count minutsit',\n    'min' => ':countm',\n\n    'second' => '{1}:count sikunti|{0}:count sikuntit|[-Inf,Inf]:count sikuntit',\n    'a_second' => '{1}sikunti|{0}:count sikuntit|[-Inf,Inf]:count sikuntit',\n    's' => ':counts',\n\n    'ago' => ':time matuma siorna',\n\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ayc.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ayc_PE.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/csb.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/csb_PL.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ln.php","ext":"php","size":2048,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ubuntu René Manassé GALEKWA renemanasse@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'months' => ['sánzá ya yambo', 'sánzá ya míbalé', 'sánzá ya mísáto', 'sánzá ya mínei', 'sánzá ya mítáno', 'sánzá ya motóbá', 'sánzá ya nsambo', 'sánzá ya mwambe', 'sánzá ya libwa', 'sánzá ya zómi', 'sánzá ya zómi na mɔ̌kɔ́', 'sánzá ya zómi na míbalé'],\n    'months_short' => ['yan', 'fbl', 'msi', 'apl', 'mai', 'yun', 'yul', 'agt', 'stb', 'ɔtb', 'nvb', 'dsb'],\n    'weekdays' => ['Lomíngo', 'Mosálá mɔ̌kɔ́', 'Misálá míbalé', 'Misálá mísáto', 'Misálá mínei', 'Misálá mítáno', 'Mpɔ́sɔ'],\n    'weekdays_short' => ['m1.', 'm2.', 'm3.', 'm4.', 'm5.', 'm6.', 'm7.'],\n    'weekdays_min' => ['m1.', 'm2.', 'm3.', 'm4.', 'm5.', 'm6.', 'm7.'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => 'mbula :count',\n    'y' => 'mbula :count',\n    'a_year' => 'mbula :count',\n\n    'month' => 'sánzá :count',\n    'm' => 'sánzá :count',\n    'a_month' => 'sánzá :count',\n\n    'week' => 'mpɔ́sɔ :count',\n    'w' => 'mpɔ́sɔ :count',\n    'a_week' => 'mpɔ́sɔ :count',\n\n    'day' => 'mokɔlɔ :count',\n    'd' => 'mokɔlɔ :count',\n    'a_day' => 'mokɔlɔ :count',\n\n    'hour' => 'ngonga :count',\n    'h' => 'ngonga :count',\n    'a_hour' => 'ngonga :count',\n\n    'minute' => 'miniti :count',\n    'min' => 'miniti :count',\n    'a_minute' => 'miniti :count',\n\n    'second' => 'segɔnde :count',\n    's' => 'segɔnde :count',\n    'a_second' => 'segɔnde :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GU.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tpi_PG.php","ext":"php","size":1629,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Samsung Electronics Co., Ltd.    akhilesh.k@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Janueri', 'Februeri', 'Mas', 'Epril', 'Me', 'Jun', 'Julai', 'Ogas', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mas', 'Epr', 'Me', 'Jun', 'Jul', 'Oga', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Sande', 'Mande', 'Tunde', 'Trinde', 'Fonde', 'Fraide', 'Sarere'],\n    'weekdays_short' => ['San', 'Man', 'Tun', 'Tri', 'Fon', 'Fra', 'Sar'],\n    'weekdays_min' => ['San', 'Man', 'Tun', 'Tri', 'Fon', 'Fra', 'Sar'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['biknait', 'apinun'],\n\n    'year' => 'yia :count',\n    'y' => 'yia :count',\n    'a_year' => 'yia :count',\n\n    'month' => ':count mun',\n    'm' => ':count mun',\n    'a_month' => ':count mun',\n\n    'week' => ':count wik',\n    'w' => ':count wik',\n    'a_week' => ':count wik',\n\n    'day' => ':count de',\n    'd' => ':count de',\n    'a_day' => ':count de',\n\n    'hour' => ':count aua',\n    'h' => ':count aua',\n    'a_hour' => ':count aua',\n\n    'minute' => ':count minit',\n    'min' => ':count minit',\n    'a_minute' => ':count minit',\n\n    'second' => ':count namba tu',\n    's' => ':count namba tu',\n    'a_second' => ':count namba tu',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ko_KP.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ko.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ta_SG.php","ext":"php","size":1455,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ta.php', [\n    'formats' => [\n        'LT' => 'a h:mm',\n        'LTS' => 'a h:mm:ss',\n        'L' => 'D/M/yy',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM, YYYY, a h:mm',\n        'LLLL' => 'dddd, D MMMM, YYYY, a h:mm',\n    ],\n    'months' => ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'],\n    'months_short' => ['ஜன.', 'பிப்.', 'மார்.', 'ஏப்.', 'மே', 'ஜூன்', 'ஜூலை', 'ஆக.', 'செப்.', 'அக்.', 'நவ.', 'டிச.'],\n    'weekdays' => ['ஞாயிறு', 'திங்கள்', 'செவ்வாய்', 'புதன்', 'வியாழன்', 'வெள்ளி', 'சனி'],\n    'weekdays_short' => ['ஞாயி.', 'திங்.', 'செவ்.', 'புத.', 'வியா.', 'வெள்.', 'சனி'],\n    'weekdays_min' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'meridiem' => ['மு.ப', 'பி.ப'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/byn_ER.php","ext":"php","size":1341,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ልደትሪ', 'ካብኽብቲ', 'ክብላ', 'ፋጅኺሪ', 'ክቢቅሪ', 'ምኪኤል ትጓ̅ኒሪ', 'ኰርኩ', 'ማርያም ትሪ', 'ያኸኒ መሳቅለሪ', 'መተሉ', 'ምኪኤል መሽወሪ', 'ተሕሳስሪ'],\n    'months_short' => ['ልደት', 'ካብኽ', 'ክብላ', 'ፋጅኺ', 'ክቢቅ', 'ም/ት', 'ኰር', 'ማርያ', 'ያኸኒ', 'መተሉ', 'ም/ም', 'ተሕሳ'],\n    'weekdays' => ['ሰንበር ቅዳዅ', 'ሰኑ', 'ሰሊጝ', 'ለጓ ወሪ ለብዋ', 'ኣምድ', 'ኣርብ', 'ሰንበር ሽጓዅ'],\n    'weekdays_short' => ['ሰ/ቅ', 'ሰኑ', 'ሰሊጝ', 'ለጓ', 'ኣምድ', 'ኣርብ', 'ሰ/ሽ'],\n    'weekdays_min' => ['ሰ/ቅ', 'ሰኑ', 'ሰሊጝ', 'ለጓ', 'ኣምድ', 'ኣርብ', 'ሰ/ሽ'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ፋዱስ ጃብ', 'ፋዱስ ደምቢ'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nmg.php","ext":"php","size":1233,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['maná', 'kugú'],\n    'weekdays' => ['sɔ́ndɔ', 'mɔ́ndɔ', 'sɔ́ndɔ mafú mába', 'sɔ́ndɔ mafú málal', 'sɔ́ndɔ mafú mána', 'mabágá má sukul', 'sásadi'],\n    'weekdays_short' => ['sɔ́n', 'mɔ́n', 'smb', 'sml', 'smn', 'mbs', 'sas'],\n    'weekdays_min' => ['sɔ́n', 'mɔ́n', 'smb', 'sml', 'smn', 'mbs', 'sas'],\n    'months' => ['ngwɛn matáhra', 'ngwɛn ńmba', 'ngwɛn ńlal', 'ngwɛn ńna', 'ngwɛn ńtan', 'ngwɛn ńtuó', 'ngwɛn hɛmbuɛrí', 'ngwɛn lɔmbi', 'ngwɛn rɛbvuâ', 'ngwɛn wum', 'ngwɛn wum navǔr', 'krísimin'],\n    'months_short' => ['ng1', 'ng2', 'ng3', 'ng4', 'ng5', 'ng6', 'ng7', 'ng8', 'ng9', 'ng10', 'ng11', 'kris'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/si_LK.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/si.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_NI.php","ext":"php","size":449,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_SA.php","ext":"php","size":5364,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n * - Atef Ben Ali (atefBB)\n * - Mohamed Sabil (mohamedsabil83)\n * - Abdullah-Alhariri\n */\n$months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'a_year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'a_month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'a_week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'a_day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'a_hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'a_minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'a_second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => 'في :time',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدا(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم على الساعة] LT',\n        'nextDay' => '[غدا على الساعة] LT',\n        'nextWeek' => 'dddd [على الساعة] LT',\n        'lastDay' => '[أمس على الساعة] LT',\n        'lastWeek' => 'dddd [على الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mk.php","ext":"php","size":4056,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Sashko Todorov\n * - Josh Soref\n * - François B\n * - Serhan Apaydın\n * - Borislav Mickov\n * - JD Isaacks\n * - Tomi Atanasoski\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count година|:count години',\n    'a_year' => 'година|:count години',\n    'y' => ':count год.',\n    'month' => ':count месец|:count месеци',\n    'a_month' => 'месец|:count месеци',\n    'm' => ':count месец|:count месеци',\n    'week' => ':count седмица|:count седмици',\n    'a_week' => 'седмица|:count седмици',\n    'w' => ':count седмица|:count седмици',\n    'day' => ':count ден|:count дена',\n    'a_day' => 'ден|:count дена',\n    'd' => ':count ден|:count дена',\n    'hour' => ':count час|:count часа',\n    'a_hour' => 'час|:count часа',\n    'h' => ':count час|:count часа',\n    'minute' => ':count минута|:count минути',\n    'a_minute' => 'минута|:count минути',\n    'min' => ':count мин.',\n    'second' => ':count секунда|:count секунди',\n    'a_second' => 'неколку секунди|:count секунди',\n    's' => ':count сек.',\n    'ago' => 'пред :time',\n    'from_now' => 'после :time',\n    'after' => 'по :time',\n    'before' => 'пред :time',\n    'diff_now' => 'сега',\n    'diff_today' => 'Денес',\n    'diff_today_regexp' => 'Денес(?:\\\\s+во)?',\n    'diff_yesterday' => 'вчера',\n    'diff_yesterday_regexp' => 'Вчера(?:\\\\s+во)?',\n    'diff_tomorrow' => 'утре',\n    'diff_tomorrow_regexp' => 'Утре(?:\\\\s+во)?',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'D.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Денес во] LT',\n        'nextDay' => '[Утре во] LT',\n        'nextWeek' => '[Во] dddd [во] LT',\n        'lastDay' => '[Вчера во] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0, 3, 6 => '[Изминатата] dddd [во] LT',\n            default => '[Изминатиот] dddd [во] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        $lastDigit = $number % 10;\n        $last2Digits = $number % 100;\n        if ($number === 0) {\n            return $number.'-ев';\n        }\n        if ($last2Digits === 0) {\n            return $number.'-ен';\n        }\n        if ($last2Digits > 10 && $last2Digits < 20) {\n            return $number.'-ти';\n        }\n        if ($lastDigit === 1) {\n            return $number.'-ви';\n        }\n        if ($lastDigit === 2) {\n            return $number.'-ри';\n        }\n        if ($lastDigit === 7 || $lastDigit === 8) {\n            return $number.'-ми';\n        }\n\n        return $number.'-ти';\n    },\n    'months' => ['јануари', 'февруари', 'март', 'април', 'мај', 'јуни', 'јули', 'август', 'септември', 'октомври', 'ноември', 'декември'],\n    'months_short' => ['јан', 'фев', 'мар', 'апр', 'мај', 'јун', 'јул', 'авг', 'сеп', 'окт', 'ное', 'дек'],\n    'weekdays' => ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота'],\n    'weekdays_short' => ['нед', 'пон', 'вто', 'сре', 'чет', 'пет', 'саб'],\n    'weekdays_min' => ['нe', 'пo', 'вт', 'ср', 'че', 'пе', 'сa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' и '],\n    'meridiem' => ['АМ', 'ПМ'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/doi_IN.php","ext":"php","size":1652,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat Pune    libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फरवरी', 'मार्च', 'एप्रैल', 'मेई', 'जून', 'जूलै', 'अगस्त', 'सितंबर', 'अक्तूबर', 'नवंबर', 'दिसंबर'],\n    'months_short' => ['जनवरी', 'फरवरी', 'मार्च', 'एप्रैल', 'मेई', 'जून', 'जूलै', 'अगस्त', 'सितंबर', 'अक्तूबर', 'नवंबर', 'दिसंबर'],\n    'weekdays' => ['ऐतबार', 'सोमबार', 'मंगलबर', 'बुधबार', 'बीरबार', 'शुक्करबार', 'श्नीचरबार'],\n    'weekdays_short' => ['ऐत', 'सोम', 'मंगल', 'बुध', 'बीर', 'शुक्कर', 'श्नीचर'],\n    'weekdays_min' => ['ऐत', 'सोम', 'मंगल', 'बुध', 'बीर', 'शुक्कर', 'श्नीचर'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['सञं', 'सबेर'],\n\n    'second' => ':count सङार', // less reliable\n    's' => ':count सङार', // less reliable\n    'a_second' => ':count सङार', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uz.php","ext":"php","size":3070,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Dmitriy Shabanov\n * - JD Isaacks\n * - Inoyatulloh\n * - Jamshid\n * - aarkhipov\n * - Philippe Vaucher\n * - felixthemagnificent\n * - Tsutomu Kuroda\n * - tjku\n * - Max Melentiev\n * - Juanito Fatas\n * - Alisher Ulugbekov\n * - Ergashev Adizbek\n */\nreturn [\n    'year' => ':count йил',\n    'a_year' => '{1}бир йил|:count йил',\n    'y' => ':count й',\n    'month' => ':count ой',\n    'a_month' => '{1}бир ой|:count ой',\n    'm' => ':count о',\n    'week' => ':count ҳафта',\n    'a_week' => '{1}бир ҳафта|:count ҳафта',\n    'w' => ':count ҳ',\n    'day' => ':count кун',\n    'a_day' => '{1}бир кун|:count кун',\n    'd' => ':count к',\n    'hour' => ':count соат',\n    'a_hour' => '{1}бир соат|:count соат',\n    'h' => ':count с',\n    'minute' => ':count дақиқа',\n    'a_minute' => '{1}бир дақиқа|:count дақиқа',\n    'min' => ':count д',\n    'second' => ':count сония',\n    'a_second' => '{1}сония|:count сония',\n    's' => ':count с',\n    'ago' => ':time аввал',\n    'from_now' => 'Якин :time ичида',\n    'after' => ':timeдан кейин',\n    'before' => ':time олдин',\n    'diff_now' => 'ҳозир',\n    'diff_today' => 'Бугун',\n    'diff_today_regexp' => 'Бугун(?:\\\\s+соат)?',\n    'diff_yesterday' => 'Кеча',\n    'diff_yesterday_regexp' => 'Кеча(?:\\\\s+соат)?',\n    'diff_tomorrow' => 'Эртага',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'D MMMM YYYY, dddd HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Бугун соат] LT [да]',\n        'nextDay' => '[Эртага] LT [да]',\n        'nextWeek' => 'dddd [куни соат] LT [да]',\n        'lastDay' => '[Кеча соат] LT [да]',\n        'lastWeek' => '[Утган] dddd [куни соат] LT [да]',\n        'sameElse' => 'L',\n    ],\n    'months' => ['январ', 'феврал', 'март', 'апрел', 'май', 'июн', 'июл', 'август', 'сентябр', 'октябр', 'ноябр', 'декабр'],\n    'months_short' => ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'weekdays' => ['якшанба', 'душанба', 'сешанба', 'чоршанба', 'пайшанба', 'жума', 'шанба'],\n    'weekdays_short' => ['якш', 'душ', 'сеш', 'чор', 'пай', 'жум', 'шан'],\n    'weekdays_min' => ['як', 'ду', 'се', 'чо', 'па', 'жу', 'ша'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['эрталаб', 'кечаси'],\n    'list' => [', ', ' ва '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru_MD.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ru.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/agr_PE.php","ext":"php","size":1613,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - somosazucar.org    libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Petsatin', 'Kupitin', 'Uyaitin', 'Tayutin', 'Kegketin', 'Tegmatin', 'Kuntutin', 'Yagkujutin', 'Daiktatin', 'Ipamtatin', 'Shinutin', 'Sakamtin'],\n    'months_short' => ['Pet', 'Kup', 'Uya', 'Tay', 'Keg', 'Teg', 'Kun', 'Yag', 'Dait', 'Ipam', 'Shin', 'Sak'],\n    'weekdays' => ['Tuntuamtin', 'Achutin', 'Kugkuktin', 'Saketin', 'Shimpitin', 'Imaptin', 'Bataetin'],\n    'weekdays_short' => ['Tun', 'Ach', 'Kug', 'Sak', 'Shim', 'Im', 'Bat'],\n    'weekdays_min' => ['Tun', 'Ach', 'Kug', 'Sak', 'Shim', 'Im', 'Bat'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 7,\n    'meridiem' => ['VM', 'NM'],\n\n    'year' => ':count yaya', // less reliable\n    'y' => ':count yaya', // less reliable\n    'a_year' => ':count yaya', // less reliable\n\n    'month' => ':count nantu', // less reliable\n    'm' => ':count nantu', // less reliable\n    'a_month' => ':count nantu', // less reliable\n\n    'day' => ':count nayaim', // less reliable\n    'd' => ':count nayaim', // less reliable\n    'a_day' => ':count nayaim', // less reliable\n\n    'hour' => ':count kuwiš', // less reliable\n    'h' => ':count kuwiš', // less reliable\n    'a_hour' => ':count kuwiš', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_PY.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gl_ES.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/gl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_MX.php","ext":"php","size":463,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'diff_before_yesterday' => 'antier',\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BM.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_ZW.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ln_AO.php","ext":"php","size":654,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ln.php', [\n    'weekdays' => ['eyenga', 'mokɔlɔ mwa yambo', 'mokɔlɔ mwa míbalé', 'mokɔlɔ mwa mísáto', 'mokɔlɔ ya mínéi', 'mokɔlɔ ya mítáno', 'mpɔ́sɔ'],\n    'weekdays_short' => ['eye', 'ybo', 'mbl', 'mst', 'min', 'mtn', 'mps'],\n    'weekdays_min' => ['eye', 'ybo', 'mbl', 'mst', 'min', 'mtn', 'mps'],\n    'meridiem' => ['ntɔ́ngɔ́', 'mpókwa'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CD.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uz_Latn.php","ext":"php","size":2477,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Rasulbek\n * - Ilyosjon Kamoldinov (ilyosjon09)\n */\nreturn [\n    'year' => ':count yil',\n    'a_year' => '{1}bir yil|:count yil',\n    'y' => ':count y',\n    'month' => ':count oy',\n    'a_month' => '{1}bir oy|:count oy',\n    'm' => ':count o',\n    'week' => ':count hafta',\n    'a_week' => '{1}bir hafta|:count hafta',\n    'w' => ':count h',\n    'day' => ':count kun',\n    'a_day' => '{1}bir kun|:count kun',\n    'd' => ':count k',\n    'hour' => ':count soat',\n    'a_hour' => '{1}bir soat|:count soat',\n    'h' => ':count soat',\n    'minute' => ':count daqiqa',\n    'a_minute' => '{1}bir daqiqa|:count daqiqa',\n    'min' => ':count d',\n    'second' => ':count soniya',\n    'a_second' => '{1}soniya|:count soniya',\n    's' => ':count son.',\n    'ago' => ':time avval',\n    'from_now' => 'Yaqin :time ichida',\n    'after' => ':timedan keyin',\n    'before' => ':time oldin',\n    'diff_yesterday' => 'Kecha',\n    'diff_yesterday_regexp' => 'Kecha(?:\\\\s+soat)?',\n    'diff_today' => 'Bugun',\n    'diff_today_regexp' => 'Bugun(?:\\\\s+soat)?',\n    'diff_tomorrow' => 'Ertaga',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'D MMMM YYYY, dddd HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Bugun soat] LT [da]',\n        'nextDay' => '[Ertaga] LT [da]',\n        'nextWeek' => 'dddd [kuni soat] LT [da]',\n        'lastDay' => '[Kecha soat] LT [da]',\n        'lastWeek' => '[O\\'tgan] dddd [kuni soat] LT [da]',\n        'sameElse' => 'L',\n    ],\n    'months' => ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'Iyun', 'Iyul', 'Avgust', 'Sentabr', 'Oktabr', 'Noyabr', 'Dekabr'],\n    'months_short' => ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'Iyun', 'Iyul', 'Avg', 'Sen', 'Okt', 'Noy', 'Dek'],\n    'weekdays' => ['Yakshanba', 'Dushanba', 'Seshanba', 'Chorshanba', 'Payshanba', 'Juma', 'Shanba'],\n    'weekdays_short' => ['Yak', 'Dush', 'Sesh', 'Chor', 'Pay', 'Jum', 'Shan'],\n    'weekdays_min' => ['Ya', 'Du', 'Se', 'Cho', 'Pa', 'Ju', 'Sha'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' va '],\n    'meridiem' => ['TO', 'TK'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sq.php","ext":"php","size":2646,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - JD Isaacks\n * - Fadion Dashi\n */\nreturn [\n    'year' => ':count vit|:count vjet',\n    'a_year' => 'një vit|:count vite',\n    'y' => ':count v.',\n    'month' => ':count muaj',\n    'a_month' => 'një muaj|:count muaj',\n    'm' => ':count muaj',\n    'week' => ':count javë',\n    'a_week' => ':count javë|:count javë',\n    'w' => ':count j.',\n    'day' => ':count ditë',\n    'a_day' => 'një ditë|:count ditë',\n    'd' => ':count d.',\n    'hour' => ':count orë',\n    'a_hour' => 'një orë|:count orë',\n    'h' => ':count o.',\n    'minute' => ':count minutë|:count minuta',\n    'a_minute' => 'një minutë|:count minuta',\n    'min' => ':count min.',\n    'second' => ':count sekondë|:count sekonda',\n    'a_second' => 'disa sekonda|:count sekonda',\n    's' => ':count s.',\n    'ago' => ':time më parë',\n    'from_now' => 'në :time',\n    'after' => ':time pas',\n    'before' => ':time para',\n    'diff_now' => 'tani',\n    'diff_today' => 'Sot',\n    'diff_today_regexp' => 'Sot(?:\\\\s+në)?',\n    'diff_yesterday' => 'dje',\n    'diff_yesterday_regexp' => 'Dje(?:\\\\s+në)?',\n    'diff_tomorrow' => 'nesër',\n    'diff_tomorrow_regexp' => 'Nesër(?:\\\\s+në)?',\n    'diff_before_yesterday' => 'pardje',\n    'diff_after_tomorrow' => 'pasnesër',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Sot në] LT',\n        'nextDay' => '[Nesër në] LT',\n        'nextWeek' => 'dddd [në] LT',\n        'lastDay' => '[Dje në] LT',\n        'lastWeek' => 'dddd [e kaluar në] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'meridiem' => ['PD', 'MD'],\n    'months' => ['janar', 'shkurt', 'mars', 'prill', 'maj', 'qershor', 'korrik', 'gusht', 'shtator', 'tetor', 'nëntor', 'dhjetor'],\n    'months_short' => ['jan', 'shk', 'mar', 'pri', 'maj', 'qer', 'kor', 'gus', 'sht', 'tet', 'nën', 'dhj'],\n    'weekdays' => ['e diel', 'e hënë', 'e martë', 'e mërkurë', 'e enjte', 'e premte', 'e shtunë'],\n    'weekdays_short' => ['die', 'hën', 'mar', 'mër', 'enj', 'pre', 'sht'],\n    'weekdays_min' => ['d', 'h', 'ma', 'më', 'e', 'p', 'sh'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' dhe '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_AU.php","ext":"php","size":682,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - François B\n * - Mayank Badola\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm A',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm A',\n    ],\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pap_CW.php","ext":"php","size":363,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - information from native speaker Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn require __DIR__.'/pap.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sh.php","ext":"php","size":1962,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Томица Кораћ\n * - Enrique Vidal\n * - Christopher Dell\n * - dmilisic\n * - danijel\n * - Miroslav Matkovic (mikki021)\n */\nreturn [\n    'diff_now' => 'sada',\n    'diff_yesterday' => 'juče',\n    'diff_tomorrow' => 'sutra',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'MMMM D, YYYY',\n        'LLL' => 'DD MMM HH:mm',\n        'LLLL' => 'MMMM DD, YYYY HH:mm',\n    ],\n    'year' => ':count godina|:count godine|:count godina',\n    'y' => ':count g.',\n    'month' => ':count mesec|:count meseca|:count meseci',\n    'm' => ':count m.',\n    'week' => ':count nedelja|:count nedelje|:count nedelja',\n    'w' => ':count n.',\n    'day' => ':count dan|:count dana|:count dana',\n    'd' => ':count d.',\n    'hour' => ':count sat|:count sata|:count sati',\n    'h' => ':count č.',\n    'minute' => ':count minut|:count minuta|:count minuta',\n    'min' => ':count min.',\n    'second' => ':count sekund|:count sekunde|:count sekundi',\n    's' => ':count s.',\n    'ago' => 'pre :time',\n    'from_now' => 'za :time',\n    'after' => 'nakon :time',\n    'before' => ':time raniјe',\n    'weekdays' => ['Nedelja', 'Ponedeljak', 'Utorak', 'Sreda', 'Četvrtak', 'Petak', 'Subota'],\n    'weekdays_short' => ['Ned', 'Pon', 'Uto', 'Sre', 'Čet', 'Pet', 'Sub'],\n    'weekdays_min' => ['Ned', 'Pon', 'Uto', 'Sre', 'Čet', 'Pet', 'Sub'],\n    'months' => ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Avg', 'Sep', 'Okt', 'Nov', 'Dec'],\n    'list' => [', ', ' i '],\n    'meridiem' => ['pre podne', 'po podne'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sw.php","ext":"php","size":2517,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - leyluj\n * - Josh Soref\n * - ryanhart2\n */\nreturn [\n    'year' => 'mwaka :count|miaka :count',\n    'a_year' => 'mwaka mmoja|miaka :count',\n    'y' => 'mwaka :count|miaka :count',\n    'month' => 'mwezi :count|miezi :count',\n    'a_month' => 'mwezi mmoja|miezi :count',\n    'm' => 'mwezi :count|miezi :count',\n    'week' => 'wiki :count',\n    'a_week' => 'wiki mmoja|wiki :count',\n    'w' => 'w. :count',\n    'day' => 'siku :count',\n    'a_day' => 'siku moja|masiku :count',\n    'd' => 'si. :count',\n    'hour' => 'saa :count|masaa :count',\n    'a_hour' => 'saa limoja|masaa :count',\n    'h' => 'saa :count|masaa :count',\n    'minute' => 'dakika :count',\n    'a_minute' => 'dakika moja|dakika :count',\n    'min' => 'd. :count',\n    'second' => 'sekunde :count',\n    'a_second' => 'hivi punde|sekunde :count',\n    's' => 'se. :count',\n    'ago' => 'tokea :time',\n    'from_now' => ':time baadaye',\n    'after' => ':time baada',\n    'before' => ':time kabla',\n    'diff_now' => 'sasa hivi',\n    'diff_today' => 'leo',\n    'diff_today_regexp' => 'leo(?:\\\\s+saa)?',\n    'diff_yesterday' => 'jana',\n    'diff_tomorrow' => 'kesho',\n    'diff_tomorrow_regexp' => 'kesho(?:\\\\s+saa)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[leo saa] LT',\n        'nextDay' => '[kesho saa] LT',\n        'nextWeek' => '[wiki ijayo] dddd [saat] LT',\n        'lastDay' => '[jana] LT',\n        'lastWeek' => '[wiki iliyopita] dddd [saat] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprili', 'Mei', 'Juni', 'Julai', 'Agosti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Jumapili', 'Jumatatu', 'Jumanne', 'Jumatano', 'Alhamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['Jpl', 'Jtat', 'Jnne', 'Jtan', 'Alh', 'Ijm', 'Jmos'],\n    'weekdays_min' => ['J2', 'J3', 'J4', 'J5', 'Al', 'Ij', 'J1'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' na '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gd.php","ext":"php","size":2705,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Jon Ashdown\n */\nreturn [\n    'year' => ':count bliadhna',\n    'a_year' => '{1}bliadhna|:count bliadhna',\n    'y' => ':count b.',\n    'month' => ':count mìosan',\n    'a_month' => '{1}mìos|:count mìosan',\n    'm' => ':count ms.',\n    'week' => ':count seachdainean',\n    'a_week' => '{1}seachdain|:count seachdainean',\n    'w' => ':count s.',\n    'day' => ':count latha',\n    'a_day' => '{1}latha|:count latha',\n    'd' => ':count l.',\n    'hour' => ':count uairean',\n    'a_hour' => '{1}uair|:count uairean',\n    'h' => ':count u.',\n    'minute' => ':count mionaidean',\n    'a_minute' => '{1}mionaid|:count mionaidean',\n    'min' => ':count md.',\n    'second' => ':count diogan',\n    'a_second' => '{1}beagan diogan|:count diogan',\n    's' => ':count d.',\n    'ago' => 'bho chionn :time',\n    'from_now' => 'ann an :time',\n    'diff_yesterday' => 'An-dè',\n    'diff_yesterday_regexp' => 'An-dè(?:\\\\s+aig)?',\n    'diff_today' => 'An-diugh',\n    'diff_today_regexp' => 'An-diugh(?:\\\\s+aig)?',\n    'diff_tomorrow' => 'A-màireach',\n    'diff_tomorrow_regexp' => 'A-màireach(?:\\\\s+aig)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[An-diugh aig] LT',\n        'nextDay' => '[A-màireach aig] LT',\n        'nextWeek' => 'dddd [aig] LT',\n        'lastDay' => '[An-dè aig] LT',\n        'lastWeek' => 'dddd [seo chaidh] [aig] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        return $number.($number === 1 ? 'd' : ($number % 10 === 2 ? 'na' : 'mh'));\n    },\n    'months' => ['Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'],\n    'months_short' => ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'],\n    'weekdays' => ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'],\n    'weekdays_short' => ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],\n    'weekdays_min' => ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' agus '],\n    'meridiem' => ['m', 'f'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_NL.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yo_BJ.php","ext":"php","size":1358,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/yo.php', [\n    'meridiem' => ['Àárɔ̀', 'Ɔ̀sán'],\n    'weekdays' => ['Ɔjɔ́ Àìkú', 'Ɔjɔ́ Ajé', 'Ɔjɔ́ Ìsɛ́gun', 'Ɔjɔ́rú', 'Ɔjɔ́bɔ', 'Ɔjɔ́ Ɛtì', 'Ɔjɔ́ Àbámɛ́ta'],\n    'weekdays_short' => ['Àìkú', 'Ajé', 'Ìsɛ́gun', 'Ɔjɔ́rú', 'Ɔjɔ́bɔ', 'Ɛtì', 'Àbámɛ́ta'],\n    'weekdays_min' => ['Àìkú', 'Ajé', 'Ìsɛ́gun', 'Ɔjɔ́rú', 'Ɔjɔ́bɔ', 'Ɛtì', 'Àbámɛ́ta'],\n    'months' => ['Oshù Shɛ́rɛ́', 'Oshù Èrèlè', 'Oshù Ɛrɛ̀nà', 'Oshù Ìgbé', 'Oshù Ɛ̀bibi', 'Oshù Òkúdu', 'Oshù Agɛmɔ', 'Oshù Ògún', 'Oshù Owewe', 'Oshù Ɔ̀wàrà', 'Oshù Bélú', 'Oshù Ɔ̀pɛ̀'],\n    'months_short' => ['Shɛ́rɛ́', 'Èrèlè', 'Ɛrɛ̀nà', 'Ìgbé', 'Ɛ̀bibi', 'Òkúdu', 'Agɛmɔ', 'Ògún', 'Owewe', 'Ɔ̀wàrà', 'Bélú', 'Ɔ̀pɛ̀'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/so_DJ.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/so.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/unm.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/unm_US.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hy_AM.php","ext":"php","size":504,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - Tim Fish\n * - Serhan Apaydın\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/hy.php', [\n    'from_now' => ':time հետո',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MY.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_MO.php","ext":"php","size":400,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - tarunvelli\n * - Eddie\n * - KID\n * - shankesgk2\n */\nreturn array_replace_recursive(require __DIR__.'/zh_Hant.php', [\n    'after' => ':time后',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/be_BY.php","ext":"php","size":1065,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/be.php', [\n    'months' => ['студзеня', 'лютага', 'сакавіка', 'красавіка', 'мая', 'чэрвеня', 'ліпеня', 'жніўня', 'верасня', 'кастрычніка', 'лістапада', 'снежня'],\n    'months_short' => ['сту', 'лют', 'сак', 'кра', 'мая', 'чэр', 'ліп', 'жні', 'вер', 'кас', 'ліс', 'сне'],\n    'weekdays' => ['Нядзеля', 'Панядзелак', 'Аўторак', 'Серада', 'Чацвер', 'Пятніца', 'Субота'],\n    'weekdays_short' => ['Няд', 'Пан', 'Аўт', 'Срд', 'Чцв', 'Пят', 'Суб'],\n    'weekdays_min' => ['Няд', 'Пан', 'Аўт', 'Срд', 'Чцв', 'Пят', 'Суб'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CF.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/eu_ES.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/eu.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ig_NG.php","ext":"php","size":1643,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - pablo@mandriva.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Jenụwarị', 'Febrụwarị', 'Maachị', 'Eprel', 'Mee', 'Juun', 'Julaị', 'Ọgọọst', 'Septemba', 'Ọktoba', 'Novemba', 'Disemba'],\n    'months_short' => ['Jen', 'Feb', 'Maa', 'Epr', 'Mee', 'Juu', 'Jul', 'Ọgọ', 'Sep', 'Ọkt', 'Nov', 'Dis'],\n    'weekdays' => ['sọnde', 'mọnde', 'tuzde', 'wenzde', 'tọsde', 'fraịde', 'satọde'],\n    'weekdays_short' => ['sọn', 'mọn', 'tuz', 'wen', 'tọs', 'fra', 'sat'],\n    'weekdays_min' => ['sọn', 'mọn', 'tuz', 'wen', 'tọs', 'fra', 'sat'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => 'afo :count',\n    'y' => 'afo :count',\n    'a_year' => 'afo :count',\n\n    'month' => 'önwa :count',\n    'm' => 'önwa :count',\n    'a_month' => 'önwa :count',\n\n    'week' => 'izu :count',\n    'w' => 'izu :count',\n    'a_week' => 'izu :count',\n\n    'day' => 'ụbọchị :count',\n    'd' => 'ụbọchị :count',\n    'a_day' => 'ụbọchị :count',\n\n    'hour' => 'awa :count',\n    'h' => 'awa :count',\n    'a_hour' => 'awa :count',\n\n    'minute' => 'minit :count',\n    'min' => 'minit :count',\n    'a_minute' => 'minit :count',\n\n    'second' => 'sekọnd :count',\n    's' => 'sekọnd :count',\n    'a_second' => 'sekọnd :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_LI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/de.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ayc_PE.php","ext":"php","size":1011,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - runasimipi.org    libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['inïru', 'phiwriru', 'marsu', 'awrila', 'mayu', 'junyu', 'julyu', 'awustu', 'sitimri', 'uktuwri', 'nuwimri', 'risimri'],\n    'months_short' => ['ini', 'phi', 'mar', 'awr', 'may', 'jun', 'jul', 'awu', 'sit', 'ukt', 'nuw', 'ris'],\n    'weekdays' => ['tuminku', 'lunisa', 'martisa', 'mirkulisa', 'juywisa', 'wirnisa', 'sawäru'],\n    'weekdays_short' => ['tum', 'lun', 'mar', 'mir', 'juy', 'wir', 'saw'],\n    'weekdays_min' => ['tum', 'lun', 'mar', 'mir', 'juy', 'wir', 'saw'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['VM', 'NM'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/as_IN.php","ext":"php","size":2407,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Amitakhya Phukan, Red Hat    bug-glibc@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D-MM-YYYY',\n    ],\n    'months' => ['জানুৱাৰী', 'ফেব্ৰুৱাৰী', 'মাৰ্চ', 'এপ্ৰিল', 'মে', 'জুন', 'জুলাই', 'আগষ্ট', 'ছেপ্তেম্বৰ', 'অক্টোবৰ', 'নৱেম্বৰ', 'ডিচেম্বৰ'],\n    'months_short' => ['জানু', 'ফেব্ৰু', 'মাৰ্চ', 'এপ্ৰিল', 'মে', 'জুন', 'জুলাই', 'আগ', 'সেপ্ট', 'অক্টো', 'নভে', 'ডিসে'],\n    'weekdays' => ['দেওবাৰ', 'সোমবাৰ', 'মঙ্গলবাৰ', 'বুধবাৰ', 'বৃহষ্পতিবাৰ', 'শুক্ৰবাৰ', 'শনিবাৰ'],\n    'weekdays_short' => ['দেও', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহষ্পতি', 'শুক্ৰ', 'শনি'],\n    'weekdays_min' => ['দেও', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহষ্পতি', 'শুক্ৰ', 'শনি'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['পূৰ্ব্বাহ্ন', 'অপৰাহ্ন'],\n\n    'year' => ':count বছৰ',\n    'y' => ':count বছৰ',\n    'a_year' => ':count বছৰ',\n\n    'month' => ':count মাহ',\n    'm' => ':count মাহ',\n    'a_month' => ':count মাহ',\n\n    'week' => ':count সপ্তাহ',\n    'w' => ':count সপ্তাহ',\n    'a_week' => ':count সপ্তাহ',\n\n    'day' => ':count বাৰ',\n    'd' => ':count বাৰ',\n    'a_day' => ':count বাৰ',\n\n    'hour' => ':count ঘণ্টা',\n    'h' => ':count ঘণ্টা',\n    'a_hour' => ':count ঘণ্টা',\n\n    'minute' => ':count মিনিট',\n    'min' => ':count মিনিট',\n    'a_minute' => ':count মিনিট',\n\n    'second' => ':count দ্বিতীয়',\n    's' => ':count দ্বিতীয়',\n    'a_second' => ':count দ্বিতীয়',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kde.php","ext":"php","size":1334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Muhi', 'Chilo'],\n    'weekdays' => ['Liduva lyapili', 'Liduva lyatatu', 'Liduva lyanchechi', 'Liduva lyannyano', 'Liduva lyannyano na linji', 'Liduva lyannyano na mavili', 'Liduva litandi'],\n    'weekdays_short' => ['Ll2', 'Ll3', 'Ll4', 'Ll5', 'Ll6', 'Ll7', 'Ll1'],\n    'weekdays_min' => ['Ll2', 'Ll3', 'Ll4', 'Ll5', 'Ll6', 'Ll7', 'Ll1'],\n    'months' => ['Mwedi Ntandi', 'Mwedi wa Pili', 'Mwedi wa Tatu', 'Mwedi wa Nchechi', 'Mwedi wa Nnyano', 'Mwedi wa Nnyano na Umo', 'Mwedi wa Nnyano na Mivili', 'Mwedi wa Nnyano na Mitatu', 'Mwedi wa Nnyano na Nchechi', 'Mwedi wa Nnyano na Nnyano', 'Mwedi wa Nnyano na Nnyano na U', 'Mwedi wa Nnyano na Nnyano na M'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ak_GH.php","ext":"php","size":1421,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Sugar Labs // OLPC sugarlabs.org libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY/MM/DD',\n    ],\n    'months' => ['Sanda-Ɔpɛpɔn', 'Kwakwar-Ɔgyefuo', 'Ebɔw-Ɔbenem', 'Ebɔbira-Oforisuo', 'Esusow Aketseaba-Kɔtɔnimba', 'Obirade-Ayɛwohomumu', 'Ayɛwoho-Kitawonsa', 'Difuu-Ɔsandaa', 'Fankwa-Ɛbɔ', 'Ɔbɛsɛ-Ahinime', 'Ɔberɛfɛw-Obubuo', 'Mumu-Ɔpɛnimba'],\n    'months_short' => ['S-Ɔ', 'K-Ɔ', 'E-Ɔ', 'E-O', 'E-K', 'O-A', 'A-K', 'D-Ɔ', 'F-Ɛ', 'Ɔ-A', 'Ɔ-O', 'M-Ɔ'],\n    'weekdays' => ['Kwesida', 'Dwowda', 'Benada', 'Wukuda', 'Yawda', 'Fida', 'Memeneda'],\n    'weekdays_short' => ['Kwe', 'Dwo', 'Ben', 'Wuk', 'Yaw', 'Fia', 'Mem'],\n    'weekdays_min' => ['Kwe', 'Dwo', 'Ben', 'Wuk', 'Yaw', 'Fia', 'Mem'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['AN', 'EW'],\n\n    'year' => ':count afe',\n    'y' => ':count afe',\n    'a_year' => ':count afe',\n\n    'month' => ':count bosume',\n    'm' => ':count bosume',\n    'a_month' => ':count bosume',\n\n    'day' => ':count ɛda',\n    'd' => ':count ɛda',\n    'a_day' => ':count ɛda',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_LB.php","ext":"php","size":2110,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'months_short' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_EG.php","ext":"php","size":1996,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_BF.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tpi.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/tpi_PG.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ca_FR.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ca.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sa.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/sa_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lg.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/lg_UG.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_DM.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_PK.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ff_SN.php","ext":"php","size":350,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Pular-Fulfulde.org Ibrahima Sarr admin@pulaar-fulfulde.org\n */\nreturn require __DIR__.'/ff.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mn.php","ext":"php","size":4129,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - tjku\n * - Max Melentiev\n * - Zolzaya Erdenebaatar\n * - Tom Hughes\n * - Akira Matsuda\n * - Christopher Dell\n * - Michael Kessler\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Nicolás Hock Isaza\n * - Ochirkhuyag\n * - Batmandakh\n * - lucifer-crybaby\n */\nreturn [\n    'year' => ':count жил',\n    'y' => ':count жил',\n    'month' => ':count сар',\n    'm' => ':count сар',\n    'week' => ':count долоо хоног',\n    'w' => ':count долоо хоног',\n    'day' => ':count өдөр',\n    'd' => ':count өдөр',\n    'hour' => ':count цаг',\n    'h' => ':countц',\n    'minute' => ':count минут',\n    'min' => ':countм',\n    'second' => ':count секунд',\n    's' => ':countс',\n\n    'ago_mode' => 'last',\n    'ago' => ':time өмнө',\n    'year_ago' => ':count жилийн',\n    'y_ago' => ':count жилийн',\n    'month_ago' => ':count сарын',\n    'm_ago' => ':count сарын',\n    'day_ago' => ':count хоногийн',\n    'd_ago' => ':count хоногийн',\n    'week_ago' => ':count долоо хоногийн',\n    'w_ago' => ':count долоо хоногийн',\n    'hour_ago' => ':count цагийн',\n    'minute_ago' => ':count минутын',\n    'second_ago' => ':count секундын',\n\n    'from_now_mode' => 'last',\n    'from_now' => 'одоогоос :time',\n    'year_from_now' => ':count жилийн дараа',\n    'y_from_now' => ':count жилийн дараа',\n    'month_from_now' => ':count сарын дараа',\n    'm_from_now' => ':count сарын дараа',\n    'day_from_now' => ':count хоногийн дараа',\n    'd_from_now' => ':count хоногийн дараа',\n    'hour_from_now' => ':count цагийн дараа',\n    'minute_from_now' => ':count минутын дараа',\n    'second_from_now' => ':count секундын дараа',\n\n    'after_mode' => 'last',\n    'after' => ':time дараа',\n    'year_after' => ':count жилийн',\n    'y_after' => ':count жилийн',\n    'month_after' => ':count сарын',\n    'm_after' => ':count сарын',\n    'day_after' => ':count хоногийн',\n    'd_after' => ':count хоногийн',\n    'hour_after' => ':count цагийн',\n    'minute_after' => ':count минутын',\n    'second_after' => ':count секундын',\n\n    'before_mode' => 'last',\n    'before' => ':time өмнө',\n    'year_before' => ':count жилийн',\n    'y_before' => ':count жилийн',\n    'month_before' => ':count сарын',\n    'm_before' => ':count сарын',\n    'day_before' => ':count хоногийн',\n    'd_before' => ':count хоногийн',\n    'hour_before' => ':count цагийн',\n    'minute_before' => ':count минутын',\n    'second_before' => ':count секундын',\n\n    'list' => ', ',\n    'diff_now' => 'одоо',\n    'diff_yesterday' => 'өчигдөр',\n    'diff_tomorrow' => 'маргааш',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'YYYY MMMM DD',\n        'LLL' => 'YY-MM-DD, HH:mm',\n        'LLLL' => 'YYYY MMMM DD, HH:mm',\n    ],\n    'weekdays' => ['Ням', 'Даваа', 'Мягмар', 'Лхагва', 'Пүрэв', 'Баасан', 'Бямба'],\n    'weekdays_short' => ['Ня', 'Да', 'Мя', 'Лх', 'Пү', 'Ба', 'Бя'],\n    'weekdays_min' => ['Ня', 'Да', 'Мя', 'Лх', 'Пү', 'Ба', 'Бя'],\n    'months' => ['1 сар', '2 сар', '3 сар', '4 сар', '5 сар', '6 сар', '7 сар', '8 сар', '9 сар', '10 сар', '11 сар', '12 сар'],\n    'months_short' => ['1 сар', '2 сар', '3 сар', '4 сар', '5 сар', '6 сар', '7 сар', '8 сар', '9 сар', '10 сар', '11 сар', '12 сар'],\n    'meridiem' => ['өглөө', 'орой'],\n    'first_day_of_week' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ksb.php","ext":"php","size":1088,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['makeo', 'nyiaghuo'],\n    'weekdays' => ['Jumaapii', 'Jumaatatu', 'Jumaane', 'Jumaatano', 'Alhamisi', 'Ijumaa', 'Jumaamosi'],\n    'weekdays_short' => ['Jpi', 'Jtt', 'Jmn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'weekdays_min' => ['Jpi', 'Jtt', 'Jmn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'months' => ['Januali', 'Febluali', 'Machi', 'Aplili', 'Mei', 'Juni', 'Julai', 'Agosti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_TT.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_WS.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nn_NO.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/nn.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_NU.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/asa.php","ext":"php","size":1089,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['icheheavo', 'ichamthi'],\n    'weekdays' => ['Jumapili', 'Jumatatu', 'Jumanne', 'Jumatano', 'Alhamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Ijm', 'Jmo'],\n    'weekdays_min' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Ijm', 'Jmo'],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprili', 'Mei', 'Juni', 'Julai', 'Agosti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Dec'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lv.php","ext":"php","size":7129,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Carbon\\CarbonInterface;\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - pirminis\n * - Tsutomu Kuroda\n * - tjku\n * - Andris Zāģeris\n * - Max Melentiev\n * - Edgars Beigarts\n * - Juanito Fatas\n * - Vitauts Stočka\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Kaspars Bankovskis\n * - Nicolás Hock Isaza\n * - Viesturs Kavacs (Kavacky)\n * - zakse\n * - Janis Eglitis (janiseglitis)\n * - Guntars\n * - Juris Sudmalis\n */\n$daysOfWeek = ['svētdiena', 'pirmdiena', 'otrdiena', 'trešdiena', 'ceturtdiena', 'piektdiena', 'sestdiena'];\n$daysOfWeekLocativum = ['svētdien', 'pirmdien', 'otrdien', 'trešdien', 'ceturtdien', 'piektdien', 'sestdien'];\n\n$transformDiff = static fn (string $input) => strtr($input, [\n    // Nominative => \"pirms/pēc\" Dative\n    'gads' => 'gada',\n    'gadi' => 'gadiem',\n    'gadu' => 'gadiem',\n    'mēnesis' => 'mēneša',\n    'mēneši' => 'mēnešiem',\n    'mēnešu' => 'mēnešiem',\n    'nedēļa' => 'nedēļas',\n    'nedēļas' => 'nedēļām',\n    'nedēļu' => 'nedēļām',\n    'diena' => 'dienas',\n    'dienas' => 'dienām',\n    'dienu' => 'dienām',\n    'stunda' => 'stundas',\n    'stundas' => 'stundām',\n    'stundu' => 'stundām',\n    'minūte' => 'minūtes',\n    'minūtes' => 'minūtēm',\n    'minūšu' => 'minūtēm',\n    'sekunde' => 'sekundes',\n    'sekundes' => 'sekundēm',\n    'sekunžu' => 'sekundēm',\n]);\n\nreturn [\n    'ago' => static fn (string $time) => 'pirms '.$transformDiff($time),\n    'from_now' => static fn (string $time) => 'pēc '.$transformDiff($time),\n\n    'year' => '0 gadu|:count gads|:count gadi',\n    'y' => ':count g.',\n    'a_year' => '{1}gads|0 gadu|:count gads|:count gadi',\n    'month' => '0 mēnešu|:count mēnesis|:count mēneši',\n    'm' => ':count mēn.',\n    'a_month' => '{1}mēnesis|0 mēnešu|:count mēnesis|:count mēneši',\n    'week' => '0 nedēļu|:count nedēļa|:count nedēļas',\n    'w' => ':count ned.',\n    'a_week' => '{1}nedēļa|0 nedēļu|:count nedēļa|:count nedēļas',\n    'day' => '0 dienu|:count diena|:count dienas',\n    'd' => ':count d.',\n    'a_day' => '{1}diena|0 dienu|:count diena|:count dienas',\n    'hour' => '0 stundu|:count stunda|:count stundas',\n    'h' => ':count st.',\n    'a_hour' => '{1}stunda|0 stundu|:count stunda|:count stundas',\n    'minute' => '0 minūšu|:count minūte|:count minūtes',\n    'min' => ':count min.',\n    'a_minute' => '{1}minūte|0 minūšu|:count minūte|:count minūtes',\n    'second' => '0 sekunžu|:count sekunde|:count sekundes',\n    's' => ':count sek.',\n    'a_second' => '{1}sekunde|0 sekunžu|:count sekunde|:count sekundes',\n\n    'after' => ':time vēlāk',\n    'year_after' => '0 gadus|:count gadu|:count gadus',\n    'a_year_after' => '{1}gadu|0 gadus|:count gadu|:count gadus',\n    'month_after' => '0 mēnešus|:count mēnesi|:count mēnešus',\n    'a_month_after' => '{1}mēnesi|0 mēnešus|:count mēnesi|:count mēnešus',\n    'week_after' => '0 nedēļas|:count nedēļu|:count nedēļas',\n    'a_week_after' => '{1}nedēļu|0 nedēļas|:count nedēļu|:count nedēļas',\n    'day_after' => '0 dienas|:count dienu|:count dienas',\n    'a_day_after' => '{1}dienu|0 dienas|:count dienu|:count dienas',\n    'hour_after' => '0 stundas|:count stundu|:count stundas',\n    'a_hour_after' => '{1}stundu|0 stundas|:count stundu|:count stundas',\n    'minute_after' => '0 minūtes|:count minūti|:count minūtes',\n    'a_minute_after' => '{1}minūti|0 minūtes|:count minūti|:count minūtes',\n    'second_after' => '0 sekundes|:count sekundi|:count sekundes',\n    'a_second_after' => '{1}sekundi|0 sekundes|:count sekundi|:count sekundes',\n\n    'before' => ':time agrāk',\n    'year_before' => '0 gadus|:count gadu|:count gadus',\n    'a_year_before' => '{1}gadu|0 gadus|:count gadu|:count gadus',\n    'month_before' => '0 mēnešus|:count mēnesi|:count mēnešus',\n    'a_month_before' => '{1}mēnesi|0 mēnešus|:count mēnesi|:count mēnešus',\n    'week_before' => '0 nedēļas|:count nedēļu|:count nedēļas',\n    'a_week_before' => '{1}nedēļu|0 nedēļas|:count nedēļu|:count nedēļas',\n    'day_before' => '0 dienas|:count dienu|:count dienas',\n    'a_day_before' => '{1}dienu|0 dienas|:count dienu|:count dienas',\n    'hour_before' => '0 stundas|:count stundu|:count stundas',\n    'a_hour_before' => '{1}stundu|0 stundas|:count stundu|:count stundas',\n    'minute_before' => '0 minūtes|:count minūti|:count minūtes',\n    'a_minute_before' => '{1}minūti|0 minūtes|:count minūti|:count minūtes',\n    'second_before' => '0 sekundes|:count sekundi|:count sekundes',\n    'a_second_before' => '{1}sekundi|0 sekundes|:count sekundi|:count sekundes',\n\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' un '],\n\n    'diff_now' => 'tagad',\n    'diff_today' => 'šodien',\n    'diff_yesterday' => 'vakar',\n    'diff_before_yesterday' => 'aizvakar',\n    'diff_tomorrow' => 'rīt',\n    'diff_after_tomorrow' => 'parīt',\n\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY.',\n        'LL' => 'YYYY. [gada] D. MMMM',\n        'LLL' => 'DD.MM.YYYY., HH:mm',\n        'LLLL' => 'YYYY. [gada] D. MMMM, HH:mm',\n    ],\n\n    'calendar' => [\n        'sameDay' => '[šodien] [plkst.] LT',\n        'nextDay' => '[rīt] [plkst.] LT',\n        'nextWeek' => static function (CarbonInterface $current, CarbonInterface $other) use ($daysOfWeekLocativum) {\n            if ($current->week !== $other->week) {\n                return '[nākošo] ['.$daysOfWeekLocativum[$current->dayOfWeek].'] [plkst.] LT';\n            }\n\n            return '['.$daysOfWeekLocativum[$current->dayOfWeek].'] [plkst.] LT';\n        },\n        'lastDay' => '[vakar] [plkst.] LT',\n        'lastWeek' => static function (CarbonInterface $current) use ($daysOfWeekLocativum) {\n            return '[pagājušo] ['.$daysOfWeekLocativum[$current->dayOfWeek].'] [plkst.] LT';\n        },\n        'sameElse' => 'L',\n    ],\n\n    'weekdays' => $daysOfWeek,\n    'weekdays_short' => ['Sv.', 'P.', 'O.', 'T.', 'C.', 'Pk.', 'S.'],\n    'weekdays_min' => ['Sv.', 'P.', 'O.', 'T.', 'C.', 'Pk.', 'S.'],\n    'months' => ['janvāris', 'februāris', 'marts', 'aprīlis', 'maijs', 'jūnijs', 'jūlijs', 'augusts', 'septembris', 'oktobris', 'novembris', 'decembris'],\n    'months_standalone' => ['janvārī', 'februārī', 'martā', 'aprīlī', 'maijā', 'jūnijā', 'jūlijā', 'augustā', 'septembrī', 'oktobrī', 'novembrī', 'decembrī'],\n    'months_short' => ['janv.', 'febr.', 'martā', 'apr.', 'maijā', 'jūn.', 'jūl.', 'aug.', 'sept.', 'okt.', 'nov.', 'dec.'],\n    'meridiem' => ['priekšpusdiena', 'pēcpusdiena'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ccp_IN.php","ext":"php","size":323,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ccp.php', [\n    'weekend' => [0, 0],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fa_AF.php","ext":"php","size":524,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fa.php', [\n    'meridiem' => ['ق', 'ب'],\n    'weekend' => [4, 5],\n    'formats' => [\n        'L' => 'OY/OM/OD',\n        'LL' => 'OD MMM OY',\n        'LLL' => 'OD MMMM OY،‏ H:mm',\n        'LLLL' => 'dddd OD MMMM OY،‏ H:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_LS.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kk.php","ext":"php","size":3704,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - Talat Uspanov\n * - Нурлан Рахимжанов\n * - Toleugazy Kali\n */\nreturn [\n    'year' => ':count жыл',\n    'a_year' => '{1}бір жыл|:count жыл',\n    'y' => ':count ж.',\n    'month' => ':count ай',\n    'a_month' => '{1}бір ай|:count ай',\n    'm' => ':count ай',\n    'week' => ':count апта',\n    'a_week' => '{1}бір апта',\n    'w' => ':count ап.',\n    'day' => ':count күн',\n    'a_day' => '{1}бір күн|:count күн',\n    'd' => ':count к.',\n    'hour' => ':count сағат',\n    'a_hour' => '{1}бір сағат|:count сағат',\n    'h' => ':count са.',\n    'minute' => ':count минут',\n    'a_minute' => '{1}бір минут|:count минут',\n    'min' => ':count м.',\n    'second' => ':count секунд',\n    'a_second' => '{1}бірнеше секунд|:count секунд',\n    's' => ':count се.',\n    'ago' => ':time бұрын',\n    'from_now' => ':time ішінде',\n    'after' => ':time кейін',\n    'before' => ':time бұрын',\n    'diff_now' => 'қазір',\n    'diff_today' => 'Бүгін',\n    'diff_today_regexp' => 'Бүгін(?:\\\\s+сағат)?',\n    'diff_yesterday' => 'кеше',\n    'diff_yesterday_regexp' => 'Кеше(?:\\\\s+сағат)?',\n    'diff_tomorrow' => 'ертең',\n    'diff_tomorrow_regexp' => 'Ертең(?:\\\\s+сағат)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Бүгін сағат] LT',\n        'nextDay' => '[Ертең сағат] LT',\n        'nextWeek' => 'dddd [сағат] LT',\n        'lastDay' => '[Кеше сағат] LT',\n        'lastWeek' => '[Өткен аптаның] dddd [сағат] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        static $suffixes = [\n            0 => '-ші',\n            1 => '-ші',\n            2 => '-ші',\n            3 => '-ші',\n            4 => '-ші',\n            5 => '-ші',\n            6 => '-шы',\n            7 => '-ші',\n            8 => '-ші',\n            9 => '-шы',\n            10 => '-шы',\n            20 => '-шы',\n            30 => '-шы',\n            40 => '-шы',\n            50 => '-ші',\n            60 => '-шы',\n            70 => '-ші',\n            80 => '-ші',\n            90 => '-шы',\n            100 => '-ші',\n        ];\n\n        return $number.($suffixes[$number] ?? $suffixes[$number % 10] ?? $suffixes[$number >= 100 ? 100 : -1] ?? '');\n    },\n    'months' => ['қаңтар', 'ақпан', 'наурыз', 'сәуір', 'мамыр', 'маусым', 'шілде', 'тамыз', 'қыркүйек', 'қазан', 'қараша', 'желтоқсан'],\n    'months_short' => ['қаң', 'ақп', 'нау', 'сәу', 'мам', 'мау', 'шіл', 'там', 'қыр', 'қаз', 'қар', 'жел'],\n    'weekdays' => ['жексенбі', 'дүйсенбі', 'сейсенбі', 'сәрсенбі', 'бейсенбі', 'жұма', 'сенбі'],\n    'weekdays_short' => ['жек', 'дүй', 'сей', 'сәр', 'бей', 'жұм', 'сен'],\n    'weekdays_min' => ['жк', 'дй', 'сй', 'ср', 'бй', 'жм', 'сн'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' және '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mas_TZ.php","ext":"php","size":328,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/mas.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_KE.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_VU.php","ext":"php","size":522,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl_AW.php","ext":"php","size":986,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/nl.php', [\n    'formats' => [\n        'L' => 'DD-MM-YY',\n    ],\n    'months' => ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n    'months_short' => ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    'weekdays' => ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n    'weekdays_short' => ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    'weekdays_min' => ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ses.php","ext":"php","size":1910,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Adduha', 'Aluula'],\n    'weekdays' => ['Alhadi', 'Atinni', 'Atalaata', 'Alarba', 'Alhamiisa', 'Alzuma', 'Asibti'],\n    'weekdays_short' => ['Alh', 'Ati', 'Ata', 'Ala', 'Alm', 'Alz', 'Asi'],\n    'weekdays_min' => ['Alh', 'Ati', 'Ata', 'Ala', 'Alm', 'Alz', 'Asi'],\n    'months' => ['Žanwiye', 'Feewiriye', 'Marsi', 'Awiril', 'Me', 'Žuweŋ', 'Žuyye', 'Ut', 'Sektanbur', 'Oktoobur', 'Noowanbur', 'Deesanbur'],\n    'months_short' => ['Žan', 'Fee', 'Mar', 'Awi', 'Me', 'Žuw', 'Žuy', 'Ut', 'Sek', 'Okt', 'Noo', 'Dee'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'month' => ':count alaada', // less reliable\n    'm' => ':count alaada', // less reliable\n    'a_month' => ':count alaada', // less reliable\n\n    'hour' => ':count ɲaajin', // less reliable\n    'h' => ':count ɲaajin', // less reliable\n    'a_hour' => ':count ɲaajin', // less reliable\n\n    'minute' => ':count zarbu', // less reliable\n    'min' => ':count zarbu', // less reliable\n    'a_minute' => ':count zarbu', // less reliable\n\n    'year' => ':count jiiri',\n    'y' => ':count jiiri',\n    'a_year' => ':count jiiri',\n\n    'week' => ':count jirbiiyye',\n    'w' => ':count jirbiiyye',\n    'a_week' => ':count jirbiiyye',\n\n    'day' => ':count zaari',\n    'd' => ':count zaari',\n    'a_day' => ':count zaari',\n\n    'second' => ':count ihinkante',\n    's' => ':count ihinkante',\n    'a_second' => ':count ihinkante',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ko.php","ext":"php","size":2669,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - FourwingsY\n * - François B\n * - Jason Katz-Brown\n * - Seokjun Kim\n * - Junho Kim\n * - JD Isaacks\n * - Juwon Kim\n */\nreturn [\n    'year' => ':count년',\n    'a_year' => '{1}일년|[-Inf,Inf]:count년',\n    'y' => ':count년',\n    'month' => ':count개월',\n    'a_month' => '{1}한달|[-Inf,Inf]:count개월',\n    'm' => ':count개월',\n    'week' => ':count주',\n    'a_week' => '{1}일주일|[-Inf,Inf]:count 주',\n    'w' => ':count주일',\n    'day' => ':count일',\n    'a_day' => '{1}하루|[-Inf,Inf]:count일',\n    'd' => ':count일',\n    'hour' => ':count시간',\n    'a_hour' => '{1}한시간|[-Inf,Inf]:count시간',\n    'h' => ':count시간',\n    'minute' => ':count분',\n    'a_minute' => '{1}일분|[-Inf,Inf]:count분',\n    'min' => ':count분',\n    'second' => ':count초',\n    'a_second' => '{1}몇초|[-Inf,Inf]:count초',\n    's' => ':count초',\n    'ago' => ':time 전',\n    'from_now' => ':time 후',\n    'after' => ':time 후',\n    'before' => ':time 전',\n    'diff_now' => '지금',\n    'diff_today' => '오늘',\n    'diff_yesterday' => '어제',\n    'diff_tomorrow' => '내일',\n    'formats' => [\n        'LT' => 'A h:mm',\n        'LTS' => 'A h:mm:ss',\n        'L' => 'YYYY.MM.DD.',\n        'LL' => 'YYYY년 MMMM D일',\n        'LLL' => 'YYYY년 MMMM D일 A h:mm',\n        'LLLL' => 'YYYY년 MMMM D일 dddd A h:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '오늘 LT',\n        'nextDay' => '내일 LT',\n        'nextWeek' => 'dddd LT',\n        'lastDay' => '어제 LT',\n        'lastWeek' => '지난주 dddd LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'd', 'D', 'DDD' => $number.'일',\n            'M' => $number.'월',\n            'w', 'W' => $number.'주',\n            default => $number,\n        };\n    },\n    'meridiem' => ['오전', '오후'],\n    'months' => ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n    'months_short' => ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n    'weekdays' => ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\n    'weekdays_short' => ['일', '월', '화', '수', '목', '금', '토'],\n    'weekdays_min' => ['일', '월', '화', '수', '목', '금', '토'],\n    'list' => ' ',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/da_GL.php","ext":"php","size":473,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/da.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D. MMM YYYY',\n        'LLL' => 'D. MMMM YYYY HH.mm',\n        'LLLL' => 'dddd [den] D. MMMM YYYY HH.mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en.php","ext":"php","size":4046,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Milos Sakovic\n * - Paul\n * - Pete Scopes (pdscopes)\n */\nreturn [\n    /*\n     * {1}, {0} and [-Inf,Inf] are not needed as it's the default for English pluralization.\n     * But as some languages are using en.php as a fallback, it's better to specify it\n     * explicitly so those languages also fallback to English pluralization when a unit\n     * is missing.\n     */\n    'year' => '{1}:count year|{0}:count years|[-Inf,Inf]:count years',\n    'a_year' => '{1}a year|{0}:count years|[-Inf,Inf]:count years',\n    'y' => '{1}:countyr|{0}:countyrs|[-Inf,Inf]:countyrs',\n    'month' => '{1}:count month|{0}:count months|[-Inf,Inf]:count months',\n    'a_month' => '{1}a month|{0}:count months|[-Inf,Inf]:count months',\n    'm' => '{1}:countmo|{0}:countmos|[-Inf,Inf]:countmos',\n    'week' => '{1}:count week|{0}:count weeks|[-Inf,Inf]:count weeks',\n    'a_week' => '{1}a week|{0}:count weeks|[-Inf,Inf]:count weeks',\n    'w' => ':countw',\n    'day' => '{1}:count day|{0}:count days|[-Inf,Inf]:count days',\n    'a_day' => '{1}a day|{0}:count days|[-Inf,Inf]:count days',\n    'd' => ':countd',\n    'hour' => '{1}:count hour|{0}:count hours|[-Inf,Inf]:count hours',\n    'a_hour' => '{1}an hour|{0}:count hours|[-Inf,Inf]:count hours',\n    'h' => ':counth',\n    'minute' => '{1}:count minute|{0}:count minutes|[-Inf,Inf]:count minutes',\n    'a_minute' => '{1}a minute|{0}:count minutes|[-Inf,Inf]:count minutes',\n    'min' => ':countm',\n    'second' => '{1}:count second|{0}:count seconds|[-Inf,Inf]:count seconds',\n    'a_second' => '{0,1}a few seconds|[-Inf,Inf]:count seconds',\n    's' => ':counts',\n    'millisecond' => '{1}:count millisecond|{0}:count milliseconds|[-Inf,Inf]:count milliseconds',\n    'a_millisecond' => '{1}a millisecond|{0}:count milliseconds|[-Inf,Inf]:count milliseconds',\n    'ms' => ':countms',\n    'microsecond' => '{1}:count microsecond|{0}:count microseconds|[-Inf,Inf]:count microseconds',\n    'a_microsecond' => '{1}a microsecond|{0}:count microseconds|[-Inf,Inf]:count microseconds',\n    'µs' => ':countµs',\n    'ago' => ':time ago',\n    'from_now' => ':time from now',\n    'after' => ':time after',\n    'before' => ':time before',\n    'diff_now' => 'just now',\n    'diff_today' => 'today',\n    'diff_yesterday' => 'yesterday',\n    'diff_tomorrow' => 'tomorrow',\n    'diff_before_yesterday' => 'before yesterday',\n    'diff_after_tomorrow' => 'after tomorrow',\n    'period_recurrences' => '{1}once|{0}:count times|[-Inf,Inf]:count times',\n    'period_interval' => 'every :interval',\n    'period_start_date' => 'from :date',\n    'period_end_date' => 'to :date',\n    'months' => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'weekdays' => ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'weekdays_short' => ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'weekdays_min' => ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    'ordinal' => static function ($number) {\n        $lastDigit = $number % 10;\n\n        return $number.(\n            ((int) ($number % 100 / 10) === 1) ? 'th' : (\n                ($lastDigit === 1) ? 'st' : (\n                    ($lastDigit === 2) ? 'nd' : (\n                        ($lastDigit === 3) ? 'rd' : 'th'\n                    )\n                )\n            )\n        );\n    },\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'MM/DD/YYYY',\n        'LL' => 'MMMM D, YYYY',\n        'LLL' => 'MMMM D, YYYY h:mm A',\n        'LLLL' => 'dddd, MMMM D, YYYY h:mm A',\n    ],\n    'list' => [', ', ' and '],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yav.php","ext":"php","size":1269,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['kiɛmɛ́ɛm', 'kisɛ́ndɛ'],\n    'weekdays' => ['sɔ́ndiɛ', 'móndie', 'muányáŋmóndie', 'metúkpíápɛ', 'kúpélimetúkpiapɛ', 'feléte', 'séselé'],\n    'weekdays_short' => ['sd', 'md', 'mw', 'et', 'kl', 'fl', 'ss'],\n    'weekdays_min' => ['sd', 'md', 'mw', 'et', 'kl', 'fl', 'ss'],\n    'months' => ['pikítíkítie, oólí ú kutúan', 'siɛyɛ́, oóli ú kándíɛ', 'ɔnsúmbɔl, oóli ú kátátúɛ', 'mesiŋ, oóli ú kénie', 'ensil, oóli ú kátánuɛ', 'ɔsɔn', 'efute', 'pisuyú', 'imɛŋ i puɔs', 'imɛŋ i putúk,oóli ú kátíɛ', 'makandikɛ', 'pilɔndɔ́'],\n    'months_short' => ['o.1', 'o.2', 'o.3', 'o.4', 'o.5', 'o.6', 'o.7', 'o.8', 'o.9', 'o.10', 'o.11', 'o.12'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_TN.php","ext":"php","size":547,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'weekend' => [5, 6],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hans_SG.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hans.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/iu_CA.php","ext":"php","size":1988,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Pablo Saratxaga pablo@mandriva.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'MM/DD/YY',\n    ],\n    'months' => ['ᔮᓄᐊᓕ', 'ᕕᕗᐊᓕ', 'ᒪᔅᓯ', 'ᐃᐳᓗ', 'ᒪᐃ', 'ᔪᓂ', 'ᔪᓚᐃ', 'ᐊᒋᓯ', 'ᓯᑎᕙ', 'ᐊᑦᑐᕙ', 'ᓄᕕᕙ', 'ᑎᓯᕝᕙ'],\n    'months_short' => ['ᔮᓄ', 'ᕕᕗ', 'ᒪᔅ', 'ᐃᐳ', 'ᒪᐃ', 'ᔪᓂ', 'ᔪᓚ', 'ᐊᒋ', 'ᓯᑎ', 'ᐊᑦ', 'ᓄᕕ', 'ᑎᓯ'],\n    'weekdays' => ['ᓈᑦᑎᖑᔭᕐᕕᒃ', 'ᓇᒡᒐᔾᔭᐅ', 'ᓇᒡᒐᔾᔭᐅᓕᖅᑭᑦ', 'ᐱᖓᓲᓕᖅᓯᐅᑦ', 'ᕿᑎᖅᑰᑦ', 'ᐅᓪᓗᕈᓘᑐᐃᓇᖅ', 'ᓯᕙᑖᕕᒃ'],\n    'weekdays_short' => ['ᓈ', 'ᓇ', 'ᓕ', 'ᐱ', 'ᕿ', 'ᐅ', 'ᓯ'],\n    'weekdays_min' => ['ᓈ', 'ᓇ', 'ᓕ', 'ᐱ', 'ᕿ', 'ᐅ', 'ᓯ'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count ᐅᑭᐅᖅ',\n    'y' => ':count ᐅᑭᐅᖅ',\n    'a_year' => ':count ᐅᑭᐅᖅ',\n\n    'month' => ':count qaammat',\n    'm' => ':count qaammat',\n    'a_month' => ':count qaammat',\n\n    'week' => ':count sapaatip akunnera',\n    'w' => ':count sapaatip akunnera',\n    'a_week' => ':count sapaatip akunnera',\n\n    'day' => ':count ulloq',\n    'd' => ':count ulloq',\n    'a_day' => ':count ulloq',\n\n    'hour' => ':count ikarraq',\n    'h' => ':count ikarraq',\n    'a_hour' => ':count ikarraq',\n\n    'minute' => ':count titiqqaralaaq', // less reliable\n    'min' => ':count titiqqaralaaq', // less reliable\n    'a_minute' => ':count titiqqaralaaq', // less reliable\n\n    'second' => ':count marluk', // less reliable\n    's' => ':count marluk', // less reliable\n    'a_second' => ':count marluk', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ce.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ce_RU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/af_ZA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/af.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tg.php","ext":"php","size":3579,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Orif N. Jr\n */\nreturn [\n    'year' => '{1}як сол|:count сол',\n    'month' => '{1}як моҳ|:count моҳ',\n    'week' => '{1}як ҳафта|:count ҳафта',\n    'day' => '{1}як рӯз|:count рӯз',\n    'hour' => '{1}як соат|:count соат',\n    'minute' => '{1}як дақиқа|:count дақиқа',\n    'second' => '{1}якчанд сония|:count сония',\n    'ago' => ':time пеш',\n    'from_now' => 'баъди :time',\n    'diff_today' => 'Имрӯз',\n    'diff_yesterday' => 'Дирӯз',\n    'diff_yesterday_regexp' => 'Дирӯз(?:\\\\s+соати)?',\n    'diff_tomorrow' => 'Пагоҳ',\n    'diff_tomorrow_regexp' => 'Пагоҳ(?:\\\\s+соати)?',\n    'diff_today_regexp' => 'Имрӯз(?:\\\\s+соати)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Имрӯз соати] LT',\n        'nextDay' => '[Пагоҳ соати] LT',\n        'nextWeek' => 'dddd[и] [ҳафтаи оянда соати] LT',\n        'lastDay' => '[Дирӯз соати] LT',\n        'lastWeek' => 'dddd[и] [ҳафтаи гузашта соати] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        if ($number === 0) { // special case for zero\n            return \"$number-ıncı\";\n        }\n\n        static $suffixes = [\n            0 => '-ум',\n            1 => '-ум',\n            2 => '-юм',\n            3 => '-юм',\n            4 => '-ум',\n            5 => '-ум',\n            6 => '-ум',\n            7 => '-ум',\n            8 => '-ум',\n            9 => '-ум',\n            10 => '-ум',\n            12 => '-ум',\n            13 => '-ум',\n            20 => '-ум',\n            30 => '-юм',\n            40 => '-ум',\n            50 => '-ум',\n            60 => '-ум',\n            70 => '-ум',\n            80 => '-ум',\n            90 => '-ум',\n            100 => '-ум',\n        ];\n\n        return $number.($suffixes[$number] ?? $suffixes[$number % 10] ?? $suffixes[$number >= 100 ? 100 : -1] ?? '');\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'шаб';\n        }\n        if ($hour < 11) {\n            return 'субҳ';\n        }\n        if ($hour < 16) {\n            return 'рӯз';\n        }\n        if ($hour < 19) {\n            return 'бегоҳ';\n        }\n\n        return 'шаб';\n    },\n    'months' => ['январ', 'феврал', 'март', 'апрел', 'май', 'июн', 'июл', 'август', 'сентябр', 'октябр', 'ноябр', 'декабр'],\n    'months_short' => ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'weekdays' => ['якшанбе', 'душанбе', 'сешанбе', 'чоршанбе', 'панҷшанбе', 'ҷумъа', 'шанбе'],\n    'weekdays_short' => ['яшб', 'дшб', 'сшб', 'чшб', 'пшб', 'ҷум', 'шнб'],\n    'weekdays_min' => ['яш', 'дш', 'сш', 'чш', 'пш', 'ҷм', 'шб'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' ва '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/xh_ZA.php","ext":"php","size":1932,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['eyoMqungu', 'eyoMdumba', 'eyoKwindla', 'uTshazimpuzi', 'uCanzibe', 'eyeSilimela', 'eyeKhala', 'eyeThupa', 'eyoMsintsi', 'eyeDwarha', 'eyeNkanga', 'eyoMnga'],\n    'months_short' => ['Mqu', 'Mdu', 'Kwi', 'Tsh', 'Can', 'Sil', 'Kha', 'Thu', 'Msi', 'Dwa', 'Nka', 'Mng'],\n    'weekdays' => ['iCawa', 'uMvulo', 'lwesiBini', 'lwesiThathu', 'ulweSine', 'lwesiHlanu', 'uMgqibelo'],\n    'weekdays_short' => ['Caw', 'Mvu', 'Bin', 'Tha', 'Sin', 'Hla', 'Mgq'],\n    'weekdays_min' => ['Caw', 'Mvu', 'Bin', 'Tha', 'Sin', 'Hla', 'Mgq'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count ihlobo', // less reliable\n    'y' => ':count ihlobo', // less reliable\n    'a_year' => ':count ihlobo', // less reliable\n\n    'hour' => ':count iwotshi', // less reliable\n    'h' => ':count iwotshi', // less reliable\n    'a_hour' => ':count iwotshi', // less reliable\n\n    'minute' => ':count ingqalelo', // less reliable\n    'min' => ':count ingqalelo', // less reliable\n    'a_minute' => ':count ingqalelo', // less reliable\n\n    'second' => ':count nceda', // less reliable\n    's' => ':count nceda', // less reliable\n    'a_second' => ':count nceda', // less reliable\n\n    'month' => ':count inyanga',\n    'm' => ':count inyanga',\n    'a_month' => ':count inyanga',\n\n    'week' => ':count veki',\n    'w' => ':count veki',\n    'a_week' => ':count veki',\n\n    'day' => ':count imini',\n    'd' => ':count imini',\n    'a_day' => ':count imini',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/rm.php","ext":"php","size":1694,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - tjku\n * - Max Melentiev\n * - Juanito Fatas\n * - Tsutomu Kuroda\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Nicolás Hock Isaza\n * - sebastian de castelberg\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'Do MMMM YYYY',\n        'LLL' => 'Do MMMM, HH:mm [Uhr]',\n        'LLLL' => 'dddd, Do MMMM YYYY, HH:mm [Uhr]',\n    ],\n    'year' => ':count onn|:count onns',\n    'month' => ':count mais',\n    'week' => ':count emna|:count emnas',\n    'day' => ':count di|:count dis',\n    'hour' => ':count oura|:count ouras',\n    'minute' => ':count minuta|:count minutas',\n    'second' => ':count secunda|:count secundas',\n    'weekdays' => ['dumengia', 'glindesdi', 'mardi', 'mesemna', 'gievgia', 'venderdi', 'sonda'],\n    'weekdays_short' => ['du', 'gli', 'ma', 'me', 'gie', 've', 'so'],\n    'weekdays_min' => ['du', 'gli', 'ma', 'me', 'gie', 've', 'so'],\n    'months' => ['schaner', 'favrer', 'mars', 'avrigl', 'matg', 'zercladur', 'fanadur', 'avust', 'settember', 'october', 'november', 'december'],\n    'months_short' => ['schan', 'favr', 'mars', 'avr', 'matg', 'zercl', 'fan', 'avust', 'sett', 'oct', 'nov', 'dec'],\n    'meridiem' => ['avantmezdi', 'suentermezdi'],\n    'list' => [', ', ' e '],\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ber.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ber_DZ.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gez.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/gez_ER.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/br_FR.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/br.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/to_TO.php","ext":"php","size":1902,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - International Components for Unicode    akhilesh.k@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'dddd DD MMM YYYY',\n    ],\n    'months' => ['Sānuali', 'Fēpueli', 'Maʻasi', 'ʻEpeleli', 'Mē', 'Sune', 'Siulai', 'ʻAokosi', 'Sepitema', 'ʻOkatopa', 'Nōvema', 'Tīsema'],\n    'months_short' => ['Sān', 'Fēp', 'Maʻa', 'ʻEpe', 'Mē', 'Sun', 'Siu', 'ʻAok', 'Sep', 'ʻOka', 'Nōv', 'Tīs'],\n    'weekdays' => ['Sāpate', 'Mōnite', 'Tūsite', 'Pulelulu', 'Tuʻapulelulu', 'Falaite', 'Tokonaki'],\n    'weekdays_short' => ['Sāp', 'Mōn', 'Tūs', 'Pul', 'Tuʻa', 'Fal', 'Tok'],\n    'weekdays_min' => ['Sāp', 'Mōn', 'Tūs', 'Pul', 'Tuʻa', 'Fal', 'Tok'],\n    'meridiem' => ['hengihengi', 'efiafi'],\n\n    'year' => ':count fitu', // less reliable\n    'y' => ':count fitu', // less reliable\n    'a_year' => ':count fitu', // less reliable\n\n    'month' => ':count mahina', // less reliable\n    'm' => ':count mahina', // less reliable\n    'a_month' => ':count mahina', // less reliable\n\n    'week' => ':count Sapate', // less reliable\n    'w' => ':count Sapate', // less reliable\n    'a_week' => ':count Sapate', // less reliable\n\n    'day' => ':count ʻaho', // less reliable\n    'd' => ':count ʻaho', // less reliable\n    'a_day' => ':count ʻaho', // less reliable\n\n    'hour' => ':count houa',\n    'h' => ':count houa',\n    'a_hour' => ':count houa',\n\n    'minute' => ':count miniti',\n    'min' => ':count miniti',\n    'a_minute' => ':count miniti',\n\n    'second' => ':count sekoni',\n    's' => ':count sekoni',\n    'a_second' => ':count sekoni',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ccp.php","ext":"php","size":2505,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['𑄢𑄧𑄝𑄨𑄝𑄢𑄴', '𑄥𑄧𑄟𑄴𑄝𑄢𑄴', '𑄟𑄧𑄁𑄉𑄧𑄣𑄴𑄝𑄢𑄴', '𑄝𑄪𑄖𑄴𑄝𑄢𑄴', '𑄝𑄳𑄢𑄨𑄥𑄪𑄛𑄴𑄝𑄢𑄴', '𑄥𑄪𑄇𑄴𑄇𑄮𑄢𑄴𑄝𑄢𑄴', '𑄥𑄧𑄚𑄨𑄝𑄢𑄴'],\n    'weekdays_short' => ['𑄢𑄧𑄝𑄨', '𑄥𑄧𑄟𑄴', '𑄟𑄧𑄁𑄉𑄧𑄣𑄴', '𑄝𑄪𑄖𑄴', '𑄝𑄳𑄢𑄨𑄥𑄪𑄛𑄴', '𑄥𑄪𑄇𑄴𑄇𑄮𑄢𑄴', '𑄥𑄧𑄚𑄨'],\n    'weekdays_min' => ['𑄢𑄧𑄝𑄨', '𑄥𑄧𑄟𑄴', '𑄟𑄧𑄁𑄉𑄧𑄣𑄴', '𑄝𑄪𑄖𑄴', '𑄝𑄳𑄢𑄨𑄥𑄪𑄛𑄴', '𑄥𑄪𑄇𑄴𑄇𑄮𑄢𑄴', '𑄥𑄧𑄚𑄨'],\n    'months' => ['𑄎𑄚𑄪𑄠𑄢𑄨', '𑄜𑄬𑄛𑄴𑄝𑄳𑄢𑄪𑄠𑄢𑄨', '𑄟𑄢𑄴𑄌𑄧', '𑄃𑄬𑄛𑄳𑄢𑄨𑄣𑄴', '𑄟𑄬', '𑄎𑄪𑄚𑄴', '𑄎𑄪𑄣𑄭', '𑄃𑄉𑄧𑄌𑄴𑄑𑄴', '𑄥𑄬𑄛𑄴𑄑𑄬𑄟𑄴𑄝𑄧𑄢𑄴', '𑄃𑄧𑄇𑄴𑄑𑄬𑄝𑄧𑄢𑄴', '𑄚𑄧𑄞𑄬𑄟𑄴𑄝𑄧𑄢𑄴', '𑄓𑄨𑄥𑄬𑄟𑄴𑄝𑄧𑄢𑄴'],\n    'months_short' => ['𑄎𑄚𑄪', '𑄜𑄬𑄛𑄴', '𑄟𑄢𑄴𑄌𑄧', '𑄃𑄬𑄛𑄳𑄢𑄨𑄣𑄴', '𑄟𑄬', '𑄎𑄪𑄚𑄴', '𑄎𑄪𑄣𑄭', '𑄃𑄉𑄧𑄌𑄴𑄑𑄴', '𑄥𑄬𑄛𑄴𑄑𑄬𑄟𑄴𑄝𑄧𑄢𑄴', '𑄃𑄧𑄇𑄴𑄑𑄮𑄝𑄧𑄢𑄴', '𑄚𑄧𑄞𑄬𑄟𑄴𑄝𑄧𑄢𑄴', '𑄓𑄨𑄥𑄬𑄟𑄴𑄝𑄢𑄴'],\n    'months_short_standalone' => ['𑄎𑄚𑄪𑄠𑄢𑄨', '𑄜𑄬𑄛𑄴𑄝𑄳𑄢𑄪𑄠𑄢𑄨', '𑄟𑄢𑄴𑄌𑄧', '𑄃𑄬𑄛𑄳𑄢𑄨𑄣𑄴', '𑄟𑄬', '𑄎𑄪𑄚𑄴', '𑄎𑄪𑄣𑄭', '𑄃𑄉𑄧𑄌𑄴𑄑𑄴', '𑄥𑄬𑄛𑄴𑄑𑄬𑄟𑄴𑄝𑄧𑄢𑄴', '𑄃𑄧𑄇𑄴𑄑𑄮𑄝𑄧𑄢𑄴', '𑄚𑄧𑄞𑄬𑄟𑄴𑄝𑄧𑄢𑄴', '𑄓𑄨𑄥𑄬𑄟𑄴𑄝𑄧𑄢𑄴'],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM, YYYY h:mm a',\n        'LLLL' => 'dddd, D MMMM, YYYY h:mm a',\n    ],\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/br.php","ext":"php","size":2794,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Serhan Apaydın\n * - JD Isaacks\n */\nreturn [\n    'year' => '{1}:count bloaz|{3,4,5,9}:count bloaz|[0,Inf[:count vloaz',\n    'a_year' => '{1}ur bloaz|{3,4,5,9}:count bloaz|[0,Inf[:count vloaz',\n    'month' => '{1}:count miz|{2}:count viz|[0,Inf[:count miz',\n    'a_month' => '{1}ur miz|{2}:count viz|[0,Inf[:count miz',\n    'week' => ':count sizhun',\n    'a_week' => '{1}ur sizhun|:count sizhun',\n    'day' => '{1}:count devezh|{2}:count zevezh|[0,Inf[:count devezh',\n    'a_day' => '{1}un devezh|{2}:count zevezh|[0,Inf[:count devezh',\n    'hour' => ':count eur',\n    'a_hour' => '{1}un eur|:count eur',\n    'minute' => '{1}:count vunutenn|{2}:count vunutenn|[0,Inf[:count munutenn',\n    'a_minute' => '{1}ur vunutenn|{2}:count vunutenn|[0,Inf[:count munutenn',\n    'second' => ':count eilenn',\n    'a_second' => '{1}un nebeud segondennoù|[0,Inf[:count eilenn',\n    'ago' => ':time \\'zo',\n    'from_now' => 'a-benn :time',\n    'diff_now' => 'bremañ',\n    'diff_today' => 'Hiziv',\n    'diff_today_regexp' => 'Hiziv(?:\\\\s+da)?',\n    'diff_yesterday' => 'decʼh',\n    'diff_yesterday_regexp' => 'Dec\\'h(?:\\\\s+da)?',\n    'diff_tomorrow' => 'warcʼhoazh',\n    'diff_tomorrow_regexp' => 'Warc\\'hoazh(?:\\\\s+da)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D [a viz] MMMM YYYY',\n        'LLL' => 'D [a viz] MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D [a viz] MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Hiziv da] LT',\n        'nextDay' => '[Warc\\'hoazh da] LT',\n        'nextWeek' => 'dddd [da] LT',\n        'lastDay' => '[Dec\\'h da] LT',\n        'lastWeek' => 'dddd [paset da] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static fn ($number) => $number.($number === 1 ? 'añ' : 'vet'),\n    'months' => ['Genver', 'C\\'hwevrer', 'Meurzh', 'Ebrel', 'Mae', 'Mezheven', 'Gouere', 'Eost', 'Gwengolo', 'Here', 'Du', 'Kerzu'],\n    'months_short' => ['Gen', 'C\\'hwe', 'Meu', 'Ebr', 'Mae', 'Eve', 'Gou', 'Eos', 'Gwe', 'Her', 'Du', 'Ker'],\n    'weekdays' => ['Sul', 'Lun', 'Meurzh', 'Merc\\'her', 'Yaou', 'Gwener', 'Sadorn'],\n    'weekdays_short' => ['Sul', 'Lun', 'Meu', 'Mer', 'Yao', 'Gwe', 'Sad'],\n    'weekdays_min' => ['Su', 'Lu', 'Me', 'Mer', 'Ya', 'Gw', 'Sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' hag '],\n    'meridiem' => ['A.M.', 'G.M.'],\n\n    'y' => ':count bl.',\n    'd' => ':count d',\n    'h' => ':count e',\n    'min' => ':count min',\n    's' => ':count s',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hr_HR.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/hr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ik_CA.php","ext":"php","size":1833,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - pablo@mandriva.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Siqiññaatchiaq', 'Siqiññaasrugruk', 'Paniqsiqsiivik', 'Qilġich Tatqiat', 'Suppivik', 'Iġñivik', 'Itchavik', 'Tiññivik', 'Amiġaiqsivik', 'Sikkuvik', 'Nippivik', 'Siqiñġiḷaq'],\n    'months_short' => ['Sñt', 'Sñs', 'Pan', 'Qil', 'Sup', 'Iġñ', 'Itc', 'Tiñ', 'Ami', 'Sik', 'Nip', 'Siq'],\n    'weekdays' => ['Minġuiqsioiq', 'Savałłiq', 'Ilaqtchiioiq', 'Qitchiioiq', 'Sisamiioiq', 'Tallimmiioiq', 'Maqinġuoiq'],\n    'weekdays_short' => ['Min', 'Sav', 'Ila', 'Qit', 'Sis', 'Tal', 'Maq'],\n    'weekdays_min' => ['Min', 'Sav', 'Ila', 'Qit', 'Sis', 'Tal', 'Maq'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count ukiuq',\n    'y' => ':count ukiuq',\n    'a_year' => ':count ukiuq',\n\n    'month' => ':count Tatqiat',\n    'm' => ':count Tatqiat',\n    'a_month' => ':count Tatqiat',\n\n    'week' => ':count tatqiat', // less reliable\n    'w' => ':count tatqiat', // less reliable\n    'a_week' => ':count tatqiat', // less reliable\n\n    'day' => ':count siqiñiq', // less reliable\n    'd' => ':count siqiñiq', // less reliable\n    'a_day' => ':count siqiñiq', // less reliable\n\n    'hour' => ':count Siḷa', // less reliable\n    'h' => ':count Siḷa', // less reliable\n    'a_hour' => ':count Siḷa', // less reliable\n\n    'second' => ':count iġñiq', // less reliable\n    's' => ':count iġñiq', // less reliable\n    'a_second' => ':count iġñiq', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_FI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_VI.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_TK.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/agq.php","ext":"php","size":1321,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['a.g', 'a.k'],\n    'weekdays' => ['tsuʔntsɨ', 'tsuʔukpà', 'tsuʔughɔe', 'tsuʔutɔ̀mlò', 'tsuʔumè', 'tsuʔughɨ̂m', 'tsuʔndzɨkɔʔɔ'],\n    'weekdays_short' => ['nts', 'kpa', 'ghɔ', 'tɔm', 'ume', 'ghɨ', 'dzk'],\n    'weekdays_min' => ['nts', 'kpa', 'ghɔ', 'tɔm', 'ume', 'ghɨ', 'dzk'],\n    'months' => ['ndzɔ̀ŋɔ̀nùm', 'ndzɔ̀ŋɔ̀kƗ̀zùʔ', 'ndzɔ̀ŋɔ̀tƗ̀dʉ̀ghà', 'ndzɔ̀ŋɔ̀tǎafʉ̄ghā', 'ndzɔ̀ŋèsèe', 'ndzɔ̀ŋɔ̀nzùghò', 'ndzɔ̀ŋɔ̀dùmlo', 'ndzɔ̀ŋɔ̀kwîfɔ̀e', 'ndzɔ̀ŋɔ̀tƗ̀fʉ̀ghàdzughù', 'ndzɔ̀ŋɔ̀ghǔuwelɔ̀m', 'ndzɔ̀ŋɔ̀chwaʔàkaa wo', 'ndzɔ̀ŋèfwòo'],\n    'months_short' => ['nùm', 'kɨz', 'tɨd', 'taa', 'see', 'nzu', 'dum', 'fɔe', 'dzu', 'lɔm', 'kaa', 'fwo'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SD.php","ext":"php","size":352,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 6,\n    'weekend' => [5, 6],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ta_IN.php","ext":"php","size":1396,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/ta.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'],\n    'months_short' => ['ஜன.', 'பிப்.', 'மார்.', 'ஏப்.', 'மே', 'ஜூன்', 'ஜூலை', 'ஆக.', 'செப்.', 'அக்.', 'நவ.', 'டிச.'],\n    'weekdays' => ['ஞாயிறு', 'திங்கள்', 'செவ்வாய்', 'புதன்', 'வியாழன்', 'வெள்ளி', 'சனி'],\n    'weekdays_short' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'weekdays_min' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['காலை', 'மாலை'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tk.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/tk_TM.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fy_NL.php","ext":"php","size":988,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/fy.php', [\n    'formats' => [\n        'L' => 'DD-MM-YY',\n    ],\n    'months' => ['Jannewaris', 'Febrewaris', 'Maart', 'April', 'Maaie', 'Juny', 'July', 'Augustus', 'Septimber', 'Oktober', 'Novimber', 'Desimber'],\n    'months_short' => ['Jan', 'Feb', 'Mrt', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Snein', 'Moandei', 'Tiisdei', 'Woansdei', 'Tongersdei', 'Freed', 'Sneon'],\n    'weekdays_short' => ['Sn', 'Mo', 'Ti', 'Wo', 'To', 'Fr', 'Sn'],\n    'weekdays_min' => ['Sn', 'Mo', 'Ti', 'Wo', 'To', 'Fr', 'Sn'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_BZ.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sw_KE.php","ext":"php","size":989,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kamusi Project Martin Benjamin locales@kamusi.org\n */\nreturn array_replace_recursive(require __DIR__.'/sw.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprili', 'Mei', 'Juni', 'Julai', 'Agosti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Jumapili', 'Jumatatu', 'Jumanne', 'Jumatano', 'Alhamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['J2', 'J3', 'J4', 'J5', 'Alh', 'Ij', 'J1'],\n    'weekdays_min' => ['J2', 'J3', 'J4', 'J5', 'Alh', 'Ij', 'J1'],\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['asubuhi', 'alasiri'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/vai_Vaii.php","ext":"php","size":268,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/vai.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_DE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_ER.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bem.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/bem_ZM.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/az.php","ext":"php","size":4228,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Kunal Marwaha\n * - François B\n * - JD Isaacks\n * - Orxan\n * - Şəhriyar İmanov\n * - Baran Şengül\n * - Novruz Rahimov\n */\nreturn [\n    'year' => ':count il',\n    'a_year' => '{1}bir il|[-Inf,Inf]:count il',\n    'y' => ':count il',\n    'month' => ':count ay',\n    'a_month' => '{1}bir ay|[-Inf,Inf]:count ay',\n    'm' => ':count ay',\n    'week' => ':count həftə',\n    'a_week' => '{1}bir həftə|[-Inf,Inf]:count həftə',\n    'w' => ':count h.',\n    'day' => ':count gün',\n    'a_day' => '{1}bir gün|[-Inf,Inf]:count gün',\n    'd' => ':count g.',\n    'hour' => ':count saat',\n    'a_hour' => '{1}bir saat|[-Inf,Inf]:count saat',\n    'h' => ':count s.',\n    'minute' => ':count dəqiqə',\n    'a_minute' => '{1}bir dəqiqə|[-Inf,Inf]:count dəqiqə',\n    'min' => ':count d.',\n    'second' => ':count saniyə',\n    'a_second' => '{1}birneçə saniyə|[-Inf,Inf]:count saniyə',\n    's' => ':count san.',\n    'ago' => ':time əvvəl',\n    'from_now' => ':time sonra',\n    'after' => ':time sonra',\n    'before' => ':time əvvəl',\n    'diff_now' => 'indi',\n    'diff_today' => 'bugün',\n    'diff_today_regexp' => 'bugün(?:\\\\s+saat)?',\n    'diff_yesterday' => 'dünən',\n    'diff_tomorrow' => 'sabah',\n    'diff_tomorrow_regexp' => 'sabah(?:\\\\s+saat)?',\n    'diff_before_yesterday' => 'srağagün',\n    'diff_after_tomorrow' => 'birisi gün',\n    'period_recurrences' => ':count dəfədən bir',\n    'period_interval' => 'hər :interval',\n    'period_start_date' => ':date tarixindən başlayaraq',\n    'period_end_date' => ':date tarixinədək',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[bugün saat] LT',\n        'nextDay' => '[sabah saat] LT',\n        'nextWeek' => '[gələn həftə] dddd [saat] LT',\n        'lastDay' => '[dünən] LT',\n        'lastWeek' => '[keçən həftə] dddd [saat] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        if ($number === 0) { // special case for zero\n            return \"$number-ıncı\";\n        }\n\n        static $suffixes = [\n            1 => '-inci',\n            5 => '-inci',\n            8 => '-inci',\n            70 => '-inci',\n            80 => '-inci',\n            2 => '-nci',\n            7 => '-nci',\n            20 => '-nci',\n            50 => '-nci',\n            3 => '-üncü',\n            4 => '-üncü',\n            100 => '-üncü',\n            6 => '-ncı',\n            9 => '-uncu',\n            10 => '-uncu',\n            30 => '-uncu',\n            60 => '-ıncı',\n            90 => '-ıncı',\n        ];\n\n        $lastDigit = $number % 10;\n\n        return $number.($suffixes[$lastDigit] ?? $suffixes[$number % 100 - $lastDigit] ?? $suffixes[$number >= 100 ? 100 : -1] ?? '');\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'gecə';\n        }\n        if ($hour < 12) {\n            return 'səhər';\n        }\n        if ($hour < 17) {\n            return 'gündüz';\n        }\n\n        return 'axşam';\n    },\n    'months' => ['yanvar', 'fevral', 'mart', 'aprel', 'may', 'iyun', 'iyul', 'avqust', 'sentyabr', 'oktyabr', 'noyabr', 'dekabr'],\n    'months_short' => ['yan', 'fev', 'mar', 'apr', 'may', 'iyn', 'iyl', 'avq', 'sen', 'okt', 'noy', 'dek'],\n    'months_standalone' => ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'İyun', 'İyul', 'Avqust', 'Sentyabr', 'Oktyabr', 'Noyabr', 'Dekabr'],\n    'weekdays' => ['bazar', 'bazar ertəsi', 'çərşənbə axşamı', 'çərşənbə', 'cümə axşamı', 'cümə', 'şənbə'],\n    'weekdays_short' => ['baz', 'bze', 'çax', 'çər', 'cax', 'cüm', 'şən'],\n    'weekdays_min' => ['bz', 'be', 'ça', 'çə', 'ca', 'cü', 'şə'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' və '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wal.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/wal_ET.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ks_IN@devanagari.php","ext":"php","size":1547,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - ks-gnome-trans-commits@lists.code.indlinux.net\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'M/D/YY',\n    ],\n    'months' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'months_short' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'weekdays' => ['आथवार', 'चॅ़दुरवार', 'बोमवार', 'ब्वदवार', 'ब्रसवार', 'शोकुरवार', 'बटुवार'],\n    'weekdays_short' => ['आथ ', 'चॅ़दुर', 'बोम', 'ब्वद', 'ब्रस', 'शोकुर', 'बटु'],\n    'weekdays_min' => ['आथ ', 'चॅ़दुर', 'बोम', 'ब्वद', 'ब्रस', 'शोकुर', 'बटु'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dsb_DE.php","ext":"php","size":1848,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Information from Michael Wolf    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'DD. MMMM YYYY',\n        'LLL' => 'DD. MMMM, HH:mm [góź.]',\n        'LLLL' => 'dddd, DD. MMMM YYYY, HH:mm [góź.]',\n    ],\n    'months' => ['januara', 'februara', 'měrca', 'apryla', 'maja', 'junija', 'julija', 'awgusta', 'septembra', 'oktobra', 'nowembra', 'decembra'],\n    'months_short' => ['Jan', 'Feb', 'Měr', 'Apr', 'Maj', 'Jun', 'Jul', 'Awg', 'Sep', 'Okt', 'Now', 'Dec'],\n    'weekdays' => ['Njeźela', 'Pónjeźele', 'Wałtora', 'Srjoda', 'Stwórtk', 'Pětk', 'Sobota'],\n    'weekdays_short' => ['Nj', 'Pó', 'Wa', 'Sr', 'St', 'Pě', 'So'],\n    'weekdays_min' => ['Nj', 'Pó', 'Wa', 'Sr', 'St', 'Pě', 'So'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count lěto',\n    'y' => ':count lěto',\n    'a_year' => ':count lěto',\n\n    'month' => ':count mjasec',\n    'm' => ':count mjasec',\n    'a_month' => ':count mjasec',\n\n    'week' => ':count tyźeń',\n    'w' => ':count tyźeń',\n    'a_week' => ':count tyźeń',\n\n    'day' => ':count źeń',\n    'd' => ':count źeń',\n    'a_day' => ':count źeń',\n\n    'hour' => ':count góźina',\n    'h' => ':count góźina',\n    'a_hour' => ':count góźina',\n\n    'minute' => ':count minuta',\n    'min' => ':count minuta',\n    'a_minute' => ':count minuta',\n\n    'second' => ':count drugi',\n    's' => ':count drugi',\n    'a_second' => ':count drugi',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/be.php","ext":"php","size":9121,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Carbon\\CarbonInterface;\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return (($number % 10 == 1) && ($number % 100 != 11)) ? 0 : ((($number % 10 >= 2) && ($number % 10 <= 4) && (($number % 100 < 10) || ($number % 100 >= 20))) ? 1 : 2);\n    }, 'be');\n}\n// @codeCoverageIgnoreEnd\n\n/*\n * Authors:\n * - Josh Soref\n * - SobakaSlava\n * - François B\n * - Serhan Apaydın\n * - JD Isaacks\n * - AbadonnaAbbys\n * - Siomkin Alexander\n */\nreturn [\n    'year' => ':count год|:count гады|:count гадоў',\n    'a_year' => '{1}год|:count год|:count гады|:count гадоў',\n    'y' => ':count год|:count гады|:count гадоў',\n    'month' => ':count месяц|:count месяцы|:count месяцаў',\n    'a_month' => '{1}месяц|:count месяц|:count месяцы|:count месяцаў',\n    'm' => ':count месяц|:count месяцы|:count месяцаў',\n    'week' => ':count тыдзень|:count тыдні|:count тыдняў',\n    'a_week' => '{1}тыдзень|:count тыдзень|:count тыдні|:count тыдняў',\n    'w' => ':count тыдзень|:count тыдні|:count тыдняў',\n    'day' => ':count дзень|:count дні|:count дзён',\n    'a_day' => '{1}дзень|:count дзень|:count дні|:count дзён',\n    'd' => ':count дн',\n    'hour' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'a_hour' => '{1}гадзіна|:count гадзіна|:count гадзіны|:count гадзін',\n    'h' => ':count гадзіна|:count гадзіны|:count гадзін',\n    'minute' => ':count хвіліна|:count хвіліны|:count хвілін',\n    'a_minute' => '{1}хвіліна|:count хвіліна|:count хвіліны|:count хвілін',\n    'min' => ':count хв',\n    'second' => ':count секунда|:count секунды|:count секунд',\n    'a_second' => '{1}некалькі секунд|:count секунда|:count секунды|:count секунд',\n    's' => ':count сек',\n\n    'hour_ago' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'a_hour_ago' => '{1}гадзіну|:count гадзіну|:count гадзіны|:count гадзін',\n    'h_ago' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'minute_ago' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'a_minute_ago' => '{1}хвіліну|:count хвіліну|:count хвіліны|:count хвілін',\n    'min_ago' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'second_ago' => ':count секунду|:count секунды|:count секунд',\n    'a_second_ago' => '{1}некалькі секунд|:count секунду|:count секунды|:count секунд',\n    's_ago' => ':count секунду|:count секунды|:count секунд',\n\n    'hour_from_now' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'a_hour_from_now' => '{1}гадзіну|:count гадзіну|:count гадзіны|:count гадзін',\n    'h_from_now' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'minute_from_now' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'a_minute_from_now' => '{1}хвіліну|:count хвіліну|:count хвіліны|:count хвілін',\n    'min_from_now' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'second_from_now' => ':count секунду|:count секунды|:count секунд',\n    'a_second_from_now' => '{1}некалькі секунд|:count секунду|:count секунды|:count секунд',\n    's_from_now' => ':count секунду|:count секунды|:count секунд',\n\n    'hour_after' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'a_hour_after' => '{1}гадзіну|:count гадзіну|:count гадзіны|:count гадзін',\n    'h_after' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'minute_after' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'a_minute_after' => '{1}хвіліну|:count хвіліну|:count хвіліны|:count хвілін',\n    'min_after' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'second_after' => ':count секунду|:count секунды|:count секунд',\n    'a_second_after' => '{1}некалькі секунд|:count секунду|:count секунды|:count секунд',\n    's_after' => ':count секунду|:count секунды|:count секунд',\n\n    'hour_before' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'a_hour_before' => '{1}гадзіну|:count гадзіну|:count гадзіны|:count гадзін',\n    'h_before' => ':count гадзіну|:count гадзіны|:count гадзін',\n    'minute_before' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'a_minute_before' => '{1}хвіліну|:count хвіліну|:count хвіліны|:count хвілін',\n    'min_before' => ':count хвіліну|:count хвіліны|:count хвілін',\n    'second_before' => ':count секунду|:count секунды|:count секунд',\n    'a_second_before' => '{1}некалькі секунд|:count секунду|:count секунды|:count секунд',\n    's_before' => ':count секунду|:count секунды|:count секунд',\n\n    'ago' => ':time таму',\n    'from_now' => 'праз :time',\n    'after' => ':time пасля',\n    'before' => ':time да',\n    'diff_now' => 'цяпер',\n    'diff_today' => 'Сёння',\n    'diff_today_regexp' => 'Сёння(?:\\\\s+ў)?',\n    'diff_yesterday' => 'учора',\n    'diff_yesterday_regexp' => 'Учора(?:\\\\s+ў)?',\n    'diff_tomorrow' => 'заўтра',\n    'diff_tomorrow_regexp' => 'Заўтра(?:\\\\s+ў)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY г.',\n        'LLL' => 'D MMMM YYYY г., HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY г., HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Сёння ў] LT',\n        'nextDay' => '[Заўтра ў] LT',\n        'nextWeek' => '[У] dddd [ў] LT',\n        'lastDay' => '[Учора ў] LT',\n        'lastWeek' => static fn (CarbonInterface $current) => match ($current->dayOfWeek) {\n            1, 2, 4 => '[У мінулы] dddd [ў] LT',\n            default => '[У мінулую] dddd [ў] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static fn ($number, $period) => match ($period) {\n        'M', 'd', 'DDD', 'w', 'W' => ($number % 10 === 2 || $number % 10 === 3) &&\n                ($number % 100 !== 12 && $number % 100 !== 13) ? $number.'-і' : $number.'-ы',\n        'D' => $number.'-га',\n        default => $number,\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'ночы';\n        }\n\n        if ($hour < 12) {\n            return 'раніцы';\n        }\n\n        if ($hour < 17) {\n            return 'дня';\n        }\n\n        return 'вечара';\n    },\n    'months' => ['студзеня', 'лютага', 'сакавіка', 'красавіка', 'траўня', 'чэрвеня', 'ліпеня', 'жніўня', 'верасня', 'кастрычніка', 'лістапада', 'снежня'],\n    'months_standalone' => ['студзень', 'люты', 'сакавік', 'красавік', 'травень', 'чэрвень', 'ліпень', 'жнівень', 'верасень', 'кастрычнік', 'лістапад', 'снежань'],\n    'months_short' => ['студ', 'лют', 'сак', 'крас', 'трав', 'чэрв', 'ліп', 'жнів', 'вер', 'каст', 'ліст', 'снеж'],\n    'months_regexp' => '/(DD?o?\\.?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['нядзелю', 'панядзелак', 'аўторак', 'сераду', 'чацвер', 'пятніцу', 'суботу'],\n    'weekdays_standalone' => ['нядзеля', 'панядзелак', 'аўторак', 'серада', 'чацвер', 'пятніца', 'субота'],\n    'weekdays_short' => ['нд', 'пн', 'ат', 'ср', 'чц', 'пт', 'сб'],\n    'weekdays_min' => ['нд', 'пн', 'ат', 'ср', 'чц', 'пт', 'сб'],\n    'weekdays_regexp' => '/\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' і '],\n    'months_short_standalone' => ['сту', 'лют', 'сак', 'кра', 'май', 'чэр', 'ліп', 'жні', 'вер', 'кас', 'ліс', 'сне'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_CN.php","ext":"php","size":701,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - monkeycon\n * - François B\n * - Jason Katz-Brown\n * - Serhan Apaydın\n * - Matt Johnson\n * - JD Isaacks\n * - Zeno Zeng\n * - Chris Hemp\n * - shankesgk2\n */\nreturn array_merge(require __DIR__.'/zh.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY/MM/DD',\n        'LL' => 'YYYY年M月D日',\n        'LLL' => 'YYYY年M月D日Ah点mm分',\n        'LLLL' => 'YYYY年M月D日ddddAh点mm分',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hu.php","ext":"php","size":4089,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Adam Brunner\n * - Brett Johnson\n * - balping\n */\n\nuse Carbon\\CarbonInterface;\n\n$huWeekEndings = ['vasárnap', 'hétfőn', 'kedden', 'szerdán', 'csütörtökön', 'pénteken', 'szombaton'];\n\nreturn [\n    'year' => ':count év',\n    'y' => ':count év',\n    'month' => ':count hónap',\n    'm' => ':count hónap',\n    'week' => ':count hét',\n    'w' => ':count hét',\n    'day' => ':count nap',\n    'd' => ':count nap',\n    'hour' => ':count óra',\n    'h' => ':count óra',\n    'minute' => ':count perc',\n    'min' => ':count perc',\n    'second' => ':count másodperc',\n    's' => ':count másodperc',\n    'ago' => ':time',\n    'from_now' => ':time múlva',\n    'after' => ':time később',\n    'before' => ':time korábban',\n    'year_ago' => ':count éve',\n    'y_ago' => ':count éve',\n    'month_ago' => ':count hónapja',\n    'm_ago' => ':count hónapja',\n    'week_ago' => ':count hete',\n    'w_ago' => ':count hete',\n    'day_ago' => ':count napja',\n    'd_ago' => ':count napja',\n    'hour_ago' => ':count órája',\n    'h_ago' => ':count órája',\n    'minute_ago' => ':count perce',\n    'min_ago' => ':count perce',\n    'second_ago' => ':count másodperce',\n    's_ago' => ':count másodperce',\n    'year_after' => ':count évvel',\n    'y_after' => ':count évvel',\n    'month_after' => ':count hónappal',\n    'm_after' => ':count hónappal',\n    'week_after' => ':count héttel',\n    'w_after' => ':count héttel',\n    'day_after' => ':count nappal',\n    'd_after' => ':count nappal',\n    'hour_after' => ':count órával',\n    'h_after' => ':count órával',\n    'minute_after' => ':count perccel',\n    'min_after' => ':count perccel',\n    'second_after' => ':count másodperccel',\n    's_after' => ':count másodperccel',\n    'year_before' => ':count évvel',\n    'y_before' => ':count évvel',\n    'month_before' => ':count hónappal',\n    'm_before' => ':count hónappal',\n    'week_before' => ':count héttel',\n    'w_before' => ':count héttel',\n    'day_before' => ':count nappal',\n    'd_before' => ':count nappal',\n    'hour_before' => ':count órával',\n    'h_before' => ':count órával',\n    'minute_before' => ':count perccel',\n    'min_before' => ':count perccel',\n    'second_before' => ':count másodperccel',\n    's_before' => ':count másodperccel',\n    'months' => ['január', 'február', 'március', 'április', 'május', 'június', 'július', 'augusztus', 'szeptember', 'október', 'november', 'december'],\n    'months_short' => ['jan.', 'febr.', 'márc.', 'ápr.', 'máj.', 'jún.', 'júl.', 'aug.', 'szept.', 'okt.', 'nov.', 'dec.'],\n    'weekdays' => ['vasárnap', 'hétfő', 'kedd', 'szerda', 'csütörtök', 'péntek', 'szombat'],\n    'weekdays_short' => ['vas', 'hét', 'kedd', 'sze', 'csüt', 'pén', 'szo'],\n    'weekdays_min' => ['v', 'h', 'k', 'sze', 'cs', 'p', 'sz'],\n    'ordinal' => ':number.',\n    'diff_now' => 'most',\n    'diff_today' => 'ma',\n    'diff_yesterday' => 'tegnap',\n    'diff_tomorrow' => 'holnap',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'YYYY.MM.DD.',\n        'LL' => 'YYYY. MMMM D.',\n        'LLL' => 'YYYY. MMMM D. H:mm',\n        'LLLL' => 'YYYY. MMMM D., dddd H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ma] LT[-kor]',\n        'nextDay' => '[holnap] LT[-kor]',\n        'nextWeek' => static function (CarbonInterface $date) use ($huWeekEndings) {\n            return '['.$huWeekEndings[$date->dayOfWeek].'] LT[-kor]';\n        },\n        'lastDay' => '[tegnap] LT[-kor]',\n        'lastWeek' => static function (CarbonInterface $date) use ($huWeekEndings) {\n            return '[múlt '.$huWeekEndings[$date->dayOfWeek].'] LT[-kor]';\n        },\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['DE', 'DU'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' és '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/vi.php","ext":"php","size":2793,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Andre Polykanine A.K.A. Menelion Elensúlë\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count năm',\n    'a_year' => '{1}một năm|]1, Inf[:count năm',\n    'y' => ':count năm',\n    'month' => ':count tháng',\n    'a_month' => '{1}một tháng|]1, Inf[:count tháng',\n    'm' => ':count tháng',\n    'week' => ':count tuần',\n    'a_week' => '{1}một tuần|]1, Inf[:count tuần',\n    'w' => ':count tuần',\n    'day' => ':count ngày',\n    'a_day' => '{1}một ngày|]1, Inf[:count ngày',\n    'd' => ':count ngày',\n    'hour' => ':count giờ',\n    'a_hour' => '{1}một giờ|]1, Inf[:count giờ',\n    'h' => ':count giờ',\n    'minute' => ':count phút',\n    'a_minute' => '{1}một phút|]1, Inf[:count phút',\n    'min' => ':count phút',\n    'second' => ':count giây',\n    'a_second' => '{1}vài giây|]1, Inf[:count giây',\n    's' => ':count giây',\n    'ago' => ':time trước',\n    'from_now' => ':time tới',\n    'after' => ':time sau',\n    'before' => ':time trước',\n    'diff_now' => 'bây giờ',\n    'diff_today' => 'Hôm',\n    'diff_today_regexp' => 'Hôm(?:\\\\s+nay)?(?:\\\\s+lúc)?',\n    'diff_yesterday' => 'Hôm qua',\n    'diff_yesterday_regexp' => 'Hôm(?:\\\\s+qua)?(?:\\\\s+lúc)?',\n    'diff_tomorrow' => 'Ngày mai',\n    'diff_tomorrow_regexp' => 'Ngày(?:\\\\s+mai)?(?:\\\\s+lúc)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM [năm] YYYY',\n        'LLL' => 'D MMMM [năm] YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM [năm] YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Hôm nay lúc] LT',\n        'nextDay' => '[Ngày mai lúc] LT',\n        'nextWeek' => 'dddd [tuần tới lúc] LT',\n        'lastDay' => '[Hôm qua lúc] LT',\n        'lastWeek' => 'dddd [tuần trước lúc] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['SA', 'CH'],\n    'months' => ['tháng 1', 'tháng 2', 'tháng 3', 'tháng 4', 'tháng 5', 'tháng 6', 'tháng 7', 'tháng 8', 'tháng 9', 'tháng 10', 'tháng 11', 'tháng 12'],\n    'months_short' => ['Th01', 'Th02', 'Th03', 'Th04', 'Th05', 'Th06', 'Th07', 'Th08', 'Th09', 'Th10', 'Th11', 'Th12'],\n    'weekdays' => ['chủ nhật', 'thứ hai', 'thứ ba', 'thứ tư', 'thứ năm', 'thứ sáu', 'thứ bảy'],\n    'weekdays_short' => ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\n    'weekdays_min' => ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' và '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_UG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_LY.php","ext":"php","size":4160,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Atef Ben Ali (atefBB)\n * - Ibrahim AshShohail\n * - MLTDev\n */\n\n$months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر',\n];\n\nreturn [\n    'year' => implode('|', [':count سنة', 'سنة', 'سنتين', ':count سنوات', ':count سنة']),\n    'a_year' => implode('|', [':count سنة', 'سنة', 'سنتين', ':count سنوات', ':count سنة']),\n    'month' => implode('|', [':count شهر', 'شهر', 'شهرين', ':count أشهر', ':count شهر']),\n    'a_month' => implode('|', [':count شهر', 'شهر', 'شهرين', ':count أشهر', ':count شهر']),\n    'week' => implode('|', [':count أسبوع', 'أسبوع', 'أسبوعين', ':count أسابيع', ':count أسبوع']),\n    'a_week' => implode('|', [':count أسبوع', 'أسبوع', 'أسبوعين', ':count أسابيع', ':count أسبوع']),\n    'day' => implode('|', [':count يوم', 'يوم', 'يومين', ':count أيام', ':count يوم']),\n    'a_day' => implode('|', [':count يوم', 'يوم', 'يومين', ':count أيام', ':count يوم']),\n    'hour' => implode('|', [':count ساعة', 'ساعة', 'ساعتين', ':count ساعات', ':count ساعة']),\n    'a_hour' => implode('|', [':count ساعة', 'ساعة', 'ساعتين', ':count ساعات', ':count ساعة']),\n    'minute' => implode('|', [':count دقيقة', 'دقيقة', 'دقيقتين', ':count دقائق', ':count دقيقة']),\n    'a_minute' => implode('|', [':count دقيقة', 'دقيقة', 'دقيقتين', ':count دقائق', ':count دقيقة']),\n    'second' => implode('|', [':count ثانية', 'ثانية', 'ثانيتين', ':count ثواني', ':count ثانية']),\n    'a_second' => implode('|', [':count ثانية', 'ثانية', 'ثانيتين', ':count ثواني', ':count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => ':time من الآن',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدًا(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['مرة', 'مرة', ':count مرتين', ':count مرات', ':count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'اث', 'ثل', 'أر', 'خم', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم عند الساعة] LT',\n        'nextDay' => '[غدًا عند الساعة] LT',\n        'nextWeek' => 'dddd [عند الساعة] LT',\n        'lastDay' => '[أمس عند الساعة] LT',\n        'lastWeek' => 'dddd [عند الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lt.php","ext":"php","size":5107,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - tjku\n * - valdas406\n * - Justas Palumickas\n * - Max Melentiev\n * - Andrius Janauskas\n * - Juanito Fatas\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Nicolás Hock Isaza\n * - Laurynas Butkus\n * - Sven Fuchs\n * - Dominykas Tijūnaitis\n * - Justinas Bolys\n * - Ričardas\n * - Kirill Chalkin\n * - Rolandas\n * - Justinas (Gamesh)\n */\nreturn [\n    'year' => ':count metai|:count metai|:count metų',\n    'y' => ':count m.',\n    'month' => ':count mėnuo|:count mėnesiai|:count mėnesį',\n    'm' => ':count mėn.',\n    'week' => ':count savaitė|:count savaitės|:count savaitę',\n    'w' => ':count sav.',\n    'day' => ':count diena|:count dienos|:count dienų',\n    'd' => ':count d.',\n    'hour' => ':count valanda|:count valandos|:count valandų',\n    'h' => ':count val.',\n    'minute' => ':count minutė|:count minutės|:count minutę',\n    'min' => ':count min.',\n    'second' => ':count sekundė|:count sekundės|:count sekundžių',\n    's' => ':count sek.',\n\n    'year_ago' => ':count metus|:count metus|:count metų',\n    'month_ago' => ':count mėnesį|:count mėnesius|:count mėnesių',\n    'week_ago' => ':count savaitę|:count savaites|:count savaičių',\n    'day_ago' => ':count dieną|:count dienas|:count dienų',\n    'hour_ago' => ':count valandą|:count valandas|:count valandų',\n    'minute_ago' => ':count minutę|:count minutes|:count minučių',\n    'second_ago' => ':count sekundę|:count sekundes|:count sekundžių',\n\n    'year_from_now' => ':count metų',\n    'month_from_now' => ':count mėnesio|:count mėnesių|:count mėnesių',\n    'week_from_now' => ':count savaitės|:count savaičių|:count savaičių',\n    'day_from_now' => ':count dienos|:count dienų|:count dienų',\n    'hour_from_now' => ':count valandos|:count valandų|:count valandų',\n    'minute_from_now' => ':count minutės|:count minučių|:count minučių',\n    'second_from_now' => ':count sekundės|:count sekundžių|:count sekundžių',\n\n    'year_after' => ':count metų',\n    'month_after' => ':count mėnesio|:count mėnesių|:count mėnesių',\n    'week_after' => ':count savaitės|:count savaičių|:count savaičių',\n    'day_after' => ':count dienos|:count dienų|:count dienų',\n    'hour_after' => ':count valandos|:count valandų|:count valandų',\n    'minute_after' => ':count minutės|:count minučių|:count minučių',\n    'second_after' => ':count sekundės|:count sekundžių|:count sekundžių',\n\n    'ago' => 'prieš :time',\n    'from_now' => ':time nuo dabar',\n    'after' => 'po :time',\n    'before' => 'už :time',\n\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'diff_now' => 'ką tik',\n    'diff_today' => 'Šiandien',\n    'diff_yesterday' => 'vakar',\n    'diff_yesterday_regexp' => 'Vakar',\n    'diff_tomorrow' => 'rytoj',\n    'diff_tomorrow_regexp' => 'Rytoj',\n    'diff_before_yesterday' => 'užvakar',\n    'diff_after_tomorrow' => 'poryt',\n\n    'period_recurrences' => 'kartą|:count kartų',\n    'period_interval' => 'kiekvieną :interval',\n    'period_start_date' => 'nuo :date',\n    'period_end_date' => 'iki :date',\n\n    'months' => ['sausio', 'vasario', 'kovo', 'balandžio', 'gegužės', 'birželio', 'liepos', 'rugpjūčio', 'rugsėjo', 'spalio', 'lapkričio', 'gruodžio'],\n    'months_standalone' => ['sausis', 'vasaris', 'kovas', 'balandis', 'gegužė', 'birželis', 'liepa', 'rugpjūtis', 'rugsėjis', 'spalis', 'lapkritis', 'gruodis'],\n    'months_regexp' => '/(L{2,4}|D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?)/',\n    'months_short' => ['sau', 'vas', 'kov', 'bal', 'geg', 'bir', 'lie', 'rgp', 'rgs', 'spa', 'lap', 'gru'],\n    'weekdays' => ['sekmadienį', 'pirmadienį', 'antradienį', 'trečiadienį', 'ketvirtadienį', 'penktadienį', 'šeštadienį'],\n    'weekdays_standalone' => ['sekmadienis', 'pirmadienis', 'antradienis', 'trečiadienis', 'ketvirtadienis', 'penktadienis', 'šeštadienis'],\n    'weekdays_short' => ['sek', 'pir', 'ant', 'tre', 'ket', 'pen', 'šeš'],\n    'weekdays_min' => ['se', 'pi', 'an', 'tr', 'ke', 'pe', 'še'],\n    'list' => [', ', ' ir '],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'MMMM DD, YYYY',\n        'LLL' => 'DD MMM HH:mm',\n        'LLLL' => 'MMMM DD, YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Šiandien] LT',\n        'nextDay' => '[Rytoj] LT',\n        'nextWeek' => 'dddd LT',\n        'lastDay' => '[Vakar] LT',\n        'lastWeek' => '[Paskutinį] dddd LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        return match ($number) {\n            0 => '0-is',\n            3 => '3-ias',\n            default => \"$number-as\",\n        };\n    },\n    'meridiem' => ['priešpiet', 'popiet'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tt_RU@iqtelif.php","ext":"php","size":1046,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Reshat Sabiq tatar.iqtelif.i18n@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Ğınwar', 'Fiwral\\'', 'Mart', 'April', 'May', 'Yün', 'Yül', 'Awgust', 'Sintebír', 'Üktebír', 'Noyebír', 'Dikebír'],\n    'months_short' => ['Ğın', 'Fiw', 'Mar', 'Apr', 'May', 'Yün', 'Yül', 'Awg', 'Sin', 'Ükt', 'Noy', 'Dik'],\n    'weekdays' => ['Yekşembí', 'Düşembí', 'Sişembí', 'Çerşembí', 'Pencíşembí', 'Comğa', 'Şimbe'],\n    'weekdays_short' => ['Yek', 'Düş', 'Siş', 'Çer', 'Pen', 'Com', 'Şim'],\n    'weekdays_min' => ['Yek', 'Düş', 'Siş', 'Çer', 'Pen', 'Com', 'Şim'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ÖA', 'ÖS'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ak.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ak_GH.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_UM.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ber_DZ.php","ext":"php","size":1023,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['yanvar', 'fevral', 'mart', 'aprel', 'may', 'iyun', 'iyul', 'avqust', 'sentyabr', 'oktyabr', 'noyabr', 'dekabr'],\n    'months_short' => ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'İyn', 'İyl', 'Avq', 'Sen', 'Okt', 'Noy', 'Dek'],\n    'weekdays' => ['bazar günü', 'birinci gün', 'ikinci gün', 'üçüncü gün', 'dördüncü gün', 'beşinci gün', 'altıncı gün'],\n    'weekdays_short' => ['baz', 'bir', 'iki', 'üçü', 'dör', 'beş', 'alt'],\n    'weekdays_min' => ['baz', 'bir', 'iki', 'üçü', 'dör', 'beş', 'alt'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/iu.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/iu_CA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_ZM.php","ext":"php","size":428,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - ANLoc Martin Benjamin locales@africanlocalization.net\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ebu.php","ext":"php","size":1213,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['KI', 'UT'],\n    'weekdays' => ['Kiumia', 'Njumatatu', 'Njumaine', 'Njumatano', 'Aramithi', 'Njumaa', 'NJumamothii'],\n    'weekdays_short' => ['Kma', 'Tat', 'Ine', 'Tan', 'Arm', 'Maa', 'NMM'],\n    'weekdays_min' => ['Kma', 'Tat', 'Ine', 'Tan', 'Arm', 'Maa', 'NMM'],\n    'months' => ['Mweri wa mbere', 'Mweri wa kaĩri', 'Mweri wa kathatũ', 'Mweri wa kana', 'Mweri wa gatano', 'Mweri wa gatantatũ', 'Mweri wa mũgwanja', 'Mweri wa kanana', 'Mweri wa kenda', 'Mweri wa ikũmi', 'Mweri wa ikũmi na ũmwe', 'Mweri wa ikũmi na Kaĩrĩ'],\n    'months_short' => ['Mbe', 'Kai', 'Kat', 'Kan', 'Gat', 'Gan', 'Mug', 'Knn', 'Ken', 'Iku', 'Imw', 'Igi'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_GQ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_DJ.php","ext":"php","size":552,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'first_day_of_week' => 6,\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_TV.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_419.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ti_ET.php","ext":"php","size":1294,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጃንዩወሪ', 'ፌብሩወሪ', 'ማርች', 'ኤፕረል', 'ሜይ', 'ጁን', 'ጁላይ', 'ኦገስት', 'ሴፕቴምበር', 'ኦክተውበር', 'ኖቬምበር', 'ዲሴምበር'],\n    'months_short' => ['ጃንዩ', 'ፌብሩ', 'ማርች', 'ኤፕረ', 'ሜይ ', 'ጁን ', 'ጁላይ', 'ኦገስ', 'ሴፕቴ', 'ኦክተ', 'ኖቬም', 'ዲሴም'],\n    'weekdays' => ['ሰንበት', 'ሰኑይ', 'ሰሉስ', 'ረቡዕ', 'ሓሙስ', 'ዓርቢ', 'ቀዳም'],\n    'weekdays_short' => ['ሰንበ', 'ሰኑይ', 'ሰሉስ', 'ረቡዕ', 'ሓሙስ', 'ዓርቢ', 'ቀዳም'],\n    'weekdays_min' => ['ሰንበ', 'ሰኑይ', 'ሰሉስ', 'ረቡዕ', 'ሓሙስ', 'ዓርቢ', 'ቀዳም'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ንጉሆ ሰዓተ', 'ድሕር ሰዓት'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sm.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/sm_WS.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr.php","ext":"php","size":4341,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Dieter Sting\n * - François B\n * - Maxime VALY\n * - JD Isaacks\n * - Dieter Sting\n * - François B\n * - JD Isaacks\n * - Sebastian Thierer\n * - Fastfuel\n * - Pete Scopes (pdscopes)\n */\nreturn [\n    'millennium' => ':count millénaire|:count millénaires',\n    'a_millennium' => 'un millénaire|:count millénaires',\n    'century' => ':count siècle|:count siècles',\n    'a_century' => 'un siècle|:count siècles',\n    'decade' => ':count décennie|:count décennies',\n    'a_decade' => 'une décennie|:count décennies',\n    'year' => ':count an|:count ans',\n    'a_year' => 'un an|:count ans',\n    'y' => ':count an|:count ans',\n    'month' => ':count mois|:count mois',\n    'a_month' => 'un mois|:count mois',\n    'm' => ':count mois',\n    'week' => ':count semaine|:count semaines',\n    'a_week' => 'une semaine|:count semaines',\n    'w' => ':count sem.',\n    'day' => ':count jour|:count jours',\n    'a_day' => 'un jour|:count jours',\n    'd' => ':count j',\n    'hour' => ':count heure|:count heures',\n    'a_hour' => 'une heure|:count heures',\n    'h' => ':count h',\n    'minute' => ':count minute|:count minutes',\n    'a_minute' => 'une minute|:count minutes',\n    'min' => ':count min',\n    'second' => ':count seconde|:count secondes',\n    'a_second' => 'quelques secondes|:count secondes',\n    's' => ':count s',\n    'millisecond' => ':count milliseconde|:count millisecondes',\n    'a_millisecond' => 'une milliseconde|:count millisecondes',\n    'ms' => ':countms',\n    'microsecond' => ':count microseconde|:count microsecondes',\n    'a_microsecond' => 'une microseconde|:count microsecondes',\n    'µs' => ':countµs',\n    'ago' => 'il y a :time',\n    'from_now' => 'dans :time',\n    'after' => ':time après',\n    'before' => ':time avant',\n    'diff_now' => \"à l'instant\",\n    'diff_today' => \"aujourd'hui\",\n    'diff_today_regexp' => \"aujourd'hui(?:\\s+à)?\",\n    'diff_yesterday' => 'hier',\n    'diff_yesterday_regexp' => 'hier(?:\\s+à)?',\n    'diff_tomorrow' => 'demain',\n    'diff_tomorrow_regexp' => 'demain(?:\\s+à)?',\n    'diff_before_yesterday' => 'avant-hier',\n    'diff_after_tomorrow' => 'après-demain',\n    'period_recurrences' => ':count fois',\n    'period_interval' => 'tous les :interval',\n    'period_start_date' => 'de :date',\n    'period_end_date' => 'à :date',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Aujourd’hui à] LT',\n        'nextDay' => '[Demain à] LT',\n        'nextWeek' => 'dddd [à] LT',\n        'lastDay' => '[Hier à] LT',\n        'lastWeek' => 'dddd [dernier à] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n    'months_short' => ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n    'weekdays' => ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n    'weekdays_short' => ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n    'weekdays_min' => ['di', 'lu', 'ma', 'me', 'je', 've', 'sa'],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            // In French, only the first has to be ordinal, other number remains cardinal\n            // @link https://fr.wikihow.com/%C3%A9crire-la-date-en-fran%C3%A7ais\n            'D' => $number.($number === 1 ? 'er' : ''),\n            default => $number.($number === 1 ? 'er' : 'e'),\n            'w', 'W' => $number.($number === 1 ? 're' : 'e'),\n        };\n    },\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' et '],\n    'ordinal_words' => [\n        'of' => 'de',\n        'first' => 'premier',\n        'second' => 'deuxième',\n        'third' => 'troisième',\n        'fourth' => 'quatrième',\n        'fifth' => 'cinquième',\n        'last' => 'dernier',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hans_HK.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hans.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bas.php","ext":"php","size":1328,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['I bikɛ̂glà', 'I ɓugajɔp'],\n    'weekdays' => ['ŋgwà nɔ̂y', 'ŋgwà njaŋgumba', 'ŋgwà ûm', 'ŋgwà ŋgê', 'ŋgwà mbɔk', 'ŋgwà kɔɔ', 'ŋgwà jôn'],\n    'weekdays_short' => ['nɔy', 'nja', 'uum', 'ŋge', 'mbɔ', 'kɔɔ', 'jon'],\n    'weekdays_min' => ['nɔy', 'nja', 'uum', 'ŋge', 'mbɔ', 'kɔɔ', 'jon'],\n    'months' => ['Kɔndɔŋ', 'Màcɛ̂l', 'Màtùmb', 'Màtop', 'M̀puyɛ', 'Hìlòndɛ̀', 'Njèbà', 'Hìkaŋ', 'Dìpɔ̀s', 'Bìòôm', 'Màyɛsèp', 'Lìbuy li ńyèe'],\n    'months_short' => ['kɔn', 'mac', 'mat', 'mto', 'mpu', 'hil', 'nje', 'hik', 'dip', 'bio', 'may', 'liɓ'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'second' => ':count móndî', // less reliable\n    's' => ':count móndî', // less reliable\n    'a_second' => ':count móndî', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fur_IT.php","ext":"php","size":1304,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD. MM. YY',\n        'LL' => 'DD di MMMM dal YYYY',\n        'LLL' => 'DD di MMM HH:mm',\n        'LLLL' => 'DD di MMMM dal YYYY HH:mm',\n    ],\n    'months' => ['zenâr', 'fevrâr', 'març', 'avrîl', 'mai', 'jugn', 'lui', 'avost', 'setembar', 'otubar', 'novembar', 'dicembar'],\n    'months_short' => ['zen', 'fev', 'mar', 'avr', 'mai', 'jug', 'lui', 'avo', 'set', 'otu', 'nov', 'dic'],\n    'weekdays' => ['domenie', 'lunis', 'martars', 'miercus', 'joibe', 'vinars', 'sabide'],\n    'weekdays_short' => ['dom', 'lun', 'mar', 'mie', 'joi', 'vin', 'sab'],\n    'weekdays_min' => ['dom', 'lun', 'mar', 'mie', 'joi', 'vin', 'sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'year' => ':count an',\n    'month' => ':count mês',\n    'week' => ':count setemane',\n    'day' => ':count zornade',\n    'hour' => ':count ore',\n    'minute' => ':count minût',\n    'second' => ':count secont',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh.php","ext":"php","size":644,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - xuri\n * - sycuato\n * - bokideckonja\n * - Luo Ning\n * - William Yang (williamyang233)\n */\nreturn array_merge(require __DIR__.'/zh_Hans.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY/MM/DD',\n        'LL' => 'YYYY年M月D日',\n        'LLL' => 'YYYY年M月D日 A h点mm分',\n        'LLLL' => 'YYYY年M月D日dddd A h点mm分',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mfe.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mfe_MU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_HK.php","ext":"php","size":275,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hant_HK.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_GQ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yue_Hans.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hans.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru_RU.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ru.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mr.php","ext":"php","size":3234,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Vikram-enyota\n */\nreturn [\n    'year' => ':count वर्ष',\n    'y' => ':count वर्ष',\n    'month' => ':count महिना|:count महिने',\n    'm' => ':count महिना|:count महिने',\n    'week' => ':count आठवडा|:count आठवडे',\n    'w' => ':count आठवडा|:count आठवडे',\n    'day' => ':count दिवस',\n    'd' => ':count दिवस',\n    'hour' => ':count तास',\n    'h' => ':count तास',\n    'minute' => ':count मिनिटे',\n    'min' => ':count मिनिटे',\n    'second' => ':count सेकंद',\n    's' => ':count सेकंद',\n\n    'ago' => ':timeपूर्वी',\n    'from_now' => ':timeमध्ये',\n    'before' => ':timeपूर्वी',\n    'after' => ':timeनंतर',\n\n    'diff_now' => 'आत्ता',\n    'diff_today' => 'आज',\n    'diff_yesterday' => 'काल',\n    'diff_tomorrow' => 'उद्या',\n\n    'formats' => [\n        'LT' => 'A h:mm वाजता',\n        'LTS' => 'A h:mm:ss वाजता',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm वाजता',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm वाजता',\n    ],\n\n    'calendar' => [\n        'sameDay' => '[आज] LT',\n        'nextDay' => '[उद्या] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[काल] LT',\n        'lastWeek' => '[मागील] dddd, LT',\n        'sameElse' => 'L',\n    ],\n\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'रात्री';\n        }\n        if ($hour < 10) {\n            return 'सकाळी';\n        }\n        if ($hour < 17) {\n            return 'दुपारी';\n        }\n        if ($hour < 20) {\n            return 'सायंकाळी';\n        }\n\n        return 'रात्री';\n    },\n\n    'months' => ['जानेवारी', 'फेब्रुवारी', 'मार्च', 'एप्रिल', 'मे', 'जून', 'जुलै', 'ऑगस्ट', 'सप्टेंबर', 'ऑक्टोबर', 'नोव्हेंबर', 'डिसेंबर'],\n    'months_short' => ['जाने.', 'फेब्रु.', 'मार्च.', 'एप्रि.', 'मे.', 'जून.', 'जुलै.', 'ऑग.', 'सप्टें.', 'ऑक्टो.', 'नोव्हें.', 'डिसें.'],\n    'weekdays' => ['रविवार', 'सोमवार', 'मंगळवार', 'बुधवार', 'गुरूवार', 'शुक्रवार', 'शनिवार'],\n    'weekdays_short' => ['रवि', 'सोम', 'मंगळ', 'बुध', 'गुरू', 'शुक्र', 'शनि'],\n    'weekdays_min' => ['र', 'सो', 'मं', 'बु', 'गु', 'शु', 'श'],\n    'list' => [', ', ' आणि '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru_BY.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ru.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru_KZ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ru.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ca_IT.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ca.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_KM.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_CY.php","ext":"php","size":623,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - NehaGautam\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD-MM-YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/it_CH.php","ext":"php","size":390,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Propaganistas\n */\nreturn array_replace_recursive(require __DIR__.'/it.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bg.php","ext":"php","size":4084,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - Serhan Apaydın\n * - JD Isaacks\n * - Glavić\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count година|:count години',\n    'a_year' => 'година|:count години',\n    'y' => ':count година|:count години',\n    'month' => ':count месец|:count месеца',\n    'a_month' => 'месец|:count месеца',\n    'm' => ':count месец|:count месеца',\n    'week' => ':count седмица|:count седмици',\n    'a_week' => 'седмица|:count седмици',\n    'w' => ':count седмица|:count седмици',\n    'day' => ':count ден|:count дни',\n    'a_day' => 'ден|:count дни',\n    'd' => ':count ден|:count дни',\n    'hour' => ':count час|:count часа',\n    'a_hour' => 'час|:count часа',\n    'h' => ':count час|:count часа',\n    'minute' => ':count минута|:count минути',\n    'a_minute' => 'минута|:count минути',\n    'min' => ':count минута|:count минути',\n    'second' => ':count секунда|:count секунди',\n    'a_second' => 'няколко секунди|:count секунди',\n    's' => ':count секунда|:count секунди',\n    'ago' => 'преди :time',\n    'from_now' => 'след :time',\n    'after' => 'след :time',\n    'before' => 'преди :time',\n    'diff_now' => 'сега',\n    'diff_today' => 'Днес',\n    'diff_today_regexp' => 'Днес(?:\\\\s+в)?',\n    'diff_yesterday' => 'вчера',\n    'diff_yesterday_regexp' => 'Вчера(?:\\\\s+в)?',\n    'diff_tomorrow' => 'утре',\n    'diff_tomorrow_regexp' => 'Утре(?:\\\\s+в)?',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'D.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Днес в] LT',\n        'nextDay' => '[Утре в] LT',\n        'nextWeek' => 'dddd [в] LT',\n        'lastDay' => '[Вчера в] LT',\n        'lastWeek' => static fn (CarbonInterface $current) => match ($current->dayOfWeek) {\n            0, 3, 6 => '[В изминалата] dddd [в] LT',\n            default => '[В изминалия] dddd [в] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        $lastDigit = $number % 10;\n        $last2Digits = $number % 100;\n        if ($number === 0) {\n            return \"$number-ев\";\n        }\n        if ($last2Digits === 0) {\n            return \"$number-ен\";\n        }\n        if ($last2Digits > 10 && $last2Digits < 20) {\n            return \"$number-ти\";\n        }\n        if ($lastDigit === 1) {\n            return \"$number-ви\";\n        }\n        if ($lastDigit === 2) {\n            return \"$number-ри\";\n        }\n        if ($lastDigit === 7 || $lastDigit === 8) {\n            return \"$number-ми\";\n        }\n\n        return \"$number-ти\";\n    },\n    'months' => ['януари', 'февруари', 'март', 'април', 'май', 'юни', 'юли', 'август', 'септември', 'октомври', 'ноември', 'декември'],\n    'months_short' => ['яну', 'фев', 'мар', 'апр', 'май', 'юни', 'юли', 'авг', 'сеп', 'окт', 'ное', 'дек'],\n    'weekdays' => ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота'],\n    'weekdays_short' => ['нед', 'пон', 'вто', 'сря', 'чет', 'пет', 'съб'],\n    'weekdays_min' => ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' и '],\n    'meridiem' => ['преди обяд', 'следобед'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mr_IN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/mr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ve_ZA.php","ext":"php","size":1779,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Phando', 'Luhuhi', 'Ṱhafamuhwe', 'Lambamai', 'Shundunthule', 'Fulwi', 'Fulwana', 'Ṱhangule', 'Khubvumedzi', 'Tshimedzi', 'Ḽara', 'Nyendavhusiku'],\n    'months_short' => ['Pha', 'Luh', 'Fam', 'Lam', 'Shu', 'Lwi', 'Lwa', 'Ngu', 'Khu', 'Tsh', 'Ḽar', 'Nye'],\n    'weekdays' => ['Swondaha', 'Musumbuluwo', 'Ḽavhuvhili', 'Ḽavhuraru', 'Ḽavhuṋa', 'Ḽavhuṱanu', 'Mugivhela'],\n    'weekdays_short' => ['Swo', 'Mus', 'Vhi', 'Rar', 'ṋa', 'Ṱan', 'Mug'],\n    'weekdays_min' => ['Swo', 'Mus', 'Vhi', 'Rar', 'ṋa', 'Ṱan', 'Mug'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    // Too unreliable\n    /*\n    'day' => ':count vhege', // less reliable\n    'd' => ':count vhege', // less reliable\n    'a_day' => ':count vhege', // less reliable\n\n    'hour' => ':count watshi', // less reliable\n    'h' => ':count watshi', // less reliable\n    'a_hour' => ':count watshi', // less reliable\n\n    'minute' => ':count watshi', // less reliable\n    'min' => ':count watshi', // less reliable\n    'a_minute' => ':count watshi', // less reliable\n\n    'second' => ':count Mu', // less reliable\n    's' => ':count Mu', // less reliable\n    'a_second' => ':count Mu', // less reliable\n\n    'week' => ':count vhege',\n    'w' => ':count vhege',\n    'a_week' => ':count vhege',\n    */\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/shn.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/shn_MM.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zgh.php","ext":"php","size":3960,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - BAKTETE Miloud\n */\nreturn [\n    'year' => ':count ⵓⵙⴳⴳⵯⴰⵙ|:count ⵉⵙⴳⴳⵓⵙⴰ',\n    'a_year' => 'ⵓⵙⴳⴳⵯⴰⵙ|:count ⵉⵙⴳⴳⵓⵙⴰ',\n    'y' => ':count ⵓⵙⴳⴳⵯⴰⵙ|:count ⵉⵙⴳⴳⵓⵙⴰ',\n    'month' => ':count ⵡⴰⵢⵢⵓⵔ|:count ⴰⵢⵢⵓⵔⵏ',\n    'a_month' => 'ⵉⴷⵊ ⵡⴰⵢⵢⵓⵔ|:count ⴰⵢⵢⵓⵔⵏ',\n    'm' => ':count ⴰⵢⵢⵓⵔⵏ',\n    'week' => ':count ⵉⵎⴰⵍⴰⵙⵙ|:count ⵉⵎⴰⵍⴰⵙⵙⵏ',\n    'a_week' => 'ⵉⵛⵜ ⵉⵎⴰⵍⴰⵙⵙ|:count ⵉⵎⴰⵍⴰⵙⵙⵏ',\n    'w' => ':count ⵉⵎⴰⵍⴰⵙⵙ.',\n    'day' => ':count ⵡⴰⵙⵙ|:count ⵓⵙⵙⴰⵏ',\n    'a_day' => 'ⵉⴷⵊ ⵡⴰⵙⵙ|:count ⵓⵙⵙⴰⵏ',\n    'd' => ':count ⵓ',\n    'hour' => ':count ⵜⵙⵔⴰⴳⵜ|:count ⵜⵉⵙⵔⴰⴳⵉⵏ',\n    'a_hour' => 'ⵉⵛⵜ ⵜⵙⵔⴰⴳⵜ|:count ⵜⵉⵙⵔⴰⴳⵉⵏ',\n    'h' => ':count ⵜ',\n    'minute' => ':count ⵜⵓⵙⴷⵉⴷⵜ|:count ⵜⵓⵙⴷⵉⴷⵉⵏ',\n    'a_minute' => 'ⵉⵛⵜ ⵜⵓⵙⴷⵉⴷⵜ|:count ⵜⵓⵙⴷⵉⴷⵉⵏ',\n    'min' => ':count ⵜⵓⵙ',\n    'second' => ':count ⵜⵙⵉⵏⵜ|:count ⵜⵉⵙⵉⵏⴰ',\n    'a_second' => 'ⴽⵔⴰ ⵜⵉⵙⵉⵏⴰ|:count ⵜⵉⵙⵉⵏⴰ',\n    's' => ':count ⵜ',\n    'ago' => 'ⵣⴳ :time',\n    'from_now' => 'ⴷⴳ :time',\n    'after' => ':time ⴰⵡⴰⵔ',\n    'before' => ':time ⴷⴰⵜ',\n    'diff_now' => 'ⴰⴷⵡⴰⵍⵉ',\n    'diff_today' => 'ⴰⵙⵙ',\n    'diff_today_regexp' => 'ⴰⵙⵙ(?:\\\\s+ⴰ/ⴰⴷ)?(?:\\\\s+ⴳ)?',\n    'diff_yesterday' => 'ⴰⵙⵙⵏⵏⴰⵟ',\n    'diff_yesterday_regexp' => 'ⴰⵙⵙⵏⵏⴰⵟ(?:\\\\s+ⴳ)?',\n    'diff_tomorrow' => 'ⴰⵙⴽⴽⴰ',\n    'diff_tomorrow_regexp' => 'ⴰⵙⴽⴽⴰ(?:\\\\s+ⴳ)?',\n    'diff_before_yesterday' => 'ⴼⵔ ⵉⴹⵏⵏⴰⵟ',\n    'diff_after_tomorrow' => 'ⵏⴰⴼ ⵓⵙⴽⴽⴰ',\n    'period_recurrences' => ':count ⵜⵉⴽⴽⴰⵍ',\n    'period_interval' => 'ⴽⵓ :interval',\n    'period_start_date' => 'ⴳ :date',\n    'period_end_date' => 'ⵉ :date',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ⴰⵙⵙ ⴰ/ⴰⴷ ⴳ] LT',\n        'nextDay' => '[ⴰⵙⴽⴽⴰ ⴳ] LT',\n        'nextWeek' => 'dddd [ⴳ] LT',\n        'lastDay' => '[ⴰⵙⵙⵏⵏⴰⵟ ⴳ] LT',\n        'lastWeek' => 'dddd [ⴰⵎⴳⴳⴰⵔⵓ ⴳ] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ⵜⵉⴼⴰⵡⵜ', 'ⵜⴰⴷⴳⴳⵯⴰⵜ'],\n    'months' => ['ⵉⵏⵏⴰⵢⵔ', 'ⴱⵕⴰⵢⵕ', 'ⵎⴰⵕⵚ', 'ⵉⴱⵔⵉⵔ', 'ⵎⴰⵢⵢⵓ', 'ⵢⵓⵏⵢⵓ', 'ⵢⵓⵍⵢⵓⵣ', 'ⵖⵓⵛⵜ', 'ⵛⵓⵜⴰⵏⴱⵉⵔ', 'ⴽⵟⵓⴱⵕ', 'ⵏⵓⵡⴰⵏⴱⵉⵔ', 'ⴷⵓⵊⴰⵏⴱⵉⵔ'],\n    'months_short' => ['ⵉⵏⵏ', 'ⴱⵕⴰ', 'ⵎⴰⵕ', 'ⵉⴱⵔ', 'ⵎⴰⵢ', 'ⵢⵓⵏ', 'ⵢⵓⵍ', 'ⵖⵓⵛ', 'ⵛⵓⵜ', 'ⴽⵟⵓ', 'ⵏⵓⵡ', 'ⴷⵓⵊ'],\n    'weekdays' => ['ⵓⵙⴰⵎⴰⵙ', 'ⵡⴰⵢⵏⴰⵙ', 'ⵓⵙⵉⵏⴰⵙ', 'ⵡⴰⴽⵕⴰⵙ', 'ⵓⴽⵡⴰⵙ', 'ⵓⵙⵉⵎⵡⴰⵙ', 'ⵓⵙⵉⴹⵢⴰⵙ'],\n    'weekdays_short' => ['ⵓⵙⴰ', 'ⵡⴰⵢ', 'ⵓⵙⵉ', 'ⵡⴰⴽ', 'ⵓⴽⵡ', 'ⵓⵙⵉⵎ', 'ⵓⵙⵉⴹ'],\n    'weekdays_min' => ['ⵓⵙⴰ', 'ⵡⴰⵢ', 'ⵓⵙⵉ', 'ⵡⴰⴽ', 'ⵓⴽⵡ', 'ⵓⵙⵉⵎ', 'ⵓⵙⵉⴹ'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' ⴷ '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nds_DE.php","ext":"php","size":2028,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - information from Kenneth Christiansen Kenneth Christiansen, Pablo Saratxaga kenneth@gnu.org, pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Jannuaar', 'Feberwaar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n    'months_short' => ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    'weekdays' => ['Sünndag', 'Maandag', 'Dingsdag', 'Middeweek', 'Dunnersdag', 'Freedag', 'Sünnavend'],\n    'weekdays_short' => ['Sdag', 'Maan', 'Ding', 'Midd', 'Dunn', 'Free', 'Svd.'],\n    'weekdays_min' => ['Sd', 'Ma', 'Di', 'Mi', 'Du', 'Fr', 'Sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count Johr',\n    'y' => ':countJ',\n    'a_year' => '{1}een Johr|:count Johr',\n\n    'month' => ':count Maand',\n    'm' => ':countM',\n    'a_month' => '{1}een Maand|:count Maand',\n\n    'week' => ':count Week|:count Weken',\n    'w' => ':countW',\n    'a_week' => '{1}een Week|:count Week|:count Weken',\n\n    'day' => ':count Dag|:count Daag',\n    'd' => ':countD',\n    'a_day' => '{1}een Dag|:count Dag|:count Daag',\n\n    'hour' => ':count Stünn|:count Stünnen',\n    'h' => ':countSt',\n    'a_hour' => '{1}een Stünn|:count Stünn|:count Stünnen',\n\n    'minute' => ':count Minuut|:count Minuten',\n    'min' => ':countm',\n    'a_minute' => '{1}een Minuut|:count Minuut|:count Minuten',\n\n    'second' => ':count Sekunn|:count Sekunnen',\n    's' => ':counts',\n    'a_second' => 'en poor Sekunnen|:count Sekunn|:count Sekunnen',\n\n    'ago' => 'vör :time',\n    'from_now' => 'in :time',\n    'before' => ':time vörher',\n    'after' => ':time later',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/or_IN.php","ext":"php","size":3343,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM AP Linux Technology Center, Yamato Software Laboratory    bug-glibc@gnu.org\n */\nreturn [\n    'diff_now' => 'ବର୍ତ୍ତମାନ',\n    'diff_yesterday' => 'ଗତକାଲି',\n    'diff_tomorrow' => 'ଆସନ୍ତାକାଲି',\n    'formats' => [\n        'LT' => 'Oh:Om A',\n        'LTS' => 'Oh:Om:Os A',\n        'L' => 'OD-OM-OY',\n        'LL' => 'OD MMMM OY',\n        'LLL' => 'OD MMMM OY Oh:Om A',\n        'LLLL' => 'dddd OD MMMM OY Oh:Om A',\n    ],\n    'months' => ['ଜାନୁଆରୀ', 'ଫେବୃଆରୀ', 'ମାର୍ଚ୍ଚ', 'ଅପ୍ରେଲ', 'ମଇ', 'ଜୁନ', 'ଜୁଲାଇ', 'ଅଗଷ୍ଟ', 'ସେପ୍ଟେମ୍ବର', 'ଅକ୍ଟୋବର', 'ନଭେମ୍ବର', 'ଡିସେମ୍ବର'],\n    'months_short' => ['ଜାନୁଆରୀ', 'ଫେବୃଆରୀ', 'ମାର୍ଚ୍ଚ', 'ଅପ୍ରେଲ', 'ମଇ', 'ଜୁନ', 'ଜୁଲାଇ', 'ଅଗଷ୍ଟ', 'ସେପ୍ଟେମ୍ବର', 'ଅକ୍ଟୋବର', 'ନଭେମ୍ବର', 'ଡିସେମ୍ବର'],\n    'weekdays' => ['ରବିବାର', 'ସୋମବାର', 'ମଙ୍ଗଳବାର', 'ବୁଧବାର', 'ଗୁରୁବାର', 'ଶୁକ୍ରବାର', 'ଶନିବାର'],\n    'weekdays_short' => ['ରବି', 'ସୋମ', 'ମଙ୍ଗଳ', 'ବୁଧ', 'ଗୁରୁ', 'ଶୁକ୍ର', 'ଶନି'],\n    'weekdays_min' => ['ରବି', 'ସୋମ', 'ମଙ୍ଗଳ', 'ବୁଧ', 'ଗୁରୁ', 'ଶୁକ୍ର', 'ଶନି'],\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['୦', '୧', '୨', '୩', '୪', '୫', '୬', '୭', '୮', '୯', '୧୦', '୧୧', '୧୨', '୧୩', '୧୪', '୧୫', '୧୬', '୧୭', '୧୮', '୧୯', '୨୦', '୨୧', '୨୨', '୨୩', '୨୪', '୨୫', '୨୬', '୨୭', '୨୮', '୨୯', '୩୦', '୩୧', '୩୨', '୩୩', '୩୪', '୩୫', '୩୬', '୩୭', '୩୮', '୩୯', '୪୦', '୪୧', '୪୨', '୪୩', '୪୪', '୪୫', '୪୬', '୪୭', '୪୮', '୪୯', '୫୦', '୫୧', '୫୨', '୫୩', '୫୪', '୫୫', '୫୬', '୫୭', '୫୮', '୫୯', '୬୦', '୬୧', '୬୨', '୬୩', '୬୪', '୬୫', '୬୬', '୬୭', '୬୮', '୬୯', '୭୦', '୭୧', '୭୨', '୭୩', '୭୪', '୭୫', '୭୬', '୭୭', '୭୮', '୭୯', '୮୦', '୮୧', '୮୨', '୮୩', '୮୪', '୮୫', '୮୬', '୮୭', '୮୮', '୮୯', '୯୦', '୯୧', '୯୨', '୯୩', '୯୪', '୯୫', '୯୬', '୯୭', '୯୮', '୯୯'],\n    'year' => ':count ବର୍ଷ',\n    'y' => ':count ବ.',\n    'month' => ':count ମାସ',\n    'm' => ':count ମା.',\n    'week' => ':count ସପ୍ତାହ',\n    'w' => ':count ସପ୍ତା.',\n    'day' => ':count ଦିନ',\n    'd' => ':count ଦିନ',\n    'hour' => ':count ଘଣ୍ତ',\n    'h' => ':count ଘ.',\n    'minute' => ':count ମିନଟ',\n    'min' => ':count ମି.',\n    'second' => ':count ସେକଣ୍ଢ',\n    's' => ':count ସେ.',\n    'ago' => ':time ପୂର୍ବେ',\n    'from_now' => ':timeରେ',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ht_HT.php","ext":"php","size":1599,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Sugar Labs // OLPC sugarlabs.org libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['janvye', 'fevriye', 'mas', 'avril', 'me', 'jen', 'jiyè', 'out', 'septanm', 'oktòb', 'novanm', 'desanm'],\n    'months_short' => ['jan', 'fev', 'mas', 'avr', 'me', 'jen', 'jiy', 'out', 'sep', 'okt', 'nov', 'des'],\n    'weekdays' => ['dimanch', 'lendi', 'madi', 'mèkredi', 'jedi', 'vandredi', 'samdi'],\n    'weekdays_short' => ['dim', 'len', 'mad', 'mèk', 'jed', 'van', 'sam'],\n    'weekdays_min' => ['dim', 'len', 'mad', 'mèk', 'jed', 'van', 'sam'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count lane',\n    'y' => ':count lane',\n    'a_year' => ':count lane',\n\n    'month' => 'mwa :count',\n    'm' => 'mwa :count',\n    'a_month' => 'mwa :count',\n\n    'week' => 'semèn :count',\n    'w' => 'semèn :count',\n    'a_week' => 'semèn :count',\n\n    'day' => ':count jou',\n    'd' => ':count jou',\n    'a_day' => ':count jou',\n\n    'hour' => ':count lè',\n    'h' => ':count lè',\n    'a_hour' => ':count lè',\n\n    'minute' => ':count minit',\n    'min' => ':count minit',\n    'a_minute' => ':count minit',\n\n    'second' => ':count segonn',\n    's' => ':count segonn',\n    'a_second' => ':count segonn',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fur.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/fur_IT.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/twq.php","ext":"php","size":344,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ses.php', [\n    'meridiem' => ['Subbaahi', 'Zaarikay b'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bs_BA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/bs.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sc_IT.php","ext":"php","size":1758,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Sardinian Translators Team Massimeddu Cireddu massimeddu@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD. MM. YY',\n    ],\n    'months' => ['Ghennàrgiu', 'Freàrgiu', 'Martzu', 'Abrile', 'Maju', 'Làmpadas', 'Argiolas//Trìulas', 'Austu', 'Cabudanni', 'Santugaine//Ladàmine', 'Onniasantu//Santandria', 'Nadale//Idas'],\n    'months_short' => ['Ghe', 'Fre', 'Mar', 'Abr', 'Maj', 'Làm', 'Arg', 'Aus', 'Cab', 'Lad', 'Onn', 'Nad'],\n    'weekdays' => ['Domìnigu', 'Lunis', 'Martis', 'Mèrcuris', 'Giòbia', 'Chenàbura', 'Sàbadu'],\n    'weekdays_short' => ['Dom', 'Lun', 'Mar', 'Mèr', 'Giò', 'Che', 'Sàb'],\n    'weekdays_min' => ['Dom', 'Lun', 'Mar', 'Mèr', 'Giò', 'Che', 'Sàb'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'minute' => ':count mementu', // less reliable\n    'min' => ':count mementu', // less reliable\n    'a_minute' => ':count mementu', // less reliable\n\n    'year' => ':count annu',\n    'y' => ':count annu',\n    'a_year' => ':count annu',\n\n    'month' => ':count mese',\n    'm' => ':count mese',\n    'a_month' => ':count mese',\n\n    'week' => ':count chida',\n    'w' => ':count chida',\n    'a_week' => ':count chida',\n\n    'day' => ':count dí',\n    'd' => ':count dí',\n    'a_day' => ':count dí',\n\n    'hour' => ':count ora',\n    'h' => ':count ora',\n    'a_hour' => ':count ora',\n\n    'second' => ':count secundu',\n    's' => ':count secundu',\n    'a_second' => ':count secundu',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/el_GR.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/el.php', [\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de.php","ext":"php","size":4715,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Michael Hohl\n * - sheriffmarley\n * - dennisoderwald\n * - Timo\n * - Karag2006\n * - Pete Scopes (pdscopes)\n */\nreturn [\n    'year' => ':count Jahr|:count Jahre',\n    'a_year' => 'ein Jahr|:count Jahre',\n    'y' => ':count J.',\n    'month' => ':count Monat|:count Monate',\n    'a_month' => 'ein Monat|:count Monate',\n    'm' => ':count Mon.',\n    'week' => ':count Woche|:count Wochen',\n    'a_week' => 'eine Woche|:count Wochen',\n    'w' => ':count Wo.',\n    'day' => ':count Tag|:count Tage',\n    'a_day' => 'ein Tag|:count Tage',\n    'd' => ':count Tg.',\n    'hour' => ':count Stunde|:count Stunden',\n    'a_hour' => 'eine Stunde|:count Stunden',\n    'h' => ':count Std.',\n    'minute' => ':count Minute|:count Minuten',\n    'a_minute' => 'eine Minute|:count Minuten',\n    'min' => ':count Min.',\n    'second' => ':count Sekunde|:count Sekunden',\n    'a_second' => 'ein paar Sekunden|:count Sekunden',\n    's' => ':count Sek.',\n    'millisecond' => ':count Millisekunde|:count Millisekunden',\n    'a_millisecond' => 'eine Millisekunde|:count Millisekunden',\n    'ms' => ':countms',\n    'microsecond' => ':count Mikrosekunde|:count Mikrosekunden',\n    'a_microsecond' => 'eine Mikrosekunde|:count Mikrosekunden',\n    'µs' => ':countµs',\n    'ago' => 'vor :time',\n    'from_now' => 'in :time',\n    'after' => ':time später',\n    'before' => ':time zuvor',\n\n    'year_from_now' => ':count Jahr|:count Jahren',\n    'month_from_now' => ':count Monat|:count Monaten',\n    'week_from_now' => ':count Woche|:count Wochen',\n    'day_from_now' => ':count Tag|:count Tagen',\n    'year_ago' => ':count Jahr|:count Jahren',\n    'month_ago' => ':count Monat|:count Monaten',\n    'week_ago' => ':count Woche|:count Wochen',\n    'day_ago' => ':count Tag|:count Tagen',\n    'a_year_from_now' => 'ein Jahr|:count Jahren',\n    'a_month_from_now' => 'ein Monat|:count Monaten',\n    'a_week_from_now' => 'eine Woche|:count Wochen',\n    'a_day_from_now' => 'ein Tag|:count Tagen',\n    'a_year_ago' => 'ein Jahr|:count Jahren',\n    'a_month_ago' => 'ein Monat|:count Monaten',\n    'a_week_ago' => 'eine Woche|:count Wochen',\n    'a_day_ago' => 'ein Tag|:count Tagen',\n\n    'diff_now' => 'Gerade eben',\n    'diff_today' => 'heute',\n    'diff_today_regexp' => 'heute(?:\\\\s+um)?',\n    'diff_yesterday' => 'Gestern',\n    'diff_yesterday_regexp' => 'gestern(?:\\\\s+um)?',\n    'diff_tomorrow' => 'Morgen',\n    'diff_tomorrow_regexp' => 'morgen(?:\\\\s+um)?',\n    'diff_before_yesterday' => 'Vorgestern',\n    'diff_after_tomorrow' => 'Übermorgen',\n\n    'period_recurrences' => 'einmal|:count mal',\n    'period_interval' => static function (string $interval = '') {\n        /** @var string $output */\n        $output = preg_replace('/^(ein|eine|1)\\s+/u', '', $interval);\n\n        if (preg_match('/^(ein|1)( Monat| Mon.| Tag| Tg.)/u', $interval)) {\n            return \"jeden $output\";\n        }\n\n        if (preg_match('/^(ein|1)( Jahr| J.)/u', $interval)) {\n            return \"jedes $output\";\n        }\n\n        return \"jede $output\";\n    },\n    'period_start_date' => 'von :date',\n    'period_end_date' => 'bis :date',\n\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY HH:mm',\n    ],\n\n    'calendar' => [\n        'sameDay' => '[heute um] LT [Uhr]',\n        'nextDay' => '[morgen um] LT [Uhr]',\n        'nextWeek' => 'dddd [um] LT [Uhr]',\n        'lastDay' => '[gestern um] LT [Uhr]',\n        'lastWeek' => '[letzten] dddd [um] LT [Uhr]',\n        'sameElse' => 'L',\n    ],\n\n    'months' => ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n    'months_short' => ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    'weekdays' => ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n    'weekdays_short' => ['So.', 'Mo.', 'Di.', 'Mi.', 'Do.', 'Fr.', 'Sa.'],\n    'weekdays_min' => ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    'ordinal' => ':number.',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' und '],\n    'ordinal_words' => [\n        'of' => 'im',\n        'first' => 'erster',\n        'second' => 'zweiter',\n        'third' => 'dritter',\n        'fourth' => 'vierten',\n        'fifth' => 'fünfter',\n        'last' => 'letzten',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_JM.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_TC.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ia_FR.php","ext":"php","size":1653,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Fedora Project Nik Kalach nikka@fedoraproject.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['januario', 'februario', 'martio', 'april', 'maio', 'junio', 'julio', 'augusto', 'septembre', 'octobre', 'novembre', 'decembre'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'],\n    'weekdays' => ['dominica', 'lunedi', 'martedi', 'mercuridi', 'jovedi', 'venerdi', 'sabbato'],\n    'weekdays_short' => ['dom', 'lun', 'mar', 'mer', 'jov', 'ven', 'sab'],\n    'weekdays_min' => ['dom', 'lun', 'mar', 'mer', 'jov', 'ven', 'sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => 'anno :count',\n    'y' => 'anno :count',\n    'a_year' => 'anno :count',\n\n    'month' => ':count mense',\n    'm' => ':count mense',\n    'a_month' => ':count mense',\n\n    'week' => ':count septimana',\n    'w' => ':count septimana',\n    'a_week' => ':count septimana',\n\n    'day' => ':count die',\n    'd' => ':count die',\n    'a_day' => ':count die',\n\n    'hour' => ':count hora',\n    'h' => ':count hora',\n    'a_hour' => ':count hora',\n\n    'minute' => ':count minuscule',\n    'min' => ':count minuscule',\n    'a_minute' => ':count minuscule',\n\n    'second' => ':count secunda',\n    's' => ':count secunda',\n    'a_second' => ':count secunda',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/te.php","ext":"php","size":3804,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - Josh Soref\n * - François B\n * - kc\n */\nreturn [\n    'year' => ':count సంవత్సరం|:count సంవత్సరాలు',\n    'a_year' => 'ఒక సంవత్సరం|:count సంవత్సరాలు',\n    'y' => ':count సం.',\n    'month' => ':count నెల|:count నెలలు',\n    'a_month' => 'ఒక నెల|:count నెలలు',\n    'm' => ':count నెల|:count నెల.',\n    'week' => ':count వారం|:count వారాలు',\n    'a_week' => 'ఒక వారం|:count వారాలు',\n    'w' => ':count వార.|:count వారా.',\n    'day' => ':count రోజు|:count రోజులు',\n    'a_day' => 'ఒక రోజు|:count రోజులు',\n    'd' => ':count రోజు|:count రోజు.',\n    'hour' => ':count గంట|:count గంటలు',\n    'a_hour' => 'ఒక గంట|:count గంటలు',\n    'h' => ':count గం.',\n    'minute' => ':count నిమిషం|:count నిమిషాలు',\n    'a_minute' => 'ఒక నిమిషం|:count నిమిషాలు',\n    'min' => ':count నిమి.',\n    'second' => ':count సెకను|:count సెకన్లు',\n    'a_second' => 'కొన్ని క్షణాలు|:count సెకన్లు',\n    's' => ':count సెక.',\n    'ago' => ':time క్రితం',\n    'from_now' => ':time లో',\n    'diff_now' => 'ప్రస్తుతం',\n    'diff_today' => 'నేడు',\n    'diff_yesterday' => 'నిన్న',\n    'diff_tomorrow' => 'రేపు',\n    'formats' => [\n        'LT' => 'A h:mm',\n        'LTS' => 'A h:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[నేడు] LT',\n        'nextDay' => '[రేపు] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[నిన్న] LT',\n        'lastWeek' => '[గత] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberవ',\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'రాత్రి';\n        }\n        if ($hour < 10) {\n            return 'ఉదయం';\n        }\n        if ($hour < 17) {\n            return 'మధ్యాహ్నం';\n        }\n        if ($hour < 20) {\n            return 'సాయంత్రం';\n        }\n\n        return ' రాత్రి';\n    },\n    'months' => ['జనవరి', 'ఫిబ్రవరి', 'మార్చి', 'ఏప్రిల్', 'మే', 'జూన్', 'జూలై', 'ఆగస్టు', 'సెప్టెంబర్', 'అక్టోబర్', 'నవంబర్', 'డిసెంబర్'],\n    'months_short' => ['జన.', 'ఫిబ్ర.', 'మార్చి', 'ఏప్రి.', 'మే', 'జూన్', 'జూలై', 'ఆగ.', 'సెప్.', 'అక్టో.', 'నవ.', 'డిసె.'],\n    'weekdays' => ['ఆదివారం', 'సోమవారం', 'మంగళవారం', 'బుధవారం', 'గురువారం', 'శుక్రవారం', 'శనివారం'],\n    'weekdays_short' => ['ఆది', 'సోమ', 'మంగళ', 'బుధ', 'గురు', 'శుక్ర', 'శని'],\n    'weekdays_min' => ['ఆ', 'సో', 'మం', 'బు', 'గు', 'శు', 'శ'],\n    'list' => ', ',\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bs_Latn.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/bs.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gu.php","ext":"php","size":3374,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Kaushik Thanki\n * - Josh Soref\n */\nreturn [\n    'year' => 'એક વર્ષ|:count વર્ષ',\n    'y' => ':countવર્ષ|:countવર્ષો',\n    'month' => 'એક મહિનો|:count મહિના',\n    'm' => ':countમહિનો|:countમહિના',\n    'week' => ':count અઠવાડિયું|:count અઠવાડિયા',\n    'w' => ':countઅઠ.|:countઅઠ.',\n    'day' => 'એક દિવસ|:count દિવસ',\n    'd' => ':countદિ.|:countદિ.',\n    'hour' => 'એક કલાક|:count કલાક',\n    'h' => ':countક.|:countક.',\n    'minute' => 'એક મિનિટ|:count મિનિટ',\n    'min' => ':countમિ.|:countમિ.',\n    'second' => 'અમુક પળો|:count સેકંડ',\n    's' => ':countસે.|:countસે.',\n    'ago' => ':time પેહલા',\n    'from_now' => ':time મા',\n    'after' => ':time પછી',\n    'before' => ':time પહેલા',\n    'diff_now' => 'હમણાં',\n    'diff_today' => 'આજ',\n    'diff_yesterday' => 'ગઇકાલે',\n    'diff_tomorrow' => 'કાલે',\n    'formats' => [\n        'LT' => 'A h:mm વાગ્યે',\n        'LTS' => 'A h:mm:ss વાગ્યે',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm વાગ્યે',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm વાગ્યે',\n    ],\n    'calendar' => [\n        'sameDay' => '[આજ] LT',\n        'nextDay' => '[કાલે] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[ગઇકાલે] LT',\n        'lastWeek' => '[પાછલા] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'રાત';\n        }\n        if ($hour < 10) {\n            return 'સવાર';\n        }\n        if ($hour < 17) {\n            return 'બપોર';\n        }\n        if ($hour < 20) {\n            return 'સાંજ';\n        }\n\n        return 'રાત';\n    },\n    'months' => ['જાન્યુઆરી', 'ફેબ્રુઆરી', 'માર્ચ', 'એપ્રિલ', 'મે', 'જૂન', 'જુલાઈ', 'ઑગસ્ટ', 'સપ્ટેમ્બર', 'ઑક્ટ્બર', 'નવેમ્બર', 'ડિસેમ્બર'],\n    'months_short' => ['જાન્યુ.', 'ફેબ્રુ.', 'માર્ચ', 'એપ્રિ.', 'મે', 'જૂન', 'જુલા.', 'ઑગ.', 'સપ્ટે.', 'ઑક્ટ્.', 'નવે.', 'ડિસે.'],\n    'weekdays' => ['રવિવાર', 'સોમવાર', 'મંગળવાર', 'બુધ્વાર', 'ગુરુવાર', 'શુક્રવાર', 'શનિવાર'],\n    'weekdays_short' => ['રવિ', 'સોમ', 'મંગળ', 'બુધ્', 'ગુરુ', 'શુક્ર', 'શનિ'],\n    'weekdays_min' => ['ર', 'સો', 'મં', 'બુ', 'ગુ', 'શુ', 'શ'],\n    'list' => [', ', ' અને '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gl.php","ext":"php","size":3437,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Fidel Pita\n * - JD Isaacks\n * - Diego Vilariño\n * - Sebastian Thierer\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count ano|:count anos',\n    'a_year' => 'un ano|:count anos',\n    'y' => ':count a.',\n    'month' => ':count mes|:count meses',\n    'a_month' => 'un mes|:count meses',\n    'm' => ':count mes.',\n    'week' => ':count semana|:count semanas',\n    'a_week' => 'unha semana|:count semanas',\n    'w' => ':count sem.',\n    'day' => ':count día|:count días',\n    'a_day' => 'un día|:count días',\n    'd' => ':count d.',\n    'hour' => ':count hora|:count horas',\n    'a_hour' => 'unha hora|:count horas',\n    'h' => ':count h.',\n    'minute' => ':count minuto|:count minutos',\n    'a_minute' => 'un minuto|:count minutos',\n    'min' => ':count min.',\n    'second' => ':count segundo|:count segundos',\n    'a_second' => 'uns segundos|:count segundos',\n    's' => ':count seg.',\n    'ago' => 'hai :time',\n    'from_now' => static function ($time) {\n        if (str_starts_with($time, 'un')) {\n            return \"n$time\";\n        }\n\n        return \"en $time\";\n    },\n    'diff_now' => 'agora',\n    'diff_today' => 'hoxe',\n    'diff_today_regexp' => 'hoxe(?:\\\\s+ás)?',\n    'diff_yesterday' => 'onte',\n    'diff_yesterday_regexp' => 'onte(?:\\\\s+á)?',\n    'diff_tomorrow' => 'mañá',\n    'diff_tomorrow_regexp' => 'mañá(?:\\\\s+ás)?',\n    'after' => ':time despois',\n    'before' => ':time antes',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D [de] MMMM [de] YYYY',\n        'LLL' => 'D [de] MMMM [de] YYYY H:mm',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => static function (CarbonInterface $current) {\n            return '[hoxe '.($current->hour !== 1 ? 'ás' : 'á').'] LT';\n        },\n        'nextDay' => static function (CarbonInterface $current) {\n            return '[mañá '.($current->hour !== 1 ? 'ás' : 'á').'] LT';\n        },\n        'nextWeek' => static function (CarbonInterface $current) {\n            return 'dddd ['.($current->hour !== 1 ? 'ás' : 'á').'] LT';\n        },\n        'lastDay' => static function (CarbonInterface $current) {\n            return '[onte '.($current->hour !== 1 ? 'á' : 'a').'] LT';\n        },\n        'lastWeek' => static function (CarbonInterface $current) {\n            return '[o] dddd [pasado '.($current->hour !== 1 ? 'ás' : 'á').'] LT';\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberº',\n    'months' => ['xaneiro', 'febreiro', 'marzo', 'abril', 'maio', 'xuño', 'xullo', 'agosto', 'setembro', 'outubro', 'novembro', 'decembro'],\n    'months_short' => ['xan.', 'feb.', 'mar.', 'abr.', 'mai.', 'xuñ.', 'xul.', 'ago.', 'set.', 'out.', 'nov.', 'dec.'],\n    'weekdays' => ['domingo', 'luns', 'martes', 'mércores', 'xoves', 'venres', 'sábado'],\n    'weekdays_short' => ['dom.', 'lun.', 'mar.', 'mér.', 'xov.', 'ven.', 'sáb.'],\n    'weekdays_min' => ['do', 'lu', 'ma', 'mé', 'xo', 've', 'sá'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' e '],\n    'meridiem' => ['a.m.', 'p.m.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/se_FI.php","ext":"php","size":1143,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/se.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'months' => ['ođđajagemánnu', 'guovvamánnu', 'njukčamánnu', 'cuoŋománnu', 'miessemánnu', 'geassemánnu', 'suoidnemánnu', 'borgemánnu', 'čakčamánnu', 'golggotmánnu', 'skábmamánnu', 'juovlamánnu'],\n    'months_short' => ['ođđj', 'guov', 'njuk', 'cuoŋ', 'mies', 'geas', 'suoi', 'borg', 'čakč', 'golg', 'skáb', 'juov'],\n    'weekdays' => ['sotnabeaivi', 'mánnodat', 'disdat', 'gaskavahkku', 'duorastat', 'bearjadat', 'lávvordat'],\n    'weekdays_short' => ['so', 'má', 'di', 'ga', 'du', 'be', 'lá'],\n    'weekdays_min' => ['so', 'má', 'di', 'ga', 'du', 'be', 'lá'],\n    'meridiem' => ['i', 'e'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hans_MO.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hans.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ha_GH.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ha.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_RW.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr.php","ext":"php","size":3413,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - shaishavgandhi05\n * - Serhan Apaydın\n * - JD Isaacks\n * - Glavić\n * - Milos Sakovic\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count godina|:count godine|:count godina',\n    'y' => ':count g.',\n    'month' => ':count mesec|:count meseca|:count meseci',\n    'm' => ':count mes.',\n    'week' => ':count nedelja|:count nedelje|:count nedelja',\n    'w' => ':count ned.',\n    'day' => ':count dan|:count dana|:count dana',\n    'd' => ':count d.',\n    'hour' => ':count sat|:count sata|:count sati',\n    'h' => ':count č.',\n    'minute' => ':count minut|:count minuta|:count minuta',\n    'min' => ':count min.',\n    'second' => ':count sekundu|:count sekunde|:count sekundi',\n    's' => ':count sek.',\n\n    'ago' => 'pre :time',\n    'from_now' => 'za :time',\n    'after' => 'nakon :time',\n    'before' => 'pre :time',\n\n    'year_ago' => ':count godinu|:count godine|:count godina',\n    'year_from_now' => ':count godinu|:count godine|:count godina',\n    'week_ago' => ':count nedelju|:count nedelje|:count nedelja',\n    'week_from_now' => ':count nedelju|:count nedelje|:count nedelja',\n\n    'diff_now' => 'upravo sada',\n    'diff_today' => 'danas',\n    'diff_today_regexp' => 'danas(?:\\\\s+u)?',\n    'diff_yesterday' => 'juče',\n    'diff_yesterday_regexp' => 'juče(?:\\\\s+u)?',\n    'diff_tomorrow' => 'sutra',\n    'diff_tomorrow_regexp' => 'sutra(?:\\\\s+u)?',\n    'diff_before_yesterday' => 'prekjuče',\n    'diff_after_tomorrow' => 'preksutra',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[danas u] LT',\n        'nextDay' => '[sutra u] LT',\n        'nextWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[u nedelju u] LT',\n            3 => '[u sredu u] LT',\n            6 => '[u subotu u] LT',\n            default => '[u] dddd [u] LT',\n        },\n        'lastDay' => '[juče u] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[prošle nedelje u] LT',\n            1 => '[prošlog ponedeljka u] LT',\n            2 => '[prošlog utorka u] LT',\n            3 => '[prošle srede u] LT',\n            4 => '[prošlog četvrtka u] LT',\n            5 => '[prošlog petka u] LT',\n            default => '[prošle subote u] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],\n    'months_short' => ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],\n    'weekdays' => ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],\n    'weekdays_short' => ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],\n    'weekdays_min' => ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' i '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl_NL.php","ext":"php","size":906,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/nl.php', [\n    'months' => ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n    'months_short' => ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    'weekdays' => ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n    'weekdays_short' => ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    'weekdays_min' => ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru_KG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ru.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ss_ZA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ss.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GY.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lt_LT.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/lt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_PH.php","ext":"php","size":445,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory  bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bho_IN.php","ext":"php","size":2300,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bhashaghar@googlegroups.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर\"'],\n    'months_short' => ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर\"'],\n    'weekdays' => ['रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरुवार', 'शुक्रवार', 'शनिवार'],\n    'weekdays_short' => ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],\n    'weekdays_min' => ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n\n    'hour' => ':count मौसम',\n    'h' => ':count मौसम',\n    'a_hour' => ':count मौसम',\n\n    'minute' => ':count कला',\n    'min' => ':count कला',\n    'a_minute' => ':count कला',\n\n    'second' => ':count सोमार',\n    's' => ':count सोमार',\n    'a_second' => ':count सोमार',\n\n    'year' => ':count साल',\n    'y' => ':count साल',\n    'a_year' => ':count साल',\n\n    'month' => ':count महिना',\n    'm' => ':count महिना',\n    'a_month' => ':count महिना',\n\n    'week' => ':count सप्ताह',\n    'w' => ':count सप्ताह',\n    'a_week' => ':count सप्ताह',\n\n    'day' => ':count दिन',\n    'd' => ':count दिन',\n    'a_day' => ':count दिन',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/anp_IN.php","ext":"php","size":1521,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bhashaghar@googlegroups.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितंबर', 'अक्टूबर', 'नवंबर', 'दिसंबर\"'],\n    'months_short' => ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितंबर', 'अक्टूबर', 'नवंबर', 'दिसंबर'],\n    'weekdays' => ['रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'बृहस्पतिवार', 'शुक्रवार', 'शनिवार'],\n    'weekdays_short' => ['रवि', 'सोम', 'मंगल', 'बुध', 'बृहस्पति', 'शुक्र', 'शनि'],\n    'weekdays_min' => ['रवि', 'सोम', 'मंगल', 'बुध', 'बृहस्पति', 'शुक्र', 'शनि'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ewo.php","ext":"php","size":2139,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['kíkíríg', 'ngəgógəle'],\n    'weekdays' => ['sɔ́ndɔ', 'mɔ́ndi', 'sɔ́ndɔ məlú mə́bɛ̌', 'sɔ́ndɔ məlú mə́lɛ́', 'sɔ́ndɔ məlú mə́nyi', 'fúladé', 'séradé'],\n    'weekdays_short' => ['sɔ́n', 'mɔ́n', 'smb', 'sml', 'smn', 'fúl', 'sér'],\n    'weekdays_min' => ['sɔ́n', 'mɔ́n', 'smb', 'sml', 'smn', 'fúl', 'sér'],\n    'months' => ['ngɔn osú', 'ngɔn bɛ̌', 'ngɔn lála', 'ngɔn nyina', 'ngɔn tána', 'ngɔn saməna', 'ngɔn zamgbála', 'ngɔn mwom', 'ngɔn ebulú', 'ngɔn awóm', 'ngɔn awóm ai dziá', 'ngɔn awóm ai bɛ̌'],\n    'months_short' => ['ngo', 'ngb', 'ngl', 'ngn', 'ngt', 'ngs', 'ngz', 'ngm', 'nge', 'nga', 'ngad', 'ngab'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    // Too unreliable\n    /*\n    'year' => ':count mbu', // less reliable\n    'y' => ':count mbu', // less reliable\n    'a_year' => ':count mbu', // less reliable\n\n    'month' => ':count ngòn', // less reliable\n    'm' => ':count ngòn', // less reliable\n    'a_month' => ':count ngòn', // less reliable\n\n    'week' => ':count mësë', // less reliable\n    'w' => ':count mësë', // less reliable\n    'a_week' => ':count mësë', // less reliable\n\n    'day' => ':count mësë', // less reliable\n    'd' => ':count mësë', // less reliable\n    'a_day' => ':count mësë', // less reliable\n\n    'hour' => ':count awola', // less reliable\n    'h' => ':count awola', // less reliable\n    'a_hour' => ':count awola', // less reliable\n\n    'minute' => ':count awola', // less reliable\n    'min' => ':count awola', // less reliable\n    'a_minute' => ':count awola', // less reliable\n    */\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sbp.php","ext":"php","size":1123,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Lwamilawu', 'Pashamihe'],\n    'weekdays' => ['Mulungu', 'Jumatatu', 'Jumanne', 'Jumatano', 'Alahamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['Mul', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'weekdays_min' => ['Mul', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'months' => ['Mupalangulwa', 'Mwitope', 'Mushende', 'Munyi', 'Mushende Magali', 'Mujimbi', 'Mushipepo', 'Mupuguto', 'Munyense', 'Mokhu', 'Musongandembwe', 'Muhaano'],\n    'months_short' => ['Mup', 'Mwi', 'Msh', 'Mun', 'Mag', 'Muj', 'Msp', 'Mpg', 'Mye', 'Mok', 'Mus', 'Muh'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pl.php","ext":"php","size":4127,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Wacław Jacek\n * - François B\n * - Tim Fish\n * - Serhan Apaydın\n * - Massimiliano Caniparoli\n * - JD Isaacks\n * - Jakub Szwacz\n * - Jan\n * - Paul\n * - damlys\n * - Marek (marast78)\n * - Peter (UnrulyNatives)\n * - Qrzysio\n * - Jan (aso824)\n * - diverpl\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count rok|:count lata|:count lat',\n    'a_year' => 'rok|:count lata|:count lat',\n    'y' => ':count r|:count l|:count l',\n    'month' => ':count miesiąc|:count miesiące|:count miesięcy',\n    'a_month' => 'miesiąc|:count miesiące|:count miesięcy',\n    'm' => ':count mies.',\n    'week' => ':count tydzień|:count tygodnie|:count tygodni',\n    'a_week' => 'tydzień|:count tygodnie|:count tygodni',\n    'w' => ':count tyg.',\n    'day' => ':count dzień|:count dni|:count dni',\n    'a_day' => 'dzień|:count dni|:count dni',\n    'd' => ':count d',\n    'hour' => ':count godzina|:count godziny|:count godzin',\n    'a_hour' => 'godzina|:count godziny|:count godzin',\n    'h' => ':count godz.',\n    'minute' => ':count minuta|:count minuty|:count minut',\n    'a_minute' => 'minuta|:count minuty|:count minut',\n    'min' => ':count min',\n    'second' => ':count sekunda|:count sekundy|:count sekund',\n    'a_second' => '{1}kilka sekund|:count sekunda|:count sekundy|:count sekund',\n    's' => ':count sek.',\n    'ago' => ':time temu',\n    'from_now' => static function ($time) {\n        return 'za '.strtr($time, [\n            'godzina' => 'godzinę',\n            'minuta' => 'minutę',\n            'sekunda' => 'sekundę',\n        ]);\n    },\n    'after' => ':time po',\n    'before' => ':time przed',\n    'diff_now' => 'teraz',\n    'diff_today' => 'Dziś',\n    'diff_today_regexp' => 'Dziś(?:\\\\s+o)?',\n    'diff_yesterday' => 'wczoraj',\n    'diff_yesterday_regexp' => 'Wczoraj(?:\\\\s+o)?',\n    'diff_tomorrow' => 'jutro',\n    'diff_tomorrow_regexp' => 'Jutro(?:\\\\s+o)?',\n    'diff_before_yesterday' => 'przedwczoraj',\n    'diff_after_tomorrow' => 'pojutrze',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Dziś o] LT',\n        'nextDay' => '[Jutro o] LT',\n        'nextWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[W niedzielę o] LT',\n            2 => '[We wtorek o] LT',\n            3 => '[W środę o] LT',\n            6 => '[W sobotę o] LT',\n            default => '[W] dddd [o] LT',\n        },\n        'lastDay' => '[Wczoraj o] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[W zeszłą niedzielę o] LT',\n            3 => '[W zeszłą środę o] LT',\n            6 => '[W zeszłą sobotę o] LT',\n            default => '[W zeszły] dddd [o] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['stycznia', 'lutego', 'marca', 'kwietnia', 'maja', 'czerwca', 'lipca', 'sierpnia', 'września', 'października', 'listopada', 'grudnia'],\n    'months_standalone' => ['styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec', 'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień'],\n    'months_short' => ['sty', 'lut', 'mar', 'kwi', 'maj', 'cze', 'lip', 'sie', 'wrz', 'paź', 'lis', 'gru'],\n    'months_regexp' => '/(DD?o?\\.?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota'],\n    'weekdays_short' => ['ndz', 'pon', 'wt', 'śr', 'czw', 'pt', 'sob'],\n    'weekdays_min' => ['Nd', 'Pn', 'Wt', 'Śr', 'Cz', 'Pt', 'So'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' i '],\n    'meridiem' => ['przed południem', 'po południu'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sk.php","ext":"php","size":5474,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Martin Suja\n * - Tsutomu Kuroda\n * - tjku\n * - Max Melentiev\n * - Juanito Fatas\n * - Ivan Stana\n * - Akira Matsuda\n * - Christopher Dell\n * - James McKinney\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Jozef Fulop\n * - Nicolás Hock Isaza\n * - Tom Hughes\n * - Simon Hürlimann (CyT)\n * - jofi\n * - Jakub ADAMEC\n * - Marek Adamický\n * - AlterwebStudio\n * - Peter Kundis\n */\n\nuse Carbon\\CarbonInterface;\n\n$fromNow = function ($time) {\n    return 'o '.strtr($time, [\n            'hodina' => 'hodinu',\n            'minúta' => 'minútu',\n            'sekunda' => 'sekundu',\n        ]);\n};\n\n$ago = function ($time) {\n    $replacements = [\n        '/\\bhodina\\b/' => 'hodinou',\n        '/\\bminúta\\b/' => 'minútou',\n        '/\\bsekunda\\b/' => 'sekundou',\n        '/\\bdeň\\b/u' => 'dňom',\n        '/\\btýždeň\\b/u' => 'týždňom',\n        '/\\bmesiac\\b/' => 'mesiacom',\n        '/\\brok\\b/' => 'rokom',\n    ];\n\n    $replacementsPlural = [\n        '/\\b(?:hodiny|hodín)\\b/' => 'hodinami',\n        '/\\b(?:minúty|minút)\\b/' => 'minútami',\n        '/\\b(?:sekundy|sekúnd)\\b/' => 'sekundami',\n        '/\\bdeň\\b/' => 'dňom',\n        '/\\bdni\\b/' => 'dňami',\n        '/\\bdní\\b/u' => 'dňami',\n        '/\\b(?:týždne|týždňov)\\b/' => 'týždňami',\n        '/\\b(?:mesiace|mesiacov)\\b/' => 'mesiacmi',\n        '/\\b(?:roky|rokov)\\b/' => 'rokmi',\n    ];\n\n    foreach ($replacements + $replacementsPlural as $pattern => $replacement) {\n        $time = preg_replace($pattern, $replacement, $time);\n    }\n\n    return \"pred $time\";\n};\n\nreturn [\n    'year' => ':count rok|:count roky|:count rokov',\n    'a_year' => 'rok|:count roky|:count rokov',\n    'y' => ':count r',\n    'month' => ':count mesiac|:count mesiace|:count mesiacov',\n    'a_month' => 'mesiac|:count mesiace|:count mesiacov',\n    'm' => ':count m',\n    'week' => ':count týždeň|:count týždne|:count týždňov',\n    'a_week' => 'týždeň|:count týždne|:count týždňov',\n    'w' => ':count t',\n    'day' => ':count deň|:count dni|:count dní',\n    'a_day' => 'deň|:count dni|:count dní',\n    'd' => ':count d',\n    'hour' => ':count hodina|:count hodiny|:count hodín',\n    'a_hour' => 'hodina|:count hodiny|:count hodín',\n    'h' => ':count h',\n    'minute' => ':count minúta|:count minúty|:count minút',\n    'a_minute' => 'minúta|:count minúty|:count minút',\n    'min' => ':count min',\n    'second' => ':count sekunda|:count sekundy|:count sekúnd',\n    'a_second' => 'sekunda|:count sekundy|:count sekúnd',\n    's' => ':count s',\n    'millisecond' => ':count milisekunda|:count milisekundy|:count milisekúnd',\n    'a_millisecond' => 'milisekunda|:count milisekundy|:count milisekúnd',\n    'ms' => ':count ms',\n    'microsecond' => ':count mikrosekunda|:count mikrosekundy|:count mikrosekúnd',\n    'a_microsecond' => 'mikrosekunda|:count mikrosekundy|:count mikrosekúnd',\n    'µs' => ':count µs',\n\n    'ago' => $ago,\n    'from_now' => $fromNow,\n    'before' => ':time pred',\n    'after' => ':time po',\n\n    'hour_after' => ':count hodinu|:count hodiny|:count hodín',\n    'minute_after' => ':count minútu|:count minúty|:count minút',\n    'second_after' => ':count sekundu|:count sekundy|:count sekúnd',\n\n    'hour_before' => ':count hodinu|:count hodiny|:count hodín',\n    'minute_before' => ':count minútu|:count minúty|:count minút',\n    'second_before' => ':count sekundu|:count sekundy|:count sekúnd',\n\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' a '],\n    'diff_now' => 'teraz',\n    'diff_yesterday' => 'včera',\n    'diff_tomorrow' => 'zajtra',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'DD. MMMM YYYY',\n        'LLL' => 'D. M. HH:mm',\n        'LLLL' => 'dddd D. MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[dnes o] LT',\n        'nextDay' => '[zajtra o] LT',\n        'lastDay' => '[včera o] LT',\n        'nextWeek' => 'dddd [o] LT',\n        'lastWeek' => static function (CarbonInterface $date) {\n            switch ($date->dayOfWeek) {\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT'; //pondelok/utorok/štvrtok/piatok\n                default:\n                    return '[minulá] dddd [o] LT';\n            }\n        },\n        'sameElse' => 'L',\n    ],\n    'weekdays' => ['nedeľa', 'pondelok', 'utorok', 'streda', 'štvrtok', 'piatok', 'sobota'],\n    'weekdays_short' => ['ned', 'pon', 'uto', 'str', 'štv', 'pia', 'sob'],\n    'weekdays_min' => ['ne', 'po', 'ut', 'st', 'št', 'pi', 'so'],\n    'months' => ['januára', 'februára', 'marca', 'apríla', 'mája', 'júna', 'júla', 'augusta', 'septembra', 'októbra', 'novembra', 'decembra'],\n    'months_standalone' => ['január', 'február', 'marec', 'apríl', 'máj', 'jún', 'júl', 'august', 'september', 'október', 'november', 'december'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'máj', 'jún', 'júl', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    'months_regexp' => '/(DD?o?\\.?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'meridiem' => ['dopoludnia', 'popoludní'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tlh.php","ext":"php","size":2546,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Serhan Apaydın\n * - Dominika\n */\nreturn [\n    'year' => '{1}wa’ DIS|:count DIS',\n    'month' => '{1}wa’ jar|:count jar',\n    'week' => '{1}wa’ hogh|:count hogh',\n    'day' => '{1}wa’ jaj|:count jaj',\n    'hour' => '{1}wa’ rep|:count rep',\n    'minute' => '{1}wa’ tup|:count tup',\n    'second' => '{1}puS lup|:count lup',\n    'ago' => static function ($time) {\n        $output = strtr($time, [\n            'jaj' => 'Hu’',\n            'jar' => 'wen',\n            'DIS' => 'ben',\n        ]);\n\n        return $output === $time ? \"$time ret\" : $output;\n    },\n    'from_now' => static function ($time) {\n        $output = strtr($time, [\n            'jaj' => 'leS',\n            'jar' => 'waQ',\n            'DIS' => 'nem',\n        ]);\n\n        return $output === $time ? \"$time pIq\" : $output;\n    },\n    'diff_yesterday' => 'wa’Hu’',\n    'diff_today' => 'DaHjaj',\n    'diff_tomorrow' => 'wa’leS',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[DaHjaj] LT',\n        'nextDay' => '[wa’leS] LT',\n        'nextWeek' => 'LLL',\n        'lastDay' => '[wa’Hu’] LT',\n        'lastWeek' => 'LLL',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['tera’ jar wa’', 'tera’ jar cha’', 'tera’ jar wej', 'tera’ jar loS', 'tera’ jar vagh', 'tera’ jar jav', 'tera’ jar Soch', 'tera’ jar chorgh', 'tera’ jar Hut', 'tera’ jar wa’maH', 'tera’ jar wa’maH wa’', 'tera’ jar wa’maH cha’'],\n    'months_short' => ['jar wa’', 'jar cha’', 'jar wej', 'jar loS', 'jar vagh', 'jar jav', 'jar Soch', 'jar chorgh', 'jar Hut', 'jar wa’maH', 'jar wa’maH wa’', 'jar wa’maH cha’'],\n    'weekdays' => ['lojmItjaj', 'DaSjaj', 'povjaj', 'ghItlhjaj', 'loghjaj', 'buqjaj', 'ghInjaj'],\n    'weekdays_short' => ['lojmItjaj', 'DaSjaj', 'povjaj', 'ghItlhjaj', 'loghjaj', 'buqjaj', 'ghInjaj'],\n    'weekdays_min' => ['lojmItjaj', 'DaSjaj', 'povjaj', 'ghItlhjaj', 'loghjaj', 'buqjaj', 'ghInjaj'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' ’ej '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ug_CN.php","ext":"php","size":321,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - Alim Boyaq\n */\nreturn require __DIR__.'/ug.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lo_LA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/lo.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ik.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ik_CA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_NZ.php","ext":"php","size":682,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Mayank Badola\n * - Luke McGregor\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm A',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm A',\n    ],\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_RS@latin.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_EC.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/shi.php","ext":"php","size":2321,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['ⵜⵉⴼⴰⵡⵜ', 'ⵜⴰⴷⴳⴳⵯⴰⵜ'],\n    'weekdays' => ['ⴰⵙⴰⵎⴰⵙ', 'ⴰⵢⵏⴰⵙ', 'ⴰⵙⵉⵏⴰⵙ', 'ⴰⴽⵕⴰⵙ', 'ⴰⴽⵡⴰⵙ', 'ⵙⵉⵎⵡⴰⵙ', 'ⴰⵙⵉⴹⵢⴰⵙ'],\n    'weekdays_short' => ['ⴰⵙⴰ', 'ⴰⵢⵏ', 'ⴰⵙⵉ', 'ⴰⴽⵕ', 'ⴰⴽⵡ', 'ⴰⵙⵉⵎ', 'ⴰⵙⵉⴹ'],\n    'weekdays_min' => ['ⴰⵙⴰ', 'ⴰⵢⵏ', 'ⴰⵙⵉ', 'ⴰⴽⵕ', 'ⴰⴽⵡ', 'ⴰⵙⵉⵎ', 'ⴰⵙⵉⴹ'],\n    'months' => ['ⵉⵏⵏⴰⵢⵔ', 'ⴱⵕⴰⵢⵕ', 'ⵎⴰⵕⵚ', 'ⵉⴱⵔⵉⵔ', 'ⵎⴰⵢⵢⵓ', 'ⵢⵓⵏⵢⵓ', 'ⵢⵓⵍⵢⵓⵣ', 'ⵖⵓⵛⵜ', 'ⵛⵓⵜⴰⵏⴱⵉⵔ', 'ⴽⵜⵓⴱⵔ', 'ⵏⵓⵡⴰⵏⴱⵉⵔ', 'ⴷⵓⵊⴰⵏⴱⵉⵔ'],\n    'months_short' => ['ⵉⵏⵏ', 'ⴱⵕⴰ', 'ⵎⴰⵕ', 'ⵉⴱⵔ', 'ⵎⴰⵢ', 'ⵢⵓⵏ', 'ⵢⵓⵍ', 'ⵖⵓⵛ', 'ⵛⵓⵜ', 'ⴽⵜⵓ', 'ⵏⵓⵡ', 'ⴷⵓⵊ'],\n    'first_day_of_week' => 6,\n    'weekend' => [5, 6],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count aseggwas',\n    'y' => ':count aseggwas',\n    'a_year' => ':count aseggwas',\n\n    'month' => ':count ayyur',\n    'm' => ':count ayyur',\n    'a_month' => ':count ayyur',\n\n    'week' => ':count imalass',\n    'w' => ':count imalass',\n    'a_week' => ':count imalass',\n\n    'day' => ':count ass',\n    'd' => ':count ass',\n    'a_day' => ':count ass',\n\n    'hour' => ':count urɣ', // less reliable\n    'h' => ':count urɣ', // less reliable\n    'a_hour' => ':count urɣ', // less reliable\n\n    'minute' => ':count ⴰⵎⵥⵉ', // less reliable\n    'min' => ':count ⴰⵎⵥⵉ', // less reliable\n    'a_minute' => ':count ⴰⵎⵥⵉ', // less reliable\n\n    'second' => ':count sin', // less reliable\n    's' => ':count sin', // less reliable\n    'a_second' => ':count sin', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sah_RU.php","ext":"php","size":1269,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Valery Timiriliyev Valery Timiriliyev timiriliyev@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/ru.php', [\n    'formats' => [\n        'L' => 'YYYY.MM.DD',\n    ],\n    'months' => ['тохсунньу', 'олунньу', 'кулун тутар', 'муус устар', 'ыам ыйын', 'бэс ыйын', 'от ыйын', 'атырдьах ыйын', 'балаҕан ыйын', 'алтынньы', 'сэтинньи', 'ахсынньы'],\n    'months_short' => ['тохс', 'олун', 'кул', 'муус', 'ыам', 'бэс', 'от', 'атыр', 'бал', 'алт', 'сэт', 'ахс'],\n    'weekdays' => ['баскыһыанньа', 'бэнидиэнньик', 'оптуорунньук', 'сэрэдэ', 'чэппиэр', 'бээтинсэ', 'субуота'],\n    'weekdays_short' => ['бс', 'бн', 'оп', 'ср', 'чп', 'бт', 'сб'],\n    'weekdays_min' => ['бс', 'бн', 'оп', 'ср', 'чп', 'бт', 'сб'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sah.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/sah_RU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/an_ES.php","ext":"php","size":1745,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Softaragones Jordi Mallach Pérez, Juan Pablo Martínez bug-glibc-locales@gnu.org, softaragones@softaragones.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['chinero', 'febrero', 'marzo', 'abril', 'mayo', 'chunyo', 'chuliol', 'agosto', 'setiembre', 'octubre', 'noviembre', 'aviento'],\n    'months_short' => ['chi', 'feb', 'mar', 'abr', 'may', 'chn', 'chl', 'ago', 'set', 'oct', 'nov', 'avi'],\n    'weekdays' => ['domingo', 'luns', 'martes', 'mierques', 'chueves', 'viernes', 'sabado'],\n    'weekdays_short' => ['dom', 'lun', 'mar', 'mie', 'chu', 'vie', 'sab'],\n    'weekdays_min' => ['dom', 'lun', 'mar', 'mie', 'chu', 'vie', 'sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count año',\n    'y' => ':count año',\n    'a_year' => ':count año',\n\n    'month' => ':count mes',\n    'm' => ':count mes',\n    'a_month' => ':count mes',\n\n    'week' => ':count semana',\n    'w' => ':count semana',\n    'a_week' => ':count semana',\n\n    'day' => ':count día',\n    'd' => ':count día',\n    'a_day' => ':count día',\n\n    'hour' => ':count reloch', // less reliable\n    'h' => ':count reloch', // less reliable\n    'a_hour' => ':count reloch', // less reliable\n\n    'minute' => ':count minuto',\n    'min' => ':count minuto',\n    'a_minute' => ':count minuto',\n\n    'second' => ':count segundo',\n    's' => ':count segundo',\n    'a_second' => ':count segundo',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/te_IN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/te.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ff_GN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ff.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lij.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/lij_IT.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Cyrl_ME.php","ext":"php","size":4247,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Glavić\n * - Milos Sakovic\n */\n\nuse Carbon\\CarbonInterface;\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'sr');\n    }, 'sr_Cyrl_ME');\n}\n// @codeCoverageIgnoreEnd\n\nreturn [\n    'year' => ':count година|:count године|:count година',\n    'y' => ':count г.',\n    'month' => ':count мјесец|:count мјесеца|:count мјесеци',\n    'm' => ':count мј.',\n    'week' => ':count недјеља|:count недјеље|:count недјеља',\n    'w' => ':count нед.',\n    'day' => ':count дан|:count дана|:count дана',\n    'd' => ':count д.',\n    'hour' => ':count сат|:count сата|:count сати',\n    'h' => ':count ч.',\n    'minute' => ':count минут|:count минута|:count минута',\n    'min' => ':count мин.',\n    'second' => ':count секунд|:count секунде|:count секунди',\n    's' => ':count сек.',\n    'ago' => 'прије :time',\n    'from_now' => 'за :time',\n    'after' => ':time након',\n    'before' => ':time прије',\n\n    'year_from_now' => ':count годину|:count године|:count година',\n    'year_ago' => ':count годину|:count године|:count година',\n\n    'week_from_now' => ':count недјељу|:count недјеље|:count недјеља',\n    'week_ago' => ':count недјељу|:count недјеље|:count недјеља',\n\n    'diff_now' => 'управо сада',\n    'diff_today' => 'данас',\n    'diff_today_regexp' => 'данас(?:\\\\s+у)?',\n    'diff_yesterday' => 'јуче',\n    'diff_yesterday_regexp' => 'јуче(?:\\\\s+у)?',\n    'diff_tomorrow' => 'сутра',\n    'diff_tomorrow_regexp' => 'сутра(?:\\\\s+у)?',\n    'diff_before_yesterday' => 'прекјуче',\n    'diff_after_tomorrow' => 'прекосјутра',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[данас у] LT',\n        'nextDay' => '[сутра у] LT',\n        'nextWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[у недељу у] LT',\n            3 => '[у среду у] LT',\n            6 => '[у суботу у] LT',\n            default => '[у] dddd [у] LT',\n        },\n        'lastDay' => '[јуче у] LT',\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[прошле недеље у] LT',\n            1 => '[прошлог понедељка у] LT',\n            2 => '[прошлог уторка у] LT',\n            3 => '[прошле среде у] LT',\n            4 => '[прошлог четвртка у] LT',\n            5 => '[прошлог петка у] LT',\n            default => '[прошле суботе у] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],\n    'months_short' => ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],\n    'weekdays' => ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n    'weekdays_short' => ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],\n    'weekdays_min' => ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' и '],\n    'meridiem' => ['АМ', 'ПМ'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/oc.php","ext":"php","size":3722,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Quentí\n * - Quentin PAGÈS\n */\n// @codeCoverageIgnoreStart\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\nif (class_exists('Symfony\\\\Component\\\\Translation\\\\PluralizationRules')) {\n    PluralizationRules::set(static function ($number) {\n        return $number == 1 ? 0 : 1;\n    }, 'oc');\n}\n// @codeCoverageIgnoreEnd\n\nreturn [\n    'year' => ':count an|:count ans',\n    'a_year' => 'un an|:count ans',\n    'y' => ':count an|:count ans',\n    'month' => ':count mes|:count meses',\n    'a_month' => 'un mes|:count meses',\n    'm' => ':count mes|:count meses',\n    'week' => ':count setmana|:count setmanas',\n    'a_week' => 'una setmana|:count setmanas',\n    'w' => ':count setmana|:count setmanas',\n    'day' => ':count jorn|:count jorns',\n    'a_day' => 'un jorn|:count jorns',\n    'd' => ':count jorn|:count jorns',\n    'hour' => ':count ora|:count oras',\n    'a_hour' => 'una ora|:count oras',\n    'h' => ':count ora|:count oras',\n    'minute' => ':count minuta|:count minutas',\n    'a_minute' => 'una minuta|:count minutas',\n    'min' => ':count minuta|:count minutas',\n    'second' => ':count segonda|:count segondas',\n    'a_second' => 'una segonda|:count segondas',\n    's' => ':count segonda|:count segondas',\n    'ago' => 'fa :time',\n    'from_now' => 'd\\'aquí :time',\n    'after' => ':time aprèp',\n    'before' => ':time abans',\n    'diff_now' => 'ara meteis',\n    'diff_today' => 'Uèi',\n    'diff_today_regexp' => 'Uèi(?:\\\\s+a)?',\n    'diff_yesterday' => 'ièr',\n    'diff_yesterday_regexp' => 'Ièr(?:\\\\s+a)?',\n    'diff_tomorrow' => 'deman',\n    'diff_tomorrow_regexp' => 'Deman(?:\\\\s+a)?',\n    'diff_before_yesterday' => 'ièr delà',\n    'diff_after_tomorrow' => 'deman passat',\n    'period_recurrences' => ':count còp|:count còps',\n    'period_interval' => 'cada :interval',\n    'period_start_date' => 'de :date',\n    'period_end_date' => 'fins a :date',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM [de] YYYY',\n        'LLL' => 'D MMMM [de] YYYY [a] H:mm',\n        'LLLL' => 'dddd D MMMM [de] YYYY [a] H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Uèi a] LT',\n        'nextDay' => '[Deman a] LT',\n        'nextWeek' => 'dddd [a] LT',\n        'lastDay' => '[Ièr a] LT',\n        'lastWeek' => 'dddd [passat a] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['de genièr', 'de febrièr', 'de març', 'd\\'abrial', 'de mai', 'de junh', 'de julhet', 'd\\'agost', 'de setembre', 'd’octòbre', 'de novembre', 'de decembre'],\n    'months_standalone' => ['genièr', 'febrièr', 'març', 'abrial', 'mai', 'junh', 'julh', 'agost', 'setembre', 'octòbre', 'novembre', 'decembre'],\n    'months_short' => ['gen.', 'feb.', 'març', 'abr.', 'mai', 'junh', 'julh', 'ago.', 'sep.', 'oct.', 'nov.', 'dec.'],\n    'weekdays' => ['dimenge', 'diluns', 'dimars', 'dimècres', 'dijòus', 'divendres', 'dissabte'],\n    'weekdays_short' => ['dg', 'dl', 'dm', 'dc', 'dj', 'dv', 'ds'],\n    'weekdays_min' => ['dg', 'dl', 'dm', 'dc', 'dj', 'dv', 'ds'],\n    'ordinal' => static function ($number, string $period = '') {\n        $ordinal = [1 => 'èr', 2 => 'nd'][(int) $number] ?? 'en';\n\n        // feminine for week, hour, minute, second\n        if (preg_match('/^[wWhHgGis]$/', $period)) {\n            $ordinal .= 'a';\n        }\n\n        return $number.$ordinal;\n    },\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' e '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fy_DE.php","ext":"php","size":1052,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - information from Kenneth Christiansen Kenneth Christiansen, Pablo Saratxaga kenneth@gnu.org, pablo@mandriva.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Jaunuwoa', 'Februwoa', 'Moaz', 'Aprell', 'Mai', 'Juni', 'Juli', 'August', 'Septamba', 'Oktoba', 'Nowamba', 'Dezamba'],\n    'months_short' => ['Jan', 'Feb', 'Moz', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Now', 'Dez'],\n    'weekdays' => ['Sinndag', 'Mondag', 'Dingsdag', 'Meddwäakj', 'Donnadag', 'Friedag', 'Sinnowend'],\n    'weekdays_short' => ['Sdg', 'Mdg', 'Dsg', 'Mwk', 'Ddg', 'Fdg', 'Swd'],\n    'weekdays_min' => ['Sdg', 'Mdg', 'Dsg', 'Mwk', 'Ddg', 'Fdg', 'Swd'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MW.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/aa_ER@saaho.php","ext":"php","size":1064,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Qunxa Garablu', 'Naharsi Kudo', 'Ciggilta Kudo', 'Agda Baxisso', 'Caxah Alsa', 'Qasa Dirri', 'Qado Dirri', 'Leqeeni', 'Waysu', 'Diteli', 'Ximoli', 'Kaxxa Garablu'],\n    'months_short' => ['Qun', 'Nah', 'Cig', 'Agd', 'Cax', 'Qas', 'Qad', 'Leq', 'Way', 'Dit', 'Xim', 'Kax'],\n    'weekdays' => ['Naba Sambat', 'Sani', 'Salus', 'Rabuq', 'Camus', 'Jumqata', 'Qunxa Sambat'],\n    'weekdays_short' => ['Nab', 'San', 'Sal', 'Rab', 'Cam', 'Jum', 'Qun'],\n    'weekdays_min' => ['Nab', 'San', 'Sal', 'Rab', 'Cam', 'Jum', 'Qun'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['saaku', 'carra'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_TZ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GH.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ln_CF.php","ext":"php","size":654,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ln.php', [\n    'weekdays' => ['eyenga', 'mokɔlɔ mwa yambo', 'mokɔlɔ mwa míbalé', 'mokɔlɔ mwa mísáto', 'mokɔlɔ ya mínéi', 'mokɔlɔ ya mítáno', 'mpɔ́sɔ'],\n    'weekdays_short' => ['eye', 'ybo', 'mbl', 'mst', 'min', 'mtn', 'mps'],\n    'weekdays_min' => ['eye', 'ybo', 'mbl', 'mst', 'min', 'mtn', 'mps'],\n    'meridiem' => ['ntɔ́ngɔ́', 'mpókwa'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_IM.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/he.php","ext":"php","size":3175,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Daniel Cohen Gindi\n * - JD Isaacks\n * - Itai Nathaniel\n * - GabMic\n * - Yaakov Dahan (yakidahan)\n */\nreturn [\n    'year' => 'שנה|{2}שנתיים|:count שנים',\n    'y' => 'שנה|:count שנ׳',\n    'month' => 'חודש|{2}חודשיים|:count חודשים',\n    'm' => 'חודש|:count חו׳',\n    'week' => 'שבוע|{2}שבועיים|:count שבועות',\n    'w' => 'שבוע|:count שב׳',\n    'day' => 'יום|{2}יומיים|:count ימים',\n    'd' => 'יום|:count ימ׳',\n    'hour' => 'שעה|{2}שעתיים|:count שעות',\n    'h' => 'שעה|:count שע׳',\n    'minute' => 'דקה|{2}שתי דקות|:count דקות',\n    'min' => 'דקה|:count דק׳',\n    'second' => 'שנייה|:count שניות',\n    'a_second' => 'כמה שניות|:count שניות',\n    's' => 'שניה|:count שנ׳',\n    'ago' => 'לפני :time',\n    'from_now' => 'בעוד :time מעכשיו',\n    'after' => 'אחרי :time',\n    'before' => 'לפני :time',\n    'diff_now' => 'עכשיו',\n    'diff_today' => 'היום',\n    'diff_today_regexp' => 'היום(?:\\\\s+ב־)?',\n    'diff_yesterday' => 'אתמול',\n    'diff_yesterday_regexp' => 'אתמול(?:\\\\s+ב־)?',\n    'diff_tomorrow' => 'מחר',\n    'diff_tomorrow_regexp' => 'מחר(?:\\\\s+ב־)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D [ב]MMMM YYYY',\n        'LLL' => 'D [ב]MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D [ב]MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[היום ב־]LT',\n        'nextDay' => '[מחר ב־]LT',\n        'nextWeek' => 'dddd [בשעה] LT',\n        'lastDay' => '[אתמול ב־]LT',\n        'lastWeek' => '[ביום] dddd [האחרון בשעה] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour, $minute, $isLower) {\n        if ($hour < 5) {\n            return 'לפנות בוקר';\n        }\n        if ($hour < 10) {\n            return 'בבוקר';\n        }\n        if ($hour < 12) {\n            return $isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n        }\n        if ($hour < 18) {\n            return $isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n        }\n\n        return 'בערב';\n    },\n    'months' => ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'],\n    'months_short' => ['ינו׳', 'פבר׳', 'מרץ', 'אפר׳', 'מאי', 'יוני', 'יולי', 'אוג׳', 'ספט׳', 'אוק׳', 'נוב׳', 'דצמ׳'],\n    'weekdays' => ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת'],\n    'weekdays_short' => ['א׳', 'ב׳', 'ג׳', 'ד׳', 'ה׳', 'ו׳', 'ש׳'],\n    'weekdays_min' => ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ש'],\n    'list' => [', ', ' ו -'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hif_FJ.php","ext":"php","size":1720,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Samsung Electronics Co., Ltd.    akhilesh.k@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'dddd DD MMM YYYY',\n    ],\n    'months' => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'weekdays' => ['Ravivar', 'Somvar', 'Mangalvar', 'Budhvar', 'Guruvar', 'Shukravar', 'Shanivar'],\n    'weekdays_short' => ['Ravi', 'Som', 'Mangal', 'Budh', 'Guru', 'Shukra', 'Shani'],\n    'weekdays_min' => ['Ravi', 'Som', 'Mangal', 'Budh', 'Guru', 'Shukra', 'Shani'],\n    'meridiem' => ['Purvahan', 'Aparaahna'],\n\n    'hour' => ':count minit', // less reliable\n    'h' => ':count minit', // less reliable\n    'a_hour' => ':count minit', // less reliable\n\n    'year' => ':count saal',\n    'y' => ':count saal',\n    'a_year' => ':count saal',\n\n    'month' => ':count Mahina',\n    'm' => ':count Mahina',\n    'a_month' => ':count Mahina',\n\n    'week' => ':count Hafta',\n    'w' => ':count Hafta',\n    'a_week' => ':count Hafta',\n\n    'day' => ':count Din',\n    'd' => ':count Din',\n    'a_day' => ':count Din',\n\n    'minute' => ':count Minit',\n    'min' => ':count Minit',\n    'a_minute' => ':count Minit',\n\n    'second' => ':count Second',\n    's' => ':count Second',\n    'a_second' => ':count Second',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/qu_EC.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/qu.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tl_PH.php","ext":"php","size":339,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Ian De La Cruz\n * - JD Isaacks\n */\nreturn require __DIR__.'/tl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ml.php","ext":"php","size":3366,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count വർഷം',\n    'a_year' => 'ഒരു വർഷം|:count വർഷം',\n    'month' => ':count മാസം',\n    'a_month' => 'ഒരു മാസം|:count മാസം',\n    'week' => ':count ആഴ്ച',\n    'a_week' => 'ഒരാഴ്ച|:count ആഴ്ച',\n    'day' => ':count ദിവസം',\n    'a_day' => 'ഒരു ദിവസം|:count ദിവസം',\n    'hour' => ':count മണിക്കൂർ',\n    'a_hour' => 'ഒരു മണിക്കൂർ|:count മണിക്കൂർ',\n    'minute' => ':count മിനിറ്റ്',\n    'a_minute' => 'ഒരു മിനിറ്റ്|:count മിനിറ്റ്',\n    'second' => ':count സെക്കൻഡ്',\n    'a_second' => 'അൽപ നിമിഷങ്ങൾ|:count സെക്കൻഡ്',\n    'ago' => ':time മുൻപ്',\n    'from_now' => ':time കഴിഞ്ഞ്',\n    'diff_now' => 'ഇപ്പോൾ',\n    'diff_today' => 'ഇന്ന്',\n    'diff_yesterday' => 'ഇന്നലെ',\n    'diff_tomorrow' => 'നാളെ',\n    'formats' => [\n        'LT' => 'A h:mm -നു',\n        'LTS' => 'A h:mm:ss -നു',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm -നു',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm -നു',\n    ],\n    'calendar' => [\n        'sameDay' => '[ഇന്ന്] LT',\n        'nextDay' => '[നാളെ] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[ഇന്നലെ] LT',\n        'lastWeek' => '[കഴിഞ്ഞ] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'രാത്രി';\n        }\n        if ($hour < 12) {\n            return 'രാവിലെ';\n        }\n        if ($hour < 17) {\n            return 'ഉച്ച കഴിഞ്ഞ്';\n        }\n        if ($hour < 20) {\n            return 'വൈകുന്നേരം';\n        }\n\n        return 'രാത്രി';\n    },\n    'months' => ['ജനുവരി', 'ഫെബ്രുവരി', 'മാർച്ച്', 'ഏപ്രിൽ', 'മേയ്', 'ജൂൺ', 'ജൂലൈ', 'ഓഗസ്റ്റ്', 'സെപ്റ്റംബർ', 'ഒക്ടോബർ', 'നവംബർ', 'ഡിസംബർ'],\n    'months_short' => ['ജനു.', 'ഫെബ്രു.', 'മാർ.', 'ഏപ്രി.', 'മേയ്', 'ജൂൺ', 'ജൂലൈ.', 'ഓഗ.', 'സെപ്റ്റ.', 'ഒക്ടോ.', 'നവം.', 'ഡിസം.'],\n    'weekdays' => ['ഞായറാഴ്ച', 'തിങ്കളാഴ്ച', 'ചൊവ്വാഴ്ച', 'ബുധനാഴ്ച', 'വ്യാഴാഴ്ച', 'വെള്ളിയാഴ്ച', 'ശനിയാഴ്ച'],\n    'weekdays_short' => ['ഞായർ', 'തിങ്കൾ', 'ചൊവ്വ', 'ബുധൻ', 'വ്യാഴം', 'വെള്ളി', 'ശനി'],\n    'weekdays_min' => ['ഞാ', 'തി', 'ചൊ', 'ബു', 'വ്യാ', 'വെ', 'ശ'],\n    'list' => ', ',\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/th_TH.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/th.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/it_VA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/it.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nb.php","ext":"php","size":2949,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Alexander Tømmerås\n * - Sigurd Gartmann\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count år|:count år',\n    'a_year' => 'ett år|:count år',\n    'y' => ':count år|:count år',\n    'month' => ':count måned|:count måneder',\n    'a_month' => 'en måned|:count måneder',\n    'm' => ':count md.',\n    'week' => ':count uke|:count uker',\n    'a_week' => 'en uke|:count uker',\n    'w' => ':count u.',\n    'day' => ':count dag|:count dager',\n    'a_day' => 'en dag|:count dager',\n    'd' => ':count d.',\n    'hour' => ':count time|:count timer',\n    'a_hour' => 'en time|:count timer',\n    'h' => ':count t',\n    'minute' => ':count minutt|:count minutter',\n    'a_minute' => 'ett minutt|:count minutter',\n    'min' => ':count min',\n    'second' => ':count sekund|:count sekunder',\n    'a_second' => 'noen sekunder|:count sekunder',\n    's' => ':count sek',\n    'ago' => ':time siden',\n    'from_now' => 'om :time',\n    'after' => ':time etter',\n    'before' => ':time før',\n    'diff_now' => 'akkurat nå',\n    'diff_today' => 'i dag',\n    'diff_today_regexp' => 'i dag(?:\\\\s+kl.)?',\n    'diff_yesterday' => 'i går',\n    'diff_yesterday_regexp' => 'i går(?:\\\\s+kl.)?',\n    'diff_tomorrow' => 'i morgen',\n    'diff_tomorrow_regexp' => 'i morgen(?:\\\\s+kl.)?',\n    'diff_before_yesterday' => 'i forgårs',\n    'diff_after_tomorrow' => 'i overmorgen',\n    'period_recurrences' => 'en gang|:count ganger',\n    'period_interval' => 'hver :interval',\n    'period_start_date' => 'fra :date',\n    'period_end_date' => 'til :date',\n    'months' => ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    'weekdays' => ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag'],\n    'weekdays_short' => ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør'],\n    'weekdays_min' => ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø'],\n    'ordinal' => ':number.',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY [kl.] HH:mm',\n        'LLLL' => 'dddd D. MMMM YYYY [kl.] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[i dag kl.] LT',\n        'nextDay' => '[i morgen kl.] LT',\n        'nextWeek' => 'dddd [kl.] LT',\n        'lastDay' => '[i går kl.] LT',\n        'lastWeek' => '[forrige] dddd [kl.] LT',\n        'sameElse' => 'L',\n    ],\n    'list' => [', ', ' og '],\n    'meridiem' => ['a.m.', 'p.m.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/the.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/the_NP.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_CR.php","ext":"php","size":449,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/so_ET.php","ext":"php","size":337,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn require __DIR__.'/so.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/af_NA.php","ext":"php","size":1094,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/af.php', [\n    'meridiem' => ['v', 'n'],\n    'weekdays' => ['Sondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrydag', 'Saterdag'],\n    'weekdays_short' => ['So.', 'Ma.', 'Di.', 'Wo.', 'Do.', 'Vr.', 'Sa.'],\n    'weekdays_min' => ['So.', 'Ma.', 'Di.', 'Wo.', 'Do.', 'Vr.', 'Sa.'],\n    'months' => ['Januarie', 'Februarie', 'Maart', 'April', 'Mei', 'Junie', 'Julie', 'Augustus', 'September', 'Oktober', 'November', 'Desember'],\n    'months_short' => ['Jan.', 'Feb.', 'Mrt.', 'Apr.', 'Mei', 'Jun.', 'Jul.', 'Aug.', 'Sep.', 'Okt.', 'Nov.', 'Des.'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'DD MMM YYYY',\n        'LLL' => 'DD MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, DD MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wal_ET.php","ext":"php","size":1257,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጃንዩወሪ', 'ፌብሩወሪ', 'ማርች', 'ኤፕረል', 'ሜይ', 'ጁን', 'ጁላይ', 'ኦገስት', 'ሴፕቴምበር', 'ኦክተውበር', 'ኖቬምበር', 'ዲሴምበር'],\n    'months_short' => ['ጃንዩ', 'ፌብሩ', 'ማርች', 'ኤፕረ', 'ሜይ ', 'ጁን ', 'ጁላይ', 'ኦገስ', 'ሴፕቴ', 'ኦክተ', 'ኖቬም', 'ዲሴም'],\n    'weekdays' => ['ወጋ', 'ሳይኖ', 'ማቆሳኛ', 'አሩዋ', 'ሃሙሳ', 'አርባ', 'ቄራ'],\n    'weekdays_short' => ['ወጋ ', 'ሳይኖ', 'ማቆሳ', 'አሩዋ', 'ሃሙሳ', 'አርባ', 'ቄራ '],\n    'weekdays_min' => ['ወጋ ', 'ሳይኖ', 'ማቆሳ', 'አሩዋ', 'ሃሙሳ', 'አርባ', 'ቄራ '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ማለዶ', 'ቃማ'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lzh.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/lzh_TW.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cv_RU.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/cv.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fi_FI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fi.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kk_KZ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/kk.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sk_SK.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sk.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mas.php","ext":"php","size":2025,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['Ɛnkakɛnyá', 'Ɛndámâ'],\n    'weekdays' => ['Jumapílí', 'Jumatátu', 'Jumane', 'Jumatánɔ', 'Alaámisi', 'Jumáa', 'Jumamósi'],\n    'weekdays_short' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'weekdays_min' => ['Jpi', 'Jtt', 'Jnn', 'Jtn', 'Alh', 'Iju', 'Jmo'],\n    'months' => ['Oladalʉ́', 'Arát', 'Ɔɛnɨ́ɔɨŋɔk', 'Olodoyíóríê inkókúâ', 'Oloilépūnyīē inkókúâ', 'Kújúɔrɔk', 'Mórusásin', 'Ɔlɔ́ɨ́bɔ́rárɛ', 'Kúshîn', 'Olgísan', 'Pʉshʉ́ka', 'Ntʉ́ŋʉ́s'],\n    'months_short' => ['Dal', 'Ará', 'Ɔɛn', 'Doy', 'Lép', 'Rok', 'Sás', 'Bɔ́r', 'Kús', 'Gís', 'Shʉ́', 'Ntʉ́'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count olameyu', // less reliable\n    'y' => ':count olameyu', // less reliable\n    'a_year' => ':count olameyu', // less reliable\n\n    'week' => ':count engolongeare orwiki', // less reliable\n    'w' => ':count engolongeare orwiki', // less reliable\n    'a_week' => ':count engolongeare orwiki', // less reliable\n\n    'hour' => ':count esahabu', // less reliable\n    'h' => ':count esahabu', // less reliable\n    'a_hour' => ':count esahabu', // less reliable\n\n    'second' => ':count are', // less reliable\n    's' => ':count are', // less reliable\n    'a_second' => ':count are', // less reliable\n\n    'month' => ':count olapa',\n    'm' => ':count olapa',\n    'a_month' => ':count olapa',\n\n    'day' => ':count enkolongʼ',\n    'd' => ':count enkolongʼ',\n    'a_day' => ':count enkolongʼ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/shs_CA.php","ext":"php","size":1574,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Neskie Manuel    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Pellkwet̓min', 'Pelctsipwen̓ten', 'Pellsqépts', 'Peslléwten', 'Pell7ell7é7llqten', 'Pelltspéntsk', 'Pelltqwelq̓wél̓t', 'Pellct̓éxel̓cten', 'Pesqelqlélten', 'Pesllwélsten', 'Pellc7ell7é7llcwten̓', 'Pelltetétq̓em'],\n    'months_short' => ['Kwe', 'Tsi', 'Sqe', 'Éwt', 'Ell', 'Tsp', 'Tqw', 'Ct̓é', 'Qel', 'Wél', 'U7l', 'Tet'],\n    'weekdays' => ['Sxetspesq̓t', 'Spetkesq̓t', 'Selesq̓t', 'Skellesq̓t', 'Smesesq̓t', 'Stselkstesq̓t', 'Stqmekstesq̓t'],\n    'weekdays_short' => ['Sxe', 'Spe', 'Sel', 'Ske', 'Sme', 'Sts', 'Stq'],\n    'weekdays_min' => ['Sxe', 'Spe', 'Sel', 'Ske', 'Sme', 'Sts', 'Stq'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count sqlélten', // less reliable\n    'y' => ':count sqlélten', // less reliable\n    'a_year' => ':count sqlélten', // less reliable\n\n    'month' => ':count swewll', // less reliable\n    'm' => ':count swewll', // less reliable\n    'a_month' => ':count swewll', // less reliable\n\n    'hour' => ':count seqwlút', // less reliable\n    'h' => ':count seqwlút', // less reliable\n    'a_hour' => ':count seqwlút', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/jgo.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yi.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/yi_US.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yue_Hant.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hant.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/az_Latn.php","ext":"php","size":1244,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/az.php', [\n    'meridiem' => ['a', 'p'],\n    'weekdays' => ['bazar', 'bazar ertəsi', 'çərşənbə axşamı', 'çərşənbə', 'cümə axşamı', 'cümə', 'şənbə'],\n    'weekdays_short' => ['B.', 'B.E.', 'Ç.A.', 'Ç.', 'C.A.', 'C.', 'Ş.'],\n    'weekdays_min' => ['B.', 'B.E.', 'Ç.A.', 'Ç.', 'C.A.', 'C.', 'Ş.'],\n    'months' => ['yanvar', 'fevral', 'mart', 'aprel', 'may', 'iyun', 'iyul', 'avqust', 'sentyabr', 'oktyabr', 'noyabr', 'dekabr'],\n    'months_short' => ['yan', 'fev', 'mar', 'apr', 'may', 'iyn', 'iyl', 'avq', 'sen', 'okt', 'noy', 'dek'],\n    'months_standalone' => ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'İyun', 'İyul', 'Avqust', 'Sentyabr', 'Oktyabr', 'Noyabr', 'Dekabr'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'D MMMM YYYY, dddd HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ks_IN.php","ext":"php","size":2282,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat, Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'M/D/YY',\n    ],\n    'months' => ['جنؤری', 'فرؤری', 'مارٕچ', 'اپریل', 'میٔ', 'جوٗن', 'جوٗلایی', 'اگست', 'ستمبر', 'اکتوٗبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنؤری', 'فرؤری', 'مارٕچ', 'اپریل', 'میٔ', 'جوٗن', 'جوٗلایی', 'اگست', 'ستمبر', 'اکتوٗبر', 'نومبر', 'دسمبر'],\n    'weekdays' => ['آتهوار', 'ژءندروار', 'بوءںوار', 'بودهوار', 'برىسوار', 'جمع', 'بٹوار'],\n    'weekdays_short' => ['آتهوار', 'ژءنتروار', 'بوءںوار', 'بودهوار', 'برىسوار', 'جمع', 'بٹوار'],\n    'weekdays_min' => ['آتهوار', 'ژءنتروار', 'بوءںوار', 'بودهوار', 'برىسوار', 'جمع', 'بٹوار'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['دوپھربرونھ', 'دوپھرپتھ'],\n\n    'year' => ':count آب', // less reliable\n    'y' => ':count آب', // less reliable\n    'a_year' => ':count آب', // less reliable\n\n    'month' => ':count रान्', // less reliable\n    'm' => ':count रान्', // less reliable\n    'a_month' => ':count रान्', // less reliable\n\n    'week' => ':count آتھٕوار', // less reliable\n    'w' => ':count آتھٕوار', // less reliable\n    'a_week' => ':count آتھٕوار', // less reliable\n\n    'hour' => ':count سۄن', // less reliable\n    'h' => ':count سۄن', // less reliable\n    'a_hour' => ':count سۄن', // less reliable\n\n    'minute' => ':count فَن', // less reliable\n    'min' => ':count فَن', // less reliable\n    'a_minute' => ':count فَن', // less reliable\n\n    'second' => ':count दोʼयुम', // less reliable\n    's' => ':count दोʼयुम', // less reliable\n    'a_second' => ':count दोʼयुम', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ha_NE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ha.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ki.php","ext":"php","size":2213,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['Kiroko', 'Hwaĩ-inĩ'],\n    'weekdays' => ['Kiumia', 'Njumatatũ', 'Njumaine', 'Njumatana', 'Aramithi', 'Njumaa', 'Njumamothi'],\n    'weekdays_short' => ['KMA', 'NTT', 'NMN', 'NMT', 'ART', 'NMA', 'NMM'],\n    'weekdays_min' => ['KMA', 'NTT', 'NMN', 'NMT', 'ART', 'NMA', 'NMM'],\n    'months' => ['Njenuarĩ', 'Mwere wa kerĩ', 'Mwere wa gatatũ', 'Mwere wa kana', 'Mwere wa gatano', 'Mwere wa gatandatũ', 'Mwere wa mũgwanja', 'Mwere wa kanana', 'Mwere wa kenda', 'Mwere wa ikũmi', 'Mwere wa ikũmi na ũmwe', 'Ndithemba'],\n    'months_short' => ['JEN', 'WKR', 'WGT', 'WKN', 'WTN', 'WTD', 'WMJ', 'WNN', 'WKD', 'WIK', 'WMW', 'DIT'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count mĩaka', // less reliable\n    'y' => ':count mĩaka', // less reliable\n    'a_year' => ':count mĩaka', // less reliable\n\n    'month' => ':count mweri', // less reliable\n    'm' => ':count mweri', // less reliable\n    'a_month' => ':count mweri', // less reliable\n\n    'week' => ':count kiumia', // less reliable\n    'w' => ':count kiumia', // less reliable\n    'a_week' => ':count kiumia', // less reliable\n\n    'day' => ':count mũthenya', // less reliable\n    'd' => ':count mũthenya', // less reliable\n    'a_day' => ':count mũthenya', // less reliable\n\n    'hour' => ':count thaa', // less reliable\n    'h' => ':count thaa', // less reliable\n    'a_hour' => ':count thaa', // less reliable\n\n    'minute' => ':count mundu', // less reliable\n    'min' => ':count mundu', // less reliable\n    'a_minute' => ':count mundu', // less reliable\n\n    'second' => ':count igego', // less reliable\n    's' => ':count igego', // less reliable\n    'a_second' => ':count igego', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kw.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/kw_GB.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nan_TW@latin.php","ext":"php","size":1021,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Arne Goetje arne@canonical.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n    'months' => ['1goe̍h', '2goe̍h', '3goe̍h', '4goe̍h', '5goe̍h', '6goe̍h', '7goe̍h', '8goe̍h', '9goe̍h', '10goe̍h', '11goe̍h', '12goe̍h'],\n    'months_short' => ['1g', '2g', '3g', '4g', '5g', '6g', '7g', '8g', '9g', '10g', '11g', '12g'],\n    'weekdays' => ['lé-pài-ji̍t', 'pài-it', 'pài-jī', 'pài-saⁿ', 'pài-sì', 'pài-gō͘', 'pài-la̍k'],\n    'weekdays_short' => ['lp', 'p1', 'p2', 'p3', 'p4', 'p5', 'p6'],\n    'weekdays_min' => ['lp', 'p1', 'p2', 'p3', 'p4', 'p5', 'p6'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['téng-po͘', 'ē-po͘'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ku_TR.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ku.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_CA.php","ext":"php","size":679,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Zhan Tong Zhang\n * - Mayank Badola\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'MMMM D, YYYY',\n        'LLL' => 'MMMM D, YYYY h:mm A',\n        'LLLL' => 'dddd, MMMM D, YYYY h:mm A',\n    ],\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_HK.php","ext":"php","size":445,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory  bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bhb.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/bhb_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_150.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GD.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lzh_TW.php","ext":"php","size":2218,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'OY[年]MMMMOD[日]',\n    ],\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => [' 一 ', ' 二 ', ' 三 ', ' 四 ', ' 五 ', ' 六 ', ' 七 ', ' 八 ', ' 九 ', ' 十 ', '十一', '十二'],\n    'weekdays' => ['週日', '週一', '週二', '週三', '週四', '週五', '週六'],\n    'weekdays_short' => ['日', '一', '二', '三', '四', '五', '六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '廿', '廿一', '廿二', '廿三', '廿四', '廿五', '廿六', '廿七', '廿八', '廿九', '卅', '卅一'],\n    'meridiem' => ['朝', '暮'],\n\n    'year' => ':count 夏', // less reliable\n    'y' => ':count 夏', // less reliable\n    'a_year' => ':count 夏', // less reliable\n\n    'month' => ':count 月', // less reliable\n    'm' => ':count 月', // less reliable\n    'a_month' => ':count 月', // less reliable\n\n    'hour' => ':count 氧', // less reliable\n    'h' => ':count 氧', // less reliable\n    'a_hour' => ':count 氧', // less reliable\n\n    'minute' => ':count 點', // less reliable\n    'min' => ':count 點', // less reliable\n    'a_minute' => ':count 點', // less reliable\n\n    'second' => ':count 楚', // less reliable\n    's' => ':count 楚', // less reliable\n    'a_second' => ':count 楚', // less reliable\n\n    'week' => ':count 星期',\n    'w' => ':count 星期',\n    'a_week' => ':count 星期',\n\n    'day' => ':count 日(曆法)',\n    'd' => ':count 日(曆法)',\n    'a_day' => ':count 日(曆法)',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/rn.php","ext":"php","size":1865,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Z.MU.', 'Z.MW.'],\n    'weekdays' => ['Ku w’indwi', 'Ku wa mbere', 'Ku wa kabiri', 'Ku wa gatatu', 'Ku wa kane', 'Ku wa gatanu', 'Ku wa gatandatu'],\n    'weekdays_short' => ['cu.', 'mbe.', 'kab.', 'gtu.', 'kan.', 'gnu.', 'gnd.'],\n    'weekdays_min' => ['cu.', 'mbe.', 'kab.', 'gtu.', 'kan.', 'gnu.', 'gnd.'],\n    'months' => ['Nzero', 'Ruhuhuma', 'Ntwarante', 'Ndamukiza', 'Rusama', 'Ruheshi', 'Mukakaro', 'Nyandagaro', 'Nyakanga', 'Gitugutu', 'Munyonyo', 'Kigarama'],\n    'months_short' => ['Mut.', 'Gas.', 'Wer.', 'Mat.', 'Gic.', 'Kam.', 'Nya.', 'Kan.', 'Nze.', 'Ukw.', 'Ugu.', 'Uku.'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n\n    'year' => 'imyaka :count',\n    'y' => 'imyaka :count',\n    'a_year' => 'imyaka :count',\n\n    'month' => 'amezi :count',\n    'm' => 'amezi :count',\n    'a_month' => 'amezi :count',\n\n    'week' => 'indwi :count',\n    'w' => 'indwi :count',\n    'a_week' => 'indwi :count',\n\n    'day' => 'imisi :count',\n    'd' => 'imisi :count',\n    'a_day' => 'imisi :count',\n\n    'hour' => 'amasaha :count',\n    'h' => 'amasaha :count',\n    'a_hour' => 'amasaha :count',\n\n    'minute' => 'iminuta :count',\n    'min' => 'iminuta :count',\n    'a_minute' => 'iminuta :count',\n\n    'second' => 'inguvu :count', // less reliable\n    's' => 'inguvu :count', // less reliable\n    'a_second' => 'inguvu :count', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pl_PL.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kab_DZ.php","ext":"php","size":1816,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - belkacem77@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Yennayer', 'Fuṛar', 'Meɣres', 'Yebrir', 'Mayyu', 'Yunyu', 'Yulyu', 'ɣuct', 'Ctembeṛ', 'Tubeṛ', 'Wambeṛ', 'Dujembeṛ'],\n    'months_short' => ['Yen', 'Fur', 'Meɣ', 'Yeb', 'May', 'Yun', 'Yul', 'ɣuc', 'Cte', 'Tub', 'Wam', 'Duj'],\n    'weekdays' => ['Acer', 'Arim', 'Aram', 'Ahad', 'Amhad', 'Sem', 'Sed'],\n    'weekdays_short' => ['Ace', 'Ari', 'Ara', 'Aha', 'Amh', 'Sem', 'Sed'],\n    'weekdays_min' => ['Ace', 'Ari', 'Ara', 'Aha', 'Amh', 'Sem', 'Sed'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['FT', 'MD'],\n\n    'year' => ':count n yiseggasen',\n    'y' => ':count n yiseggasen',\n    'a_year' => ':count n yiseggasen',\n\n    'month' => ':count n wayyuren',\n    'm' => ':count n wayyuren',\n    'a_month' => ':count n wayyuren',\n\n    'week' => ':count n ledwaṛ', // less reliable\n    'w' => ':count n ledwaṛ', // less reliable\n    'a_week' => ':count n ledwaṛ', // less reliable\n\n    'day' => ':count n wussan',\n    'd' => ':count n wussan',\n    'a_day' => ':count n wussan',\n\n    'hour' => ':count n tsaɛtin',\n    'h' => ':count n tsaɛtin',\n    'a_hour' => ':count n tsaɛtin',\n\n    'minute' => ':count n tedqiqin',\n    'min' => ':count n tedqiqin',\n    'a_minute' => ':count n tedqiqin',\n\n    'second' => ':count tasdidt', // less reliable\n    's' => ':count tasdidt', // less reliable\n    'a_second' => ':count tasdidt', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hi.php","ext":"php","size":3255,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - abhimanyu003\n * - Josh Soref\n * - JD Isaacks\n */\nreturn [\n    'year' => 'एक वर्ष|:count वर्ष',\n    'y' => '1 वर्ष|:count वर्षों',\n    'month' => 'एक महीने|:count महीने',\n    'm' => '1 माह|:count महीने',\n    'week' => '1 सप्ताह|:count सप्ताह',\n    'w' => '1 सप्ताह|:count सप्ताह',\n    'day' => 'एक दिन|:count दिन',\n    'd' => '1 दिन|:count दिनों',\n    'hour' => 'एक घंटा|:count घंटे',\n    'h' => '1 घंटा|:count घंटे',\n    'minute' => 'एक मिनट|:count मिनट',\n    'min' => '1 मिनट|:count मिनटों',\n    'second' => 'कुछ ही क्षण|:count सेकंड',\n    's' => '1 सेकंड|:count सेकंड',\n    'ago' => ':time पहले',\n    'from_now' => ':time में',\n    'after' => ':time के बाद',\n    'before' => ':time के पहले',\n    'diff_now' => 'अब',\n    'diff_today' => 'आज',\n    'diff_yesterday' => 'कल',\n    'diff_tomorrow' => 'कल',\n    'formats' => [\n        'LT' => 'A h:mm बजे',\n        'LTS' => 'A h:mm:ss बजे',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm बजे',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm बजे',\n    ],\n    'calendar' => [\n        'sameDay' => '[आज] LT',\n        'nextDay' => '[कल] LT',\n        'nextWeek' => 'dddd, LT',\n        'lastDay' => '[कल] LT',\n        'lastWeek' => '[पिछले] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'रात';\n        }\n        if ($hour < 10) {\n            return 'सुबह';\n        }\n        if ($hour < 17) {\n            return 'दोपहर';\n        }\n        if ($hour < 20) {\n            return 'शाम';\n        }\n\n        return 'रात';\n    },\n    'months' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'months_short' => ['जन.', 'फ़र.', 'मार्च', 'अप्रै.', 'मई', 'जून', 'जुल.', 'अग.', 'सित.', 'अक्टू.', 'नव.', 'दिस.'],\n    'weekdays' => ['रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरूवार', 'शुक्रवार', 'शनिवार'],\n    'weekdays_short' => ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरू', 'शुक्र', 'शनि'],\n    'weekdays_min' => ['र', 'सो', 'मं', 'बु', 'गु', 'शु', 'श'],\n    'list' => [', ', ' और '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'weekend' => [0, 0],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yo_NG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/yo.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wo_SN.php","ext":"php","size":1314,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - The Debian Project Christian Perrier bubulle@debian.org\n */\nreturn [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'MMMM DD, YYYY',\n        'LLL' => 'DD MMM HH:mm',\n        'LLLL' => 'MMMM DD, YYYY HH:mm',\n    ],\n    'months' => ['sanwiy\\'e', 'feebriy\\'e', 'mars', 'awril', 'me', 'suwen', 'sulet', 'uut', 'septaambar', 'oktoobar', 'nowaambar', 'desaambar'],\n    'months_short' => ['san', 'fee', 'mar', 'awr', 'me ', 'suw', 'sul', 'uut', 'sep', 'okt', 'now', 'des'],\n    'weekdays' => ['dib\\'eer', 'altine', 'talaata', 'allarba', 'alxames', 'ajjuma', 'gaawu'],\n    'weekdays_short' => ['dib', 'alt', 'tal', 'all', 'alx', 'ajj', 'gaa'],\n    'weekdays_min' => ['dib', 'alt', 'tal', 'all', 'alx', 'ajj', 'gaa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'year' => ':count at',\n    'month' => ':count wèr',\n    'week' => ':count ayubés',\n    'day' => ':count bés',\n    'hour' => ':count waxtu',\n    'minute' => ':count simili',\n    'second' => ':count saa',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pa_IN.php","ext":"php","size":355,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Guo Xiang Tan\n * - Josh Soref\n * - Ash\n * - harpreetkhalsagtbit\n */\nreturn require __DIR__.'/pa.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MQ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/raj.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/raj_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tig.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/tig_ER.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_CK.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hsb_DE.php","ext":"php","size":1867,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Information from Michael Wolf Andrzej Krzysztofowicz ankry@mif.pg.gda.pl\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'DD. MMMM YYYY',\n        'LLL' => 'DD. MMMM, HH:mm [hodź.]',\n        'LLLL' => 'dddd, DD. MMMM YYYY, HH:mm [hodź.]',\n    ],\n    'months' => ['januara', 'februara', 'měrca', 'apryla', 'meje', 'junija', 'julija', 'awgusta', 'septembra', 'oktobra', 'nowembra', 'decembra'],\n    'months_short' => ['Jan', 'Feb', 'Měr', 'Apr', 'Mej', 'Jun', 'Jul', 'Awg', 'Sep', 'Okt', 'Now', 'Dec'],\n    'weekdays' => ['Njedźela', 'Póndźela', 'Wutora', 'Srjeda', 'Štvórtk', 'Pjatk', 'Sobota'],\n    'weekdays_short' => ['Nj', 'Pó', 'Wu', 'Sr', 'Št', 'Pj', 'So'],\n    'weekdays_min' => ['Nj', 'Pó', 'Wu', 'Sr', 'Št', 'Pj', 'So'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'year' => ':count lěto',\n    'y' => ':count lěto',\n    'a_year' => ':count lěto',\n\n    'month' => ':count měsac',\n    'm' => ':count měsac',\n    'a_month' => ':count měsac',\n\n    'week' => ':count tydźeń',\n    'w' => ':count tydźeń',\n    'a_week' => ':count tydźeń',\n\n    'day' => ':count dźeń',\n    'd' => ':count dźeń',\n    'a_day' => ':count dźeń',\n\n    'hour' => ':count hodźina',\n    'h' => ':count hodźina',\n    'a_hour' => ':count hodźina',\n\n    'minute' => ':count chwila',\n    'min' => ':count chwila',\n    'a_minute' => ':count chwila',\n\n    'second' => ':count druhi',\n    's' => ':count druhi',\n    'a_second' => ':count druhi',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ky_KG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ky.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mhr.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mhr_RU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_PG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sid_ET.php","ext":"php","size":1018,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'weekdays' => ['Sambata', 'Sanyo', 'Maakisanyo', 'Roowe', 'Hamuse', 'Arbe', 'Qidaame'],\n    'weekdays_short' => ['Sam', 'San', 'Mak', 'Row', 'Ham', 'Arb', 'Qid'],\n    'weekdays_min' => ['Sam', 'San', 'Mak', 'Row', 'Ham', 'Arb', 'Qid'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['soodo', 'hawwaro'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ca_ES.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ca.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pa.php","ext":"php","size":3079,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - Punjab\n */\nreturn [\n    'year' => 'ਇੱਕ ਸਾਲ|:count ਸਾਲ',\n    'month' => 'ਇੱਕ ਮਹੀਨਾ|:count ਮਹੀਨੇ',\n    'week' => 'ਹਫਤਾ|:count ਹਫ਼ਤੇ',\n    'day' => 'ਇੱਕ ਦਿਨ|:count ਦਿਨ',\n    'hour' => 'ਇੱਕ ਘੰਟਾ|:count ਘੰਟੇ',\n    'minute' => 'ਇਕ ਮਿੰਟ|:count ਮਿੰਟ',\n    'second' => 'ਕੁਝ ਸਕਿੰਟ|:count ਸਕਿੰਟ',\n    'ago' => ':time ਪਹਿਲਾਂ',\n    'from_now' => ':time ਵਿੱਚ',\n    'before' => ':time ਤੋਂ ਪਹਿਲਾਂ',\n    'after' => ':time ਤੋਂ ਬਾਅਦ',\n    'diff_now' => 'ਹੁਣ',\n    'diff_today' => 'ਅਜ',\n    'diff_yesterday' => 'ਕਲ',\n    'diff_tomorrow' => 'ਕਲ',\n    'formats' => [\n        'LT' => 'A h:mm ਵਜੇ',\n        'LTS' => 'A h:mm:ss ਵਜੇ',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm ਵਜੇ',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',\n    ],\n    'calendar' => [\n        'sameDay' => '[ਅਜ] LT',\n        'nextDay' => '[ਕਲ] LT',\n        'nextWeek' => '[ਅਗਲਾ] dddd, LT',\n        'lastDay' => '[ਕਲ] LT',\n        'lastWeek' => '[ਪਿਛਲੇ] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'ਰਾਤ';\n        }\n        if ($hour < 10) {\n            return 'ਸਵੇਰ';\n        }\n        if ($hour < 17) {\n            return 'ਦੁਪਹਿਰ';\n        }\n        if ($hour < 20) {\n            return 'ਸ਼ਾਮ';\n        }\n\n        return 'ਰਾਤ';\n    },\n    'months' => ['ਜਨਵਰੀ', 'ਫ਼ਰਵਰੀ', 'ਮਾਰਚ', 'ਅਪ੍ਰੈਲ', 'ਮਈ', 'ਜੂਨ', 'ਜੁਲਾਈ', 'ਅਗਸਤ', 'ਸਤੰਬਰ', 'ਅਕਤੂਬਰ', 'ਨਵੰਬਰ', 'ਦਸੰਬਰ'],\n    'months_short' => ['ਜਨਵਰੀ', 'ਫ਼ਰਵਰੀ', 'ਮਾਰਚ', 'ਅਪ੍ਰੈਲ', 'ਮਈ', 'ਜੂਨ', 'ਜੁਲਾਈ', 'ਅਗਸਤ', 'ਸਤੰਬਰ', 'ਅਕਤੂਬਰ', 'ਨਵੰਬਰ', 'ਦਸੰਬਰ'],\n    'weekdays' => ['ਐਤਵਾਰ', 'ਸੋਮਵਾਰ', 'ਮੰਗਲਵਾਰ', 'ਬੁਧਵਾਰ', 'ਵੀਰਵਾਰ', 'ਸ਼ੁੱਕਰਵਾਰ', 'ਸ਼ਨੀਚਰਵਾਰ'],\n    'weekdays_short' => ['ਐਤ', 'ਸੋਮ', 'ਮੰਗਲ', 'ਬੁਧ', 'ਵੀਰ', 'ਸ਼ੁਕਰ', 'ਸ਼ਨੀ'],\n    'weekdays_min' => ['ਐਤ', 'ਸੋਮ', 'ਮੰਗਲ', 'ਬੁਧ', 'ਵੀਰ', 'ਸ਼ੁਕਰ', 'ਸ਼ਨੀ'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' ਅਤੇ '],\n    'weekend' => [0, 0],\n    'alt_numbers' => ['੦', '੧', '੨', '੩', '੪', '੫', '੬', '੭', '੮', '੯'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_GM.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sd.php","ext":"php","size":2322,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n$months = [\n    'جنوري',\n    'فيبروري',\n    'مارچ',\n    'اپريل',\n    'مئي',\n    'جون',\n    'جولاءِ',\n    'آگسٽ',\n    'سيپٽمبر',\n    'آڪٽوبر',\n    'نومبر',\n    'ڊسمبر',\n];\n\n$weekdays = [\n    'آچر',\n    'سومر',\n    'اڱارو',\n    'اربع',\n    'خميس',\n    'جمع',\n    'ڇنڇر',\n];\n\n/*\n * Authors:\n * - Narain Sagar\n * - Sawood Alam\n */\nreturn [\n    'year' => ':count '.'سال',\n    'a_year' => '{1}'.'هڪ سال'.'|:count '.'سال',\n    'month' => ':count '.'مهينا',\n    'a_month' => '{1}'.'هڪ مهينو'.'|:count '.'مهينا',\n    'week' => ':count '.'هفتا',\n    'a_week' => '{1}'.'ھڪ ھفتو'.'|:count '.'هفتا',\n    'day' => ':count '.'ڏينهن',\n    'a_day' => '{1}'.'هڪ ڏينهن'.'|:count '.'ڏينهن',\n    'hour' => ':count '.'ڪلاڪ',\n    'a_hour' => '{1}'.'هڪ ڪلاڪ'.'|:count '.'ڪلاڪ',\n    'minute' => ':count '.'منٽ',\n    'a_minute' => '{1}'.'هڪ منٽ'.'|:count '.'منٽ',\n    'second' => ':count '.'سيڪنڊ',\n    'a_second' => '{1}'.'چند سيڪنڊ'.'|:count '.'سيڪنڊ',\n    'ago' => ':time اڳ',\n    'from_now' => ':time پوء',\n    'diff_yesterday' => 'ڪالهه',\n    'diff_today' => 'اڄ',\n    'diff_tomorrow' => 'سڀاڻي',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd، D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اڄ] LT',\n        'nextDay' => '[سڀاڻي] LT',\n        'nextWeek' => 'dddd [اڳين هفتي تي] LT',\n        'lastDay' => '[ڪالهه] LT',\n        'lastWeek' => '[گزريل هفتي] dddd [تي] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['صبح', 'شام'],\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => $weekdays,\n    'weekdays_short' => $weekdays,\n    'weekdays_min' => $weekdays,\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => ['، ', ' ۽ '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ts.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ts_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gu_IN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/gu.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ast_ES.php","ext":"php","size":268,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ast.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Cyrl_XK.php","ext":"php","size":735,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'sr');\n    }, 'sr_Cyrl_XK');\n}\n// @codeCoverageIgnoreEnd\n\nreturn array_replace_recursive(require __DIR__.'/sr_Cyrl_BA.php', [\n    'weekdays' => ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/szl.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/szl_PL.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MC.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kln.php","ext":"php","size":1274,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['krn', 'koosk'],\n    'weekdays' => ['Kotisap', 'Kotaai', 'Koaeng’', 'Kosomok', 'Koang’wan', 'Komuut', 'Kolo'],\n    'weekdays_short' => ['Kts', 'Kot', 'Koo', 'Kos', 'Koa', 'Kom', 'Kol'],\n    'weekdays_min' => ['Kts', 'Kot', 'Koo', 'Kos', 'Koa', 'Kom', 'Kol'],\n    'months' => ['Mulgul', 'Ng’atyaato', 'Kiptaamo', 'Iwootkuut', 'Mamuut', 'Paagi', 'Ng’eiyeet', 'Rooptui', 'Bureet', 'Epeeso', 'Kipsuunde ne taai', 'Kipsuunde nebo aeng’'],\n    'months_short' => ['Mul', 'Ngat', 'Taa', 'Iwo', 'Mam', 'Paa', 'Nge', 'Roo', 'Bur', 'Epe', 'Kpt', 'Kpa'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count maghatiat', // less reliable\n    'y' => ':count maghatiat', // less reliable\n    'a_year' => ':count maghatiat', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cgg.php","ext":"php","size":1271,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['Sande', 'Orwokubanza', 'Orwakabiri', 'Orwakashatu', 'Orwakana', 'Orwakataano', 'Orwamukaaga'],\n    'weekdays_short' => ['SAN', 'ORK', 'OKB', 'OKS', 'OKN', 'OKT', 'OMK'],\n    'weekdays_min' => ['SAN', 'ORK', 'OKB', 'OKS', 'OKN', 'OKT', 'OMK'],\n    'months' => ['Okwokubanza', 'Okwakabiri', 'Okwakashatu', 'Okwakana', 'Okwakataana', 'Okwamukaaga', 'Okwamushanju', 'Okwamunaana', 'Okwamwenda', 'Okwaikumi', 'Okwaikumi na kumwe', 'Okwaikumi na ibiri'],\n    'months_short' => ['KBZ', 'KBR', 'KST', 'KKN', 'KTN', 'KMK', 'KMS', 'KMN', 'KMW', 'KKM', 'KNK', 'KNB'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'day' => ':count ruhanga', // less reliable\n    'd' => ':count ruhanga', // less reliable\n    'a_day' => ':count ruhanga', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_QA.php","ext":"php","size":1996,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru_UA.php","ext":"php","size":693,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RFC 2319    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/ru.php', [\n    'weekdays' => ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\n    'weekdays_short' => ['вск', 'пнд', 'вто', 'срд', 'чтв', 'птн', 'суб'],\n    'weekdays_min' => ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'су'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mk_MK.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/mk.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cu.php","ext":"php","size":1567,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'months' => ['M01', 'M02', 'M03', 'M04', 'M05', 'M06', 'M07', 'M08', 'M09', 'M10', 'M11', 'M12'],\n    'months_short' => ['M01', 'M02', 'M03', 'M04', 'M05', 'M06', 'M07', 'M08', 'M09', 'M10', 'M11', 'M12'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'YYYY MMMM D, dddd HH:mm',\n    ],\n\n    'year' => ':count лѣто',\n    'y' => ':count лѣто',\n    'a_year' => ':count лѣто',\n\n    'month' => ':count мѣсѧць',\n    'm' => ':count мѣсѧць',\n    'a_month' => ':count мѣсѧць',\n\n    'week' => ':count сєдмица',\n    'w' => ':count сєдмица',\n    'a_week' => ':count сєдмица',\n\n    'day' => ':count дьнь',\n    'd' => ':count дьнь',\n    'a_day' => ':count дьнь',\n\n    'hour' => ':count година',\n    'h' => ':count година',\n    'a_hour' => ':count година',\n\n    'minute' => ':count малъ', // less reliable\n    'min' => ':count малъ', // less reliable\n    'a_minute' => ':count малъ', // less reliable\n\n    'second' => ':count въторъ',\n    's' => ':count въторъ',\n    'a_second' => ':count въторъ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tr.php","ext":"php","size":4008,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Alan Agius\n * - Erhan Gundogan\n * - François B\n * - JD Isaacks\n * - Murat Yüksel\n * - Baran Şengül\n * - Selami (selamialtin)\n * - TeomanBey\n */\nreturn [\n    'year' => ':count yıl',\n    'a_year' => '{1}bir yıl|[-Inf,Inf]:count yıl',\n    'y' => ':county',\n    'month' => ':count ay',\n    'a_month' => '{1}bir ay|[-Inf,Inf]:count ay',\n    'm' => ':countay',\n    'week' => ':count hafta',\n    'a_week' => '{1}bir hafta|[-Inf,Inf]:count hafta',\n    'w' => ':counth',\n    'day' => ':count gün',\n    'a_day' => '{1}bir gün|[-Inf,Inf]:count gün',\n    'd' => ':countg',\n    'hour' => ':count saat',\n    'a_hour' => '{1}bir saat|[-Inf,Inf]:count saat',\n    'h' => ':countsa',\n    'minute' => ':count dakika',\n    'a_minute' => '{1}bir dakika|[-Inf,Inf]:count dakika',\n    'min' => ':countdk',\n    'second' => ':count saniye',\n    'a_second' => '{1}birkaç saniye|[-Inf,Inf]:count saniye',\n    's' => ':countsn',\n    'ago' => ':time önce',\n    'from_now' => ':time sonra',\n    'after' => ':time sonra',\n    'before' => ':time önce',\n    'diff_now' => 'şimdi',\n    'diff_today' => 'bugün',\n    'diff_today_regexp' => 'bugün(?:\\\\s+saat)?',\n    'diff_yesterday' => 'dün',\n    'diff_tomorrow' => 'yarın',\n    'diff_tomorrow_regexp' => 'yarın(?:\\\\s+saat)?',\n    'diff_before_yesterday' => 'evvelsi gün',\n    'diff_after_tomorrow' => 'öbür gün',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[bugün saat] LT',\n        'nextDay' => '[yarın saat] LT',\n        'nextWeek' => '[gelecek] dddd [saat] LT',\n        'lastDay' => '[dün] LT',\n        'lastWeek' => '[geçen] dddd [saat] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        switch ($period) {\n            case 'd':\n            case 'D':\n            case 'Do':\n            case 'DD':\n                return $number;\n            default:\n                if ($number === 0) {  // special case for zero\n                    return \"$number'ıncı\";\n                }\n\n                static $suffixes = [\n                    1 => '\\'inci',\n                    5 => '\\'inci',\n                    8 => '\\'inci',\n                    70 => '\\'inci',\n                    80 => '\\'inci',\n                    2 => '\\'nci',\n                    7 => '\\'nci',\n                    20 => '\\'nci',\n                    50 => '\\'nci',\n                    3 => '\\'üncü',\n                    4 => '\\'üncü',\n                    100 => '\\'üncü',\n                    6 => '\\'ncı',\n                    9 => '\\'uncu',\n                    10 => '\\'uncu',\n                    30 => '\\'uncu',\n                    60 => '\\'ıncı',\n                    90 => '\\'ıncı',\n                ];\n\n                $lastDigit = $number % 10;\n\n                return $number.($suffixes[$lastDigit] ?? $suffixes[$number % 100 - $lastDigit] ?? $suffixes[$number >= 100 ? 100 : -1] ?? '');\n        }\n    },\n    'meridiem' => ['ÖÖ', 'ÖS', 'öö', 'ös'],\n    'months' => ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],\n    'months_short' => ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],\n    'weekdays' => ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi'],\n    'weekdays_short' => ['Paz', 'Pts', 'Sal', 'Çar', 'Per', 'Cum', 'Cts'],\n    'weekdays_min' => ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' ve '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tg_TJ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/tg.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_LU.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dyo.php","ext":"php","size":1022,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['Dimas', 'Teneŋ', 'Talata', 'Alarbay', 'Aramisay', 'Arjuma', 'Sibiti'],\n    'weekdays_short' => ['Dim', 'Ten', 'Tal', 'Ala', 'Ara', 'Arj', 'Sib'],\n    'weekdays_min' => ['Dim', 'Ten', 'Tal', 'Ala', 'Ara', 'Arj', 'Sib'],\n    'months' => ['Sanvie', 'Fébirie', 'Mars', 'Aburil', 'Mee', 'Sueŋ', 'Súuyee', 'Ut', 'Settembar', 'Oktobar', 'Novembar', 'Disambar'],\n    'months_short' => ['Sa', 'Fe', 'Ma', 'Ab', 'Me', 'Su', 'Sú', 'Ut', 'Se', 'Ok', 'No', 'De'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ml_IN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ml.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_VC.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kok_IN.php","ext":"php","size":2734,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat, Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D-M-YY',\n    ],\n    'months' => ['जानेवारी', 'फेब्रुवारी', 'मार्च', 'एप्रिल', 'मे', 'जून', 'जुलै', 'ओगस्ट', 'सेप्टेंबर', 'ओक्टोबर', 'नोव्हेंबर', 'डिसेंबर'],\n    'months_short' => ['जानेवारी', 'फेब्रुवारी', 'मार्च', 'एप्रिल', 'मे', 'जून', 'जुलै', 'ओगस्ट', 'सेप्टेंबर', 'ओक्टोबर', 'नोव्हेंबर', 'डिसेंबर'],\n    'weekdays' => ['आयतार', 'सोमार', 'मंगळवार', 'बुधवार', 'बेरेसतार', 'शुकरार', 'शेनवार'],\n    'weekdays_short' => ['आयतार', 'सोमार', 'मंगळवार', 'बुधवार', 'बेरेसतार', 'शुकरार', 'शेनवार'],\n    'weekdays_min' => ['आयतार', 'सोमार', 'मंगळवार', 'बुधवार', 'बेरेसतार', 'शुकरार', 'शेनवार'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['म.पू.', 'म.नं.'],\n\n    'year' => ':count वैशाकु', // less reliable\n    'y' => ':count वैशाकु', // less reliable\n    'a_year' => ':count वैशाकु', // less reliable\n\n    'week' => ':count आदित्यवार', // less reliable\n    'w' => ':count आदित्यवार', // less reliable\n    'a_week' => ':count आदित्यवार', // less reliable\n\n    'minute' => ':count नोंद', // less reliable\n    'min' => ':count नोंद', // less reliable\n    'a_minute' => ':count नोंद', // less reliable\n\n    'second' => ':count तेंको', // less reliable\n    's' => ':count तेंको', // less reliable\n    'a_second' => ':count तेंको', // less reliable\n\n    'month' => ':count मैनो',\n    'm' => ':count मैनो',\n    'a_month' => ':count मैनो',\n\n    'day' => ':count दिवसु',\n    'd' => ':count दिवसु',\n    'a_day' => ':count दिवसु',\n\n    'hour' => ':count घंते',\n    'h' => ':count घंते',\n    'a_hour' => ':count घंते',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ka_GE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ka.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mhr_RU.php","ext":"php","size":1916,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - PeshSajSoft Ltd. Vyacheslav Kileev slavakileev@yandex.ru\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY.MM.DD',\n    ],\n    'months' => ['Шорыкйол', 'Пургыж', 'Ӱярня', 'Вӱдшор', 'Ага', 'Пеледыш', 'Сӱрем', 'Сорла', 'Идым', 'Шыжа', 'Кылме', 'Теле'],\n    'months_short' => ['Шрк', 'Пгж', 'Ӱрн', 'Вшр', 'Ага', 'Пдш', 'Срм', 'Срл', 'Идм', 'Шыж', 'Клм', 'Тел'],\n    'weekdays' => ['Рушарня', 'Шочмо', 'Кушкыжмо', 'Вӱргече', 'Изарня', 'Кугарня', 'Шуматкече'],\n    'weekdays_short' => ['Ршр', 'Шчм', 'Кжм', 'Вгч', 'Изр', 'Кгр', 'Шмт'],\n    'weekdays_min' => ['Ршр', 'Шчм', 'Кжм', 'Вгч', 'Изр', 'Кгр', 'Шмт'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count идалык',\n    'y' => ':count идалык',\n    'a_year' => ':count идалык',\n\n    'month' => ':count Тылзе',\n    'm' => ':count Тылзе',\n    'a_month' => ':count Тылзе',\n\n    'week' => ':count арня',\n    'w' => ':count арня',\n    'a_week' => ':count арня',\n\n    'day' => ':count кече',\n    'd' => ':count кече',\n    'a_day' => ':count кече',\n\n    'hour' => ':count час',\n    'h' => ':count час',\n    'a_hour' => ':count час',\n\n    'minute' => ':count минут',\n    'min' => ':count минут',\n    'a_minute' => ':count минут',\n\n    'second' => ':count кокымшан',\n    's' => ':count кокымшан',\n    'a_second' => ':count кокымшан',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/id.php","ext":"php","size":2933,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - du\n * - JD Isaacks\n * - Nafies Luthfi\n * - Raymundus Jati Primanda (mundusjp)\n * - diankur313\n * - a-wip0\n */\nreturn [\n    'year' => ':count tahun',\n    'a_year' => '{1}setahun|[-Inf,Inf]:count tahun',\n    'y' => ':countthn',\n    'month' => ':count bulan',\n    'a_month' => '{1}sebulan|[-Inf,Inf]:count bulan',\n    'm' => ':countbln',\n    'week' => ':count minggu',\n    'a_week' => '{1}seminggu|[-Inf,Inf]:count minggu',\n    'w' => ':countmgg',\n    'day' => ':count hari',\n    'a_day' => '{1}sehari|[-Inf,Inf]:count hari',\n    'd' => ':counthr',\n    'hour' => ':count jam',\n    'a_hour' => '{1}sejam|[-Inf,Inf]:count jam',\n    'h' => ':countj',\n    'minute' => ':count menit',\n    'a_minute' => '{1}semenit|[-Inf,Inf]:count menit',\n    'min' => ':countmnt',\n    'second' => ':count detik',\n    'a_second' => '{1}beberapa detik|[-Inf,Inf]:count detik',\n    's' => ':countdt',\n    'ago' => ':time yang lalu',\n    'from_now' => ':time dari sekarang',\n    'after' => ':time setelahnya',\n    'before' => ':time sebelumnya',\n    'diff_now' => 'sekarang',\n    'diff_today' => 'Hari',\n    'diff_today_regexp' => 'Hari(?:\\\\s+ini)?(?:\\\\s+pukul)?',\n    'diff_yesterday' => 'kemarin',\n    'diff_yesterday_regexp' => 'Kemarin(?:\\\\s+pukul)?',\n    'diff_tomorrow' => 'besok',\n    'diff_tomorrow_regexp' => 'Besok(?:\\\\s+pukul)?',\n    'formats' => [\n        'LT' => 'HH.mm',\n        'LTS' => 'HH.mm.ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY [pukul] HH.mm',\n        'LLLL' => 'dddd, D MMMM YYYY [pukul] HH.mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Hari ini pukul] LT',\n        'nextDay' => '[Besok pukul] LT',\n        'nextWeek' => 'dddd [pukul] LT',\n        'lastDay' => '[Kemarin pukul] LT',\n        'lastWeek' => 'dddd [lalu pukul] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 11) {\n            return 'pagi';\n        }\n        if ($hour < 15) {\n            return 'siang';\n        }\n        if ($hour < 19) {\n            return 'sore';\n        }\n\n        return 'malam';\n    },\n    'months' => ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agt', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'],\n    'weekdays_short' => ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab'],\n    'weekdays_min' => ['Mg', 'Sn', 'Sl', 'Rb', 'Km', 'Jm', 'Sb'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' dan '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/guz.php","ext":"php","size":1728,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['Ma', 'Mo'],\n    'weekdays' => ['Chumapiri', 'Chumatato', 'Chumaine', 'Chumatano', 'Aramisi', 'Ichuma', 'Esabato'],\n    'weekdays_short' => ['Cpr', 'Ctt', 'Cmn', 'Cmt', 'Ars', 'Icm', 'Est'],\n    'weekdays_min' => ['Cpr', 'Ctt', 'Cmn', 'Cmt', 'Ars', 'Icm', 'Est'],\n    'months' => ['Chanuari', 'Feburari', 'Machi', 'Apiriri', 'Mei', 'Juni', 'Chulai', 'Agosti', 'Septemba', 'Okitoba', 'Nobemba', 'Disemba'],\n    'months_short' => ['Can', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Cul', 'Agt', 'Sep', 'Okt', 'Nob', 'Dis'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'month' => ':count omotunyi', // less reliable\n    'm' => ':count omotunyi', // less reliable\n    'a_month' => ':count omotunyi', // less reliable\n\n    'week' => ':count isano naibere', // less reliable\n    'w' => ':count isano naibere', // less reliable\n    'a_week' => ':count isano naibere', // less reliable\n\n    'second' => ':count ibere', // less reliable\n    's' => ':count ibere', // less reliable\n    'a_second' => ':count ibere', // less reliable\n\n    'year' => ':count omwaka',\n    'y' => ':count omwaka',\n    'a_year' => ':count omwaka',\n\n    'day' => ':count rituko',\n    'd' => ':count rituko',\n    'a_day' => ':count rituko',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/be_BY@latin.php","ext":"php","size":1014,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['studzienia', 'lutaha', 'sakavika', 'krasavika', 'maja', 'červienia', 'lipienia', 'žniŭnia', 'vieraśnia', 'kastryčnika', 'listapada', 'śniežnia'],\n    'months_short' => ['Stu', 'Lut', 'Sak', 'Kra', 'Maj', 'Čer', 'Lip', 'Žni', 'Vie', 'Kas', 'Lis', 'Śni'],\n    'weekdays' => ['Niadziela', 'Paniadziełak', 'Aŭtorak', 'Sierada', 'Čaćvier', 'Piatnica', 'Subota'],\n    'weekdays_short' => ['Nia', 'Pan', 'Aŭt', 'Sie', 'Čać', 'Pia', 'Sub'],\n    'weekdays_min' => ['Nia', 'Pan', 'Aŭt', 'Sie', 'Čać', 'Pia', 'Sub'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ti_ER.php","ext":"php","size":2012,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጥሪ', 'ለካቲት', 'መጋቢት', 'ሚያዝያ', 'ግንቦት', 'ሰነ', 'ሓምለ', 'ነሓሰ', 'መስከረም', 'ጥቅምቲ', 'ሕዳር', 'ታሕሳስ'],\n    'months_short' => ['ጥሪ ', 'ለካቲ', 'መጋቢ', 'ሚያዝ', 'ግንቦ', 'ሰነ ', 'ሓምለ', 'ነሓሰ', 'መስከ', 'ጥቅም', 'ሕዳር', 'ታሕሳ'],\n    'weekdays' => ['ሰንበት', 'ሰኑይ', 'ሰሉስ', 'ረቡዕ', 'ሓሙስ', 'ዓርቢ', 'ቀዳም'],\n    'weekdays_short' => ['ሰንበ', 'ሰኑይ', 'ሰሉስ', 'ረቡዕ', 'ሓሙስ', 'ዓርቢ', 'ቀዳም'],\n    'weekdays_min' => ['ሰንበ', 'ሰኑይ', 'ሰሉስ', 'ረቡዕ', 'ሓሙስ', 'ዓርቢ', 'ቀዳም'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ንጉሆ ሰዓተ', 'ድሕር ሰዓት'],\n\n    'year' => ':count ዓመት',\n    'y' => ':count ዓመት',\n    'a_year' => ':count ዓመት',\n\n    'month' => 'ወርሒ :count',\n    'm' => 'ወርሒ :count',\n    'a_month' => 'ወርሒ :count',\n\n    'week' => ':count ሰሙን',\n    'w' => ':count ሰሙን',\n    'a_week' => ':count ሰሙን',\n\n    'day' => ':count መዓልቲ',\n    'd' => ':count መዓልቲ',\n    'a_day' => ':count መዓልቲ',\n\n    'hour' => ':count ሰዓት',\n    'h' => ':count ሰዓት',\n    'a_hour' => ':count ሰዓት',\n\n    'minute' => ':count ደቒቕ',\n    'min' => ':count ደቒቕ',\n    'a_minute' => ':count ደቒቕ',\n\n    'second' => ':count ሰከንድ',\n    's' => ':count ሰከንድ',\n    'a_second' => ':count ሰከንድ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_PA.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hant_MO.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hant.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/my.php","ext":"php","size":4494,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n * - Nay Lin Aung\n */\nreturn [\n    'year' => ':count နှစ်',\n    'a_year' => '{1}တစ်နှစ်|[-Inf,Inf]:count နှစ်',\n    'y' => ':count နှစ်',\n    'month' => ':count လ',\n    'a_month' => '{1}တစ်လ|[-Inf,Inf]:count လ',\n    'm' => ':count လ',\n    'week' => ':count ပတ်',\n    'w' => ':count ပတ်',\n    'day' => ':count ရက်',\n    'a_day' => '{1}တစ်ရက်|[-Inf,Inf]:count ရက်',\n    'd' => ':count ရက်',\n    'hour' => ':count နာရီ',\n    'a_hour' => '{1}တစ်နာရီ|[-Inf,Inf]:count နာရီ',\n    'h' => ':count နာရီ',\n    'minute' => ':count မိနစ်',\n    'a_minute' => '{1}တစ်မိနစ်|[-Inf,Inf]:count မိနစ်',\n    'min' => ':count မိနစ်',\n    'second' => ':count စက္ကန့်',\n    'a_second' => '{0,1}စက္ကန်.အနည်းငယ်|[-Inf,Inf]:count စက္ကန့်',\n    's' => ':count စက္ကန့်',\n    'ago' => 'လွန်ခဲ့သော :time က',\n    'from_now' => 'လာမည့် :time မှာ',\n    'after' => ':time ကြာပြီးနောက်',\n    'before' => ':time မတိုင်ခင်',\n    'diff_now' => 'အခုလေးတင်',\n    'diff_today' => 'ယနေ.',\n    'diff_yesterday' => 'မနေ့က',\n    'diff_yesterday_regexp' => 'မနေ.က',\n    'diff_tomorrow' => 'မနက်ဖြန်',\n    'diff_before_yesterday' => 'တမြန်နေ့က',\n    'diff_after_tomorrow' => 'တဘက်ခါ',\n    'period_recurrences' => ':count ကြိမ်',\n    'formats' => [\n        'LT' => 'Oh:Om A',\n        'LTS' => 'Oh:Om:Os A',\n        'L' => 'OD/OM/OY',\n        'LL' => 'OD MMMM OY',\n        'LLL' => 'OD MMMM OY Oh:Om A',\n        'LLLL' => 'dddd OD MMMM OY Oh:Om A',\n    ],\n    'calendar' => [\n        'sameDay' => '[ယနေ.] LT [မှာ]',\n        'nextDay' => '[မနက်ဖြန်] LT [မှာ]',\n        'nextWeek' => 'dddd LT [မှာ]',\n        'lastDay' => '[မနေ.က] LT [မှာ]',\n        'lastWeek' => '[ပြီးခဲ့သော] dddd LT [မှာ]',\n        'sameElse' => 'L',\n    ],\n    'months' => ['ဇန်နဝါရီ', 'ဖေဖော်ဝါရီ', 'မတ်', 'ဧပြီ', 'မေ', 'ဇွန်', 'ဇူလိုင်', 'သြဂုတ်', 'စက်တင်ဘာ', 'အောက်တိုဘာ', 'နိုဝင်ဘာ', 'ဒီဇင်ဘာ'],\n    'months_short' => ['ဇန်', 'ဖေ', 'မတ်', 'ပြီ', 'မေ', 'ဇွန်', 'လိုင်', 'သြ', 'စက်', 'အောက်', 'နို', 'ဒီ'],\n    'weekdays' => ['တနင်္ဂနွေ', 'တနင်္လာ', 'အင်္ဂါ', 'ဗုဒ္ဓဟူး', 'ကြာသပတေး', 'သောကြာ', 'စနေ'],\n    'weekdays_short' => ['နွေ', 'လာ', 'ဂါ', 'ဟူး', 'ကြာ', 'သော', 'နေ'],\n    'weekdays_min' => ['နွေ', 'လာ', 'ဂါ', 'ဟူး', 'ကြာ', 'သော', 'နေ'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'alt_numbers' => ['၀၀', '၀၁', '၀၂', '၀၃', '၀၄', '၀၅', '၀၆', '၀၇', '၀၈', '၀၉', '၁၀', '၁၁', '၁၂', '၁၃', '၁၄', '၁၅', '၁၆', '၁၇', '၁၈', '၁၉', '၂၀', '၂၁', '၂၂', '၂၃', '၂၄', '၂၅', '၂၆', '၂၇', '၂၈', '၂၉', '၃၀', '၃၁', '၃၂', '၃၃', '၃၄', '၃၅', '၃၆', '၃၇', '၃၈', '၃၉', '၄၀', '၄၁', '၄၂', '၄၃', '၄၄', '၄၅', '၄၆', '၄၇', '၄၈', '၄၉', '၅၀', '၅၁', '၅၂', '၅၃', '၅၄', '၅၅', '၅၆', '၅၇', '၅၈', '၅၉', '၆၀', '၆၁', '၆၂', '၆၃', '၆၄', '၆၅', '၆၆', '၆၇', '၆၈', '၆၉', '၇၀', '၇၁', '၇၂', '၇၃', '၇၄', '၇၅', '၇၆', '၇၇', '၇၈', '၇၉', '၈၀', '၈၁', '၈၂', '၈၃', '၈၄', '၈၅', '၈၆', '၈၇', '၈၈', '၈၉', '၉၀', '၉၁', '၉၂', '၉၃', '၉၄', '၉၅', '၉၆', '၉၇', '၉၈', '၉၉'],\n    'meridiem' => ['နံနက်', 'ညနေ'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ur.php","ext":"php","size":2623,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n$months = [\n    'جنوری',\n    'فروری',\n    'مارچ',\n    'اپریل',\n    'مئی',\n    'جون',\n    'جولائی',\n    'اگست',\n    'ستمبر',\n    'اکتوبر',\n    'نومبر',\n    'دسمبر',\n];\n\n$weekdays = [\n    'اتوار',\n    'پیر',\n    'منگل',\n    'بدھ',\n    'جمعرات',\n    'جمعہ',\n    'ہفتہ',\n];\n\n/*\n * Authors:\n * - Sawood Alam\n * - Mehshan\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - tjku\n * - Zaid Akram\n * - Max Melentiev\n * - hafezdivandari\n * - Hossein Jabbari\n * - nimamo\n * - Usman Zahid\n */\nreturn [\n    'year' => ':count '.'سال',\n    'a_year' => 'ایک سال|:count سال',\n    'month' => ':count '.'ماہ',\n    'a_month' => 'ایک ماہ|:count ماہ',\n    'week' => ':count '.'ہفتے',\n    'day' => ':count '.'دن',\n    'a_day' => 'ایک دن|:count دن',\n    'hour' => ':count '.'گھنٹے',\n    'a_hour' => 'ایک گھنٹہ|:count گھنٹے',\n    'minute' => ':count '.'منٹ',\n    'a_minute' => 'ایک منٹ|:count منٹ',\n    'second' => ':count '.'سیکنڈ',\n    'a_second' => 'چند سیکنڈ|:count سیکنڈ',\n    'ago' => ':time قبل',\n    'from_now' => ':time بعد',\n    'after' => ':time بعد',\n    'before' => ':time پہلے',\n    'diff_now' => 'اب',\n    'diff_today' => 'آج',\n    'diff_today_regexp' => 'آج(?:\\\\s+بوقت)?',\n    'diff_yesterday' => 'گزشتہ کل',\n    'diff_yesterday_regexp' => 'گذشتہ(?:\\\\s+روز)?(?:\\\\s+بوقت)?',\n    'diff_tomorrow' => 'آئندہ کل',\n    'diff_tomorrow_regexp' => 'کل(?:\\\\s+بوقت)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd، D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[آج بوقت] LT',\n        'nextDay' => '[کل بوقت] LT',\n        'nextWeek' => 'dddd [بوقت] LT',\n        'lastDay' => '[گذشتہ روز بوقت] LT',\n        'lastWeek' => '[گذشتہ] dddd [بوقت] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['صبح', 'شام'],\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => $weekdays,\n    'weekdays_short' => $weekdays,\n    'weekdays_min' => $weekdays,\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => ['، ', ' اور '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MU.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nhn_MX.php","ext":"php","size":1840,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\n    'months_short' => ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\n    'weekdays' => ['teoilhuitl', 'ceilhuitl', 'omeilhuitl', 'yeilhuitl', 'nahuilhuitl', 'macuililhuitl', 'chicuaceilhuitl'],\n    'weekdays_short' => ['teo', 'cei', 'ome', 'yei', 'nau', 'mac', 'chi'],\n    'weekdays_min' => ['teo', 'cei', 'ome', 'yei', 'nau', 'mac', 'chi'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'month' => ':count metztli', // less reliable\n    'm' => ':count metztli', // less reliable\n    'a_month' => ':count metztli', // less reliable\n\n    'week' => ':count tonalli', // less reliable\n    'w' => ':count tonalli', // less reliable\n    'a_week' => ':count tonalli', // less reliable\n\n    'day' => ':count tonatih', // less reliable\n    'd' => ':count tonatih', // less reliable\n    'a_day' => ':count tonatih', // less reliable\n\n    'minute' => ':count toltecayotl', // less reliable\n    'min' => ':count toltecayotl', // less reliable\n    'a_minute' => ':count toltecayotl', // less reliable\n\n    'second' => ':count ome', // less reliable\n    's' => ':count ome', // less reliable\n    'a_second' => ':count ome', // less reliable\n\n    'year' => ':count xihuitl',\n    'y' => ':count xihuitl',\n    'a_year' => ':count xihuitl',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/raj_IN.php","ext":"php","size":2301,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - meghrajsuthar03@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फरवरी', 'मार्च', 'अप्रैल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितंबर', 'अक्टूबर', 'नवंबर', 'दिसंबर'],\n    'months_short' => ['जन', 'फर', 'मार्च', 'अप्रै', 'मई', 'जून', 'जुल', 'अग', 'सित', 'अक्टू', 'नव', 'दिस'],\n    'weekdays' => ['रविवार', 'सोमवार', 'मंगल्लवार', 'बुधवार', 'बृहस्पतिवार', 'शुक्रवार', 'शनिवार'],\n    'weekdays_short' => ['रवि', 'सोम', 'मंगल', 'बुध', 'बृहस्पति', 'शुक्र', 'शनि'],\n    'weekdays_min' => ['रवि', 'सोम', 'मंगल', 'बुध', 'बृहस्पति', 'शुक्र', 'शनि'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n\n    'year' => ':count आंहू', // less reliable\n    'y' => ':count आंहू', // less reliable\n    'a_year' => ':count आंहू', // less reliable\n\n    'month' => ':count सूरज', // less reliable\n    'm' => ':count सूरज', // less reliable\n    'a_month' => ':count सूरज', // less reliable\n\n    'week' => ':count निवाज', // less reliable\n    'w' => ':count निवाज', // less reliable\n    'a_week' => ':count निवाज', // less reliable\n\n    'day' => ':count अेक', // less reliable\n    'd' => ':count अेक', // less reliable\n    'a_day' => ':count अेक', // less reliable\n\n    'hour' => ':count दुनियांण', // less reliable\n    'h' => ':count दुनियांण', // less reliable\n    'a_hour' => ':count दुनियांण', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kn_IN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/kn.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SZ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bs.php","ext":"php","size":3453,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bokideckonja\n * - Josh Soref\n * - François B\n * - shaishavgandhi05\n * - Serhan Apaydın\n * - JD Isaacks\n * - Ademir Šehić\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count godina|:count godine|:count godina',\n    'y' => ':count godina|:count godine|:count godina',\n    'month' => ':count mjesec|:count mjeseca|:count mjeseci',\n    'm' => ':count mjesec|:count mjeseca|:count mjeseci',\n    'week' => ':count sedmica|:count sedmice|:count sedmica',\n    'w' => ':count sedmica|:count sedmice|:count sedmica',\n    'day' => ':count dan|:count dana|:count dana',\n    'd' => ':count dan|:count dana|:count dana',\n    'hour' => ':count sat|:count sata|:count sati',\n    'h' => ':count sat|:count sata|:count sati',\n    'minute' => ':count minut|:count minuta|:count minuta',\n    'min' => ':count minut|:count minuta|:count minuta',\n    'second' => ':count sekund|:count sekunda|:count sekundi',\n    's' => ':count sekund|:count sekunda|:count sekundi',\n\n    'ago' => 'prije :time',\n    'from_now' => 'za :time',\n    'after' => 'nakon :time',\n    'before' => ':time ranije',\n\n    'year_ago' => ':count godinu|:count godine|:count godina',\n    'year_from_now' => ':count godinu|:count godine|:count godina',\n    'week_ago' => ':count sedmicu|:count sedmice|:count sedmica',\n    'week_from_now' => ':count sedmicu|:count sedmice|:count sedmica',\n\n    'diff_now' => 'sada',\n    'diff_today' => 'danas',\n    'diff_today_regexp' => 'danas(?:\\\\s+u)?',\n    'diff_yesterday' => 'jučer',\n    'diff_yesterday_regexp' => 'jučer(?:\\\\s+u)?',\n    'diff_tomorrow' => 'sutra',\n    'diff_tomorrow_regexp' => 'sutra(?:\\\\s+u)?',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[danas u] LT',\n        'nextDay' => '[sutra u] LT',\n        'nextWeek' => static fn (CarbonInterface $current) => match ($current->dayOfWeek) {\n            0 => '[u] [nedjelju] [u] LT',\n            3 => '[u] [srijedu] [u] LT',\n            6 => '[u] [subotu] [u] LT',\n            default => '[u] dddd [u] LT',\n        },\n        'lastDay' => '[jučer u] LT',\n        'lastWeek' => static fn (CarbonInterface $current) => match ($current->dayOfWeek) {\n            0, 3 => '[prošlu] dddd [u] LT',\n            6 => '[prošle] [subote] [u] LT',\n            default => '[prošli] dddd [u] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['januar', 'februar', 'mart', 'april', 'maj', 'juni', 'juli', 'august', 'septembar', 'oktobar', 'novembar', 'decembar'],\n    'months_short' => ['jan.', 'feb.', 'mar.', 'apr.', 'maj.', 'jun.', 'jul.', 'aug.', 'sep.', 'okt.', 'nov.', 'dec.'],\n    'weekdays' => ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],\n    'weekdays_short' => ['ned.', 'pon.', 'uto.', 'sri.', 'čet.', 'pet.', 'sub.'],\n    'weekdays_min' => ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' i '],\n    'meridiem' => ['prijepodne', 'popodne'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_CX.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sw_TZ.php","ext":"php","size":1019,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kamusi Project Martin Benjamin locales@kamusi.org\n */\nreturn array_replace_recursive(require __DIR__.'/sw.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Januari', 'Februari', 'Machi', 'Aprili', 'Mei', 'Juni', 'Julai', 'Agosti', 'Septemba', 'Oktoba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ago', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Jumapili', 'Jumatatu', 'Jumanne', 'Jumatano', 'Alhamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['J2', 'J3', 'J4', 'J5', 'Alh', 'Ij', 'J1'],\n    'weekdays_min' => ['J2', 'J3', 'J4', 'J5', 'Alh', 'Ij', 'J1'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['asubuhi', 'alasiri'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ne.php","ext":"php","size":3266,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - nootanghimire\n * - Josh Soref\n * - Nj Subedi\n * - JD Isaacks\n */\nreturn [\n    'year' => 'एक बर्ष|:count बर्ष',\n    'y' => ':count वर्ष',\n    'month' => 'एक महिना|:count महिना',\n    'm' => ':count महिना',\n    'week' => ':count हप्ता',\n    'w' => ':count हप्ता',\n    'day' => 'एक दिन|:count दिन',\n    'd' => ':count दिन',\n    'hour' => 'एक घण्टा|:count घण्टा',\n    'h' => ':count घण्टा',\n    'minute' => 'एक मिनेट|:count मिनेट',\n    'min' => ':count मिनेट',\n    'second' => 'केही क्षण|:count सेकेण्ड',\n    's' => ':count सेकेण्ड',\n    'ago' => ':time अगाडि',\n    'from_now' => ':timeमा',\n    'after' => ':time पछि',\n    'before' => ':time अघि',\n    'diff_now' => 'अहिले',\n    'diff_today' => 'आज',\n    'diff_yesterday' => 'हिजो',\n    'diff_tomorrow' => 'भोलि',\n    'formats' => [\n        'LT' => 'Aको h:mm बजे',\n        'LTS' => 'Aको h:mm:ss बजे',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, Aको h:mm बजे',\n        'LLLL' => 'dddd, D MMMM YYYY, Aको h:mm बजे',\n    ],\n    'calendar' => [\n        'sameDay' => '[आज] LT',\n        'nextDay' => '[भोलि] LT',\n        'nextWeek' => '[आउँदो] dddd[,] LT',\n        'lastDay' => '[हिजो] LT',\n        'lastWeek' => '[गएको] dddd[,] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 3) {\n            return 'राति';\n        }\n        if ($hour < 12) {\n            return 'बिहान';\n        }\n        if ($hour < 16) {\n            return 'दिउँसो';\n        }\n        if ($hour < 20) {\n            return 'साँझ';\n        }\n\n        return 'राति';\n    },\n    'months' => ['जनवरी', 'फेब्रुवरी', 'मार्च', 'अप्रिल', 'मई', 'जुन', 'जुलाई', 'अगष्ट', 'सेप्टेम्बर', 'अक्टोबर', 'नोभेम्बर', 'डिसेम्बर'],\n    'months_short' => ['जन.', 'फेब्रु.', 'मार्च', 'अप्रि.', 'मई', 'जुन', 'जुलाई.', 'अग.', 'सेप्ट.', 'अक्टो.', 'नोभे.', 'डिसे.'],\n    'weekdays' => ['आइतबार', 'सोमबार', 'मङ्गलबार', 'बुधबार', 'बिहिबार', 'शुक्रबार', 'शनिबार'],\n    'weekdays_short' => ['आइत.', 'सोम.', 'मङ्गल.', 'बुध.', 'बिहि.', 'शुक्र.', 'शनि.'],\n    'weekdays_min' => ['आ.', 'सो.', 'मं.', 'बु.', 'बि.', 'शु.', 'श.'],\n    'list' => [', ', ' र '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/as.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/as_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mt_MT.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/mt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Latn_XK.php","ext":"php","size":693,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'sr');\n    }, 'sr_Latn_XK');\n}\n// @codeCoverageIgnoreEnd\n\nreturn array_replace_recursive(require __DIR__.'/sr_Latn_BA.php', [\n    'weekdays' => ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tk_TM.php","ext":"php","size":2136,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Authors:\n * - Ghorban M. Tavakoly Pablo Saratxaga & Ghorban M. Tavakoly pablo@walon.org & gmt314@yahoo.com\n * - SuperManPHP\n * - Maksat Meredow (isadma)\n */\n$transformDiff = static fn (string $input) => strtr($input, [\n    'sekunt' => 'sekunt',\n    'hepde' => 'hepde',\n]);\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Ýanwar', 'Fewral', 'Mart', 'Aprel', 'Maý', 'Iýun', 'Iýul', 'Awgust', 'Sentýabr', 'Oktýabr', 'Noýabr', 'Dekabr'],\n    'months_short' => ['Ýan', 'Few', 'Mar', 'Apr', 'Maý', 'Iýn', 'Iýl', 'Awg', 'Sen', 'Okt', 'Noý', 'Dek'],\n    'weekdays' => ['Ýekşenbe', 'Duşenbe', 'Sişenbe', 'Çarşenbe', 'Penşenbe', 'Anna', 'Şenbe'],\n    'weekdays_short' => ['Ýek', 'Duş', 'Siş', 'Çar', 'Pen', 'Ann', 'Şen'],\n    'weekdays_min' => ['Ýe', 'Du', 'Si', 'Ça', 'Pe', 'An', 'Şe'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => ':count ýyl',\n    'y' => ':count ýyl',\n    'a_year' => ':count ýyl',\n\n    'month' => ':count aý',\n    'm' => ':count aý',\n    'a_month' => ':count aý',\n\n    'week' => ':count hepde',\n    'w' => ':count hepde',\n    'a_week' => ':count hepde',\n\n    'day' => ':count gün',\n    'd' => ':count gün',\n    'a_day' => ':count gün',\n\n    'hour' => ':count sagat',\n    'h' => ':count sagat',\n    'a_hour' => ':count sagat',\n\n    'minute' => ':count minut',\n    'min' => ':count minut',\n    'a_minute' => ':count minut',\n\n    'second' => ':count sekunt',\n    's' => ':count sekunt',\n    'a_second' => ':count sekunt',\n\n    'ago' => static fn (string $time) => $transformDiff($time).' ozal',\n    'from_now' => static fn (string $time) => $transformDiff($time).' soňra',\n    'after' => static fn (string $time) => $transformDiff($time).' soň',\n    'before' => static fn (string $time) => $transformDiff($time).' öň',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl_SR.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/nl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_CL.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/li_NL.php","ext":"php","size":1760,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - information from Kenneth Christiansen Kenneth Christiansen, Pablo Saratxaga kenneth@gnu.org, pablo@mandriva.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['jannewarie', 'fibberwarie', 'miert', 'eprèl', 'meij', 'junie', 'julie', 'augustus', 'september', 'oktober', 'november', 'desember'],\n    'months_short' => ['jan', 'fib', 'mie', 'epr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    'weekdays' => ['zóndig', 'maondig', 'daensdig', 'goonsdig', 'dónderdig', 'vriedig', 'zaoterdig'],\n    'weekdays_short' => ['zón', 'mao', 'dae', 'goo', 'dón', 'vri', 'zao'],\n    'weekdays_min' => ['zón', 'mao', 'dae', 'goo', 'dón', 'vri', 'zao'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'minute' => ':count momênt', // less reliable\n    'min' => ':count momênt', // less reliable\n    'a_minute' => ':count momênt', // less reliable\n\n    'year' => ':count jaor',\n    'y' => ':count jaor',\n    'a_year' => ':count jaor',\n\n    'month' => ':count maond',\n    'm' => ':count maond',\n    'a_month' => ':count maond',\n\n    'week' => ':count waek',\n    'w' => ':count waek',\n    'a_week' => ':count waek',\n\n    'day' => ':count daag',\n    'd' => ':count daag',\n    'a_day' => ':count daag',\n\n    'hour' => ':count oer',\n    'h' => ':count oer',\n    'a_hour' => ':count oer',\n\n    'second' => ':count Secónd',\n    's' => ':count Secónd',\n    'a_second' => ':count Secónd',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lg_UG.php","ext":"php","size":1750,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Akademe ya Luganda Kizito Birabwa kompyuta@kizito.uklinux.net\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['Janwaliyo', 'Febwaliyo', 'Marisi', 'Apuli', 'Maayi', 'Juuni', 'Julaayi', 'Agusito', 'Sebuttemba', 'Okitobba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apu', 'Maa', 'Juu', 'Jul', 'Agu', 'Seb', 'Oki', 'Nov', 'Des'],\n    'weekdays' => ['Sabiiti', 'Balaza', 'Lwakubiri', 'Lwakusatu', 'Lwakuna', 'Lwakutaano', 'Lwamukaaga'],\n    'weekdays_short' => ['Sab', 'Bal', 'Lw2', 'Lw3', 'Lw4', 'Lw5', 'Lw6'],\n    'weekdays_min' => ['Sab', 'Bal', 'Lw2', 'Lw3', 'Lw4', 'Lw5', 'Lw6'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'month' => ':count njuba', // less reliable\n    'm' => ':count njuba', // less reliable\n    'a_month' => ':count njuba', // less reliable\n\n    'year' => ':count mwaaka',\n    'y' => ':count mwaaka',\n    'a_year' => ':count mwaaka',\n\n    'week' => ':count sabbiiti',\n    'w' => ':count sabbiiti',\n    'a_week' => ':count sabbiiti',\n\n    'day' => ':count lunaku',\n    'd' => ':count lunaku',\n    'a_day' => ':count lunaku',\n\n    'hour' => 'saawa :count',\n    'h' => 'saawa :count',\n    'a_hour' => 'saawa :count',\n\n    'minute' => 'ddakiika :count',\n    'min' => 'ddakiika :count',\n    'a_minute' => 'ddakiika :count',\n\n    'second' => ':count kyʼokubiri',\n    's' => ':count kyʼokubiri',\n    'a_second' => ':count kyʼokubiri',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/aa_DJ.php","ext":"php","size":1567,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Qunxa Garablu', 'Kudo', 'Ciggilta Kudo', 'Agda Baxisso', 'Caxah Alsa', 'Qasa Dirri', 'Qado Dirri', 'Liiqen', 'Waysu', 'Diteli', 'Ximoli', 'Kaxxa Garablu'],\n    'months_short' => ['qun', 'nah', 'cig', 'agd', 'cax', 'qas', 'qad', 'leq', 'way', 'dit', 'xim', 'kax'],\n    'weekdays' => ['Acaada', 'Etleeni', 'Talaata', 'Arbaqa', 'Kamiisi', 'Gumqata', 'Sabti'],\n    'weekdays_short' => ['aca', 'etl', 'tal', 'arb', 'kam', 'gum', 'sab'],\n    'weekdays_min' => ['aca', 'etl', 'tal', 'arb', 'kam', 'gum', 'sab'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['saaku', 'carra'],\n\n    'year' => ':count gaqambo', // less reliable\n    'y' => ':count gaqambo', // less reliable\n    'a_year' => ':count gaqambo', // less reliable\n\n    'month' => ':count àlsa',\n    'm' => ':count àlsa',\n    'a_month' => ':count àlsa',\n\n    'day' => ':count saaku', // less reliable\n    'd' => ':count saaku', // less reliable\n    'a_day' => ':count saaku', // less reliable\n\n    'hour' => ':count ayti', // less reliable\n    'h' => ':count ayti', // less reliable\n    'a_hour' => ':count ayti', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bo_IN.php","ext":"php","size":2559,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/bo.php', [\n    'meridiem' => ['སྔ་དྲོ་', 'ཕྱི་དྲོ་'],\n    'weekdays' => ['གཟའ་ཉི་མ་', 'གཟའ་ཟླ་བ་', 'གཟའ་མིག་དམར་', 'གཟའ་ལྷག་པ་', 'གཟའ་ཕུར་བུ་', 'གཟའ་པ་སངས་', 'གཟའ་སྤེན་པ་'],\n    'weekdays_short' => ['ཉི་མ་', 'ཟླ་བ་', 'མིག་དམར་', 'ལྷག་པ་', 'ཕུར་བུ་', 'པ་སངས་', 'སྤེན་པ་'],\n    'weekdays_min' => ['ཉི་མ་', 'ཟླ་བ་', 'མིག་དམར་', 'ལྷག་པ་', 'ཕུར་བུ་', 'པ་སངས་', 'སྤེན་པ་'],\n    'months' => ['ཟླ་བ་དང་པོ', 'ཟླ་བ་གཉིས་པ', 'ཟླ་བ་གསུམ་པ', 'ཟླ་བ་བཞི་པ', 'ཟླ་བ་ལྔ་པ', 'ཟླ་བ་དྲུག་པ', 'ཟླ་བ་བདུན་པ', 'ཟླ་བ་བརྒྱད་པ', 'ཟླ་བ་དགུ་པ', 'ཟླ་བ་བཅུ་པ', 'ཟླ་བ་བཅུ་གཅིག་པ', 'ཟླ་བ་བཅུ་གཉིས་པ'],\n    'months_short' => ['ཟླ་༡', 'ཟླ་༢', 'ཟླ་༣', 'ཟླ་༤', 'ཟླ་༥', 'ཟླ་༦', 'ཟླ་༧', 'ཟླ་༨', 'ཟླ་༩', 'ཟླ་༡༠', 'ཟླ་༡༡', 'ཟླ་༡༢'],\n    'months_standalone' => ['ཟླ་བ་དང་པོ་', 'ཟླ་བ་གཉིས་པ་', 'ཟླ་བ་གསུམ་པ་', 'ཟླ་བ་བཞི་པ་', 'ཟླ་བ་ལྔ་པ་', 'ཟླ་བ་དྲུག་པ་', 'ཟླ་བ་བདུན་པ་', 'ཟླ་བ་བརྒྱད་པ་', 'ཟླ་བ་དགུ་པ་', 'ཟླ་བ་བཅུ་པ་', 'ཟླ་བ་བཅུ་གཅིག་པ་', 'ཟླ་བ་བཅུ་གཉིས་པ་'],\n    'weekend' => [0, 0],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'YYYY ལོའི་MMMཚེས་D',\n        'LLL' => 'སྤྱི་ལོ་YYYY MMMMའི་ཚེས་D h:mm a',\n        'LLLL' => 'YYYY MMMMའི་ཚེས་D, dddd h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_NC.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_FR.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gsw_LI.php","ext":"php","size":620,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/gsw.php', [\n    'meridiem' => ['vorm.', 'nam.'],\n    'months' => ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'Auguscht', 'Septämber', 'Oktoober', 'Novämber', 'Dezämber'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LLL' => 'Do MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, Do MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_RW.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mai_IN.php","ext":"php","size":2455,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Maithili Computing Research Center, Pune, India    rajeshkajha@yahoo.com,akhilesh.k@samusng.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['बैसाख', 'जेठ', 'अषाढ़', 'सावोन', 'भादो', 'आसिन', 'कातिक', 'अगहन', 'पूस', 'माघ', 'फागुन', 'चैति'],\n    'months_short' => ['बैसाख', 'जेठ', 'अषाढ़', 'सावोन', 'भादो', 'आसिन', 'कातिक', 'अगहन', 'पूस', 'माघ', 'फागुन', 'चैति'],\n    'weekdays' => ['रविदिन', 'सोमदिन', 'मंगलदिन', 'बुधदिन', 'बृहस्पतीदिन', 'शुक्रदिन', 'शनीदिन'],\n    'weekdays_short' => ['रवि', 'सोम', 'मंगल', 'बुध', 'बृहस्पती', 'शुक्र', 'शनी'],\n    'weekdays_min' => ['रवि', 'सोम', 'मंगल', 'बुध', 'बृहस्पती', 'शुक्र', 'शनी'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n\n    'year' => ':count ऋतु', // less reliable\n    'y' => ':count ऋतु', // less reliable\n    'a_year' => ':count ऋतु', // less reliable\n\n    'month' => ':count महिना',\n    'm' => ':count महिना',\n    'a_month' => ':count महिना',\n\n    'week' => ':count श्रेणी:क्यालेन्डर', // less reliable\n    'w' => ':count श्रेणी:क्यालेन्डर', // less reliable\n    'a_week' => ':count श्रेणी:क्यालेन्डर', // less reliable\n\n    'day' => ':count दिन',\n    'd' => ':count दिन',\n    'a_day' => ':count दिन',\n\n    'hour' => ':count घण्टा',\n    'h' => ':count घण्टा',\n    'a_hour' => ':count घण्टा',\n\n    'minute' => ':count समय', // less reliable\n    'min' => ':count समय', // less reliable\n    'a_minute' => ':count समय', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ee.php","ext":"php","size":1898,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['ŋ', 'ɣ'],\n    'weekdays' => ['kɔsiɖa', 'dzoɖa', 'blaɖa', 'kuɖa', 'yawoɖa', 'fiɖa', 'memleɖa'],\n    'weekdays_short' => ['kɔs', 'dzo', 'bla', 'kuɖ', 'yaw', 'fiɖ', 'mem'],\n    'weekdays_min' => ['kɔs', 'dzo', 'bla', 'kuɖ', 'yaw', 'fiɖ', 'mem'],\n    'months' => ['dzove', 'dzodze', 'tedoxe', 'afɔfĩe', 'dama', 'masa', 'siamlɔm', 'deasiamime', 'anyɔnyɔ', 'kele', 'adeɛmekpɔxe', 'dzome'],\n    'months_short' => ['dzv', 'dzd', 'ted', 'afɔ', 'dam', 'mas', 'sia', 'dea', 'any', 'kel', 'ade', 'dzm'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'a [ga] h:mm',\n        'LTS' => 'a [ga] h:mm:ss',\n        'L' => 'M/D/YYYY',\n        'LL' => 'MMM D [lia], YYYY',\n        'LLL' => 'a [ga] h:mm MMMM D [lia] YYYY',\n        'LLLL' => 'a [ga] h:mm dddd, MMMM D [lia] YYYY',\n    ],\n\n    'year' => 'ƒe :count',\n    'y' => 'ƒe :count',\n    'a_year' => 'ƒe :count',\n\n    'month' => 'ɣleti :count',\n    'm' => 'ɣleti :count',\n    'a_month' => 'ɣleti :count',\n\n    'week' => 'kwasiɖa :count',\n    'w' => 'kwasiɖa :count',\n    'a_week' => 'kwasiɖa :count',\n\n    'day' => 'ŋkeke :count',\n    'd' => 'ŋkeke :count',\n    'a_day' => 'ŋkeke :count',\n\n    'hour' => 'gaƒoƒo :count',\n    'h' => 'gaƒoƒo :count',\n    'a_hour' => 'gaƒoƒo :count',\n\n    'minute' => 'miniti :count', // less reliable\n    'min' => 'miniti :count', // less reliable\n    'a_minute' => 'miniti :count', // less reliable\n\n    'second' => 'sɛkɛnd :count', // less reliable\n    's' => 'sɛkɛnd :count', // less reliable\n    'a_second' => 'sɛkɛnd :count', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kam.php","ext":"php","size":1985,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['Ĩyakwakya', 'Ĩyawĩoo'],\n    'weekdays' => ['Wa kyumwa', 'Wa kwambĩlĩlya', 'Wa kelĩ', 'Wa katatũ', 'Wa kana', 'Wa katano', 'Wa thanthatũ'],\n    'weekdays_short' => ['Wky', 'Wkw', 'Wkl', 'Wtũ', 'Wkn', 'Wtn', 'Wth'],\n    'weekdays_min' => ['Wky', 'Wkw', 'Wkl', 'Wtũ', 'Wkn', 'Wtn', 'Wth'],\n    'months' => ['Mwai wa mbee', 'Mwai wa kelĩ', 'Mwai wa katatũ', 'Mwai wa kana', 'Mwai wa katano', 'Mwai wa thanthatũ', 'Mwai wa muonza', 'Mwai wa nyaanya', 'Mwai wa kenda', 'Mwai wa ĩkumi', 'Mwai wa ĩkumi na ĩmwe', 'Mwai wa ĩkumi na ilĩ'],\n    'months_short' => ['Mbe', 'Kel', 'Ktũ', 'Kan', 'Ktn', 'Tha', 'Moo', 'Nya', 'Knd', 'Ĩku', 'Ĩkm', 'Ĩkl'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    // Too unreliable\n    /*\n    'year' => ':count mbua', // less reliable\n    'y' => ':count mbua', // less reliable\n    'a_year' => ':count mbua', // less reliable\n\n    'month' => ':count ndakitali', // less reliable\n    'm' => ':count ndakitali', // less reliable\n    'a_month' => ':count ndakitali', // less reliable\n\n    'day' => ':count wia', // less reliable\n    'd' => ':count wia', // less reliable\n    'a_day' => ':count wia', // less reliable\n\n    'hour' => ':count orasan', // less reliable\n    'h' => ':count orasan', // less reliable\n    'a_hour' => ':count orasan', // less reliable\n\n    'minute' => ':count orasan', // less reliable\n    'min' => ':count orasan', // less reliable\n    'a_minute' => ':count orasan', // less reliable\n    */\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_HT.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/yuw_PG.php","ext":"php","size":1016,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Information from native speakers Hannah Sarvasy nungon.localization@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['jenuari', 'febuari', 'mas', 'epril', 'mei', 'jun', 'julai', 'ögus', 'septemba', 'öktoba', 'nöwemba', 'diksemba'],\n    'months_short' => ['jen', 'feb', 'mas', 'epr', 'mei', 'jun', 'jul', 'ögu', 'sep', 'ökt', 'nöw', 'dis'],\n    'weekdays' => ['sönda', 'mönda', 'sinda', 'mitiwö', 'sogipbono', 'nenggo', 'söndanggie'],\n    'weekdays_short' => ['sön', 'mön', 'sin', 'mit', 'soi', 'nen', 'sab'],\n    'weekdays_min' => ['sön', 'mön', 'sin', 'mit', 'soi', 'nen', 'sab'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mi_NZ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/mi.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gv.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/gv_GB.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/km.php","ext":"php","size":3528,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kruy Vanna\n * - Sereysethy Touch\n * - JD Isaacks\n * - Sovichet Tep\n */\nreturn [\n    'year' => ':count ឆ្នាំ',\n    'a_year' => '{1}មួយឆ្នាំ|[-Inf,Inf]:count ឆ្នាំ',\n    'y' => ':count ឆ្នាំ',\n    'month' => ':count ខែ',\n    'a_month' => '{1}មួយខែ|[-Inf,Inf]:count ខែ',\n    'm' => ':count ខែ',\n    'week' => ':count សប្តាហ៍',\n    'w' => ':count សប្តាហ៍',\n    'day' => ':count ថ្ងៃ',\n    'a_day' => '{1}មួយថ្ងៃ|[-Inf,Inf]:count ថ្ងៃ',\n    'd' => ':count ថ្ងៃ',\n    'hour' => ':count ម៉ោង',\n    'a_hour' => '{1}មួយម៉ោង|[-Inf,Inf]:count ម៉ោង',\n    'h' => ':count ម៉ោង',\n    'minute' => ':count នាទី',\n    'a_minute' => '{1}មួយនាទី|[-Inf,Inf]:count នាទី',\n    'min' => ':count នាទី',\n    'second' => ':count វិនាទី',\n    'a_second' => '{0,1}ប៉ុន្មានវិនាទី|[-Inf,Inf]:count វិនាទី',\n    's' => ':count វិនាទី',\n    'ago' => ':timeមុន',\n    'from_now' => ':timeទៀត',\n    'after' => 'នៅ​ក្រោយ :time',\n    'before' => 'នៅ​មុន :time',\n    'diff_now' => 'ឥឡូវ',\n    'diff_today' => 'ថ្ងៃនេះ',\n    'diff_today_regexp' => 'ថ្ងៃនេះ(?:\\\\s+ម៉ោង)?',\n    'diff_yesterday' => 'ម្សិលមិញ',\n    'diff_yesterday_regexp' => 'ម្សិលមិញ(?:\\\\s+ម៉ោង)?',\n    'diff_tomorrow' => 'ថ្ងៃ​ស្អែក',\n    'diff_tomorrow_regexp' => 'ស្អែក(?:\\\\s+ម៉ោង)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[ថ្ងៃនេះ ម៉ោង] LT',\n        'nextDay' => '[ស្អែក ម៉ោង] LT',\n        'nextWeek' => 'dddd [ម៉ោង] LT',\n        'lastDay' => '[ម្សិលមិញ ម៉ោង] LT',\n        'lastWeek' => 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => 'ទី:number',\n    'meridiem' => ['ព្រឹក', 'ល្ងាច'],\n    'months' => ['មករា', 'កុម្ភៈ', 'មីនា', 'មេសា', 'ឧសភា', 'មិថុនា', 'កក្កដា', 'សីហា', 'កញ្ញា', 'តុលា', 'វិច្ឆិកា', 'ធ្នូ'],\n    'months_short' => ['មករា', 'កុម្ភៈ', 'មីនា', 'មេសា', 'ឧសភា', 'មិថុនា', 'កក្កដា', 'សីហា', 'កញ្ញា', 'តុលា', 'វិច្ឆិកា', 'ធ្នូ'],\n    'weekdays' => ['អាទិត្យ', 'ច័ន្ទ', 'អង្គារ', 'ពុធ', 'ព្រហស្បតិ៍', 'សុក្រ', 'សៅរ៍'],\n    'weekdays_short' => ['អា', 'ច', 'អ', 'ព', 'ព្រ', 'សុ', 'ស'],\n    'weekdays_min' => ['អា', 'ច', 'អ', 'ព', 'ព្រ', 'សុ', 'ស'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', 'និង '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bi_VU.php","ext":"php","size":1917,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Samsung Electronics Co., Ltd.    akhilesh.k@samsung.com & maninder1.s@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'dddd DD MMM YYYY',\n    ],\n    'months' => ['jenuware', 'febwari', 'maj', 'epril', 'mei', 'jun', 'julae', 'ogis', 'septemba', 'oktoba', 'novemba', 'disemba'],\n    'months_short' => ['jen', 'feb', 'maj', 'epr', 'mei', 'jun', 'jul', 'ogi', 'sep', 'okt', 'nov', 'dis'],\n    'weekdays' => ['sande', 'mande', 'maj', 'wota', 'fraede', 'sarede'],\n    'weekdays_short' => ['san', 'man', 'maj', 'wot', 'fra', 'sar'],\n    'weekdays_min' => ['san', 'man', 'maj', 'wot', 'fra', 'sar'],\n\n    'year' => ':count seven', // less reliable\n    'y' => ':count seven', // less reliable\n    'a_year' => ':count seven', // less reliable\n\n    'month' => ':count mi', // less reliable\n    'm' => ':count mi', // less reliable\n    'a_month' => ':count mi', // less reliable\n\n    'week' => ':count sarede', // less reliable\n    'w' => ':count sarede', // less reliable\n    'a_week' => ':count sarede', // less reliable\n\n    'day' => ':count betde', // less reliable\n    'd' => ':count betde', // less reliable\n    'a_day' => ':count betde', // less reliable\n\n    'hour' => ':count klok', // less reliable\n    'h' => ':count klok', // less reliable\n    'a_hour' => ':count klok', // less reliable\n\n    'minute' => ':count smol', // less reliable\n    'min' => ':count smol', // less reliable\n    'a_minute' => ':count smol', // less reliable\n\n    'second' => ':count tu', // less reliable\n    's' => ':count tu', // less reliable\n    'a_second' => ':count tu', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_BO.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_SO.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ku.php","ext":"php","size":2072,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Unicode, Inc.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'ago' => 'berî :time',\n    'from_now' => 'di :time de',\n    'after' => ':time piştî',\n    'before' => ':time berê',\n    'year' => ':count sal',\n    'a_year' => ':count sal',\n    'y' => ':count sal',\n    'year_ago' => ':count salê|:count salan',\n    'y_ago' => ':count salê|:count salan',\n    'year_from_now' => 'salekê|:count salan',\n    'y_from_now' => 'salekê|:count salan',\n    'month' => ':count meh',\n    'a_month' => ':count meh',\n    'm' => ':count meh',\n    'week' => ':count hefte',\n    'a_week' => ':count hefte',\n    'w' => ':count hefte',\n    'day' => ':count roj',\n    'a_day' => ':count roj',\n    'd' => ':count roj',\n    'hour' => ':count saet',\n    'a_hour' => ':count saet',\n    'h' => ':count saet',\n    'minute' => ':count deqîqe',\n    'a_minute' => ':count deqîqe',\n    'min' => ':count deqîqe',\n    'second' => ':count saniye',\n    'a_second' => ':count saniye',\n    's' => ':count saniye',\n    'months' => ['rêbendanê', 'reşemiyê', 'adarê', 'avrêlê', 'gulanê', 'pûşperê', 'tîrmehê', 'gelawêjê', 'rezberê', 'kewçêrê', 'sermawezê', 'berfanbarê'],\n    'months_standalone' => ['rêbendan', 'reşemî', 'adar', 'avrêl', 'gulan', 'pûşper', 'tîrmeh', 'gelawêj', 'rezber', 'kewçêr', 'sermawez', 'berfanbar'],\n    'months_short' => ['rêb', 'reş', 'ada', 'avr', 'gul', 'pûş', 'tîr', 'gel', 'rez', 'kew', 'ser', 'ber'],\n    'weekdays' => ['yekşem', 'duşem', 'sêşem', 'çarşem', 'pêncşem', 'în', 'şemî'],\n    'weekdays_short' => ['yş', 'dş', 'sş', 'çş', 'pş', 'în', 'ş'],\n    'weekdays_min' => ['Y', 'D', 'S', 'Ç', 'P', 'Î', 'Ş'],\n    'list' => [', ', ' û '],\n    'ordinal' => ':number',\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mni_IN.php","ext":"php","size":1818,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat Pune    libc-alpha@sourceware.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['জানুৱারি', 'ফেব্রুৱারি', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগষ্ট', 'সেপ্তেম্বর', 'ওক্তোবর', 'নবেম্বর', 'ডিসেম্বর'],\n    'months_short' => ['জান', 'ফেব', 'মার', 'এপ্রি', 'মে', 'জুন', 'জুল', 'আগ', 'সেপ', 'ওক্ত', 'নবে', 'ডিস'],\n    'weekdays' => ['নোংমাইজিং', 'নিংথৌকাবা', 'লৈবাকপোকপা', 'য়ুমশকৈশা', 'শগোলশেন', 'ইরাই', 'থাংজ'],\n    'weekdays_short' => ['নোং', 'নিং', 'লৈবাক', 'য়ুম', 'শগোল', 'ইরা', 'থাং'],\n    'weekdays_min' => ['নোং', 'নিং', 'লৈবাক', 'য়ুম', 'শগোল', 'ইরা', 'থাং'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['এ.ম.', 'প.ম.'],\n\n    'year' => ':count ইসিং', // less reliable\n    'y' => ':count ইসিং', // less reliable\n    'a_year' => ':count ইসিং', // less reliable\n\n    'second' => ':count ꯅꯤꯡꯊꯧꯀꯥꯕ', // less reliable\n    's' => ':count ꯅꯤꯡꯊꯧꯀꯥꯕ', // less reliable\n    'a_second' => ':count ꯅꯤꯡꯊꯧꯀꯥꯕ', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_CU.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_MA.php","ext":"php","size":352,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'first_day_of_week' => 6,\n    'weekend' => [5, 6],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/af.php","ext":"php","size":2675,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - JD Isaacks\n * - Pierre du Plessis\n */\nreturn [\n    'year' => ':count jaar',\n    'a_year' => '\\'n jaar|:count jaar',\n    'y' => ':count j.',\n    'month' => ':count maand|:count maande',\n    'a_month' => '\\'n maand|:count maande',\n    'm' => ':count maa.',\n    'week' => ':count week|:count weke',\n    'a_week' => '\\'n week|:count weke',\n    'w' => ':count w.',\n    'day' => ':count dag|:count dae',\n    'a_day' => '\\'n dag|:count dae',\n    'd' => ':count d.',\n    'hour' => ':count uur',\n    'a_hour' => '\\'n uur|:count uur',\n    'h' => ':count u.',\n    'minute' => ':count minuut|:count minute',\n    'a_minute' => '\\'n minuut|:count minute',\n    'min' => ':count min.',\n    'second' => ':count sekond|:count sekondes',\n    'a_second' => '\\'n paar sekondes|:count sekondes',\n    's' => ':count s.',\n    'ago' => ':time gelede',\n    'from_now' => 'oor :time',\n    'after' => ':time na',\n    'before' => ':time voor',\n    'diff_now' => 'Nou',\n    'diff_today' => 'Vandag',\n    'diff_today_regexp' => 'Vandag(?:\\\\s+om)?',\n    'diff_yesterday' => 'Gister',\n    'diff_yesterday_regexp' => 'Gister(?:\\\\s+om)?',\n    'diff_tomorrow' => 'Môre',\n    'diff_tomorrow_regexp' => 'Môre(?:\\\\s+om)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Vandag om] LT',\n        'nextDay' => '[Môre om] LT',\n        'nextWeek' => 'dddd [om] LT',\n        'lastDay' => '[Gister om] LT',\n        'lastWeek' => '[Laas] dddd [om] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static fn ($number) => $number.(($number === 1 || $number === 8 || $number >= 20) ? 'ste' : 'de'),\n    'meridiem' => ['VM', 'NM'],\n    'months' => ['Januarie', 'Februarie', 'Maart', 'April', 'Mei', 'Junie', 'Julie', 'Augustus', 'September', 'Oktober', 'November', 'Desember'],\n    'months_short' => ['Jan', 'Feb', 'Mrt', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],\n    'weekdays' => ['Sondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrydag', 'Saterdag'],\n    'weekdays_short' => ['Son', 'Maa', 'Din', 'Woe', 'Don', 'Vry', 'Sat'],\n    'weekdays_min' => ['So', 'Ma', 'Di', 'Wo', 'Do', 'Vr', 'Sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' en '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ig.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ig_NG.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kl.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/kl_GL.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_JE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl_BE.php","ext":"php","size":494,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Roy\n * - Stephan\n * - François B\n * - Tim Fish\n * - Kevin Huang\n * - Jacob Middag\n * - JD Isaacks\n * - Propaganistas\n */\nreturn array_replace_recursive(require __DIR__.'/nl.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_YT.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ee_TG.php","ext":"php","size":472,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ee.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'LLL' => 'HH:mm MMMM D [lia] YYYY',\n        'LLLL' => 'HH:mm dddd, MMMM D [lia] YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BZ.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_ME.php","ext":"php","size":275,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sr_Latn_ME.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/agr.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/agr_PE.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_SV.php","ext":"php","size":643,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'months' => ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\n    'months_short' => ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ago', 'sep', 'oct', 'nov', 'dic'],\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_DK.php","ext":"php","size":470,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Danish Standards Association  bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/i18n.php","ext":"php","size":781,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n    'months' => ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n    'months_short' => ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n    'weekdays' => ['1', '2', '3', '4', '5', '6', '7'],\n    'weekdays_short' => ['1', '2', '3', '4', '5', '6', '7'],\n    'weekdays_min' => ['1', '2', '3', '4', '5', '6', '7'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_NF.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wae_CH.php","ext":"php","size":1157,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Walser Translation Team ml@translate-wae.ch\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n    'months' => ['Jenner', 'Hornig', 'Märze', 'Abrille', 'Meije', 'Bráčet', 'Heiwet', 'Öigšte', 'Herbštmánet', 'Wímánet', 'Wintermánet', 'Chrištmánet'],\n    'months_short' => ['Jen', 'Hor', 'Mär', 'Abr', 'Mei', 'Brá', 'Hei', 'Öig', 'Her', 'Wím', 'Win', 'Chr'],\n    'weekdays' => ['Suntag', 'Mäntag', 'Zischtag', 'Mittwuch', 'Frontag', 'Fritag', 'Samschtag'],\n    'weekdays_short' => ['Sun', 'Män', 'Zis', 'Mit', 'Fro', 'Fri', 'Sam'],\n    'weekdays_min' => ['Sun', 'Män', 'Zis', 'Mit', 'Fro', 'Fri', 'Sam'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'month' => ':count Maano', // less reliable\n    'm' => ':count Maano', // less reliable\n    'a_month' => ':count Maano', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/saq.php","ext":"php","size":1222,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['Tesiran', 'Teipa'],\n    'weekdays' => ['Mderot ee are', 'Mderot ee kuni', 'Mderot ee ong’wan', 'Mderot ee inet', 'Mderot ee ile', 'Mderot ee sapa', 'Mderot ee kwe'],\n    'weekdays_short' => ['Are', 'Kun', 'Ong', 'Ine', 'Ile', 'Sap', 'Kwe'],\n    'weekdays_min' => ['Are', 'Kun', 'Ong', 'Ine', 'Ile', 'Sap', 'Kwe'],\n    'months' => ['Lapa le obo', 'Lapa le waare', 'Lapa le okuni', 'Lapa le ong’wan', 'Lapa le imet', 'Lapa le ile', 'Lapa le sapa', 'Lapa le isiet', 'Lapa le saal', 'Lapa le tomon', 'Lapa le tomon obo', 'Lapa le tomon waare'],\n    'months_short' => ['Obo', 'Waa', 'Oku', 'Ong', 'Ime', 'Ile', 'Sap', 'Isi', 'Saa', 'Tom', 'Tob', 'Tow'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bg_BG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/bg.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/chr.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/chr_US.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/wae.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/wae_CH.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/anp.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/anp_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_GA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Latn_BA.php","ext":"php","size":1000,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'sr');\n    }, 'sr_Latn_BA');\n}\n// @codeCoverageIgnoreEnd\n\nreturn array_replace_recursive(require __DIR__.'/sr_Latn.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D.M.yy.',\n        'LL' => 'DD.MM.YYYY.',\n        'LLL' => 'DD. MMMM YYYY. HH:mm',\n        'LLLL' => 'dddd, DD. MMMM YYYY. HH:mm',\n    ],\n    'weekdays' => ['nedjelja', 'ponedeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],\n    'weekdays_short' => ['ned.', 'pon.', 'ut.', 'sr.', 'čet.', 'pet.', 'sub.'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bn_IN.php","ext":"php","size":1560,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/bn.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['জানুয়ারী', 'ফেব্রুয়ারী', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'],\n    'months_short' => ['জানু', 'ফেব', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'],\n    'weekdays' => ['রবিবার', 'সোমবার', 'মঙ্গলবার', 'বুধবার', 'বৃহস্পতিবার', 'শুক্রবার', 'শনিবার'],\n    'weekdays_short' => ['রবি', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহস্পতি', 'শুক্র', 'শনি'],\n    'weekdays_min' => ['রবি', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহস্পতি', 'শুক্র', 'শনি'],\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mer.php","ext":"php","size":1673,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['RŨ', 'ŨG'],\n    'weekdays' => ['Kiumia', 'Muramuko', 'Wairi', 'Wethatu', 'Wena', 'Wetano', 'Jumamosi'],\n    'weekdays_short' => ['KIU', 'MRA', 'WAI', 'WET', 'WEN', 'WTN', 'JUM'],\n    'weekdays_min' => ['KIU', 'MRA', 'WAI', 'WET', 'WEN', 'WTN', 'JUM'],\n    'months' => ['Januarĩ', 'Feburuarĩ', 'Machi', 'Ĩpurũ', 'Mĩĩ', 'Njuni', 'Njuraĩ', 'Agasti', 'Septemba', 'Oktũba', 'Novemba', 'Dicemba'],\n    'months_short' => ['JAN', 'FEB', 'MAC', 'ĨPU', 'MĨĨ', 'NJU', 'NJR', 'AGA', 'SPT', 'OKT', 'NOV', 'DEC'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'year' => ':count murume', // less reliable\n    'y' => ':count murume', // less reliable\n    'a_year' => ':count murume', // less reliable\n\n    'month' => ':count muchaara', // less reliable\n    'm' => ':count muchaara', // less reliable\n    'a_month' => ':count muchaara', // less reliable\n\n    'minute' => ':count monto', // less reliable\n    'min' => ':count monto', // less reliable\n    'a_minute' => ':count monto', // less reliable\n\n    'second' => ':count gikeno', // less reliable\n    's' => ':count gikeno', // less reliable\n    'a_second' => ':count gikeno', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar.php","ext":"php","size":4579,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Atef Ben Ali (atefBB)\n * - Ibrahim AshShohail\n * - MLTDev\n * - Mohamed Sabil (mohamedsabil83)\n * - Yazan Alnugnugh (yazan-alnugnugh)\n */\n$months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'a_year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'a_month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'a_week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'a_day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'a_hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'a_minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'a_second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => ':time من الآن',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدًا(?:\\\\s+عند)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'اث', 'ثل', 'أر', 'خم', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم عند الساعة] LT',\n        'nextDay' => '[غدًا عند الساعة] LT',\n        'nextWeek' => 'dddd [عند الساعة] LT',\n        'lastDay' => '[أمس عند الساعة] LT',\n        'lastWeek' => 'dddd [عند الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/it_SM.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/it.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_KN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nyn.php","ext":"php","size":1126,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['Sande', 'Orwokubanza', 'Orwakabiri', 'Orwakashatu', 'Orwakana', 'Orwakataano', 'Orwamukaaga'],\n    'weekdays_short' => ['SAN', 'ORK', 'OKB', 'OKS', 'OKN', 'OKT', 'OMK'],\n    'weekdays_min' => ['SAN', 'ORK', 'OKB', 'OKS', 'OKN', 'OKT', 'OMK'],\n    'months' => ['Okwokubanza', 'Okwakabiri', 'Okwakashatu', 'Okwakana', 'Okwakataana', 'Okwamukaaga', 'Okwamushanju', 'Okwamunaana', 'Okwamwenda', 'Okwaikumi', 'Okwaikumi na kumwe', 'Okwaikumi na ibiri'],\n    'months_short' => ['KBZ', 'KBR', 'KST', 'KKN', 'KTN', 'KMK', 'KMS', 'KMN', 'KMW', 'KKM', 'KNK', 'KNB'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ca_ES_Valencia.php","ext":"php","size":593,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'ca');\n    }, 'ca_ES_Valencia');\n}\n// @codeCoverageIgnoreEnd\n\nreturn array_replace_recursive(require __DIR__.'/ca.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kkj.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_IL.php","ext":"php","size":666,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Yoav Amit\n * - François B\n * - Mayank Badola\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fo.php","ext":"php","size":2462,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kristian Sakarisson\n * - François B\n * - JD Isaacks\n * - Sverri Mohr Olsen\n */\nreturn [\n    'year' => 'eitt ár|:count ár',\n    'y' => ':count ár|:count ár',\n    'month' => 'ein mánaði|:count mánaðir',\n    'm' => ':count mánaður|:count mánaðir',\n    'week' => ':count vika|:count vikur',\n    'w' => ':count vika|:count vikur',\n    'day' => 'ein dagur|:count dagar',\n    'd' => ':count dag|:count dagar',\n    'hour' => 'ein tími|:count tímar',\n    'h' => ':count tími|:count tímar',\n    'minute' => 'ein minutt|:count minuttir',\n    'min' => ':count minutt|:count minuttir',\n    'second' => 'fá sekund|:count sekundir',\n    's' => ':count sekund|:count sekundir',\n    'ago' => ':time síðani',\n    'from_now' => 'um :time',\n    'after' => ':time aftaná',\n    'before' => ':time áðrenn',\n    'diff_today' => 'Í',\n    'diff_yesterday' => 'Í',\n    'diff_yesterday_regexp' => 'Í(?:\\\\s+gjár)?(?:\\\\s+kl.)?',\n    'diff_tomorrow' => 'Í',\n    'diff_tomorrow_regexp' => 'Í(?:\\\\s+morgin)?(?:\\\\s+kl.)?',\n    'diff_today_regexp' => 'Í(?:\\\\s+dag)?(?:\\\\s+kl.)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D. MMMM, YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Í dag kl.] LT',\n        'nextDay' => '[Í morgin kl.] LT',\n        'nextWeek' => 'dddd [kl.] LT',\n        'lastDay' => '[Í gjár kl.] LT',\n        'lastWeek' => '[síðstu] dddd [kl] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['januar', 'februar', 'mars', 'apríl', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    'weekdays' => ['sunnudagur', 'mánadagur', 'týsdagur', 'mikudagur', 'hósdagur', 'fríggjadagur', 'leygardagur'],\n    'weekdays_short' => ['sun', 'mán', 'týs', 'mik', 'hós', 'frí', 'ley'],\n    'weekdays_min' => ['su', 'má', 'tý', 'mi', 'hó', 'fr', 'le'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' og '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/rw.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/rw_RW.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/is.php","ext":"php","size":2008,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kristján Ingi Geirsson\n */\nreturn [\n    'year' => '1 ár|:count ár',\n    'y' => '1 ár|:count ár',\n    'month' => '1 mánuður|:count mánuðir',\n    'm' => '1 mánuður|:count mánuðir',\n    'week' => '1 vika|:count vikur',\n    'w' => '1 vika|:count vikur',\n    'day' => '1 dagur|:count dagar',\n    'd' => '1 dagur|:count dagar',\n    'hour' => '1 klukkutími|:count klukkutímar',\n    'h' => '1 klukkutími|:count klukkutímar',\n    'minute' => '1 mínúta|:count mínútur',\n    'min' => '1 mínúta|:count mínútur',\n    'second' => '1 sekúnda|:count sekúndur',\n    's' => '1 sekúnda|:count sekúndur',\n    'ago' => ':time síðan',\n    'from_now' => ':time síðan',\n    'after' => ':time eftir',\n    'before' => ':time fyrir',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' og '],\n    'meridiem' => ['fh', 'eh'],\n    'diff_now' => 'núna',\n    'diff_yesterday' => 'í gær',\n    'diff_tomorrow' => 'á morgun',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM [kl.] HH:mm',\n        'LLLL' => 'dddd D. MMMM YYYY [kl.] HH:mm',\n    ],\n    'weekdays' => ['sunnudaginn', 'mánudaginn', 'þriðjudaginn', 'miðvikudaginn', 'fimmtudaginn', 'föstudaginn', 'laugardaginn'],\n    'weekdays_short' => ['sun', 'mán', 'þri', 'mið', 'fim', 'fös', 'lau'],\n    'weekdays_min' => ['sun', 'mán', 'þri', 'mið', 'fim', 'fös', 'lau'],\n    'months' => ['janúar', 'febrúar', 'mars', 'apríl', 'maí', 'júní', 'júlí', 'ágúst', 'september', 'október', 'nóvember', 'desember'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'maí', 'jún', 'júl', 'ágú', 'sep', 'okt', 'nóv', 'des'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/luo.php","ext":"php","size":1853,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['OD', 'OT'],\n    'weekdays' => ['Jumapil', 'Wuok Tich', 'Tich Ariyo', 'Tich Adek', 'Tich Ang’wen', 'Tich Abich', 'Ngeso'],\n    'weekdays_short' => ['JMP', 'WUT', 'TAR', 'TAD', 'TAN', 'TAB', 'NGS'],\n    'weekdays_min' => ['JMP', 'WUT', 'TAR', 'TAD', 'TAN', 'TAB', 'NGS'],\n    'months' => ['Dwe mar Achiel', 'Dwe mar Ariyo', 'Dwe mar Adek', 'Dwe mar Ang’wen', 'Dwe mar Abich', 'Dwe mar Auchiel', 'Dwe mar Abiriyo', 'Dwe mar Aboro', 'Dwe mar Ochiko', 'Dwe mar Apar', 'Dwe mar gi achiel', 'Dwe mar Apar gi ariyo'],\n    'months_short' => ['DAC', 'DAR', 'DAD', 'DAN', 'DAH', 'DAU', 'DAO', 'DAB', 'DOC', 'DAP', 'DGI', 'DAG'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'year' => 'higni :count',\n    'y' => 'higni :count',\n    'a_year' => ':higni :count',\n\n    'month' => 'dweche :count',\n    'm' => 'dweche :count',\n    'a_month' => 'dweche :count',\n\n    'week' => 'jumbe :count',\n    'w' => 'jumbe :count',\n    'a_week' => 'jumbe :count',\n\n    'day' => 'ndalo :count',\n    'd' => 'ndalo :count',\n    'a_day' => 'ndalo :count',\n\n    'hour' => 'seche :count',\n    'h' => 'seche :count',\n    'a_hour' => 'seche :count',\n\n    'minute' => 'dakika :count',\n    'min' => 'dakika :count',\n    'a_minute' => 'dakika :count',\n\n    'second' => 'nus dakika :count',\n    's' => 'nus dakika :count',\n    'a_second' => 'nus dakika :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hr_BA.php","ext":"php","size":1268,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - DarkoDevelop\n */\nreturn array_replace_recursive(require __DIR__.'/hr.php', [\n    'weekdays' => ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],\n    'weekdays_short' => ['ned', 'pon', 'uto', 'sri', 'čet', 'pet', 'sub'],\n    'weekdays_min' => ['ned', 'pon', 'uto', 'sri', 'čet', 'pet', 'sub'],\n    'months' => ['siječnja', 'veljače', 'ožujka', 'travnja', 'svibnja', 'lipnja', 'srpnja', 'kolovoza', 'rujna', 'listopada', 'studenoga', 'prosinca'],\n    'months_short' => ['sij', 'velj', 'ožu', 'tra', 'svi', 'lip', 'srp', 'kol', 'ruj', 'lis', 'stu', 'pro'],\n    'months_standalone' => ['siječanj', 'veljača', 'ožujak', 'travanj', 'svibanj', 'lipanj', 'srpanj', 'kolovoz', 'rujan', 'listopad', 'studeni', 'prosinac'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D. M. yy.',\n        'LL' => 'D. MMM YYYY.',\n        'LLL' => 'D. MMMM YYYY. HH:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY. HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nn.php","ext":"php","size":2641,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Alexander Tømmerås\n * - Øystein\n * - JD Isaacks\n * - Gaute Hvoslef Kvalnes (gaute)\n */\nreturn [\n    'year' => ':count år',\n    'a_year' => 'eit år|:count år',\n    'y' => ':count år',\n    'month' => ':count månad|:count månader',\n    'a_month' => 'ein månad|:count månader',\n    'm' => ':count md',\n    'week' => ':count veke|:count veker',\n    'a_week' => 'ei veke|:count veker',\n    'w' => ':countv',\n    'day' => ':count dag|:count dagar',\n    'a_day' => 'ein dag|:count dagar',\n    'd' => ':countd',\n    'hour' => ':count time|:count timar',\n    'a_hour' => 'ein time|:count timar',\n    'h' => ':countt',\n    'minute' => ':count minutt',\n    'a_minute' => 'eit minutt|:count minutt',\n    'min' => ':countm',\n    'second' => ':count sekund',\n    'a_second' => 'nokre sekund|:count sekund',\n    's' => ':counts',\n    'ago' => ':time sidan',\n    'from_now' => 'om :time',\n    'after' => ':time etter',\n    'before' => ':time før',\n    'diff_today' => 'I dag',\n    'diff_yesterday' => 'I går',\n    'diff_yesterday_regexp' => 'I går(?:\\\\s+klokka)?',\n    'diff_tomorrow' => 'I morgon',\n    'diff_tomorrow_regexp' => 'I morgon(?:\\\\s+klokka)?',\n    'diff_today_regexp' => 'I dag(?:\\\\s+klokka)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY [kl.] H:mm',\n        'LLLL' => 'dddd D. MMMM YYYY [kl.] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[I dag klokka] LT',\n        'nextDay' => '[I morgon klokka] LT',\n        'nextWeek' => 'dddd [klokka] LT',\n        'lastDay' => '[I går klokka] LT',\n        'lastWeek' => '[Føregåande] dddd [klokka] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    'weekdays' => ['sundag', 'måndag', 'tysdag', 'onsdag', 'torsdag', 'fredag', 'laurdag'],\n    'weekdays_short' => ['sun', 'mån', 'tys', 'ons', 'tor', 'fre', 'lau'],\n    'weekdays_min' => ['su', 'må', 'ty', 'on', 'to', 'fr', 'la'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' og '],\n    'meridiem' => ['f.m.', 'e.m.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gom_Latn.php","ext":"php","size":2377,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn [\n    'year' => ':count voros|:count vorsam',\n    'y' => ':countv',\n    'month' => ':count mhoino|:count mhoine',\n    'm' => ':countmh',\n    'week' => ':count satolleacho|:count satolleache',\n    'w' => ':countsa|:countsa',\n    'day' => ':count dis',\n    'd' => ':countd',\n    'hour' => ':count hor|:count horam',\n    'h' => ':counth',\n    'minute' => ':count minute|:count mintam',\n    'min' => ':countm',\n    'second' => ':count second',\n    's' => ':counts',\n\n    'diff_today' => 'Aiz',\n    'diff_yesterday' => 'Kal',\n    'diff_tomorrow' => 'Faleam',\n    'formats' => [\n        'LT' => 'A h:mm [vazta]',\n        'LTS' => 'A h:mm:ss [vazta]',\n        'L' => 'DD-MM-YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY A h:mm [vazta]',\n        'LLLL' => 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n        'llll' => 'ddd, D MMM YYYY, A h:mm [vazta]',\n    ],\n\n    'calendar' => [\n        'sameDay' => '[Aiz] LT',\n        'nextDay' => '[Faleam] LT',\n        'nextWeek' => '[Ieta to] dddd[,] LT',\n        'lastDay' => '[Kal] LT',\n        'lastWeek' => '[Fatlo] dddd[,] LT',\n        'sameElse' => 'L',\n    ],\n\n    'months' => ['Janer', 'Febrer', 'Mars', 'Abril', 'Mai', 'Jun', 'Julai', 'Agost', 'Setembr', 'Otubr', 'Novembr', 'Dezembr'],\n    'months_short' => ['Jan.', 'Feb.', 'Mars', 'Abr.', 'Mai', 'Jun', 'Jul.', 'Ago.', 'Set.', 'Otu.', 'Nov.', 'Dez.'],\n    'weekdays' => ['Aitar', 'Somar', 'Mongllar', 'Budvar', 'Brestar', 'Sukrar', 'Son\\'var'],\n    'weekdays_short' => ['Ait.', 'Som.', 'Mon.', 'Bud.', 'Bre.', 'Suk.', 'Son.'],\n    'weekdays_min' => ['Ai', 'Sm', 'Mo', 'Bu', 'Br', 'Su', 'Sn'],\n\n    'ordinal' => static fn ($number, $period) => $number.($period === 'D' ? 'er' : ''),\n\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'rati';\n        }\n        if ($hour < 12) {\n            return 'sokalli';\n        }\n        if ($hour < 16) {\n            return 'donparam';\n        }\n        if ($hour < 20) {\n            return 'sanje';\n        }\n\n        return 'rati';\n    },\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' ani '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_FJ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_SD.php","ext":"php","size":1996,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/so_SO.php","ext":"php","size":337,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn require __DIR__.'/so.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ks.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/ks_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/se.php","ext":"php","size":2748,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - Karamell\n */\nreturn [\n    'year' => '{1}:count jahki|:count jagit',\n    'a_year' => '{1}okta jahki|:count jagit',\n    'y' => ':count j.',\n    'month' => '{1}:count mánnu|:count mánut',\n    'a_month' => '{1}okta mánnu|:count mánut',\n    'm' => ':count mán.',\n    'week' => '{1}:count vahkku|:count vahkku',\n    'a_week' => '{1}okta vahkku|:count vahkku',\n    'w' => ':count v.',\n    'day' => '{1}:count beaivi|:count beaivvit',\n    'a_day' => '{1}okta beaivi|:count beaivvit',\n    'd' => ':count b.',\n    'hour' => '{1}:count diimmu|:count diimmut',\n    'a_hour' => '{1}okta diimmu|:count diimmut',\n    'h' => ':count d.',\n    'minute' => '{1}:count minuhta|:count minuhtat',\n    'a_minute' => '{1}okta minuhta|:count minuhtat',\n    'min' => ':count min.',\n    'second' => '{1}:count sekunddat|:count sekunddat',\n    'a_second' => '{1}moadde sekunddat|:count sekunddat',\n    's' => ':count s.',\n    'ago' => 'maŋit :time',\n    'from_now' => ':time geažes',\n    'diff_yesterday' => 'ikte',\n    'diff_yesterday_regexp' => 'ikte(?:\\\\s+ti)?',\n    'diff_today' => 'otne',\n    'diff_today_regexp' => 'otne(?:\\\\s+ti)?',\n    'diff_tomorrow' => 'ihttin',\n    'diff_tomorrow_regexp' => 'ihttin(?:\\\\s+ti)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'MMMM D. [b.] YYYY',\n        'LLL' => 'MMMM D. [b.] YYYY [ti.] HH:mm',\n        'LLLL' => 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[otne ti] LT',\n        'nextDay' => '[ihttin ti] LT',\n        'nextWeek' => 'dddd [ti] LT',\n        'lastDay' => '[ikte ti] LT',\n        'lastWeek' => '[ovddit] dddd [ti] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number.',\n    'months' => ['ođđajagemánnu', 'guovvamánnu', 'njukčamánnu', 'cuoŋománnu', 'miessemánnu', 'geassemánnu', 'suoidnemánnu', 'borgemánnu', 'čakčamánnu', 'golggotmánnu', 'skábmamánnu', 'juovlamánnu'],\n    'months_short' => ['ođđj', 'guov', 'njuk', 'cuo', 'mies', 'geas', 'suoi', 'borg', 'čakč', 'golg', 'skáb', 'juov'],\n    'weekdays' => ['sotnabeaivi', 'vuossárga', 'maŋŋebárga', 'gaskavahkku', 'duorastat', 'bearjadat', 'lávvardat'],\n    'weekdays_short' => ['sotn', 'vuos', 'maŋ', 'gask', 'duor', 'bear', 'láv'],\n    'weekdays_min' => ['s', 'v', 'm', 'g', 'd', 'b', 'L'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' ja '],\n    'meridiem' => ['i.b.', 'e.b.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_PR.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/jv.php","ext":"php","size":2648,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - tgfjt\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count taun',\n    'a_year' => '{1}setaun|[-Inf,Inf]:count taun',\n    'month' => ':count wulan',\n    'a_month' => '{1}sewulan|[-Inf,Inf]:count wulan',\n    'week' => ':count minggu',\n    'a_week' => '{1}sakminggu|[-Inf,Inf]:count minggu',\n    'day' => ':count dina',\n    'a_day' => '{1}sedina|[-Inf,Inf]:count dina',\n    'hour' => ':count jam',\n    'a_hour' => '{1}setunggal jam|[-Inf,Inf]:count jam',\n    'minute' => ':count menit',\n    'a_minute' => '{1}setunggal menit|[-Inf,Inf]:count menit',\n    'second' => ':count detik',\n    'a_second' => '{0,1}sawetawis detik|[-Inf,Inf]:count detik',\n    'ago' => ':time ingkang kepengker',\n    'from_now' => 'wonten ing :time',\n    'diff_today' => 'Dinten',\n    'diff_yesterday' => 'Kala',\n    'diff_yesterday_regexp' => 'Kala(?:\\\\s+wingi)?(?:\\\\s+pukul)?',\n    'diff_tomorrow' => 'Mbenjang',\n    'diff_tomorrow_regexp' => 'Mbenjang(?:\\\\s+pukul)?',\n    'diff_today_regexp' => 'Dinten(?:\\\\s+puniko)?(?:\\\\s+pukul)?',\n    'formats' => [\n        'LT' => 'HH.mm',\n        'LTS' => 'HH.mm.ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY [pukul] HH.mm',\n        'LLLL' => 'dddd, D MMMM YYYY [pukul] HH.mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Dinten puniko pukul] LT',\n        'nextDay' => '[Mbenjang pukul] LT',\n        'nextWeek' => 'dddd [pukul] LT',\n        'lastDay' => '[Kala wingi pukul] LT',\n        'lastWeek' => 'dddd [kepengker pukul] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 11) {\n            return 'enjing';\n        }\n        if ($hour < 15) {\n            return 'siyang';\n        }\n        if ($hour < 19) {\n            return 'sonten';\n        }\n\n        return 'ndalu';\n    },\n    'months' => ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'Nopember', 'Desember'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Ags', 'Sep', 'Okt', 'Nop', 'Des'],\n    'weekdays' => ['Minggu', 'Senen', 'Seloso', 'Rebu', 'Kemis', 'Jemuwah', 'Septu'],\n    'weekdays_short' => ['Min', 'Sen', 'Sel', 'Reb', 'Kem', 'Jem', 'Sep'],\n    'weekdays_min' => ['Mg', 'Sn', 'Sl', 'Rb', 'Km', 'Jm', 'Sp'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' lan '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/th.php","ext":"php","size":3355,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Nate Whittaker\n * - John MacAslan\n * - Chanintorn Asavavichairoj\n * - JD Isaacks\n * - ROKAISAKKON\n * - RO'KAISAKKON\n * - Andreas Möller\n * - nithisa\n */\nreturn [\n    'year' => ':count ปี',\n    'y' => ':count ปี',\n    'month' => ':count เดือน',\n    'm' => ':count เดือน',\n    'week' => ':count สัปดาห์',\n    'w' => ':count สัปดาห์',\n    'day' => ':count วัน',\n    'd' => ':count วัน',\n    'hour' => ':count ชั่วโมง',\n    'h' => ':count ชั่วโมง',\n    'minute' => ':count นาที',\n    'min' => ':count นาที',\n    'second' => ':count วินาที',\n    'a_second' => '{1}ไม่กี่วินาที|[-Inf,Inf]:count วินาที',\n    's' => ':count วินาที',\n    'ago' => ':timeที่แล้ว',\n    'from_now' => 'อีก :time',\n    'after' => ':timeหลังจากนี้',\n    'before' => ':timeก่อน',\n    'diff_now' => 'ขณะนี้',\n    'diff_today' => 'วันนี้',\n    'diff_today_regexp' => 'วันนี้(?:\\\\s+เวลา)?',\n    'diff_yesterday' => 'เมื่อวาน',\n    'diff_yesterday_regexp' => 'เมื่อวานนี้(?:\\\\s+เวลา)?',\n    'diff_tomorrow' => 'พรุ่งนี้',\n    'diff_tomorrow_regexp' => 'พรุ่งนี้(?:\\\\s+เวลา)?',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY เวลา H:mm',\n        'LLLL' => 'วันddddที่ D MMMM YYYY เวลา H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[วันนี้ เวลา] LT',\n        'nextDay' => '[พรุ่งนี้ เวลา] LT',\n        'nextWeek' => 'dddd[หน้า เวลา] LT',\n        'lastDay' => '[เมื่อวานนี้ เวลา] LT',\n        'lastWeek' => '[วัน]dddd[ที่แล้ว เวลา] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ก่อนเที่ยง', 'หลังเที่ยง'],\n    'months' => ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'],\n    'months_short' => ['ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.', 'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.'],\n    'weekdays' => ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัสบดี', 'ศุกร์', 'เสาร์'],\n    'weekdays_short' => ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัส', 'ศุกร์', 'เสาร์'],\n    'weekdays_min' => ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.'],\n    'list' => [', ', ' และ '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/kea.php","ext":"php","size":1959,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['a', 'p'],\n    'weekdays' => ['dumingu', 'sigunda-fera', 'tersa-fera', 'kuarta-fera', 'kinta-fera', 'sesta-fera', 'sabadu'],\n    'weekdays_short' => ['dum', 'sig', 'ter', 'kua', 'kin', 'ses', 'sab'],\n    'weekdays_min' => ['du', 'si', 'te', 'ku', 'ki', 'se', 'sa'],\n    'weekdays_standalone' => ['dumingu', 'sigunda-fera', 'tersa-fera', 'kuarta-fera', 'kinta-fera', 'sesta-fera', 'sábadu'],\n    'months' => ['Janeru', 'Febreru', 'Marsu', 'Abril', 'Maiu', 'Junhu', 'Julhu', 'Agostu', 'Setenbru', 'Otubru', 'Nuvenbru', 'Dizenbru'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Otu', 'Nuv', 'Diz'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D [di] MMMM [di] YYYY HH:mm',\n        'LLLL' => 'dddd, D [di] MMMM [di] YYYY HH:mm',\n    ],\n\n    'year' => ':count otunu', // less reliable\n    'y' => ':count otunu', // less reliable\n    'a_year' => ':count otunu', // less reliable\n\n    'week' => ':count día dumingu', // less reliable\n    'w' => ':count día dumingu', // less reliable\n    'a_week' => ':count día dumingu', // less reliable\n\n    'day' => ':count diâ', // less reliable\n    'd' => ':count diâ', // less reliable\n    'a_day' => ':count diâ', // less reliable\n\n    'minute' => ':count sugundu', // less reliable\n    'min' => ':count sugundu', // less reliable\n    'a_minute' => ':count sugundu', // less reliable\n\n    'second' => ':count dós', // less reliable\n    's' => ':count dós', // less reliable\n    'a_second' => ':count dós', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/byn.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/byn_ER.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_GQ.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tcy_IN.php","ext":"php","size":1848,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IndLinux.org, Samsung Electronics Co., Ltd.    alexey.merzlyakov@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['ಜನವರಿ', 'ಫೆಬ್ರುವರಿ', 'ಮಾರ್ಚ್', 'ಏಪ್ರಿಲ್‌‌', 'ಮೇ', 'ಜೂನ್', 'ಜುಲೈ', 'ಆಗಸ್ಟ್', 'ಸೆಪ್ಟೆಂಬರ್‌', 'ಅಕ್ಟೋಬರ್', 'ನವೆಂಬರ್', 'ಡಿಸೆಂಬರ್'],\n    'months_short' => ['ಜ', 'ಫೆ', 'ಮಾ', 'ಏ', 'ಮೇ', 'ಜೂ', 'ಜು', 'ಆ', 'ಸೆ', 'ಅ', 'ನ', 'ಡಿ'],\n    'weekdays' => ['ಐಥಾರ', 'ಸೋಮಾರ', 'ಅಂಗರೆ', 'ಬುಧಾರ', 'ಗುರುವಾರ', 'ಶುಕ್ರರ', 'ಶನಿವಾರ'],\n    'weekdays_short' => ['ಐ', 'ಸೋ', 'ಅಂ', 'ಬು', 'ಗು', 'ಶು', 'ಶ'],\n    'weekdays_min' => ['ಐ', 'ಸೋ', 'ಅಂ', 'ಬು', 'ಗು', 'ಶು', 'ಶ'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ಕಾಂಡೆ', 'ಬಯ್ಯ'],\n\n    'year' => ':count ನೀರ್', // less reliable\n    'y' => ':count ನೀರ್', // less reliable\n    'a_year' => ':count ನೀರ್', // less reliable\n\n    'month' => ':count ಮೀನ್', // less reliable\n    'm' => ':count ಮೀನ್', // less reliable\n    'a_month' => ':count ಮೀನ್', // less reliable\n\n    'day' => ':count ಸುಗ್ಗಿ', // less reliable\n    'd' => ':count ಸುಗ್ಗಿ', // less reliable\n    'a_day' => ':count ಸುಗ್ಗಿ', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/shi_Tfng.php","ext":"php","size":268,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/shi.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/am_ET.php","ext":"php","size":2067,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጃንዩወሪ', 'ፌብሩወሪ', 'ማርች', 'ኤፕሪል', 'ሜይ', 'ጁን', 'ጁላይ', 'ኦገስት', 'ሴፕቴምበር', 'ኦክቶበር', 'ኖቬምበር', 'ዲሴምበር'],\n    'months_short' => ['ጃንዩ', 'ፌብሩ', 'ማርች', 'ኤፕረ', 'ሜይ ', 'ጁን ', 'ጁላይ', 'ኦገስ', 'ሴፕቴ', 'ኦክተ', 'ኖቬም', 'ዲሴም'],\n    'weekdays' => ['እሑድ', 'ሰኞ', 'ማክሰኞ', 'ረቡዕ', 'ሐሙስ', 'ዓርብ', 'ቅዳሜ'],\n    'weekdays_short' => ['እሑድ', 'ሰኞ ', 'ማክሰ', 'ረቡዕ', 'ሐሙስ', 'ዓርብ', 'ቅዳሜ'],\n    'weekdays_min' => ['እሑድ', 'ሰኞ ', 'ማክሰ', 'ረቡዕ', 'ሐሙስ', 'ዓርብ', 'ቅዳሜ'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ጡዋት', 'ከሰዓት'],\n\n    'year' => ':count አመት',\n    'y' => ':count አመት',\n    'a_year' => ':count አመት',\n\n    'month' => ':count ወር',\n    'm' => ':count ወር',\n    'a_month' => ':count ወር',\n\n    'week' => ':count ሳምንት',\n    'w' => ':count ሳምንት',\n    'a_week' => ':count ሳምንት',\n\n    'day' => ':count ቀን',\n    'd' => ':count ቀን',\n    'a_day' => ':count ቀን',\n\n    'hour' => ':count ሰዓት',\n    'h' => ':count ሰዓት',\n    'a_hour' => ':count ሰዓት',\n\n    'minute' => ':count ደቂቃ',\n    'min' => ':count ደቂቃ',\n    'a_minute' => ':count ደቂቃ',\n\n    'second' => ':count ሴኮንድ',\n    's' => ':count ሴኮንድ',\n    'a_second' => ':count ሴኮንድ',\n\n    'ago' => 'ከ:time በፊት',\n    'from_now' => 'በ:time ውስጥ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_KI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ha_NG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ha.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sgs_LT.php","ext":"php","size":1722,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Arnas Udovičius bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY.MM.DD',\n    ],\n    'months' => ['sausė', 'vasarė', 'kuova', 'balondė', 'gegožės', 'bėrželė', 'lëpas', 'rogpjūtė', 'siejės', 'spalė', 'lapkrėstė', 'grůdė'],\n    'months_short' => ['Sau', 'Vas', 'Kuo', 'Bal', 'Geg', 'Bėr', 'Lëp', 'Rgp', 'Sie', 'Spa', 'Lap', 'Grd'],\n    'weekdays' => ['nedielės dëna', 'panedielis', 'oterninks', 'sereda', 'četvergs', 'petnīčė', 'sobata'],\n    'weekdays_short' => ['Nd', 'Pn', 'Ot', 'Sr', 'Čt', 'Pt', 'Sb'],\n    'weekdays_min' => ['Nd', 'Pn', 'Ot', 'Sr', 'Čt', 'Pt', 'Sb'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n\n    'minute' => ':count mažos', // less reliable\n    'min' => ':count mažos', // less reliable\n    'a_minute' => ':count mažos', // less reliable\n\n    'year' => ':count metā',\n    'y' => ':count metā',\n    'a_year' => ':count metā',\n\n    'month' => ':count mienou',\n    'm' => ':count mienou',\n    'a_month' => ':count mienou',\n\n    'week' => ':count nedielė',\n    'w' => ':count nedielė',\n    'a_week' => ':count nedielė',\n\n    'day' => ':count dīna',\n    'd' => ':count dīna',\n    'a_day' => ':count dīna',\n\n    'hour' => ':count adīna',\n    'h' => ':count adīna',\n    'a_hour' => ':count adīna',\n\n    'second' => ':count Sekondė',\n    's' => ':count Sekondė',\n    'a_second' => ':count Sekondė',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sa_IN.php","ext":"php","size":2544,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - The Debian project Christian Perrier bubulle@debian.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D-MM-YY',\n    ],\n    'months' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'months_short' => ['जनवरी', 'फ़रवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    'weekdays' => ['रविवासर:', 'सोमवासर:', 'मंगलवासर:', 'बुधवासर:', 'बृहस्पतिवासरः', 'शुक्रवासर', 'शनिवासर:'],\n    'weekdays_short' => ['रविः', 'सोम:', 'मंगल:', 'बुध:', 'बृहस्पतिः', 'शुक्र', 'शनि:'],\n    'weekdays_min' => ['रविः', 'सोम:', 'मंगल:', 'बुध:', 'बृहस्पतिः', 'शुक्र', 'शनि:'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n\n    'minute' => ':count होरा', // less reliable\n    'min' => ':count होरा', // less reliable\n    'a_minute' => ':count होरा', // less reliable\n\n    'year' => ':count वर्ष',\n    'y' => ':count वर्ष',\n    'a_year' => ':count वर्ष',\n\n    'month' => ':count मास',\n    'm' => ':count मास',\n    'a_month' => ':count मास',\n\n    'week' => ':count सप्ताहः saptahaĥ',\n    'w' => ':count सप्ताहः saptahaĥ',\n    'a_week' => ':count सप्ताहः saptahaĥ',\n\n    'day' => ':count दिन',\n    'd' => ':count दिन',\n    'a_day' => ':count दिन',\n\n    'hour' => ':count घण्टा',\n    'h' => ':count घण्टा',\n    'a_hour' => ':count घण्टा',\n\n    'second' => ':count द्वितीयः',\n    's' => ':count द्वितीयः',\n    'a_second' => ':count द्वितीयः',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/id_ID.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/id.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ro.php","ext":"php","size":2832,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n * - Cătălin Georgescu\n * - Valentin Ivaşcu (oriceon)\n */\nreturn [\n    'year' => ':count an|:count ani|:count ani',\n    'a_year' => 'un an|:count ani|:count ani',\n    'y' => ':count a.',\n    'month' => ':count lună|:count luni|:count luni',\n    'a_month' => 'o lună|:count luni|:count luni',\n    'm' => ':count l.',\n    'week' => ':count săptămână|:count săptămâni|:count săptămâni',\n    'a_week' => 'o săptămână|:count săptămâni|:count săptămâni',\n    'w' => ':count săp.',\n    'day' => ':count zi|:count zile|:count zile',\n    'a_day' => 'o zi|:count zile|:count zile',\n    'd' => ':count z.',\n    'hour' => ':count oră|:count ore|:count ore',\n    'a_hour' => 'o oră|:count ore|:count ore',\n    'h' => ':count o.',\n    'minute' => ':count minut|:count minute|:count minute',\n    'a_minute' => 'un minut|:count minute|:count minute',\n    'min' => ':count m.',\n    'second' => ':count secundă|:count secunde|:count secunde',\n    'a_second' => 'câteva secunde|:count secunde|:count secunde',\n    's' => ':count sec.',\n    'ago' => ':time în urmă',\n    'from_now' => 'peste :time',\n    'after' => 'peste :time',\n    'before' => 'acum :time',\n    'diff_now' => 'acum',\n    'diff_today' => 'azi',\n    'diff_today_regexp' => 'azi(?:\\\\s+la)?',\n    'diff_yesterday' => 'ieri',\n    'diff_yesterday_regexp' => 'ieri(?:\\\\s+la)?',\n    'diff_tomorrow' => 'mâine',\n    'diff_tomorrow_regexp' => 'mâine(?:\\\\s+la)?',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[azi la] LT',\n        'nextDay' => '[mâine la] LT',\n        'nextWeek' => 'dddd [la] LT',\n        'lastDay' => '[ieri la] LT',\n        'lastWeek' => '[fosta] dddd [la] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['ianuarie', 'februarie', 'martie', 'aprilie', 'mai', 'iunie', 'iulie', 'august', 'septembrie', 'octombrie', 'noiembrie', 'decembrie'],\n    'months_short' => ['ian.', 'feb.', 'mar.', 'apr.', 'mai', 'iun.', 'iul.', 'aug.', 'sept.', 'oct.', 'nov.', 'dec.'],\n    'weekdays' => ['duminică', 'luni', 'marți', 'miercuri', 'joi', 'vineri', 'sâmbătă'],\n    'weekdays_short' => ['dum', 'lun', 'mar', 'mie', 'joi', 'vin', 'sâm'],\n    'weekdays_min' => ['du', 'lu', 'ma', 'mi', 'jo', 'vi', 'sâ'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' și '],\n    'meridiem' => ['a.m.', 'p.m.'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sid.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/sid_ET.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sq_MK.php","ext":"php","size":465,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/sq.php', [\n    'formats' => [\n        'L' => 'D.M.YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/csb_PL.php","ext":"php","size":1466,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - csb_PL locale Michal Ostrowski bug-glibc-locales@gnu.org\n */\nreturn [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-DD',\n        'LL' => 'MMMM DD, YYYY',\n        'LLL' => 'DD MMM HH:mm',\n        'LLLL' => 'MMMM DD, YYYY HH:mm',\n    ],\n    'months' => ['stëcznika', 'gromicznika', 'strëmiannika', 'łżëkwiata', 'maja', 'czerwińca', 'lëpińca', 'zélnika', 'séwnika', 'rujana', 'lëstopadnika', 'gòdnika'],\n    'months_short' => ['stë', 'gro', 'str', 'łżë', 'maj', 'cze', 'lëp', 'zél', 'séw', 'ruj', 'lës', 'gòd'],\n    'weekdays' => ['niedzela', 'pòniedzôłk', 'wtórk', 'strzoda', 'czwiôrtk', 'piątk', 'sobòta'],\n    'weekdays_short' => ['nie', 'pòn', 'wtó', 'str', 'czw', 'pią', 'sob'],\n    'weekdays_min' => ['nie', 'pòn', 'wtó', 'str', 'czw', 'pią', 'sob'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' a téż '],\n    'two_words_connector' => ' a téż ',\n    'year' => ':count rok',\n    'month' => ':count miesiąc',\n    'week' => ':count tidzéń',\n    'day' => ':count dzéń',\n    'hour' => ':count gòdzëna',\n    'minute' => ':count minuta',\n    'second' => ':count sekunda',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_DO.php","ext":"php","size":683,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - kostas\n * - François B\n * - Tim Fish\n * - Chiel Robben\n * - Claire Coloma\n * - Steven Heinrich\n * - JD Isaacks\n * - Raphael Amorim\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'diff_before_yesterday' => 'anteayer',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'LLL' => 'D [de] MMMM [de] YYYY h:mm A',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY h:mm A',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_RE.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/aa.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/aa_DJ.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sat.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/sat_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sq_AL.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sq.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pa_PK.php","ext":"php","size":1188,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['جنوري', 'فروري', 'مارچ', 'اپريل', 'مٓی', 'جون', 'جولاي', 'اگست', 'ستمبر', 'اكتوبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنوري', 'فروري', 'مارچ', 'اپريل', 'مٓی', 'جون', 'جولاي', 'اگست', 'ستمبر', 'اكتوبر', 'نومبر', 'دسمبر'],\n    'weekdays' => ['اتوار', 'پير', 'منگل', 'بدھ', 'جمعرات', 'جمعه', 'هفته'],\n    'weekdays_short' => ['اتوار', 'پير', 'منگل', 'بدھ', 'جمعرات', 'جمعه', 'هفته'],\n    'weekdays_min' => ['اتوار', 'پير', 'منگل', 'بدھ', 'جمعرات', 'جمعه', 'هفته'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ص', 'ش'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ur_IN.php","ext":"php","size":1149,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat, Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/ur.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'weekdays' => ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'سنیچر'],\n    'weekdays_short' => ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'سنیچر'],\n    'weekdays_min' => ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'سنیچر'],\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/chr_US.php","ext":"php","size":2259,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Cherokee Nation Joseph Erb josepherb7@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'MM/DD/YYYY',\n    ],\n    'months' => ['ᎤᏃᎸᏔᏅ', 'ᎧᎦᎵ', 'ᎠᏅᏱ', 'ᎧᏬᏂ', 'ᎠᏂᏍᎬᏘ', 'ᏕᎭᎷᏱ', 'ᎫᏰᏉᏂ', 'ᎦᎶᏂ', 'ᏚᎵᏍᏗ', 'ᏚᏂᏅᏗ', 'ᏅᏓᏕᏆ', 'ᎥᏍᎩᏱ'],\n    'months_short' => ['ᎤᏃ', 'ᎧᎦ', 'ᎠᏅ', 'ᎧᏬ', 'ᎠᏂ', 'ᏕᎭ', 'ᎫᏰ', 'ᎦᎶ', 'ᏚᎵ', 'ᏚᏂ', 'ᏅᏓ', 'ᎥᏍ'],\n    'weekdays' => ['ᎤᎾᏙᏓᏆᏍᎬ', 'ᎤᎾᏙᏓᏉᏅᎯ', 'ᏔᎵᏁᎢᎦ', 'ᏦᎢᏁᎢᎦ', 'ᏅᎩᏁᎢᎦ', 'ᏧᎾᎩᎶᏍᏗ', 'ᎤᎾᏙᏓᏈᏕᎾ'],\n    'weekdays_short' => ['ᏆᏍᎬ', 'ᏉᏅᎯ', 'ᏔᎵᏁ', 'ᏦᎢᏁ', 'ᏅᎩᏁ', 'ᏧᎾᎩ', 'ᏈᏕᎾ'],\n    'weekdays_min' => ['ᏆᏍᎬ', 'ᏉᏅᎯ', 'ᏔᎵᏁ', 'ᏦᎢᏁ', 'ᏅᎩᏁ', 'ᏧᎾᎩ', 'ᏈᏕᎾ'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ᏌᎾᎴ', 'ᏒᎯᏱᎢᏗᏢ', 'ꮜꮎꮄ', 'ꮢꭿᏹꭲꮧꮲ'],\n\n    'second' => ':count ᏐᎢ', // less reliable\n    's' => ':count ᏐᎢ', // less reliable\n    'a_second' => ':count ᏐᎢ', // less reliable\n\n    'year' => ':count ᏑᏕᏘᏴᏓ',\n    'y' => ':count ᏑᏕᏘᏴᏓ',\n    'a_year' => ':count ᏑᏕᏘᏴᏓ',\n\n    'month' => ':count ᏏᏅᏙ',\n    'm' => ':count ᏏᏅᏙ',\n    'a_month' => ':count ᏏᏅᏙ',\n\n    'week' => ':count ᏑᎾᏙᏓᏆᏍᏗ',\n    'w' => ':count ᏑᎾᏙᏓᏆᏍᏗ',\n    'a_week' => ':count ᏑᎾᏙᏓᏆᏍᏗ',\n\n    'day' => ':count ᎢᎦ',\n    'd' => ':count ᎢᎦ',\n    'a_day' => ':count ᎢᎦ',\n\n    'hour' => ':count ᏑᏟᎶᏛ',\n    'h' => ':count ᏑᏟᎶᏛ',\n    'a_hour' => ':count ᏑᏟᎶᏛ',\n\n    'minute' => ':count ᎢᏯᏔᏬᏍᏔᏅ',\n    'min' => ':count ᎢᏯᏔᏬᏍᏔᏅ',\n    'a_minute' => ':count ᎢᏯᏔᏬᏍᏔᏅ',\n\n    'ago' => ':time ᏥᎨᏒ',\n    'from_now' => 'ᎾᎿ :time',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SC.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MT.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fo_FO.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fo.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/prg.php","ext":"php","size":1675,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'months' => ['M01', 'M02', 'M03', 'M04', 'M05', 'M06', 'M07', 'M08', 'M09', 'M10', 'M11', 'M12'],\n    'months_short' => ['M01', 'M02', 'M03', 'M04', 'M05', 'M06', 'M07', 'M08', 'M09', 'M10', 'M11', 'M12'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'YYYY MMMM D, dddd HH:mm',\n    ],\n\n    'year' => ':count meta',\n    'y' => ':count meta',\n    'a_year' => ':count meta',\n\n    'month' => ':count mēniks', // less reliable\n    'm' => ':count mēniks', // less reliable\n    'a_month' => ':count mēniks', // less reliable\n\n    'week' => ':count sawaītin', // less reliable\n    'w' => ':count sawaītin', // less reliable\n    'a_week' => ':count sawaītin', // less reliable\n\n    'day' => ':count di',\n    'd' => ':count di',\n    'a_day' => ':count di',\n\n    'hour' => ':count bruktēt', // less reliable\n    'h' => ':count bruktēt', // less reliable\n    'a_hour' => ':count bruktēt', // less reliable\n\n    'minute' => ':count līkuts', // less reliable\n    'min' => ':count līkuts', // less reliable\n    'a_minute' => ':count līkuts', // less reliable\n\n    'second' => ':count kitan', // less reliable\n    's' => ':count kitan', // less reliable\n    'a_second' => ':count kitan', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nnh.php","ext":"php","size":1190,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['mbaʼámbaʼ', 'ncwònzém'],\n    'weekdays' => null,\n    'weekdays_short' => ['lyɛʼɛ́ sẅíŋtè', 'mvfò lyɛ̌ʼ', 'mbɔ́ɔntè mvfò lyɛ̌ʼ', 'tsètsɛ̀ɛ lyɛ̌ʼ', 'mbɔ́ɔntè tsetsɛ̀ɛ lyɛ̌ʼ', 'mvfò màga lyɛ̌ʼ', 'màga lyɛ̌ʼ'],\n    'weekdays_min' => null,\n    'months' => null,\n    'months_short' => ['saŋ tsetsɛ̀ɛ lùm', 'saŋ kàg ngwóŋ', 'saŋ lepyè shúm', 'saŋ cÿó', 'saŋ tsɛ̀ɛ cÿó', 'saŋ njÿoláʼ', 'saŋ tyɛ̀b tyɛ̀b mbʉ̀ŋ', 'saŋ mbʉ̀ŋ', 'saŋ ngwɔ̀ʼ mbÿɛ', 'saŋ tàŋa tsetsáʼ', 'saŋ mejwoŋó', 'saŋ lùm'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/yy',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => '[lyɛ]̌ʼ d [na] MMMM, YYYY HH:mm',\n        'LLLL' => 'dddd , [lyɛ]̌ʼ d [na] MMMM, YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_ST.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sw_CD.php","ext":"php","size":382,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/sw.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/in.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/id.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ha.php","ext":"php","size":1775,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - pablo@mandriva.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D/M/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM, YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM, YYYY HH:mm',\n    ],\n    'months' => ['Janairu', 'Faburairu', 'Maris', 'Afirilu', 'Mayu', 'Yuni', 'Yuli', 'Agusta', 'Satumba', 'Oktoba', 'Nuwamba', 'Disamba'],\n    'months_short' => ['Jan', 'Fab', 'Mar', 'Afi', 'May', 'Yun', 'Yul', 'Agu', 'Sat', 'Okt', 'Nuw', 'Dis'],\n    'weekdays' => ['Lahadi', 'Litini', 'Talata', 'Laraba', 'Alhamis', 'Jumaʼa', 'Asabar'],\n    'weekdays_short' => ['Lah', 'Lit', 'Tal', 'Lar', 'Alh', 'Jum', 'Asa'],\n    'weekdays_min' => ['Lh', 'Li', 'Ta', 'Lr', 'Al', 'Ju', 'As'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => 'shekara :count',\n    'y' => 'shekara :count',\n    'a_year' => 'shekara :count',\n\n    'month' => ':count wátàa',\n    'm' => ':count wátàa',\n    'a_month' => ':count wátàa',\n\n    'week' => ':count mako',\n    'w' => ':count mako',\n    'a_week' => ':count mako',\n\n    'day' => ':count rana',\n    'd' => ':count rana',\n    'a_day' => ':count rana',\n\n    'hour' => ':count áwàa',\n    'h' => ':count áwàa',\n    'a_hour' => ':count áwàa',\n\n    'minute' => 'minti :count',\n    'min' => 'minti :count',\n    'a_minute' => 'minti :count',\n\n    'second' => ':count ná bíyú',\n    's' => ':count ná bíyú',\n    'a_second' => ':count ná bíyú',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dz.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/dz_BT.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ky.php","ext":"php","size":3754,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - acutexyz\n * - Josh Soref\n * - François B\n * - Chyngyz Arystan uulu\n * - Chyngyz\n * - acutexyz\n * - Josh Soref\n * - François B\n * - Chyngyz Arystan uulu\n */\nreturn [\n    'year' => ':count жыл',\n    'a_year' => '{1}бир жыл|:count жыл',\n    'y' => ':count жыл',\n    'month' => ':count ай',\n    'a_month' => '{1}бир ай|:count ай',\n    'm' => ':count ай',\n    'week' => ':count апта',\n    'a_week' => '{1}бир апта|:count апта',\n    'w' => ':count апт.',\n    'day' => ':count күн',\n    'a_day' => '{1}бир күн|:count күн',\n    'd' => ':count күн',\n    'hour' => ':count саат',\n    'a_hour' => '{1}бир саат|:count саат',\n    'h' => ':count саат.',\n    'minute' => ':count мүнөт',\n    'a_minute' => '{1}бир мүнөт|:count мүнөт',\n    'min' => ':count мүн.',\n    'second' => ':count секунд',\n    'a_second' => '{1}бирнече секунд|:count секунд',\n    's' => ':count сек.',\n    'ago' => ':time мурун',\n    'from_now' => ':time ичинде',\n    'diff_now' => 'азыр',\n    'diff_today' => 'Бүгүн',\n    'diff_today_regexp' => 'Бүгүн(?:\\\\s+саат)?',\n    'diff_yesterday' => 'кечээ',\n    'diff_yesterday_regexp' => 'Кече(?:\\\\s+саат)?',\n    'diff_tomorrow' => 'эртең',\n    'diff_tomorrow_regexp' => 'Эртең(?:\\\\s+саат)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Бүгүн саат] LT',\n        'nextDay' => '[Эртең саат] LT',\n        'nextWeek' => 'dddd [саат] LT',\n        'lastDay' => '[Кече саат] LT',\n        'lastWeek' => '[Өткен аптанын] dddd [күнү] [саат] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        static $suffixes = [\n            0 => '-чү',\n            1 => '-чи',\n            2 => '-чи',\n            3 => '-чү',\n            4 => '-чү',\n            5 => '-чи',\n            6 => '-чы',\n            7 => '-чи',\n            8 => '-чи',\n            9 => '-чу',\n            10 => '-чу',\n            20 => '-чы',\n            30 => '-чу',\n            40 => '-чы',\n            50 => '-чү',\n            60 => '-чы',\n            70 => '-чи',\n            80 => '-чи',\n            90 => '-чу',\n            100 => '-чү',\n        ];\n\n        return $number.($suffixes[$number] ?? $suffixes[$number % 10] ?? $suffixes[$number >= 100 ? 100 : -1] ?? '');\n    },\n    'months' => ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'],\n    'months_short' => ['янв', 'фев', 'март', 'апр', 'май', 'июнь', 'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'weekdays' => ['Жекшемби', 'Дүйшөмбү', 'Шейшемби', 'Шаршемби', 'Бейшемби', 'Жума', 'Ишемби'],\n    'weekdays_short' => ['Жек', 'Дүй', 'Шей', 'Шар', 'Бей', 'Жум', 'Ише'],\n    'weekdays_min' => ['Жк', 'Дй', 'Шй', 'Шр', 'Бй', 'Жм', 'Иш'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => ' ',\n    'meridiem' => ['таңкы', 'түштөн кийинки'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/vi_VN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/vi.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_SG.php","ext":"php","size":588,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'from_now' => 'in :time',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'day_of_first_week_of_year' => 4,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sw_UG.php","ext":"php","size":382,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/sw.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nan.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/nan_TW.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hant_HK.php","ext":"php","size":272,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hant.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/os.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/os_RU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_TW.php","ext":"php","size":275,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/zh_Hant_TW.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ms_MY.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - Azri Jamil\n * - JD Isaacks\n */\nreturn require __DIR__.'/ms.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ps_AF.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ps.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hne_IN.php","ext":"php","size":1379,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Red Hat, Pune    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['जनवरी', 'फरवरी', 'मार्च', 'अपरेल', 'मई', 'जून', 'जुलाई', 'अगस्त', 'सितमबर', 'अकटूबर', 'नवमबर', 'दिसमबर'],\n    'months_short' => ['जन', 'फर', 'मार्च', 'अप', 'मई', 'जून', 'जुला', 'अग', 'सित', 'अकटू', 'नव', 'दिस'],\n    'weekdays' => ['इतवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'बिरसपत', 'सुकरवार', 'सनिवार'],\n    'weekdays_short' => ['इत', 'सोम', 'मंग', 'बुध', 'बिर', 'सुक', 'सनि'],\n    'weekdays_min' => ['इत', 'सोम', 'मंग', 'बुध', 'बिर', 'सुक', 'सनि'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['बिहिनियाँ', 'मंझनियाँ'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lrc_IQ.php","ext":"php","size":268,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/lrc.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mgh.php","ext":"php","size":1222,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['wichishu', 'mchochil’l'],\n    'weekdays' => ['Sabato', 'Jumatatu', 'Jumanne', 'Jumatano', 'Arahamisi', 'Ijumaa', 'Jumamosi'],\n    'weekdays_short' => ['Sab', 'Jtt', 'Jnn', 'Jtn', 'Ara', 'Iju', 'Jmo'],\n    'weekdays_min' => ['Sab', 'Jtt', 'Jnn', 'Jtn', 'Ara', 'Iju', 'Jmo'],\n    'months' => ['Mweri wo kwanza', 'Mweri wo unayeli', 'Mweri wo uneraru', 'Mweri wo unecheshe', 'Mweri wo unethanu', 'Mweri wo thanu na mocha', 'Mweri wo saba', 'Mweri wo nane', 'Mweri wo tisa', 'Mweri wo kumi', 'Mweri wo kumi na moja', 'Mweri wo kumi na yel’li'],\n    'months_short' => ['Kwa', 'Una', 'Rar', 'Che', 'Tha', 'Moc', 'Sab', 'Nan', 'Tis', 'Kum', 'Moj', 'Yel'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ta_LK.php","ext":"php","size":1370,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - J.Yogaraj 94-777-315206 yogaraj.ubuntu@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/ta.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'],\n    'months_short' => ['ஜன', 'பிப்', 'மார்', 'ஏப்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆக', 'செப்', 'அக்', 'நவ', 'டிச'],\n    'weekdays' => ['ஞாயிறு', 'திங்கள்', 'செவ்வாய்', 'புதன்', 'வியாழன்', 'வெள்ளி', 'சனி'],\n    'weekdays_short' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'weekdays_min' => ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['காலை', 'மாலை'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/el.php","ext":"php","size":3891,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Alessandro Di Felice\n * - François B\n * - Tim Fish\n * - Gabriel Monteagudo\n * - JD Isaacks\n * - yiannisdesp\n * - Ilias Kasmeridis (iliaskasm)\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count χρόνος|:count χρόνια',\n    'a_year' => 'ένας χρόνος|:count χρόνια',\n    'y' => ':count χρ.',\n    'month' => ':count μήνας|:count μήνες',\n    'a_month' => 'ένας μήνας|:count μήνες',\n    'm' => ':count μήν.',\n    'week' => ':count εβδομάδα|:count εβδομάδες',\n    'a_week' => 'μια εβδομάδα|:count εβδομάδες',\n    'w' => ':count εβδ.',\n    'day' => ':count μέρα|:count μέρες',\n    'a_day' => 'μία μέρα|:count μέρες',\n    'd' => ':count μέρ.',\n    'hour' => ':count ώρα|:count ώρες',\n    'a_hour' => 'μία ώρα|:count ώρες',\n    'h' => ':count ώρα|:count ώρες',\n    'minute' => ':count λεπτό|:count λεπτά',\n    'a_minute' => 'ένα λεπτό|:count λεπτά',\n    'min' => ':count λεπ.',\n    'second' => ':count δευτερόλεπτο|:count δευτερόλεπτα',\n    'a_second' => 'λίγα δευτερόλεπτα|:count δευτερόλεπτα',\n    's' => ':count δευ.',\n    'ago' => 'πριν :time',\n    'from_now' => 'σε :time',\n    'after' => ':time μετά',\n    'before' => ':time πριν',\n    'diff_now' => 'τώρα',\n    'diff_today' => 'Σήμερα',\n    'diff_today_regexp' => 'Σήμερα(?:\\\\s+{})?',\n    'diff_yesterday' => 'χθες',\n    'diff_yesterday_regexp' => 'Χθες(?:\\\\s+{})?',\n    'diff_tomorrow' => 'αύριο',\n    'diff_tomorrow_regexp' => 'Αύριο(?:\\\\s+{})?',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm A',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm A',\n    ],\n    'calendar' => [\n        'sameDay' => '[Σήμερα {}] LT',\n        'nextDay' => '[Αύριο {}] LT',\n        'nextWeek' => 'dddd [{}] LT',\n        'lastDay' => '[Χθες {}] LT',\n        'lastWeek' => static fn (CarbonInterface $current) => match ($current->dayOfWeek) {\n            6 => '[το προηγούμενο] dddd [{}] LT',\n            default => '[την προηγούμενη] dddd [{}] LT',\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':numberη',\n    'meridiem' => ['ΠΜ', 'ΜΜ', 'πμ', 'μμ'],\n    'months' => ['Ιανουαρίου', 'Φεβρουαρίου', 'Μαρτίου', 'Απριλίου', 'Μαΐου', 'Ιουνίου', 'Ιουλίου', 'Αυγούστου', 'Σεπτεμβρίου', 'Οκτωβρίου', 'Νοεμβρίου', 'Δεκεμβρίου'],\n    'months_standalone' => ['Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος'],\n    'months_regexp' => '/(D[oD]?[\\s,]+MMMM|L{2,4}|l{2,4})/',\n    'months_short' => ['Ιαν', 'Φεβ', 'Μαρ', 'Απρ', 'Μαϊ', 'Ιουν', 'Ιουλ', 'Αυγ', 'Σεπ', 'Οκτ', 'Νοε', 'Δεκ'],\n    'weekdays' => ['Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο'],\n    'weekdays_short' => ['Κυρ', 'Δευ', 'Τρι', 'Τετ', 'Πεμ', 'Παρ', 'Σαβ'],\n    'weekdays_min' => ['Κυ', 'Δε', 'Τρ', 'Τε', 'Πε', 'Πα', 'Σα'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' και '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_EA.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tt_RU.php","ext":"php","size":1562,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Rinat Norkin Pablo Saratxaga, Rinat Norkin pablo@mandrakesoft.com, rinat@taif.ru\n */\nreturn [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'DD MMM, HH:mm',\n        'LLLL' => 'DD MMMM YYYY, HH:mm',\n    ],\n    'months' => ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\n    'months_short' => ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'weekdays' => ['якшәмбе', 'дышәмбе', 'сишәмбе', 'чәршәәмбе', 'пәнҗешмбе', 'җомга', 'шимбә'],\n    'weekdays_short' => ['якш', 'дыш', 'сиш', 'чәрш', 'пәнҗ', 'җом', 'шим'],\n    'weekdays_min' => ['якш', 'дыш', 'сиш', 'чәрш', 'пәнҗ', 'җом', 'шим'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'year' => ':count ел',\n    'month' => ':count ай',\n    'week' => ':count атна',\n    'day' => ':count көн',\n    'hour' => ':count сәгать',\n    'minute' => ':count минут',\n    'second' => ':count секунд',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/zh_Hant.php","ext":"php","size":3180,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Adam\n * - monkeycon\n * - François B\n * - Jason Katz-Brown\n * - Chris Lam\n * - Serhan Apaydın\n * - Gary Lo\n * - JD Isaacks\n * - Chris Hemp\n * - Eddie\n * - KID\n * - shankesgk2\n * - Daniel Cheung (danvim)\n */\nreturn [\n    'year' => ':count:optional-space年',\n    'y' => ':count:optional-space年',\n    'month' => ':count:optional-space個月',\n    'm' => ':count:optional-space月',\n    'week' => ':count:optional-space週',\n    'w' => ':count:optional-space週',\n    'day' => ':count:optional-space天',\n    'd' => ':count:optional-space天',\n    'hour' => ':count:optional-space小時',\n    'h' => ':count:optional-space小時',\n    'minute' => ':count:optional-space分鐘',\n    'min' => ':count:optional-space分鐘',\n    'second' => ':count:optional-space秒',\n    'a_second' => '{1}幾秒|[-Inf,Inf]:count:optional-space秒',\n    's' => ':count:optional-space秒',\n    'ago' => ':time前',\n    'from_now' => ':time後',\n    'after' => ':time後',\n    'before' => ':time前',\n    'diff_now' => '現在',\n    'diff_today' => '今天',\n    'diff_yesterday' => '昨天',\n    'diff_tomorrow' => '明天',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY/MM/DD',\n        'LL' => 'YYYY年M月D日',\n        'LLL' => 'YYYY年M月D日 HH:mm',\n        'LLLL' => 'YYYY年M月D日dddd HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[今天] LT',\n        'nextDay' => '[明天] LT',\n        'nextWeek' => '[下]dddd LT',\n        'lastDay' => '[昨天] LT',\n        'lastWeek' => '[上]dddd LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'd', 'D', 'DDD' => $number.'日',\n            'M' => $number.'月',\n            'w', 'W' => $number.'周',\n            default => $number,\n        };\n    },\n    'meridiem' => static function ($hour, $minute) {\n        $time = $hour * 100 + $minute;\n        if ($time < 600) {\n            return '凌晨';\n        }\n        if ($time < 900) {\n            return '早上';\n        }\n        if ($time < 1130) {\n            return '上午';\n        }\n        if ($time < 1230) {\n            return '中午';\n        }\n        if ($time < 1800) {\n            return '下午';\n        }\n\n        return '晚上';\n    },\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    'weekdays' => ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    'weekdays_short' => ['週日', '週一', '週二', '週三', '週四', '週五', '週六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => '',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tl.php","ext":"php","size":2233,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn [\n    'year' => ':count taon',\n    'a_year' => '{1}isang taon|:count taon',\n    'month' => ':count buwan',\n    'a_month' => '{1}isang buwan|:count buwan',\n    'week' => ':count linggo',\n    'a_week' => '{1}isang linggo|:count linggo',\n    'day' => ':count araw',\n    'a_day' => '{1}isang araw|:count araw',\n    'hour' => ':count oras',\n    'a_hour' => '{1}isang oras|:count oras',\n    'minute' => ':count minuto',\n    'a_minute' => '{1}isang minuto|:count minuto',\n    'min' => ':count min.',\n    'second' => ':count segundo',\n    'a_second' => '{1}ilang segundo|:count segundo',\n    's' => ':count seg.',\n    'ago' => ':time ang nakalipas',\n    'from_now' => 'sa loob ng :time',\n    'diff_now' => 'ngayon',\n    'diff_today' => 'ngayong',\n    'diff_today_regexp' => 'ngayong(?:\\\\s+araw)?',\n    'diff_yesterday' => 'kahapon',\n    'diff_tomorrow' => 'bukas',\n    'diff_tomorrow_regexp' => 'Bukas(?:\\\\s+ng)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'MM/D/YYYY',\n        'LL' => 'MMMM D, YYYY',\n        'LLL' => 'MMMM D, YYYY HH:mm',\n        'LLLL' => 'dddd, MMMM DD, YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => 'LT [ngayong araw]',\n        'nextDay' => '[Bukas ng] LT',\n        'nextWeek' => 'LT [sa susunod na] dddd',\n        'lastDay' => 'LT [kahapon]',\n        'lastWeek' => 'LT [noong nakaraang] dddd',\n        'sameElse' => 'L',\n    ],\n    'months' => ['Enero', 'Pebrero', 'Marso', 'Abril', 'Mayo', 'Hunyo', 'Hulyo', 'Agosto', 'Setyembre', 'Oktubre', 'Nobyembre', 'Disyembre'],\n    'months_short' => ['Ene', 'Peb', 'Mar', 'Abr', 'May', 'Hun', 'Hul', 'Ago', 'Set', 'Okt', 'Nob', 'Dis'],\n    'weekdays' => ['Linggo', 'Lunes', 'Martes', 'Miyerkules', 'Huwebes', 'Biyernes', 'Sabado'],\n    'weekdays_short' => ['Lin', 'Lun', 'Mar', 'Miy', 'Huw', 'Biy', 'Sab'],\n    'weekdays_min' => ['Li', 'Lu', 'Ma', 'Mi', 'Hu', 'Bi', 'Sab'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' at '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mjw.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mjw_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ca_AD.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ca.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_DG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mo.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ro.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mfe_MU.php","ext":"php","size":1585,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Samsung Electronics Co., Ltd.    akhilesh.k@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['zanvie', 'fevriye', 'mars', 'avril', 'me', 'zin', 'zilye', 'out', 'septam', 'oktob', 'novam', 'desam'],\n    'months_short' => ['zan', 'fev', 'mar', 'avr', 'me', 'zin', 'zil', 'out', 'sep', 'okt', 'nov', 'des'],\n    'weekdays' => ['dimans', 'lindi', 'mardi', 'merkredi', 'zedi', 'vandredi', 'samdi'],\n    'weekdays_short' => ['dim', 'lin', 'mar', 'mer', 'ze', 'van', 'sam'],\n    'weekdays_min' => ['dim', 'lin', 'mar', 'mer', 'ze', 'van', 'sam'],\n\n    'year' => ':count banané',\n    'y' => ':count banané',\n    'a_year' => ':count banané',\n\n    'month' => ':count mwa',\n    'm' => ':count mwa',\n    'a_month' => ':count mwa',\n\n    'week' => ':count sémenn',\n    'w' => ':count sémenn',\n    'a_week' => ':count sémenn',\n\n    'day' => ':count zour',\n    'd' => ':count zour',\n    'a_day' => ':count zour',\n\n    'hour' => ':count -er-tan',\n    'h' => ':count -er-tan',\n    'a_hour' => ':count -er-tan',\n\n    'minute' => ':count minitt',\n    'min' => ':count minitt',\n    'a_minute' => ':count minitt',\n\n    'second' => ':count déziém',\n    's' => ':count déziém',\n    'a_second' => ':count déziém',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_AT.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bem_ZM.php","ext":"php","size":1722,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - ANLoc Martin Benjamin locales@africanlocalization.net\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'MM/DD/YYYY',\n    ],\n    'months' => ['Januari', 'Februari', 'Machi', 'Epreo', 'Mei', 'Juni', 'Julai', 'Ogasti', 'Septemba', 'Oktoba', 'Novemba', 'Disemba'],\n    'months_short' => ['Jan', 'Feb', 'Mac', 'Epr', 'Mei', 'Jun', 'Jul', 'Oga', 'Sep', 'Okt', 'Nov', 'Dis'],\n    'weekdays' => ['Pa Mulungu', 'Palichimo', 'Palichibuli', 'Palichitatu', 'Palichine', 'Palichisano', 'Pachibelushi'],\n    'weekdays_short' => ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'weekdays_min' => ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['uluchelo', 'akasuba'],\n\n    'year' => 'myaka :count',\n    'y' => 'myaka :count',\n    'a_year' => 'myaka :count',\n\n    'month' => 'myeshi :count',\n    'm' => 'myeshi :count',\n    'a_month' => 'myeshi :count',\n\n    'week' => 'umulungu :count',\n    'w' => 'umulungu :count',\n    'a_week' => 'umulungu :count',\n\n    'day' => 'inshiku :count',\n    'd' => 'inshiku :count',\n    'a_day' => 'inshiku :count',\n\n    'hour' => 'awala :count',\n    'h' => 'awala :count',\n    'a_hour' => 'awala :count',\n\n    'minute' => 'miniti :count',\n    'min' => 'miniti :count',\n    'a_minute' => 'miniti :count',\n\n    'second' => 'sekondi :count',\n    's' => 'sekondi :count',\n    'a_second' => 'sekondi :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bm.php","ext":"php","size":2498,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Estelle Comment\n */\nreturn [\n    'year' => 'san :count',\n    'a_year' => '{1}san kelen|san :count',\n    'y' => 'san :count',\n    'month' => 'kalo :count',\n    'a_month' => '{1}kalo kelen|kalo :count',\n    'm' => 'k. :count',\n    'week' => 'dɔgɔkun :count',\n    'a_week' => 'dɔgɔkun kelen',\n    'w' => 'd. :count',\n    'day' => 'tile :count',\n    'd' => 't. :count',\n    'a_day' => '{1}tile kelen|tile :count',\n    'hour' => 'lɛrɛ :count',\n    'a_hour' => '{1}lɛrɛ kelen|lɛrɛ :count',\n    'h' => 'l. :count',\n    'minute' => 'miniti :count',\n    'a_minute' => '{1}miniti kelen|miniti :count',\n    'min' => 'm. :count',\n    'second' => 'sekondi :count',\n    'a_second' => '{1}sanga dama dama|sekondi :count',\n    's' => 'sek. :count',\n    'ago' => 'a bɛ :time bɔ',\n    'from_now' => ':time kɔnɔ',\n    'diff_today' => 'Bi',\n    'diff_yesterday' => 'Kunu',\n    'diff_yesterday_regexp' => 'Kunu(?:\\\\s+lɛrɛ)?',\n    'diff_tomorrow' => 'Sini',\n    'diff_tomorrow_regexp' => 'Sini(?:\\\\s+lɛrɛ)?',\n    'diff_today_regexp' => 'Bi(?:\\\\s+lɛrɛ)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'MMMM [tile] D [san] YYYY',\n        'LLL' => 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n        'LLLL' => 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Bi lɛrɛ] LT',\n        'nextDay' => '[Sini lɛrɛ] LT',\n        'nextWeek' => 'dddd [don lɛrɛ] LT',\n        'lastDay' => '[Kunu lɛrɛ] LT',\n        'lastWeek' => 'dddd [tɛmɛnen lɛrɛ] LT',\n        'sameElse' => 'L',\n    ],\n    'months' => ['Zanwuyekalo', 'Fewuruyekalo', 'Marisikalo', 'Awirilikalo', 'Mɛkalo', 'Zuwɛnkalo', 'Zuluyekalo', 'Utikalo', 'Sɛtanburukalo', 'ɔkutɔburukalo', 'Nowanburukalo', 'Desanburukalo'],\n    'months_short' => ['Zan', 'Few', 'Mar', 'Awi', 'Mɛ', 'Zuw', 'Zul', 'Uti', 'Sɛt', 'ɔku', 'Now', 'Des'],\n    'weekdays' => ['Kari', 'Ntɛnɛn', 'Tarata', 'Araba', 'Alamisa', 'Juma', 'Sibiri'],\n    'weekdays_short' => ['Kar', 'Ntɛ', 'Tar', 'Ara', 'Ala', 'Jum', 'Sib'],\n    'weekdays_min' => ['Ka', 'Nt', 'Ta', 'Ar', 'Al', 'Ju', 'Si'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' ni '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_BS.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_001.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/dz_BT.php","ext":"php","size":2426,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Sherubtse College    bug-glibc@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'པསྱི་ལོYYཟལMMཚེསDD',\n    ],\n    'months' => ['ཟླ་བ་དང་པ་', 'ཟླ་བ་གཉིས་པ་', 'ཟླ་བ་གསུམ་པ་', 'ཟླ་བ་བཞི་པ་', 'ཟླ་བ་ལྔ་ཕ་', 'ཟླ་བ་དྲུག་པ་', 'ཟླ་བ་བདུནཔ་', 'ཟླ་བ་བརྒྱད་པ་', 'ཟླ་བ་དགུ་པ་', 'ཟླ་བ་བཅུ་པ་', 'ཟླ་བ་བཅུ་གཅིག་པ་', 'ཟླ་བ་བཅུ་གཉིས་པ་'],\n    'months_short' => ['ཟླ་༡', 'ཟླ་༢', 'ཟླ་༣', 'ཟླ་༤', 'ཟླ་༥', 'ཟླ་༦', 'ཟླ་༧', 'ཟླ་༨', 'ཟླ་༩', 'ཟླ་༡༠', 'ཟླ་༡༡', 'ཟླ་༡༢'],\n    'weekdays' => ['གཟའ་ཟླ་བ་', 'གཟའ་མིག་དམར་', 'གཟའ་ལྷག་ཕ་', 'གཟའ་པུར་བུ་', 'གཟའ་པ་སངས་', 'གཟའ་སྤེན་ཕ་', 'གཟའ་ཉི་མ་'],\n    'weekdays_short' => ['ཟླ་', 'མིར་', 'ལྷག་', 'པུར་', 'སངས་', 'སྤེན་', 'ཉི་'],\n    'weekdays_min' => ['ཟླ་', 'མིར་', 'ལྷག་', 'པུར་', 'སངས་', 'སྤེན་', 'ཉི་'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ངས་ཆ', 'ཕྱི་ཆ'],\n\n    'year' => ':count ཆརཔ', // less reliable\n    'y' => ':count ཆརཔ', // less reliable\n    'a_year' => ':count ཆརཔ', // less reliable\n\n    'month' => ':count ཟླ་བ', // less reliable\n    'm' => ':count ཟླ་བ', // less reliable\n    'a_month' => ':count ཟླ་བ', // less reliable\n\n    'day' => ':count ཉི', // less reliable\n    'd' => ':count ཉི', // less reliable\n    'a_day' => ':count ཉི', // less reliable\n\n    'second' => ':count ཆ', // less reliable\n    's' => ':count ཆ', // less reliable\n    'a_second' => ':count ཆ', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_KY.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nd.php","ext":"php","size":1940,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'weekdays' => ['Sonto', 'Mvulo', 'Sibili', 'Sithathu', 'Sine', 'Sihlanu', 'Mgqibelo'],\n    'weekdays_short' => ['Son', 'Mvu', 'Sib', 'Sit', 'Sin', 'Sih', 'Mgq'],\n    'weekdays_min' => ['Son', 'Mvu', 'Sib', 'Sit', 'Sin', 'Sih', 'Mgq'],\n    'months' => ['Zibandlela', 'Nhlolanja', 'Mbimbitho', 'Mabasa', 'Nkwenkwezi', 'Nhlangula', 'Ntulikazi', 'Ncwabakazi', 'Mpandula', 'Mfumfu', 'Lwezi', 'Mpalakazi'],\n    'months_short' => ['Zib', 'Nhlo', 'Mbi', 'Mab', 'Nkw', 'Nhla', 'Ntu', 'Ncw', 'Mpan', 'Mfu', 'Lwe', 'Mpal'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n\n    'year' => 'okweminyaka engu-:count', // less reliable\n    'y' => 'okweminyaka engu-:count', // less reliable\n    'a_year' => 'okweminyaka engu-:count', // less reliable\n\n    'month' => 'inyanga ezingu-:count',\n    'm' => 'inyanga ezingu-:count',\n    'a_month' => 'inyanga ezingu-:count',\n\n    'week' => 'amaviki angu-:count',\n    'w' => 'amaviki angu-:count',\n    'a_week' => 'amaviki angu-:count',\n\n    'day' => 'kwamalanga angu-:count',\n    'd' => 'kwamalanga angu-:count',\n    'a_day' => 'kwamalanga angu-:count',\n\n    'hour' => 'amahola angu-:count',\n    'h' => 'amahola angu-:count',\n    'a_hour' => 'amahola angu-:count',\n\n    'minute' => 'imizuzu engu-:count',\n    'min' => 'imizuzu engu-:count',\n    'a_minute' => 'imizuzu engu-:count',\n\n    'second' => 'imizuzwana engu-:count',\n    's' => 'imizuzwana engu-:count',\n    'a_second' => 'imizuzwana engu-:count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gsw_CH.php","ext":"php","size":268,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/gsw.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_BR.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_MA.php","ext":"php","size":4508,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n * - Atef Ben Ali (atefBB)\n * - Mohamed Sabil (mohamedsabil83)\n */\n$months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'ماي',\n    'يونيو',\n    'يوليوز',\n    'غشت',\n    'شتنبر',\n    'أكتوبر',\n    'نونبر',\n    'دجنبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'a_year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'a_month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'a_week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'a_day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'a_hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'a_minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'a_second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => 'في :time',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدا(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم على الساعة] LT',\n        'nextDay' => '[غدا على الساعة] LT',\n        'nextWeek' => 'dddd [على الساعة] LT',\n        'lastDay' => '[أمس على الساعة] LT',\n        'lastWeek' => 'dddd [على الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_LU.php","ext":"php","size":409,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/crh_UA.php","ext":"php","size":1637,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Reşat SABIQ tilde.birlik@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'Mayıs', 'İyun', 'İyul', 'Avgust', 'Sentâbr', 'Oktâbr', 'Noyabr', 'Dekabr'],\n    'months_short' => ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'İyn', 'İyl', 'Avg', 'Sen', 'Okt', 'Noy', 'Dek'],\n    'weekdays' => ['Bazar', 'Bazarertesi', 'Salı', 'Çarşembe', 'Cumaaqşamı', 'Cuma', 'Cumaertesi'],\n    'weekdays_short' => ['Baz', 'Ber', 'Sal', 'Çar', 'Caq', 'Cum', 'Cer'],\n    'weekdays_min' => ['Baz', 'Ber', 'Sal', 'Çar', 'Caq', 'Cum', 'Cer'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ÜE', 'ÜS'],\n\n    'year' => ':count yıl',\n    'y' => ':count yıl',\n    'a_year' => ':count yıl',\n\n    'month' => ':count ay',\n    'm' => ':count ay',\n    'a_month' => ':count ay',\n\n    'week' => ':count afta',\n    'w' => ':count afta',\n    'a_week' => ':count afta',\n\n    'day' => ':count kün',\n    'd' => ':count kün',\n    'a_day' => ':count kün',\n\n    'hour' => ':count saat',\n    'h' => ':count saat',\n    'a_hour' => ':count saat',\n\n    'minute' => ':count daqqa',\n    'min' => ':count daqqa',\n    'a_minute' => ':count daqqa',\n\n    'second' => ':count ekinci',\n    's' => ':count ekinci',\n    'a_second' => ':count ekinci',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ru.php","ext":"php","size":7681,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Bari Badamshin\n * - Jørn Ølmheim\n * - François B\n * - Tim Fish\n * - Коренберг Марк (imac)\n * - Serhan Apaydın\n * - RomeroMsk\n * - vsn4ik\n * - JD Isaacks\n * - Bari Badamshin\n * - Jørn Ølmheim\n * - François B\n * - Коренберг Марк (imac)\n * - Serhan Apaydın\n * - RomeroMsk\n * - vsn4ik\n * - JD Isaacks\n * - Fellzo\n * - andrey-helldar\n * - Pavel Skripkin (psxx)\n * - AlexWalkerson\n * - Vladislav UnsealedOne\n * - dima-bzz\n * - Sergey Danilchenko\n */\n\nuse Carbon\\CarbonInterface;\n\n$transformDiff = static fn (string $input) => strtr($input, [\n    'неделя' => 'неделю',\n    'секунда' => 'секунду',\n    'минута' => 'минуту',\n]);\n\nreturn [\n    'year' => ':count год|:count года|:count лет',\n    'y' => ':count г.|:count г.|:count л.',\n    'a_year' => '{1}год|:count год|:count года|:count лет',\n    'month' => ':count месяц|:count месяца|:count месяцев',\n    'm' => ':count мес.',\n    'a_month' => '{1}месяц|:count месяц|:count месяца|:count месяцев',\n    'week' => ':count неделя|:count недели|:count недель',\n    'w' => ':count нед.',\n    'a_week' => '{1}неделя|:count неделю|:count недели|:count недель',\n    'day' => ':count день|:count дня|:count дней',\n    'd' => ':count д.',\n    'a_day' => '{1}день|:count день|:count дня|:count дней',\n    'hour' => ':count час|:count часа|:count часов',\n    'h' => ':count ч.',\n    'a_hour' => '{1}час|:count час|:count часа|:count часов',\n    'minute' => ':count минута|:count минуты|:count минут',\n    'min' => ':count мин.',\n    'a_minute' => '{1}минута|:count минута|:count минуты|:count минут',\n    'second' => ':count секунда|:count секунды|:count секунд',\n    's' => ':count сек.',\n    'a_second' => '{1}несколько секунд|:count секунду|:count секунды|:count секунд',\n    'millisecond' => '{1}:count миллисекунда|:count миллисекунды|:count миллисекунд',\n    'a_millisecond' => '{1}миллисекунда|:count миллисекунда|:count миллисекунды|:count миллисекунд',\n    'ms' => ':count мс',\n    'microsecond' => '{1}:count микросекунда|:count микросекунды|:count микросекунд',\n    'a_microsecond' => '{1}микросекунда|:count микросекунда|:count микросекунды|:count микросекунд',\n    'ago' => static fn (string $time) => $transformDiff($time).' назад',\n    'from_now' => static fn (string $time) => 'через '.$transformDiff($time),\n    'after' => static fn (string $time) => $transformDiff($time).' после',\n    'before' => static fn (string $time) => $transformDiff($time).' до',\n    'diff_now' => 'только что',\n    'diff_today' => 'Сегодня,',\n    'diff_today_regexp' => 'Сегодня,?(?:\\\\s+в)?',\n    'diff_yesterday' => 'вчера',\n    'diff_yesterday_regexp' => 'Вчера,?(?:\\\\s+в)?',\n    'diff_tomorrow' => 'завтра',\n    'diff_tomorrow_regexp' => 'Завтра,?(?:\\\\s+в)?',\n    'diff_before_yesterday' => 'позавчера',\n    'diff_after_tomorrow' => 'послезавтра',\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D MMMM YYYY г.',\n        'LLL' => 'D MMMM YYYY г., H:mm',\n        'LLLL' => 'dddd, D MMMM YYYY г., H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Сегодня, в] LT',\n        'nextDay' => '[Завтра, в] LT',\n        'nextWeek' => static function (CarbonInterface $current, \\Carbon\\CarbonInterface $other) {\n            if ($current->week !== $other->week) {\n                switch ($current->dayOfWeek) {\n                    case 0:\n                        return '[В следующее] dddd, [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd, [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd, [в] LT';\n                }\n            }\n\n            if ($current->dayOfWeek === 2) {\n                return '[Во] dddd, [в] LT';\n            }\n\n            return '[В] dddd, [в] LT';\n        },\n        'lastDay' => '[Вчера, в] LT',\n        'lastWeek' => static function (CarbonInterface $current, \\Carbon\\CarbonInterface $other) {\n            if ($current->week !== $other->week) {\n                switch ($current->dayOfWeek) {\n                    case 0:\n                        return '[В прошлое] dddd, [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd, [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd, [в] LT';\n                }\n            }\n\n            if ($current->dayOfWeek === 2) {\n                return '[Во] dddd, [в] LT';\n            }\n\n            return '[В] dddd, [в] LT';\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'M', 'd', 'DDD' => $number.'-й',\n            'D' => $number.'-го',\n            'w', 'W' => $number.'-я',\n            default => $number,\n        };\n    },\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'ночи';\n        }\n        if ($hour < 12) {\n            return 'утра';\n        }\n        if ($hour < 17) {\n            return 'дня';\n        }\n\n        return 'вечера';\n    },\n    'months' => ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\n    'months_standalone' => ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'],\n    'months_short' => ['янв', 'фев', 'мар', 'апр', 'мая', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'months_short_standalone' => ['янв', 'фев', 'мар', 'апр', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n    'months_regexp' => '/(DD?o?\\.?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'],\n    'weekdays_standalone' => ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\n    'weekdays_short' => ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'сбт'],\n    'weekdays_min' => ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n    'weekdays_regexp' => '/\\[\\s*(В|в)\\s*((?:прошлую|следующую|эту)\\s*)?\\]\\s*dddd/',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' и '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/is_IS.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/is.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cv.php","ext":"php","size":2745,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - François B\n * - JD Isaacks\n */\nreturn [\n    'year' => ':count ҫул',\n    'a_year' => '{1}пӗр ҫул|:count ҫул',\n    'month' => ':count уйӑх',\n    'a_month' => '{1}пӗр уйӑх|:count уйӑх',\n    'week' => ':count эрне',\n    'a_week' => '{1}пӗр эрне|:count эрне',\n    'day' => ':count кун',\n    'a_day' => '{1}пӗр кун|:count кун',\n    'hour' => ':count сехет',\n    'a_hour' => '{1}пӗр сехет|:count сехет',\n    'minute' => ':count минут',\n    'a_minute' => '{1}пӗр минут|:count минут',\n    'second' => ':count ҫеккунт',\n    'a_second' => '{1}пӗр-ик ҫеккунт|:count ҫеккунт',\n    'ago' => ':time каялла',\n    'from_now' => static function ($time) {\n        return $time.(preg_match('/сехет$/u', $time) ? 'рен' : (preg_match('/ҫул/', $time) ? 'тан' : 'ран'));\n    },\n    'diff_yesterday' => 'Ӗнер',\n    'diff_today' => 'Паян',\n    'diff_tomorrow' => 'Ыран',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD-MM-YYYY',\n        'LL' => 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n        'LLL' => 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n        'LLLL' => 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Паян] LT [сехетре]',\n        'nextDay' => '[Ыран] LT [сехетре]',\n        'nextWeek' => '[Ҫитес] dddd LT [сехетре]',\n        'lastDay' => '[Ӗнер] LT [сехетре]',\n        'lastWeek' => '[Иртнӗ] dddd LT [сехетре]',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => ':number-мӗш',\n    'months' => ['кӑрлач', 'нарӑс', 'пуш', 'ака', 'май', 'ҫӗртме', 'утӑ', 'ҫурла', 'авӑн', 'юпа', 'чӳк', 'раштав'],\n    'months_short' => ['кӑр', 'нар', 'пуш', 'ака', 'май', 'ҫӗр', 'утӑ', 'ҫур', 'авн', 'юпа', 'чӳк', 'раш'],\n    'weekdays' => ['вырсарникун', 'тунтикун', 'ытларикун', 'юнкун', 'кӗҫнерникун', 'эрнекун', 'шӑматкун'],\n    'weekdays_short' => ['выр', 'тун', 'ытл', 'юн', 'кӗҫ', 'эрн', 'шӑм'],\n    'weekdays_min' => ['вр', 'тн', 'ыт', 'юн', 'кҫ', 'эр', 'шм'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' тата '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/xog.php","ext":"php","size":1116,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['Munkyo', 'Eigulo'],\n    'weekdays' => ['Sabiiti', 'Balaza', 'Owokubili', 'Owokusatu', 'Olokuna', 'Olokutaanu', 'Olomukaaga'],\n    'weekdays_short' => ['Sabi', 'Bala', 'Kubi', 'Kusa', 'Kuna', 'Kuta', 'Muka'],\n    'weekdays_min' => ['Sabi', 'Bala', 'Kubi', 'Kusa', 'Kuna', 'Kuta', 'Muka'],\n    'months' => ['Janwaliyo', 'Febwaliyo', 'Marisi', 'Apuli', 'Maayi', 'Juuni', 'Julaayi', 'Agusito', 'Sebuttemba', 'Okitobba', 'Novemba', 'Desemba'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Apu', 'Maa', 'Juu', 'Jul', 'Agu', 'Seb', 'Oki', 'Nov', 'Des'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pa_Guru.php","ext":"php","size":1432,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/pa.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/M/yy',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, h:mm a',\n        'LLLL' => 'dddd, D MMMM YYYY, h:mm a',\n    ],\n    'months' => ['ਜਨਵਰੀ', 'ਫ਼ਰਵਰੀ', 'ਮਾਰਚ', 'ਅਪ੍ਰੈਲ', 'ਮਈ', 'ਜੂਨ', 'ਜੁਲਾਈ', 'ਅਗਸਤ', 'ਸਤੰਬਰ', 'ਅਕਤੂਬਰ', 'ਨਵੰਬਰ', 'ਦਸੰਬਰ'],\n    'months_short' => ['ਜਨ', 'ਫ਼ਰ', 'ਮਾਰਚ', 'ਅਪ੍ਰੈ', 'ਮਈ', 'ਜੂਨ', 'ਜੁਲਾ', 'ਅਗ', 'ਸਤੰ', 'ਅਕਤੂ', 'ਨਵੰ', 'ਦਸੰ'],\n    'weekdays' => ['ਐਤਵਾਰ', 'ਸੋਮਵਾਰ', 'ਮੰਗਲਵਾਰ', 'ਬੁੱਧਵਾਰ', 'ਵੀਰਵਾਰ', 'ਸ਼ੁੱਕਰਵਾਰ', 'ਸ਼ਨਿੱਚਰਵਾਰ'],\n    'weekdays_short' => ['ਐਤ', 'ਸੋਮ', 'ਮੰਗਲ', 'ਬੁੱਧ', 'ਵੀਰ', 'ਸ਼ੁੱਕਰ', 'ਸ਼ਨਿੱਚਰ'],\n    'weekdays_min' => ['ਐਤ', 'ਸੋਮ', 'ਮੰਗ', 'ਬੁੱਧ', 'ਵੀਰ', 'ਸ਼ੁੱਕ', 'ਸ਼ਨਿੱ'],\n    'weekend' => [0, 0],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/qu.php","ext":"php","size":553,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es_UY.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM, YYYY HH:mm',\n    ],\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ne_IN.php","ext":"php","size":1198,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ne.php', [\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'yy/M/d',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D, h:mm a',\n        'LLLL' => 'YYYY MMMM D, dddd, h:mm a',\n    ],\n    'months' => ['जनवरी', 'फेब्रुअरी', 'मार्च', 'अप्रिल', 'मे', 'जुन', 'जुलाई', 'अगस्ट', 'सेप्टेम्बर', 'अक्टोबर', 'नोभेम्बर', 'डिसेम्बर'],\n    'months_short' => ['जनवरी', 'फेब्रुअरी', 'मार्च', 'अप्रिल', 'मे', 'जुन', 'जुलाई', 'अगस्ट', 'सेप्टेम्बर', 'अक्टोबर', 'नोभेम्बर', 'डिसेम्बर'],\n    'weekend' => [0, 0],\n    'meridiem' => ['पूर्वाह्न', 'अपराह्न'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bn_BD.php","ext":"php","size":1509,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ankur Group, Taneem Ahmed, Jamil Ahmed\n */\nreturn array_replace_recursive(require __DIR__.'/bn.php', [\n    'formats' => [\n        'L' => 'D/M/YY',\n    ],\n    'months' => ['জানুয়ারী', 'ফেব্রুয়ারী', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'],\n    'months_short' => ['জানু', 'ফেব', 'মার্চ', 'এপ্রিল', 'মে', 'জুন', 'জুলাই', 'আগস্ট', 'সেপ্টেম্বর', 'অক্টোবর', 'নভেম্বর', 'ডিসেম্বর'],\n    'weekdays' => ['রবিবার', 'সোমবার', 'মঙ্গলবার', 'বুধবার', 'বৃহস্পতিবার', 'শুক্রবার', 'শনিবার'],\n    'weekdays_short' => ['রবি', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহঃ', 'শুক্র', 'শনি'],\n    'weekdays_min' => ['রবি', 'সোম', 'মঙ্গল', 'বুধ', 'বৃহঃ', 'শুক্র', 'শনি'],\n    'first_day_of_week' => 5,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_CH.php","ext":"php","size":431,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - sheriffmarley\n * - Timo\n * - Michael Hohl\n */\nreturn array_replace_recursive(require __DIR__.'/de.php', [\n    'weekdays_short' => ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_ES.php","ext":"php","size":324,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn require __DIR__.'/es.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_PH.php","ext":"php","size":569,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D/M/yy',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D [de] MMMM [de] YYYY h:mm a',\n        'LLLL' => 'dddd, D [de] MMMM [de] YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mzn.php","ext":"php","size":944,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fa.php', [\n    'months' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر'],\n    'months_short' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مه', 'ژوئن', 'ژوئیه', 'اوت', 'سپتامبر', 'اکتبر', 'نوامبر', 'دسامبر'],\n    'first_day_of_week' => 6,\n    'weekend' => [5, 5],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'YYYY MMMM D, dddd HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/rw_RW.php","ext":"php","size":1702,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Rwanda Steve Murphy murf@e-tools.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD.MM.YYYY',\n    ],\n    'months' => ['Mutarama', 'Gashyantare', 'Werurwe', 'Mata', 'Gicuransi', 'Kamena', 'Nyakanga', 'Kanama', 'Nzeli', 'Ukwakira', 'Ugushyingo', 'Ukuboza'],\n    'months_short' => ['Mut', 'Gas', 'Wer', 'Mat', 'Gic', 'Kam', 'Nya', 'Kan', 'Nze', 'Ukw', 'Ugu', 'Uku'],\n    'weekdays' => ['Ku cyumweru', 'Kuwa mbere', 'Kuwa kabiri', 'Kuwa gatatu', 'Kuwa kane', 'Kuwa gatanu', 'Kuwa gatandatu'],\n    'weekdays_short' => ['Mwe', 'Mbe', 'Kab', 'Gtu', 'Kan', 'Gnu', 'Gnd'],\n    'weekdays_min' => ['Mwe', 'Mbe', 'Kab', 'Gtu', 'Kan', 'Gnu', 'Gnd'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'second' => ':count vuna', // less reliable\n    's' => ':count vuna', // less reliable\n    'a_second' => ':count vuna', // less reliable\n\n    'year' => 'aka :count',\n    'y' => 'aka :count',\n    'a_year' => 'aka :count',\n\n    'month' => 'ezi :count',\n    'm' => 'ezi :count',\n    'a_month' => 'ezi :count',\n\n    'week' => ':count icyumweru',\n    'w' => ':count icyumweru',\n    'a_week' => ':count icyumweru',\n\n    'day' => ':count nsi',\n    'd' => ':count nsi',\n    'a_day' => ':count nsi',\n\n    'hour' => 'saha :count',\n    'h' => 'saha :count',\n    'a_hour' => 'saha :count',\n\n    'minute' => ':count -nzinya',\n    'min' => ':count -nzinya',\n    'a_minute' => ':count -nzinya',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ja.php","ext":"php","size":4064,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Takuya Sawada\n * - Atsushi Tanaka\n * - François B\n * - Jason Katz-Brown\n * - Serhan Apaydın\n * - XueWei\n * - JD Isaacks\n * - toyama satoshi\n * - atakigawa\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count年',\n    'y' => ':count年',\n    'month' => ':countヶ月',\n    'm' => ':countヶ月',\n    'week' => ':count週間',\n    'w' => ':count週間',\n    'day' => ':count日',\n    'd' => ':count日',\n    'hour' => ':count時間',\n    'h' => ':count時間',\n    'minute' => ':count分',\n    'min' => ':count分',\n    'second' => ':count秒',\n    'a_second' => '{1}数秒|[-Inf,Inf]:count秒',\n    's' => ':count秒',\n    'ago' => ':time前',\n    'from_now' => ':time後',\n    'after' => ':time後',\n    'before' => ':time前',\n    'diff_now' => '今',\n    'diff_today' => '今日',\n    'diff_yesterday' => '昨日',\n    'diff_tomorrow' => '明日',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY/MM/DD',\n        'LL' => 'YYYY年M月D日',\n        'LLL' => 'YYYY年M月D日 HH:mm',\n        'LLLL' => 'YYYY年M月D日 dddd HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[今日] LT',\n        'nextDay' => '[明日] LT',\n        'nextWeek' => static function (CarbonInterface $current, \\Carbon\\CarbonInterface $other) {\n            if ($other->week !== $current->week) {\n                return '[来週]dddd LT';\n            }\n\n            return 'dddd LT';\n        },\n        'lastDay' => '[昨日] LT',\n        'lastWeek' => static function (CarbonInterface $current, \\Carbon\\CarbonInterface $other) {\n            if ($other->week !== $current->week) {\n                return '[先週]dddd LT';\n            }\n\n            return 'dddd LT';\n        },\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number, $period) {\n        return match ($period) {\n            'd', 'D', 'DDD' => $number.'日',\n            default => $number,\n        };\n    },\n    'meridiem' => ['午前', '午後'],\n    'months' => ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    'months_short' => ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    'weekdays' => ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],\n    'weekdays_short' => ['日', '月', '火', '水', '木', '金', '土'],\n    'weekdays_min' => ['日', '月', '火', '水', '木', '金', '土'],\n    'list' => '、',\n    'alt_numbers' => ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '二十一', '二十二', '二十三', '二十四', '二十五', '二十六', '二十七', '二十八', '二十九', '三十', '三十一', '三十二', '三十三', '三十四', '三十五', '三十六', '三十七', '三十八', '三十九', '四十', '四十一', '四十二', '四十三', '四十四', '四十五', '四十六', '四十七', '四十八', '四十九', '五十', '五十一', '五十二', '五十三', '五十四', '五十五', '五十六', '五十七', '五十八', '五十九', '六十', '六十一', '六十二', '六十三', '六十四', '六十五', '六十六', '六十七', '六十八', '六十九', '七十', '七十一', '七十二', '七十三', '七十四', '七十五', '七十六', '七十七', '七十八', '七十九', '八十', '八十一', '八十二', '八十三', '八十四', '八十五', '八十六', '八十七', '八十八', '八十九', '九十', '九十一', '九十二', '九十三', '九十四', '九十五', '九十六', '九十七', '九十八', '九十九'],\n    'alt_numbers_pow' => [\n        10000 => '万',\n        1000 => '千',\n        100 => '百',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_CH.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/pt.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uz_Cyrl.php","ext":"php","size":503,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/uz.php', [\n    'formats' => [\n        'L' => 'DD/MM/yy',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM, YYYY HH:mm',\n        'LLLL' => 'dddd, DD MMMM, YYYY HH:mm',\n    ],\n    'meridiem' => ['ТО', 'ТК'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hi_IN.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/hi.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_TD.php","ext":"php","size":297,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ts_ZA.php","ext":"php","size":1822,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Sunguti', 'Nyenyenyani', 'Nyenyankulu', 'Dzivamisoko', 'Mudyaxihi', 'Khotavuxika', 'Mawuwani', 'Mhawuri', 'Ndzhati', 'Nhlangula', 'Hukuri', 'N\\'wendzamhala'],\n    'months_short' => ['Sun', 'Yan', 'Kul', 'Dzi', 'Mud', 'Kho', 'Maw', 'Mha', 'Ndz', 'Nhl', 'Huk', 'N\\'w'],\n    'weekdays' => ['Sonto', 'Musumbhunuku', 'Ravumbirhi', 'Ravunharhu', 'Ravumune', 'Ravuntlhanu', 'Mugqivela'],\n    'weekdays_short' => ['Son', 'Mus', 'Bir', 'Har', 'Ne', 'Tlh', 'Mug'],\n    'weekdays_min' => ['Son', 'Mus', 'Bir', 'Har', 'Ne', 'Tlh', 'Mug'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => 'malembe ya :count',\n    'y' => 'malembe ya :count',\n    'a_year' => 'malembe ya :count',\n\n    'month' => 'tin’hweti ta :count',\n    'm' => 'tin’hweti ta :count',\n    'a_month' => 'tin’hweti ta :count',\n\n    'week' => 'mavhiki ya :count',\n    'w' => 'mavhiki ya :count',\n    'a_week' => 'mavhiki ya :count',\n\n    'day' => 'masiku :count',\n    'd' => 'masiku :count',\n    'a_day' => 'masiku :count',\n\n    'hour' => 'tiawara ta :count',\n    'h' => 'tiawara ta :count',\n    'a_hour' => 'tiawara ta :count',\n\n    'minute' => 'timinete ta :count',\n    'min' => 'timinete ta :count',\n    'a_minute' => 'timinete ta :count',\n\n    'second' => 'tisekoni ta :count',\n    's' => 'tisekoni ta :count',\n    'a_second' => 'tisekoni ta :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/mni.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/mni_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sm_WS.php","ext":"php","size":1812,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Samsung Electronics Co., Ltd.    akhilesh.k@samsung.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Ianuari', 'Fepuari', 'Mati', 'Aperila', 'Me', 'Iuni', 'Iulai', 'Auguso', 'Setema', 'Oketopa', 'Novema', 'Tesema'],\n    'months_short' => ['Ian', 'Fep', 'Mat', 'Ape', 'Me', 'Iun', 'Iul', 'Aug', 'Set', 'Oke', 'Nov', 'Tes'],\n    'weekdays' => ['Aso Sa', 'Aso Gafua', 'Aso Lua', 'Aso Lulu', 'Aso Tofi', 'Aso Farail', 'Aso To\\'ana\\'i'],\n    'weekdays_short' => ['Aso Sa', 'Aso Gaf', 'Aso Lua', 'Aso Lul', 'Aso Tof', 'Aso Far', 'Aso To\\''],\n    'weekdays_min' => ['Aso Sa', 'Aso Gaf', 'Aso Lua', 'Aso Lul', 'Aso Tof', 'Aso Far', 'Aso To\\''],\n\n    'hour' => ':count uati', // less reliable\n    'h' => ':count uati', // less reliable\n    'a_hour' => ':count uati', // less reliable\n\n    'minute' => ':count itiiti', // less reliable\n    'min' => ':count itiiti', // less reliable\n    'a_minute' => ':count itiiti', // less reliable\n\n    'second' => ':count lua', // less reliable\n    's' => ':count lua', // less reliable\n    'a_second' => ':count lua', // less reliable\n\n    'year' => ':count tausaga',\n    'y' => ':count tausaga',\n    'a_year' => ':count tausaga',\n\n    'month' => ':count māsina',\n    'm' => ':count māsina',\n    'a_month' => ':count māsina',\n\n    'week' => ':count vaiaso',\n    'w' => ':count vaiaso',\n    'a_week' => ':count vaiaso',\n\n    'day' => ':count aso',\n    'd' => ':count aso',\n    'a_day' => ':count aso',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fil_PH.php","ext":"php","size":1870,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Rene Torres Rene Torres, Pablo Saratxaga rgtorre@rocketmail.com, pablo@mandrakesoft.com\n * - Jaycee Mariano (alohajaycee)\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'MM/DD/YY',\n    ],\n    'months' => ['Enero', 'Pebrero', 'Marso', 'Abril', 'Mayo', 'Hunyo', 'Hulyo', 'Agosto', 'Setyembre', 'Oktubre', 'Nobyembre', 'Disyembre'],\n    'months_short' => ['Ene', 'Peb', 'Mar', 'Abr', 'May', 'Hun', 'Hul', 'Ago', 'Set', 'Okt', 'Nob', 'Dis'],\n    'weekdays' => ['Linggo', 'Lunes', 'Martes', 'Miyerkoles', 'Huwebes', 'Biyernes', 'Sabado'],\n    'weekdays_short' => ['Lin', 'Lun', 'Mar', 'Miy', 'Huw', 'Biy', 'Sab'],\n    'weekdays_min' => ['Lin', 'Lun', 'Mar', 'Miy', 'Huw', 'Biy', 'Sab'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['N.U.', 'N.H.'],\n\n    'before' => ':time bago',\n    'after' => ':time pagkatapos',\n\n    'year' => ':count taon',\n    'y' => ':count taon',\n    'a_year' => ':count taon',\n\n    'month' => ':count buwan',\n    'm' => ':count buwan',\n    'a_month' => ':count buwan',\n\n    'week' => ':count linggo',\n    'w' => ':count linggo',\n    'a_week' => ':count linggo',\n\n    'day' => ':count araw',\n    'd' => ':count araw',\n    'a_day' => ':count araw',\n\n    'hour' => ':count oras',\n    'h' => ':count oras',\n    'a_hour' => ':count oras',\n\n    'minute' => ':count minuto',\n    'min' => ':count minuto',\n    'a_minute' => ':count minuto',\n\n    'second' => ':count segundo',\n    's' => ':count segundo',\n    'a_second' => ':count segundo',\n\n    'ago' => ':time ang nakalipas',\n    'from_now' => 'sa :time',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Latn.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/sr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sq_XK.php","ext":"php","size":465,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/sq.php', [\n    'formats' => [\n        'L' => 'D.M.YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY, HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_BJ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uk_UA.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/uk.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ro_RO.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/ro.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/or.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/or_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_FK.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/om_KE.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/om.php', [\n    'day_of_first_week_of_year' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pt_MZ.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/pt.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/quz.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/quz_PE.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cs_CZ.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/cs.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_PS.php","ext":"php","size":1162,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tn.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/tn_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/oc_FR.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/oc.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tn_ZA.php","ext":"php","size":1857,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Zuza Software Foundation (Translate.org.za) Dwayne Bailey dwayne@translate.org.za\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['Ferikgong', 'Tlhakole', 'Mopitlwe', 'Moranang', 'Motsheganong', 'Seetebosigo', 'Phukwi', 'Phatwe', 'Lwetse', 'Diphalane', 'Ngwanatsele', 'Sedimonthole'],\n    'months_short' => ['Fer', 'Tlh', 'Mop', 'Mor', 'Mot', 'See', 'Phu', 'Pha', 'Lwe', 'Dip', 'Ngw', 'Sed'],\n    'weekdays' => ['laTshipi', 'Mosupologo', 'Labobedi', 'Laboraro', 'Labone', 'Labotlhano', 'Lamatlhatso'],\n    'weekdays_short' => ['Tsh', 'Mos', 'Bed', 'Rar', 'Ne', 'Tlh', 'Mat'],\n    'weekdays_min' => ['Tsh', 'Mos', 'Bed', 'Rar', 'Ne', 'Tlh', 'Mat'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n\n    'year' => 'dingwaga di le :count',\n    'y' => 'dingwaga di le :count',\n    'a_year' => 'dingwaga di le :count',\n\n    'month' => 'dikgwedi di le :count',\n    'm' => 'dikgwedi di le :count',\n    'a_month' => 'dikgwedi di le :count',\n\n    'week' => 'dibeke di le :count',\n    'w' => 'dibeke di le :count',\n    'a_week' => 'dibeke di le :count',\n\n    'day' => 'malatsi :count',\n    'd' => 'malatsi :count',\n    'a_day' => 'malatsi :count',\n\n    'hour' => 'diura di le :count',\n    'h' => 'diura di le :count',\n    'a_hour' => 'diura di le :count',\n\n    'minute' => 'metsotso e le :count',\n    'min' => 'metsotso e le :count',\n    'a_minute' => 'metsotso e le :count',\n\n    'second' => 'metsotswana e le :count',\n    's' => 'metsotswana e le :count',\n    'a_second' => 'metsotswana e le :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/vai.php","ext":"php","size":1568,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'weekdays' => ['ꕞꕌꔵ', 'ꗳꗡꘉ', 'ꕚꕞꕚ', 'ꕉꕞꕒ', 'ꕉꔤꕆꕢ', 'ꕉꔤꕀꕮ', 'ꔻꔬꔳ'],\n    'weekdays_short' => ['ꕞꕌꔵ', 'ꗳꗡꘉ', 'ꕚꕞꕚ', 'ꕉꕞꕒ', 'ꕉꔤꕆꕢ', 'ꕉꔤꕀꕮ', 'ꔻꔬꔳ'],\n    'weekdays_min' => ['ꕞꕌꔵ', 'ꗳꗡꘉ', 'ꕚꕞꕚ', 'ꕉꕞꕒ', 'ꕉꔤꕆꕢ', 'ꕉꔤꕀꕮ', 'ꔻꔬꔳ'],\n    'months' => ['ꖨꖕ ꕪꕴ ꔞꔀꕮꕊ', 'ꕒꕡꖝꖕ', 'ꕾꖺ', 'ꖢꖕ', 'ꖑꕱ', 'ꖱꘋ', 'ꖱꕞꔤ', 'ꗛꔕ', 'ꕢꕌ', 'ꕭꖃ', 'ꔞꘋꕔꕿ ꕸꖃꗏ', 'ꖨꖕ ꕪꕴ ꗏꖺꕮꕊ'],\n    'months_short' => ['ꖨꖕꔞ', 'ꕒꕡ', 'ꕾꖺ', 'ꖢꖕ', 'ꖑꕱ', 'ꖱꘋ', 'ꖱꕞ', 'ꗛꔕ', 'ꕢꕌ', 'ꕭꖃ', 'ꔞꘋ', 'ꖨꖕꗏ'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd, D MMMM YYYY h:mm a',\n    ],\n\n    'year' => ':count ꕀ', // less reliable\n    'y' => ':count ꕀ', // less reliable\n    'a_year' => ':count ꕀ', // less reliable\n\n    'second' => ':count ꗱꕞꕯꕊ', // less reliable\n    's' => ':count ꗱꕞꕯꕊ', // less reliable\n    'a_second' => ':count ꗱꕞꕯꕊ', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sn.php","ext":"php","size":1739,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'meridiem' => ['a', 'p'],\n    'weekdays' => ['Svondo', 'Muvhuro', 'Chipiri', 'Chitatu', 'China', 'Chishanu', 'Mugovera'],\n    'weekdays_short' => ['Svo', 'Muv', 'Chp', 'Cht', 'Chn', 'Chs', 'Mug'],\n    'weekdays_min' => ['Sv', 'Mu', 'Cp', 'Ct', 'Cn', 'Cs', 'Mg'],\n    'months' => ['Ndira', 'Kukadzi', 'Kurume', 'Kubvumbi', 'Chivabvu', 'Chikumi', 'Chikunguru', 'Nyamavhuvhu', 'Gunyana', 'Gumiguru', 'Mbudzi', 'Zvita'],\n    'months_short' => ['Ndi', 'Kuk', 'Kur', 'Kub', 'Chv', 'Chk', 'Chg', 'Nya', 'Gun', 'Gum', 'Mbu', 'Zvi'],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'YYYY MMMM D, dddd HH:mm',\n    ],\n\n    'year' => 'makore :count',\n    'y' => 'makore :count',\n    'a_year' => 'makore :count',\n\n    'month' => 'mwedzi :count',\n    'm' => 'mwedzi :count',\n    'a_month' => 'mwedzi :count',\n\n    'week' => 'vhiki :count',\n    'w' => 'vhiki :count',\n    'a_week' => 'vhiki :count',\n\n    'day' => 'mazuva :count',\n    'd' => 'mazuva :count',\n    'a_day' => 'mazuva :count',\n\n    'hour' => 'maawa :count',\n    'h' => 'maawa :count',\n    'a_hour' => 'maawa :count',\n\n    'minute' => 'minitsi :count',\n    'min' => 'minitsi :count',\n    'a_minute' => 'minitsi :count',\n\n    'second' => 'sekonzi :count',\n    's' => 'sekonzi :count',\n    'a_second' => 'sekonzi :count',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sgs.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/sgs_LT.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/az_IR.php","ext":"php","size":2100,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Mousa Moradi mousamk@gmail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'OY/OM/OD',\n    ],\n    'months' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مئی', 'ژوئن', 'جولای', 'آقۇست', 'سپتامبر', 'اوْکتوْبر', 'نوْوامبر', 'دسامبر'],\n    'months_short' => ['ژانویه', 'فوریه', 'مارس', 'آوریل', 'مئی', 'ژوئن', 'جولای', 'آقۇست', 'سپتامبر', 'اوْکتوْبر', 'نوْوامبر', 'دسامبر'],\n    'weekdays' => ['یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چارشنبه', 'جۆمعه آخشامی', 'جۆمعه', 'شنبه'],\n    'weekdays_short' => ['یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چارشنبه', 'جۆمعه آخشامی', 'جۆمعه', 'شنبه'],\n    'weekdays_min' => ['یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چارشنبه', 'جۆمعه آخشامی', 'جۆمعه', 'شنبه'],\n    'first_day_of_week' => 6,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰۴', '۰۵', '۰۶', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱۴', '۱۵', '۱۶', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲۴', '۲۵', '۲۶', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳۴', '۳۵', '۳۶', '۳۷', '۳۸', '۳۹', '۴۰', '۴۱', '۴۲', '۴۳', '۴۴', '۴۵', '۴۶', '۴۷', '۴۸', '۴۹', '۵۰', '۵۱', '۵۲', '۵۳', '۵۴', '۵۵', '۵۶', '۵۷', '۵۸', '۵۹', '۶۰', '۶۱', '۶۲', '۶۳', '۶۴', '۶۵', '۶۶', '۶۷', '۶۸', '۶۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷۴', '۷۵', '۷۶', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸۴', '۸۵', '۸۶', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹۴', '۹۵', '۹۶', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_US.php","ext":"php","size":875,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Kunal Marwaha\n * - Josh Soref\n * - Jørn Ølmheim\n * - Craig Patik\n * - bustta\n * - François B\n * - Tim Fish\n * - Claire Coloma\n * - Steven Heinrich\n * - JD Isaacks\n * - Raphael Amorim\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'diff_before_yesterday' => 'anteayer',\n    'formats' => [\n        'LT' => 'h:mm A',\n        'LTS' => 'h:mm:ss A',\n        'L' => 'MM/DD/YYYY',\n        'LL' => 'MMMM [de] D [de] YYYY',\n        'LLL' => 'MMMM [de] D [de] YYYY h:mm A',\n        'LLLL' => 'dddd, MMMM [de] D [de] YYYY h:mm A',\n    ],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/lrc.php","ext":"php","size":477,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n\n    'minute' => ':count هنر', // less reliable\n    'min' => ':count هنر', // less reliable\n    'a_minute' => ':count هنر', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_OM.php","ext":"php","size":1996,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    'months_short' => ['ينا', 'فبر', 'مار', 'أبر', 'ماي', 'يون', 'يول', 'أغس', 'سبت', 'أكت', 'نوف', 'ديس'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/pap.php","ext":"php","size":1337,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn [\n    'formats' => [\n        'LT' => 'HH.mm',\n        'LTS' => 'HH.mm:ss',\n        'L' => 'DD-MM-YY',\n        'LL' => 'MMMM [di] DD, YYYY',\n        'LLL' => 'DD MMM HH.mm',\n        'LLLL' => 'MMMM DD, YYYY HH.mm',\n    ],\n    'months' => ['yanüari', 'febrüari', 'mart', 'aprel', 'mei', 'yüni', 'yüli', 'ougùstùs', 'sèptèmber', 'oktober', 'novèmber', 'desèmber'],\n    'months_short' => ['yan', 'feb', 'mar', 'apr', 'mei', 'yün', 'yül', 'oug', 'sèp', 'okt', 'nov', 'des'],\n    'weekdays' => ['djadomingo', 'djaluna', 'djamars', 'djawebs', 'djarason', 'djabierne', 'djasabra'],\n    'weekdays_short' => ['do', 'lu', 'ma', 'we', 'ra', 'bi', 'sa'],\n    'weekdays_min' => ['do', 'lu', 'ma', 'we', 'ra', 'bi', 'sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'year' => ':count aña',\n    'month' => ':count luna',\n    'week' => ':count siman',\n    'day' => ':count dia',\n    'hour' => ':count ora',\n    'minute' => ':count minüt',\n    'second' => ':count sekònde',\n    'list' => [', ', ' i '],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/teo_KE.php","ext":"php","size":328,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/teo.php', [\n    'first_day_of_week' => 0,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CM.php","ext":"php","size":333,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'meridiem' => ['mat.', 'soir'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/crh.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/crh_UA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/st.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/st_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nl_SX.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/nl.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/uz_Arab.php","ext":"php","size":1175,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fa.php', [\n    'weekdays' => ['یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه'],\n    'weekdays_short' => ['ی.', 'د.', 'س.', 'چ.', 'پ.', 'ج.', 'ش.'],\n    'weekdays_min' => ['ی.', 'د.', 'س.', 'چ.', 'پ.', 'ج.', 'ش.'],\n    'months' => ['جنوری', 'فبروری', 'مارچ', 'اپریل', 'می', 'جون', 'جولای', 'اگست', 'سپتمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n    'months_short' => ['جنو', 'فبر', 'مار', 'اپر', 'می', 'جون', 'جول', 'اگس', 'سپت', 'اکت', 'نوم', 'دسم'],\n    'first_day_of_week' => 6,\n    'weekend' => [4, 5],\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'YYYY-MM-dd',\n        'LL' => 'YYYY MMM D',\n        'LLL' => 'YYYY MMMM D HH:mm',\n        'LLLL' => 'YYYY MMMM D, dddd HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_MG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_SY.php","ext":"php","size":2110,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - IBM Globalization Center of Competency, Yamato Software Laboratory    bug-glibc-locales@gnu.org\n * - Abdullah-Alhariri\n */\nreturn array_replace_recursive(require __DIR__.'/ar.php', [\n    'formats' => [\n        'L' => 'DD MMM, YYYY',\n    ],\n    'months' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'months_short' => ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'أيار', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'alt_numbers' => ['۰۰', '۰۱', '۰۲', '۰۳', '۰٤', '۰٥', '۰٦', '۰۷', '۰۸', '۰۹', '۱۰', '۱۱', '۱۲', '۱۳', '۱٤', '۱٥', '۱٦', '۱۷', '۱۸', '۱۹', '۲۰', '۲۱', '۲۲', '۲۳', '۲٤', '۲٥', '۲٦', '۲۷', '۲۸', '۲۹', '۳۰', '۳۱', '۳۲', '۳۳', '۳٤', '۳٥', '۳٦', '۳۷', '۳۸', '۳۹', '٤۰', '٤۱', '٤۲', '٤۳', '٤٤', '٤٥', '٤٦', '٤۷', '٤۸', '٤۹', '٥۰', '٥۱', '٥۲', '٥۳', '٥٤', '٥٥', '٥٦', '٥۷', '٥۸', '٥۹', '٦۰', '٦۱', '٦۲', '٦۳', '٦٤', '٦٥', '٦٦', '٦۷', '٦۸', '٦۹', '۷۰', '۷۱', '۷۲', '۷۳', '۷٤', '۷٥', '۷٦', '۷۷', '۷۸', '۷۹', '۸۰', '۸۱', '۸۲', '۸۳', '۸٤', '۸٥', '۸٦', '۸۷', '۸۸', '۸۹', '۹۰', '۹۱', '۹۲', '۹۳', '۹٤', '۹٥', '۹٦', '۹۷', '۹۸', '۹۹'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tt.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/tt_RU.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fil.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/fil_PH.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gd_GB.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/gd.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_DZ.php","ext":"php","size":4526,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Authors:\n * - Josh Soref\n * - Noureddine LOUAHEDJ\n * - JD Isaacks\n * - Atef Ben Ali (atefBB)\n * - Mohamed Sabil (mohamedsabil83)\n */\n$months = [\n    'جانفي',\n    'فيفري',\n    'مارس',\n    'أفريل',\n    'ماي',\n    'جوان',\n    'جويلية',\n    'أوت',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'a_year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'a_month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'a_week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'a_day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'a_hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'a_minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'a_second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => 'في :time',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدا(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['أح', 'إث', 'ثلا', 'أر', 'خم', 'جم', 'سب'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 4,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم على الساعة] LT',\n        'nextDay' => '[غدا على الساعة] LT',\n        'nextWeek' => 'dddd [على الساعة] LT',\n        'lastDay' => '[أمس على الساعة] LT',\n        'lastWeek' => 'dddd [على الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/miq_NI.php","ext":"php","size":1244,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YY',\n    ],\n    'months' => ['siakwa kati', 'kuswa kati', 'kakamuk kati', 'lî wainhka kati', 'lih mairin kati', 'lî kati', 'pastara kati', 'sikla kati', 'wîs kati', 'waupasa kati', 'yahbra kati', 'trisu kati'],\n    'months_short' => ['siakwa kati', 'kuswa kati', 'kakamuk kati', 'lî wainhka kati', 'lih mairin kati', 'lî kati', 'pastara kati', 'sikla kati', 'wîs kati', 'waupasa kati', 'yahbra kati', 'trisu kati'],\n    'weekdays' => ['sandi', 'mundi', 'tiusdi', 'wensde', 'tausde', 'praidi', 'satadi'],\n    'weekdays_short' => ['san', 'mun', 'tius', 'wens', 'taus', 'prai', 'sat'],\n    'weekdays_min' => ['san', 'mun', 'tius', 'wens', 'taus', 'prai', 'sat'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 7,\n    'meridiem' => ['VM', 'NM'],\n\n    'month' => ':count kati', // less reliable\n    'm' => ':count kati', // less reliable\n    'a_month' => ':count kati', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/nr.php","ext":"php","size":334,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/nr_ZA.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/se_NO.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/se.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tr_CY.php","ext":"php","size":664,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/tr.php', [\n    'weekdays_short' => ['Paz', 'Pzt', 'Sal', 'Çar', 'Per', 'Cum', 'Cmt'],\n    'weekdays_min' => ['Pa', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'D.MM.YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'D MMMM YYYY dddd h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/es_GT.php","ext":"php","size":422,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - RAP    bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/es.php', [\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_WF.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_SY.php","ext":"php","size":577,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'first_day_of_week' => 6,\n    'weekend' => [5, 6],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/shn_MM.php","ext":"php","size":4062,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - ubuntu Myanmar LoCo Team https://ubuntu-mm.net Bone Pyae Sone bone.burma@mail.com\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'first_day_of_week' => 0,\n    'formats' => [\n        'L' => 'OY MMM OD dddd',\n    ],\n    'months' => ['လိူၼ်ၵမ်', 'လိူၼ်သၢမ်', 'လိူၼ်သီ', 'လိူၼ်ႁႃႈ', 'လိူၼ်ႁူၵ်း', 'လိူၼ်ၸဵတ်း', 'လိူၼ်ပႅတ်ႇ', 'လိူၼ်ၵဝ်ႈ', 'လိူၼ်သိပ်း', 'လိူၼ်သိပ်းဢိတ်း', 'လိူၼ်သိပ်းဢိတ်းသွင်', 'လိူၼ်ၸဵင်'],\n    'months_short' => ['လိူၼ်ၵမ်', 'လိူၼ်သၢမ်', 'လိူၼ်သီ', 'လိူၼ်ႁႃႈ', 'လိူၼ်ႁူၵ်း', 'လိူၼ်ၸဵတ်း', 'လိူၼ်ပႅတ်ႇ', 'လိူၼ်ၵဝ်ႈ', 'လိူၼ်သိပ်း', 'လိူၼ်သိပ်းဢိတ်း', 'လိူၼ်သိပ်းဢိတ်းသွင်', 'လိူၼ်ၸဵင်'],\n    'weekdays' => ['ဝၼ်းဢႃးတိတ်ႉ', 'ဝၼ်းၸၼ်', 'ဝၼ်း​ဢၢင်း​ၵၢၼ်း', 'ဝၼ်းပူတ်ႉ', 'ဝၼ်းၽတ်း', 'ဝၼ်းသုၵ်း', 'ဝၼ်းသဝ်'],\n    'weekdays_short' => ['တိတ့်', 'ၸၼ်', 'ၵၢၼ်း', 'ပုတ့်', 'ၽတ်း', 'သုၵ်း', 'သဝ်'],\n    'weekdays_min' => ['တိတ့်', 'ၸၼ်', 'ၵၢၼ်း', 'ပုတ့်', 'ၽတ်း', 'သုၵ်း', 'သဝ်'],\n    'alt_numbers' => ['႐႐', '႐႑', '႐႒', '႐႓', '႐႔', '႐႕', '႐႖', '႐႗', '႐႘', '႐႙', '႑႐', '႑႑', '႑႒', '႑႓', '႑႔', '႑႕', '႑႖', '႑႗', '႑႘', '႑႙', '႒႐', '႒႑', '႒႒', '႒႓', '႒႔', '႒႕', '႒႖', '႒႗', '႒႘', '႒႙', '႓႐', '႓႑', '႓႒', '႓႓', '႓႔', '႓႕', '႓႖', '႓႗', '႓႘', '႓႙', '႔႐', '႔႑', '႔႒', '႔႓', '႔႔', '႔႕', '႔႖', '႔႗', '႔႘', '႔႙', '႕႐', '႕႑', '႕႒', '႕႓', '႕႔', '႕႕', '႕႖', '႕႗', '႕႘', '႕႙', '႖႐', '႖႑', '႖႒', '႖႓', '႖႔', '႖႕', '႖႖', '႖႗', '႖႘', '႖႙', '႗႐', '႗႑', '႗႒', '႗႓', '႗႔', '႗႕', '႗႖', '႗႗', '႗႘', '႗႙', '႘႐', '႘႑', '႘႒', '႘႓', '႘႔', '႘႕', '႘႖', '႘႗', '႘႘', '႘႙', '႙႐', '႙႑', '႙႒', '႙႓', '႙႔', '႙႕', '႙႖', '႙႗', '႙႘', '႙႙'],\n    'meridiem' => ['ၵၢင်ၼႂ်', 'တၢမ်းၶမ်ႈ'],\n\n    'month' => ':count လိူၼ်', // less reliable\n    'm' => ':count လိူၼ်', // less reliable\n    'a_month' => ':count လိူၼ်', // less reliable\n\n    'week' => ':count ဝၼ်း', // less reliable\n    'w' => ':count ဝၼ်း', // less reliable\n    'a_week' => ':count ဝၼ်း', // less reliable\n\n    'hour' => ':count ຕີ', // less reliable\n    'h' => ':count ຕີ', // less reliable\n    'a_hour' => ':count ຕີ', // less reliable\n\n    'minute' => ':count ເດັກ', // less reliable\n    'min' => ':count ເດັກ', // less reliable\n    'a_minute' => ':count ເດັກ', // less reliable\n\n    'second' => ':count ဢိုၼ်ႇ', // less reliable\n    's' => ':count ဢိုၼ်ႇ', // less reliable\n    'a_second' => ':count ဢိုၼ်ႇ', // less reliable\n\n    'year' => ':count ပီ',\n    'y' => ':count ပီ',\n    'a_year' => ':count ပီ',\n\n    'day' => ':count ກາງວັນ',\n    'd' => ':count ກາງວັນ',\n    'a_day' => ':count ກາງວັນ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Latn_ME.php","ext":"php","size":2126,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Glavić\n * - Milos Sakovic\n */\n\nuse Carbon\\CarbonInterface;\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'sr');\n    }, 'sr_Latn_ME');\n}\n// @codeCoverageIgnoreEnd\n\nreturn array_replace_recursive(require __DIR__.'/sr.php', [\n    'month' => ':count mjesec|:count mjeseca|:count mjeseci',\n    'week' => ':count nedjelja|:count nedjelje|:count nedjelja',\n    'second' => ':count sekund|:count sekunde|:count sekundi',\n    'ago' => 'prije :time',\n    'from_now' => 'za :time',\n    'after' => ':time nakon',\n    'before' => ':time prije',\n    'week_from_now' => ':count nedjelju|:count nedjelje|:count nedjelja',\n    'week_ago' => ':count nedjelju|:count nedjelje|:count nedjelja',\n    'second_ago' => ':count sekund|:count sekunde|:count sekundi',\n    'diff_tomorrow' => 'sjutra',\n    'calendar' => [\n        'nextDay' => '[sjutra u] LT',\n        'nextWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[u nedjelju u] LT',\n            3 => '[u srijedu u] LT',\n            6 => '[u subotu u] LT',\n            default => '[u] dddd [u] LT',\n        },\n        'lastWeek' => static fn (CarbonInterface $date) => match ($date->dayOfWeek) {\n            0 => '[prošle nedjelje u] LT',\n            1 => '[prošle nedjelje u] LT',\n            2 => '[prošlog utorka u] LT',\n            3 => '[prošle srijede u] LT',\n            4 => '[prošlog četvrtka u] LT',\n            5 => '[prošlog petka u] LT',\n            default => '[prošle subote u] LT',\n        },\n    ],\n    'weekdays' => ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],\n    'weekdays_short' => ['ned.', 'pon.', 'uto.', 'sri.', 'čet.', 'pet.', 'sub.'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/az_AZ.php","ext":"php","size":765,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Pablo Saratxaga pablo@mandrakesoft.com\n */\nreturn array_replace_recursive(require __DIR__.'/az.php', [\n    'months_short' => ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'İyn', 'İyl', 'Avq', 'Sen', 'Okt', 'Noy', 'Dek'],\n    'weekdays' => ['bazar günü', 'bazar ertəsi', 'çərşənbə axşamı', 'çərşənbə', 'cümə axşamı', 'cümə', 'şənbə'],\n    'weekdays_short' => ['baz', 'ber', 'çax', 'çər', 'cax', 'cüm', 'şnb'],\n    'weekdays_min' => ['baz', 'ber', 'çax', 'çər', 'cax', 'cüm', 'şnb'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_DZ.php","ext":"php","size":577,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'first_day_of_week' => 6,\n    'weekend' => [5, 6],\n    'formats' => [\n        'LT' => 'h:mm a',\n        'LTS' => 'h:mm:ss a',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY h:mm a',\n        'LLLL' => 'dddd D MMMM YYYY h:mm a',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hne.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn require __DIR__.'/hne_IN.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sl.php","ext":"php","size":4865,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Tsutomu Kuroda\n * - tjku\n * - Max Melentiev\n * - Juanito Fatas\n * - Akira Matsuda\n * - Christopher Dell\n * - Enrique Vidal\n * - Simone Carletti\n * - Aaron Patterson\n * - Nicolás Hock Isaza\n * - Miha Rebernik\n * - Gal Jakič (morpheus7CS)\n * - Glavić\n * - Anže Časar\n * - Lovro Tramšek (Lovro1107)\n * - burut13\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count leto|:count leti|:count leta|:count let',\n    'y' => ':count leto|:count leti|:count leta|:count let',\n    'month' => ':count mesec|:count meseca|:count mesece|:count mesecev',\n    'm' => ':count mes.',\n    'week' => ':count teden|:count tedna|:count tedne|:count tednov',\n    'w' => ':count ted.',\n    'day' => ':count dan|:count dni|:count dni|:count dni',\n    'd' => ':count dan|:count dni|:count dni|:count dni',\n    'hour' => ':count ura|:count uri|:count ure|:count ur',\n    'h' => ':count h',\n    'minute' => ':count minuta|:count minuti|:count minute|:count minut',\n    'min' => ':count min.',\n    'second' => ':count sekunda|:count sekundi|:count sekunde|:count sekund',\n    'a_second' => '{1}nekaj sekund|:count sekunda|:count sekundi|:count sekunde|:count sekund',\n    's' => ':count s',\n\n    'year_ago' => ':count letom|:count letoma|:count leti|:count leti',\n    'y_ago' => ':count letom|:count letoma|:count leti|:count leti',\n    'month_ago' => ':count mesecem|:count mesecema|:count meseci|:count meseci',\n    'week_ago' => ':count tednom|:count tednoma|:count tedni|:count tedni',\n    'day_ago' => ':count dnem|:count dnevoma|:count dnevi|:count dnevi',\n    'd_ago' => ':count dnem|:count dnevoma|:count dnevi|:count dnevi',\n    'hour_ago' => ':count uro|:count urama|:count urami|:count urami',\n    'minute_ago' => ':count minuto|:count minutama|:count minutami|:count minutami',\n    'second_ago' => ':count sekundo|:count sekundama|:count sekundami|:count sekundami',\n\n    'day_from_now' => ':count dan|:count dneva|:count dni|:count dni',\n    'd_from_now' => ':count dan|:count dneva|:count dni|:count dni',\n    'hour_from_now' => ':count uro|:count uri|:count ure|:count ur',\n    'minute_from_now' => ':count minuto|:count minuti|:count minute|:count minut',\n    'second_from_now' => ':count sekundo|:count sekundi|:count sekunde|:count sekund',\n\n    'ago' => 'pred :time',\n    'from_now' => 'čez :time',\n    'after' => ':time kasneje',\n    'before' => ':time prej',\n\n    'diff_now' => 'ravnokar',\n    'diff_today' => 'danes',\n    'diff_today_regexp' => 'danes(?:\\\\s+ob)?',\n    'diff_yesterday' => 'včeraj',\n    'diff_yesterday_regexp' => 'včeraj(?:\\\\s+ob)?',\n    'diff_tomorrow' => 'jutri',\n    'diff_tomorrow_regexp' => 'jutri(?:\\\\s+ob)?',\n    'diff_before_yesterday' => 'predvčerajšnjim',\n    'diff_after_tomorrow' => 'pojutrišnjem',\n\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n\n    'period_start_date' => 'od :date',\n    'period_end_date' => 'do :date',\n\n    'formats' => [\n        'LT' => 'H:mm',\n        'LTS' => 'H:mm:ss',\n        'L' => 'DD.MM.YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY H:mm',\n        'LLLL' => 'dddd, D. MMMM YYYY H:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[danes ob] LT',\n        'nextDay' => '[jutri ob] LT',\n        'nextWeek' => 'dddd [ob] LT',\n        'lastDay' => '[včeraj ob] LT',\n        'lastWeek' => static function (CarbonInterface $date) {\n            switch ($date->dayOfWeek) {\n                case 0:\n                    return '[preteklo] [nedeljo] [ob] LT';\n                case 1:\n                    return '[pretekli] [ponedeljek] [ob] LT';\n                case 2:\n                    return '[pretekli] [torek] [ob] LT';\n                case 3:\n                    return '[preteklo] [sredo] [ob] LT';\n                case 4:\n                    return '[pretekli] [četrtek] [ob] LT';\n                case 5:\n                    return '[pretekli] [petek] [ob] LT';\n                case 6:\n                    return '[preteklo] [soboto] [ob] LT';\n            }\n        },\n        'sameElse' => 'L',\n    ],\n    'months' => ['januar', 'februar', 'marec', 'april', 'maj', 'junij', 'julij', 'avgust', 'september', 'oktober', 'november', 'december'],\n    'months_short' => ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'avg', 'sep', 'okt', 'nov', 'dec'],\n    'weekdays' => ['nedelja', 'ponedeljek', 'torek', 'sreda', 'četrtek', 'petek', 'sobota'],\n    'weekdays_short' => ['ned', 'pon', 'tor', 'sre', 'čet', 'pet', 'sob'],\n    'weekdays_min' => ['ne', 'po', 'to', 'sr', 'če', 'pe', 'so'],\n    'list' => [', ', ' in '],\n    'meridiem' => ['dopoldan', 'popoldan'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ar_TN.php","ext":"php","size":4494,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Authors:\n * - JD Isaacks\n * - Atef Ben Ali (atefBB)\n * - Mohamed Sabil (mohamedsabil83)\n */\n$months = [\n    'جانفي',\n    'فيفري',\n    'مارس',\n    'أفريل',\n    'ماي',\n    'جوان',\n    'جويلية',\n    'أوت',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر',\n];\n\nreturn [\n    'year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'a_year' => implode('|', ['{0}:count سنة', '{1}سنة', '{2}سنتين', ']2,11[:count سنوات', ']10,Inf[:count سنة']),\n    'month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'a_month' => implode('|', ['{0}:count شهر', '{1}شهر', '{2}شهرين', ']2,11[:count أشهر', ']10,Inf[:count شهر']),\n    'week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'a_week' => implode('|', ['{0}:count أسبوع', '{1}أسبوع', '{2}أسبوعين', ']2,11[:count أسابيع', ']10,Inf[:count أسبوع']),\n    'day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'a_day' => implode('|', ['{0}:count يوم', '{1}يوم', '{2}يومين', ']2,11[:count أيام', ']10,Inf[:count يوم']),\n    'hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'a_hour' => implode('|', ['{0}:count ساعة', '{1}ساعة', '{2}ساعتين', ']2,11[:count ساعات', ']10,Inf[:count ساعة']),\n    'minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'a_minute' => implode('|', ['{0}:count دقيقة', '{1}دقيقة', '{2}دقيقتين', ']2,11[:count دقائق', ']10,Inf[:count دقيقة']),\n    'second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'a_second' => implode('|', ['{0}:count ثانية', '{1}ثانية', '{2}ثانيتين', ']2,11[:count ثواني', ']10,Inf[:count ثانية']),\n    'ago' => 'منذ :time',\n    'from_now' => 'في :time',\n    'after' => 'بعد :time',\n    'before' => 'قبل :time',\n    'diff_now' => 'الآن',\n    'diff_today' => 'اليوم',\n    'diff_today_regexp' => 'اليوم(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_yesterday' => 'أمس',\n    'diff_yesterday_regexp' => 'أمس(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_tomorrow' => 'غداً',\n    'diff_tomorrow_regexp' => 'غدا(?:\\\\s+على)?(?:\\\\s+الساعة)?',\n    'diff_before_yesterday' => 'قبل الأمس',\n    'diff_after_tomorrow' => 'بعد غد',\n    'period_recurrences' => implode('|', ['{0}مرة', '{1}مرة', '{2}:count مرتين', ']2,11[:count مرات', ']10,Inf[:count مرة']),\n    'period_interval' => 'كل :interval',\n    'period_start_date' => 'من :date',\n    'period_end_date' => 'إلى :date',\n    'months' => $months,\n    'months_short' => $months,\n    'weekdays' => ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    'weekdays_short' => ['أحد', 'اثنين', 'ثلاثاء', 'أربعاء', 'خميس', 'جمعة', 'سبت'],\n    'weekdays_min' => ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    'list' => ['، ', ' و '],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[اليوم على الساعة] LT',\n        'nextDay' => '[غدا على الساعة] LT',\n        'nextWeek' => 'dddd [على الساعة] LT',\n        'lastDay' => '[أمس على الساعة] LT',\n        'lastWeek' => 'dddd [على الساعة] LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => ['ص', 'م'],\n    'weekend' => [5, 6],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cs.php","ext":"php","size":4555,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Philippe Vaucher\n * - Jakub Tesinsky\n * - Martin Suja\n * - Nikos Timiopulos\n * - Bohuslav Blín\n * - Tsutomu Kuroda\n * - tjku\n * - Lukas Svoboda\n * - Max Melentiev\n * - Juanito Fatas\n * - Akira Matsuda\n * - Christopher Dell\n * - Václav Pávek\n * - CodeSkills\n * - Tlapi\n * - newman101\n * - Petr Kadlec\n * - tommaskraus\n * - Karel Sommer (calvera)\n */\n$za = function ($time) {\n    return 'za '.strtr($time, [\n        'hodina' => 'hodinu',\n        'minuta' => 'minutu',\n        'sekunda' => 'sekundu',\n    ]);\n};\n\n$pred = function ($time) {\n    $time = strtr($time, [\n        'hodina' => 'hodinou',\n        'minuta' => 'minutou',\n        'sekunda' => 'sekundou',\n    ]);\n    $time = preg_replace('/hodiny?(?!\\w)/', 'hodinami', $time);\n    $time = preg_replace('/minuty?(?!\\w)/', 'minutami', $time);\n    $time = preg_replace('/sekundy?(?!\\w)/', 'sekundami', $time);\n\n    return \"před $time\";\n};\n\nreturn [\n    'year' => ':count rok|:count roky|:count let',\n    'y' => ':count rok|:count roky|:count let',\n    'a_year' => 'rok|:count roky|:count let',\n    'month' => ':count měsíc|:count měsíce|:count měsíců',\n    'm' => ':count měs.',\n    'a_month' => 'měsíc|:count měsíce|:count měsíců',\n    'week' => ':count týden|:count týdny|:count týdnů',\n    'w' => ':count týd.',\n    'a_week' => 'týden|:count týdny|:count týdnů',\n    'day' => ':count den|:count dny|:count dní',\n    'd' => ':count den|:count dny|:count dní',\n    'a_day' => 'den|:count dny|:count dní',\n    'hour' => ':count hodina|:count hodiny|:count hodin',\n    'h' => ':count hod.',\n    'a_hour' => 'hodina|:count hodiny|:count hodin',\n    'minute' => ':count minuta|:count minuty|:count minut',\n    'min' => ':count min.',\n    'a_minute' => 'minuta|:count minuty|:count minut',\n    'second' => ':count sekunda|:count sekundy|:count sekund',\n    's' => ':count sek.',\n    'a_second' => 'pár sekund|:count sekundy|:count sekund',\n\n    'month_ago' => ':count měsícem|:count měsíci|:count měsíci',\n    'a_month_ago' => 'měsícem|:count měsíci|:count měsíci',\n    'day_ago' => ':count dnem|:count dny|:count dny',\n    'a_day_ago' => 'dnem|:count dny|:count dny',\n    'week_ago' => ':count týdnem|:count týdny|:count týdny',\n    'a_week_ago' => 'týdnem|:count týdny|:count týdny',\n    'year_ago' => ':count rokem|:count roky|:count lety',\n    'y_ago' => ':count rok.|:count rok.|:count let.',\n    'a_year_ago' => 'rokem|:count roky|:count lety',\n\n    'month_before' => ':count měsícem|:count měsíci|:count měsíci',\n    'a_month_before' => 'měsícem|:count měsíci|:count měsíci',\n    'day_before' => ':count dnem|:count dny|:count dny',\n    'a_day_before' => 'dnem|:count dny|:count dny',\n    'week_before' => ':count týdnem|:count týdny|:count týdny',\n    'a_week_before' => 'týdnem|:count týdny|:count týdny',\n    'year_before' => ':count rokem|:count roky|:count lety',\n    'y_before' => ':count rok.|:count rok.|:count let.',\n    'a_year_before' => 'rokem|:count roky|:count lety',\n\n    'ago' => $pred,\n    'from_now' => $za,\n    'before' => $pred,\n    'after' => $za,\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'months' => ['ledna', 'února', 'března', 'dubna', 'května', 'června', 'července', 'srpna', 'září', 'října', 'listopadu', 'prosince'],\n    'months_standalone' => ['leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen', 'září', 'říjen', 'listopad', 'prosinec'],\n    'months_short' => ['led', 'úno', 'bře', 'dub', 'kvě', 'čvn', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro'],\n    'months_regexp' => '/(DD?o?\\.?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota'],\n    'weekdays_short' => ['ned', 'pon', 'úte', 'stř', 'čtv', 'pát', 'sob'],\n    'weekdays_min' => ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],\n    'list' => [', ', ' a '],\n    'diff_now' => 'nyní',\n    'diff_yesterday' => 'včera',\n    'diff_tomorrow' => 'zítra',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD. MM. YYYY',\n        'LL' => 'D. MMMM YYYY',\n        'LLL' => 'D. MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D. MMMM YYYY HH:mm',\n    ],\n    'meridiem' => ['dopoledne', 'odpoledne'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bo.php","ext":"php","size":4488,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Josh Soref\n * - JD Isaacks\n */\nreturn [\n    'year' => 'ལོ:count',\n    'a_year' => '{1}ལོ་གཅིག|[-Inf,Inf]ལོ:count',\n    'month' => 'ཟླ་བ:count',\n    'a_month' => '{1}ཟླ་བ་གཅིག|[-Inf,Inf]ཟླ་བ:count',\n    'week' => 'གཟའ་འཁོར་:count',\n    'a_week' => 'གཟའ་འཁོར་གཅིག',\n    'day' => 'ཉིན:count་',\n    'a_day' => '{1}ཉིན་གཅིག|[-Inf,Inf]ཉིན:count',\n    'hour' => 'ཆུ་ཚོད:count',\n    'a_hour' => '{1}ཆུ་ཚོད་གཅིག|[-Inf,Inf]ཆུ་ཚོད:count',\n    'minute' => 'སྐར་མ་:count',\n    'a_minute' => '{1}སྐར་མ་གཅིག|[-Inf,Inf]སྐར་མ་:count',\n    'second' => 'སྐར་ཆ:count',\n    'a_second' => '{01}ལམ་སང|[-Inf,Inf]སྐར་ཆ:count',\n    'ago' => ':time སྔན་ལ',\n    'from_now' => ':time ལ་',\n    'diff_yesterday' => 'ཁ་སང',\n    'diff_today' => 'དི་རིང',\n    'diff_tomorrow' => 'སང་ཉིན',\n    'formats' => [\n        'LT' => 'A h:mm',\n        'LTS' => 'A h:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY, A h:mm',\n        'LLLL' => 'dddd, D MMMM YYYY, A h:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[དི་རིང] LT',\n        'nextDay' => '[སང་ཉིན] LT',\n        'nextWeek' => '[བདུན་ཕྲག་རྗེས་མ], LT',\n        'lastDay' => '[ཁ་སང] LT',\n        'lastWeek' => '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n        'sameElse' => 'L',\n    ],\n    'meridiem' => static function ($hour) {\n        if ($hour < 4) {\n            return 'མཚན་མོ';\n        }\n        if ($hour < 10) {\n            return 'ཞོགས་ཀས';\n        }\n        if ($hour < 17) {\n            return 'ཉིན་གུང';\n        }\n        if ($hour < 20) {\n            return 'དགོང་དག';\n        }\n\n        return 'མཚན་མོ';\n    },\n    'months' => ['ཟླ་བ་དང་པོ', 'ཟླ་བ་གཉིས་པ', 'ཟླ་བ་གསུམ་པ', 'ཟླ་བ་བཞི་པ', 'ཟླ་བ་ལྔ་པ', 'ཟླ་བ་དྲུག་པ', 'ཟླ་བ་བདུན་པ', 'ཟླ་བ་བརྒྱད་པ', 'ཟླ་བ་དགུ་པ', 'ཟླ་བ་བཅུ་པ', 'ཟླ་བ་བཅུ་གཅིག་པ', 'ཟླ་བ་བཅུ་གཉིས་པ'],\n    'months_short' => ['ཟླ་བ་དང་པོ', 'ཟླ་བ་གཉིས་པ', 'ཟླ་བ་གསུམ་པ', 'ཟླ་བ་བཞི་པ', 'ཟླ་བ་ལྔ་པ', 'ཟླ་བ་དྲུག་པ', 'ཟླ་བ་བདུན་པ', 'ཟླ་བ་བརྒྱད་པ', 'ཟླ་བ་དགུ་པ', 'ཟླ་བ་བཅུ་པ', 'ཟླ་བ་བཅུ་གཅིག་པ', 'ཟླ་བ་བཅུ་གཉིས་པ'],\n    'weekdays' => ['གཟའ་ཉི་མ་', 'གཟའ་ཟླ་བ་', 'གཟའ་མིག་དམར་', 'གཟའ་ལྷག་པ་', 'གཟའ་ཕུར་བུ', 'གཟའ་པ་སངས་', 'གཟའ་སྤེན་པ་'],\n    'weekdays_short' => ['ཉི་མ་', 'ཟླ་བ་', 'མིག་དམར་', 'ལྷག་པ་', 'ཕུར་བུ', 'པ་སངས་', 'སྤེན་པ་'],\n    'weekdays_min' => ['ཉི་མ་', 'ཟླ་བ་', 'མིག་དམར་', 'ལྷག་པ་', 'ཕུར་བུ', 'པ་སངས་', 'སྤེན་པ་'],\n    'list' => [', ', ' ཨནད་ '],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'months_standalone' => ['ཟླ་བ་དང་པོ་', 'ཟླ་བ་གཉིས་པ་', 'ཟླ་བ་གསུམ་པ་', 'ཟླ་བ་བཞི་པ་', 'ཟླ་བ་ལྔ་པ་', 'ཟླ་བ་དྲུག་པ་', 'ཟླ་བ་བདུན་པ་', 'ཟླ་བ་བརྒྱད་པ་', 'ཟླ་བ་དགུ་པ་', 'ཟླ་བ་བཅུ་པ་', 'ཟླ་བ་བཅུ་གཅིག་པ་', 'ཟླ་བ་བཅུ་གཉིས་པ་'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/cy.php","ext":"php","size":3079,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - François B\n * - JD Isaacks\n * - Daniel Monaghan\n */\nreturn [\n    'year' => '{1}:count flwyddyn|[-Inf,Inf]:count flynedd',\n    'a_year' => '{1}blwyddyn|[-Inf,Inf]:count flynedd',\n    'y' => ':countbl',\n    'month' => ':count mis',\n    'a_month' => '{1}mis|[-Inf,Inf]:count mis',\n    'm' => ':countmi',\n    'week' => ':count wythnos',\n    'a_week' => '{1}wythnos|[-Inf,Inf]:count wythnos',\n    'w' => ':countw',\n    'day' => ':count diwrnod',\n    'a_day' => '{1}diwrnod|[-Inf,Inf]:count diwrnod',\n    'd' => ':countd',\n    'hour' => ':count awr',\n    'a_hour' => '{1}awr|[-Inf,Inf]:count awr',\n    'h' => ':counth',\n    'minute' => ':count munud',\n    'a_minute' => '{1}munud|[-Inf,Inf]:count munud',\n    'min' => ':countm',\n    'second' => ':count eiliad',\n    'a_second' => '{0,1}ychydig eiliadau|[-Inf,Inf]:count eiliad',\n    's' => ':counts',\n    'ago' => ':time yn ôl',\n    'from_now' => 'mewn :time',\n    'after' => ':time ar ôl',\n    'before' => ':time o\\'r blaen',\n    'diff_now' => 'nawr',\n    'diff_today' => 'Heddiw',\n    'diff_today_regexp' => 'Heddiw(?:\\\\s+am)?',\n    'diff_yesterday' => 'ddoe',\n    'diff_yesterday_regexp' => 'Ddoe(?:\\\\s+am)?',\n    'diff_tomorrow' => 'yfory',\n    'diff_tomorrow_regexp' => 'Yfory(?:\\\\s+am)?',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[Heddiw am] LT',\n        'nextDay' => '[Yfory am] LT',\n        'nextWeek' => 'dddd [am] LT',\n        'lastDay' => '[Ddoe am] LT',\n        'lastWeek' => 'dddd [diwethaf am] LT',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        return $number.(\n            $number > 20\n                ? (\\in_array((int) $number, [40, 50, 60, 80, 100], true) ? 'fed' : 'ain')\n                : ([\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed', // 11eg to 20fed\n                ])[$number] ?? ''\n        );\n    },\n    'months' => ['Ionawr', 'Chwefror', 'Mawrth', 'Ebrill', 'Mai', 'Mehefin', 'Gorffennaf', 'Awst', 'Medi', 'Hydref', 'Tachwedd', 'Rhagfyr'],\n    'months_short' => ['Ion', 'Chwe', 'Maw', 'Ebr', 'Mai', 'Meh', 'Gor', 'Aws', 'Med', 'Hyd', 'Tach', 'Rhag'],\n    'weekdays' => ['Dydd Sul', 'Dydd Llun', 'Dydd Mawrth', 'Dydd Mercher', 'Dydd Iau', 'Dydd Gwener', 'Dydd Sadwrn'],\n    'weekdays_short' => ['Sul', 'Llun', 'Maw', 'Mer', 'Iau', 'Gwe', 'Sad'],\n    'weekdays_min' => ['Su', 'Ll', 'Ma', 'Me', 'Ia', 'Gw', 'Sa'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 4,\n    'list' => [', ', ' a '],\n    'meridiem' => ['yb', 'yh'],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/gsw_FR.php","ext":"php","size":620,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/gsw.php', [\n    'meridiem' => ['vorm.', 'nam.'],\n    'months' => ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'Auguscht', 'Septämber', 'Oktoober', 'Novämber', 'Dezämber'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LLL' => 'Do MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, Do MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/hak_TW.php","ext":"php","size":1707,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - bug-glibc-locales@gnu.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'YYYY年MM月DD日',\n    ],\n    'months' => ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    'months_short' => [' 1月', ' 2月', ' 3月', ' 4月', ' 5月', ' 6月', ' 7月', ' 8月', ' 9月', '10月', '11月', '12月'],\n    'weekdays' => ['禮拜日', '禮拜一', '禮拜二', '禮拜三', '禮拜四', '禮拜五', '禮拜六'],\n    'weekdays_short' => ['日', '一', '二', '三', '四', '五', '六'],\n    'weekdays_min' => ['日', '一', '二', '三', '四', '五', '六'],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['上晝', '下晝'],\n\n    'year' => ':count ngien11',\n    'y' => ':count ngien11',\n    'a_year' => ':count ngien11',\n\n    'month' => ':count ngie̍t',\n    'm' => ':count ngie̍t',\n    'a_month' => ':count ngie̍t',\n\n    'week' => ':count lî-pai',\n    'w' => ':count lî-pai',\n    'a_week' => ':count lî-pai',\n\n    'day' => ':count ngit',\n    'd' => ':count ngit',\n    'a_day' => ':count ngit',\n\n    'hour' => ':count sṳ̀',\n    'h' => ':count sṳ̀',\n    'a_hour' => ':count sṳ̀',\n\n    'minute' => ':count fûn',\n    'min' => ':count fûn',\n    'a_minute' => ':count fûn',\n\n    'second' => ':count miéu',\n    's' => ':count miéu',\n    'a_second' => ':count miéu',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/de_DE.php","ext":"php","size":351,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Free Software Foundation, Inc.    bug-glibc-locales@gnu.org\n */\nreturn require __DIR__.'/de.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_TG.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/fr.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/sr_Cyrl_BA.php","ext":"php","size":1063,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nuse Symfony\\Component\\Translation\\PluralizationRules;\n\n// @codeCoverageIgnoreStart\nif (class_exists(PluralizationRules::class)) {\n    PluralizationRules::set(static function ($number) {\n        return PluralizationRules::get($number, 'sr');\n    }, 'sr_Cyrl_BA');\n}\n// @codeCoverageIgnoreEnd\n\nreturn array_replace_recursive(require __DIR__.'/sr_Cyrl.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'D.M.yy.',\n        'LL' => 'DD.MM.YYYY.',\n        'LLL' => 'DD. MMMM YYYY. HH:mm',\n        'LLLL' => 'dddd, DD. MMMM YYYY. HH:mm',\n    ],\n    'weekdays' => ['недјеља', 'понедељак', 'уторак', 'сриједа', 'четвртак', 'петак', 'субота'],\n    'weekdays_short' => ['нед.', 'пон.', 'ут.', 'ср.', 'чет.', 'пет.', 'суб.'],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/en_AI.php","ext":"php","size":267,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn require __DIR__.'/en.php';\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ka.php","ext":"php","size":7731,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Tornike Razmadze\n * - François B\n * - Lasha Dolidze\n * - Tim Fish\n * - JD Isaacks\n * - Tornike Razmadze\n * - François B\n * - Lasha Dolidze\n * - JD Isaacks\n * - LONGMAN\n * - Avtandil Kikabidze (akalongman)\n * - Levan Velijanashvili (Stichoza)\n */\n\nuse Carbon\\CarbonInterface;\n\nreturn [\n    'year' => ':count წელი',\n    'y' => ':count წელი',\n    'a_year' => '{1}წელი|[-Inf,Inf]:count წელი',\n    'month' => ':count თვე',\n    'm' => ':count თვე',\n    'a_month' => '{1}თვე|[-Inf,Inf]:count თვე',\n    'week' => ':count კვირა',\n    'w' => ':count კვირა',\n    'a_week' => '{1}კვირა|[-Inf,Inf]:count კვირა',\n    'day' => ':count დღე',\n    'd' => ':count დღე',\n    'a_day' => '{1}დღე|[-Inf,Inf]:count დღე',\n    'hour' => ':count საათი',\n    'h' => ':count საათი',\n    'a_hour' => '{1}საათი|[-Inf,Inf]:count საათი',\n    'minute' => ':count წუთი',\n    'min' => ':count წუთი',\n    'a_minute' => '{1}წუთი|[-Inf,Inf]:count წუთი',\n    'second' => ':count წამი',\n    's' => ':count წამი',\n    'a_second' => '{1}რამდენიმე წამი|[-Inf,Inf]:count წამი',\n    'ago' => static function ($time) {\n        $replacements = [\n            // year\n            'წელი' => 'წლის',\n            // month\n            'თვე' => 'თვის',\n            // week\n            'კვირა' => 'კვირის',\n            // day\n            'დღე' => 'დღის',\n            // hour\n            'საათი' => 'საათის',\n            // minute\n            'წუთი' => 'წუთის',\n            // second\n            'წამი' => 'წამის',\n        ];\n        $time = strtr($time, array_flip($replacements));\n        $time = strtr($time, $replacements);\n\n        return \"$time წინ\";\n    },\n    'from_now' => static function ($time) {\n        $replacements = [\n            // year\n            'წელი' => 'წელიწადში',\n            // week\n            'კვირა' => 'კვირაში',\n            // day\n            'დღე' => 'დღეში',\n            // month\n            'თვე' => 'თვეში',\n            // hour\n            'საათი' => 'საათში',\n            // minute\n            'წუთი' => 'წუთში',\n            // second\n            'წამი' => 'წამში',\n        ];\n        $time = strtr($time, array_flip($replacements));\n        $time = strtr($time, $replacements);\n\n        return $time;\n    },\n    'after' => static function ($time) {\n        $replacements = [\n            // year\n            'წელი' => 'წლის',\n            // month\n            'თვე' => 'თვის',\n            // week\n            'კვირა' => 'კვირის',\n            // day\n            'დღე' => 'დღის',\n            // hour\n            'საათი' => 'საათის',\n            // minute\n            'წუთი' => 'წუთის',\n            // second\n            'წამი' => 'წამის',\n        ];\n        $time = strtr($time, array_flip($replacements));\n        $time = strtr($time, $replacements);\n\n        return \"$time შემდეგ\";\n    },\n    'before' => static function ($time) {\n        $replacements = [\n            // year\n            'წელი' => 'წლით',\n            // month\n            'თვე' => 'თვით',\n            // week\n            'კვირა' => 'კვირით',\n            // day\n            'დღე' => 'დღით',\n            // hour\n            'საათი' => 'საათით',\n            // minute\n            'წუთი' => 'წუთით',\n            // second\n            'წამი' => 'წამით',\n        ];\n        $time = strtr($time, array_flip($replacements));\n        $time = strtr($time, $replacements);\n\n        return \"$time ადრე\";\n    },\n    'diff_now' => 'ახლა',\n    'diff_today' => 'დღეს',\n    'diff_yesterday' => 'გუშინ',\n    'diff_tomorrow' => 'ხვალ',\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n    'calendar' => [\n        'sameDay' => '[დღეს], LT[-ზე]',\n        'nextDay' => '[ხვალ], LT[-ზე]',\n        'nextWeek' => static function (CarbonInterface $current, \\Carbon\\CarbonInterface $other) {\n            return ($current->isSameWeek($other) ? '' : '[შემდეგ] ').'dddd, LT[-ზე]';\n        },\n        'lastDay' => '[გუშინ], LT[-ზე]',\n        'lastWeek' => '[წინა] dddd, LT-ზე',\n        'sameElse' => 'L',\n    ],\n    'ordinal' => static function ($number) {\n        if ($number === 0) {\n            return $number;\n        }\n        if ($number === 1) {\n            return $number.'-ლი';\n        }\n        if (($number < 20) || ($number <= 100 && ($number % 20 === 0)) || ($number % 100 === 0)) {\n            return 'მე-'.$number;\n        }\n\n        return $number.'-ე';\n    },\n    'months' => ['იანვარი', 'თებერვალი', 'მარტი', 'აპრილი', 'მაისი', 'ივნისი', 'ივლისი', 'აგვისტო', 'სექტემბერი', 'ოქტომბერი', 'ნოემბერი', 'დეკემბერი'],\n    'months_standalone' => ['იანვარს', 'თებერვალს', 'მარტს', 'აპრილს', 'მაისს', 'ივნისს', 'ივლისს', 'აგვისტოს', 'სექტემბერს', 'ოქტომბერს', 'ნოემბერს', 'დეკემბერს'],\n    'months_short' => ['იან', 'თებ', 'მარ', 'აპრ', 'მაი', 'ივნ', 'ივლ', 'აგვ', 'სექ', 'ოქტ', 'ნოე', 'დეკ'],\n    'months_regexp' => '/(D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|L{2,4}|l{2,4})/',\n    'weekdays' => ['კვირას', 'ორშაბათს', 'სამშაბათს', 'ოთხშაბათს', 'ხუთშაბათს', 'პარასკევს', 'შაბათს'],\n    'weekdays_standalone' => ['კვირა', 'ორშაბათი', 'სამშაბათი', 'ოთხშაბათი', 'ხუთშაბათი', 'პარასკევი', 'შაბათი'],\n    'weekdays_short' => ['კვი', 'ორშ', 'სამ', 'ოთხ', 'ხუთ', 'პარ', 'შაბ'],\n    'weekdays_min' => ['კვ', 'ორ', 'სა', 'ოთ', 'ხუ', 'პა', 'შა'],\n    'weekdays_regexp' => '/^([^d].*|.*[^d])$/',\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'list' => [', ', ' და '],\n    'meridiem' => static function ($hour) {\n        if ($hour >= 4) {\n            if ($hour < 11) {\n                return 'დილის';\n            }\n\n            if ($hour < 16) {\n                return 'შუადღის';\n            }\n\n            if ($hour < 22) {\n                return 'საღამოს';\n            }\n        }\n\n        return 'ღამის';\n    },\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/ff.php","ext":"php","size":2199,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Unknown default region, use the first alphabetically.\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM, YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd D MMMM YYYY HH:mm',\n    ],\n    'months' => ['siilo', 'colte', 'mbooy', 'seeɗto', 'duujal', 'korse', 'morso', 'juko', 'siilto', 'yarkomaa', 'jolal', 'bowte'],\n    'months_short' => ['sii', 'col', 'mbo', 'see', 'duu', 'kor', 'mor', 'juk', 'slt', 'yar', 'jol', 'bow'],\n    'weekdays' => ['dewo', 'aaɓnde', 'mawbaare', 'njeslaare', 'naasaande', 'mawnde', 'hoore-biir'],\n    'weekdays_short' => ['dew', 'aaɓ', 'maw', 'nje', 'naa', 'mwd', 'hbi'],\n    'weekdays_min' => ['dew', 'aaɓ', 'maw', 'nje', 'naa', 'mwd', 'hbi'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['subaka', 'kikiiɗe'],\n\n    'year' => ':count baret', // less reliable\n    'y' => ':count baret', // less reliable\n    'a_year' => ':count baret', // less reliable\n\n    'month' => ':count lewru', // less reliable\n    'm' => ':count lewru', // less reliable\n    'a_month' => ':count lewru', // less reliable\n\n    'week' => ':count naange', // less reliable\n    'w' => ':count naange', // less reliable\n    'a_week' => ':count naange', // less reliable\n\n    'day' => ':count dian', // less reliable\n    'd' => ':count dian', // less reliable\n    'a_day' => ':count dian', // less reliable\n\n    'hour' => ':count montor', // less reliable\n    'h' => ':count montor', // less reliable\n    'a_hour' => ':count montor', // less reliable\n\n    'minute' => ':count tokossuoum', // less reliable\n    'min' => ':count tokossuoum', // less reliable\n    'a_minute' => ':count tokossuoum', // less reliable\n\n    'second' => ':count tenen', // less reliable\n    's' => ':count tenen', // less reliable\n    'a_second' => ':count tenen', // less reliable\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/so.php","ext":"php","size":2756,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Author:\n * - Abdifatah Abdilahi(@abdifatahz)\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'year' => ':count sanad|:count sanadood',\n    'a_year' => 'sanad|:count sanadood',\n    'y' => '{1}:countsn|{0}:countsns|[-Inf,Inf]:countsn',\n    'month' => ':count bil|:count bilood',\n    'a_month' => 'bil|:count bilood',\n    'm' => ':countbil',\n    'week' => ':count isbuuc',\n    'a_week' => 'isbuuc|:count isbuuc',\n    'w' => ':countis',\n    'day' => ':count maalin|:count maalmood',\n    'a_day' => 'maalin|:count maalmood',\n    'd' => ':countml',\n    'hour' => ':count saac',\n    'a_hour' => 'saacad|:count saac',\n    'h' => ':countsc',\n    'minute' => ':count daqiiqo',\n    'a_minute' => 'daqiiqo|:count daqiiqo',\n    'min' => ':countdq',\n    'second' => ':count ilbidhiqsi',\n    'a_second' => 'xooga ilbidhiqsiyo|:count ilbidhiqsi',\n    's' => ':countil',\n    'ago' => ':time kahor',\n    'from_now' => ':time gudahood',\n    'after' => ':time kedib',\n    'before' => ':time kahor',\n    'diff_now' => 'hada',\n    'diff_today' => 'maanta',\n    'diff_today_regexp' => 'maanta(?:\\s+markay\\s+(?:tahay|ahayd))?',\n    'diff_yesterday' => 'shalayto',\n    'diff_yesterday_regexp' => 'shalayto(?:\\s+markay\\s+ahayd)?',\n    'diff_tomorrow' => 'beri',\n    'diff_tomorrow_regexp' => 'beri(?:\\s+markay\\s+tahay)?',\n    'diff_before_yesterday' => 'doraato',\n    'diff_after_tomorrow' => 'saadanbe',\n    'period_recurrences' => 'mar|:count jeer',\n    'period_interval' => ':interval kasta',\n    'period_start_date' => 'laga bilaabo :date',\n    'period_end_date' => 'ilaa :date',\n    'months' => ['Janaayo', 'Febraayo', 'Abriil', 'Maajo', 'Juun', 'Luuliyo', 'Agoosto', 'Sebteembar', 'Oktoobar', 'Nofeembar', 'Diseembar'],\n    'months_short' => ['Jan', 'Feb', 'Mar', 'Abr', 'Mjo', 'Jun', 'Lyo', 'Agt', 'Seb', 'Okt', 'Nof', 'Dis'],\n    'weekdays' => ['Axad', 'Isniin', 'Talaada', 'Arbaca', 'Khamiis', 'Jimce', 'Sabti'],\n    'weekdays_short' => ['Axd', 'Isn', 'Tal', 'Arb', 'Kha', 'Jim', 'Sbt'],\n    'weekdays_min' => ['Ax', 'Is', 'Ta', 'Ar', 'Kh', 'Ji', 'Sa'],\n    'list' => [', ', ' and '],\n    'first_day_of_week' => 6,\n    'day_of_first_week_of_year' => 1,\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'calendar' => [\n        'sameDay' => '[Maanta markay tahay] LT',\n        'nextDay' => '[Beri markay tahay] LT',\n        'nextWeek' => 'dddd [markay tahay] LT',\n        'lastDay' => '[Shalay markay ahayd] LT',\n        'lastWeek' => '[Hore] dddd [Markay ahayd] LT',\n        'sameElse' => 'L',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/bez.php","ext":"php","size":1278,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'meridiem' => ['pamilau', 'pamunyi'],\n    'weekdays' => ['pa mulungu', 'pa shahuviluha', 'pa hivili', 'pa hidatu', 'pa hitayi', 'pa hihanu', 'pa shahulembela'],\n    'weekdays_short' => ['Mul', 'Vil', 'Hiv', 'Hid', 'Hit', 'Hih', 'Lem'],\n    'weekdays_min' => ['Mul', 'Vil', 'Hiv', 'Hid', 'Hit', 'Hih', 'Lem'],\n    'months' => ['pa mwedzi gwa hutala', 'pa mwedzi gwa wuvili', 'pa mwedzi gwa wudatu', 'pa mwedzi gwa wutai', 'pa mwedzi gwa wuhanu', 'pa mwedzi gwa sita', 'pa mwedzi gwa saba', 'pa mwedzi gwa nane', 'pa mwedzi gwa tisa', 'pa mwedzi gwa kumi', 'pa mwedzi gwa kumi na moja', 'pa mwedzi gwa kumi na mbili'],\n    'months_short' => ['Hut', 'Vil', 'Dat', 'Tai', 'Han', 'Sit', 'Sab', 'Nan', 'Tis', 'Kum', 'Kmj', 'Kmb'],\n    'first_day_of_week' => 1,\n    'formats' => [\n        'LT' => 'HH:mm',\n        'LTS' => 'HH:mm:ss',\n        'L' => 'DD/MM/YYYY',\n        'LL' => 'D MMM YYYY',\n        'LLL' => 'D MMMM YYYY HH:mm',\n        'LLLL' => 'dddd, D MMMM YYYY HH:mm',\n    ],\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/tig_ER.php","ext":"php","size":2344,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Ge'ez Frontier Foundation    locales@geez.org\n */\nreturn array_replace_recursive(require __DIR__.'/en.php', [\n    'formats' => [\n        'L' => 'DD/MM/YYYY',\n    ],\n    'months' => ['ጥሪ', 'ለካቲት', 'መጋቢት', 'ሚያዝያ', 'ግንቦት', 'ሰነ', 'ሓምለ', 'ነሓሰ', 'መስከረም', 'ጥቅምቲ', 'ሕዳር', 'ታሕሳስ'],\n    'months_short' => ['ጥሪ ', 'ለካቲ', 'መጋቢ', 'ሚያዝ', 'ግንቦ', 'ሰነ ', 'ሓምለ', 'ነሓሰ', 'መስከ', 'ጥቅም', 'ሕዳር', 'ታሕሳ'],\n    'weekdays' => ['ሰንበት ዓባይ', 'ሰኖ', 'ታላሸኖ', 'ኣረርባዓ', 'ከሚሽ', 'ጅምዓት', 'ሰንበት ንኢሽ'],\n    'weekdays_short' => ['ሰ//ዓ', 'ሰኖ ', 'ታላሸ', 'ኣረር', 'ከሚሽ', 'ጅምዓ', 'ሰ//ን'],\n    'weekdays_min' => ['ሰ//ዓ', 'ሰኖ ', 'ታላሸ', 'ኣረር', 'ከሚሽ', 'ጅምዓ', 'ሰ//ን'],\n    'first_day_of_week' => 1,\n    'day_of_first_week_of_year' => 1,\n    'meridiem' => ['ቀደም ሰር ምዕል', 'ሓቆ ሰር ምዕል'],\n\n    'year' => ':count ማይ', // less reliable\n    'y' => ':count ማይ', // less reliable\n    'a_year' => ':count ማይ', // less reliable\n\n    'month' => ':count ሸምሽ', // less reliable\n    'm' => ':count ሸምሽ', // less reliable\n    'a_month' => ':count ሸምሽ', // less reliable\n\n    'week' => ':count ሰቡዕ', // less reliable\n    'w' => ':count ሰቡዕ', // less reliable\n    'a_week' => ':count ሰቡዕ', // less reliable\n\n    'day' => ':count ዎሮ', // less reliable\n    'd' => ':count ዎሮ', // less reliable\n    'a_day' => ':count ዎሮ', // less reliable\n\n    'hour' => ':count ሰዓት', // less reliable\n    'h' => ':count ሰዓት', // less reliable\n    'a_hour' => ':count ሰዓት', // less reliable\n\n    'minute' => ':count ካልኣይት', // less reliable\n    'min' => ':count ካልኣይት', // less reliable\n    'a_minute' => ':count ካልኣይት', // less reliable\n\n    'second' => ':count ካልኣይ',\n    's' => ':count ካልኣይ',\n    'a_second' => ':count ካልኣይ',\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Lang/fr_CA.php","ext":"php","size":507,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * Authors:\n * - Dieter Sting\n * - François B\n * - Maxime VALY\n * - JD Isaacks\n */\nreturn array_replace_recursive(require __DIR__.'/fr.php', [\n    'formats' => [\n        'L' => 'YYYY-MM-DD',\n    ],\n    'first_day_of_week' => 0,\n    'day_of_first_week_of_year' => 1,\n]);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Unit.php","ext":"php","size":3401,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nenum Unit: string\n{\n    case Microsecond = 'microsecond';\n    case Millisecond = 'millisecond';\n    case Second = 'second';\n    case Minute = 'minute';\n    case Hour = 'hour';\n    case Day = 'day';\n    case Week = 'week';\n    case Month = 'month';\n    case Quarter = 'quarter';\n    case Year = 'year';\n    case Decade = 'decade';\n    case Century = 'century';\n    case Millennium = 'millennium';\n\n    public static function toName(self|string $unit): string\n    {\n        return $unit instanceof self ? $unit->value : $unit;\n    }\n\n    /** @internal */\n    public static function toNameIfUnit(mixed $unit): mixed\n    {\n        return $unit instanceof self ? $unit->value : $unit;\n    }\n\n    public static function fromName(string $name, ?string $locale = null): self\n    {\n        if ($locale !== null) {\n            $messages = Translator::get($locale)->getMessages($locale) ?? [];\n\n            if ($messages !== []) {\n                $lowerName = mb_strtolower($name);\n\n                foreach (self::cases() as $unit) {\n                    foreach (['', '_from_now', '_ago', '_after', '_before'] as $suffix) {\n                        $message = $messages[$unit->value.$suffix] ?? null;\n\n                        if (\\is_string($message)) {\n                            $words = explode('|', mb_strtolower(preg_replace(\n                                '/[{\\[\\]].+?[}\\[\\]]/',\n                                '',\n                                str_replace(':count', '', $message),\n                            )));\n\n                            foreach ($words as $word) {\n                                if (trim($word) === $lowerName) {\n                                    return $unit;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return self::from(CarbonImmutable::singularUnit($name));\n    }\n\n    public function singular(?string $locale = null): string\n    {\n        if ($locale !== null) {\n            return trim(Translator::get($locale)->trans($this->value, [\n                '%count%' => 1,\n                ':count' => 1,\n            ]), \"1 \\n\\r\\t\\v\\0\");\n        }\n\n        return $this->value;\n    }\n\n    public function plural(?string $locale = null): string\n    {\n        if ($locale !== null) {\n            return trim(Translator::get($locale)->trans($this->value, [\n                '%count%' => 9,\n                ':count' => 9,\n            ]), \"9 \\n\\r\\t\\v\\0\");\n        }\n\n        return CarbonImmutable::pluralUnit($this->value);\n    }\n\n    public function interval(int|float $value = 1): CarbonInterval\n    {\n        return CarbonInterval::fromString(\"$value $this->name\");\n    }\n\n    public function locale(string $locale): CarbonInterval\n    {\n        return $this->interval()->locale($locale);\n    }\n\n    public function toPeriod(...$params): CarbonPeriod\n    {\n        return $this->interval()->toPeriod(...$params);\n    }\n\n    public function stepBy(mixed $interval, Unit|string|null $unit = null): CarbonPeriod\n    {\n        return $this->interval()->stepBy($interval, $unit);\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/MessageFormatter/MessageFormatterMapper.php","ext":"php","size":1327,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\MessageFormatter;\n\nuse ReflectionMethod;\nuse Symfony\\Component\\Translation\\Formatter\\MessageFormatter;\nuse Symfony\\Component\\Translation\\Formatter\\MessageFormatterInterface;\n\n// @codeCoverageIgnoreStart\n$transMethod = new ReflectionMethod(MessageFormatterInterface::class, 'format');\n\nrequire $transMethod->getParameters()[0]->hasType()\n    ? __DIR__.'/../../../lazy/Carbon/MessageFormatter/MessageFormatterMapperStrongType.php'\n    : __DIR__.'/../../../lazy/Carbon/MessageFormatter/MessageFormatterMapperWeakType.php';\n// @codeCoverageIgnoreEnd\n\nfinal class MessageFormatterMapper extends LazyMessageFormatter\n{\n    /**\n     * Wrapped formatter.\n     *\n     * @var MessageFormatterInterface\n     */\n    protected $formatter;\n\n    public function __construct(?MessageFormatterInterface $formatter = null)\n    {\n        $this->formatter = $formatter ?? new MessageFormatter();\n    }\n\n    protected function transformLocale(?string $locale): ?string\n    {\n        return $locale ? preg_replace('/[_@][A-Za-z][a-z]{2,}/', '', $locale) : $locale;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Cli/Invoker.php","ext":"php","size":960,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Cli;\n\nclass Invoker\n{\n    public const CLI_CLASS_NAME = 'Carbon\\\\Cli';\n\n    protected function runWithCli(string $className, array $parameters): bool\n    {\n        $cli = new $className();\n\n        return $cli(...$parameters);\n    }\n\n    public function __invoke(...$parameters): bool\n    {\n        if (class_exists(self::CLI_CLASS_NAME)) {\n            return $this->runWithCli(self::CLI_CLASS_NAME, $parameters);\n        }\n\n        $function = (($parameters[1] ?? '') === 'install' ? ($parameters[2] ?? null) : null) ?: 'shell_exec';\n        $function('composer require carbon-cli/carbon-cli --no-interaction');\n\n        echo 'Installation succeeded.';\n\n        return true;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Language.php","ext":"php","size":6570,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse JsonSerializable;\n\nclass Language implements JsonSerializable\n{\n    protected static ?array $languagesNames = null;\n\n    protected static ?array $regionsNames = null;\n\n    protected string $id;\n\n    protected string $code;\n\n    protected ?string $variant = null;\n\n    protected ?string $region = null;\n\n    protected ?array $names = null;\n\n    protected ?string $isoName = null;\n\n    protected ?string $nativeName = null;\n\n    public function __construct(string $id)\n    {\n        $this->id = str_replace('-', '_', $id);\n        $parts = explode('_', $this->id);\n        $this->code = $parts[0];\n\n        if (isset($parts[1])) {\n            if (!preg_match('/^[A-Z]+$/', $parts[1])) {\n                $this->variant = $parts[1];\n                $parts[1] = $parts[2] ?? null;\n            }\n            if ($parts[1]) {\n                $this->region = $parts[1];\n            }\n        }\n    }\n\n    /**\n     * Get the list of the known languages.\n     *\n     * @return array\n     */\n    public static function all(): array\n    {\n        static::$languagesNames ??= require __DIR__.'/List/languages.php';\n\n        return static::$languagesNames;\n    }\n\n    /**\n     * Get the list of the known regions.\n     *\n     * ⚠ ISO 3166-2 short name provided with no warranty, should not\n     * be used for any purpose to show official state names.\n     */\n    public static function regions(): array\n    {\n        static::$regionsNames ??= require __DIR__.'/List/regions.php';\n\n        return static::$regionsNames;\n    }\n\n    /**\n     * Get both isoName and nativeName as an array.\n     */\n    public function getNames(): array\n    {\n        $this->names ??= static::all()[$this->code] ?? [\n            'isoName' => $this->code,\n            'nativeName' => $this->code,\n        ];\n\n        return $this->names;\n    }\n\n    /**\n     * Returns the original locale ID.\n     */\n    public function getId(): string\n    {\n        return $this->id;\n    }\n\n    /**\n     * Returns the code of the locale \"en\"/\"fr\".\n     */\n    public function getCode(): string\n    {\n        return $this->code;\n    }\n\n    /**\n     * Returns the variant code such as cyrl/latn.\n     */\n    public function getVariant(): ?string\n    {\n        return $this->variant;\n    }\n\n    /**\n     * Returns the variant such as Cyrillic/Latin.\n     */\n    public function getVariantName(): ?string\n    {\n        if ($this->variant === 'Latn') {\n            return 'Latin';\n        }\n\n        if ($this->variant === 'Cyrl') {\n            return 'Cyrillic';\n        }\n\n        return $this->variant;\n    }\n\n    /**\n     * Returns the region part of the locale.\n     */\n    public function getRegion(): ?string\n    {\n        return $this->region;\n    }\n\n    /**\n     * Returns the region name for the current language.\n     *\n     * ⚠ ISO 3166-2 short name provided with no warranty, should not\n     * be used for any purpose to show official state names.\n     */\n    public function getRegionName(): ?string\n    {\n        return $this->region ? (static::regions()[$this->region] ?? $this->region) : null;\n    }\n\n    /**\n     * Returns the long ISO language name.\n     */\n    public function getFullIsoName(): string\n    {\n        $this->isoName ??= $this->getNames()['isoName'];\n\n        return $this->isoName;\n    }\n\n    /**\n     * Set the ISO language name.\n     */\n    public function setIsoName(string $isoName): static\n    {\n        $this->isoName = $isoName;\n\n        return $this;\n    }\n\n    /**\n     * Return the full name of the language in this language.\n     */\n    public function getFullNativeName(): string\n    {\n        $this->nativeName ??= $this->getNames()['nativeName'];\n\n        return $this->nativeName;\n    }\n\n    /**\n     * Set the name of the language in this language.\n     */\n    public function setNativeName(string $nativeName): static\n    {\n        $this->nativeName = $nativeName;\n\n        return $this;\n    }\n\n    /**\n     * Returns the short ISO language name.\n     */\n    public function getIsoName(): string\n    {\n        $name = $this->getFullIsoName();\n\n        return trim(strstr($name, ',', true) ?: $name);\n    }\n\n    /**\n     * Get the short name of the language in this language.\n     */\n    public function getNativeName(): string\n    {\n        $name = $this->getFullNativeName();\n\n        return trim(strstr($name, ',', true) ?: $name);\n    }\n\n    /**\n     * Get a string with short ISO name, region in parentheses if applicable, variant in parentheses if applicable.\n     */\n    public function getIsoDescription(): string\n    {\n        $region = $this->getRegionName();\n        $variant = $this->getVariantName();\n\n        return $this->getIsoName().($region ? ' ('.$region.')' : '').($variant ? ' ('.$variant.')' : '');\n    }\n\n    /**\n     * Get a string with short native name, region in parentheses if applicable, variant in parentheses if applicable.\n     */\n    public function getNativeDescription(): string\n    {\n        $region = $this->getRegionName();\n        $variant = $this->getVariantName();\n\n        return $this->getNativeName().($region ? ' ('.$region.')' : '').($variant ? ' ('.$variant.')' : '');\n    }\n\n    /**\n     * Get a string with long ISO name, region in parentheses if applicable, variant in parentheses if applicable.\n     */\n    public function getFullIsoDescription(): string\n    {\n        $region = $this->getRegionName();\n        $variant = $this->getVariantName();\n\n        return $this->getFullIsoName().($region ? ' ('.$region.')' : '').($variant ? ' ('.$variant.')' : '');\n    }\n\n    /**\n     * Get a string with long native name, region in parentheses if applicable, variant in parentheses if applicable.\n     */\n    public function getFullNativeDescription(): string\n    {\n        $region = $this->getRegionName();\n        $variant = $this->getVariantName();\n\n        return $this->getFullNativeName().($region ? ' ('.$region.')' : '').($variant ? ' ('.$variant.')' : '');\n    }\n\n    /**\n     * Returns the original locale ID.\n     */\n    public function __toString(): string\n    {\n        return $this->getId();\n    }\n\n    /**\n     * Get a string with short ISO name, region in parentheses if applicable, variant in parentheses if applicable.\n     */\n    public function jsonSerialize(): string\n    {\n        return $this->getIsoDescription();\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/CarbonTimeZone.php","ext":"php","size":9677,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse Carbon\\Exceptions\\InvalidCastException;\nuse Carbon\\Exceptions\\InvalidTimeZoneException;\nuse Carbon\\Traits\\LocalFactory;\nuse DateTimeImmutable;\nuse DateTimeInterface;\nuse DateTimeZone;\nuse Exception;\nuse Throwable;\n\nclass CarbonTimeZone extends DateTimeZone\n{\n    use LocalFactory;\n\n    public const MAXIMUM_TIMEZONE_OFFSET = 99;\n\n    public function __construct(string|int|float $timezone)\n    {\n        $this->initLocalFactory();\n\n        parent::__construct(static::getDateTimeZoneNameFromMixed($timezone));\n    }\n\n    protected static function parseNumericTimezone(string|int|float $timezone): string\n    {\n        if (abs((float) $timezone) > static::MAXIMUM_TIMEZONE_OFFSET) {\n            throw new InvalidTimeZoneException(\n                'Absolute timezone offset cannot be greater than '.\n                static::MAXIMUM_TIMEZONE_OFFSET.'.',\n            );\n        }\n\n        return ($timezone >= 0 ? '+' : '').ltrim((string) $timezone, '+').':00';\n    }\n\n    protected static function getDateTimeZoneNameFromMixed(string|int|float $timezone): string\n    {\n        if (\\is_string($timezone)) {\n            $timezone = preg_replace('/^\\s*([+-]\\d+)(\\d{2})\\s*$/', '$1:$2', $timezone);\n        }\n\n        if (is_numeric($timezone)) {\n            return static::parseNumericTimezone($timezone);\n        }\n\n        return $timezone;\n    }\n\n    /**\n     * Cast the current instance into the given class.\n     *\n     * @param class-string<DateTimeZone> $className The $className::instance() method will be called to cast the current object.\n     *\n     * @return DateTimeZone|mixed\n     */\n    public function cast(string $className): mixed\n    {\n        if (!method_exists($className, 'instance')) {\n            if (is_a($className, DateTimeZone::class, true)) {\n                return new $className($this->getName());\n            }\n\n            throw new InvalidCastException(\"$className has not the instance() method needed to cast the date.\");\n        }\n\n        return $className::instance($this);\n    }\n\n    /**\n     * Create a CarbonTimeZone from mixed input.\n     *\n     * @param DateTimeZone|string|int|false|null $object     original value to get CarbonTimeZone from it.\n     * @param DateTimeZone|string|int|false|null $objectDump dump of the object for error messages.\n     *\n     * @throws InvalidTimeZoneException\n     *\n     * @return static|null\n     */\n    public static function instance(\n        DateTimeZone|string|int|false|null $object,\n        DateTimeZone|string|int|false|null $objectDump = null,\n    ): ?self {\n        $timezone = $object;\n\n        if ($timezone instanceof static) {\n            return $timezone;\n        }\n\n        if ($timezone === null || $timezone === false) {\n            return null;\n        }\n\n        try {\n            if (!($timezone instanceof DateTimeZone)) {\n                $name = static::getDateTimeZoneNameFromMixed($object);\n                $timezone = new static($name);\n            }\n\n            return $timezone instanceof static ? $timezone : new static($timezone->getName());\n        } catch (Exception $exception) {\n            throw new InvalidTimeZoneException(\n                'Unknown or bad timezone ('.($objectDump ?: $object).')',\n                previous: $exception,\n            );\n        }\n    }\n\n    /**\n     * Returns abbreviated name of the current timezone according to DST setting.\n     *\n     * @param bool $dst\n     *\n     * @return string\n     */\n    public function getAbbreviatedName(bool $dst = false): string\n    {\n        $name = $this->getName();\n\n        $date = new DateTimeImmutable($dst ? 'July 1' : 'January 1', $this);\n        $timezone = $date->format('T');\n        $abbreviations = $this->listAbbreviations();\n        $matchingZones = array_merge($abbreviations[$timezone] ?? [], $abbreviations[strtolower($timezone)] ?? []);\n\n        if ($matchingZones !== []) {\n            foreach ($matchingZones as $zone) {\n                if ($zone['timezone_id'] === $name && $zone['dst'] == $dst) {\n                    return $timezone;\n                }\n            }\n        }\n\n        foreach ($abbreviations as $abbreviation => $zones) {\n            foreach ($zones as $zone) {\n                if ($zone['timezone_id'] === $name && $zone['dst'] == $dst) {\n                    return strtoupper($abbreviation);\n                }\n            }\n        }\n\n        return 'unknown';\n    }\n\n    /**\n     * @alias getAbbreviatedName\n     *\n     * Returns abbreviated name of the current timezone according to DST setting.\n     *\n     * @param bool $dst\n     *\n     * @return string\n     */\n    public function getAbbr(bool $dst = false): string\n    {\n        return $this->getAbbreviatedName($dst);\n    }\n\n    /**\n     * Get the offset as string \"sHH:MM\" (such as \"+00:00\" or \"-12:30\").\n     */\n    public function toOffsetName(?DateTimeInterface $date = null): string\n    {\n        return static::getOffsetNameFromMinuteOffset(\n            $this->getOffset($this->resolveCarbon($date)) / 60,\n        );\n    }\n\n    /**\n     * Returns a new CarbonTimeZone object using the offset string instead of region string.\n     */\n    public function toOffsetTimeZone(?DateTimeInterface $date = null): static\n    {\n        return new static($this->toOffsetName($date));\n    }\n\n    /**\n     * Returns the first region string (such as \"America/Toronto\") that matches the current timezone or\n     * false if no match is found.\n     *\n     * @see timezone_name_from_abbr native PHP function.\n     */\n    public function toRegionName(?DateTimeInterface $date = null, int $isDST = 1): ?string\n    {\n        $name = $this->getName();\n        $firstChar = substr($name, 0, 1);\n\n        if ($firstChar !== '+' && $firstChar !== '-') {\n            return $name;\n        }\n\n        $date = $this->resolveCarbon($date);\n\n        // Integer construction no longer supported since PHP 8\n        // @codeCoverageIgnoreStart\n        try {\n            $offset = @$this->getOffset($date) ?: 0;\n        } catch (Throwable) {\n            $offset = 0;\n        }\n        // @codeCoverageIgnoreEnd\n\n        $name = @timezone_name_from_abbr('', $offset, $isDST);\n\n        if ($name) {\n            return $name;\n        }\n\n        foreach (timezone_identifiers_list() as $timezone) {\n            if (Carbon::instance($date)->setTimezone($timezone)->getOffset() === $offset) {\n                return $timezone;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns a new CarbonTimeZone object using the region string instead of offset string.\n     */\n    public function toRegionTimeZone(?DateTimeInterface $date = null): ?self\n    {\n        $timezone = $this->toRegionName($date);\n\n        if ($timezone !== null) {\n            return new static($timezone);\n        }\n\n        if (Carbon::isStrictModeEnabled()) {\n            throw new InvalidTimeZoneException('Unknown timezone for offset '.$this->getOffset($this->resolveCarbon($date)).' seconds.');\n        }\n\n        return null;\n    }\n\n    /**\n     * Cast to string (get timezone name).\n     *\n     * @return string\n     */\n    public function __toString()\n    {\n        return $this->getName();\n    }\n\n    /**\n     * Return the type number:\n     *\n     * Type 1; A UTC offset, such as -0300\n     * Type 2; A timezone abbreviation, such as GMT\n     * Type 3: A timezone identifier, such as Europe/London\n     */\n    public function getType(): int\n    {\n        return preg_match('/\"timezone_type\";i:(\\d)/', serialize($this), $match) ? (int) $match[1] : 3;\n    }\n\n    /**\n     * Create a CarbonTimeZone from mixed input.\n     *\n     * @param DateTimeZone|string|int|null $object\n     *\n     * @return false|static\n     */\n    public static function create($object = null)\n    {\n        return static::instance($object);\n    }\n\n    /**\n     * Create a CarbonTimeZone from int/float hour offset.\n     *\n     * @param float $hourOffset number of hour of the timezone shift (can be decimal).\n     *\n     * @return false|static\n     */\n    public static function createFromHourOffset(float $hourOffset)\n    {\n        return static::createFromMinuteOffset($hourOffset * Carbon::MINUTES_PER_HOUR);\n    }\n\n    /**\n     * Create a CarbonTimeZone from int/float minute offset.\n     *\n     * @param float $minuteOffset number of total minutes of the timezone shift.\n     *\n     * @return false|static\n     */\n    public static function createFromMinuteOffset(float $minuteOffset)\n    {\n        return static::instance(static::getOffsetNameFromMinuteOffset($minuteOffset));\n    }\n\n    /**\n     * Convert a total minutes offset into a standardized timezone offset string.\n     *\n     * @param float $minutes number of total minutes of the timezone shift.\n     *\n     * @return string\n     */\n    public static function getOffsetNameFromMinuteOffset(float $minutes): string\n    {\n        $minutes = round($minutes);\n        $unsignedMinutes = abs($minutes);\n\n        return ($minutes < 0 ? '-' : '+').\n            str_pad((string) floor($unsignedMinutes / 60), 2, '0', STR_PAD_LEFT).\n            ':'.\n            str_pad((string) ($unsignedMinutes % 60), 2, '0', STR_PAD_LEFT);\n    }\n\n    private function resolveCarbon(?DateTimeInterface $date): DateTimeInterface\n    {\n        if ($date) {\n            return $date;\n        }\n\n        if (isset($this->clock)) {\n            return $this->clock->now()->setTimezone($this);\n        }\n\n        return Carbon::now($this);\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/AbstractTranslator.php","ext":"php","size":11369,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse Carbon\\MessageFormatter\\MessageFormatterMapper;\nuse Closure;\nuse ReflectionException;\nuse ReflectionFunction;\nuse Symfony\\Component\\Translation;\nuse Symfony\\Component\\Translation\\Formatter\\MessageFormatterInterface;\nuse Symfony\\Component\\Translation\\Loader\\ArrayLoader;\n\nabstract class AbstractTranslator extends Translation\\Translator\n{\n    public const REGION_CODE_LENGTH = 2;\n\n    /**\n     * Translator singletons for each language.\n     *\n     * @var array\n     */\n    protected static array $singletons = [];\n\n    /**\n     * List of custom localized messages.\n     *\n     * @var array\n     */\n    protected array $messages = [];\n\n    /**\n     * List of custom directories that contain translation files.\n     *\n     * @var string[]\n     */\n    protected array $directories = [];\n\n    /**\n     * Set to true while constructing.\n     */\n    protected bool $initializing = false;\n\n    /**\n     * List of locales aliases.\n     *\n     * @var array<string, string>\n     */\n    protected array $aliases = [\n        'me' => 'sr_Latn_ME',\n        'scr' => 'sh',\n    ];\n\n    /**\n     * Return a singleton instance of Translator.\n     *\n     * @param string|null $locale optional initial locale (\"en\" - english by default)\n     *\n     * @return static\n     */\n    public static function get(?string $locale = null): static\n    {\n        $locale = $locale ?: 'en';\n        $key = static::class === Translator::class ? $locale : static::class.'|'.$locale;\n        $count = \\count(static::$singletons);\n\n        // Remember only the last 10 translators created\n        if ($count > 10) {\n            foreach (\\array_slice(array_keys(static::$singletons), 0, $count - 10) as $index) {\n                unset(static::$singletons[$index]);\n            }\n        }\n\n        static::$singletons[$key] ??= new static($locale);\n\n        return static::$singletons[$key];\n    }\n\n    public function __construct($locale, ?MessageFormatterInterface $formatter = null, $cacheDir = null, $debug = false)\n    {\n        $this->initialize($locale, $formatter, $cacheDir, $debug);\n    }\n\n    /**\n     * Returns the list of directories translation files are searched in.\n     */\n    public function getDirectories(): array\n    {\n        return $this->directories;\n    }\n\n    /**\n     * Set list of directories translation files are searched in.\n     *\n     * @param array $directories new directories list\n     *\n     * @return $this\n     */\n    public function setDirectories(array $directories): static\n    {\n        $this->directories = $directories;\n\n        return $this;\n    }\n\n    /**\n     * Add a directory to the list translation files are searched in.\n     *\n     * @param string $directory new directory\n     *\n     * @return $this\n     */\n    public function addDirectory(string $directory): static\n    {\n        $this->directories[] = $directory;\n\n        return $this;\n    }\n\n    /**\n     * Remove a directory from the list translation files are searched in.\n     *\n     * @param string $directory directory path\n     *\n     * @return $this\n     */\n    public function removeDirectory(string $directory): static\n    {\n        $search = rtrim(strtr($directory, '\\\\', '/'), '/');\n\n        return $this->setDirectories(array_filter(\n            $this->getDirectories(),\n            static fn ($item) => rtrim(strtr($item, '\\\\', '/'), '/') !== $search,\n        ));\n    }\n\n    /**\n     * Reset messages of a locale (all locale if no locale passed).\n     * Remove custom messages and reload initial messages from matching\n     * file in Lang directory.\n     */\n    public function resetMessages(?string $locale = null): bool\n    {\n        if ($locale === null) {\n            $this->messages = [];\n\n            return true;\n        }\n\n        $this->assertValidLocale($locale);\n\n        foreach ($this->getDirectories() as $directory) {\n            $data = @include \\sprintf('%s/%s.php', rtrim($directory, '\\\\/'), $locale);\n\n            if ($data !== false) {\n                $this->messages[$locale] = $data;\n                $this->addResource('array', $this->messages[$locale], $locale);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns the list of files matching a given locale prefix (or all if empty).\n     *\n     * @param string $prefix prefix required to filter result\n     *\n     * @return array\n     */\n    public function getLocalesFiles(string $prefix = ''): array\n    {\n        $files = [];\n\n        foreach ($this->getDirectories() as $directory) {\n            $directory = rtrim($directory, '\\\\/');\n\n            foreach (glob(\"$directory/$prefix*.php\") as $file) {\n                $files[] = $file;\n            }\n        }\n\n        return array_unique($files);\n    }\n\n    /**\n     * Returns the list of internally available locales and already loaded custom locales.\n     * (It will ignore custom translator dynamic loading.)\n     *\n     * @param string $prefix prefix required to filter result\n     *\n     * @return array\n     */\n    public function getAvailableLocales(string $prefix = ''): array\n    {\n        $locales = [];\n        foreach ($this->getLocalesFiles($prefix) as $file) {\n            $locales[] = substr($file, strrpos($file, '/') + 1, -4);\n        }\n\n        return array_unique(array_merge($locales, array_keys($this->messages)));\n    }\n\n    protected function translate(?string $id, array $parameters = [], ?string $domain = null, ?string $locale = null): string\n    {\n        if ($domain === null) {\n            $domain = 'messages';\n        }\n\n        $catalogue = $this->getCatalogue($locale);\n        $format = $this instanceof TranslatorStrongTypeInterface\n            ? $this->getFromCatalogue($catalogue, (string) $id, $domain)\n            : $this->getCatalogue($locale)->get((string) $id, $domain); // @codeCoverageIgnore\n\n        if ($format instanceof Closure) {\n            // @codeCoverageIgnoreStart\n            try {\n                $count = (new ReflectionFunction($format))->getNumberOfRequiredParameters();\n            } catch (ReflectionException) {\n                $count = 0;\n            }\n            // @codeCoverageIgnoreEnd\n\n            return $format(\n                ...array_values($parameters),\n                ...array_fill(0, max(0, $count - \\count($parameters)), null)\n            );\n        }\n\n        return parent::trans($id, $parameters, $domain, $locale);\n    }\n\n    /**\n     * Init messages language from matching file in Lang directory.\n     *\n     * @param string $locale\n     *\n     * @return bool\n     */\n    protected function loadMessagesFromFile(string $locale): bool\n    {\n        return isset($this->messages[$locale]) || $this->resetMessages($locale);\n    }\n\n    /**\n     * Set messages of a locale and take file first if present.\n     *\n     * @param string $locale\n     * @param array  $messages\n     *\n     * @return $this\n     */\n    public function setMessages(string $locale, array $messages): static\n    {\n        $this->loadMessagesFromFile($locale);\n        $this->addResource('array', $messages, $locale);\n        $this->messages[$locale] = array_merge(\n            $this->messages[$locale] ?? [],\n            $messages\n        );\n\n        return $this;\n    }\n\n    /**\n     * Set messages of the current locale and take file first if present.\n     *\n     * @param array $messages\n     *\n     * @return $this\n     */\n    public function setTranslations(array $messages): static\n    {\n        return $this->setMessages($this->getLocale(), $messages);\n    }\n\n    /**\n     * Get messages of a locale, if none given, return all the\n     * languages.\n     */\n    public function getMessages(?string $locale = null): array\n    {\n        return $locale === null ? $this->messages : $this->messages[$locale];\n    }\n\n    /**\n     * Set the current translator locale and indicate if the source locale file exists\n     *\n     * @param string $locale locale ex. en\n     */\n    public function setLocale($locale): void\n    {\n        $locale = preg_replace_callback('/[-_]([a-z]{2,}|\\d{2,})/', function ($matches) {\n            // _2-letters or YUE is a region, _3+-letters is a variant\n            $upper = strtoupper($matches[1]);\n\n            if ($upper === 'YUE' || $upper === 'ISO' || \\strlen($upper) <= static::REGION_CODE_LENGTH) {\n                return \"_$upper\";\n            }\n\n            return '_'.ucfirst($matches[1]);\n        }, strtolower($locale));\n\n        $previousLocale = $this->getLocale();\n\n        if ($previousLocale === $locale && isset($this->messages[$locale])) {\n            return;\n        }\n\n        unset(static::$singletons[$previousLocale]);\n\n        if ($locale === 'auto') {\n            $completeLocale = setlocale(LC_TIME, '0');\n            $locale = preg_replace('/^([^_.-]+).*$/', '$1', $completeLocale);\n            $locales = $this->getAvailableLocales($locale);\n\n            $completeLocaleChunks = preg_split('/[_.-]+/', $completeLocale);\n\n            $getScore = static fn ($language) => self::compareChunkLists(\n                $completeLocaleChunks,\n                preg_split('/[_.-]+/', $language),\n            );\n\n            usort($locales, static fn ($first, $second) => $getScore($second) <=> $getScore($first));\n\n            $locale = $locales[0];\n        }\n\n        if (isset($this->aliases[$locale])) {\n            $locale = $this->aliases[$locale];\n        }\n\n        // If subtag (ex: en_CA) first load the macro (ex: en) to have a fallback\n        if (str_contains($locale, '_') &&\n            $this->loadMessagesFromFile($macroLocale = preg_replace('/^([^_]+).*$/', '$1', $locale))\n        ) {\n            parent::setLocale($macroLocale);\n        }\n\n        if (!$this->loadMessagesFromFile($locale) && !$this->initializing) {\n            return;\n        }\n\n        parent::setLocale($locale);\n    }\n\n    /**\n     * Show locale on var_dump().\n     *\n     * @return array\n     */\n    public function __debugInfo()\n    {\n        return [\n            'locale' => $this->getLocale(),\n        ];\n    }\n\n    public function __serialize(): array\n    {\n        return [\n            'locale' => $this->getLocale(),\n        ];\n    }\n\n    public function __unserialize(array $data): void\n    {\n        $this->initialize($data['locale'] ?? 'en');\n    }\n\n    private function initialize($locale, ?MessageFormatterInterface $formatter = null, $cacheDir = null, $debug = false): void\n    {\n        parent::setLocale($locale);\n        $this->initializing = true;\n        $this->directories = [__DIR__.'/Lang'];\n        $this->addLoader('array', new ArrayLoader());\n        parent::__construct($locale, new MessageFormatterMapper($formatter), $cacheDir, $debug);\n        $this->initializing = false;\n    }\n\n    private static function compareChunkLists($referenceChunks, $chunks)\n    {\n        $score = 0;\n\n        foreach ($referenceChunks as $index => $chunk) {\n            if (!isset($chunks[$index])) {\n                $score++;\n\n                continue;\n            }\n\n            if (strtolower($chunks[$index]) === strtolower($chunk)) {\n                $score += 10;\n            }\n        }\n\n        return $score;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/List/languages.php","ext":"php","size":29690,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nreturn [\n    /*\n     * ISO 639-2\n     */\n    'ab' => [\n        'isoName' => 'Abkhazian',\n        'nativeName' => 'аҧсуа бызшәа, аҧсшәа',\n    ],\n    'aa' => [\n        'isoName' => 'Afar',\n        'nativeName' => 'Afaraf',\n    ],\n    'af' => [\n        'isoName' => 'Afrikaans',\n        'nativeName' => 'Afrikaans',\n    ],\n    'ak' => [\n        'isoName' => 'Akan',\n        'nativeName' => 'Akan',\n    ],\n    'sq' => [\n        'isoName' => 'Albanian',\n        'nativeName' => 'Shqip',\n    ],\n    'am' => [\n        'isoName' => 'Amharic',\n        'nativeName' => 'አማርኛ',\n    ],\n    'ar' => [\n        'isoName' => 'Arabic',\n        'nativeName' => 'العربية',\n    ],\n    'an' => [\n        'isoName' => 'Aragonese',\n        'nativeName' => 'aragonés',\n    ],\n    'hy' => [\n        'isoName' => 'Armenian',\n        'nativeName' => 'Հայերեն',\n    ],\n    'as' => [\n        'isoName' => 'Assamese',\n        'nativeName' => 'অসমীয়া',\n    ],\n    'av' => [\n        'isoName' => 'Avaric',\n        'nativeName' => 'авар мацӀ, магӀарул мацӀ',\n    ],\n    'ae' => [\n        'isoName' => 'Avestan',\n        'nativeName' => 'avesta',\n    ],\n    'ay' => [\n        'isoName' => 'Aymara',\n        'nativeName' => 'aymar aru',\n    ],\n    'az' => [\n        'isoName' => 'Azerbaijani',\n        'nativeName' => 'azərbaycan dili',\n    ],\n    'bm' => [\n        'isoName' => 'Bambara',\n        'nativeName' => 'bamanankan',\n    ],\n    'ba' => [\n        'isoName' => 'Bashkir',\n        'nativeName' => 'башҡорт теле',\n    ],\n    'eu' => [\n        'isoName' => 'Basque',\n        'nativeName' => 'euskara, euskera',\n    ],\n    'be' => [\n        'isoName' => 'Belarusian',\n        'nativeName' => 'беларуская мова',\n    ],\n    'bn' => [\n        'isoName' => 'Bengali',\n        'nativeName' => 'বাংলা',\n    ],\n    'bh' => [\n        'isoName' => 'Bihari languages',\n        'nativeName' => 'भोजपुरी',\n    ],\n    'bi' => [\n        'isoName' => 'Bislama',\n        'nativeName' => 'Bislama',\n    ],\n    'bs' => [\n        'isoName' => 'Bosnian',\n        'nativeName' => 'bosanski jezik',\n    ],\n    'br' => [\n        'isoName' => 'Breton',\n        'nativeName' => 'brezhoneg',\n    ],\n    'bg' => [\n        'isoName' => 'Bulgarian',\n        'nativeName' => 'български език',\n    ],\n    'my' => [\n        'isoName' => 'Burmese',\n        'nativeName' => 'ဗမာစာ',\n    ],\n    'ca' => [\n        'isoName' => 'Catalan, Valencian',\n        'nativeName' => 'català, valencià',\n    ],\n    'ch' => [\n        'isoName' => 'Chamorro',\n        'nativeName' => 'Chamoru',\n    ],\n    'ce' => [\n        'isoName' => 'Chechen',\n        'nativeName' => 'нохчийн мотт',\n    ],\n    'ny' => [\n        'isoName' => 'Chichewa, Chewa, Nyanja',\n        'nativeName' => 'chiCheŵa, chinyanja',\n    ],\n    'zh' => [\n        'isoName' => 'Chinese',\n        'nativeName' => '中文 (Zhōngwén), 汉语, 漢語',\n    ],\n    'cv' => [\n        'isoName' => 'Chuvash',\n        'nativeName' => 'чӑваш чӗлхи',\n    ],\n    'kw' => [\n        'isoName' => 'Cornish',\n        'nativeName' => 'Kernewek',\n    ],\n    'co' => [\n        'isoName' => 'Corsican',\n        'nativeName' => 'corsu, lingua corsa',\n    ],\n    'cr' => [\n        'isoName' => 'Cree',\n        'nativeName' => 'ᓀᐦᐃᔭᐍᐏᐣ',\n    ],\n    'hr' => [\n        'isoName' => 'Croatian',\n        'nativeName' => 'hrvatski jezik',\n    ],\n    'cs' => [\n        'isoName' => 'Czech',\n        'nativeName' => 'čeština, český jazyk',\n    ],\n    'da' => [\n        'isoName' => 'Danish',\n        'nativeName' => 'dansk',\n    ],\n    'dv' => [\n        'isoName' => 'Divehi, Dhivehi, Maldivian',\n        'nativeName' => 'ދިވެހި',\n    ],\n    'nl' => [\n        'isoName' => 'Dutch, Flemish',\n        'nativeName' => 'Nederlands, Vlaams',\n    ],\n    'dz' => [\n        'isoName' => 'Dzongkha',\n        'nativeName' => 'རྫོང་ཁ',\n    ],\n    'en' => [\n        'isoName' => 'English',\n        'nativeName' => 'English',\n    ],\n    'eo' => [\n        'isoName' => 'Esperanto',\n        'nativeName' => 'Esperanto',\n    ],\n    'et' => [\n        'isoName' => 'Estonian',\n        'nativeName' => 'eesti, eesti keel',\n    ],\n    'ee' => [\n        'isoName' => 'Ewe',\n        'nativeName' => 'Eʋegbe',\n    ],\n    'fo' => [\n        'isoName' => 'Faroese',\n        'nativeName' => 'føroyskt',\n    ],\n    'fj' => [\n        'isoName' => 'Fijian',\n        'nativeName' => 'vosa Vakaviti',\n    ],\n    'fi' => [\n        'isoName' => 'Finnish',\n        'nativeName' => 'suomi, suomen kieli',\n    ],\n    'fr' => [\n        'isoName' => 'French',\n        'nativeName' => 'français',\n    ],\n    'ff' => [\n        'isoName' => 'Fulah',\n        'nativeName' => 'Fulfulde, Pulaar, Pular',\n    ],\n    'gl' => [\n        'isoName' => 'Galician',\n        'nativeName' => 'Galego',\n    ],\n    'ka' => [\n        'isoName' => 'Georgian',\n        'nativeName' => 'ქართული',\n    ],\n    'de' => [\n        'isoName' => 'German',\n        'nativeName' => 'Deutsch',\n    ],\n    'el' => [\n        'isoName' => 'Greek (modern)',\n        'nativeName' => 'ελληνικά',\n    ],\n    'gn' => [\n        'isoName' => 'Guaraní',\n        'nativeName' => 'Avañe\\'ẽ',\n    ],\n    'gu' => [\n        'isoName' => 'Gujarati',\n        'nativeName' => 'ગુજરાતી',\n    ],\n    'ht' => [\n        'isoName' => 'Haitian, Haitian Creole',\n        'nativeName' => 'Kreyòl ayisyen',\n    ],\n    'ha' => [\n        'isoName' => 'Hausa',\n        'nativeName' => '(Hausa) هَوُسَ',\n    ],\n    'he' => [\n        'isoName' => 'Hebrew (modern)',\n        'nativeName' => 'עברית',\n    ],\n    'hz' => [\n        'isoName' => 'Herero',\n        'nativeName' => 'Otjiherero',\n    ],\n    'hi' => [\n        'isoName' => 'Hindi',\n        'nativeName' => 'हिन्दी, हिंदी',\n    ],\n    'ho' => [\n        'isoName' => 'Hiri Motu',\n        'nativeName' => 'Hiri Motu',\n    ],\n    'hu' => [\n        'isoName' => 'Hungarian',\n        'nativeName' => 'magyar',\n    ],\n    'ia' => [\n        'isoName' => 'Interlingua',\n        'nativeName' => 'Interlingua',\n    ],\n    'id' => [\n        'isoName' => 'Indonesian',\n        'nativeName' => 'Bahasa Indonesia',\n    ],\n    'ie' => [\n        'isoName' => 'Interlingue',\n        'nativeName' => 'Originally called Occidental; then Interlingue after WWII',\n    ],\n    'ga' => [\n        'isoName' => 'Irish',\n        'nativeName' => 'Gaeilge',\n    ],\n    'ig' => [\n        'isoName' => 'Igbo',\n        'nativeName' => 'Asụsụ Igbo',\n    ],\n    'ik' => [\n        'isoName' => 'Inupiaq',\n        'nativeName' => 'Iñupiaq, Iñupiatun',\n    ],\n    'io' => [\n        'isoName' => 'Ido',\n        'nativeName' => 'Ido',\n    ],\n    'is' => [\n        'isoName' => 'Icelandic',\n        'nativeName' => 'Íslenska',\n    ],\n    'it' => [\n        'isoName' => 'Italian',\n        'nativeName' => 'Italiano',\n    ],\n    'iu' => [\n        'isoName' => 'Inuktitut',\n        'nativeName' => 'ᐃᓄᒃᑎᑐᑦ',\n    ],\n    'ja' => [\n        'isoName' => 'Japanese',\n        'nativeName' => '日本語 (にほんご)',\n    ],\n    'jv' => [\n        'isoName' => 'Javanese',\n        'nativeName' => 'ꦧꦱꦗꦮ, Basa Jawa',\n    ],\n    'kl' => [\n        'isoName' => 'Kalaallisut, Greenlandic',\n        'nativeName' => 'kalaallisut, kalaallit oqaasii',\n    ],\n    'kn' => [\n        'isoName' => 'Kannada',\n        'nativeName' => 'ಕನ್ನಡ',\n    ],\n    'kr' => [\n        'isoName' => 'Kanuri',\n        'nativeName' => 'Kanuri',\n    ],\n    'ks' => [\n        'isoName' => 'Kashmiri',\n        'nativeName' => 'कश्मीरी, كشميري‎',\n    ],\n    'kk' => [\n        'isoName' => 'Kazakh',\n        'nativeName' => 'қазақ тілі',\n    ],\n    'km' => [\n        'isoName' => 'Central Khmer',\n        'nativeName' => 'ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ',\n    ],\n    'ki' => [\n        'isoName' => 'Kikuyu, Gikuyu',\n        'nativeName' => 'Gĩkũyũ',\n    ],\n    'rw' => [\n        'isoName' => 'Kinyarwanda',\n        'nativeName' => 'Ikinyarwanda',\n    ],\n    'ky' => [\n        'isoName' => 'Kirghiz, Kyrgyz',\n        'nativeName' => 'Кыргызча, Кыргыз тили',\n    ],\n    'kv' => [\n        'isoName' => 'Komi',\n        'nativeName' => 'коми кыв',\n    ],\n    'kg' => [\n        'isoName' => 'Kongo',\n        'nativeName' => 'Kikongo',\n    ],\n    'ko' => [\n        'isoName' => 'Korean',\n        'nativeName' => '한국어',\n    ],\n    'ku' => [\n        'isoName' => 'Kurdish',\n        'nativeName' => 'Kurdî, کوردی‎',\n    ],\n    'kj' => [\n        'isoName' => 'Kuanyama, Kwanyama',\n        'nativeName' => 'Kuanyama',\n    ],\n    'la' => [\n        'isoName' => 'Latin',\n        'nativeName' => 'latine, lingua latina',\n    ],\n    'lb' => [\n        'isoName' => 'Luxembourgish, Letzeburgesch',\n        'nativeName' => 'Lëtzebuergesch',\n    ],\n    'lg' => [\n        'isoName' => 'Ganda',\n        'nativeName' => 'Luganda',\n    ],\n    'li' => [\n        'isoName' => 'Limburgan, Limburger, Limburgish',\n        'nativeName' => 'Limburgs',\n    ],\n    'ln' => [\n        'isoName' => 'Lingala',\n        'nativeName' => 'Lingála',\n    ],\n    'lo' => [\n        'isoName' => 'Lao',\n        'nativeName' => 'ພາສາລາວ',\n    ],\n    'lt' => [\n        'isoName' => 'Lithuanian',\n        'nativeName' => 'lietuvių kalba',\n    ],\n    'lu' => [\n        'isoName' => 'Luba-Katanga',\n        'nativeName' => 'Kiluba',\n    ],\n    'lv' => [\n        'isoName' => 'Latvian',\n        'nativeName' => 'latviešu valoda',\n    ],\n    'gv' => [\n        'isoName' => 'Manx',\n        'nativeName' => 'Gaelg, Gailck',\n    ],\n    'mk' => [\n        'isoName' => 'Macedonian',\n        'nativeName' => 'македонски јазик',\n    ],\n    'mg' => [\n        'isoName' => 'Malagasy',\n        'nativeName' => 'fiteny malagasy',\n    ],\n    'ms' => [\n        'isoName' => 'Malay',\n        'nativeName' => 'Bahasa Melayu, بهاس ملايو‎',\n    ],\n    'ml' => [\n        'isoName' => 'Malayalam',\n        'nativeName' => 'മലയാളം',\n    ],\n    'mt' => [\n        'isoName' => 'Maltese',\n        'nativeName' => 'Malti',\n    ],\n    'mi' => [\n        'isoName' => 'Maori',\n        'nativeName' => 'te reo Māori',\n    ],\n    'mr' => [\n        'isoName' => 'Marathi',\n        'nativeName' => 'मराठी',\n    ],\n    'mh' => [\n        'isoName' => 'Marshallese',\n        'nativeName' => 'Kajin M̧ajeļ',\n    ],\n    'mn' => [\n        'isoName' => 'Mongolian',\n        'nativeName' => 'Монгол хэл',\n    ],\n    'na' => [\n        'isoName' => 'Nauru',\n        'nativeName' => 'Dorerin Naoero',\n    ],\n    'nv' => [\n        'isoName' => 'Navajo, Navaho',\n        'nativeName' => 'Diné bizaad',\n    ],\n    'nd' => [\n        'isoName' => 'North Ndebele',\n        'nativeName' => 'isiNdebele',\n    ],\n    'ne' => [\n        'isoName' => 'Nepali',\n        'nativeName' => 'नेपाली',\n    ],\n    'ng' => [\n        'isoName' => 'Ndonga',\n        'nativeName' => 'Owambo',\n    ],\n    'nb' => [\n        'isoName' => 'Norwegian Bokmål',\n        'nativeName' => 'Norsk Bokmål',\n    ],\n    'nn' => [\n        'isoName' => 'Norwegian Nynorsk',\n        'nativeName' => 'Norsk Nynorsk',\n    ],\n    'no' => [\n        'isoName' => 'Norwegian',\n        'nativeName' => 'Norsk',\n    ],\n    'ii' => [\n        'isoName' => 'Sichuan Yi, Nuosu',\n        'nativeName' => 'ꆈꌠ꒿ Nuosuhxop',\n    ],\n    'nr' => [\n        'isoName' => 'South Ndebele',\n        'nativeName' => 'isiNdebele',\n    ],\n    'oc' => [\n        'isoName' => 'Occitan',\n        'nativeName' => 'occitan, lenga d\\'òc',\n    ],\n    'oj' => [\n        'isoName' => 'Ojibwa',\n        'nativeName' => 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n    ],\n    'cu' => [\n        'isoName' => 'Church Slavic, Church Slavonic, Old Church Slavonic, Old Slavonic, Old Bulgarian',\n        'nativeName' => 'ѩзыкъ словѣньскъ',\n    ],\n    'om' => [\n        'isoName' => 'Oromo',\n        'nativeName' => 'Afaan Oromoo',\n    ],\n    'or' => [\n        'isoName' => 'Oriya',\n        'nativeName' => 'ଓଡ଼ିଆ',\n    ],\n    'os' => [\n        'isoName' => 'Ossetian, Ossetic',\n        'nativeName' => 'ирон æвзаг',\n    ],\n    'pa' => [\n        'isoName' => 'Panjabi, Punjabi',\n        'nativeName' => 'ਪੰਜਾਬੀ',\n    ],\n    'pi' => [\n        'isoName' => 'Pali',\n        'nativeName' => 'पाऴि',\n    ],\n    'fa' => [\n        'isoName' => 'Persian',\n        'nativeName' => 'فارسی',\n    ],\n    'pl' => [\n        'isoName' => 'Polish',\n        'nativeName' => 'język polski, polszczyzna',\n    ],\n    'ps' => [\n        'isoName' => 'Pashto, Pushto',\n        'nativeName' => 'پښتو',\n    ],\n    'pt' => [\n        'isoName' => 'Portuguese',\n        'nativeName' => 'Português',\n    ],\n    'qu' => [\n        'isoName' => 'Quechua',\n        'nativeName' => 'Runa Simi, Kichwa',\n    ],\n    'rm' => [\n        'isoName' => 'Romansh',\n        'nativeName' => 'Rumantsch Grischun',\n    ],\n    'rn' => [\n        'isoName' => 'Rundi',\n        'nativeName' => 'Ikirundi',\n    ],\n    'ro' => [\n        'isoName' => 'Romanian, Moldavian, Moldovan',\n        'nativeName' => 'Română',\n    ],\n    'ru' => [\n        'isoName' => 'Russian',\n        'nativeName' => 'русский',\n    ],\n    'sa' => [\n        'isoName' => 'Sanskrit',\n        'nativeName' => 'संस्कृतम्',\n    ],\n    'sc' => [\n        'isoName' => 'Sardinian',\n        'nativeName' => 'sardu',\n    ],\n    'sd' => [\n        'isoName' => 'Sindhi',\n        'nativeName' => 'सिन्धी, سنڌي، سندھی‎',\n    ],\n    'se' => [\n        'isoName' => 'Northern Sami',\n        'nativeName' => 'Davvisámegiella',\n    ],\n    'sm' => [\n        'isoName' => 'Samoan',\n        'nativeName' => 'gagana fa\\'a Samoa',\n    ],\n    'sg' => [\n        'isoName' => 'Sango',\n        'nativeName' => 'yângâ tî sängö',\n    ],\n    'sr' => [\n        'isoName' => 'Serbian',\n        'nativeName' => 'српски језик',\n    ],\n    'gd' => [\n        'isoName' => 'Gaelic, Scottish Gaelic',\n        'nativeName' => 'Gàidhlig',\n    ],\n    'sn' => [\n        'isoName' => 'Shona',\n        'nativeName' => 'chiShona',\n    ],\n    'si' => [\n        'isoName' => 'Sinhala, Sinhalese',\n        'nativeName' => 'සිංහල',\n    ],\n    'sk' => [\n        'isoName' => 'Slovak',\n        'nativeName' => 'Slovenčina, Slovenský Jazyk',\n    ],\n    'sl' => [\n        'isoName' => 'Slovene',\n        'nativeName' => 'Slovenski Jezik, Slovenščina',\n    ],\n    'so' => [\n        'isoName' => 'Somali',\n        'nativeName' => 'Soomaaliga, af Soomaali',\n    ],\n    'st' => [\n        'isoName' => 'Southern Sotho',\n        'nativeName' => 'Sesotho',\n    ],\n    'es' => [\n        'isoName' => 'Spanish, Castilian',\n        'nativeName' => 'Español',\n    ],\n    'su' => [\n        'isoName' => 'Sundanese',\n        'nativeName' => 'Basa Sunda',\n    ],\n    'sw' => [\n        'isoName' => 'Swahili',\n        'nativeName' => 'Kiswahili',\n    ],\n    'ss' => [\n        'isoName' => 'Swati',\n        'nativeName' => 'SiSwati',\n    ],\n    'sv' => [\n        'isoName' => 'Swedish',\n        'nativeName' => 'Svenska',\n    ],\n    'ta' => [\n        'isoName' => 'Tamil',\n        'nativeName' => 'தமிழ்',\n    ],\n    'te' => [\n        'isoName' => 'Telugu',\n        'nativeName' => 'తెలుగు',\n    ],\n    'tg' => [\n        'isoName' => 'Tajik',\n        'nativeName' => 'тоҷикӣ, toçikī, تاجیکی‎',\n    ],\n    'th' => [\n        'isoName' => 'Thai',\n        'nativeName' => 'ไทย',\n    ],\n    'ti' => [\n        'isoName' => 'Tigrinya',\n        'nativeName' => 'ትግርኛ',\n    ],\n    'bo' => [\n        'isoName' => 'Tibetan',\n        'nativeName' => 'བོད་ཡིག',\n    ],\n    'tk' => [\n        'isoName' => 'Turkmen',\n        'nativeName' => 'Türkmen, Түркмен',\n    ],\n    'tl' => [\n        'isoName' => 'Tagalog',\n        'nativeName' => 'Wikang Tagalog',\n    ],\n    'tn' => [\n        'isoName' => 'Tswana',\n        'nativeName' => 'Setswana',\n    ],\n    'to' => [\n        'isoName' => 'Tongan (Tonga Islands)',\n        'nativeName' => 'Faka Tonga',\n    ],\n    'tr' => [\n        'isoName' => 'Turkish',\n        'nativeName' => 'Türkçe',\n    ],\n    'ts' => [\n        'isoName' => 'Tsonga',\n        'nativeName' => 'Xitsonga',\n    ],\n    'tt' => [\n        'isoName' => 'Tatar',\n        'nativeName' => 'татар теле, tatar tele',\n    ],\n    'tw' => [\n        'isoName' => 'Twi',\n        'nativeName' => 'Twi',\n    ],\n    'ty' => [\n        'isoName' => 'Tahitian',\n        'nativeName' => 'Reo Tahiti',\n    ],\n    'ug' => [\n        'isoName' => 'Uighur, Uyghur',\n        'nativeName' => 'Uyƣurqə, ‫ئۇيغۇرچ',\n    ],\n    'uk' => [\n        'isoName' => 'Ukrainian',\n        'nativeName' => 'Українська',\n    ],\n    'ur' => [\n        'isoName' => 'Urdu',\n        'nativeName' => 'اردو',\n    ],\n    'uz' => [\n        'isoName' => 'Uzbek',\n        'nativeName' => 'Oʻzbek, Ўзбек, أۇزبېك‎',\n    ],\n    've' => [\n        'isoName' => 'Venda',\n        'nativeName' => 'Tshivenḓa',\n    ],\n    'vi' => [\n        'isoName' => 'Vietnamese',\n        'nativeName' => 'Tiếng Việt',\n    ],\n    'vo' => [\n        'isoName' => 'Volapük',\n        'nativeName' => 'Volapük',\n    ],\n    'wa' => [\n        'isoName' => 'Walloon',\n        'nativeName' => 'Walon',\n    ],\n    'cy' => [\n        'isoName' => 'Welsh',\n        'nativeName' => 'Cymraeg',\n    ],\n    'wo' => [\n        'isoName' => 'Wolof',\n        'nativeName' => 'Wollof',\n    ],\n    'fy' => [\n        'isoName' => 'Western Frisian',\n        'nativeName' => 'Frysk',\n    ],\n    'xh' => [\n        'isoName' => 'Xhosa',\n        'nativeName' => 'isiXhosa',\n    ],\n    'yi' => [\n        'isoName' => 'Yiddish',\n        'nativeName' => 'ייִדיש',\n    ],\n    'yo' => [\n        'isoName' => 'Yoruba',\n        'nativeName' => 'Yorùbá',\n    ],\n    'za' => [\n        'isoName' => 'Zhuang, Chuang',\n        'nativeName' => 'Saɯ cueŋƅ, Saw cuengh',\n    ],\n    'zu' => [\n        'isoName' => 'Zulu',\n        'nativeName' => 'isiZulu',\n    ],\n    /*\n     * Add ISO 639-3 languages available in Carbon\n     */\n    'agq' => [\n        'isoName' => 'Aghem',\n        'nativeName' => 'Aghem',\n    ],\n    'agr' => [\n        'isoName' => 'Aguaruna',\n        'nativeName' => 'Aguaruna',\n    ],\n    'anp' => [\n        'isoName' => 'Angika',\n        'nativeName' => 'Angika',\n    ],\n    'asa' => [\n        'isoName' => 'Asu',\n        'nativeName' => 'Asu',\n    ],\n    'ast' => [\n        'isoName' => 'Asturian',\n        'nativeName' => 'Asturian',\n    ],\n    'ayc' => [\n        'isoName' => 'Southern Aymara',\n        'nativeName' => 'Southern Aymara',\n    ],\n    'bas' => [\n        'isoName' => 'Basaa',\n        'nativeName' => 'Basaa',\n    ],\n    'bem' => [\n        'isoName' => 'Bemba',\n        'nativeName' => 'Bemba',\n    ],\n    'bez' => [\n        'isoName' => 'Bena',\n        'nativeName' => 'Bena',\n    ],\n    'bhb' => [\n        'isoName' => 'Bhili',\n        'nativeName' => 'Bhili',\n    ],\n    'bho' => [\n        'isoName' => 'Bhojpuri',\n        'nativeName' => 'Bhojpuri',\n    ],\n    'brx' => [\n        'isoName' => 'Bodo',\n        'nativeName' => 'Bodo',\n    ],\n    'byn' => [\n        'isoName' => 'Bilin',\n        'nativeName' => 'Bilin',\n    ],\n    'ccp' => [\n        'isoName' => 'Chakma',\n        'nativeName' => 'Chakma',\n    ],\n    'cgg' => [\n        'isoName' => 'Chiga',\n        'nativeName' => 'Chiga',\n    ],\n    'chr' => [\n        'isoName' => 'Cherokee',\n        'nativeName' => 'Cherokee',\n    ],\n    'cmn' => [\n        'isoName' => 'Chinese',\n        'nativeName' => 'Chinese',\n    ],\n    'crh' => [\n        'isoName' => 'Crimean Turkish',\n        'nativeName' => 'Crimean Turkish',\n    ],\n    'csb' => [\n        'isoName' => 'Kashubian',\n        'nativeName' => 'Kashubian',\n    ],\n    'dav' => [\n        'isoName' => 'Taita',\n        'nativeName' => 'Taita',\n    ],\n    'dje' => [\n        'isoName' => 'Zarma',\n        'nativeName' => 'Zarma',\n    ],\n    'doi' => [\n        'isoName' => 'Dogri (macrolanguage)',\n        'nativeName' => 'Dogri (macrolanguage)',\n    ],\n    'dsb' => [\n        'isoName' => 'Lower Sorbian',\n        'nativeName' => 'Lower Sorbian',\n    ],\n    'dua' => [\n        'isoName' => 'Duala',\n        'nativeName' => 'Duala',\n    ],\n    'dyo' => [\n        'isoName' => 'Jola-Fonyi',\n        'nativeName' => 'Jola-Fonyi',\n    ],\n    'ebu' => [\n        'isoName' => 'Embu',\n        'nativeName' => 'Embu',\n    ],\n    'ewo' => [\n        'isoName' => 'Ewondo',\n        'nativeName' => 'Ewondo',\n    ],\n    'fil' => [\n        'isoName' => 'Filipino',\n        'nativeName' => 'Filipino',\n    ],\n    'fur' => [\n        'isoName' => 'Friulian',\n        'nativeName' => 'Friulian',\n    ],\n    'gez' => [\n        'isoName' => 'Geez',\n        'nativeName' => 'Geez',\n    ],\n    'gom' => [\n        'isoName' => 'Konkani, Goan',\n        'nativeName' => 'ಕೊಂಕಣಿ',\n    ],\n    'gsw' => [\n        'isoName' => 'Swiss German',\n        'nativeName' => 'Swiss German',\n    ],\n    'guz' => [\n        'isoName' => 'Gusii',\n        'nativeName' => 'Gusii',\n    ],\n    'hak' => [\n        'isoName' => 'Hakka Chinese',\n        'nativeName' => 'Hakka Chinese',\n    ],\n    'haw' => [\n        'isoName' => 'Hawaiian',\n        'nativeName' => 'Hawaiian',\n    ],\n    'hif' => [\n        'isoName' => 'Fiji Hindi',\n        'nativeName' => 'Fiji Hindi',\n    ],\n    'hne' => [\n        'isoName' => 'Chhattisgarhi',\n        'nativeName' => 'Chhattisgarhi',\n    ],\n    'hsb' => [\n        'isoName' => 'Upper Sorbian',\n        'nativeName' => 'Upper Sorbian',\n    ],\n    'jgo' => [\n        'isoName' => 'Ngomba',\n        'nativeName' => 'Ngomba',\n    ],\n    'jmc' => [\n        'isoName' => 'Machame',\n        'nativeName' => 'Machame',\n    ],\n    'kab' => [\n        'isoName' => 'Kabyle',\n        'nativeName' => 'Kabyle',\n    ],\n    'kam' => [\n        'isoName' => 'Kamba',\n        'nativeName' => 'Kamba',\n    ],\n    'kde' => [\n        'isoName' => 'Makonde',\n        'nativeName' => 'Makonde',\n    ],\n    'kea' => [\n        'isoName' => 'Kabuverdianu',\n        'nativeName' => 'Kabuverdianu',\n    ],\n    'khq' => [\n        'isoName' => 'Koyra Chiini',\n        'nativeName' => 'Koyra Chiini',\n    ],\n    'kkj' => [\n        'isoName' => 'Kako',\n        'nativeName' => 'Kako',\n    ],\n    'kln' => [\n        'isoName' => 'Kalenjin',\n        'nativeName' => 'Kalenjin',\n    ],\n    'kok' => [\n        'isoName' => 'Konkani',\n        'nativeName' => 'Konkani',\n    ],\n    'ksb' => [\n        'isoName' => 'Shambala',\n        'nativeName' => 'Shambala',\n    ],\n    'ksf' => [\n        'isoName' => 'Bafia',\n        'nativeName' => 'Bafia',\n    ],\n    'ksh' => [\n        'isoName' => 'Colognian',\n        'nativeName' => 'Colognian',\n    ],\n    'lag' => [\n        'isoName' => 'Langi',\n        'nativeName' => 'Langi',\n    ],\n    'lij' => [\n        'isoName' => 'Ligurian',\n        'nativeName' => 'Ligurian',\n    ],\n    'lkt' => [\n        'isoName' => 'Lakota',\n        'nativeName' => 'Lakota',\n    ],\n    'lrc' => [\n        'isoName' => 'Northern Luri',\n        'nativeName' => 'Northern Luri',\n    ],\n    'luo' => [\n        'isoName' => 'Luo',\n        'nativeName' => 'Luo',\n    ],\n    'luy' => [\n        'isoName' => 'Luyia',\n        'nativeName' => 'Luyia',\n    ],\n    'lzh' => [\n        'isoName' => 'Literary Chinese',\n        'nativeName' => 'Literary Chinese',\n    ],\n    'mag' => [\n        'isoName' => 'Magahi',\n        'nativeName' => 'Magahi',\n    ],\n    'mai' => [\n        'isoName' => 'Maithili',\n        'nativeName' => 'Maithili',\n    ],\n    'mas' => [\n        'isoName' => 'Masai',\n        'nativeName' => 'Masai',\n    ],\n    'mer' => [\n        'isoName' => 'Meru',\n        'nativeName' => 'Meru',\n    ],\n    'mfe' => [\n        'isoName' => 'Morisyen',\n        'nativeName' => 'Morisyen',\n    ],\n    'mgh' => [\n        'isoName' => 'Makhuwa-Meetto',\n        'nativeName' => 'Makhuwa-Meetto',\n    ],\n    'mgo' => [\n        'isoName' => 'Metaʼ',\n        'nativeName' => 'Metaʼ',\n    ],\n    'mhr' => [\n        'isoName' => 'Eastern Mari',\n        'nativeName' => 'Eastern Mari',\n    ],\n    'miq' => [\n        'isoName' => 'Mískito',\n        'nativeName' => 'Mískito',\n    ],\n    'mjw' => [\n        'isoName' => 'Karbi',\n        'nativeName' => 'Karbi',\n    ],\n    'mni' => [\n        'isoName' => 'Manipuri',\n        'nativeName' => 'Manipuri',\n    ],\n    'mua' => [\n        'isoName' => 'Mundang',\n        'nativeName' => 'Mundang',\n    ],\n    'mzn' => [\n        'isoName' => 'Mazanderani',\n        'nativeName' => 'Mazanderani',\n    ],\n    'nan' => [\n        'isoName' => 'Min Nan Chinese',\n        'nativeName' => 'Min Nan Chinese',\n    ],\n    'naq' => [\n        'isoName' => 'Nama',\n        'nativeName' => 'Nama',\n    ],\n    'nds' => [\n        'isoName' => 'Low German',\n        'nativeName' => 'Low German',\n    ],\n    'nhn' => [\n        'isoName' => 'Central Nahuatl',\n        'nativeName' => 'Central Nahuatl',\n    ],\n    'niu' => [\n        'isoName' => 'Niuean',\n        'nativeName' => 'Niuean',\n    ],\n    'nmg' => [\n        'isoName' => 'Kwasio',\n        'nativeName' => 'Kwasio',\n    ],\n    'nnh' => [\n        'isoName' => 'Ngiemboon',\n        'nativeName' => 'Ngiemboon',\n    ],\n    'nso' => [\n        'isoName' => 'Northern Sotho',\n        'nativeName' => 'Northern Sotho',\n    ],\n    'nus' => [\n        'isoName' => 'Nuer',\n        'nativeName' => 'Nuer',\n    ],\n    'nyn' => [\n        'isoName' => 'Nyankole',\n        'nativeName' => 'Nyankole',\n    ],\n    'pap' => [\n        'isoName' => 'Papiamento',\n        'nativeName' => 'Papiamento',\n    ],\n    'prg' => [\n        'isoName' => 'Prussian',\n        'nativeName' => 'Prussian',\n    ],\n    'quz' => [\n        'isoName' => 'Cusco Quechua',\n        'nativeName' => 'Cusco Quechua',\n    ],\n    'raj' => [\n        'isoName' => 'Rajasthani',\n        'nativeName' => 'Rajasthani',\n    ],\n    'rof' => [\n        'isoName' => 'Rombo',\n        'nativeName' => 'Rombo',\n    ],\n    'rwk' => [\n        'isoName' => 'Rwa',\n        'nativeName' => 'Rwa',\n    ],\n    'sah' => [\n        'isoName' => 'Sakha',\n        'nativeName' => 'Sakha',\n    ],\n    'saq' => [\n        'isoName' => 'Samburu',\n        'nativeName' => 'Samburu',\n    ],\n    'sat' => [\n        'isoName' => 'Santali',\n        'nativeName' => 'Santali',\n    ],\n    'sbp' => [\n        'isoName' => 'Sangu',\n        'nativeName' => 'Sangu',\n    ],\n    'scr' => [\n        'isoName' => 'Serbo Croatian',\n        'nativeName' => 'Serbo Croatian',\n    ],\n    'seh' => [\n        'isoName' => 'Sena',\n        'nativeName' => 'Sena',\n    ],\n    'ses' => [\n        'isoName' => 'Koyraboro Senni',\n        'nativeName' => 'Koyraboro Senni',\n    ],\n    'sgs' => [\n        'isoName' => 'Samogitian',\n        'nativeName' => 'Samogitian',\n    ],\n    'shi' => [\n        'isoName' => 'Tachelhit',\n        'nativeName' => 'Tachelhit',\n    ],\n    'shn' => [\n        'isoName' => 'Shan',\n        'nativeName' => 'Shan',\n    ],\n    'shs' => [\n        'isoName' => 'Shuswap',\n        'nativeName' => 'Shuswap',\n    ],\n    'sid' => [\n        'isoName' => 'Sidamo',\n        'nativeName' => 'Sidamo',\n    ],\n    'smn' => [\n        'isoName' => 'Inari Sami',\n        'nativeName' => 'Inari Sami',\n    ],\n    'szl' => [\n        'isoName' => 'Silesian',\n        'nativeName' => 'Silesian',\n    ],\n    'tcy' => [\n        'isoName' => 'Tulu',\n        'nativeName' => 'Tulu',\n    ],\n    'teo' => [\n        'isoName' => 'Teso',\n        'nativeName' => 'Teso',\n    ],\n    'tet' => [\n        'isoName' => 'Tetum',\n        'nativeName' => 'Tetum',\n    ],\n    'the' => [\n        'isoName' => 'Chitwania Tharu',\n        'nativeName' => 'Chitwania Tharu',\n    ],\n    'tig' => [\n        'isoName' => 'Tigre',\n        'nativeName' => 'Tigre',\n    ],\n    'tlh' => [\n        'isoName' => 'Klingon',\n        'nativeName' => 'tlhIngan Hol',\n    ],\n    'tpi' => [\n        'isoName' => 'Tok Pisin',\n        'nativeName' => 'Tok Pisin',\n    ],\n    'twq' => [\n        'isoName' => 'Tasawaq',\n        'nativeName' => 'Tasawaq',\n    ],\n    'tzl' => [\n        'isoName' => 'Talossan',\n        'nativeName' => 'Talossan',\n    ],\n    'tzm' => [\n        'isoName' => 'Tamazight, Central Atlas',\n        'nativeName' => 'ⵜⵎⴰⵣⵉⵖⵜ',\n    ],\n    'unm' => [\n        'isoName' => 'Unami',\n        'nativeName' => 'Unami',\n    ],\n    'vai' => [\n        'isoName' => 'Vai',\n        'nativeName' => 'Vai',\n    ],\n    'vun' => [\n        'isoName' => 'Vunjo',\n        'nativeName' => 'Vunjo',\n    ],\n    'wae' => [\n        'isoName' => 'Walser',\n        'nativeName' => 'Walser',\n    ],\n    'wal' => [\n        'isoName' => 'Wolaytta',\n        'nativeName' => 'Wolaytta',\n    ],\n    'xog' => [\n        'isoName' => 'Soga',\n        'nativeName' => 'Soga',\n    ],\n    'yav' => [\n        'isoName' => 'Yangben',\n        'nativeName' => 'Yangben',\n    ],\n    'yue' => [\n        'isoName' => 'Cantonese',\n        'nativeName' => 'Cantonese',\n    ],\n    'yuw' => [\n        'isoName' => 'Yau (Morobe Province)',\n        'nativeName' => 'Yau (Morobe Province)',\n    ],\n    'zgh' => [\n        'isoName' => 'Standard Moroccan Tamazight',\n        'nativeName' => 'Standard Moroccan Tamazight',\n    ],\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/List/regions.php","ext":"php","size":8320,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/*\n * ISO 3166-2 short names.\n *\n * ⚠ Provided with No Warranty\n *\n * This list has no official value, and it's using short name, i.e. the first column of\n * https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\n *\n * Without the extra parenthesis unless a particular ambiguity in the list.\n *\n * For instance:\n *  - Falkland Islands and Malvinas both to FK, but we keep only the first for brevity and\n *    because there is no ambiguity in the list to justify longer name.\n *  - For Sint Maarten/Saint Martin not to have any confusion between FM and SX codes that\n *    are on the same island and so to be clear it's not referring to the whole island,\n *    south (dutch-speaking) and north (french-speaking) parentheses are kept for disambiguation.\n *  - For Virgin Islands, that can refer to either VG or VI, parentheses are also kept for\n *    disambiguation.\n *\n * We won't take into consideration any change request in this list unless there is an update\n * in ISO 3166-2 itself that we need to align to.\n *\n * It's a purely geographical helper, state sovereignty is out of scope, for political\n * complains you should address them directly to https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\n *\n * Anyone needing official state names (such as the second column of the wikipedia page above)\n * should seek for another tool, this list is not meant to provide long names.\n */\nreturn [\n    'AD' => 'Andorra',\n    'AE' => 'United Arab Emirates',\n    'AF' => 'Afghanistan',\n    'AG' => 'Antigua and Barbuda',\n    'AI' => 'Anguilla',\n    'AL' => 'Albania',\n    'AM' => 'Armenia',\n    'AO' => 'Angola',\n    'AQ' => 'Antarctica',\n    'AR' => 'Argentina',\n    'AS' => 'American Samoa',\n    'AT' => 'Austria',\n    'AU' => 'Australia',\n    'AW' => 'Aruba',\n    'AX' => 'Åland Islands',\n    'AZ' => 'Azerbaijan',\n    'BA' => 'Bosnia and Herzegovina',\n    'BB' => 'Barbados',\n    'BD' => 'Bangladesh',\n    'BE' => 'Belgium',\n    'BF' => 'Burkina Faso',\n    'BG' => 'Bulgaria',\n    'BH' => 'Bahrain',\n    'BI' => 'Burundi',\n    'BJ' => 'Benin',\n    'BL' => 'Saint Barthélemy',\n    'BM' => 'Bermuda',\n    'BN' => 'Brunei Darussalam',\n    'BO' => 'Bolivia',\n    'BQ' => 'Bonaire, Sint Eustatius and Saba',\n    'BR' => 'Brazil',\n    'BS' => 'Bahamas',\n    'BT' => 'Bhutan',\n    'BV' => 'Bouvet Island',\n    'BW' => 'Botswana',\n    'BY' => 'Belarus',\n    'BZ' => 'Belize',\n    'CA' => 'Canada',\n    'CC' => 'Cocos (Keeling) Islands',\n    'CD' => 'Congo, Democratic Republic of the',\n    'CF' => 'Central African Republic',\n    'CG' => 'Congo',\n    'CH' => 'Switzerland',\n    'CI' => 'Côte d\\'Ivoire',\n    'CK' => 'Cook Islands',\n    'CL' => 'Chile',\n    'CM' => 'Cameroon',\n    'CN' => 'China',\n    'CO' => 'Colombia',\n    'CR' => 'Costa Rica',\n    'CU' => 'Cuba',\n    'CV' => 'Cabo Verde',\n    'CW' => 'Curaçao',\n    'CX' => 'Christmas Island',\n    'CY' => 'Cyprus',\n    'CZ' => 'Czechia',\n    'DE' => 'Germany',\n    'DJ' => 'Djibouti',\n    'DK' => 'Denmark',\n    'DM' => 'Dominica',\n    'DO' => 'Dominican Republic',\n    'DZ' => 'Algeria',\n    'EC' => 'Ecuador',\n    'EE' => 'Estonia',\n    'EG' => 'Egypt',\n    'EH' => 'Western Sahara',\n    'ER' => 'Eritrea',\n    'ES' => 'Spain',\n    'ET' => 'Ethiopia',\n    'FI' => 'Finland',\n    'FJ' => 'Fiji',\n    'FK' => 'Falkland Islands',\n    'FM' => 'Micronesia',\n    'FO' => 'Faroe Islands',\n    'FR' => 'France',\n    'GA' => 'Gabon',\n    'GB' => 'United Kingdom of Great Britain and Northern Ireland',\n    'GD' => 'Grenada',\n    'GE' => 'Georgia',\n    'GF' => 'French Guiana',\n    'GG' => 'Guernsey',\n    'GH' => 'Ghana',\n    'GI' => 'Gibraltar',\n    'GL' => 'Greenland',\n    'GM' => 'Gambia',\n    'GN' => 'Guinea',\n    'GP' => 'Guadeloupe',\n    'GQ' => 'Equatorial Guinea',\n    'GR' => 'Greece',\n    'GS' => 'South Georgia and the South Sandwich Islands',\n    'GT' => 'Guatemala',\n    'GU' => 'Guam',\n    'GW' => 'Guinea-Bissau',\n    'GY' => 'Guyana',\n    'HK' => 'Hong Kong',\n    'HM' => 'Heard Island and McDonald Islands',\n    'HN' => 'Honduras',\n    'HR' => 'Croatia',\n    'HT' => 'Haiti',\n    'HU' => 'Hungary',\n    'ID' => 'Indonesia',\n    'IE' => 'Ireland',\n    'IL' => 'Israel',\n    'IM' => 'Isle of Man',\n    'IN' => 'India',\n    'IO' => 'British Indian Ocean Territory',\n    'IQ' => 'Iraq',\n    'IR' => 'Iran',\n    'IS' => 'Iceland',\n    'IT' => 'Italy',\n    'JE' => 'Jersey',\n    'JM' => 'Jamaica',\n    'JO' => 'Jordan',\n    'JP' => 'Japan',\n    'KE' => 'Kenya',\n    'KG' => 'Kyrgyzstan',\n    'KH' => 'Cambodia',\n    'KI' => 'Kiribati',\n    'KM' => 'Comoros',\n    'KN' => 'Saint Kitts and Nevis',\n    'KP' => 'Korea (Democratic People\\'s Republic of)',\n    'KR' => 'Korea, Republic of',\n    'KW' => 'Kuwait',\n    'KY' => 'Cayman Islands',\n    'KZ' => 'Kazakhstan',\n    'LA' => 'Lao People\\'s Democratic Republic',\n    'LB' => 'Lebanon',\n    'LC' => 'Saint Lucia',\n    'LI' => 'Liechtenstein',\n    'LK' => 'Sri Lanka',\n    'LR' => 'Liberia',\n    'LS' => 'Lesotho',\n    'LT' => 'Lithuania',\n    'LU' => 'Luxembourg',\n    'LV' => 'Latvia',\n    'LY' => 'Libya',\n    'MA' => 'Morocco',\n    'MC' => 'Monaco',\n    'MD' => 'Moldova',\n    'ME' => 'Montenegro',\n    'MF' => 'Saint Martin (French part)',\n    'MG' => 'Madagascar',\n    'MH' => 'Marshall Islands',\n    'MK' => 'North Macedonia',\n    'ML' => 'Mali',\n    'MM' => 'Myanmar',\n    'MN' => 'Mongolia',\n    'MO' => 'Macao',\n    'MP' => 'Northern Mariana Islands',\n    'MQ' => 'Martinique',\n    'MR' => 'Mauritania',\n    'MS' => 'Montserrat',\n    'MT' => 'Malta',\n    'MU' => 'Mauritius',\n    'MV' => 'Maldives',\n    'MW' => 'Malawi',\n    'MX' => 'Mexico',\n    'MY' => 'Malaysia',\n    'MZ' => 'Mozambique',\n    'NA' => 'Namibia',\n    'NC' => 'New Caledonia',\n    'NE' => 'Niger',\n    'NF' => 'Norfolk Island',\n    'NG' => 'Nigeria',\n    'NI' => 'Nicaragua',\n    'NL' => 'Netherlands',\n    'NO' => 'Norway',\n    'NP' => 'Nepal',\n    'NR' => 'Nauru',\n    'NU' => 'Niue',\n    'NZ' => 'New Zealand',\n    'OM' => 'Oman',\n    'PA' => 'Panama',\n    'PE' => 'Peru',\n    'PF' => 'French Polynesia',\n    'PG' => 'Papua New Guinea',\n    'PH' => 'Philippines',\n    'PK' => 'Pakistan',\n    'PL' => 'Poland',\n    'PM' => 'Saint Pierre and Miquelon',\n    'PN' => 'Pitcairn',\n    'PR' => 'Puerto Rico',\n    'PS' => 'Palestine',\n    'PT' => 'Portugal',\n    'PW' => 'Palau',\n    'PY' => 'Paraguay',\n    'QA' => 'Qatar',\n    'RE' => 'Réunion',\n    'RO' => 'Romania',\n    'RS' => 'Serbia',\n    'RU' => 'Russian Federation',\n    'RW' => 'Rwanda',\n    'SA' => 'Saudi Arabia',\n    'SB' => 'Solomon Islands',\n    'SC' => 'Seychelles',\n    'SD' => 'Sudan',\n    'SE' => 'Sweden',\n    'SG' => 'Singapore',\n    'SH' => 'Saint Helena, Ascension and Tristan da Cunha',\n    'SI' => 'Slovenia',\n    'SJ' => 'Svalbard and Jan Mayen',\n    'SK' => 'Slovakia',\n    'SL' => 'Sierra Leone',\n    'SM' => 'San Marino',\n    'SN' => 'Senegal',\n    'SO' => 'Somalia',\n    'SR' => 'Suriname',\n    'SS' => 'South Sudan',\n    'ST' => 'Sao Tome and Principe',\n    'SV' => 'El Salvador',\n    'SX' => 'Sint Maarten (Dutch part)',\n    'SY' => 'Syrian Arab Republic',\n    'SZ' => 'Eswatini',\n    'TC' => 'Turks and Caicos Islands',\n    'TD' => 'Chad',\n    'TF' => 'French Southern Territories',\n    'TG' => 'Togo',\n    'TH' => 'Thailand',\n    'TJ' => 'Tajikistan',\n    'TK' => 'Tokelau',\n    'TL' => 'Timor-Leste',\n    'TM' => 'Turkmenistan',\n    'TN' => 'Tunisia',\n    'TO' => 'Tonga',\n    'TR' => 'Turkey',\n    'TT' => 'Trinidad and Tobago',\n    'TV' => 'Tuvalu',\n    'TW' => 'Taiwan',\n    'TZ' => 'Tanzania',\n    'UA' => 'Ukraine',\n    'UG' => 'Uganda',\n    'UM' => 'United States Minor Outlying Islands',\n    'US' => 'United States of America',\n    'UY' => 'Uruguay',\n    'UZ' => 'Uzbekistan',\n    'VA' => 'Holy See',\n    'VC' => 'Saint Vincent and the Grenadines',\n    'VE' => 'Venezuela',\n    'VG' => 'Virgin Islands (British)',\n    'VI' => 'Virgin Islands (U.S.)',\n    'VN' => 'Viet Nam',\n    'VU' => 'Vanuatu',\n    'WF' => 'Wallis and Futuna',\n    'WS' => 'Samoa',\n    'YE' => 'Yemen',\n    'YT' => 'Mayotte',\n    'ZA' => 'South Africa',\n    'ZM' => 'Zambia',\n    'ZW' => 'Zimbabwe',\n];\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/FactoryImmutable.php","ext":"php","size":24862,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse Closure;\nuse DateTimeInterface;\nuse DateTimeZone;\nuse Symfony\\Component\\Clock\\ClockInterface;\nuse Symfony\\Component\\Clock\\NativeClock;\nuse Symfony\\Contracts\\Translation\\TranslatorInterface;\n\n/**\n * A factory to generate CarbonImmutable instances with common settings.\n *\n * <autodoc generated by `composer phpdoc`>\n *\n * @method bool                canBeCreatedFromFormat(?string $date, string $format)                                                                                Checks if the (date)time string is in a given format and valid to create a\n *                                                                                                                                                                  new instance.\n * @method ?CarbonImmutable    create($year = 0, $month = 1, $day = 1, $hour = 0, $minute = 0, $second = 0, $timezone = null)                                       Create a new Carbon instance from a specific date and time.\n *                                                                                                                                                                  If any of $year, $month or $day are set to null their now() values will\n *                                                                                                                                                                  be used.\n *                                                                                                                                                                  If $hour is null it will be set to its now() value and the default\n *                                                                                                                                                                  values for $minute and $second will be their now() values.\n *                                                                                                                                                                  If $hour is not null then the default values for $minute and $second\n *                                                                                                                                                                  will be 0.\n * @method CarbonImmutable     createFromDate($year = null, $month = null, $day = null, $timezone = null)                                                           Create a Carbon instance from just a date. The time portion is set to now.\n * @method ?CarbonImmutable    createFromFormat($format, $time, $timezone = null)                                                                                   Create a Carbon instance from a specific format.\n * @method ?CarbonImmutable    createFromIsoFormat(string $format, string $time, $timezone = null, ?string $locale = 'en', ?TranslatorInterface $translator = null) Create a Carbon instance from a specific ISO format (same replacements as ->isoFormat()).\n * @method ?CarbonImmutable    createFromLocaleFormat(string $format, string $locale, string $time, $timezone = null)                                               Create a Carbon instance from a specific format and a string in a given language.\n * @method ?CarbonImmutable    createFromLocaleIsoFormat(string $format, string $locale, string $time, $timezone = null)                                            Create a Carbon instance from a specific ISO format and a string in a given language.\n * @method CarbonImmutable     createFromTime($hour = 0, $minute = 0, $second = 0, $timezone = null)                                                                Create a Carbon instance from just a time. The date portion is set to today.\n * @method CarbonImmutable     createFromTimeString(string $time, DateTimeZone|string|int|null $timezone = null)                                                    Create a Carbon instance from a time string. The date portion is set to today.\n * @method CarbonImmutable     createFromTimestamp(string|int|float $timestamp, DateTimeZone|string|int|null $timezone = null)                                      Create a Carbon instance from a timestamp and set the timezone (UTC by default).\n *                                                                                                                                                                  Timestamp input can be given as int, float or a string containing one or more numbers.\n * @method CarbonImmutable     createFromTimestampMs(string|int|float $timestamp, DateTimeZone|string|int|null $timezone = null)                                    Create a Carbon instance from a timestamp in milliseconds.\n *                                                                                                                                                                  Timestamp input can be given as int, float or a string containing one or more numbers.\n * @method CarbonImmutable     createFromTimestampMsUTC($timestamp)                                                                                                 Create a Carbon instance from a timestamp in milliseconds.\n *                                                                                                                                                                  Timestamp input can be given as int, float or a string containing one or more numbers.\n * @method CarbonImmutable     createFromTimestampUTC(string|int|float $timestamp)                                                                                  Create a Carbon instance from a timestamp keeping the timezone to UTC.\n *                                                                                                                                                                  Timestamp input can be given as int, float or a string containing one or more numbers.\n * @method CarbonImmutable     createMidnightDate($year = null, $month = null, $day = null, $timezone = null)                                                       Create a Carbon instance from just a date. The time portion is set to midnight.\n * @method ?CarbonImmutable    createSafe($year = null, $month = null, $day = null, $hour = null, $minute = null, $second = null, $timezone = null)                 Create a new safe Carbon instance from a specific date and time.\n *                                                                                                                                                                  If any of $year, $month or $day are set to null their now() values will\n *                                                                                                                                                                  be used.\n *                                                                                                                                                                  If $hour is null it will be set to its now() value and the default\n *                                                                                                                                                                  values for $minute and $second will be their now() values.\n *                                                                                                                                                                  If $hour is not null then the default values for $minute and $second\n *                                                                                                                                                                  will be 0.\n *                                                                                                                                                                  If one of the set values is not valid, an InvalidDateException\n *                                                                                                                                                                  will be thrown.\n * @method CarbonImmutable     createStrict(?int $year = 0, ?int $month = 1, ?int $day = 1, ?int $hour = 0, ?int $minute = 0, ?int $second = 0, $timezone = null)   Create a new Carbon instance from a specific date and time using strict validation.\n * @method mixed               executeWithLocale(string $locale, callable $func)                                                                                    Set the current locale to the given, execute the passed function, reset the locale to previous one,\n *                                                                                                                                                                  then return the result of the closure (or null if the closure was void).\n * @method CarbonImmutable     fromSerialized($value)                                                                                                               Create an instance from a serialized string.\n * @method array               getAvailableLocales()                                                                                                                Returns the list of internally available locales and already loaded custom locales.\n *                                                                                                                                                                  (It will ignore custom translator dynamic loading.)\n * @method Language[]          getAvailableLocalesInfo()                                                                                                            Returns list of Language object for each available locale. This object allow you to get the ISO name, native\n *                                                                                                                                                                  name, region and variant of the locale.\n * @method array               getDays()                                                                                                                            Get the days of the week.\n * @method ?string             getFallbackLocale()                                                                                                                  Get the fallback locale.\n * @method array               getFormatsToIsoReplacements()                                                                                                        List of replacements from date() format to isoFormat().\n * @method array               getIsoUnits()                                                                                                                        Returns list of locale units for ISO formatting.\n * @method array|false         getLastErrors()                                                                                                                      {@inheritdoc}\n * @method string              getLocale()                                                                                                                          Get the current translator locale.\n * @method int                 getMidDayAt()                                                                                                                        get midday/noon hour\n * @method string              getTimeFormatByPrecision(string $unitPrecision)                                                                                      Return a format from H:i to H:i:s.u according to given unit precision.\n * @method string|Closure|null getTranslationMessageWith($translator, string $key, ?string $locale = null, ?string $default = null)                                 Returns raw translation message for a given key.\n * @method int                 getWeekEndsAt(?string $locale = null)                                                                                                Get the last day of week.\n * @method int                 getWeekStartsAt(?string $locale = null)                                                                                              Get the first day of week.\n * @method bool                hasRelativeKeywords(?string $time)                                                                                                   Determine if a time string will produce a relative date.\n * @method CarbonImmutable     instance(DateTimeInterface $date)                                                                                                    Create a Carbon instance from a DateTime one.\n * @method bool                isImmutable()                                                                                                                        Returns true if the current class/instance is immutable.\n * @method bool                isModifiableUnit($unit)                                                                                                              Returns true if a property can be changed via setter.\n * @method bool                isMutable()                                                                                                                          Returns true if the current class/instance is mutable.\n * @method bool                localeHasDiffOneDayWords(string $locale)                                                                                             Returns true if the given locale is internally supported and has words for 1-day diff (just now, yesterday, tomorrow).\n *                                                                                                                                                                  Support is considered enabled if the 3 words are translated in the given locale.\n * @method bool                localeHasDiffSyntax(string $locale)                                                                                                  Returns true if the given locale is internally supported and has diff syntax support (ago, from now, before, after).\n *                                                                                                                                                                  Support is considered enabled if the 4 sentences are translated in the given locale.\n * @method bool                localeHasDiffTwoDayWords(string $locale)                                                                                             Returns true if the given locale is internally supported and has words for 2-days diff (before yesterday, after tomorrow).\n *                                                                                                                                                                  Support is considered enabled if the 2 words are translated in the given locale.\n * @method bool                localeHasPeriodSyntax($locale)                                                                                                       Returns true if the given locale is internally supported and has period syntax support (X times, every X, from X, to X).\n *                                                                                                                                                                  Support is considered enabled if the 4 sentences are translated in the given locale.\n * @method bool                localeHasShortUnits(string $locale)                                                                                                  Returns true if the given locale is internally supported and has short-units support.\n *                                                                                                                                                                  Support is considered enabled if either year, day or hour has a short variant translated.\n * @method ?CarbonImmutable    make($var, DateTimeZone|string|null $timezone = null)                                                                                Make a Carbon instance from given variable if possible.\n *                                                                                                                                                                  Always return a new instance. Parse only strings and only these likely to be dates (skip intervals\n *                                                                                                                                                                  and recurrences). Throw an exception for invalid format, but otherwise return null.\n * @method void                mixin(object|string $mixin)                                                                                                          Mix another object into the class.\n * @method CarbonImmutable     parse(DateTimeInterface|WeekDay|Month|string|int|float|null $time, DateTimeZone|string|int|null $timezone = null)                    Create a carbon instance from a string.\n *                                                                                                                                                                  This is an alias for the constructor that allows better fluent syntax\n *                                                                                                                                                                  as it allows you to do Carbon::parse('Monday next week')->fn() rather\n *                                                                                                                                                                  than (new Carbon('Monday next week'))->fn().\n * @method CarbonImmutable     parseFromLocale(string $time, ?string $locale = null, DateTimeZone|string|int|null $timezone = null)                                 Create a carbon instance from a localized string (in French, Japanese, Arabic, etc.).\n * @method string              pluralUnit(string $unit)                                                                                                             Returns standardized plural of a given singular/plural unit name (in English).\n * @method ?CarbonImmutable    rawCreateFromFormat(string $format, string $time, $timezone = null)                                                                  Create a Carbon instance from a specific format.\n * @method CarbonImmutable     rawParse(DateTimeInterface|WeekDay|Month|string|int|float|null $time, DateTimeZone|string|int|null $timezone = null)                 Create a carbon instance from a string.\n *                                                                                                                                                                  This is an alias for the constructor that allows better fluent syntax\n *                                                                                                                                                                  as it allows you to do Carbon::parse('Monday next week')->fn() rather\n *                                                                                                                                                                  than (new Carbon('Monday next week'))->fn().\n * @method void                setFallbackLocale(string $locale)                                                                                                    Set the fallback locale.\n * @method void                setLocale(string $locale)                                                                                                            Set the current translator locale and indicate if the source locale file exists.\n *                                                                                                                                                                  Pass 'auto' as locale to use the closest language to the current LC_TIME locale.\n * @method void                setMidDayAt($hour)                                                                                                                   @deprecated To avoid conflict between different third-party libraries, static setters should not be used.\n *                                                                                                                                                                              You should rather consider mid-day is always 12pm, then if you need to test if it's an other\n *                                                                                                                                                                              hour, test it explicitly:\n *                                                                                                                                                                                  $date->format('G') == 13\n *                                                                                                                                                                              or to set explicitly to a given hour:\n *                                                                                                                                                                                  $date->setTime(13, 0, 0, 0)\n *                                                                                                                                                                  Set midday/noon hour\n * @method string              singularUnit(string $unit)                                                                                                           Returns standardized singular of a given singular/plural unit name (in English).\n * @method CarbonImmutable     today(DateTimeZone|string|int|null $timezone = null)                                                                                 Create a Carbon instance for today.\n * @method CarbonImmutable     tomorrow(DateTimeZone|string|int|null $timezone = null)                                                                              Create a Carbon instance for tomorrow.\n * @method string              translateTimeString(string $timeString, ?string $from = null, ?string $to = null, int $mode = CarbonInterface::TRANSLATE_ALL)        Translate a time string from a locale to an other.\n * @method string              translateWith(TranslatorInterface $translator, string $key, array $parameters = [], $number = null)                                  Translate using translation string or callback available.\n * @method CarbonImmutable     yesterday(DateTimeZone|string|int|null $timezone = null)                                                                             Create a Carbon instance for yesterday.\n *\n * </autodoc>\n */\nclass FactoryImmutable extends Factory implements ClockInterface\n{\n    protected string $className = CarbonImmutable::class;\n\n    private static ?self $defaultInstance = null;\n\n    private static ?WrapperClock $currentClock = null;\n\n    /**\n     * @internal Instance used for static calls, such as Carbon::getTranslator(), CarbonImmutable::setTestNow(), etc.\n     */\n    public static function getDefaultInstance(): self\n    {\n        return self::$defaultInstance ??= new self();\n    }\n\n    /**\n     * @internal Instance used for static calls possibly called by non-static methods.\n     */\n    public static function getInstance(): Factory\n    {\n        return self::$currentClock?->getFactory() ?? self::getDefaultInstance();\n    }\n\n    /**\n     * @internal Set instance before creating new dates.\n     */\n    public static function setCurrentClock(ClockInterface|Factory|DateTimeInterface|null $currentClock): void\n    {\n        if ($currentClock && !($currentClock instanceof WrapperClock)) {\n            $currentClock = new WrapperClock($currentClock);\n        }\n\n        self::$currentClock = $currentClock;\n    }\n\n    /**\n     * @internal Instance used to link new object to their factory creator.\n     */\n    public static function getCurrentClock(): ?WrapperClock\n    {\n        return self::$currentClock;\n    }\n\n    /**\n     * Get a Carbon instance for the current date and time.\n     */\n    public function now(DateTimeZone|string|int|null $timezone = null): CarbonImmutable\n    {\n        return $this->__call('now', [$timezone]);\n    }\n\n    public function sleep(int|float $seconds): void\n    {\n        if ($this->hasTestNow()) {\n            $this->setTestNow($this->getTestNow()->avoidMutation()->addSeconds($seconds));\n\n            return;\n        }\n\n        (new NativeClock('UTC'))->sleep($seconds);\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/WeekDay.php","ext":"php","size":2149,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse Carbon\\Exceptions\\InvalidFormatException;\n\nenum WeekDay: int\n{\n    // Using constants is only safe starting from PHP 8.2\n    case Sunday = 0; // CarbonInterface::SUNDAY\n    case Monday = 1; // CarbonInterface::MONDAY\n    case Tuesday = 2; // CarbonInterface::TUESDAY\n    case Wednesday = 3; // CarbonInterface::WEDNESDAY\n    case Thursday = 4; // CarbonInterface::THURSDAY\n    case Friday = 5; // CarbonInterface::FRIDAY\n    case Saturday = 6; // CarbonInterface::SATURDAY\n\n    public static function int(self|int|null $value): ?int\n    {\n        return $value instanceof self ? $value->value : $value;\n    }\n\n    public static function fromNumber(int $number): self\n    {\n        $day = $number % CarbonInterface::DAYS_PER_WEEK;\n\n        return self::from($day + ($day < 0 ? CarbonInterface::DAYS_PER_WEEK : 0));\n    }\n\n    public static function fromName(string $name, ?string $locale = null): self\n    {\n        try {\n            return self::from(CarbonImmutable::parseFromLocale($name, $locale)->dayOfWeek);\n        } catch (InvalidFormatException $exception) {\n            // Possibly current language expect a dot after short name, but it's missing\n            if ($locale !== null && !mb_strlen($name) < 4 && !str_ends_with($name, '.')) {\n                try {\n                    return self::from(CarbonImmutable::parseFromLocale($name.'.', $locale)->dayOfWeek);\n                } catch (InvalidFormatException) {\n                    // Throw previous error\n                }\n            }\n\n            throw $exception;\n        }\n    }\n\n    public function next(?CarbonImmutable $now = null): CarbonImmutable\n    {\n        return $now?->modify($this->name) ?? new CarbonImmutable($this->name);\n    }\n\n    public function locale(string $locale, ?CarbonImmutable $now = null): CarbonImmutable\n    {\n        return $this->next($now)->locale($locale);\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/Exception.php","ext":"php","size":320,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\ninterface Exception\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidTimeZoneException.php","ext":"php","size":467,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidTimeZoneException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/BadFluentConstructorException.php","ext":"php","size":1091,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse BadMethodCallException as BaseBadMethodCallException;\nuse Throwable;\n\nclass BadFluentConstructorException extends BaseBadMethodCallException implements BadMethodCallException\n{\n    /**\n     * The method.\n     *\n     * @var string\n     */\n    protected $method;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $method\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($method, $code = 0, ?Throwable $previous = null)\n    {\n        $this->method = $method;\n\n        parent::__construct(\\sprintf(\"Unknown fluent constructor '%s'.\", $method), $code, $previous);\n    }\n\n    /**\n     * Get the method.\n     *\n     * @return string\n     */\n    public function getMethod(): string\n    {\n        return $this->method;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnsupportedUnitException.php","ext":"php","size":570,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse Exception;\n\n/**\n * @codeCoverageIgnore\n */\nclass UnsupportedUnitException extends UnitException\n{\n    public function __construct(string $unit, int $code = 0, ?Exception $previous = null)\n    {\n        parent::__construct(\"Unsupported unit '$unit'\", $code, $previous);\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/EndLessPeriodException.php","ext":"php","size":439,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse RuntimeException as BaseRuntimeException;\n\nfinal class EndLessPeriodException extends BaseRuntimeException implements RuntimeException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnitException.php","ext":"php","size":456,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass UnitException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/NotACarbonClassException.php","ext":"php","size":1228,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse Carbon\\CarbonInterface;\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\nclass NotACarbonClassException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    /**\n     * The className.\n     *\n     * @var string\n     */\n    protected $className;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $className\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($className, $code = 0, ?Throwable $previous = null)\n    {\n        $this->className = $className;\n\n        parent::__construct(\\sprintf(\n            'Given class does not implement %s: %s',\n            CarbonInterface::class,\n            $className,\n        ), $code, $previous);\n    }\n\n    /**\n     * Get the className.\n     *\n     * @return string\n     */\n    public function getClassName(): string\n    {\n        return $this->className;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/ParseErrorException.php","ext":"php","size":1777,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\nclass ParseErrorException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    /**\n     * The expected.\n     *\n     * @var string\n     */\n    protected $expected;\n\n    /**\n     * The actual.\n     *\n     * @var string\n     */\n    protected $actual;\n\n    /**\n     * The help message.\n     *\n     * @var string\n     */\n    protected $help;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $expected\n     * @param string         $actual\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($expected, $actual, $help = '', $code = 0, ?Throwable $previous = null)\n    {\n        $this->expected = $expected;\n        $this->actual = $actual;\n        $this->help = $help;\n\n        $actual = $actual === '' ? 'data is missing' : \"get '$actual'\";\n\n        parent::__construct(trim(\"Format expected $expected but $actual\\n$help\"), $code, $previous);\n    }\n\n    /**\n     * Get the expected.\n     *\n     * @return string\n     */\n    public function getExpected(): string\n    {\n        return $this->expected;\n    }\n\n    /**\n     * Get the actual.\n     *\n     * @return string\n     */\n    public function getActual(): string\n    {\n        return $this->actual;\n    }\n\n    /**\n     * Get the help message.\n     *\n     * @return string\n     */\n    public function getHelp(): string\n    {\n        return $this->help;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidPeriodDateException.php","ext":"php","size":469,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidPeriodDateException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/NotLocaleAwareException.php","ext":"php","size":956,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\nclass NotLocaleAwareException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    /**\n     * Constructor.\n     *\n     * @param mixed          $object\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($object, $code = 0, ?Throwable $previous = null)\n    {\n        $dump = \\is_object($object) ? \\get_class($object) : \\gettype($object);\n\n        parent::__construct(\"$dump does neither implements Symfony\\Contracts\\Translation\\LocaleAwareInterface nor getLocale() method.\", $code, $previous);\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/ImmutableException.php","ext":"php","size":1043,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse RuntimeException as BaseRuntimeException;\nuse Throwable;\n\nclass ImmutableException extends BaseRuntimeException implements RuntimeException\n{\n    /**\n     * The value.\n     *\n     * @var string\n     */\n    protected $value;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $value    the immutable type/value\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($value, $code = 0, ?Throwable $previous = null)\n    {\n        $this->value = $value;\n        parent::__construct(\"$value is immutable.\", $code, $previous);\n    }\n\n    /**\n     * Get the value.\n     *\n     * @return string\n     */\n    public function getValue(): string\n    {\n        return $this->value;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnknownMethodException.php","ext":"php","size":1063,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse BadMethodCallException as BaseBadMethodCallException;\nuse Throwable;\n\nclass UnknownMethodException extends BaseBadMethodCallException implements BadMethodCallException\n{\n    /**\n     * The method.\n     *\n     * @var string\n     */\n    protected $method;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $method\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($method, $code = 0, ?Throwable $previous = null)\n    {\n        $this->method = $method;\n\n        parent::__construct(\"Method $method does not exist.\", $code, $previous);\n    }\n\n    /**\n     * Get the method.\n     *\n     * @return string\n     */\n    public function getMethod(): string\n    {\n        return $this->method;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidDateException.php","ext":"php","size":1387,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\nclass InvalidDateException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    /**\n     * The invalid field.\n     *\n     * @var string\n     */\n    private $field;\n\n    /**\n     * The invalid value.\n     *\n     * @var mixed\n     */\n    private $value;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $field\n     * @param mixed          $value\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($field, $value, $code = 0, ?Throwable $previous = null)\n    {\n        $this->field = $field;\n        $this->value = $value;\n        parent::__construct($field.' : '.$value.' is not a valid value.', $code, $previous);\n    }\n\n    /**\n     * Get the invalid field.\n     *\n     * @return string\n     */\n    public function getField()\n    {\n        return $this->field;\n    }\n\n    /**\n     * Get the invalid value.\n     *\n     * @return mixed\n     */\n    public function getValue()\n    {\n        return $this->value;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnknownGetterException.php","ext":"php","size":1079,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\nclass UnknownGetterException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    /**\n     * The getter.\n     *\n     * @var string\n     */\n    protected $getter;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $getter   getter name\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($getter, $code = 0, ?Throwable $previous = null)\n    {\n        $this->getter = $getter;\n\n        parent::__construct(\"Unknown getter '$getter'\", $code, $previous);\n    }\n\n    /**\n     * Get the getter.\n     *\n     * @return string\n     */\n    public function getGetter(): string\n    {\n        return $this->getter;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/BadMethodCallException.php","ext":"php","size":351,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\ninterface BadMethodCallException extends Exception\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidIntervalException.php","ext":"php","size":467,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidIntervalException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidTypeException.php","ext":"php","size":463,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidTypeException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnitNotConfiguredException.php","ext":"php","size":977,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse Throwable;\n\nclass UnitNotConfiguredException extends UnitException\n{\n    /**\n     * The unit.\n     *\n     * @var string\n     */\n    protected $unit;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $unit\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($unit, $code = 0, ?Throwable $previous = null)\n    {\n        $this->unit = $unit;\n\n        parent::__construct(\"Unit $unit have no configuration to get total from other units.\", $code, $previous);\n    }\n\n    /**\n     * Get the unit.\n     *\n     * @return string\n     */\n    public function getUnit(): string\n    {\n        return $this->unit;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/RuntimeException.php","ext":"php","size":345,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\ninterface RuntimeException extends Exception\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidFormatException.php","ext":"php","size":465,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidFormatException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidPeriodParameterException.php","ext":"php","size":474,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidPeriodParameterException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidCastException.php","ext":"php","size":463,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass InvalidCastException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnreachableException.php","ext":"php","size":431,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse RuntimeException as BaseRuntimeException;\n\nclass UnreachableException extends BaseRuntimeException implements RuntimeException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/BadComparisonUnitException.php","ext":"php","size":942,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse Throwable;\n\nclass BadComparisonUnitException extends UnitException\n{\n    /**\n     * The unit.\n     *\n     * @var string\n     */\n    protected $unit;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $unit\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($unit, $code = 0, ?Throwable $previous = null)\n    {\n        $this->unit = $unit;\n\n        parent::__construct(\"Bad comparison unit: '$unit'\", $code, $previous);\n    }\n\n    /**\n     * Get the unit.\n     *\n     * @return string\n     */\n    public function getUnit(): string\n    {\n        return $this->unit;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/OutOfRangeException.php","ext":"php","size":1987,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\n// This will extends OutOfRangeException instead of InvalidArgumentException since 3.0.0\n// use OutOfRangeException as BaseOutOfRangeException;\n\nclass OutOfRangeException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    /**\n     * The unit or name of the value.\n     *\n     * @var string\n     */\n    private $unit;\n\n    /**\n     * The range minimum.\n     *\n     * @var mixed\n     */\n    private $min;\n\n    /**\n     * The range maximum.\n     *\n     * @var mixed\n     */\n    private $max;\n\n    /**\n     * The invalid value.\n     *\n     * @var mixed\n     */\n    private $value;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $unit\n     * @param mixed          $min\n     * @param mixed          $max\n     * @param mixed          $value\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($unit, $min, $max, $value, $code = 0, ?Throwable $previous = null)\n    {\n        $this->unit = $unit;\n        $this->min = $min;\n        $this->max = $max;\n        $this->value = $value;\n\n        parent::__construct(\"$unit must be between $min and $max, $value given\", $code, $previous);\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getMax()\n    {\n        return $this->max;\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getMin()\n    {\n        return $this->min;\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getUnit()\n    {\n        return $this->unit;\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getValue()\n    {\n        return $this->value;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/BadFluentSetterException.php","ext":"php","size":1080,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse BadMethodCallException as BaseBadMethodCallException;\nuse Throwable;\n\nclass BadFluentSetterException extends BaseBadMethodCallException implements BadMethodCallException\n{\n    /**\n     * The setter.\n     *\n     * @var string\n     */\n    protected $setter;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $setter\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($setter, $code = 0, ?Throwable $previous = null)\n    {\n        $this->setter = $setter;\n\n        parent::__construct(\\sprintf(\"Unknown fluent setter '%s'\", $setter), $code, $previous);\n    }\n\n    /**\n     * Get the setter.\n     *\n     * @return string\n     */\n    public function getSetter(): string\n    {\n        return $this->setter;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnknownSetterException.php","ext":"php","size":1077,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\nuse Throwable;\n\nclass UnknownSetterException extends BaseInvalidArgumentException implements BadMethodCallException\n{\n    /**\n     * The setter.\n     *\n     * @var string\n     */\n    protected $setter;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $setter   setter name\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($setter, $code = 0, ?Throwable $previous = null)\n    {\n        $this->setter = $setter;\n\n        parent::__construct(\"Unknown setter '$setter'\", $code, $previous);\n    }\n\n    /**\n     * Get the setter.\n     *\n     * @return string\n     */\n    public function getSetter(): string\n    {\n        return $this->setter;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/UnknownUnitException.php","ext":"php","size":929,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse Throwable;\n\nclass UnknownUnitException extends UnitException\n{\n    /**\n     * The unit.\n     *\n     * @var string\n     */\n    protected $unit;\n\n    /**\n     * Constructor.\n     *\n     * @param string         $unit\n     * @param int            $code\n     * @param Throwable|null $previous\n     */\n    public function __construct($unit, $code = 0, ?Throwable $previous = null)\n    {\n        $this->unit = $unit;\n\n        parent::__construct(\"Unknown unit '$unit'.\", $code, $previous);\n    }\n\n    /**\n     * Get the unit.\n     *\n     * @return string\n     */\n    public function getUnit(): string\n    {\n        return $this->unit;\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidArgumentException.php","ext":"php","size":353,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\ninterface InvalidArgumentException extends Exception\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/Exceptions/NotAPeriodException.php","ext":"php","size":462,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon\\Exceptions;\n\nuse InvalidArgumentException as BaseInvalidArgumentException;\n\nclass NotAPeriodException extends BaseInvalidArgumentException implements InvalidArgumentException\n{\n    //\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/CarbonPeriod.php","ext":"php","size":91452,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse Carbon\\Exceptions\\EndLessPeriodException;\nuse Carbon\\Exceptions\\InvalidCastException;\nuse Carbon\\Exceptions\\InvalidIntervalException;\nuse Carbon\\Exceptions\\InvalidPeriodDateException;\nuse Carbon\\Exceptions\\InvalidPeriodParameterException;\nuse Carbon\\Exceptions\\NotACarbonClassException;\nuse Carbon\\Exceptions\\NotAPeriodException;\nuse Carbon\\Exceptions\\UnknownGetterException;\nuse Carbon\\Exceptions\\UnknownMethodException;\nuse Carbon\\Exceptions\\UnreachableException;\nuse Carbon\\Traits\\DeprecatedPeriodProperties;\nuse Carbon\\Traits\\IntervalRounding;\nuse Carbon\\Traits\\LocalFactory;\nuse Carbon\\Traits\\Mixin;\nuse Carbon\\Traits\\Options;\nuse Carbon\\Traits\\ToStringFormat;\nuse Closure;\nuse Countable;\nuse DateInterval;\nuse DatePeriod;\nuse DateTime;\nuse DateTimeImmutable;\nuse DateTimeInterface;\nuse DateTimeZone;\nuse Generator;\nuse InvalidArgumentException;\nuse JsonSerializable;\nuse ReflectionException;\nuse ReturnTypeWillChange;\nuse RuntimeException;\nuse Throwable;\n\n// @codeCoverageIgnoreStart\nrequire PHP_VERSION < 8.2\n    ? __DIR__.'/../../lazy/Carbon/ProtectedDatePeriod.php'\n    : __DIR__.'/../../lazy/Carbon/UnprotectedDatePeriod.php';\n// @codeCoverageIgnoreEnd\n\n/**\n * Substitution of DatePeriod with some modifications and many more features.\n *\n * @method static static|CarbonInterface start($date = null, $inclusive = null) Create instance specifying start date or modify the start date if called on an instance.\n * @method static static since($date = null, $inclusive = null) Alias for start().\n * @method static static sinceNow($inclusive = null) Create instance with start date set to now or set the start date to now if called on an instance.\n * @method static static|CarbonInterface end($date = null, $inclusive = null) Create instance specifying end date or modify the end date if called on an instance.\n * @method static static until($date = null, $inclusive = null) Alias for end().\n * @method static static untilNow($inclusive = null) Create instance with end date set to now or set the end date to now if called on an instance.\n * @method static static dates($start, $end = null) Create instance with start and end dates or modify the start and end dates if called on an instance.\n * @method static static between($start, $end = null) Create instance with start and end dates or modify the start and end dates if called on an instance.\n * @method static static recurrences($recurrences = null) Create instance with maximum number of recurrences or modify the number of recurrences if called on an instance.\n * @method static static times($recurrences = null) Alias for recurrences().\n * @method static static|int|null options($options = null) Create instance with options or modify the options if called on an instance.\n * @method static static toggle($options, $state = null) Create instance with options toggled on or off, or toggle options if called on an instance.\n * @method static static filter($callback, $name = null) Create instance with filter added to the stack or append a filter if called on an instance.\n * @method static static push($callback, $name = null) Alias for filter().\n * @method static static prepend($callback, $name = null) Create instance with filter prepended to the stack or prepend a filter if called on an instance.\n * @method static static|array filters(array $filters = []) Create instance with filters stack or replace the whole filters stack if called on an instance.\n * @method static static|CarbonInterval interval($interval = null) Create instance with given date interval or modify the interval if called on an instance.\n * @method static static each($interval) Create instance with given date interval or modify the interval if called on an instance.\n * @method static static every($interval) Create instance with given date interval or modify the interval if called on an instance.\n * @method static static step($interval) Create instance with given date interval or modify the interval if called on an instance.\n * @method static static stepBy($interval) Create instance with given date interval or modify the interval if called on an instance.\n * @method static static invert() Create instance with inverted date interval or invert the interval if called on an instance.\n * @method static static years($years = 1) Create instance specifying a number of years for date interval or replace the interval by the given a number of years if called on an instance.\n * @method static static year($years = 1) Alias for years().\n * @method static static months($months = 1) Create instance specifying a number of months for date interval or replace the interval by the given a number of months if called on an instance.\n * @method static static month($months = 1) Alias for months().\n * @method static static weeks($weeks = 1) Create instance specifying a number of weeks for date interval or replace the interval by the given a number of weeks if called on an instance.\n * @method static static week($weeks = 1) Alias for weeks().\n * @method static static days($days = 1) Create instance specifying a number of days for date interval or replace the interval by the given a number of days if called on an instance.\n * @method static static dayz($days = 1) Alias for days().\n * @method static static day($days = 1) Alias for days().\n * @method static static hours($hours = 1) Create instance specifying a number of hours for date interval or replace the interval by the given a number of hours if called on an instance.\n * @method static static hour($hours = 1) Alias for hours().\n * @method static static minutes($minutes = 1) Create instance specifying a number of minutes for date interval or replace the interval by the given a number of minutes if called on an instance.\n * @method static static minute($minutes = 1) Alias for minutes().\n * @method static static seconds($seconds = 1) Create instance specifying a number of seconds for date interval or replace the interval by the given a number of seconds if called on an instance.\n * @method static static second($seconds = 1) Alias for seconds().\n * @method static static milliseconds($milliseconds = 1) Create instance specifying a number of milliseconds for date interval or replace the interval by the given a number of milliseconds if called on an instance.\n * @method static static millisecond($milliseconds = 1) Alias for milliseconds().\n * @method static static microseconds($microseconds = 1) Create instance specifying a number of microseconds for date interval or replace the interval by the given a number of microseconds if called on an instance.\n * @method static static microsecond($microseconds = 1) Alias for microseconds().\n * @method $this roundYear(float $precision = 1, string $function = \"round\") Round the current instance year with given precision using the given function.\n * @method $this roundYears(float $precision = 1, string $function = \"round\") Round the current instance year with given precision using the given function.\n * @method $this floorYear(float $precision = 1) Truncate the current instance year with given precision.\n * @method $this floorYears(float $precision = 1) Truncate the current instance year with given precision.\n * @method $this ceilYear(float $precision = 1) Ceil the current instance year with given precision.\n * @method $this ceilYears(float $precision = 1) Ceil the current instance year with given precision.\n * @method $this roundMonth(float $precision = 1, string $function = \"round\") Round the current instance month with given precision using the given function.\n * @method $this roundMonths(float $precision = 1, string $function = \"round\") Round the current instance month with given precision using the given function.\n * @method $this floorMonth(float $precision = 1) Truncate the current instance month with given precision.\n * @method $this floorMonths(float $precision = 1) Truncate the current instance month with given precision.\n * @method $this ceilMonth(float $precision = 1) Ceil the current instance month with given precision.\n * @method $this ceilMonths(float $precision = 1) Ceil the current instance month with given precision.\n * @method $this roundWeek(float $precision = 1, string $function = \"round\") Round the current instance day with given precision using the given function.\n * @method $this roundWeeks(float $precision = 1, string $function = \"round\") Round the current instance day with given precision using the given function.\n * @method $this floorWeek(float $precision = 1) Truncate the current instance day with given precision.\n * @method $this floorWeeks(float $precision = 1) Truncate the current instance day with given precision.\n * @method $this ceilWeek(float $precision = 1) Ceil the current instance day with given precision.\n * @method $this ceilWeeks(float $precision = 1) Ceil the current instance day with given precision.\n * @method $this roundDay(float $precision = 1, string $function = \"round\") Round the current instance day with given precision using the given function.\n * @method $this roundDays(float $precision = 1, string $function = \"round\") Round the current instance day with given precision using the given function.\n * @method $this floorDay(float $precision = 1) Truncate the current instance day with given precision.\n * @method $this floorDays(float $precision = 1) Truncate the current instance day with given precision.\n * @method $this ceilDay(float $precision = 1) Ceil the current instance day with given precision.\n * @method $this ceilDays(float $precision = 1) Ceil the current instance day with given precision.\n * @method $this roundHour(float $precision = 1, string $function = \"round\") Round the current instance hour with given precision using the given function.\n * @method $this roundHours(float $precision = 1, string $function = \"round\") Round the current instance hour with given precision using the given function.\n * @method $this floorHour(float $precision = 1) Truncate the current instance hour with given precision.\n * @method $this floorHours(float $precision = 1) Truncate the current instance hour with given precision.\n * @method $this ceilHour(float $precision = 1) Ceil the current instance hour with given precision.\n * @method $this ceilHours(float $precision = 1) Ceil the current instance hour with given precision.\n * @method $this roundMinute(float $precision = 1, string $function = \"round\") Round the current instance minute with given precision using the given function.\n * @method $this roundMinutes(float $precision = 1, string $function = \"round\") Round the current instance minute with given precision using the given function.\n * @method $this floorMinute(float $precision = 1) Truncate the current instance minute with given precision.\n * @method $this floorMinutes(float $precision = 1) Truncate the current instance minute with given precision.\n * @method $this ceilMinute(float $precision = 1) Ceil the current instance minute with given precision.\n * @method $this ceilMinutes(float $precision = 1) Ceil the current instance minute with given precision.\n * @method $this roundSecond(float $precision = 1, string $function = \"round\") Round the current instance second with given precision using the given function.\n * @method $this roundSeconds(float $precision = 1, string $function = \"round\") Round the current instance second with given precision using the given function.\n * @method $this floorSecond(float $precision = 1) Truncate the current instance second with given precision.\n * @method $this floorSeconds(float $precision = 1) Truncate the current instance second with given precision.\n * @method $this ceilSecond(float $precision = 1) Ceil the current instance second with given precision.\n * @method $this ceilSeconds(float $precision = 1) Ceil the current instance second with given precision.\n * @method $this roundMillennium(float $precision = 1, string $function = \"round\") Round the current instance millennium with given precision using the given function.\n * @method $this roundMillennia(float $precision = 1, string $function = \"round\") Round the current instance millennium with given precision using the given function.\n * @method $this floorMillennium(float $precision = 1) Truncate the current instance millennium with given precision.\n * @method $this floorMillennia(float $precision = 1) Truncate the current instance millennium with given precision.\n * @method $this ceilMillennium(float $precision = 1) Ceil the current instance millennium with given precision.\n * @method $this ceilMillennia(float $precision = 1) Ceil the current instance millennium with given precision.\n * @method $this roundCentury(float $precision = 1, string $function = \"round\") Round the current instance century with given precision using the given function.\n * @method $this roundCenturies(float $precision = 1, string $function = \"round\") Round the current instance century with given precision using the given function.\n * @method $this floorCentury(float $precision = 1) Truncate the current instance century with given precision.\n * @method $this floorCenturies(float $precision = 1) Truncate the current instance century with given precision.\n * @method $this ceilCentury(float $precision = 1) Ceil the current instance century with given precision.\n * @method $this ceilCenturies(float $precision = 1) Ceil the current instance century with given precision.\n * @method $this roundDecade(float $precision = 1, string $function = \"round\") Round the current instance decade with given precision using the given function.\n * @method $this roundDecades(float $precision = 1, string $function = \"round\") Round the current instance decade with given precision using the given function.\n * @method $this floorDecade(float $precision = 1) Truncate the current instance decade with given precision.\n * @method $this floorDecades(float $precision = 1) Truncate the current instance decade with given precision.\n * @method $this ceilDecade(float $precision = 1) Ceil the current instance decade with given precision.\n * @method $this ceilDecades(float $precision = 1) Ceil the current instance decade with given precision.\n * @method $this roundQuarter(float $precision = 1, string $function = \"round\") Round the current instance quarter with given precision using the given function.\n * @method $this roundQuarters(float $precision = 1, string $function = \"round\") Round the current instance quarter with given precision using the given function.\n * @method $this floorQuarter(float $precision = 1) Truncate the current instance quarter with given precision.\n * @method $this floorQuarters(float $precision = 1) Truncate the current instance quarter with given precision.\n * @method $this ceilQuarter(float $precision = 1) Ceil the current instance quarter with given precision.\n * @method $this ceilQuarters(float $precision = 1) Ceil the current instance quarter with given precision.\n * @method $this roundMillisecond(float $precision = 1, string $function = \"round\") Round the current instance millisecond with given precision using the given function.\n * @method $this roundMilliseconds(float $precision = 1, string $function = \"round\") Round the current instance millisecond with given precision using the given function.\n * @method $this floorMillisecond(float $precision = 1) Truncate the current instance millisecond with given precision.\n * @method $this floorMilliseconds(float $precision = 1) Truncate the current instance millisecond with given precision.\n * @method $this ceilMillisecond(float $precision = 1) Ceil the current instance millisecond with given precision.\n * @method $this ceilMilliseconds(float $precision = 1) Ceil the current instance millisecond with given precision.\n * @method $this roundMicrosecond(float $precision = 1, string $function = \"round\") Round the current instance microsecond with given precision using the given function.\n * @method $this roundMicroseconds(float $precision = 1, string $function = \"round\") Round the current instance microsecond with given precision using the given function.\n * @method $this floorMicrosecond(float $precision = 1) Truncate the current instance microsecond with given precision.\n * @method $this floorMicroseconds(float $precision = 1) Truncate the current instance microsecond with given precision.\n * @method $this ceilMicrosecond(float $precision = 1) Ceil the current instance microsecond with given precision.\n * @method $this ceilMicroseconds(float $precision = 1) Ceil the current instance microsecond with given precision.\n *\n * @mixin DeprecatedPeriodProperties\n *\n * @SuppressWarnings(TooManyFields)\n * @SuppressWarnings(CamelCasePropertyName)\n * @SuppressWarnings(CouplingBetweenObjects)\n */\nclass CarbonPeriod extends DatePeriodBase implements Countable, JsonSerializable\n{\n    use LocalFactory;\n    use IntervalRounding;\n    use Mixin {\n        Mixin::mixin as baseMixin;\n    }\n    use Options {\n        Options::__debugInfo as baseDebugInfo;\n    }\n    use ToStringFormat;\n\n    /**\n     * Built-in filter for limit by recurrences.\n     *\n     * @var callable\n     */\n    public const RECURRENCES_FILTER = [self::class, 'filterRecurrences'];\n\n    /**\n     * Built-in filter for limit to an end.\n     *\n     * @var callable\n     */\n    public const END_DATE_FILTER = [self::class, 'filterEndDate'];\n\n    /**\n     * Special value which can be returned by filters to end iteration. Also a filter.\n     *\n     * @var callable\n     */\n    public const END_ITERATION = [self::class, 'endIteration'];\n\n    /**\n     * Exclude end date from iteration.\n     *\n     * @var int\n     */\n    public const EXCLUDE_END_DATE = 8;\n\n    /**\n     * Yield CarbonImmutable instances.\n     *\n     * @var int\n     */\n    public const IMMUTABLE = 4;\n\n    /**\n     * Number of maximum attempts before giving up on finding next valid date.\n     *\n     * @var int\n     */\n    public const NEXT_MAX_ATTEMPTS = 1000;\n\n    /**\n     * Number of maximum attempts before giving up on finding end date.\n     *\n     * @var int\n     */\n    public const END_MAX_ATTEMPTS = 10000;\n\n    /**\n     * Default date class of iteration items.\n     *\n     * @var string\n     */\n    protected const DEFAULT_DATE_CLASS = Carbon::class;\n\n    /**\n     * The registered macros.\n     */\n    protected static array $macros = [];\n\n    /**\n     * Date class of iteration items.\n     */\n    protected string $dateClass = Carbon::class;\n\n    /**\n     * Underlying date interval instance. Always present, one day by default.\n     */\n    protected ?CarbonInterval $dateInterval = null;\n\n    /**\n     * True once __construct is finished.\n     */\n    protected bool $constructed = false;\n\n    /**\n     * Whether current date interval was set by default.\n     */\n    protected bool $isDefaultInterval = false;\n\n    /**\n     * The filters stack.\n     */\n    protected array $filters = [];\n\n    /**\n     * Period start date. Applied on rewind. Always present, now by default.\n     */\n    protected ?CarbonInterface $startDate = null;\n\n    /**\n     * Period end date. For inverted interval should be before the start date. Applied via a filter.\n     */\n    protected ?CarbonInterface $endDate = null;\n\n    /**\n     * Limit for number of recurrences. Applied via a filter.\n     */\n    protected int|float|null $carbonRecurrences = null;\n\n    /**\n     * Iteration options.\n     */\n    protected ?int $options = null;\n\n    /**\n     * Index of current date. Always sequential, even if some dates are skipped by filters.\n     * Equal to null only before the first iteration.\n     */\n    protected int $key = 0;\n\n    /**\n     * Current date. May temporarily hold unaccepted value when looking for a next valid date.\n     * Equal to null only before the first iteration.\n     */\n    protected ?CarbonInterface $carbonCurrent = null;\n\n    /**\n     * Timezone of current date. Taken from the start date.\n     */\n    protected ?DateTimeZone $timezone = null;\n\n    /**\n     * The cached validation result for current date.\n     */\n    protected array|string|bool|null $validationResult = null;\n\n    /**\n     * Timezone handler for settings() method.\n     */\n    protected DateTimeZone|string|int|null $timezoneSetting = null;\n\n    public function getIterator(): Generator\n    {\n        $this->rewind();\n\n        while ($this->valid()) {\n            $key = $this->key();\n            $value = $this->current();\n\n            yield $key => $value;\n\n            $this->next();\n        }\n    }\n\n    /**\n     * Make a CarbonPeriod instance from given variable if possible.\n     */\n    public static function make(mixed $var): ?static\n    {\n        try {\n            return static::instance($var);\n        } catch (NotAPeriodException) {\n            return static::create($var);\n        }\n    }\n\n    /**\n     * Create a new instance from a DatePeriod or CarbonPeriod object.\n     */\n    public static function instance(mixed $period): static\n    {\n        if ($period instanceof static) {\n            return $period->copy();\n        }\n\n        if ($period instanceof self) {\n            return new static(\n                $period->getStartDate(),\n                $period->getEndDate() ?? $period->getRecurrences(),\n                $period->getDateInterval(),\n                $period->getOptions(),\n            );\n        }\n\n        if ($period instanceof DatePeriod) {\n            return new static(\n                $period->start,\n                $period->end ?: ($period->recurrences - 1),\n                $period->interval,\n                $period->include_start_date ? 0 : static::EXCLUDE_START_DATE,\n            );\n        }\n\n        $class = static::class;\n        $type = \\gettype($period);\n        $chunks = explode('::', __METHOD__);\n\n        throw new NotAPeriodException(\n            'Argument 1 passed to '.$class.'::'.end($chunks).'() '.\n            'must be an instance of DatePeriod or '.$class.', '.\n            ($type === 'object' ? 'instance of '.\\get_class($period) : $type).' given.',\n        );\n    }\n\n    /**\n     * Create a new instance.\n     */\n    public static function create(...$params): static\n    {\n        return static::createFromArray($params);\n    }\n\n    /**\n     * Create a new instance from an array of parameters.\n     */\n    public static function createFromArray(array $params): static\n    {\n        return new static(...$params);\n    }\n\n    /**\n     * Create CarbonPeriod from ISO 8601 string.\n     */\n    public static function createFromIso(string $iso, ?int $options = null): static\n    {\n        $params = static::parseIso8601($iso);\n\n        $instance = static::createFromArray($params);\n\n        $instance->options = ($instance instanceof CarbonPeriodImmutable ? static::IMMUTABLE : 0) | $options;\n        $instance->handleChangedParameters();\n\n        return $instance;\n    }\n\n    public static function createFromISO8601String(string $iso, ?int $options = null): static\n    {\n        return self::createFromIso($iso, $options);\n    }\n\n    /**\n     * Return whether the given interval contains non-zero value of any time unit.\n     */\n    protected static function intervalHasTime(DateInterval $interval): bool\n    {\n        return $interval->h || $interval->i || $interval->s || $interval->f;\n    }\n\n    /**\n     * Return whether given variable is an ISO 8601 specification.\n     *\n     * Note: Check is very basic, as actual validation will be done later when parsing.\n     * We just want to ensure that variable is not any other type of valid parameter.\n     */\n    protected static function isIso8601(mixed $var): bool\n    {\n        if (!\\is_string($var)) {\n            return false;\n        }\n\n        // Match slash but not within a timezone name.\n        $part = '[a-z]+(?:[_-][a-z]+)*';\n\n        preg_match(\"#\\b$part/$part\\b|(/)#i\", $var, $match);\n\n        return isset($match[1]);\n    }\n\n    /**\n     * Parse given ISO 8601 string into an array of arguments.\n     *\n     * @SuppressWarnings(ElseExpression)\n     */\n    protected static function parseIso8601(string $iso): array\n    {\n        $result = [];\n\n        $interval = null;\n        $start = null;\n        $end = null;\n        $dateClass = static::DEFAULT_DATE_CLASS;\n\n        foreach (explode('/', $iso) as $key => $part) {\n            if ($key === 0 && preg_match('/^R(\\d*|INF)$/', $part, $match)) {\n                $parsed = \\strlen($match[1]) ? (($match[1] !== 'INF') ? (int) $match[1] : INF) : null;\n            } elseif ($interval === null && $parsed = self::makeInterval($part)) {\n                $interval = $part;\n            } elseif ($start === null && $parsed = $dateClass::make($part)) {\n                $start = $part;\n            } elseif ($end === null && $parsed = $dateClass::make(static::addMissingParts($start ?? '', $part))) {\n                $end = $part;\n            } else {\n                throw new InvalidPeriodParameterException(\"Invalid ISO 8601 specification: $iso.\");\n            }\n\n            $result[] = $parsed;\n        }\n\n        return $result;\n    }\n\n    /**\n     * Add missing parts of the target date from the source date.\n     */\n    protected static function addMissingParts(string $source, string $target): string\n    {\n        $pattern = '/'.preg_replace('/\\d+/', '[0-9]+', preg_quote($target, '/')).'$/';\n\n        $result = preg_replace($pattern, $target, $source, 1, $count);\n\n        return $count ? $result : $target;\n    }\n\n    private static function makeInterval(mixed $input): ?CarbonInterval\n    {\n        try {\n            return CarbonInterval::make($input);\n        } catch (Throwable) {\n            return null;\n        }\n    }\n\n    private static function makeTimezone(mixed $input): ?CarbonTimeZone\n    {\n        if (!\\is_string($input)) {\n            return null;\n        }\n\n        try {\n            return CarbonTimeZone::create($input);\n        } catch (Throwable) {\n            return null;\n        }\n    }\n\n    /**\n     * Register a custom macro.\n     *\n     * Pass null macro to remove it.\n     *\n     * @example\n     * ```\n     * CarbonPeriod::macro('middle', function () {\n     *   return $this->getStartDate()->average($this->getEndDate());\n     * });\n     * echo CarbonPeriod::since('2011-05-12')->until('2011-06-03')->middle();\n     * ```\n     *\n     * @param-closure-this  static  $macro\n     */\n    public static function macro(string $name, ?callable $macro): void\n    {\n        static::$macros[$name] = $macro;\n    }\n\n    /**\n     * Register macros from a mixin object.\n     *\n     * @example\n     * ```\n     * CarbonPeriod::mixin(new class {\n     *   public function addDays() {\n     *     return function ($count = 1) {\n     *       return $this->setStartDate(\n     *         $this->getStartDate()->addDays($count)\n     *       )->setEndDate(\n     *         $this->getEndDate()->addDays($count)\n     *       );\n     *     };\n     *   }\n     *   public function subDays() {\n     *     return function ($count = 1) {\n     *       return $this->setStartDate(\n     *         $this->getStartDate()->subDays($count)\n     *       )->setEndDate(\n     *         $this->getEndDate()->subDays($count)\n     *       );\n     *     };\n     *   }\n     * });\n     * echo CarbonPeriod::create('2000-01-01', '2000-02-01')->addDays(5)->subDays(3);\n     * ```\n     *\n     * @throws ReflectionException\n     */\n    public static function mixin(object|string $mixin): void\n    {\n        static::baseMixin($mixin);\n    }\n\n    /**\n     * Check if macro is registered.\n     */\n    public static function hasMacro(string $name): bool\n    {\n        return isset(static::$macros[$name]);\n    }\n\n    /**\n     * Provide static proxy for instance aliases.\n     */\n    public static function __callStatic(string $method, array $parameters): mixed\n    {\n        $date = new static();\n\n        if (static::hasMacro($method)) {\n            return static::bindMacroContext(null, static fn () => $date->callMacro($method, $parameters));\n        }\n\n        return $date->$method(...$parameters);\n    }\n\n    /**\n     * CarbonPeriod constructor.\n     *\n     * @SuppressWarnings(ElseExpression)\n     *\n     * @throws InvalidArgumentException\n     */\n    public function __construct(...$arguments)\n    {\n        $raw = null;\n\n        if (isset($arguments['raw'])) {\n            $raw = $arguments['raw'];\n            $this->isDefaultInterval = $arguments['isDefaultInterval'] ?? false;\n\n            if (isset($arguments['dateClass'])) {\n                $this->dateClass = $arguments['dateClass'];\n            }\n\n            $arguments = $raw;\n        }\n\n        // Parse and assign arguments one by one. First argument may be an ISO 8601 spec,\n        // which will be first parsed into parts and then processed the same way.\n\n        $argumentsCount = \\count($arguments);\n\n        if ($argumentsCount && static::isIso8601($iso = $arguments[0])) {\n            array_splice($arguments, 0, 1, static::parseIso8601($iso));\n        }\n\n        if ($argumentsCount === 1) {\n            if ($arguments[0] instanceof self) {\n                $arguments = [\n                    $arguments[0]->getStartDate(),\n                    $arguments[0]->getEndDate() ?? $arguments[0]->getRecurrences(),\n                    $arguments[0]->getDateInterval(),\n                    $arguments[0]->getOptions(),\n                ];\n            } elseif ($arguments[0] instanceof DatePeriod) {\n                $arguments = [\n                    $arguments[0]->start,\n                    $arguments[0]->end ?: ($arguments[0]->recurrences - 1),\n                    $arguments[0]->interval,\n                    $arguments[0]->include_start_date ? 0 : static::EXCLUDE_START_DATE,\n                ];\n            }\n        }\n\n        if (is_a($this->dateClass, DateTimeImmutable::class, true)) {\n            $this->options = static::IMMUTABLE;\n        }\n\n        $optionsSet = false;\n        $originalArguments = [];\n        $sortedArguments = [];\n\n        foreach ($arguments as $argument) {\n            $parsedDate = null;\n\n            if ($argument instanceof DateTimeZone) {\n                $sortedArguments = $this->configureTimezone($argument, $sortedArguments, $originalArguments);\n            } elseif (!isset($sortedArguments['interval']) &&\n                (\n                    (\\is_string($argument) && preg_match(\n                        '/^(-?\\d(\\d(?![\\/-])|[^\\d\\/-]([\\/-])?)*|P[T\\d].*|(?:\\h*\\d+(?:\\.\\d+)?\\h*[a-z]+)+)$/i',\n                        $argument,\n                    )) ||\n                    $argument instanceof DateInterval ||\n                    $argument instanceof Closure ||\n                    $argument instanceof Unit\n                ) &&\n                $parsedInterval = self::makeInterval($argument)\n            ) {\n                $sortedArguments['interval'] = $parsedInterval;\n            } elseif (!isset($sortedArguments['start']) && $parsedDate = $this->makeDateTime($argument)) {\n                $sortedArguments['start'] = $parsedDate;\n                $originalArguments['start'] = $argument;\n            } elseif (!isset($sortedArguments['end']) && ($parsedDate = $parsedDate ?? $this->makeDateTime($argument))) {\n                $sortedArguments['end'] = $parsedDate;\n                $originalArguments['end'] = $argument;\n            } elseif (!isset($sortedArguments['recurrences']) &&\n                !isset($sortedArguments['end']) &&\n                (\\is_int($argument) || \\is_float($argument))\n                && $argument >= 0\n            ) {\n                $sortedArguments['recurrences'] = $argument;\n            } elseif (!$optionsSet && (\\is_int($argument) || $argument === null)) {\n                $optionsSet = true;\n                $sortedArguments['options'] = (((int) $this->options) | ((int) $argument));\n            } elseif ($parsedTimezone = self::makeTimezone($argument)) {\n                $sortedArguments = $this->configureTimezone($parsedTimezone, $sortedArguments, $originalArguments);\n            } else {\n                throw new InvalidPeriodParameterException('Invalid constructor parameters.');\n            }\n        }\n\n        if ($raw === null && isset($sortedArguments['start'])) {\n            $end = $sortedArguments['end'] ?? max(1, $sortedArguments['recurrences'] ?? 1);\n\n            if (\\is_float($end)) {\n                $end = $end === INF ? PHP_INT_MAX : (int) round($end);\n            }\n\n            $raw = [\n                $sortedArguments['start'],\n                $sortedArguments['interval'] ?? CarbonInterval::day(),\n                $end,\n            ];\n        }\n\n        $this->setFromAssociativeArray($sortedArguments);\n\n        if ($this->startDate === null) {\n            $dateClass = $this->dateClass;\n            $this->setStartDate($dateClass::now());\n        }\n\n        if ($this->dateInterval === null) {\n            $this->setDateInterval(CarbonInterval::day());\n\n            $this->isDefaultInterval = true;\n        }\n\n        if ($this->options === null) {\n            $this->setOptions(0);\n        }\n\n        parent::__construct(\n            $this->startDate,\n            $this->dateInterval,\n            $this->endDate ?? max(1, min(2147483639, $this->recurrences ?? 1)),\n            $this->options,\n        );\n\n        $this->constructed = true;\n    }\n\n    /**\n     * Get a copy of the instance.\n     */\n    public function copy(): static\n    {\n        return clone $this;\n    }\n\n    /**\n     * Prepare the instance to be set (self if mutable to be mutated,\n     * copy if immutable to generate a new instance).\n     */\n    protected function copyIfImmutable(): static\n    {\n        return $this;\n    }\n\n    /**\n     * Get the getter for a property allowing both `DatePeriod` snakeCase and camelCase names.\n     */\n    protected function getGetter(string $name): ?callable\n    {\n        return match (strtolower(preg_replace('/[A-Z]/', '_$0', $name))) {\n            'start', 'start_date' => [$this, 'getStartDate'],\n            'end', 'end_date' => [$this, 'getEndDate'],\n            'interval', 'date_interval' => [$this, 'getDateInterval'],\n            'recurrences' => [$this, 'getRecurrences'],\n            'include_start_date' => [$this, 'isStartIncluded'],\n            'include_end_date' => [$this, 'isEndIncluded'],\n            'current' => [$this, 'current'],\n            'locale' => [$this, 'locale'],\n            'tzname', 'tz_name' => fn () => match (true) {\n                $this->timezoneSetting === null => null,\n                \\is_string($this->timezoneSetting) => $this->timezoneSetting,\n                $this->timezoneSetting instanceof DateTimeZone => $this->timezoneSetting->getName(),\n                default => CarbonTimeZone::instance($this->timezoneSetting)->getName(),\n            },\n            default => null,\n        };\n    }\n\n    /**\n     * Get a property allowing both `DatePeriod` snakeCase and camelCase names.\n     *\n     * @param string $name\n     *\n     * @return bool|CarbonInterface|CarbonInterval|int|null\n     */\n    public function get(string $name)\n    {\n        $getter = $this->getGetter($name);\n\n        if ($getter) {\n            return $getter();\n        }\n\n        throw new UnknownGetterException($name);\n    }\n\n    /**\n     * Get a property allowing both `DatePeriod` snakeCase and camelCase names.\n     *\n     * @param string $name\n     *\n     * @return bool|CarbonInterface|CarbonInterval|int|null\n     */\n    public function __get(string $name)\n    {\n        return $this->get($name);\n    }\n\n    /**\n     * Check if an attribute exists on the object\n     *\n     * @param string $name\n     *\n     * @return bool\n     */\n    public function __isset(string $name): bool\n    {\n        return $this->getGetter($name) !== null;\n    }\n\n    /**\n     * @alias copy\n     *\n     * Get a copy of the instance.\n     *\n     * @return static\n     */\n    public function clone()\n    {\n        return clone $this;\n    }\n\n    /**\n     * Set the iteration item class.\n     *\n     * @param string $dateClass\n     *\n     * @return static\n     */\n    public function setDateClass(string $dateClass)\n    {\n        if (!is_a($dateClass, CarbonInterface::class, true)) {\n            throw new NotACarbonClassException($dateClass);\n        }\n\n        $self = $this->copyIfImmutable();\n        $self->dateClass = $dateClass;\n\n        if (is_a($dateClass, Carbon::class, true)) {\n            $self->options = $self->options & ~static::IMMUTABLE;\n        } elseif (is_a($dateClass, CarbonImmutable::class, true)) {\n            $self->options = $self->options | static::IMMUTABLE;\n        }\n\n        return $self;\n    }\n\n    /**\n     * Returns iteration item date class.\n     *\n     * @return string\n     */\n    public function getDateClass(): string\n    {\n        return $this->dateClass;\n    }\n\n    /**\n     * Change the period date interval.\n     *\n     * @param DateInterval|Unit|string|int $interval\n     * @param Unit|string                  $unit     the unit of $interval if it's a number\n     *\n     * @throws InvalidIntervalException\n     *\n     * @return static\n     */\n    public function setDateInterval(mixed $interval, Unit|string|null $unit = null): static\n    {\n        if ($interval instanceof Unit) {\n            $interval = $interval->interval();\n        }\n\n        if ($unit instanceof Unit) {\n            $unit = $unit->name;\n        }\n\n        if (!$interval = CarbonInterval::make($interval, $unit)) {\n            throw new InvalidIntervalException('Invalid interval.');\n        }\n\n        if ($interval->spec() === 'PT0S' && !$interval->f && !$interval->getStep()) {\n            throw new InvalidIntervalException('Empty interval is not accepted.');\n        }\n\n        $self = $this->copyIfImmutable();\n        $self->dateInterval = $interval;\n\n        $self->isDefaultInterval = false;\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Reset the date interval to the default value.\n     *\n     * Difference with simply setting interval to 1-day is that P1D will not appear when calling toIso8601String()\n     * and also next adding to the interval won't include the default 1-day.\n     */\n    public function resetDateInterval(): static\n    {\n        $self = $this->copyIfImmutable();\n        $self->setDateInterval(CarbonInterval::day());\n\n        $self->isDefaultInterval = true;\n\n        return $self;\n    }\n\n    /**\n     * Invert the period date interval.\n     */\n    public function invertDateInterval(): static\n    {\n        return $this->setDateInterval($this->dateInterval->invert());\n    }\n\n    /**\n     * Set start and end date.\n     *\n     * @param DateTime|DateTimeInterface|string      $start\n     * @param DateTime|DateTimeInterface|string|null $end\n     *\n     * @return static\n     */\n    public function setDates(mixed $start, mixed $end): static\n    {\n        return $this->setStartDate($start)->setEndDate($end);\n    }\n\n    /**\n     * Change the period options.\n     *\n     * @param int|null $options\n     *\n     * @return static\n     */\n    public function setOptions(?int $options): static\n    {\n        $self = $this->copyIfImmutable();\n        $self->options = $options ?? 0;\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Get the period options.\n     */\n    public function getOptions(): int\n    {\n        return $this->options ?? 0;\n    }\n\n    /**\n     * Toggle given options on or off.\n     *\n     * @param int       $options\n     * @param bool|null $state\n     *\n     * @throws InvalidArgumentException\n     *\n     * @return static\n     */\n    public function toggleOptions(int $options, ?bool $state = null): static\n    {\n        $self = $this->copyIfImmutable();\n\n        if ($state === null) {\n            $state = ($this->options & $options) !== $options;\n        }\n\n        return $self->setOptions(\n            $state ?\n            $this->options | $options :\n            $this->options & ~$options,\n        );\n    }\n\n    /**\n     * Toggle EXCLUDE_START_DATE option.\n     */\n    public function excludeStartDate(bool $state = true): static\n    {\n        return $this->toggleOptions(static::EXCLUDE_START_DATE, $state);\n    }\n\n    /**\n     * Toggle EXCLUDE_END_DATE option.\n     */\n    public function excludeEndDate(bool $state = true): static\n    {\n        return $this->toggleOptions(static::EXCLUDE_END_DATE, $state);\n    }\n\n    /**\n     * Get the underlying date interval.\n     */\n    public function getDateInterval(): CarbonInterval\n    {\n        return $this->dateInterval->copy();\n    }\n\n    /**\n     * Get start date of the period.\n     *\n     * @param string|null $rounding Optional rounding 'floor', 'ceil', 'round' using the period interval.\n     */\n    public function getStartDate(?string $rounding = null): CarbonInterface\n    {\n        $date = $this->startDate->avoidMutation();\n\n        return $rounding ? $date->round($this->getDateInterval(), $rounding) : $date;\n    }\n\n    /**\n     * Get end date of the period.\n     *\n     * @param string|null $rounding Optional rounding 'floor', 'ceil', 'round' using the period interval.\n     */\n    public function getEndDate(?string $rounding = null): ?CarbonInterface\n    {\n        if (!$this->endDate) {\n            return null;\n        }\n\n        $date = $this->endDate->avoidMutation();\n\n        return $rounding ? $date->round($this->getDateInterval(), $rounding) : $date;\n    }\n\n    /**\n     * Get number of recurrences.\n     */\n    #[ReturnTypeWillChange]\n    public function getRecurrences(): int|float|null\n    {\n        return $this->carbonRecurrences;\n    }\n\n    /**\n     * Returns true if the start date should be excluded.\n     */\n    public function isStartExcluded(): bool\n    {\n        return ($this->options & static::EXCLUDE_START_DATE) !== 0;\n    }\n\n    /**\n     * Returns true if the end date should be excluded.\n     */\n    public function isEndExcluded(): bool\n    {\n        return ($this->options & static::EXCLUDE_END_DATE) !== 0;\n    }\n\n    /**\n     * Returns true if the start date should be included.\n     */\n    public function isStartIncluded(): bool\n    {\n        return !$this->isStartExcluded();\n    }\n\n    /**\n     * Returns true if the end date should be included.\n     */\n    public function isEndIncluded(): bool\n    {\n        return !$this->isEndExcluded();\n    }\n\n    /**\n     * Return the start if it's included by option, else return the start + 1 period interval.\n     */\n    public function getIncludedStartDate(): CarbonInterface\n    {\n        $start = $this->getStartDate();\n\n        if ($this->isStartExcluded()) {\n            return $start->add($this->getDateInterval());\n        }\n\n        return $start;\n    }\n\n    /**\n     * Return the end if it's included by option, else return the end - 1 period interval.\n     * Warning: if the period has no fixed end, this method will iterate the period to calculate it.\n     */\n    public function getIncludedEndDate(): CarbonInterface\n    {\n        $end = $this->getEndDate();\n\n        if (!$end) {\n            return $this->calculateEnd();\n        }\n\n        if ($this->isEndExcluded()) {\n            return $end->sub($this->getDateInterval());\n        }\n\n        return $end;\n    }\n\n    /**\n     * Add a filter to the stack.\n     *\n     * @SuppressWarnings(UnusedFormalParameter)\n     */\n    public function addFilter(callable|string $callback, ?string $name = null): static\n    {\n        $self = $this->copyIfImmutable();\n        $tuple = $self->createFilterTuple(\\func_get_args());\n\n        $self->filters[] = $tuple;\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Prepend a filter to the stack.\n     *\n     * @SuppressWarnings(UnusedFormalParameter)\n     */\n    public function prependFilter(callable|string $callback, ?string $name = null): static\n    {\n        $self = $this->copyIfImmutable();\n        $tuple = $self->createFilterTuple(\\func_get_args());\n\n        array_unshift($self->filters, $tuple);\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Remove a filter by instance or name.\n     */\n    public function removeFilter(callable|string $filter): static\n    {\n        $self = $this->copyIfImmutable();\n        $key = \\is_callable($filter) ? 0 : 1;\n\n        $self->filters = array_values(array_filter(\n            $this->filters,\n            static fn ($tuple) => $tuple[$key] !== $filter,\n        ));\n\n        $self->updateInternalState();\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Return whether given instance or name is in the filter stack.\n     */\n    public function hasFilter(callable|string $filter): bool\n    {\n        $key = \\is_callable($filter) ? 0 : 1;\n\n        foreach ($this->filters as $tuple) {\n            if ($tuple[$key] === $filter) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Get filters stack.\n     */\n    public function getFilters(): array\n    {\n        return $this->filters;\n    }\n\n    /**\n     * Set filters stack.\n     */\n    public function setFilters(array $filters): static\n    {\n        $self = $this->copyIfImmutable();\n        $self->filters = $filters;\n\n        $self->updateInternalState();\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Reset filters stack.\n     */\n    public function resetFilters(): static\n    {\n        $self = $this->copyIfImmutable();\n        $self->filters = [];\n\n        if ($self->endDate !== null) {\n            $self->filters[] = [static::END_DATE_FILTER, null];\n        }\n\n        if ($self->carbonRecurrences !== null) {\n            $self->filters[] = [static::RECURRENCES_FILTER, null];\n        }\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Add a recurrences filter (set maximum number of recurrences).\n     *\n     * @throws InvalidArgumentException\n     */\n    public function setRecurrences(int|float|null $recurrences): static\n    {\n        if ($recurrences === null) {\n            return $this->removeFilter(static::RECURRENCES_FILTER);\n        }\n\n        if ($recurrences < 0) {\n            throw new InvalidPeriodParameterException('Invalid number of recurrences.');\n        }\n\n        /** @var self $self */\n        $self = $this->copyIfImmutable();\n        $self->carbonRecurrences = $recurrences === INF ? INF : (int) $recurrences;\n\n        if (!$self->hasFilter(static::RECURRENCES_FILTER)) {\n            return $self->addFilter(static::RECURRENCES_FILTER);\n        }\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Change the period start date.\n     *\n     * @param DateTime|DateTimeInterface|string $date\n     * @param bool|null                         $inclusive\n     *\n     * @throws InvalidPeriodDateException\n     *\n     * @return static\n     */\n    public function setStartDate(mixed $date, ?bool $inclusive = null): static\n    {\n        if (!$this->isInfiniteDate($date) && !($date = ([$this->dateClass, 'make'])($date, $this->timezone))) {\n            throw new InvalidPeriodDateException('Invalid start date.');\n        }\n\n        $self = $this->copyIfImmutable();\n        $self->startDate = $date;\n\n        if ($inclusive !== null) {\n            $self = $self->toggleOptions(static::EXCLUDE_START_DATE, !$inclusive);\n        }\n\n        return $self;\n    }\n\n    /**\n     * Change the period end date.\n     *\n     * @param DateTime|DateTimeInterface|string|null $date\n     * @param bool|null                              $inclusive\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return static\n     */\n    public function setEndDate(mixed $date, ?bool $inclusive = null): static\n    {\n        if ($date !== null && !$this->isInfiniteDate($date) && !$date = ([$this->dateClass, 'make'])($date, $this->timezone)) {\n            throw new InvalidPeriodDateException('Invalid end date.');\n        }\n\n        if (!$date) {\n            return $this->removeFilter(static::END_DATE_FILTER);\n        }\n\n        $self = $this->copyIfImmutable();\n        $self->endDate = $date;\n\n        if ($inclusive !== null) {\n            $self = $self->toggleOptions(static::EXCLUDE_END_DATE, !$inclusive);\n        }\n\n        if (!$self->hasFilter(static::END_DATE_FILTER)) {\n            return $self->addFilter(static::END_DATE_FILTER);\n        }\n\n        $self->handleChangedParameters();\n\n        return $self;\n    }\n\n    /**\n     * Check if the current position is valid.\n     */\n    public function valid(): bool\n    {\n        return $this->validateCurrentDate() === true;\n    }\n\n    /**\n     * Return the current key.\n     */\n    public function key(): ?int\n    {\n        return $this->valid()\n            ? $this->key\n            : null;\n    }\n\n    /**\n     * Return the current date.\n     */\n    public function current(): ?CarbonInterface\n    {\n        return $this->valid()\n            ? $this->prepareForReturn($this->carbonCurrent)\n            : null;\n    }\n\n    /**\n     * Move forward to the next date.\n     *\n     * @throws RuntimeException\n     */\n    public function next(): void\n    {\n        if ($this->carbonCurrent === null) {\n            $this->rewind();\n        }\n\n        if ($this->validationResult !== static::END_ITERATION) {\n            $this->key++;\n\n            $this->incrementCurrentDateUntilValid();\n        }\n    }\n\n    /**\n     * Rewind to the start date.\n     *\n     * Iterating over a date in the UTC timezone avoids bug during backward DST change.\n     *\n     * @see https://bugs.php.net/bug.php?id=72255\n     * @see https://bugs.php.net/bug.php?id=74274\n     * @see https://wiki.php.net/rfc/datetime_and_daylight_saving_time\n     *\n     * @throws RuntimeException\n     */\n    public function rewind(): void\n    {\n        $this->key = 0;\n        $this->carbonCurrent = ([$this->dateClass, 'make'])($this->startDate);\n        $settings = $this->getSettings();\n\n        if ($this->hasLocalTranslator()) {\n            $settings['locale'] = $this->getTranslatorLocale();\n        }\n\n        $this->carbonCurrent->settings($settings);\n        $this->timezone = static::intervalHasTime($this->dateInterval) ? $this->carbonCurrent->getTimezone() : null;\n\n        if ($this->timezone) {\n            $this->carbonCurrent = $this->carbonCurrent->utc();\n        }\n\n        $this->validationResult = null;\n\n        if ($this->isStartExcluded() || $this->validateCurrentDate() === false) {\n            $this->incrementCurrentDateUntilValid();\n        }\n    }\n\n    /**\n     * Skip iterations and returns iteration state (false if ended, true if still valid).\n     *\n     * @param int $count steps number to skip (1 by default)\n     *\n     * @return bool\n     */\n    public function skip(int $count = 1): bool\n    {\n        for ($i = $count; $this->valid() && $i > 0; $i--) {\n            $this->next();\n        }\n\n        return $this->valid();\n    }\n\n    /**\n     * Format the date period as ISO 8601.\n     */\n    public function toIso8601String(): string\n    {\n        $parts = [];\n\n        if ($this->carbonRecurrences !== null) {\n            $parts[] = 'R'.$this->carbonRecurrences;\n        }\n\n        $parts[] = $this->startDate->toIso8601String();\n\n        if (!$this->isDefaultInterval) {\n            $parts[] = $this->dateInterval->spec();\n        }\n\n        if ($this->endDate !== null) {\n            $parts[] = $this->endDate->toIso8601String();\n        }\n\n        return implode('/', $parts);\n    }\n\n    /**\n     * Convert the date period into a string.\n     */\n    public function toString(): string\n    {\n        $format = $this->localToStringFormat\n            ?? $this->getFactory()->getSettings()['toStringFormat']\n            ?? null;\n\n        if ($format instanceof Closure) {\n            return $format($this);\n        }\n\n        $translator = ([$this->dateClass, 'getTranslator'])();\n\n        $parts = [];\n\n        $format = $format ?? (\n            !$this->startDate->isStartOfDay() || ($this->endDate && !$this->endDate->isStartOfDay())\n                ? 'Y-m-d H:i:s'\n                : 'Y-m-d'\n        );\n\n        if ($this->carbonRecurrences !== null) {\n            $parts[] = $this->translate('period_recurrences', [], $this->carbonRecurrences, $translator);\n        }\n\n        $parts[] = $this->translate('period_interval', [':interval' => $this->dateInterval->forHumans([\n            'join' => true,\n        ])], null, $translator);\n\n        $parts[] = $this->translate('period_start_date', [':date' => $this->startDate->rawFormat($format)], null, $translator);\n\n        if ($this->endDate !== null) {\n            $parts[] = $this->translate('period_end_date', [':date' => $this->endDate->rawFormat($format)], null, $translator);\n        }\n\n        $result = implode(' ', $parts);\n\n        return mb_strtoupper(mb_substr($result, 0, 1)).mb_substr($result, 1);\n    }\n\n    /**\n     * Format the date period as ISO 8601.\n     */\n    public function spec(): string\n    {\n        return $this->toIso8601String();\n    }\n\n    /**\n     * Cast the current instance into the given class.\n     *\n     * @param string $className The $className::instance() method will be called to cast the current object.\n     *\n     * @return DatePeriod|object\n     */\n    public function cast(string $className): object\n    {\n        if (!method_exists($className, 'instance')) {\n            if (is_a($className, DatePeriod::class, true)) {\n                return new $className(\n                    $this->rawDate($this->getStartDate()),\n                    $this->getDateInterval(),\n                    $this->getEndDate() ? $this->rawDate($this->getIncludedEndDate()) : $this->getRecurrences(),\n                    $this->isStartExcluded() ? DatePeriod::EXCLUDE_START_DATE : 0,\n                );\n            }\n\n            throw new InvalidCastException(\"$className has not the instance() method needed to cast the date.\");\n        }\n\n        return $className::instance($this);\n    }\n\n    /**\n     * Return native DatePeriod PHP object matching the current instance.\n     *\n     * @example\n     * ```\n     * var_dump(CarbonPeriod::create('2021-01-05', '2021-02-15')->toDatePeriod());\n     * ```\n     */\n    public function toDatePeriod(): DatePeriod\n    {\n        return $this->cast(DatePeriod::class);\n    }\n\n    /**\n     * Return `true` if the period has no custom filter and is guaranteed to be endless.\n     *\n     * Note that we can't check if a period is endless as soon as it has custom filters\n     * because filters can emit `CarbonPeriod::END_ITERATION` to stop the iteration in\n     * a way we can't predict without actually iterating the period.\n     */\n    public function isUnfilteredAndEndLess(): bool\n    {\n        foreach ($this->filters as $filter) {\n            switch ($filter) {\n                case [static::RECURRENCES_FILTER, null]:\n                    if ($this->carbonRecurrences !== null && is_finite($this->carbonRecurrences)) {\n                        return false;\n                    }\n\n                    break;\n\n                case [static::END_DATE_FILTER, null]:\n                    if ($this->endDate !== null && !$this->endDate->isEndOfTime()) {\n                        return false;\n                    }\n\n                    break;\n\n                default:\n                    return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Convert the date period into an array without changing current iteration state.\n     *\n     * @return CarbonInterface[]\n     */\n    public function toArray(): array\n    {\n        if ($this->isUnfilteredAndEndLess()) {\n            throw new EndLessPeriodException(\"Endless period can't be converted to array nor counted.\");\n        }\n\n        $state = [\n            $this->key,\n            $this->carbonCurrent ? $this->carbonCurrent->avoidMutation() : null,\n            $this->validationResult,\n        ];\n\n        $result = iterator_to_array($this);\n\n        [$this->key, $this->carbonCurrent, $this->validationResult] = $state;\n\n        return $result;\n    }\n\n    /**\n     * Count dates in the date period.\n     */\n    public function count(): int\n    {\n        return \\count($this->toArray());\n    }\n\n    /**\n     * Return the first date in the date period.\n     */\n    public function first(): ?CarbonInterface\n    {\n        if ($this->isUnfilteredAndEndLess()) {\n            foreach ($this as $date) {\n                $this->rewind();\n\n                return $date;\n            }\n\n            return null;\n        }\n\n        return ($this->toArray() ?: [])[0] ?? null;\n    }\n\n    /**\n     * Return the last date in the date period.\n     */\n    public function last(): ?CarbonInterface\n    {\n        $array = $this->toArray();\n\n        return $array ? $array[\\count($array) - 1] : null;\n    }\n\n    /**\n     * Convert the date period into a string.\n     */\n    public function __toString(): string\n    {\n        return $this->toString();\n    }\n\n    /**\n     * Add aliases for setters.\n     *\n     * CarbonPeriod::days(3)->hours(5)->invert()\n     *     ->sinceNow()->until('2010-01-10')\n     *     ->filter(...)\n     *     ->count()\n     *\n     * Note: We use magic method to let static and instance aliases with the same names.\n     */\n    public function __call(string $method, array $parameters): mixed\n    {\n        if (static::hasMacro($method)) {\n            return static::bindMacroContext($this, fn () => $this->callMacro($method, $parameters));\n        }\n\n        $roundedValue = $this->callRoundMethod($method, $parameters);\n\n        if ($roundedValue !== null) {\n            return $roundedValue;\n        }\n\n        $count = \\count($parameters);\n\n        switch ($method) {\n            case 'start':\n            case 'since':\n                if ($count === 0) {\n                    return $this->getStartDate();\n                }\n\n                self::setDefaultParameters($parameters, [\n                    [0, 'date', null],\n                ]);\n\n                return $this->setStartDate(...$parameters);\n\n            case 'sinceNow':\n                return $this->setStartDate(new Carbon(), ...$parameters);\n\n            case 'end':\n            case 'until':\n                if ($count === 0) {\n                    return $this->getEndDate();\n                }\n\n                self::setDefaultParameters($parameters, [\n                    [0, 'date', null],\n                ]);\n\n                return $this->setEndDate(...$parameters);\n\n            case 'untilNow':\n                return $this->setEndDate(new Carbon(), ...$parameters);\n\n            case 'dates':\n            case 'between':\n                self::setDefaultParameters($parameters, [\n                    [0, 'start', null],\n                    [1, 'end', null],\n                ]);\n\n                return $this->setDates(...$parameters);\n\n            case 'recurrences':\n            case 'times':\n                if ($count === 0) {\n                    return $this->getRecurrences();\n                }\n\n                self::setDefaultParameters($parameters, [\n                    [0, 'recurrences', null],\n                ]);\n\n                return $this->setRecurrences(...$parameters);\n\n            case 'options':\n                if ($count === 0) {\n                    return $this->getOptions();\n                }\n\n                self::setDefaultParameters($parameters, [\n                    [0, 'options', null],\n                ]);\n\n                return $this->setOptions(...$parameters);\n\n            case 'toggle':\n                self::setDefaultParameters($parameters, [\n                    [0, 'options', null],\n                ]);\n\n                return $this->toggleOptions(...$parameters);\n\n            case 'filter':\n            case 'push':\n                return $this->addFilter(...$parameters);\n\n            case 'prepend':\n                return $this->prependFilter(...$parameters);\n\n            case 'filters':\n                if ($count === 0) {\n                    return $this->getFilters();\n                }\n\n                self::setDefaultParameters($parameters, [\n                    [0, 'filters', []],\n                ]);\n\n                return $this->setFilters(...$parameters);\n\n            case 'interval':\n            case 'each':\n            case 'every':\n            case 'step':\n            case 'stepBy':\n                if ($count === 0) {\n                    return $this->getDateInterval();\n                }\n\n                return $this->setDateInterval(...$parameters);\n\n            case 'invert':\n                return $this->invertDateInterval();\n\n            case 'years':\n            case 'year':\n            case 'months':\n            case 'month':\n            case 'weeks':\n            case 'week':\n            case 'days':\n            case 'dayz':\n            case 'day':\n            case 'hours':\n            case 'hour':\n            case 'minutes':\n            case 'minute':\n            case 'seconds':\n            case 'second':\n            case 'milliseconds':\n            case 'millisecond':\n            case 'microseconds':\n            case 'microsecond':\n                return $this->setDateInterval((\n                    // Override default P1D when instantiating via fluent setters.\n                    [$this->isDefaultInterval ? new CarbonInterval('PT0S') : $this->dateInterval, $method]\n                )(...$parameters));\n        }\n\n        $dateClass = $this->dateClass;\n\n        if ($this->localStrictModeEnabled ?? $dateClass::isStrictModeEnabled()) {\n            throw new UnknownMethodException($method);\n        }\n\n        return $this;\n    }\n\n    /**\n     * Set the instance's timezone from a string or object and apply it to start/end.\n     */\n    public function setTimezone(DateTimeZone|string|int $timezone): static\n    {\n        $self = $this->copyIfImmutable();\n        $self->timezoneSetting = $timezone;\n        $self->timezone = CarbonTimeZone::instance($timezone);\n\n        if ($self->startDate) {\n            $self = $self->setStartDate($self->startDate->setTimezone($timezone));\n        }\n\n        if ($self->endDate) {\n            $self = $self->setEndDate($self->endDate->setTimezone($timezone));\n        }\n\n        return $self;\n    }\n\n    /**\n     * Set the instance's timezone from a string or object and add/subtract the offset difference to start/end.\n     */\n    public function shiftTimezone(DateTimeZone|string|int $timezone): static\n    {\n        $self = $this->copyIfImmutable();\n        $self->timezoneSetting = $timezone;\n        $self->timezone = CarbonTimeZone::instance($timezone);\n\n        if ($self->startDate) {\n            $self = $self->setStartDate($self->startDate->shiftTimezone($timezone));\n        }\n\n        if ($self->endDate) {\n            $self = $self->setEndDate($self->endDate->shiftTimezone($timezone));\n        }\n\n        return $self;\n    }\n\n    /**\n     * Returns the end is set, else calculated from start and recurrences.\n     *\n     * @param string|null $rounding Optional rounding 'floor', 'ceil', 'round' using the period interval.\n     *\n     * @return CarbonInterface\n     */\n    public function calculateEnd(?string $rounding = null): CarbonInterface\n    {\n        if ($end = $this->getEndDate($rounding)) {\n            return $end;\n        }\n\n        if ($this->dateInterval->isEmpty()) {\n            return $this->getStartDate($rounding);\n        }\n\n        $date = $this->getEndFromRecurrences() ?? $this->iterateUntilEnd();\n\n        if ($date && $rounding) {\n            $date = $date->avoidMutation()->round($this->getDateInterval(), $rounding);\n        }\n\n        return $date;\n    }\n\n    private function getEndFromRecurrences(): ?CarbonInterface\n    {\n        if ($this->carbonRecurrences === null) {\n            throw new UnreachableException(\n                \"Could not calculate period end without either explicit end or recurrences.\\n\".\n                \"If you're looking for a forever-period, use ->setRecurrences(INF).\",\n            );\n        }\n\n        if ($this->carbonRecurrences === INF) {\n            $start = $this->getStartDate();\n\n            return $start < $start->avoidMutation()->add($this->getDateInterval())\n                ? CarbonImmutable::endOfTime()\n                : CarbonImmutable::startOfTime();\n        }\n\n        if ($this->filters === [[static::RECURRENCES_FILTER, null]]) {\n            return $this->getStartDate()->avoidMutation()->add(\n                $this->getDateInterval()->times(\n                    $this->carbonRecurrences - ($this->isStartExcluded() ? 0 : 1),\n                ),\n            );\n        }\n\n        return null;\n    }\n\n    private function iterateUntilEnd(): ?CarbonInterface\n    {\n        $attempts = 0;\n        $date = null;\n\n        foreach ($this as $date) {\n            if (++$attempts > static::END_MAX_ATTEMPTS) {\n                throw new UnreachableException(\n                    'Could not calculate period end after iterating '.static::END_MAX_ATTEMPTS.' times.',\n                );\n            }\n        }\n\n        return $date;\n    }\n\n    /**\n     * Returns true if the current period overlaps the given one (if 1 parameter passed)\n     * or the period between 2 dates (if 2 parameters passed).\n     *\n     * @param CarbonPeriod|\\DateTimeInterface|Carbon|CarbonImmutable|string $rangeOrRangeStart\n     * @param \\DateTimeInterface|Carbon|CarbonImmutable|string|null         $rangeEnd\n     *\n     * @return bool\n     */\n    public function overlaps(mixed $rangeOrRangeStart, mixed $rangeEnd = null): bool\n    {\n        $range = $rangeEnd ? static::create($rangeOrRangeStart, $rangeEnd) : $rangeOrRangeStart;\n\n        if (!($range instanceof self)) {\n            $range = static::create($range);\n        }\n\n        [$start, $end] = $this->orderCouple($this->getStartDate(), $this->calculateEnd());\n        [$rangeStart, $rangeEnd] = $this->orderCouple($range->getStartDate(), $range->calculateEnd());\n\n        return $end > $rangeStart && $rangeEnd > $start;\n    }\n\n    /**\n     * Execute a given function on each date of the period.\n     *\n     * @example\n     * ```\n     * Carbon::create('2020-11-29')->daysUntil('2020-12-24')->forEach(function (Carbon $date) {\n     *   echo $date->diffInDays('2020-12-25').\" days before Christmas!\\n\";\n     * });\n     * ```\n     */\n    public function forEach(callable $callback): void\n    {\n        foreach ($this as $date) {\n            $callback($date);\n        }\n    }\n\n    /**\n     * Execute a given function on each date of the period and yield the result of this function.\n     *\n     * @example\n     * ```\n     * $period = Carbon::create('2020-11-29')->daysUntil('2020-12-24');\n     * echo implode(\"\\n\", iterator_to_array($period->map(function (Carbon $date) {\n     *   return $date->diffInDays('2020-12-25').' days before Christmas!';\n     * })));\n     * ```\n     */\n    public function map(callable $callback): Generator\n    {\n        foreach ($this as $date) {\n            yield $callback($date);\n        }\n    }\n\n    /**\n     * Determines if the instance is equal to another.\n     * Warning: if options differ, instances will never be equal.\n     *\n     * @see equalTo()\n     */\n    public function eq(mixed $period): bool\n    {\n        return $this->equalTo($period);\n    }\n\n    /**\n     * Determines if the instance is equal to another.\n     * Warning: if options differ, instances will never be equal.\n     */\n    public function equalTo(mixed $period): bool\n    {\n        if (!($period instanceof self)) {\n            $period = self::make($period);\n        }\n\n        $end = $this->getEndDate();\n\n        return $period !== null\n            && $this->getDateInterval()->eq($period->getDateInterval())\n            && $this->getStartDate()->eq($period->getStartDate())\n            && ($end ? $end->eq($period->getEndDate()) : $this->getRecurrences() === $period->getRecurrences())\n            && ($this->getOptions() & (~static::IMMUTABLE)) === ($period->getOptions() & (~static::IMMUTABLE));\n    }\n\n    /**\n     * Determines if the instance is not equal to another.\n     * Warning: if options differ, instances will never be equal.\n     *\n     * @see notEqualTo()\n     */\n    public function ne(mixed $period): bool\n    {\n        return $this->notEqualTo($period);\n    }\n\n    /**\n     * Determines if the instance is not equal to another.\n     * Warning: if options differ, instances will never be equal.\n     */\n    public function notEqualTo(mixed $period): bool\n    {\n        return !$this->eq($period);\n    }\n\n    /**\n     * Determines if the start date is before another given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function startsBefore(mixed $date = null): bool\n    {\n        return $this->getStartDate()->lessThan($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the start date is before or the same as a given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function startsBeforeOrAt(mixed $date = null): bool\n    {\n        return $this->getStartDate()->lessThanOrEqualTo($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the start date is after another given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function startsAfter(mixed $date = null): bool\n    {\n        return $this->getStartDate()->greaterThan($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the start date is after or the same as a given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function startsAfterOrAt(mixed $date = null): bool\n    {\n        return $this->getStartDate()->greaterThanOrEqualTo($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the start date is the same as a given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function startsAt(mixed $date = null): bool\n    {\n        return $this->getStartDate()->equalTo($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the end date is before another given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function endsBefore(mixed $date = null): bool\n    {\n        return $this->calculateEnd()->lessThan($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the end date is before or the same as a given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function endsBeforeOrAt(mixed $date = null): bool\n    {\n        return $this->calculateEnd()->lessThanOrEqualTo($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the end date is after another given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function endsAfter(mixed $date = null): bool\n    {\n        return $this->calculateEnd()->greaterThan($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the end date is after or the same as a given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function endsAfterOrAt(mixed $date = null): bool\n    {\n        return $this->calculateEnd()->greaterThanOrEqualTo($this->resolveCarbon($date));\n    }\n\n    /**\n     * Determines if the end date is the same as a given date.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function endsAt(mixed $date = null): bool\n    {\n        return $this->calculateEnd()->equalTo($this->resolveCarbon($date));\n    }\n\n    /**\n     * Return true if start date is now or later.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function isStarted(): bool\n    {\n        return $this->startsBeforeOrAt();\n    }\n\n    /**\n     * Return true if end date is now or later.\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function isEnded(): bool\n    {\n        return $this->endsBeforeOrAt();\n    }\n\n    /**\n     * Return true if now is between start date (included) and end date (excluded).\n     * (Rather start/end are included by options is ignored.)\n     */\n    public function isInProgress(): bool\n    {\n        return $this->isStarted() && !$this->isEnded();\n    }\n\n    /**\n     * Round the current instance at the given unit with given precision if specified and the given function.\n     */\n    public function roundUnit(\n        string $unit,\n        DateInterval|float|int|string|null $precision = 1,\n        callable|string $function = 'round',\n    ): static {\n        $self = $this->copyIfImmutable();\n        $self = $self->setStartDate($self->getStartDate()->roundUnit($unit, $precision, $function));\n\n        if ($self->endDate) {\n            $self = $self->setEndDate($self->getEndDate()->roundUnit($unit, $precision, $function));\n        }\n\n        return $self->setDateInterval($self->getDateInterval()->roundUnit($unit, $precision, $function));\n    }\n\n    /**\n     * Truncate the current instance at the given unit with given precision if specified.\n     */\n    public function floorUnit(string $unit, DateInterval|float|int|string|null $precision = 1): static\n    {\n        return $this->roundUnit($unit, $precision, 'floor');\n    }\n\n    /**\n     * Ceil the current instance at the given unit with given precision if specified.\n     */\n    public function ceilUnit(string $unit, DateInterval|float|int|string|null $precision = 1): static\n    {\n        return $this->roundUnit($unit, $precision, 'ceil');\n    }\n\n    /**\n     * Round the current instance second with given precision if specified (else period interval is used).\n     */\n    public function round(\n        DateInterval|float|int|string|null $precision = null,\n        callable|string $function = 'round',\n    ): static {\n        return $this->roundWith(\n            $precision ?? $this->getDateInterval()->setLocalTranslator(TranslatorImmutable::get('en'))->forHumans(),\n            $function\n        );\n    }\n\n    /**\n     * Round the current instance second with given precision if specified (else period interval is used).\n     */\n    public function floor(DateInterval|float|int|string|null $precision = null): static\n    {\n        return $this->round($precision, 'floor');\n    }\n\n    /**\n     * Ceil the current instance second with given precision if specified (else period interval is used).\n     */\n    public function ceil(DateInterval|float|int|string|null $precision = null): static\n    {\n        return $this->round($precision, 'ceil');\n    }\n\n    /**\n     * Specify data which should be serialized to JSON.\n     *\n     * @link https://php.net/manual/en/jsonserializable.jsonserialize.php\n     *\n     * @return CarbonInterface[]\n     */\n    public function jsonSerialize(): array\n    {\n        return $this->toArray();\n    }\n\n    /**\n     * Return true if the given date is between start and end.\n     */\n    public function contains(mixed $date = null): bool\n    {\n        $startMethod = 'startsBefore'.($this->isStartIncluded() ? 'OrAt' : '');\n        $endMethod = 'endsAfter'.($this->isEndIncluded() ? 'OrAt' : '');\n\n        return $this->$startMethod($date) && $this->$endMethod($date);\n    }\n\n    /**\n     * Return true if the current period follows a given other period (with no overlap).\n     * For instance, [2019-08-01 -> 2019-08-12] follows [2019-07-29 -> 2019-07-31]\n     * Note than in this example, follows() would be false if 2019-08-01 or 2019-07-31 was excluded by options.\n     */\n    public function follows(mixed $period, mixed ...$arguments): bool\n    {\n        $period = $this->resolveCarbonPeriod($period, ...$arguments);\n\n        return $this->getIncludedStartDate()->equalTo($period->getIncludedEndDate()->add($period->getDateInterval()));\n    }\n\n    /**\n     * Return true if the given other period follows the current one (with no overlap).\n     * For instance, [2019-07-29 -> 2019-07-31] is followed by [2019-08-01 -> 2019-08-12]\n     * Note than in this example, isFollowedBy() would be false if 2019-08-01 or 2019-07-31 was excluded by options.\n     */\n    public function isFollowedBy(mixed $period, mixed ...$arguments): bool\n    {\n        $period = $this->resolveCarbonPeriod($period, ...$arguments);\n\n        return $period->follows($this);\n    }\n\n    /**\n     * Return true if the given period either follows or is followed by the current one.\n     *\n     * @see follows()\n     * @see isFollowedBy()\n     */\n    public function isConsecutiveWith(mixed $period, mixed ...$arguments): bool\n    {\n        return $this->follows($period, ...$arguments) || $this->isFollowedBy($period, ...$arguments);\n    }\n\n    public function __debugInfo(): array\n    {\n        $info = $this->baseDebugInfo();\n        unset(\n            $info['start'],\n            $info['end'],\n            $info['interval'],\n            $info['include_start_date'],\n            $info['include_end_date'],\n            $info['constructed'],\n            $info[\"\\0*\\0constructed\"],\n        );\n\n        return $info;\n    }\n\n    public function __unserialize(array $data): void\n    {\n        try {\n            $values = array_combine(\n                array_map(\n                    static fn (string $key): string => preg_replace('/^\\0\\*\\0/', '', $key),\n                    array_keys($data),\n                ),\n                $data,\n            );\n\n            $this->initializeSerialization($values);\n\n            foreach ($values as $key => $value) {\n                if ($value === null) {\n                    continue;\n                }\n\n                $property = match ($key) {\n                    'tzName' => $this->setTimezone(...),\n                    'options' => $this->setOptions(...),\n                    'recurrences' => $this->setRecurrences(...),\n                    'current' => function (mixed $current): void {\n                        if (!($current instanceof CarbonInterface)) {\n                            $current = $this->resolveCarbon($current);\n                        }\n\n                        $this->carbonCurrent = $current;\n                    },\n                    'start' => 'startDate',\n                    'interval' => $this->setDateInterval(...),\n                    'end' => 'endDate',\n                    'key' => null,\n                    'include_start_date' => function (bool $included): void {\n                        $this->excludeStartDate(!$included);\n                    },\n                    'include_end_date' => function (bool $included): void {\n                        $this->excludeEndDate(!$included);\n                    },\n                    default => $key,\n                };\n\n                if ($property === null) {\n                    continue;\n                }\n\n                if (\\is_callable($property)) {\n                    $property($value);\n\n                    continue;\n                }\n\n                if ($value instanceof DateTimeInterface && !($value instanceof CarbonInterface)) {\n                    $value = ($value instanceof DateTime)\n                        ? Carbon::instance($value)\n                        : CarbonImmutable::instance($value);\n                }\n\n                try {\n                    $this->$property = $value;\n                } catch (Throwable) {\n                    // Must be ignored for backward-compatibility\n                }\n            }\n\n            if (\\array_key_exists('carbonRecurrences', $values)) {\n                $this->carbonRecurrences = $values['carbonRecurrences'];\n            } elseif (((int) ($values['recurrences'] ?? 0)) <= 1 && $this->endDate !== null) {\n                $this->carbonRecurrences = null;\n            }\n        } catch (Throwable $e) {\n            // @codeCoverageIgnoreStart\n            if (!method_exists(parent::class, '__unserialize')) {\n                throw $e;\n            }\n\n            parent::__unserialize($data);\n            // @codeCoverageIgnoreEnd\n        }\n    }\n\n    /**\n     * Update properties after removing built-in filters.\n     */\n    protected function updateInternalState(): void\n    {\n        if (!$this->hasFilter(static::END_DATE_FILTER)) {\n            $this->endDate = null;\n        }\n\n        if (!$this->hasFilter(static::RECURRENCES_FILTER)) {\n            $this->carbonRecurrences = null;\n        }\n    }\n\n    /**\n     * Create a filter tuple from raw parameters.\n     *\n     * Will create an automatic filter callback for one of Carbon's is* methods.\n     */\n    protected function createFilterTuple(array $parameters): array\n    {\n        $method = array_shift($parameters);\n\n        if (!$this->isCarbonPredicateMethod($method)) {\n            return [$method, array_shift($parameters)];\n        }\n\n        return [static fn ($date) => ([$date, $method])(...$parameters), $method];\n    }\n\n    /**\n     * Return whether given callable is a string pointing to one of Carbon's is* methods\n     * and should be automatically converted to a filter callback.\n     */\n    protected function isCarbonPredicateMethod(callable|string $callable): bool\n    {\n        return \\is_string($callable) && str_starts_with($callable, 'is') &&\n            (method_exists($this->dateClass, $callable) || ([$this->dateClass, 'hasMacro'])($callable));\n    }\n\n    /**\n     * Recurrences filter callback (limits number of recurrences).\n     *\n     * @SuppressWarnings(UnusedFormalParameter)\n     */\n    protected function filterRecurrences(CarbonInterface $current, int $key): bool|callable\n    {\n        if ($key < $this->carbonRecurrences) {\n            return true;\n        }\n\n        return static::END_ITERATION;\n    }\n\n    /**\n     * End date filter callback.\n     *\n     * @return bool|static::END_ITERATION\n     */\n    protected function filterEndDate(CarbonInterface $current): bool|callable\n    {\n        if (!$this->isEndExcluded() && $current == $this->endDate) {\n            return true;\n        }\n\n        if ($this->dateInterval->invert ? $current > $this->endDate : $current < $this->endDate) {\n            return true;\n        }\n\n        return static::END_ITERATION;\n    }\n\n    /**\n     * End iteration filter callback.\n     *\n     * @return static::END_ITERATION\n     */\n    protected function endIteration(): callable\n    {\n        return static::END_ITERATION;\n    }\n\n    /**\n     * Handle change of the parameters.\n     */\n    protected function handleChangedParameters(): void\n    {\n        if (($this->getOptions() & static::IMMUTABLE) && $this->dateClass === Carbon::class) {\n            $this->dateClass = CarbonImmutable::class;\n        } elseif (!($this->getOptions() & static::IMMUTABLE) && $this->dateClass === CarbonImmutable::class) {\n            $this->dateClass = Carbon::class;\n        }\n\n        $this->validationResult = null;\n    }\n\n    /**\n     * Validate current date and stop iteration when necessary.\n     *\n     * Returns true when current date is valid, false if it is not, or static::END_ITERATION\n     * when iteration should be stopped.\n     *\n     * @return bool|static::END_ITERATION\n     */\n    protected function validateCurrentDate(): bool|callable\n    {\n        if ($this->carbonCurrent === null) {\n            $this->rewind();\n        }\n\n        // Check after the first rewind to avoid repeating the initial validation.\n        return $this->validationResult ?? ($this->validationResult = $this->checkFilters());\n    }\n\n    /**\n     * Check whether current value and key pass all the filters.\n     *\n     * @return bool|static::END_ITERATION\n     */\n    protected function checkFilters(): bool|callable\n    {\n        $current = $this->prepareForReturn($this->carbonCurrent);\n\n        foreach ($this->filters as $tuple) {\n            $result = \\call_user_func($tuple[0], $current->avoidMutation(), $this->key, $this);\n\n            if ($result === static::END_ITERATION) {\n                return static::END_ITERATION;\n            }\n\n            if (!$result) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Prepare given date to be returned to the external logic.\n     *\n     * @param CarbonInterface $date\n     *\n     * @return CarbonInterface\n     */\n    protected function prepareForReturn(CarbonInterface $date)\n    {\n        $date = ([$this->dateClass, 'make'])($date);\n\n        if ($this->timezone) {\n            return $date->setTimezone($this->timezone);\n        }\n\n        return $date;\n    }\n\n    /**\n     * Keep incrementing the current date until a valid date is found or the iteration is ended.\n     *\n     * @throws RuntimeException\n     */\n    protected function incrementCurrentDateUntilValid(): void\n    {\n        $attempts = 0;\n\n        do {\n            $this->carbonCurrent = $this->carbonCurrent->add($this->dateInterval);\n\n            $this->validationResult = null;\n\n            if (++$attempts > static::NEXT_MAX_ATTEMPTS) {\n                throw new UnreachableException('Could not find next valid date.');\n            }\n        } while ($this->validateCurrentDate() === false);\n    }\n\n    /**\n     * Call given macro.\n     */\n    protected function callMacro(string $name, array $parameters): mixed\n    {\n        $macro = static::$macros[$name];\n\n        if ($macro instanceof Closure) {\n            $boundMacro = @$macro->bindTo($this, static::class) ?: @$macro->bindTo(null, static::class);\n\n            return ($boundMacro ?: $macro)(...$parameters);\n        }\n\n        return $macro(...$parameters);\n    }\n\n    /**\n     * Return the Carbon instance passed through, a now instance in the same timezone\n     * if null given or parse the input if string given.\n     *\n     * @param \\Carbon\\Carbon|\\Carbon\\CarbonPeriod|\\Carbon\\CarbonInterval|\\DateInterval|\\DatePeriod|\\DateTimeInterface|string|null $date\n     *\n     * @return \\Carbon\\CarbonInterface\n     */\n    protected function resolveCarbon($date = null)\n    {\n        return $this->getStartDate()->nowWithSameTz()->carbonize($date);\n    }\n\n    /**\n     * Resolve passed arguments or DatePeriod to a CarbonPeriod object.\n     */\n    protected function resolveCarbonPeriod(mixed $period, mixed ...$arguments): self\n    {\n        if ($period instanceof self) {\n            return $period;\n        }\n\n        return $period instanceof DatePeriod\n            ? static::instance($period)\n            : static::create($period, ...$arguments);\n    }\n\n    private function orderCouple($first, $second): array\n    {\n        return $first > $second ? [$second, $first] : [$first, $second];\n    }\n\n    private function makeDateTime($value): ?DateTimeInterface\n    {\n        if ($value instanceof DateTimeInterface) {\n            return $value;\n        }\n\n        if ($value instanceof WeekDay || $value instanceof Month) {\n            $dateClass = $this->dateClass;\n\n            return new $dateClass($value, $this->timezoneSetting);\n        }\n\n        if (\\is_string($value)) {\n            $value = trim($value);\n\n            if (!preg_match('/^P[\\dT]/', $value) &&\n                !preg_match('/^R\\d/', $value) &&\n                preg_match('/[a-z\\d]/i', $value)\n            ) {\n                $dateClass = $this->dateClass;\n\n                return $dateClass::parse($value, $this->timezoneSetting);\n            }\n        }\n\n        return null;\n    }\n\n    private function isInfiniteDate($date): bool\n    {\n        return $date instanceof CarbonInterface && ($date->isEndOfTime() || $date->isStartOfTime());\n    }\n\n    private function rawDate($date): ?DateTimeInterface\n    {\n        if ($date === false || $date === null) {\n            return null;\n        }\n\n        if ($date instanceof CarbonInterface) {\n            return $date->isMutable()\n                ? $date->toDateTime()\n                : $date->toDateTimeImmutable();\n        }\n\n        if (\\in_array(\\get_class($date), [DateTime::class, DateTimeImmutable::class], true)) {\n            return $date;\n        }\n\n        $class = $date instanceof DateTime ? DateTime::class : DateTimeImmutable::class;\n\n        return new $class($date->format('Y-m-d H:i:s.u'), $date->getTimezone());\n    }\n\n    private static function setDefaultParameters(array &$parameters, array $defaults): void\n    {\n        foreach ($defaults as [$index, $name, $value]) {\n            if (!\\array_key_exists($index, $parameters) && !\\array_key_exists($name, $parameters)) {\n                $parameters[$index] = $value;\n            }\n        }\n    }\n\n    private function setFromAssociativeArray(array $parameters): void\n    {\n        if (isset($parameters['start'])) {\n            $this->setStartDate($parameters['start']);\n        }\n\n        if (isset($parameters['start'])) {\n            $this->setStartDate($parameters['start']);\n        }\n\n        if (isset($parameters['end'])) {\n            $this->setEndDate($parameters['end']);\n        }\n\n        if (isset($parameters['recurrences'])) {\n            $this->setRecurrences($parameters['recurrences']);\n        }\n\n        if (isset($parameters['interval'])) {\n            $this->setDateInterval($parameters['interval']);\n        }\n\n        if (isset($parameters['options'])) {\n            $this->setOptions($parameters['options']);\n        }\n    }\n\n    private function configureTimezone(DateTimeZone $timezone, array $sortedArguments, array $originalArguments): array\n    {\n        $this->setTimezone($timezone);\n\n        if (\\is_string($originalArguments['start'] ?? null)) {\n            $sortedArguments['start'] = $this->makeDateTime($originalArguments['start']);\n        }\n\n        if (\\is_string($originalArguments['end'] ?? null)) {\n            $sortedArguments['end'] = $this->makeDateTime($originalArguments['end']);\n        }\n\n        return $sortedArguments;\n    }\n\n    private function initializeSerialization(array $values): void\n    {\n        $serializationBase = [\n            'start' => $values['start'] ?? $values['startDate'] ?? null,\n            'current' => $values['current'] ?? $values['carbonCurrent'] ?? null,\n            'end' => $values['end'] ?? $values['endDate'] ?? null,\n            'interval' => $values['interval'] ?? $values['dateInterval'] ?? null,\n            'recurrences' => max(1, (int) ($values['recurrences'] ?? $values['carbonRecurrences'] ?? 1)),\n            'include_start_date' => $values['include_start_date'] ?? true,\n            'include_end_date' => $values['include_end_date'] ?? false,\n        ];\n\n        foreach (['start', 'current', 'end'] as $dateProperty) {\n            if ($serializationBase[$dateProperty] instanceof Carbon) {\n                $serializationBase[$dateProperty] = $serializationBase[$dateProperty]->toDateTime();\n            } elseif ($serializationBase[$dateProperty] instanceof CarbonInterface) {\n                $serializationBase[$dateProperty] = $serializationBase[$dateProperty]->toDateTimeImmutable();\n            }\n        }\n\n        if ($serializationBase['interval'] instanceof CarbonInterval) {\n            $serializationBase['interval'] = $serializationBase['interval']->toDateInterval();\n        }\n\n        // @codeCoverageIgnoreStart\n        if (method_exists(parent::class, '__unserialize')) {\n            parent::__unserialize($serializationBase);\n\n            return;\n        }\n\n        $excludeStart = !($values['include_start_date'] ?? true);\n        $includeEnd = $values['include_end_date'] ?? true;\n\n        parent::__construct(\n            $serializationBase['start'],\n            $serializationBase['interval'],\n            $serializationBase['end'] ?? $serializationBase['recurrences'],\n            ($excludeStart ? self::EXCLUDE_START_DATE : 0) | ($includeEnd && \\defined('DatePeriod::INCLUDE_END_DATE') ? self::INCLUDE_END_DATE : 0),\n        );\n        // @codeCoverageIgnoreEnd\n    }\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nesbot/carbon/src/Carbon/TranslatorStrongTypeInterface.php","ext":"php","size":577,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\n/**\n * This file is part of the Carbon package.\n *\n * (c) Brian Nesbitt <brian@nesbot.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Carbon;\n\nuse Symfony\\Component\\Translation\\MessageCatalogueInterface;\n\n/**\n * Mark translator using strong type from symfony/translation >= 6.\n */\ninterface TranslatorStrongTypeInterface\n{\n    public function getFromCatalogue(MessageCatalogueInterface $catalogue, string $id, string $domain = 'messages');\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/readme.md","ext":"md","size":16272,"mtime":1756373566,"type":"text","content":"# Nette Schema\n\n[![Downloads this Month](https://img.shields.io/packagist/dm/nette/schema.svg)](https://packagist.org/packages/nette/schema)\n[![Tests](https://github.com/nette/schema/workflows/Tests/badge.svg?branch=master)](https://github.com/nette/schema/actions)\n[![Coverage Status](https://coveralls.io/repos/github/nette/schema/badge.svg?branch=master)](https://coveralls.io/github/nette/schema?branch=master)\n[![Latest Stable Version](https://poser.pugx.org/nette/schema/v/stable)](https://github.com/nette/schema/releases)\n[![License](https://img.shields.io/badge/license-New%20BSD-blue.svg)](https://github.com/nette/schema/blob/master/license.md)\n\n\nIntroduction\n============\n\nA practical library for validation and normalization of data structures against a given schema with a smart & easy-to-understand API.\n\nDocumentation can be found on the [website](https://doc.nette.org/schema).\n\nInstallation:\n\n```shell\ncomposer require nette/schema\n```\n\nIt requires PHP version 8.1 and supports PHP up to 8.5.\n\n\n[Support Me](https://github.com/sponsors/dg)\n--------------------------------------------\n\nDo you like Nette Schema? Are you looking forward to the new features?\n\n[![Buy me a coffee](https://files.nette.org/icons/donation-3.svg)](https://github.com/sponsors/dg)\n\nThank you!\n\n\nBasic Usage\n-----------\n\nIn variable `$schema` we have a validation schema (what exactly this means and how to create it we will say later) and in variable `$data` we have a data structure that we want to validate and normalize. This can be, for example, data sent by the user through an API, configuration file, etc.\n\nThe task is handled by the [Nette\\Schema\\Processor](https://api.nette.org/schema/master/Nette/Schema/Processor.html) class, which processes the input and either returns normalized data or throws an [Nette\\Schema\\ValidationException](https://api.nette.org/schema/master/Nette/Schema/ValidationException.html) exception on error.\n\n```php\n$processor = new Nette\\Schema\\Processor;\n\ntry {\n\t$normalized = $processor->process($schema, $data);\n} catch (Nette\\Schema\\ValidationException $e) {\n\techo 'Data is invalid: ' . $e->getMessage();\n}\n```\n\nMethod `$e->getMessages()` returns array of all message strings and `$e->getMessageObjects()` return all messages as [Nette\\Schema\\Message](https://api.nette.org/schema/master/Nette/Schema/Message.html) objects.\n\n\nDefining Schema\n---------------\n\nAnd now let's create a schema. The class [Nette\\Schema\\Expect](https://api.nette.org/schema/master/Nette/Schema/Expect.html) is used to define it, we actually define expectations of what the data should look like. Let's say that the input data must be a structure (e.g. an array) containing elements `processRefund` of type bool and `refundAmount` of type int.\n\n```php\nuse Nette\\Schema\\Expect;\n\n$schema = Expect::structure([\n\t'processRefund' => Expect::bool(),\n\t'refundAmount' => Expect::int(),\n]);\n```\n\nWe believe that the schema definition looks clear, even if you see it for the very first time.\n\nLets send the following data for validation:\n\n```php\n$data = [\n\t'processRefund' => true,\n\t'refundAmount' => 17,\n];\n\n$normalized = $processor->process($schema, $data); // OK, it passes\n```\n\nThe output, i.e. the value `$normalized`, is the object `stdClass`. If we want the output to be an array, we add a cast to schema `Expect::structure([...])->castTo('array')`.\n\nAll elements of the structure are optional and have a default value `null`. Example:\n\n```php\n$data = [\n\t'refundAmount' => 17,\n];\n\n$normalized = $processor->process($schema, $data); // OK, it passes\n// $normalized = {'processRefund' => null, 'refundAmount' => 17}\n```\n\nThe fact that the default value is `null` does not mean that it would be accepted in the input data `'processRefund' => null`. No, the input must be boolean, i.e. only `true` or `false`. We would have to explicitly allow `null` via `Expect::bool()->nullable()`.\n\nAn item can be made mandatory using `Expect::bool()->required()`. We change the default value to `false` using `Expect::bool()->default(false)` or shortly using `Expect::bool(false)`.\n\nAnd what if we wanted to accept `1` and `0` besides booleans? Then we list the allowed values, which we will also normalize to boolean:\n\n```php\n$schema = Expect::structure([\n\t'processRefund' => Expect::anyOf(true, false, 1, 0)->castTo('bool'),\n\t'refundAmount' => Expect::int(),\n]);\n\n$normalized = $processor->process($schema, $data);\nis_bool($normalized->processRefund); // true\n```\n\nNow you know the basics of how the schema is defined and how the individual elements of the structure behave. We will now show what all the other elements can be used in defining a schema.\n\n\nData Types: type()\n------------------\n\nAll standard PHP data types can be listed in the schema:\n\n```php\nExpect::string($default = null)\nExpect::int($default = null)\nExpect::float($default = null)\nExpect::bool($default = null)\nExpect::null()\nExpect::array($default = [])\n```\n\nAnd then all types [supported by the Validators](https://doc.nette.org/validators#toc-validation-rules) via `Expect::type('scalar')` or abbreviated `Expect::scalar()`. Also class or interface names are accepted, e.g. `Expect::type('AddressEntity')`.\n\nYou can also use union notation:\n\n```php\nExpect::type('bool|string|array')\n```\n\nThe default value is always `null` except for `array` and `list`, where it is an empty array. (A list is an array indexed in ascending order of numeric keys from zero, that is, a non-associative array).\n\n\nArray of Values: arrayOf() listOf()\n-----------------------------------\n\nThe array is too general structure, it is more useful to specify exactly what elements it can contain. For example, an array whose elements can only be strings:\n\n```php\n$schema = Expect::arrayOf('string');\n\n$processor->process($schema, ['hello', 'world']); // OK\n$processor->process($schema, ['a' => 'hello', 'b' => 'world']); // OK\n$processor->process($schema, ['key' => 123]); // ERROR: 123 is not a string\n```\n\nThe second parameter can be used to specify keys (since version 1.2):\n\n```php\n$schema = Expect::arrayOf('string', 'int');\n\n$processor->process($schema, ['hello', 'world']); // OK\n$processor->process($schema, ['a' => 'hello']); // ERROR: 'a' is not int\n```\n\nThe list is an indexed array:\n\n```php\n$schema = Expect::listOf('string');\n\n$processor->process($schema, ['a', 'b']); // OK\n$processor->process($schema, ['a', 123]); // ERROR: 123 is not a string\n$processor->process($schema, ['key' => 'a']); // ERROR: is not a list\n$processor->process($schema, [1 => 'a', 0 => 'b']); // ERROR: is not a list\n```\n\nThe parameter can also be a schema, so we can write:\n\n```php\nExpect::arrayOf(Expect::bool())\n```\n\nThe default value is an empty array. If you specify a default value, it will be merged with the passed data. This can be disabled using `mergeDefaults(false)`.\n\n\nEnumeration: anyOf()\n--------------------\n\n`anyOf()` is a set of values ​​or schemas that a value can be. Here's how to write an array of elements that can be either `'a'`, `true`, or `null`:\n\n```php\n$schema = Expect::listOf(\n\tExpect::anyOf('a', true, null),\n);\n\n$processor->process($schema, ['a', true, null, 'a']); // OK\n$processor->process($schema, ['a', false]); // ERROR: false does not belong there\n```\n\nThe enumeration elements can also be schemas:\n\n```php\n$schema = Expect::listOf(\n\tExpect::anyOf(Expect::string(), true, null),\n);\n\n$processor->process($schema, ['foo', true, null, 'bar']); // OK\n$processor->process($schema, [123]); // ERROR\n```\n\nThe `anyOf()` method accepts variants as individual parameters, not as array. To pass it an array of values, use the unpacking operator `anyOf(...$variants)`.\n\nThe default value is `null`. Use the `firstIsDefault()` method to make the first element the default:\n\n```php\n// default is 'hello'\nExpect::anyOf(Expect::string('hello'), true, null)->firstIsDefault();\n```\n\n\nStructures\n----------\n\nStructures are objects with defined keys. Each of these key => value pairs is referred to as a \"property\":\n\nStructures accept arrays and objects and return objects `stdClass` (unless you change it with `castTo('array')`, etc.).\n\nBy default, all properties are optional and have a default value of `null`. You can define mandatory properties using `required()`:\n\n```php\n$schema = Expect::structure([\n\t'required' => Expect::string()->required(),\n\t'optional' => Expect::string(), // the default value is null\n]);\n\n$processor->process($schema, ['optional' => '']);\n// ERROR: option 'required' is missing\n\n$processor->process($schema, ['required' => 'foo']);\n// OK, returns {'required' => 'foo', 'optional' => null}\n```\n\nIf you do not want to output properties with only a default value, use `skipDefaults()`:\n\n```php\n$schema = Expect::structure([\n\t'required' => Expect::string()->required(),\n\t'optional' => Expect::string(),\n])->skipDefaults();\n\n$processor->process($schema, ['required' => 'foo']);\n// OK, returns {'required' => 'foo'}\n```\n\nAlthough `null` is the default value of the `optional` property, it is not allowed in the input data (the value must be a string). Properties accepting `null` are defined using `nullable()`:\n\n```php\n$schema = Expect::structure([\n\t'optional' => Expect::string(),\n\t'nullable' => Expect::string()->nullable(),\n]);\n\n$processor->process($schema, ['optional' => null]);\n// ERROR: 'optional' expects to be string, null given.\n\n$processor->process($schema, ['nullable' => null]);\n// OK, returns {'optional' => null, 'nullable' => null}\n```\n\nBy default, there can be no extra items in the input data:\n\n```php\n$schema = Expect::structure([\n\t'key' => Expect::string(),\n]);\n\n$processor->process($schema, ['additional' => 1]);\n// ERROR: Unexpected item 'additional'\n```\n\nWhich we can change with `otherItems()`. As a parameter, we will specify the schema for each extra element:\n\n```php\n$schema = Expect::structure([\n\t'key' => Expect::string(),\n])->otherItems(Expect::int());\n\n$processor->process($schema, ['additional' => 1]); // OK\n$processor->process($schema, ['additional' => true]); // ERROR\n```\n\n\nDeprecations\n------------\n\nYou can deprecate property using the `deprecated([string $message])` method. Deprecation notices are returned by `$processor->getWarnings()`:\n\n```php\n$schema = Expect::structure([\n\t'old' => Expect::int()->deprecated('The item %path% is deprecated'),\n]);\n\n$processor->process($schema, ['old' => 1]); // OK\n$processor->getWarnings(); // [\"The item 'old' is deprecated\"]\n```\n\n\nRanges: min() max()\n-------------------\n\nUse `min()` and `max()` to limit the number of elements for arrays:\n\n```php\n// array, at least 10 items, maximum 20 items\nExpect::array()->min(10)->max(20);\n```\n\nFor strings, limit their length:\n\n```php\n// string, at least 10 characters long, maximum 20 characters\nExpect::string()->min(10)->max(20);\n```\n\nFor numbers, limit their value:\n\n```php\n// integer, between 10 and 20 inclusive\nExpect::int()->min(10)->max(20);\n```\n\nOf course, it is possible to mention only `min()`, or only `max()`:\n\n```php\n// string, maximum 20 characters\nExpect::string()->max(20);\n```\n\n\nRegular Expressions: pattern()\n------------------------------\n\nUsing `pattern()`, you can specify a regular expression which the **whole** input string must match (i.e. as if it were wrapped in characters `^` a `$`):\n\n```php\n// just 9 digits\nExpect::string()->pattern('\\d{9}');\n```\n\n\nCustom Assertions: assert()\n---------------------------\n\nYou can add any other restrictions using `assert(callable $fn)`.\n\n```php\n$countIsEven = fn($v) => count($v) % 2 === 0;\n\n$schema = Expect::arrayOf('string')\n\t->assert($countIsEven); // the count must be even\n\n$processor->process($schema, ['a', 'b']); // OK\n$processor->process($schema, ['a', 'b', 'c']); // ERROR: 3 is not even\n```\n\nOr\n\n```php\nExpect::string()->assert('is_file'); // the file must exist\n```\n\nYou can add your own description for each assertion. It will be part of the error message.\n\n```php\n$schema = Expect::arrayOf('string')\n\t->assert($countIsEven, 'Even items in array');\n\n$processor->process($schema, ['a', 'b', 'c']);\n// Failed assertion \"Even items in array\" for item with value array.\n```\n\nThe method can be called repeatedly to add multiple constraints. It can be intermixed with calls to `transform()` and `castTo()`.\n\n\nTransformation: transform()\n---------------------------\n\nSuccessfully validated data can be modified using a custom function:\n\n```php\n// conversion to uppercase:\nExpect::string()->transform(fn(string $s) => strtoupper($s));\n```\n\nThe method can be called repeatedly to add multiple transformations. It can be intermixed with calls to `assert()` and `castTo()`. The operations will be executed in the order in which they are declared:\n\n```php\nExpect::type('string|int')\n\t->castTo('string')\n\t->assert('ctype_lower', 'All characters must be lowercased')\n\t->transform(fn(string $s) => strtoupper($s)); // conversion to uppercase\n```\n\nThe `transform()` method can both transform and validate the value simultaneously. This is often simpler and less redundant than chaining `transform()` and `assert()`. For this purpose, the function receives a [Nette\\Schema\\Context](https://api.nette.org/schema/master/Nette/Schema/Context.html) object with an `addError()` method, which can be used to add information about validation issues:\n\n```php\nExpect::string()\n\t->transform(function (string $s, Nette\\Schema\\Context $context) {\n\t\tif (!ctype_lower($s)) {\n\t\t\t$context->addError('All characters must be lowercased', 'my.case.error');\n\t\t\treturn null;\n\t\t}\n\n\t\treturn strtoupper($s);\n\t});\n```\n\n\nCasting: castTo()\n-----------------\n\nSuccessfully validated data can be cast:\n\n```php\nExpect::scalar()->castTo('string');\n```\n\nIn addition to native PHP types, you can also cast to classes. It distinguishes whether it is a simple class without a constructor or a class with a constructor. If the class has no constructor, an instance of it is created and all elements of the structure are written to its properties:\n\n```php\nclass Info\n{\n\tpublic bool $processRefund;\n\tpublic int $refundAmount;\n}\n\nExpect::structure([\n\t'processRefund' => Expect::bool(),\n\t'refundAmount' => Expect::int(),\n])->castTo(Info::class);\n\n// creates '$obj = new Info' and writes to $obj->processRefund and $obj->refundAmount\n```\n\nIf the class has a constructor, the elements of the structure are passed as named parameters to the constructor:\n\n```php\nclass Info\n{\n\tpublic function __construct(\n\t\tpublic bool $processRefund,\n\t\tpublic int $refundAmount,\n\t) {\n\t}\n}\n\n// creates $obj = new Info(processRefund: ..., refundAmount: ...)\n```\n\nCasting combined with a scalar parameter creates an object and passes the value as the sole parameter to the constructor:\n\n```php\nExpect::string()->castTo(DateTime::class);\n// creates new DateTime(...)\n```\n\n\nNormalization: before()\n-----------------------\n\nPrior to the validation itself, the data can be normalized using the method `before()`. As an example, let's have an element that must be an array of strings (eg `['a', 'b', 'c']`), but receives input in the form of a string `a b c`:\n\n```php\n$explode = fn($v) => explode(' ', $v);\n\n$schema = Expect::arrayOf('string')\n\t->before($explode);\n\n$normalized = $processor->process($schema, 'a b c');\n// OK, returns ['a', 'b', 'c']\n```\n\n\nMapping to Objects: from()\n--------------------------\n\nYou can generate structure schema from the class. Example:\n\n```php\nclass Config\n{\n\t/** @var string */\n\tpublic $name;\n\t/** @var string|null */\n\tpublic $password;\n\t/** @var bool */\n\tpublic $admin = false;\n}\n\n$schema = Expect::from(new Config);\n\n$data = [\n\t'name' => 'jeff',\n];\n\n$normalized = $processor->process($schema, $data);\n// $normalized instanceof Config\n// $normalized = {'name' => 'jeff', 'password' => null, 'admin' => false}\n```\n\nIf you are using PHP 7.4 or higher, you can use native types:\n\n```php\nclass Config\n{\n\tpublic string $name;\n\tpublic ?string $password;\n\tpublic bool $admin = false;\n}\n\n$schema = Expect::from(new Config);\n```\n\nAnonymous classes are also supported:\n\n```php\n$schema = Expect::from(new class {\n\tpublic string $name;\n\tpublic ?string $password;\n\tpublic bool $admin = false;\n});\n```\n\nBecause the information obtained from the class definition may not be sufficient, you can add a custom schema for the elements with the second parameter:\n\n```php\n$schema = Expect::from(new Config, [\n\t'name' => Expect::string()->pattern('\\w:.*'),\n]);\n```\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/license.md","ext":"md","size":2724,"mtime":1756373566,"type":"text","content":"Licenses\n========\n\nGood news! You may use Nette Framework under the terms of either\nthe New BSD License or the GNU General Public License (GPL) version 2 or 3.\n\nThe BSD License is recommended for most projects. It is easy to understand and it\nplaces almost no restrictions on what you can do with the framework. If the GPL\nfits better to your project, you can use the framework under this license.\n\nYou don't have to notify anyone which license you are using. You can freely\nuse Nette Framework in commercial projects as long as the copyright header\nremains intact.\n\nPlease be advised that the name \"Nette Framework\" is a protected trademark and its\nusage has some limitations. So please do not use word \"Nette\" in the name of your\nproject or top-level domain, and choose a name that stands on its own merits.\nIf your stuff is good, it will not take long to establish a reputation for yourselves.\n\n\nNew BSD License\n---------------\n\nCopyright (c) 2004, 2014 David Grudl (https://davidgrudl.com)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n\t* Redistributions of source code must retain the above copyright notice,\n\tthis list of conditions and the following disclaimer.\n\n\t* Redistributions in binary form must reproduce the above copyright notice,\n\tthis list of conditions and the following disclaimer in the documentation\n\tand/or other materials provided with the distribution.\n\n\t* Neither the name of \"Nette Framework\" nor the names of its contributors\n\tmay be used to endorse or promote products derived from this software\n\twithout specific prior written permission.\n\nThis software is provided by the copyright holders and contributors \"as is\" and\nany express or implied warranties, including, but not limited to, the implied\nwarranties of merchantability and fitness for a particular purpose are\ndisclaimed. In no event shall the copyright owner or contributors be liable for\nany direct, indirect, incidental, special, exemplary, or consequential damages\n(including, but not limited to, procurement of substitute goods or services;\nloss of use, data, or profits; or business interruption) however caused and on\nany theory of liability, whether in contract, strict liability, or tort\n(including negligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n\n\nGNU General Public License\n--------------------------\n\nGPL licenses are very very long, so instead of including them here we offer\nyou URLs with full text:\n\n- [GPL version 2](http://www.gnu.org/licenses/gpl-2.0.html)\n- [GPL version 3](http://www.gnu.org/licenses/gpl-3.0.html)\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/DynamicParameter.php","ext":"php","size":222,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\n\ninterface DynamicParameter\n{\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Expect.php","ext":"php","size":2793,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\nuse Nette;\nuse Nette\\Schema\\Elements\\AnyOf;\nuse Nette\\Schema\\Elements\\Structure;\nuse Nette\\Schema\\Elements\\Type;\nuse function is_object;\n\n\n/**\n * Schema generator.\n *\n * @method static Type scalar($default = null)\n * @method static Type string($default = null)\n * @method static Type int($default = null)\n * @method static Type float($default = null)\n * @method static Type bool($default = null)\n * @method static Type null()\n * @method static Type list($default = [])\n * @method static Type mixed($default = null)\n * @method static Type email($default = null)\n * @method static Type unicode($default = null)\n */\nfinal class Expect\n{\n\tpublic static function __callStatic(string $name, array $args): Type\n\t{\n\t\t$type = new Type($name);\n\t\tif ($args) {\n\t\t\t$type->default($args[0]);\n\t\t}\n\n\t\treturn $type;\n\t}\n\n\n\tpublic static function type(string $type): Type\n\t{\n\t\treturn new Type($type);\n\t}\n\n\n\tpublic static function anyOf(mixed ...$set): AnyOf\n\t{\n\t\treturn new AnyOf(...$set);\n\t}\n\n\n\t/**\n\t * @param  Schema[]  $shape\n\t */\n\tpublic static function structure(array $shape): Structure\n\t{\n\t\treturn new Structure($shape);\n\t}\n\n\n\tpublic static function from(object $object, array $items = []): Structure\n\t{\n\t\t$ro = new \\ReflectionObject($object);\n\t\t$props = $ro->hasMethod('__construct')\n\t\t\t? $ro->getMethod('__construct')->getParameters()\n\t\t\t: $ro->getProperties();\n\n\t\tforeach ($props as $prop) {\n\t\t\t$item = &$items[$prop->getName()];\n\t\t\tif (!$item) {\n\t\t\t\t$type = Helpers::getPropertyType($prop) ?? 'mixed';\n\t\t\t\t$item = new Type($type);\n\t\t\t\tif ($prop instanceof \\ReflectionProperty ? $prop->isInitialized($object) : $prop->isOptional()) {\n\t\t\t\t\t$def = ($prop instanceof \\ReflectionProperty ? $prop->getValue($object) : $prop->getDefaultValue());\n\t\t\t\t\tif (is_object($def)) {\n\t\t\t\t\t\t$item = static::from($def);\n\t\t\t\t\t} elseif ($def === null && !Nette\\Utils\\Validators::is(null, $type)) {\n\t\t\t\t\t\t$item->required();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$item->default($def);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$item->required();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn (new Structure($items))->castTo($ro->getName());\n\t}\n\n\n\t/**\n\t * @param  mixed[]  $shape\n\t */\n\tpublic static function array(?array $shape = []): Structure|Type\n\t{\n\t\treturn Nette\\Utils\\Arrays::first($shape ?? []) instanceof Schema\n\t\t\t? (new Structure($shape))->castTo('array')\n\t\t\t: (new Type('array'))->default($shape);\n\t}\n\n\n\tpublic static function arrayOf(string|Schema $valueType, string|Schema|null $keyType = null): Type\n\t{\n\t\treturn (new Type('array'))->items($valueType, $keyType);\n\t}\n\n\n\tpublic static function listOf(string|Schema $type): Type\n\t{\n\t\treturn (new Type('list'))->items($type);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Elements/Structure.php","ext":"php","size":4840,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema\\Elements;\n\nuse Nette;\nuse Nette\\Schema\\Context;\nuse Nette\\Schema\\Helpers;\nuse Nette\\Schema\\Schema;\nuse function array_diff_key, array_fill_keys, array_key_exists, array_keys, array_map, array_merge, array_pop, array_values, is_array, is_object;\n\n\nfinal class Structure implements Schema\n{\n\tuse Base;\n\n\t/** @var Schema[] */\n\tprivate array $items;\n\n\t/** for array|list */\n\tprivate ?Schema $otherItems = null;\n\n\t/** @var array{?int, ?int} */\n\tprivate array $range = [null, null];\n\tprivate bool $skipDefaults = false;\n\n\n\t/**\n\t * @param  Schema[]  $shape\n\t */\n\tpublic function __construct(array $shape)\n\t{\n\t\t(function (Schema ...$items) {})(...array_values($shape));\n\t\t$this->items = $shape;\n\t\t$this->castTo('object');\n\t\t$this->required = true;\n\t}\n\n\n\tpublic function default(mixed $value): self\n\t{\n\t\tthrow new Nette\\InvalidStateException('Structure cannot have default value.');\n\t}\n\n\n\tpublic function min(?int $min): self\n\t{\n\t\t$this->range[0] = $min;\n\t\treturn $this;\n\t}\n\n\n\tpublic function max(?int $max): self\n\t{\n\t\t$this->range[1] = $max;\n\t\treturn $this;\n\t}\n\n\n\tpublic function otherItems(string|Schema $type = 'mixed'): self\n\t{\n\t\t$this->otherItems = $type instanceof Schema ? $type : new Type($type);\n\t\treturn $this;\n\t}\n\n\n\tpublic function skipDefaults(bool $state = true): self\n\t{\n\t\t$this->skipDefaults = $state;\n\t\treturn $this;\n\t}\n\n\n\tpublic function extend(array|self $shape): self\n\t{\n\t\t$shape = $shape instanceof self ? $shape->items : $shape;\n\t\treturn new self(array_merge($this->items, $shape));\n\t}\n\n\n\tpublic function getShape(): array\n\t{\n\t\treturn $this->items;\n\t}\n\n\n\t/********************* processing ****************d*g**/\n\n\n\tpublic function normalize(mixed $value, Context $context): mixed\n\t{\n\t\tif ($prevent = (is_array($value) && isset($value[Helpers::PreventMerging]))) {\n\t\t\tunset($value[Helpers::PreventMerging]);\n\t\t}\n\n\t\t$value = $this->doNormalize($value, $context);\n\t\tif (is_object($value)) {\n\t\t\t$value = (array) $value;\n\t\t}\n\n\t\tif (is_array($value)) {\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\t$itemSchema = $this->items[$key] ?? $this->otherItems;\n\t\t\t\tif ($itemSchema) {\n\t\t\t\t\t$context->path[] = $key;\n\t\t\t\t\t$value[$key] = $itemSchema->normalize($val, $context);\n\t\t\t\t\tarray_pop($context->path);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($prevent) {\n\t\t\t\t$value[Helpers::PreventMerging] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\n\tpublic function merge(mixed $value, mixed $base): mixed\n\t{\n\t\tif (is_array($value) && isset($value[Helpers::PreventMerging])) {\n\t\t\tunset($value[Helpers::PreventMerging]);\n\t\t\t$base = null;\n\t\t}\n\n\t\tif (is_array($value) && is_array($base)) {\n\t\t\t$index = $this->otherItems === null ? null : 0;\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\tif ($key === $index) {\n\t\t\t\t\t$base[] = $val;\n\t\t\t\t\t$index++;\n\t\t\t\t} else {\n\t\t\t\t\t$base[$key] = array_key_exists($key, $base) && ($itemSchema = $this->items[$key] ?? $this->otherItems)\n\t\t\t\t\t\t? $itemSchema->merge($val, $base[$key])\n\t\t\t\t\t\t: $val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $base;\n\t\t}\n\n\t\treturn $value ?? $base;\n\t}\n\n\n\tpublic function complete(mixed $value, Context $context): mixed\n\t{\n\t\tif ($value === null) {\n\t\t\t$value = []; // is unable to distinguish null from array in NEON\n\t\t}\n\n\t\t$this->doDeprecation($context);\n\n\t\t$isOk = $context->createChecker();\n\t\tHelpers::validateType($value, 'array', $context);\n\t\t$isOk() && Helpers::validateRange($value, $this->range, $context);\n\t\t$isOk() && $this->validateItems($value, $context);\n\t\t$isOk() && $value = $this->doTransform($value, $context);\n\t\treturn $isOk() ? $value : null;\n\t}\n\n\n\tprivate function validateItems(array &$value, Context $context): void\n\t{\n\t\t$items = $this->items;\n\t\tif ($extraKeys = array_keys(array_diff_key($value, $items))) {\n\t\t\tif ($this->otherItems) {\n\t\t\t\t$items += array_fill_keys($extraKeys, $this->otherItems);\n\t\t\t} else {\n\t\t\t\t$keys = array_map('strval', array_keys($items));\n\t\t\t\tforeach ($extraKeys as $key) {\n\t\t\t\t\t$hint = Nette\\Utils\\Helpers::getSuggestion($keys, (string) $key);\n\t\t\t\t\t$context->addError(\n\t\t\t\t\t\t'Unexpected item %path%' . ($hint ? \", did you mean '%hint%'?\" : '.'),\n\t\t\t\t\t\tNette\\Schema\\Message::UnexpectedItem,\n\t\t\t\t\t\t['hint' => $hint],\n\t\t\t\t\t)->path[] = $key;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tforeach ($items as $itemKey => $itemVal) {\n\t\t\t$context->path[] = $itemKey;\n\t\t\tif (array_key_exists($itemKey, $value)) {\n\t\t\t\t$value[$itemKey] = $itemVal->complete($value[$itemKey], $context);\n\t\t\t} else {\n\t\t\t\t$default = $itemVal->completeDefault($context); // checks required item\n\t\t\t\tif (!$context->skipDefaults && !$this->skipDefaults) {\n\t\t\t\t\t$value[$itemKey] = $default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tarray_pop($context->path);\n\t\t}\n\t}\n\n\n\tpublic function completeDefault(Context $context): mixed\n\t{\n\t\treturn $this->required\n\t\t\t? $this->complete([], $context)\n\t\t\t: null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Elements/AnyOf.php","ext":"php","size":3090,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema\\Elements;\n\nuse Nette;\nuse Nette\\Schema\\Context;\nuse Nette\\Schema\\Helpers;\nuse Nette\\Schema\\Schema;\nuse function array_merge, array_unique, implode, is_array;\n\n\nfinal class AnyOf implements Schema\n{\n\tuse Base;\n\n\tprivate array $set;\n\n\n\tpublic function __construct(mixed ...$set)\n\t{\n\t\tif (!$set) {\n\t\t\tthrow new Nette\\InvalidStateException('The enumeration must not be empty.');\n\t\t}\n\n\t\t$this->set = $set;\n\t}\n\n\n\tpublic function firstIsDefault(): self\n\t{\n\t\t$this->default = $this->set[0];\n\t\treturn $this;\n\t}\n\n\n\tpublic function nullable(): self\n\t{\n\t\t$this->set[] = null;\n\t\treturn $this;\n\t}\n\n\n\tpublic function dynamic(): self\n\t{\n\t\t$this->set[] = new Type(Nette\\Schema\\DynamicParameter::class);\n\t\treturn $this;\n\t}\n\n\n\t/********************* processing ****************d*g**/\n\n\n\tpublic function normalize(mixed $value, Context $context): mixed\n\t{\n\t\treturn $this->doNormalize($value, $context);\n\t}\n\n\n\tpublic function merge(mixed $value, mixed $base): mixed\n\t{\n\t\tif (is_array($value) && isset($value[Helpers::PreventMerging])) {\n\t\t\tunset($value[Helpers::PreventMerging]);\n\t\t\treturn $value;\n\t\t}\n\n\t\treturn Helpers::merge($value, $base);\n\t}\n\n\n\tpublic function complete(mixed $value, Context $context): mixed\n\t{\n\t\t$isOk = $context->createChecker();\n\t\t$value = $this->findAlternative($value, $context);\n\t\t$isOk() && $value = $this->doTransform($value, $context);\n\t\treturn $isOk() ? $value : null;\n\t}\n\n\n\tprivate function findAlternative(mixed $value, Context $context): mixed\n\t{\n\t\t$expecteds = $innerErrors = [];\n\t\tforeach ($this->set as $item) {\n\t\t\tif ($item instanceof Schema) {\n\t\t\t\t$dolly = new Context;\n\t\t\t\t$dolly->path = $context->path;\n\t\t\t\t$res = $item->complete($item->normalize($value, $dolly), $dolly);\n\t\t\t\tif (!$dolly->errors) {\n\t\t\t\t\t$context->warnings = array_merge($context->warnings, $dolly->warnings);\n\t\t\t\t\treturn $res;\n\t\t\t\t}\n\n\t\t\t\tforeach ($dolly->errors as $error) {\n\t\t\t\t\tif ($error->path !== $context->path || empty($error->variables['expected'])) {\n\t\t\t\t\t\t$innerErrors[] = $error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$expecteds[] = $error->variables['expected'];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($item === $value) {\n\t\t\t\t\treturn $value;\n\t\t\t\t}\n\n\t\t\t\t$expecteds[] = Nette\\Schema\\Helpers::formatValue($item);\n\t\t\t}\n\t\t}\n\n\t\tif ($innerErrors) {\n\t\t\t$context->errors = array_merge($context->errors, $innerErrors);\n\t\t} else {\n\t\t\t$context->addError(\n\t\t\t\t'The %label% %path% expects to be %expected%, %value% given.',\n\t\t\t\tNette\\Schema\\Message::TypeMismatch,\n\t\t\t\t[\n\t\t\t\t\t'value' => $value,\n\t\t\t\t\t'expected' => implode('|', array_unique($expecteds)),\n\t\t\t\t],\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tpublic function completeDefault(Context $context): mixed\n\t{\n\t\tif ($this->required) {\n\t\t\t$context->addError(\n\t\t\t\t'The mandatory item %path% is missing.',\n\t\t\t\tNette\\Schema\\Message::MissingItem,\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tif ($this->default instanceof Schema) {\n\t\t\treturn $this->default->completeDefault($context);\n\t\t}\n\n\t\treturn $this->default;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Elements/Type.php","ext":"php","size":4902,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema\\Elements;\n\nuse Nette\\Schema\\Context;\nuse Nette\\Schema\\DynamicParameter;\nuse Nette\\Schema\\Helpers;\nuse Nette\\Schema\\Schema;\nuse function array_key_exists, array_pop, implode, is_array, str_replace, strpos;\n\n\nfinal class Type implements Schema\n{\n\tuse Base;\n\n\tprivate string $type;\n\tprivate ?Schema $itemsValue = null;\n\tprivate ?Schema $itemsKey = null;\n\n\t/** @var array{?float, ?float} */\n\tprivate array $range = [null, null];\n\tprivate ?string $pattern = null;\n\tprivate bool $merge = true;\n\n\n\tpublic function __construct(string $type)\n\t{\n\t\t$defaults = ['list' => [], 'array' => []];\n\t\t$this->type = $type;\n\t\t$this->default = strpos($type, '[]') ? [] : $defaults[$type] ?? null;\n\t}\n\n\n\tpublic function nullable(): self\n\t{\n\t\t$this->type = 'null|' . $this->type;\n\t\treturn $this;\n\t}\n\n\n\tpublic function mergeDefaults(bool $state = true): self\n\t{\n\t\t$this->merge = $state;\n\t\treturn $this;\n\t}\n\n\n\tpublic function dynamic(): self\n\t{\n\t\t$this->type = DynamicParameter::class . '|' . $this->type;\n\t\treturn $this;\n\t}\n\n\n\tpublic function min(?float $min): self\n\t{\n\t\t$this->range[0] = $min;\n\t\treturn $this;\n\t}\n\n\n\tpublic function max(?float $max): self\n\t{\n\t\t$this->range[1] = $max;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * @internal  use arrayOf() or listOf()\n\t */\n\tpublic function items(string|Schema $valueType = 'mixed', string|Schema|null $keyType = null): self\n\t{\n\t\t$this->itemsValue = $valueType instanceof Schema\n\t\t\t? $valueType\n\t\t\t: new self($valueType);\n\t\t$this->itemsKey = $keyType instanceof Schema || $keyType === null\n\t\t\t? $keyType\n\t\t\t: new self($keyType);\n\t\treturn $this;\n\t}\n\n\n\tpublic function pattern(?string $pattern): self\n\t{\n\t\t$this->pattern = $pattern;\n\t\treturn $this;\n\t}\n\n\n\t/********************* processing ****************d*g**/\n\n\n\tpublic function normalize(mixed $value, Context $context): mixed\n\t{\n\t\tif ($prevent = (is_array($value) && isset($value[Helpers::PreventMerging]))) {\n\t\t\tunset($value[Helpers::PreventMerging]);\n\t\t}\n\n\t\t$value = $this->doNormalize($value, $context);\n\t\tif (is_array($value) && $this->itemsValue) {\n\t\t\t$res = [];\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\t$context->path[] = $key;\n\t\t\t\t$context->isKey = true;\n\t\t\t\t$key = $this->itemsKey\n\t\t\t\t\t? $this->itemsKey->normalize($key, $context)\n\t\t\t\t\t: $key;\n\t\t\t\t$context->isKey = false;\n\t\t\t\t$res[$key] = $this->itemsValue->normalize($val, $context);\n\t\t\t\tarray_pop($context->path);\n\t\t\t}\n\n\t\t\t$value = $res;\n\t\t}\n\n\t\tif ($prevent && is_array($value)) {\n\t\t\t$value[Helpers::PreventMerging] = true;\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\n\tpublic function merge(mixed $value, mixed $base): mixed\n\t{\n\t\tif (is_array($value) && isset($value[Helpers::PreventMerging])) {\n\t\t\tunset($value[Helpers::PreventMerging]);\n\t\t\treturn $value;\n\t\t}\n\n\t\tif (is_array($value) && is_array($base) && $this->itemsValue) {\n\t\t\t$index = 0;\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\tif ($key === $index) {\n\t\t\t\t\t$base[] = $val;\n\t\t\t\t\t$index++;\n\t\t\t\t} else {\n\t\t\t\t\t$base[$key] = array_key_exists($key, $base)\n\t\t\t\t\t\t? $this->itemsValue->merge($val, $base[$key])\n\t\t\t\t\t\t: $val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $base;\n\t\t}\n\n\t\treturn Helpers::merge($value, $base);\n\t}\n\n\n\tpublic function complete(mixed $value, Context $context): mixed\n\t{\n\t\t$merge = $this->merge;\n\t\tif (is_array($value) && isset($value[Helpers::PreventMerging])) {\n\t\t\tunset($value[Helpers::PreventMerging]);\n\t\t\t$merge = false;\n\t\t}\n\n\t\tif ($value === null && is_array($this->default)) {\n\t\t\t$value = []; // is unable to distinguish null from array in NEON\n\t\t}\n\n\t\t$this->doDeprecation($context);\n\n\t\t$isOk = $context->createChecker();\n\t\tHelpers::validateType($value, $this->type, $context);\n\t\t$isOk() && Helpers::validateRange($value, $this->range, $context, $this->type);\n\t\t$isOk() && $value !== null && $this->pattern !== null && Helpers::validatePattern($value, $this->pattern, $context);\n\t\t$isOk() && is_array($value) && $this->validateItems($value, $context);\n\t\t$isOk() && $merge && $value = Helpers::merge($value, $this->default);\n\t\t$isOk() && $value = $this->doTransform($value, $context);\n\t\tif (!$isOk()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ($value instanceof DynamicParameter) {\n\t\t\t$expected = $this->type . ($this->range === [null, null] ? '' : ':' . implode('..', $this->range));\n\t\t\t$context->dynamics[] = [$value, str_replace(DynamicParameter::class . '|', '', $expected), $context->path];\n\t\t}\n\t\treturn $value;\n\t}\n\n\n\tprivate function validateItems(array &$value, Context $context): void\n\t{\n\t\tif (!$this->itemsValue) {\n\t\t\treturn;\n\t\t}\n\n\t\t$res = [];\n\t\tforeach ($value as $key => $val) {\n\t\t\t$context->path[] = $key;\n\t\t\t$context->isKey = true;\n\t\t\t$key = $this->itemsKey ? $this->itemsKey->complete($key, $context) : $key;\n\t\t\t$context->isKey = false;\n\t\t\t$res[$key] = $this->itemsValue->complete($val, $context);\n\t\t\tarray_pop($context->path);\n\t\t}\n\t\t$value = $res;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Elements/Base.php","ext":"php","size":3409,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema\\Elements;\n\nuse Nette;\nuse Nette\\Schema\\Context;\nuse Nette\\Schema\\Helpers;\nuse function count, is_string;\n\n\n/**\n * @internal\n */\ntrait Base\n{\n\tprivate bool $required = false;\n\tprivate mixed $default = null;\n\n\t/** @var ?callable */\n\tprivate $before;\n\n\t/** @var callable[] */\n\tprivate array $transforms = [];\n\tprivate ?string $deprecated = null;\n\n\n\tpublic function default(mixed $value): self\n\t{\n\t\t$this->default = $value;\n\t\treturn $this;\n\t}\n\n\n\tpublic function required(bool $state = true): self\n\t{\n\t\t$this->required = $state;\n\t\treturn $this;\n\t}\n\n\n\tpublic function before(callable $handler): self\n\t{\n\t\t$this->before = $handler;\n\t\treturn $this;\n\t}\n\n\n\tpublic function castTo(string $type): self\n\t{\n\t\treturn $this->transform(Helpers::getCastStrategy($type));\n\t}\n\n\n\tpublic function transform(callable $handler): self\n\t{\n\t\t$this->transforms[] = $handler;\n\t\treturn $this;\n\t}\n\n\n\tpublic function assert(callable $handler, ?string $description = null): self\n\t{\n\t\t$expected = $description ?: (is_string($handler) ? \"$handler()\" : '#' . count($this->transforms));\n\t\treturn $this->transform(function ($value, Context $context) use ($handler, $description, $expected) {\n\t\t\tif ($handler($value)) {\n\t\t\t\treturn $value;\n\t\t\t}\n\t\t\t$context->addError(\n\t\t\t\t'Failed assertion ' . ($description ? \"'%assertion%'\" : '%assertion%') . ' for %label% %path% with value %value%.',\n\t\t\t\tNette\\Schema\\Message::FailedAssertion,\n\t\t\t\t['value' => $value, 'assertion' => $expected],\n\t\t\t);\n\t\t});\n\t}\n\n\n\t/** Marks as deprecated */\n\tpublic function deprecated(string $message = 'The item %path% is deprecated.'): self\n\t{\n\t\t$this->deprecated = $message;\n\t\treturn $this;\n\t}\n\n\n\tpublic function completeDefault(Context $context): mixed\n\t{\n\t\tif ($this->required) {\n\t\t\t$context->addError(\n\t\t\t\t'The mandatory item %path% is missing.',\n\t\t\t\tNette\\Schema\\Message::MissingItem,\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn $this->default;\n\t}\n\n\n\tpublic function doNormalize(mixed $value, Context $context): mixed\n\t{\n\t\tif ($this->before) {\n\t\t\t$value = ($this->before)($value);\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\n\tprivate function doDeprecation(Context $context): void\n\t{\n\t\tif ($this->deprecated !== null) {\n\t\t\t$context->addWarning(\n\t\t\t\t$this->deprecated,\n\t\t\t\tNette\\Schema\\Message::Deprecated,\n\t\t\t);\n\t\t}\n\t}\n\n\n\tprivate function doTransform(mixed $value, Context $context): mixed\n\t{\n\t\t$isOk = $context->createChecker();\n\t\tforeach ($this->transforms as $handler) {\n\t\t\t$value = $handler($value, $context);\n\t\t\tif (!$isOk()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn $value;\n\t}\n\n\n\t/** @deprecated use Nette\\Schema\\Validators::validateType() */\n\tprivate function doValidate(mixed $value, string $expected, Context $context): bool\n\t{\n\t\t$isOk = $context->createChecker();\n\t\tHelpers::validateType($value, $expected, $context);\n\t\treturn $isOk();\n\t}\n\n\n\t/** @deprecated use Nette\\Schema\\Validators::validateRange() */\n\tprivate static function doValidateRange(mixed $value, array $range, Context $context, string $types = ''): bool\n\t{\n\t\t$isOk = $context->createChecker();\n\t\tHelpers::validateRange($value, $range, $context, $types);\n\t\treturn $isOk();\n\t}\n\n\n\t/** @deprecated use doTransform() */\n\tprivate function doFinalize(mixed $value, Context $context): mixed\n\t{\n\t\treturn $this->doTransform($value, $context);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Context.php","ext":"php","size":1082,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\nuse function count;\n\n\nfinal class Context\n{\n\tpublic bool $skipDefaults = false;\n\n\t/** @var string[] */\n\tpublic array $path = [];\n\n\tpublic bool $isKey = false;\n\n\t/** @var Message[] */\n\tpublic array $errors = [];\n\n\t/** @var Message[] */\n\tpublic array $warnings = [];\n\n\t/** @var array[] */\n\tpublic array $dynamics = [];\n\n\n\tpublic function addError(string $message, string $code, array $variables = []): Message\n\t{\n\t\t$variables['isKey'] = $this->isKey;\n\t\treturn $this->errors[] = new Message($message, $code, $this->path, $variables);\n\t}\n\n\n\tpublic function addWarning(string $message, string $code, array $variables = []): Message\n\t{\n\t\treturn $this->warnings[] = new Message($message, $code, $this->path, $variables);\n\t}\n\n\n\t/** @return \\Closure(): bool */\n\tpublic function createChecker(): \\Closure\n\t{\n\t\t$count = count($this->errors);\n\t\treturn fn(): bool => $count === count($this->errors);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Processor.php","ext":"php","size":1941,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\nuse Nette;\n\n\n/**\n * Schema validator.\n */\nfinal class Processor\n{\n\tpublic array $onNewContext = [];\n\tprivate Context $context;\n\tprivate bool $skipDefaults = false;\n\n\n\tpublic function skipDefaults(bool $value = true): void\n\t{\n\t\t$this->skipDefaults = $value;\n\t}\n\n\n\t/**\n\t * Normalizes and validates data. Result is a clean completed data.\n\t * @throws ValidationException\n\t */\n\tpublic function process(Schema $schema, mixed $data): mixed\n\t{\n\t\t$this->createContext();\n\t\t$data = $schema->normalize($data, $this->context);\n\t\t$this->throwsErrors();\n\t\t$data = $schema->complete($data, $this->context);\n\t\t$this->throwsErrors();\n\t\treturn $data;\n\t}\n\n\n\t/**\n\t * Normalizes and validates and merges multiple data. Result is a clean completed data.\n\t * @throws ValidationException\n\t */\n\tpublic function processMultiple(Schema $schema, array $dataset): mixed\n\t{\n\t\t$this->createContext();\n\t\t$flatten = null;\n\t\t$first = true;\n\t\tforeach ($dataset as $data) {\n\t\t\t$data = $schema->normalize($data, $this->context);\n\t\t\t$this->throwsErrors();\n\t\t\t$flatten = $first ? $data : $schema->merge($data, $flatten);\n\t\t\t$first = false;\n\t\t}\n\n\t\t$data = $schema->complete($flatten, $this->context);\n\t\t$this->throwsErrors();\n\t\treturn $data;\n\t}\n\n\n\t/**\n\t * @return string[]\n\t */\n\tpublic function getWarnings(): array\n\t{\n\t\t$res = [];\n\t\tforeach ($this->context->warnings as $message) {\n\t\t\t$res[] = $message->toString();\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\tprivate function throwsErrors(): void\n\t{\n\t\tif ($this->context->errors) {\n\t\t\tthrow new ValidationException(null, $this->context->errors);\n\t\t}\n\t}\n\n\n\tprivate function createContext(): void\n\t{\n\t\t$this->context = new Context;\n\t\t$this->context->skipDefaults = $this->skipDefaults;\n\t\tNette\\Utils\\Arrays::invoke($this->onNewContext, $this->context);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Helpers.php","ext":"php","size":5223,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\nuse Nette;\nuse Nette\\Utils\\Reflection;\nuse function count, explode, get_debug_type, implode, in_array, is_array, is_float, is_int, is_object, is_scalar, is_string, method_exists, preg_match, preg_quote, preg_replace, preg_replace_callback, settype, str_replace, strlen, trim, var_export;\n\n\n/**\n * @internal\n */\nfinal class Helpers\n{\n\tuse Nette\\StaticClass;\n\n\tpublic const PreventMerging = '_prevent_merging';\n\n\n\t/**\n\t * Merges dataset. Left has higher priority than right one.\n\t */\n\tpublic static function merge(mixed $value, mixed $base): mixed\n\t{\n\t\tif (is_array($value) && isset($value[self::PreventMerging])) {\n\t\t\tunset($value[self::PreventMerging]);\n\t\t\treturn $value;\n\t\t}\n\n\t\tif (is_array($value) && is_array($base)) {\n\t\t\t$index = 0;\n\t\t\tforeach ($value as $key => $val) {\n\t\t\t\tif ($key === $index) {\n\t\t\t\t\t$base[] = $val;\n\t\t\t\t\t$index++;\n\t\t\t\t} else {\n\t\t\t\t\t$base[$key] = static::merge($val, $base[$key] ?? null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $base;\n\n\t\t} elseif ($value === null && is_array($base)) {\n\t\t\treturn $base;\n\n\t\t} else {\n\t\t\treturn $value;\n\t\t}\n\t}\n\n\n\tpublic static function getPropertyType(\\ReflectionProperty|\\ReflectionParameter $prop): ?string\n\t{\n\t\tif ($type = Nette\\Utils\\Type::fromReflection($prop)) {\n\t\t\treturn (string) $type;\n\t\t} elseif (\n\t\t\t($prop instanceof \\ReflectionProperty)\n\t\t\t&& ($type = preg_replace('#\\s.*#', '', (string) self::parseAnnotation($prop, 'var')))\n\t\t) {\n\t\t\t$class = Reflection::getPropertyDeclaringClass($prop);\n\t\t\treturn preg_replace_callback('#[\\w\\\\\\]+#', fn($m) => Reflection::expandClassName($m[0], $class), $type);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns an annotation value.\n\t * @param  \\ReflectionProperty  $ref\n\t */\n\tpublic static function parseAnnotation(\\Reflector $ref, string $name): ?string\n\t{\n\t\tif (!Reflection::areCommentsAvailable()) {\n\t\t\tthrow new Nette\\InvalidStateException('You have to enable phpDoc comments in opcode cache.');\n\t\t}\n\n\t\t$re = '#[\\s*]@' . preg_quote($name, '#') . '(?=\\s|$)(?:[ \\t]+([^@\\s]\\S*))?#';\n\t\tif ($ref->getDocComment() && preg_match($re, trim($ref->getDocComment(), '/*'), $m)) {\n\t\t\treturn $m[1] ?? '';\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tpublic static function formatValue(mixed $value): string\n\t{\n\t\tif ($value instanceof DynamicParameter) {\n\t\t\treturn 'dynamic';\n\t\t} elseif (is_object($value)) {\n\t\t\treturn 'object ' . $value::class;\n\t\t} elseif (is_string($value)) {\n\t\t\treturn \"'\" . Nette\\Utils\\Strings::truncate($value, 15, '...') . \"'\";\n\t\t} elseif (is_scalar($value)) {\n\t\t\treturn var_export($value, return: true);\n\t\t} else {\n\t\t\treturn get_debug_type($value);\n\t\t}\n\t}\n\n\n\tpublic static function validateType(mixed $value, string $expected, Context $context): void\n\t{\n\t\tif (!Nette\\Utils\\Validators::is($value, $expected)) {\n\t\t\t$expected = str_replace(DynamicParameter::class . '|', '', $expected);\n\t\t\t$expected = str_replace(['|', ':'], [' or ', ' in range '], $expected);\n\t\t\t$context->addError(\n\t\t\t\t'The %label% %path% expects to be %expected%, %value% given.',\n\t\t\t\tMessage::TypeMismatch,\n\t\t\t\t['value' => $value, 'expected' => $expected],\n\t\t\t);\n\t\t}\n\t}\n\n\n\tpublic static function validateRange(mixed $value, array $range, Context $context, string $types = ''): void\n\t{\n\t\tif (is_array($value) || is_string($value)) {\n\t\t\t[$length, $label] = is_array($value)\n\t\t\t\t? [count($value), 'items']\n\t\t\t\t: (in_array('unicode', explode('|', $types), true)\n\t\t\t\t\t? [Nette\\Utils\\Strings::length($value), 'characters']\n\t\t\t\t\t: [strlen($value), 'bytes']);\n\n\t\t\tif (!self::isInRange($length, $range)) {\n\t\t\t\t$context->addError(\n\t\t\t\t\t\"The length of %label% %path% expects to be in range %expected%, %length% $label given.\",\n\t\t\t\t\tMessage::LengthOutOfRange,\n\t\t\t\t\t['value' => $value, 'length' => $length, 'expected' => implode('..', $range)],\n\t\t\t\t);\n\t\t\t}\n\t\t} elseif ((is_int($value) || is_float($value)) && !self::isInRange($value, $range)) {\n\t\t\t$context->addError(\n\t\t\t\t'The %label% %path% expects to be in range %expected%, %value% given.',\n\t\t\t\tMessage::ValueOutOfRange,\n\t\t\t\t['value' => $value, 'expected' => implode('..', $range)],\n\t\t\t);\n\t\t}\n\t}\n\n\n\tpublic static function isInRange(mixed $value, array $range): bool\n\t{\n\t\treturn ($range[0] === null || $value >= $range[0])\n\t\t\t&& ($range[1] === null || $value <= $range[1]);\n\t}\n\n\n\tpublic static function validatePattern(string $value, string $pattern, Context $context): void\n\t{\n\t\tif (!preg_match(\"\\x01^(?:$pattern)$\\x01Du\", $value)) {\n\t\t\t$context->addError(\n\t\t\t\t\"The %label% %path% expects to match pattern '%pattern%', %value% given.\",\n\t\t\t\tMessage::PatternMismatch,\n\t\t\t\t['value' => $value, 'pattern' => $pattern],\n\t\t\t);\n\t\t}\n\t}\n\n\n\tpublic static function getCastStrategy(string $type): \\Closure\n\t{\n\t\tif (Nette\\Utils\\Validators::isBuiltinType($type)) {\n\t\t\treturn static function ($value) use ($type) {\n\t\t\t\tsettype($value, $type);\n\t\t\t\treturn $value;\n\t\t\t};\n\t\t} elseif (method_exists($type, '__construct')) {\n\t\t\treturn static fn($value) => is_array($value) || $value instanceof \\stdClass\n\t\t\t\t? new $type(...(array) $value)\n\t\t\t\t: new $type($value);\n\t\t} else {\n\t\t\treturn static fn($value) => Nette\\Utils\\Arrays::toObject((array) $value, new $type);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Schema.php","ext":"php","size":586,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\n\ninterface Schema\n{\n\t/**\n\t * Normalization.\n\t * @return mixed\n\t */\n\tfunction normalize(mixed $value, Context $context);\n\n\t/**\n\t * Merging.\n\t * @return mixed\n\t */\n\tfunction merge(mixed $value, mixed $base);\n\n\t/**\n\t * Validation and finalization.\n\t * @return mixed\n\t */\n\tfunction complete(mixed $value, Context $context);\n\n\t/**\n\t * @return mixed\n\t */\n\tfunction completeDefault(Context $context);\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/Message.php","ext":"php","size":2809,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\nuse Nette;\nuse function implode, preg_last_error_msg, preg_replace_callback;\n\n\nfinal class Message\n{\n\t/** variables: {value: mixed, expected: string} */\n\tpublic const TypeMismatch = 'schema.typeMismatch';\n\n\t/** variables: {value: mixed, expected: string} */\n\tpublic const ValueOutOfRange = 'schema.valueOutOfRange';\n\n\t/** variables: {value: mixed, length: int, expected: string} */\n\tpublic const LengthOutOfRange = 'schema.lengthOutOfRange';\n\n\t/** variables: {value: string, pattern: string} */\n\tpublic const PatternMismatch = 'schema.patternMismatch';\n\n\t/** variables: {value: mixed, assertion: string} */\n\tpublic const FailedAssertion = 'schema.failedAssertion';\n\n\t/** no variables */\n\tpublic const MissingItem = 'schema.missingItem';\n\n\t/** variables: {hint: string} */\n\tpublic const UnexpectedItem = 'schema.unexpectedItem';\n\n\t/** no variables */\n\tpublic const Deprecated = 'schema.deprecated';\n\n\t/** @deprecated use Message::TypeMismatch */\n\tpublic const TYPE_MISMATCH = self::TypeMismatch;\n\n\t/** @deprecated use Message::ValueOutOfRange */\n\tpublic const VALUE_OUT_OF_RANGE = self::ValueOutOfRange;\n\n\t/** @deprecated use Message::LengthOutOfRange */\n\tpublic const LENGTH_OUT_OF_RANGE = self::LengthOutOfRange;\n\n\t/** @deprecated use Message::PatternMismatch */\n\tpublic const PATTERN_MISMATCH = self::PatternMismatch;\n\n\t/** @deprecated use Message::FailedAssertion */\n\tpublic const FAILED_ASSERTION = self::FailedAssertion;\n\n\t/** @deprecated use Message::MissingItem */\n\tpublic const MISSING_ITEM = self::MissingItem;\n\n\t/** @deprecated use Message::UnexpectedItem */\n\tpublic const UNEXPECTED_ITEM = self::UnexpectedItem;\n\n\t/** @deprecated use Message::Deprecated */\n\tpublic const DEPRECATED = self::Deprecated;\n\n\tpublic string $message;\n\tpublic string $code;\n\n\t/** @var string[] */\n\tpublic array $path;\n\n\t/** @var string[] */\n\tpublic array $variables;\n\n\n\tpublic function __construct(string $message, string $code, array $path, array $variables = [])\n\t{\n\t\t$this->message = $message;\n\t\t$this->code = $code;\n\t\t$this->path = $path;\n\t\t$this->variables = $variables;\n\t}\n\n\n\tpublic function toString(): string\n\t{\n\t\t$vars = $this->variables;\n\t\t$vars['label'] = empty($vars['isKey']) ? 'item' : 'key of item';\n\t\t$vars['path'] = $this->path\n\t\t\t? \"'\" . implode(\"\\u{a0}›\\u{a0}\", $this->path) . \"'\"\n\t\t\t: null;\n\t\t$vars['value'] = Helpers::formatValue($vars['value'] ?? null);\n\n\t\treturn preg_replace_callback('~( ?)%(\\w+)%~', function ($m) use ($vars) {\n\t\t\t[, $space, $key] = $m;\n\t\t\treturn $vars[$key] === null ? '' : $space . $vars[$key];\n\t\t}, $this->message) ?? throw new Nette\\InvalidStateException(preg_last_error_msg());\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/schema/src/Schema/ValidationException.php","ext":"php","size":855,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Schema;\n\nuse Nette;\n\n\n/**\n * Validation error.\n */\nclass ValidationException extends Nette\\InvalidStateException\n{\n\t/** @var Message[] */\n\tprivate array $messages;\n\n\n\t/**\n\t * @param  Message[]  $messages\n\t */\n\tpublic function __construct(?string $message, array $messages = [])\n\t{\n\t\tparent::__construct($message ?: $messages[0]->toString());\n\t\t$this->messages = $messages;\n\t}\n\n\n\t/**\n\t * @return string[]\n\t */\n\tpublic function getMessages(): array\n\t{\n\t\t$res = [];\n\t\tforeach ($this->messages as $message) {\n\t\t\t$res[] = $message->toString();\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * @return Message[]\n\t */\n\tpublic function getMessageObjects(): array\n\t{\n\t\treturn $this->messages;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/.phpstorm.meta.php","ext":"php","size":684,"mtime":1756373566,"type":"text","content":"<?php\n\ndeclare(strict_types=1);\n\nnamespace PHPSTORM_META;\n\noverride(\\Nette\\Utils\\Arrays::get(0), elementType(0));\noverride(\\Nette\\Utils\\Arrays::getRef(0), elementType(0));\noverride(\\Nette\\Utils\\Arrays::grep(0), type(0));\noverride(\\Nette\\Utils\\Arrays::toObject(0), type(1));\n\nexpectedArguments(\\Nette\\Utils\\Image::resize(), 2, \\Nette\\Utils\\Image::ShrinkOnly, \\Nette\\Utils\\Image::Stretch, \\Nette\\Utils\\Image::OrSmaller, \\Nette\\Utils\\Image::OrBigger, \\Nette\\Utils\\Image::Cover);\nexpectedArguments(\\Nette\\Utils\\Image::calculateSize(), 4, \\Nette\\Utils\\Image::ShrinkOnly, \\Nette\\Utils\\Image::Stretch, \\Nette\\Utils\\Image::OrSmaller, \\Nette\\Utils\\Image::OrBigger, \\Nette\\Utils\\Image::Cover);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/readme.md","ext":"md","size":2597,"mtime":1756373566,"type":"text","content":"[![Nette Utils](https://github.com/nette/utils/assets/194960/c33fdb74-0652-4cad-ac6e-c1ce0d29e32a)](https://doc.nette.org/en/utils)\n\n[![Downloads this Month](https://img.shields.io/packagist/dm/nette/utils.svg)](https://packagist.org/packages/nette/utils)\n[![Tests](https://github.com/nette/utils/workflows/Tests/badge.svg?branch=master)](https://github.com/nette/utils/actions)\n[![Coverage Status](https://coveralls.io/repos/github/nette/utils/badge.svg?branch=master)](https://coveralls.io/github/nette/utils?branch=master)\n[![Latest Stable Version](https://poser.pugx.org/nette/utils/v/stable)](https://github.com/nette/utils/releases)\n[![License](https://img.shields.io/badge/license-New%20BSD-blue.svg)](https://github.com/nette/utils/blob/master/license.md)\n\n\nIntroduction\n------------\n\nIn package nette/utils you will find a set of useful classes for everyday use:\n\n✅ [Arrays](https://doc.nette.org/utils/arrays)<br>\n✅ [Callback](https://doc.nette.org/utils/callback) - PHP callbacks<br>\n✅ [Filesystem](https://doc.nette.org/utils/filesystem) - copying, renaming, …<br>\n✅ [Finder](https://doc.nette.org/utils/finder) - finds files and directories<br>\n✅ [Floats](https://doc.nette.org/utils/floats) - floating point numbers<br>\n✅ [Helper Functions](https://doc.nette.org/utils/helpers)<br>\n✅ [HTML elements](https://doc.nette.org/utils/html-elements) - generate HTML<br>\n✅ [Images](https://doc.nette.org/utils/images) - crop, resize, rotate images<br>\n✅ [Iterables](https://doc.nette.org/utils/iterables) <br>\n✅ [JSON](https://doc.nette.org/utils/json) - encoding and decoding<br>\n✅ [Generating Random Strings](https://doc.nette.org/utils/random)<br>\n✅ [Paginator](https://doc.nette.org/utils/paginator) - pagination math<br>\n✅ [PHP Reflection](https://doc.nette.org/utils/reflection)<br>\n✅ [Strings](https://doc.nette.org/utils/strings) - useful text functions<br>\n✅ [SmartObject](https://doc.nette.org/utils/smartobject) - PHP object enhancements<br>\n✅ [Type](https://doc.nette.org/utils/type) - PHP data type<br>\n✅ [Validation](https://doc.nette.org/utils/validators) - validate inputs<br>\n\n <!---->\n\nInstallation\n------------\n\nThe recommended way to install is via Composer:\n\n```\ncomposer require nette/utils\n```\n\nNette Utils 4.1 is compatible with PHP 8.1 to 8.5.\n\n <!---->\n\n[Support Me](https://github.com/sponsors/dg)\n--------------------------------------------\n\nDo you like Nette Utils? Are you looking forward to the new features?\n\n[![Buy me a coffee](https://files.nette.org/icons/donation-3.svg)](https://github.com/sponsors/dg)\n\nThank you!\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/license.md","ext":"md","size":2724,"mtime":1756373566,"type":"text","content":"Licenses\n========\n\nGood news! You may use Nette Framework under the terms of either\nthe New BSD License or the GNU General Public License (GPL) version 2 or 3.\n\nThe BSD License is recommended for most projects. It is easy to understand and it\nplaces almost no restrictions on what you can do with the framework. If the GPL\nfits better to your project, you can use the framework under this license.\n\nYou don't have to notify anyone which license you are using. You can freely\nuse Nette Framework in commercial projects as long as the copyright header\nremains intact.\n\nPlease be advised that the name \"Nette Framework\" is a protected trademark and its\nusage has some limitations. So please do not use word \"Nette\" in the name of your\nproject or top-level domain, and choose a name that stands on its own merits.\nIf your stuff is good, it will not take long to establish a reputation for yourselves.\n\n\nNew BSD License\n---------------\n\nCopyright (c) 2004, 2014 David Grudl (https://davidgrudl.com)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n\t* Redistributions of source code must retain the above copyright notice,\n\tthis list of conditions and the following disclaimer.\n\n\t* Redistributions in binary form must reproduce the above copyright notice,\n\tthis list of conditions and the following disclaimer in the documentation\n\tand/or other materials provided with the distribution.\n\n\t* Neither the name of \"Nette Framework\" nor the names of its contributors\n\tmay be used to endorse or promote products derived from this software\n\twithout specific prior written permission.\n\nThis software is provided by the copyright holders and contributors \"as is\" and\nany express or implied warranties, including, but not limited to, the implied\nwarranties of merchantability and fitness for a particular purpose are\ndisclaimed. In no event shall the copyright owner or contributors be liable for\nany direct, indirect, incidental, special, exemplary, or consequential damages\n(including, but not limited to, procurement of substitute goods or services;\nloss of use, data, or profits; or business interruption) however caused and on\nany theory of liability, whether in contract, strict liability, or tort\n(including negligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n\n\nGNU General Public License\n--------------------------\n\nGPL licenses are very very long, so instead of including them here we offer\nyou URLs with full text:\n\n- [GPL version 2](http://www.gnu.org/licenses/gpl-2.0.html)\n- [GPL version 3](http://www.gnu.org/licenses/gpl-3.0.html)\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/HtmlStringable.php","ext":"php","size":335,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette;\n\n\ninterface HtmlStringable\n{\n\t/**\n\t * Returns string in HTML format\n\t */\n\tfunction __toString(): string;\n}\n\n\ninterface_exists(Utils\\IHtmlString::class);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Translator.php","ext":"php","size":428,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Localization;\n\n\n/**\n * Translator adapter.\n */\ninterface Translator\n{\n\t/**\n\t * Translates the given string.\n\t */\n\tfunction translate(string|\\Stringable $message, mixed ...$parameters): string|\\Stringable;\n}\n\n\ninterface_exists(ITranslator::class);\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Iterables.php","ext":"php","size":5799,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function is_array;\n\n\n/**\n * Utilities for iterables.\n */\nfinal class Iterables\n{\n\tuse Nette\\StaticClass;\n\n\t/**\n\t * Tests for the presence of value.\n\t */\n\tpublic static function contains(iterable $iterable, mixed $value): bool\n\t{\n\t\tforeach ($iterable as $v) {\n\t\t\tif ($v === $value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Tests for the presence of key.\n\t */\n\tpublic static function containsKey(iterable $iterable, mixed $key): bool\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tif ($k === $key) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Returns the first item (matching the specified predicate if given). If there is no such item, it returns result of invoking $else or null.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @param  ?callable(V, K, iterable<K, V>): bool  $predicate\n\t * @return ?V\n\t */\n\tpublic static function first(iterable $iterable, ?callable $predicate = null, ?callable $else = null): mixed\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tif (!$predicate || $predicate($v, $k, $iterable)) {\n\t\t\t\treturn $v;\n\t\t\t}\n\t\t}\n\t\treturn $else ? $else() : null;\n\t}\n\n\n\t/**\n\t * Returns the key of first item (matching the specified predicate if given). If there is no such item, it returns result of invoking $else or null.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @param  ?callable(V, K, iterable<K, V>): bool  $predicate\n\t * @return ?K\n\t */\n\tpublic static function firstKey(iterable $iterable, ?callable $predicate = null, ?callable $else = null): mixed\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tif (!$predicate || $predicate($v, $k, $iterable)) {\n\t\t\t\treturn $k;\n\t\t\t}\n\t\t}\n\t\treturn $else ? $else() : null;\n\t}\n\n\n\t/**\n\t * Tests whether at least one element in the iterator passes the test implemented by the provided function.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @param  callable(V, K, iterable<K, V>): bool  $predicate\n\t */\n\tpublic static function some(iterable $iterable, callable $predicate): bool\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tif ($predicate($v, $k, $iterable)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Tests whether all elements in the iterator pass the test implemented by the provided function.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @param  callable(V, K, iterable<K, V>): bool  $predicate\n\t */\n\tpublic static function every(iterable $iterable, callable $predicate): bool\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tif (!$predicate($v, $k, $iterable)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Iterator that filters elements according to a given $predicate. Maintains original keys.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @param  callable(V, K, iterable<K, V>): bool  $predicate\n\t * @return \\Generator<K, V>\n\t */\n\tpublic static function filter(iterable $iterable, callable $predicate): \\Generator\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tif ($predicate($v, $k, $iterable)) {\n\t\t\t\tyield $k => $v;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Iterator that transforms values by calling $transformer. Maintains original keys.\n\t * @template K\n\t * @template V\n\t * @template R\n\t * @param  iterable<K, V>  $iterable\n\t * @param  callable(V, K, iterable<K, V>): R  $transformer\n\t * @return \\Generator<K, R>\n\t */\n\tpublic static function map(iterable $iterable, callable $transformer): \\Generator\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\tyield $k => $transformer($v, $k, $iterable);\n\t\t}\n\t}\n\n\n\t/**\n\t * Iterator that transforms keys and values by calling $transformer. If it returns null, the element is skipped.\n\t * @template K\n\t * @template V\n\t * @template ResV\n\t * @template ResK\n\t * @param  iterable<K, V>  $iterable\n\t * @param  callable(V, K, iterable<K, V>): ?array{ResV, ResK}  $transformer\n\t * @return \\Generator<ResV, ResK>\n\t */\n\tpublic static function mapWithKeys(iterable $iterable, callable $transformer): \\Generator\n\t{\n\t\tforeach ($iterable as $k => $v) {\n\t\t\t$pair = $transformer($v, $k, $iterable);\n\t\t\tif ($pair) {\n\t\t\t\tyield $pair[0] => $pair[1];\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Wraps around iterator and caches its keys and values during iteration.\n\t * This allows the data to be re-iterated multiple times.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @return \\IteratorAggregate<K, V>\n\t */\n\tpublic static function memoize(iterable $iterable): iterable\n\t{\n\t\treturn new class (self::toIterator($iterable)) implements \\IteratorAggregate {\n\t\t\tpublic function __construct(\n\t\t\t\tprivate \\Iterator $iterator,\n\t\t\t\tprivate array $cache = [],\n\t\t\t) {\n\t\t\t}\n\n\n\t\t\tpublic function getIterator(): \\Generator\n\t\t\t{\n\t\t\t\tif (!$this->cache) {\n\t\t\t\t\t$this->iterator->rewind();\n\t\t\t\t}\n\t\t\t\t$i = 0;\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (isset($this->cache[$i])) {\n\t\t\t\t\t\t[$k, $v] = $this->cache[$i];\n\t\t\t\t\t} elseif ($this->iterator->valid()) {\n\t\t\t\t\t\t$k = $this->iterator->key();\n\t\t\t\t\t\t$v = $this->iterator->current();\n\t\t\t\t\t\t$this->iterator->next();\n\t\t\t\t\t\t$this->cache[$i] = [$k, $v];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tyield $k => $v;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\n\t/**\n\t * Creates an iterator from anything that is iterable.\n\t * @template K\n\t * @template V\n\t * @param  iterable<K, V>  $iterable\n\t * @return \\Iterator<K, V>\n\t */\n\tpublic static function toIterator(iterable $iterable): \\Iterator\n\t{\n\t\treturn match (true) {\n\t\t\t$iterable instanceof \\Iterator => $iterable,\n\t\t\t$iterable instanceof \\IteratorAggregate => self::toIterator($iterable->getIterator()),\n\t\t\tis_array($iterable) => new \\ArrayIterator($iterable),\n\t\t\tdefault => throw new Nette\\ShouldNotHappenException,\n\t\t};\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Strings.php","ext":"php","size":22100,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse JetBrains\\PhpStorm\\Language;\nuse Nette;\nuse function array_keys, array_map, array_shift, array_values, bin2hex, class_exists, defined, extension_loaded, function_exists, htmlspecialchars, htmlspecialchars_decode, iconv, iconv_strlen, iconv_substr, implode, in_array, is_array, is_callable, is_int, is_object, is_string, key, max, mb_convert_case, mb_strlen, mb_strtolower, mb_strtoupper, mb_substr, pack, preg_last_error, preg_last_error_msg, preg_quote, preg_replace, str_contains, str_ends_with, str_repeat, str_replace, str_starts_with, strlen, strpos, strrev, strrpos, strtolower, strtoupper, strtr, substr, trim, unpack, utf8_decode;\nuse const ENT_IGNORE, ENT_NOQUOTES, ICONV_IMPL, MB_CASE_TITLE, PHP_EOL, PREG_OFFSET_CAPTURE, PREG_PATTERN_ORDER, PREG_SET_ORDER, PREG_SPLIT_DELIM_CAPTURE, PREG_SPLIT_NO_EMPTY, PREG_SPLIT_OFFSET_CAPTURE, PREG_UNMATCHED_AS_NULL;\n\n\n/**\n * String tools library.\n */\nclass Strings\n{\n\tuse Nette\\StaticClass;\n\n\tpublic const TrimCharacters = \" \\t\\n\\r\\0\\x0B\\u{A0}\\u{2000}\\u{2001}\\u{2002}\\u{2003}\\u{2004}\\u{2005}\\u{2006}\\u{2007}\\u{2008}\\u{2009}\\u{200A}\\u{200B}\\u{2028}\\u{3000}\";\n\n\t#[\\Deprecated('use Strings::TrimCharacters')]\n\tpublic const TRIM_CHARACTERS = self::TrimCharacters;\n\n\n\t/**\n\t * @deprecated use Nette\\Utils\\Validators::isUnicode()\n\t */\n\tpublic static function checkEncoding(string $s): bool\n\t{\n\t\treturn $s === self::fixEncoding($s);\n\t}\n\n\n\t/**\n\t * Removes all invalid UTF-8 characters from a string.\n\t */\n\tpublic static function fixEncoding(string $s): string\n\t{\n\t\t// removes xD800-xDFFF, x110000 and higher\n\t\treturn htmlspecialchars_decode(htmlspecialchars($s, ENT_NOQUOTES | ENT_IGNORE, 'UTF-8'), ENT_NOQUOTES);\n\t}\n\n\n\t/**\n\t * Returns a specific character in UTF-8 from code point (number in range 0x0000..D7FF or 0xE000..10FFFF).\n\t * @throws Nette\\InvalidArgumentException if code point is not in valid range\n\t */\n\tpublic static function chr(int $code): string\n\t{\n\t\tif ($code < 0 || ($code >= 0xD800 && $code <= 0xDFFF) || $code > 0x10FFFF) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Code point must be in range 0x0 to 0xD7FF or 0xE000 to 0x10FFFF.');\n\t\t} elseif (!extension_loaded('iconv')) {\n\t\t\tthrow new Nette\\NotSupportedException(__METHOD__ . '() requires ICONV extension that is not loaded.');\n\t\t}\n\n\t\treturn iconv('UTF-32BE', 'UTF-8//IGNORE', pack('N', $code));\n\t}\n\n\n\t/**\n\t * Returns a code point of specific character in UTF-8 (number in range 0x0000..D7FF or 0xE000..10FFFF).\n\t */\n\tpublic static function ord(string $c): int\n\t{\n\t\tif (!extension_loaded('iconv')) {\n\t\t\tthrow new Nette\\NotSupportedException(__METHOD__ . '() requires ICONV extension that is not loaded.');\n\t\t}\n\n\t\t$tmp = iconv('UTF-8', 'UTF-32BE//IGNORE', $c);\n\t\tif (!$tmp) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Invalid UTF-8 character \"' . ($c === '' ? '' : '\\x' . strtoupper(bin2hex($c))) . '\".');\n\t\t}\n\n\t\treturn unpack('N', $tmp)[1];\n\t}\n\n\n\t/**\n\t * @deprecated use str_starts_with()\n\t */\n\tpublic static function startsWith(string $haystack, string $needle): bool\n\t{\n\t\treturn str_starts_with($haystack, $needle);\n\t}\n\n\n\t/**\n\t * @deprecated use str_ends_with()\n\t */\n\tpublic static function endsWith(string $haystack, string $needle): bool\n\t{\n\t\treturn str_ends_with($haystack, $needle);\n\t}\n\n\n\t/**\n\t * @deprecated use str_contains()\n\t */\n\tpublic static function contains(string $haystack, string $needle): bool\n\t{\n\t\treturn str_contains($haystack, $needle);\n\t}\n\n\n\t/**\n\t * Returns a part of UTF-8 string specified by starting position and length. If start is negative,\n\t * the returned string will start at the start'th character from the end of string.\n\t */\n\tpublic static function substring(string $s, int $start, ?int $length = null): string\n\t{\n\t\tif (function_exists('mb_substr')) {\n\t\t\treturn mb_substr($s, $start, $length, 'UTF-8'); // MB is much faster\n\t\t} elseif (!extension_loaded('iconv')) {\n\t\t\tthrow new Nette\\NotSupportedException(__METHOD__ . '() requires extension ICONV or MBSTRING, neither is loaded.');\n\t\t} elseif ($length === null) {\n\t\t\t$length = self::length($s);\n\t\t} elseif ($start < 0 && $length < 0) {\n\t\t\t$start += self::length($s); // unifies iconv_substr behavior with mb_substr\n\t\t}\n\n\t\treturn iconv_substr($s, $start, $length, 'UTF-8');\n\t}\n\n\n\t/**\n\t * Removes control characters, normalizes line breaks to `\\n`, removes leading and trailing blank lines,\n\t * trims end spaces on lines, normalizes UTF-8 to the normal form of NFC.\n\t */\n\tpublic static function normalize(string $s): string\n\t{\n\t\t// convert to compressed normal form (NFC)\n\t\tif (class_exists('Normalizer', false) && ($n = \\Normalizer::normalize($s, \\Normalizer::FORM_C)) !== false) {\n\t\t\t$s = $n;\n\t\t}\n\n\t\t$s = self::unixNewLines($s);\n\n\t\t// remove control characters; leave \\t + \\n\n\t\t$s = self::pcre('preg_replace', ['#[\\x00-\\x08\\x0B-\\x1F\\x7F-\\x9F]+#u', '', $s]);\n\n\t\t// right trim\n\t\t$s = self::pcre('preg_replace', ['#[\\t ]+$#m', '', $s]);\n\n\t\t// leading and trailing blank lines\n\t\t$s = trim($s, \"\\n\");\n\n\t\treturn $s;\n\t}\n\n\n\t/** @deprecated use Strings::unixNewLines() */\n\tpublic static function normalizeNewLines(string $s): string\n\t{\n\t\treturn self::unixNewLines($s);\n\t}\n\n\n\t/**\n\t * Converts line endings to \\n used on Unix-like systems.\n\t * Line endings are: \\n, \\r, \\r\\n, U+2028 line separator, U+2029 paragraph separator.\n\t */\n\tpublic static function unixNewLines(string $s): string\n\t{\n\t\treturn preg_replace(\"~\\r\\n?|\\u{2028}|\\u{2029}~\", \"\\n\", $s);\n\t}\n\n\n\t/**\n\t * Converts line endings to platform-specific, i.e. \\r\\n on Windows and \\n elsewhere.\n\t * Line endings are: \\n, \\r, \\r\\n, U+2028 line separator, U+2029 paragraph separator.\n\t */\n\tpublic static function platformNewLines(string $s): string\n\t{\n\t\treturn preg_replace(\"~\\r\\n?|\\n|\\u{2028}|\\u{2029}~\", PHP_EOL, $s);\n\t}\n\n\n\t/**\n\t * Converts UTF-8 string to ASCII, ie removes diacritics etc.\n\t */\n\tpublic static function toAscii(string $s): string\n\t{\n\t\tif (!extension_loaded('intl')) {\n\t\t\tthrow new Nette\\NotSupportedException(__METHOD__ . '() requires INTL extension that is not loaded.');\n\t\t}\n\n\t\t$iconv = defined('ICONV_IMPL') ? trim(ICONV_IMPL, '\"\\'') : null;\n\n\t\t// remove control characters and check UTF-8 validity\n\t\t$s = self::pcre('preg_replace', ['#[^\\x09\\x0A\\x0D\\x20-\\x7E\\xA0-\\x{2FF}\\x{370}-\\x{10FFFF}]#u', '', $s]);\n\n\t\t// transliteration (by Transliterator and iconv) is not optimal, replace some characters directly\n\t\t$s = strtr($s, [\"\\u{201E}\" => '\"', \"\\u{201C}\" => '\"', \"\\u{201D}\" => '\"', \"\\u{201A}\" => \"'\", \"\\u{2018}\" => \"'\", \"\\u{2019}\" => \"'\", \"\\u{B0}\" => '^', \"\\u{42F}\" => 'Ya', \"\\u{44F}\" => 'ya', \"\\u{42E}\" => 'Yu', \"\\u{44E}\" => 'yu', \"\\u{c4}\" => 'Ae', \"\\u{d6}\" => 'Oe', \"\\u{dc}\" => 'Ue', \"\\u{1e9e}\" => 'Ss', \"\\u{e4}\" => 'ae', \"\\u{f6}\" => 'oe', \"\\u{fc}\" => 'ue', \"\\u{df}\" => 'ss']); // „ “ ” ‚ ‘ ’ ° Я я Ю ю Ä Ö Ü ẞ ä ö ü ß\n\t\tif ($iconv !== 'libiconv') {\n\t\t\t$s = strtr($s, [\"\\u{AE}\" => '(R)', \"\\u{A9}\" => '(c)', \"\\u{2026}\" => '...', \"\\u{AB}\" => '<<', \"\\u{BB}\" => '>>', \"\\u{A3}\" => 'lb', \"\\u{A5}\" => 'yen', \"\\u{B2}\" => '^2', \"\\u{B3}\" => '^3', \"\\u{B5}\" => 'u', \"\\u{B9}\" => '^1', \"\\u{BA}\" => 'o', \"\\u{BF}\" => '?', \"\\u{2CA}\" => \"'\", \"\\u{2CD}\" => '_', \"\\u{2DD}\" => '\"', \"\\u{1FEF}\" => '', \"\\u{20AC}\" => 'EUR', \"\\u{2122}\" => 'TM', \"\\u{212E}\" => 'e', \"\\u{2190}\" => '<-', \"\\u{2191}\" => '^', \"\\u{2192}\" => '->', \"\\u{2193}\" => 'V', \"\\u{2194}\" => '<->']); // ® © … « » £ ¥ ² ³ µ ¹ º ¿ ˊ ˍ ˝ ` € ™ ℮ ← ↑ → ↓ ↔\n\t\t}\n\n\t\t$s = \\Transliterator::create('Any-Latin; Latin-ASCII')->transliterate($s);\n\t\t// use iconv because The transliterator leaves some characters out of ASCII, eg → ʾ\n\t\tif ($iconv === 'glibc') {\n\t\t\t$s = strtr($s, '?', \"\\x01\"); // temporarily hide ? to distinguish them from the garbage that iconv creates\n\t\t\t$s = iconv('UTF-8', 'ASCII//TRANSLIT//IGNORE', $s);\n\t\t\t$s = str_replace(['?', \"\\x01\"], ['', '?'], $s); // remove garbage and restore ? characters\n\t\t} elseif ($iconv === 'libiconv') {\n\t\t\t$s = iconv('UTF-8', 'ASCII//TRANSLIT//IGNORE', $s);\n\t\t} else { // null or 'unknown' (#216)\n\t\t\t$s = self::pcre('preg_replace', ['#[^\\x00-\\x7F]++#', '', $s]); // remove non-ascii chars\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t * Modifies the UTF-8 string to the form used in the URL, ie removes diacritics and replaces all characters\n\t * except letters of the English alphabet and numbers with a hyphens.\n\t */\n\tpublic static function webalize(string $s, ?string $charlist = null, bool $lower = true): string\n\t{\n\t\t$s = self::toAscii($s);\n\t\tif ($lower) {\n\t\t\t$s = strtolower($s);\n\t\t}\n\n\t\t$s = self::pcre('preg_replace', ['#[^a-z0-9' . ($charlist !== null ? preg_quote($charlist, '#') : '') . ']+#i', '-', $s]);\n\t\t$s = trim($s, '-');\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t * Truncates a UTF-8 string to given maximal length, while trying not to split whole words. Only if the string is truncated,\n\t * an ellipsis (or something else set with third argument) is appended to the string.\n\t */\n\tpublic static function truncate(string $s, int $maxLen, string $append = \"\\u{2026}\"): string\n\t{\n\t\tif (self::length($s) > $maxLen) {\n\t\t\t$maxLen -= self::length($append);\n\t\t\tif ($maxLen < 1) {\n\t\t\t\treturn $append;\n\n\t\t\t} elseif ($matches = self::match($s, '#^.{1,' . $maxLen . '}(?=[\\s\\x00-/:-@\\[-`{-~])#us')) {\n\t\t\t\treturn $matches[0] . $append;\n\n\t\t\t} else {\n\t\t\t\treturn self::substring($s, 0, $maxLen) . $append;\n\t\t\t}\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t * Indents a multiline text from the left. Second argument sets how many indentation chars should be used,\n\t * while the indent itself is the third argument (*tab* by default).\n\t */\n\tpublic static function indent(string $s, int $level = 1, string $chars = \"\\t\"): string\n\t{\n\t\tif ($level > 0) {\n\t\t\t$s = self::replace($s, '#(?:^|[\\r\\n]+)(?=[^\\r\\n])#', '$0' . str_repeat($chars, $level));\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t * Converts all characters of UTF-8 string to lower case.\n\t */\n\tpublic static function lower(string $s): string\n\t{\n\t\treturn mb_strtolower($s, 'UTF-8');\n\t}\n\n\n\t/**\n\t * Converts the first character of a UTF-8 string to lower case and leaves the other characters unchanged.\n\t */\n\tpublic static function firstLower(string $s): string\n\t{\n\t\treturn self::lower(self::substring($s, 0, 1)) . self::substring($s, 1);\n\t}\n\n\n\t/**\n\t * Converts all characters of a UTF-8 string to upper case.\n\t */\n\tpublic static function upper(string $s): string\n\t{\n\t\treturn mb_strtoupper($s, 'UTF-8');\n\t}\n\n\n\t/**\n\t * Converts the first character of a UTF-8 string to upper case and leaves the other characters unchanged.\n\t */\n\tpublic static function firstUpper(string $s): string\n\t{\n\t\treturn self::upper(self::substring($s, 0, 1)) . self::substring($s, 1);\n\t}\n\n\n\t/**\n\t * Converts the first character of every word of a UTF-8 string to upper case and the others to lower case.\n\t */\n\tpublic static function capitalize(string $s): string\n\t{\n\t\treturn mb_convert_case($s, MB_CASE_TITLE, 'UTF-8');\n\t}\n\n\n\t/**\n\t * Compares two UTF-8 strings or their parts, without taking character case into account. If length is null, whole strings are compared,\n\t * if it is negative, the corresponding number of characters from the end of the strings is compared,\n\t * otherwise the appropriate number of characters from the beginning is compared.\n\t */\n\tpublic static function compare(string $left, string $right, ?int $length = null): bool\n\t{\n\t\tif (class_exists('Normalizer', false)) {\n\t\t\t$left = \\Normalizer::normalize($left, \\Normalizer::FORM_D); // form NFD is faster\n\t\t\t$right = \\Normalizer::normalize($right, \\Normalizer::FORM_D); // form NFD is faster\n\t\t}\n\n\t\tif ($length < 0) {\n\t\t\t$left = self::substring($left, $length, -$length);\n\t\t\t$right = self::substring($right, $length, -$length);\n\t\t} elseif ($length !== null) {\n\t\t\t$left = self::substring($left, 0, $length);\n\t\t\t$right = self::substring($right, 0, $length);\n\t\t}\n\n\t\treturn self::lower($left) === self::lower($right);\n\t}\n\n\n\t/**\n\t * Finds the common prefix of strings or returns empty string if the prefix was not found.\n\t * @param  string[]  $strings\n\t */\n\tpublic static function findPrefix(array $strings): string\n\t{\n\t\t$first = array_shift($strings);\n\t\tfor ($i = 0; $i < strlen($first); $i++) {\n\t\t\tforeach ($strings as $s) {\n\t\t\t\tif (!isset($s[$i]) || $first[$i] !== $s[$i]) {\n\t\t\t\t\twhile ($i && $first[$i - 1] >= \"\\x80\" && $first[$i] >= \"\\x80\" && $first[$i] < \"\\xC0\") {\n\t\t\t\t\t\t$i--;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn substr($first, 0, $i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $first;\n\t}\n\n\n\t/**\n\t * Returns number of characters (not bytes) in UTF-8 string.\n\t * That is the number of Unicode code points which may differ from the number of graphemes.\n\t */\n\tpublic static function length(string $s): int\n\t{\n\t\treturn match (true) {\n\t\t\textension_loaded('mbstring') => mb_strlen($s, 'UTF-8'),\n\t\t\textension_loaded('iconv') => iconv_strlen($s, 'UTF-8'),\n\t\t\tdefault => strlen(@utf8_decode($s)), // deprecated\n\t\t};\n\t}\n\n\n\t/**\n\t * Removes all left and right side spaces (or the characters passed as second argument) from a UTF-8 encoded string.\n\t */\n\tpublic static function trim(string $s, string $charlist = self::TrimCharacters): string\n\t{\n\t\t$charlist = preg_quote($charlist, '#');\n\t\treturn self::replace($s, '#^[' . $charlist . ']+|[' . $charlist . ']+$#Du', '');\n\t}\n\n\n\t/**\n\t * Pads a UTF-8 string to given length by prepending the $pad string to the beginning.\n\t * @param  non-empty-string  $pad\n\t */\n\tpublic static function padLeft(string $s, int $length, string $pad = ' '): string\n\t{\n\t\t$length = max(0, $length - self::length($s));\n\t\t$padLen = self::length($pad);\n\t\treturn str_repeat($pad, (int) ($length / $padLen)) . self::substring($pad, 0, $length % $padLen) . $s;\n\t}\n\n\n\t/**\n\t * Pads UTF-8 string to given length by appending the $pad string to the end.\n\t * @param  non-empty-string  $pad\n\t */\n\tpublic static function padRight(string $s, int $length, string $pad = ' '): string\n\t{\n\t\t$length = max(0, $length - self::length($s));\n\t\t$padLen = self::length($pad);\n\t\treturn $s . str_repeat($pad, (int) ($length / $padLen)) . self::substring($pad, 0, $length % $padLen);\n\t}\n\n\n\t/**\n\t * Reverses UTF-8 string.\n\t */\n\tpublic static function reverse(string $s): string\n\t{\n\t\tif (!extension_loaded('iconv')) {\n\t\t\tthrow new Nette\\NotSupportedException(__METHOD__ . '() requires ICONV extension that is not loaded.');\n\t\t}\n\n\t\treturn iconv('UTF-32LE', 'UTF-8', strrev(iconv('UTF-8', 'UTF-32BE', $s)));\n\t}\n\n\n\t/**\n\t * Returns part of $haystack before $nth occurence of $needle or returns null if the needle was not found.\n\t * Negative value means searching from the end.\n\t */\n\tpublic static function before(string $haystack, string $needle, int $nth = 1): ?string\n\t{\n\t\t$pos = self::pos($haystack, $needle, $nth);\n\t\treturn $pos === null\n\t\t\t? null\n\t\t\t: substr($haystack, 0, $pos);\n\t}\n\n\n\t/**\n\t * Returns part of $haystack after $nth occurence of $needle or returns null if the needle was not found.\n\t * Negative value means searching from the end.\n\t */\n\tpublic static function after(string $haystack, string $needle, int $nth = 1): ?string\n\t{\n\t\t$pos = self::pos($haystack, $needle, $nth);\n\t\treturn $pos === null\n\t\t\t? null\n\t\t\t: substr($haystack, $pos + strlen($needle));\n\t}\n\n\n\t/**\n\t * Returns position in characters of $nth occurence of $needle in $haystack or null if the $needle was not found.\n\t * Negative value of `$nth` means searching from the end.\n\t */\n\tpublic static function indexOf(string $haystack, string $needle, int $nth = 1): ?int\n\t{\n\t\t$pos = self::pos($haystack, $needle, $nth);\n\t\treturn $pos === null\n\t\t\t? null\n\t\t\t: self::length(substr($haystack, 0, $pos));\n\t}\n\n\n\t/**\n\t * Returns position in characters of $nth occurence of $needle in $haystack or null if the needle was not found.\n\t */\n\tprivate static function pos(string $haystack, string $needle, int $nth = 1): ?int\n\t{\n\t\tif (!$nth) {\n\t\t\treturn null;\n\t\t} elseif ($nth > 0) {\n\t\t\tif ($needle === '') {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t$pos = 0;\n\t\t\twhile (($pos = strpos($haystack, $needle, $pos)) !== false && --$nth) {\n\t\t\t\t$pos++;\n\t\t\t}\n\t\t} else {\n\t\t\t$len = strlen($haystack);\n\t\t\tif ($needle === '') {\n\t\t\t\treturn $len;\n\t\t\t} elseif ($len === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$pos = $len - 1;\n\t\t\twhile (($pos = strrpos($haystack, $needle, $pos - $len)) !== false && ++$nth) {\n\t\t\t\t$pos--;\n\t\t\t}\n\t\t}\n\n\t\treturn Helpers::falseToNull($pos);\n\t}\n\n\n\t/**\n\t * Divides the string into arrays according to the regular expression. Expressions in parentheses will be captured and returned as well.\n\t */\n\tpublic static function split(\n\t\tstring $subject,\n\t\t#[Language('RegExp')]\n\t\tstring $pattern,\n\t\tbool|int $captureOffset = false,\n\t\tbool $skipEmpty = false,\n\t\tint $limit = -1,\n\t\tbool $utf8 = false,\n\t): array\n\t{\n\t\t$flags = is_int($captureOffset)  // back compatibility\n\t\t\t? $captureOffset\n\t\t\t: ($captureOffset ? PREG_SPLIT_OFFSET_CAPTURE : 0) | ($skipEmpty ? PREG_SPLIT_NO_EMPTY : 0);\n\n\t\t$pattern .= $utf8 ? 'u' : '';\n\t\t$m = self::pcre('preg_split', [$pattern, $subject, $limit, $flags | PREG_SPLIT_DELIM_CAPTURE]);\n\t\treturn $utf8 && $captureOffset\n\t\t\t? self::bytesToChars($subject, [$m])[0]\n\t\t\t: $m;\n\t}\n\n\n\t/**\n\t * Searches the string for the part matching the regular expression and returns\n\t * an array with the found expression and individual subexpressions, or `null`.\n\t */\n\tpublic static function match(\n\t\tstring $subject,\n\t\t#[Language('RegExp')]\n\t\tstring $pattern,\n\t\tbool|int $captureOffset = false,\n\t\tint $offset = 0,\n\t\tbool $unmatchedAsNull = false,\n\t\tbool $utf8 = false,\n\t): ?array\n\t{\n\t\t$flags = is_int($captureOffset) // back compatibility\n\t\t\t? $captureOffset\n\t\t\t: ($captureOffset ? PREG_OFFSET_CAPTURE : 0) | ($unmatchedAsNull ? PREG_UNMATCHED_AS_NULL : 0);\n\n\t\tif ($utf8) {\n\t\t\t$offset = strlen(self::substring($subject, 0, $offset));\n\t\t\t$pattern .= 'u';\n\t\t}\n\n\t\tif ($offset > strlen($subject)) {\n\t\t\treturn null;\n\t\t} elseif (!self::pcre('preg_match', [$pattern, $subject, &$m, $flags, $offset])) {\n\t\t\treturn null;\n\t\t} elseif ($utf8 && $captureOffset) {\n\t\t\treturn self::bytesToChars($subject, [$m])[0];\n\t\t} else {\n\t\t\treturn $m;\n\t\t}\n\t}\n\n\n\t/**\n\t * Searches the string for all occurrences matching the regular expression and\n\t * returns an array of arrays containing the found expression and each subexpression.\n\t * @return ($lazy is true ? \\Generator<int, array> : array[])\n\t */\n\tpublic static function matchAll(\n\t\tstring $subject,\n\t\t#[Language('RegExp')]\n\t\tstring $pattern,\n\t\tbool|int $captureOffset = false,\n\t\tint $offset = 0,\n\t\tbool $unmatchedAsNull = false,\n\t\tbool $patternOrder = false,\n\t\tbool $utf8 = false,\n\t\tbool $lazy = false,\n\t): array|\\Generator\n\t{\n\t\tif ($utf8) {\n\t\t\t$offset = strlen(self::substring($subject, 0, $offset));\n\t\t\t$pattern .= 'u';\n\t\t}\n\n\t\tif ($lazy) {\n\t\t\t$flags = PREG_OFFSET_CAPTURE | ($unmatchedAsNull ? PREG_UNMATCHED_AS_NULL : 0);\n\t\t\treturn (function () use ($utf8, $captureOffset, $flags, $subject, $pattern, $offset) {\n\t\t\t\t$counter = 0;\n\t\t\t\twhile (\n\t\t\t\t\t$offset <= strlen($subject) - ($counter ? 1 : 0)\n\t\t\t\t\t&& self::pcre('preg_match', [$pattern, $subject, &$m, $flags, $offset])\n\t\t\t\t) {\n\t\t\t\t\t$offset = $m[0][1] + max(1, strlen($m[0][0]));\n\t\t\t\t\tif (!$captureOffset) {\n\t\t\t\t\t\t$m = array_map(fn($item) => $item[0], $m);\n\t\t\t\t\t} elseif ($utf8) {\n\t\t\t\t\t\t$m = self::bytesToChars($subject, [$m])[0];\n\t\t\t\t\t}\n\t\t\t\t\tyield $counter++ => $m;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tif ($offset > strlen($subject)) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$flags = is_int($captureOffset) // back compatibility\n\t\t\t? $captureOffset\n\t\t\t: ($captureOffset ? PREG_OFFSET_CAPTURE : 0) | ($unmatchedAsNull ? PREG_UNMATCHED_AS_NULL : 0) | ($patternOrder ? PREG_PATTERN_ORDER : 0);\n\n\t\tself::pcre('preg_match_all', [\n\t\t\t$pattern, $subject, &$m,\n\t\t\t($flags & PREG_PATTERN_ORDER) ? $flags : ($flags | PREG_SET_ORDER),\n\t\t\t$offset,\n\t\t]);\n\t\treturn $utf8 && $captureOffset\n\t\t\t? self::bytesToChars($subject, $m)\n\t\t\t: $m;\n\t}\n\n\n\t/**\n\t * Replaces all occurrences matching regular expression $pattern which can be string or array in the form `pattern => replacement`.\n\t */\n\tpublic static function replace(\n\t\tstring $subject,\n\t\t#[Language('RegExp')]\n\t\tstring|array $pattern,\n\t\tstring|callable $replacement = '',\n\t\tint $limit = -1,\n\t\tbool $captureOffset = false,\n\t\tbool $unmatchedAsNull = false,\n\t\tbool $utf8 = false,\n\t): string\n\t{\n\t\tif (is_object($replacement) || is_array($replacement)) {\n\t\t\tif (!is_callable($replacement, false, $textual)) {\n\t\t\t\tthrow new Nette\\InvalidStateException(\"Callback '$textual' is not callable.\");\n\t\t\t}\n\n\t\t\t$flags = ($captureOffset ? PREG_OFFSET_CAPTURE : 0) | ($unmatchedAsNull ? PREG_UNMATCHED_AS_NULL : 0);\n\t\t\tif ($utf8) {\n\t\t\t\t$pattern .= 'u';\n\t\t\t\tif ($captureOffset) {\n\t\t\t\t\t$replacement = fn($m) => $replacement(self::bytesToChars($subject, [$m])[0]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn self::pcre('preg_replace_callback', [$pattern, $replacement, $subject, $limit, 0, $flags]);\n\n\t\t} elseif (is_array($pattern) && is_string(key($pattern))) {\n\t\t\t$replacement = array_values($pattern);\n\t\t\t$pattern = array_keys($pattern);\n\t\t}\n\n\t\tif ($utf8) {\n\t\t\t$pattern = array_map(fn($item) => $item . 'u', (array) $pattern);\n\t\t}\n\n\t\treturn self::pcre('preg_replace', [$pattern, $replacement, $subject, $limit]);\n\t}\n\n\n\tprivate static function bytesToChars(string $s, array $groups): array\n\t{\n\t\t$lastBytes = $lastChars = 0;\n\t\tforeach ($groups as &$matches) {\n\t\t\tforeach ($matches as &$match) {\n\t\t\t\tif ($match[1] > $lastBytes) {\n\t\t\t\t\t$lastChars += self::length(substr($s, $lastBytes, $match[1] - $lastBytes));\n\t\t\t\t} elseif ($match[1] < $lastBytes) {\n\t\t\t\t\t$lastChars -= self::length(substr($s, $match[1], $lastBytes - $match[1]));\n\t\t\t\t}\n\n\t\t\t\t$lastBytes = $match[1];\n\t\t\t\t$match[1] = $lastChars;\n\t\t\t}\n\t\t}\n\n\t\treturn $groups;\n\t}\n\n\n\t/** @internal */\n\tpublic static function pcre(string $func, array $args)\n\t{\n\t\t$res = Callback::invokeSafe($func, $args, function (string $message) use ($args): void {\n\t\t\t// compile-time error, not detectable by preg_last_error\n\t\t\tthrow new RegexpException($message . ' in pattern: ' . implode(' or ', (array) $args[0]));\n\t\t});\n\n\t\tif (($code = preg_last_error()) // run-time error, but preg_last_error & return code are liars\n\t\t\t&& ($res === null || !in_array($func, ['preg_filter', 'preg_replace_callback', 'preg_replace'], true))\n\t\t) {\n\t\t\tthrow new RegexpException(preg_last_error_msg()\n\t\t\t\t. ' (pattern: ' . implode(' or ', (array) $args[0]) . ')', $code);\n\t\t}\n\n\t\treturn $res;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/DateTime.php","ext":"php","size":4879,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse function array_merge, checkdate, implode, is_numeric, is_string, preg_replace_callback, sprintf, time, trim;\n\n\n/**\n * DateTime.\n */\nclass DateTime extends \\DateTime implements \\JsonSerializable\n{\n\t/** minute in seconds */\n\tpublic const MINUTE = 60;\n\n\t/** hour in seconds */\n\tpublic const HOUR = 60 * self::MINUTE;\n\n\t/** day in seconds */\n\tpublic const DAY = 24 * self::HOUR;\n\n\t/** week in seconds */\n\tpublic const WEEK = 7 * self::DAY;\n\n\t/** average month in seconds */\n\tpublic const MONTH = 2_629_800;\n\n\t/** average year in seconds */\n\tpublic const YEAR = 31_557_600;\n\n\n\t/**\n\t * Creates a DateTime object from a string, UNIX timestamp, or other DateTimeInterface object.\n\t * @throws \\Exception if the date and time are not valid.\n\t */\n\tpublic static function from(string|int|\\DateTimeInterface|null $time): static\n\t{\n\t\tif ($time instanceof \\DateTimeInterface) {\n\t\t\treturn static::createFromInterface($time);\n\n\t\t} elseif (is_numeric($time)) {\n\t\t\tif ($time <= self::YEAR) {\n\t\t\t\t$time += time();\n\t\t\t}\n\n\t\t\treturn (new static)->setTimestamp((int) $time);\n\n\t\t} else { // textual or null\n\t\t\treturn new static((string) $time);\n\t\t}\n\t}\n\n\n\t/**\n\t * Creates DateTime object.\n\t * @throws \\Exception if the date and time are not valid.\n\t */\n\tpublic static function fromParts(\n\t\tint $year,\n\t\tint $month,\n\t\tint $day,\n\t\tint $hour = 0,\n\t\tint $minute = 0,\n\t\tfloat $second = 0.0,\n\t): static\n\t{\n\t\t$sec = (int) floor($second);\n\t\treturn (new static(''))\n\t\t\t->setDate($year, $month, $day)\n\t\t\t->setTime($hour, $minute, $sec, (int) round(($second - $sec) * 1e6));\n\t}\n\n\n\t/**\n\t * Returns a new DateTime object formatted according to the specified format.\n\t */\n\tpublic static function createFromFormat(\n\t\tstring $format,\n\t\tstring $datetime,\n\t\tstring|\\DateTimeZone|null $timezone = null,\n\t): static|false\n\t{\n\t\tif (is_string($timezone)) {\n\t\t\t$timezone = new \\DateTimeZone($timezone);\n\t\t}\n\n\t\t$date = parent::createFromFormat($format, $datetime, $timezone);\n\t\treturn $date ? static::from($date) : false;\n\t}\n\n\n\tpublic function __construct(string $datetime = 'now', ?\\DateTimeZone $timezone = null)\n\t{\n\t\t$this->apply($datetime, $timezone, true);\n\t}\n\n\n\tpublic function modify(string $modifier): static\n\t{\n\t\t$this->apply($modifier);\n\t\treturn $this;\n\t}\n\n\n\tpublic function setDate(int $year, int $month, int $day): static\n\t{\n\t\tif (!checkdate($month, $day, $year)) {\n\t\t\tthrow new \\Exception(sprintf('The date %04d-%02d-%02d is not valid.', $year, $month, $day));\n\t\t}\n\t\treturn parent::setDate($year, $month, $day);\n\t}\n\n\n\tpublic function setTime(int $hour, int $minute, int $second = 0, int $microsecond = 0): static\n\t{\n\t\tif (\n\t\t\t$hour < 0 || $hour > 23\n\t\t\t|| $minute < 0 || $minute > 59\n\t\t\t|| $second < 0 || $second >= 60\n\t\t\t|| $microsecond < 0 || $microsecond >= 1_000_000\n\t\t) {\n\t\t\tthrow new \\Exception(sprintf('The time %02d:%02d:%08.5F is not valid.', $hour, $minute, $second + $microsecond / 1_000_000));\n\t\t}\n\t\treturn parent::setTime($hour, $minute, $second, $microsecond);\n\t}\n\n\n\t/**\n\t * Converts a relative time string (e.g. '10 minut') to seconds.\n\t */\n\tpublic static function relativeToSeconds(string $relativeTime): int\n\t{\n\t\treturn (new self('@0 ' . $relativeTime))\n\t\t\t->getTimestamp();\n\t}\n\n\n\tprivate function apply(string $datetime, $timezone = null, bool $ctr = false): void\n\t{\n\t\t$relPart = '';\n\t\t$absPart = preg_replace_callback(\n\t\t\t'/[+-]?\\s*\\d+\\s+((microsecond|millisecond|[mµu]sec)s?|[mµ]s|sec(ond)?s?|min(ute)?s?|hours?)(\\s+ago)?\\b/iu',\n\t\t\tfunction ($m) use (&$relPart) {\n\t\t\t\t$relPart .= $m[0] . ' ';\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\t$datetime,\n\t\t);\n\n\t\tif ($ctr) {\n\t\t\tparent::__construct($absPart, $timezone);\n\t\t\t$this->handleErrors($datetime);\n\t\t} elseif (trim($absPart)) {\n\t\t\tparent::modify($absPart) && $this->handleErrors($datetime);\n\t\t}\n\n\t\tif ($relPart) {\n\t\t\t$timezone ??= $this->getTimezone();\n\t\t\t$this->setTimezone(new \\DateTimeZone('UTC'));\n\t\t\tparent::modify($relPart) && $this->handleErrors($datetime);\n\t\t\t$this->setTimezone($timezone);\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns JSON representation in ISO 8601 (used by JavaScript).\n\t */\n\tpublic function jsonSerialize(): string\n\t{\n\t\treturn $this->format('c');\n\t}\n\n\n\t/**\n\t * Returns the date and time in the format 'Y-m-d H:i:s'.\n\t */\n\tpublic function __toString(): string\n\t{\n\t\treturn $this->format('Y-m-d H:i:s');\n\t}\n\n\n\t/**\n\t * You'd better use: (clone $dt)->modify(...)\n\t */\n\tpublic function modifyClone(string $modify = ''): static\n\t{\n\t\t$dolly = clone $this;\n\t\treturn $modify ? $dolly->modify($modify) : $dolly;\n\t}\n\n\n\tprivate function handleErrors(string $value): void\n\t{\n\t\t$errors = self::getLastErrors();\n\t\t$errors = array_merge($errors['errors'] ?? [], $errors['warnings'] ?? []);\n\t\tif ($errors) {\n\t\t\tthrow new \\Exception(implode(', ', $errors) . \" '$value'\");\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Reflection.php","ext":"php","size":8986,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function constant, current, defined, end, explode, file_get_contents, implode, ltrim, next, ord, strrchr, strtolower, substr;\nuse const PHP_VERSION_ID, T_AS, T_CLASS, T_COMMENT, T_CURLY_OPEN, T_DOC_COMMENT, T_DOLLAR_OPEN_CURLY_BRACES, T_ENUM, T_INTERFACE, T_NAME_FULLY_QUALIFIED, T_NAME_QUALIFIED, T_NAMESPACE, T_NS_SEPARATOR, T_STRING, T_TRAIT, T_USE, T_WHITESPACE, TOKEN_PARSE;\n\n\n/**\n * PHP reflection helpers.\n */\nfinal class Reflection\n{\n\tuse Nette\\StaticClass;\n\n\t/** @deprecated use Nette\\Utils\\Validators::isBuiltinType() */\n\tpublic static function isBuiltinType(string $type): bool\n\t{\n\t\treturn Validators::isBuiltinType($type);\n\t}\n\n\n\t#[\\Deprecated('use Nette\\Utils\\Validators::isClassKeyword()')]\n\tpublic static function isClassKeyword(string $name): bool\n\t{\n\t\treturn Validators::isClassKeyword($name);\n\t}\n\n\n\tpublic static function getParameterDefaultValue(\\ReflectionParameter $param): mixed\n\t{\n\t\tif ($param->isDefaultValueConstant()) {\n\t\t\t$const = $orig = $param->getDefaultValueConstantName();\n\t\t\t$pair = explode('::', $const);\n\t\t\tif (isset($pair[1])) {\n\t\t\t\t$pair[0] = Type::resolve($pair[0], $param);\n\t\t\t\ttry {\n\t\t\t\t\t$rcc = new \\ReflectionClassConstant($pair[0], $pair[1]);\n\t\t\t\t} catch (\\ReflectionException $e) {\n\t\t\t\t\t$name = self::toString($param);\n\t\t\t\t\tthrow new \\ReflectionException(\"Unable to resolve constant $orig used as default value of $name.\", 0, $e);\n\t\t\t\t}\n\n\t\t\t\treturn $rcc->getValue();\n\n\t\t\t} elseif (!defined($const)) {\n\t\t\t\t$const = substr((string) strrchr($const, '\\\\'), 1);\n\t\t\t\tif (!defined($const)) {\n\t\t\t\t\t$name = self::toString($param);\n\t\t\t\t\tthrow new \\ReflectionException(\"Unable to resolve constant $orig used as default value of $name.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn constant($const);\n\t\t}\n\n\t\treturn $param->getDefaultValue();\n\t}\n\n\n\t/**\n\t * Returns a reflection of a class or trait that contains a declaration of given property. Property can also be declared in the trait.\n\t */\n\tpublic static function getPropertyDeclaringClass(\\ReflectionProperty $prop): \\ReflectionClass\n\t{\n\t\tforeach ($prop->getDeclaringClass()->getTraits() as $trait) {\n\t\t\tif ($trait->hasProperty($prop->name)\n\t\t\t\t// doc-comment guessing as workaround for insufficient PHP reflection\n\t\t\t\t&& $trait->getProperty($prop->name)->getDocComment() === $prop->getDocComment()\n\t\t\t) {\n\t\t\t\treturn self::getPropertyDeclaringClass($trait->getProperty($prop->name));\n\t\t\t}\n\t\t}\n\n\t\treturn $prop->getDeclaringClass();\n\t}\n\n\n\t/**\n\t * Returns a reflection of a method that contains a declaration of $method.\n\t * Usually, each method is its own declaration, but the body of the method can also be in the trait and under a different name.\n\t */\n\tpublic static function getMethodDeclaringMethod(\\ReflectionMethod $method): \\ReflectionMethod\n\t{\n\t\t// file & line guessing as workaround for insufficient PHP reflection\n\t\t$decl = $method->getDeclaringClass();\n\t\tif ($decl->getFileName() === $method->getFileName()\n\t\t\t&& $decl->getStartLine() <= $method->getStartLine()\n\t\t\t&& $decl->getEndLine() >= $method->getEndLine()\n\t\t) {\n\t\t\treturn $method;\n\t\t}\n\n\t\t$hash = [$method->getFileName(), $method->getStartLine(), $method->getEndLine()];\n\t\tif (($alias = $decl->getTraitAliases()[$method->name] ?? null)\n\t\t\t&& ($m = new \\ReflectionMethod(...explode('::', $alias, 2)))\n\t\t\t&& $hash === [$m->getFileName(), $m->getStartLine(), $m->getEndLine()]\n\t\t) {\n\t\t\treturn self::getMethodDeclaringMethod($m);\n\t\t}\n\n\t\tforeach ($decl->getTraits() as $trait) {\n\t\t\tif ($trait->hasMethod($method->name)\n\t\t\t\t&& ($m = $trait->getMethod($method->name))\n\t\t\t\t&& $hash === [$m->getFileName(), $m->getStartLine(), $m->getEndLine()]\n\t\t\t) {\n\t\t\t\treturn self::getMethodDeclaringMethod($m);\n\t\t\t}\n\t\t}\n\n\t\treturn $method;\n\t}\n\n\n\t/**\n\t * Finds out if reflection has access to PHPdoc comments. Comments may not be available due to the opcode cache.\n\t */\n\tpublic static function areCommentsAvailable(): bool\n\t{\n\t\tstatic $res;\n\t\treturn $res ?? $res = (bool) (new \\ReflectionMethod(self::class, __FUNCTION__))->getDocComment();\n\t}\n\n\n\tpublic static function toString(\\Reflector $ref): string\n\t{\n\t\tif ($ref instanceof \\ReflectionClass) {\n\t\t\treturn $ref->name;\n\t\t} elseif ($ref instanceof \\ReflectionMethod) {\n\t\t\treturn $ref->getDeclaringClass()->name . '::' . $ref->name . '()';\n\t\t} elseif ($ref instanceof \\ReflectionFunction) {\n\t\t\treturn PHP_VERSION_ID >= 80200 && $ref->isAnonymous()\n\t\t\t\t? '{closure}()'\n\t\t\t\t: $ref->name . '()';\n\t\t} elseif ($ref instanceof \\ReflectionProperty) {\n\t\t\treturn self::getPropertyDeclaringClass($ref)->name . '::$' . $ref->name;\n\t\t} elseif ($ref instanceof \\ReflectionParameter) {\n\t\t\treturn '$' . $ref->name . ' in ' . self::toString($ref->getDeclaringFunction());\n\t\t} else {\n\t\t\tthrow new Nette\\InvalidArgumentException;\n\t\t}\n\t}\n\n\n\t/**\n\t * Expands the name of the class to full name in the given context of given class.\n\t * Thus, it returns how the PHP parser would understand $name if it were written in the body of the class $context.\n\t * @throws Nette\\InvalidArgumentException\n\t */\n\tpublic static function expandClassName(string $name, \\ReflectionClass $context): string\n\t{\n\t\t$lower = strtolower($name);\n\t\tif (empty($name)) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Class name must not be empty.');\n\n\t\t} elseif (Validators::isBuiltinType($lower)) {\n\t\t\treturn $lower;\n\n\t\t} elseif ($lower === 'self' || $lower === 'static') {\n\t\t\treturn $context->name;\n\n\t\t} elseif ($lower === 'parent') {\n\t\t\treturn $context->getParentClass()\n\t\t\t\t? $context->getParentClass()->name\n\t\t\t\t: 'parent';\n\n\t\t} elseif ($name[0] === '\\\\') { // fully qualified name\n\t\t\treturn ltrim($name, '\\\\');\n\t\t}\n\n\t\t$uses = self::getUseStatements($context);\n\t\t$parts = explode('\\\\', $name, 2);\n\t\tif (isset($uses[$parts[0]])) {\n\t\t\t$parts[0] = $uses[$parts[0]];\n\t\t\treturn implode('\\\\', $parts);\n\n\t\t} elseif ($context->inNamespace()) {\n\t\t\treturn $context->getNamespaceName() . '\\\\' . $name;\n\n\t\t} else {\n\t\t\treturn $name;\n\t\t}\n\t}\n\n\n\t/** @return array<string, class-string> of [alias => class] */\n\tpublic static function getUseStatements(\\ReflectionClass $class): array\n\t{\n\t\tif ($class->isAnonymous()) {\n\t\t\tthrow new Nette\\NotImplementedException('Anonymous classes are not supported.');\n\t\t}\n\n\t\tstatic $cache = [];\n\t\tif (!isset($cache[$name = $class->name])) {\n\t\t\tif ($class->isInternal()) {\n\t\t\t\t$cache[$name] = [];\n\t\t\t} else {\n\t\t\t\t$code = file_get_contents($class->getFileName());\n\t\t\t\t$cache = self::parseUseStatements($code, $name) + $cache;\n\t\t\t}\n\t\t}\n\n\t\treturn $cache[$name];\n\t}\n\n\n\t/**\n\t * Parses PHP code to [class => [alias => class, ...]]\n\t */\n\tprivate static function parseUseStatements(string $code, ?string $forClass = null): array\n\t{\n\t\ttry {\n\t\t\t$tokens = \\PhpToken::tokenize($code, TOKEN_PARSE);\n\t\t} catch (\\ParseError $e) {\n\t\t\ttrigger_error($e->getMessage(), E_USER_NOTICE);\n\t\t\t$tokens = [];\n\t\t}\n\n\t\t$namespace = $class = null;\n\t\t$classLevel = $level = 0;\n\t\t$res = $uses = [];\n\n\t\t$nameTokens = [T_STRING, T_NS_SEPARATOR, T_NAME_QUALIFIED, T_NAME_FULLY_QUALIFIED];\n\n\t\twhile ($token = current($tokens)) {\n\t\t\tnext($tokens);\n\t\t\tswitch ($token->id) {\n\t\t\t\tcase T_NAMESPACE:\n\t\t\t\t\t$namespace = ltrim(self::fetch($tokens, $nameTokens) . '\\\\', '\\\\');\n\t\t\t\t\t$uses = [];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase T_CLASS:\n\t\t\t\tcase T_INTERFACE:\n\t\t\t\tcase T_TRAIT:\n\t\t\t\tcase PHP_VERSION_ID < 80100 ? T_CLASS : T_ENUM:\n\t\t\t\t\tif ($name = self::fetch($tokens, T_STRING)) {\n\t\t\t\t\t\t$class = $namespace . $name;\n\t\t\t\t\t\t$classLevel = $level + 1;\n\t\t\t\t\t\t$res[$class] = $uses;\n\t\t\t\t\t\tif ($class === $forClass) {\n\t\t\t\t\t\t\treturn $res;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase T_USE:\n\t\t\t\t\twhile (!$class && ($name = self::fetch($tokens, $nameTokens))) {\n\t\t\t\t\t\t$name = ltrim($name, '\\\\');\n\t\t\t\t\t\tif (self::fetch($tokens, '{')) {\n\t\t\t\t\t\t\twhile ($suffix = self::fetch($tokens, $nameTokens)) {\n\t\t\t\t\t\t\t\tif (self::fetch($tokens, T_AS)) {\n\t\t\t\t\t\t\t\t\t$uses[self::fetch($tokens, T_STRING)] = $name . $suffix;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$tmp = explode('\\\\', $suffix);\n\t\t\t\t\t\t\t\t\t$uses[end($tmp)] = $name . $suffix;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!self::fetch($tokens, ',')) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} elseif (self::fetch($tokens, T_AS)) {\n\t\t\t\t\t\t\t$uses[self::fetch($tokens, T_STRING)] = $name;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$tmp = explode('\\\\', $name);\n\t\t\t\t\t\t\t$uses[end($tmp)] = $name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!self::fetch($tokens, ',')) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase T_CURLY_OPEN:\n\t\t\t\tcase T_DOLLAR_OPEN_CURLY_BRACES:\n\t\t\t\tcase ord('{'):\n\t\t\t\t\t$level++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ord('}'):\n\t\t\t\t\tif ($level === $classLevel) {\n\t\t\t\t\t\t$class = $classLevel = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t$level--;\n\t\t\t}\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\tprivate static function fetch(array &$tokens, string|int|array $take): ?string\n\t{\n\t\t$res = null;\n\t\twhile ($token = current($tokens)) {\n\t\t\tif ($token->is($take)) {\n\t\t\t\t$res .= $token->text;\n\t\t\t} elseif (!$token->is([T_DOC_COMMENT, T_WHITESPACE, T_COMMENT])) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnext($tokens);\n\t\t}\n\n\t\treturn $res;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/ImageType.php","ext":"php","size":509,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse const IMAGETYPE_BMP, IMAGETYPE_GIF, IMAGETYPE_JPEG, IMAGETYPE_PNG, IMAGETYPE_WEBP;\n\n\n/**\n * Type of image file.\n */\n/*enum*/ final class ImageType\n{\n\tpublic const\n\t\tJPEG = IMAGETYPE_JPEG,\n\t\tPNG = IMAGETYPE_PNG,\n\t\tGIF = IMAGETYPE_GIF,\n\t\tWEBP = IMAGETYPE_WEBP,\n\t\tAVIF = 19, // IMAGETYPE_AVIF,\n\t\tBMP = IMAGETYPE_BMP;\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Callback.php","ext":"php","size":3727,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function explode, func_get_args, ini_get, is_array, is_callable, is_object, is_string, preg_replace, restore_error_handler, set_error_handler, sprintf, str_contains, str_ends_with;\n\n\n/**\n * PHP callable tools.\n */\nfinal class Callback\n{\n\tuse Nette\\StaticClass;\n\n\t/**\n\t * Invokes internal PHP function with own error handler.\n\t */\n\tpublic static function invokeSafe(string $function, array $args, callable $onError): mixed\n\t{\n\t\t$prev = set_error_handler(function ($severity, $message, $file) use ($onError, &$prev, $function): ?bool {\n\t\t\tif ($file === __FILE__) {\n\t\t\t\t$msg = ini_get('html_errors')\n\t\t\t\t\t? Html::htmlToText($message)\n\t\t\t\t\t: $message;\n\t\t\t\t$msg = preg_replace(\"#^$function\\\\(.*?\\\\): #\", '', $msg);\n\t\t\t\tif ($onError($msg, $severity) !== false) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $prev ? $prev(...func_get_args()) : false;\n\t\t});\n\n\t\ttry {\n\t\t\treturn $function(...$args);\n\t\t} finally {\n\t\t\trestore_error_handler();\n\t\t}\n\t}\n\n\n\t/**\n\t * Checks that $callable is valid PHP callback. Otherwise throws exception. If the $syntax is set to true, only verifies\n\t * that $callable has a valid structure to be used as a callback, but does not verify if the class or method actually exists.\n\t * @return callable\n\t * @throws Nette\\InvalidArgumentException\n\t */\n\tpublic static function check(mixed $callable, bool $syntax = false)\n\t{\n\t\tif (!is_callable($callable, $syntax)) {\n\t\t\tthrow new Nette\\InvalidArgumentException(\n\t\t\t\t$syntax\n\t\t\t\t? 'Given value is not a callable type.'\n\t\t\t\t: sprintf(\"Callback '%s' is not callable.\", self::toString($callable)),\n\t\t\t);\n\t\t}\n\n\t\treturn $callable;\n\t}\n\n\n\t/**\n\t * Converts PHP callback to textual form. Class or method may not exists.\n\t */\n\tpublic static function toString(mixed $callable): string\n\t{\n\t\tif ($callable instanceof \\Closure) {\n\t\t\t$inner = self::unwrap($callable);\n\t\t\treturn '{closure' . ($inner instanceof \\Closure ? '}' : ' ' . self::toString($inner) . '}');\n\t\t} else {\n\t\t\tis_callable(is_object($callable) ? [$callable, '__invoke'] : $callable, true, $textual);\n\t\t\treturn $textual;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns reflection for method or function used in PHP callback.\n\t * @param  callable  $callable  type check is escalated to ReflectionException\n\t * @throws \\ReflectionException  if callback is not valid\n\t */\n\tpublic static function toReflection($callable): \\ReflectionMethod|\\ReflectionFunction\n\t{\n\t\tif ($callable instanceof \\Closure) {\n\t\t\t$callable = self::unwrap($callable);\n\t\t}\n\n\t\tif (is_string($callable) && str_contains($callable, '::')) {\n\t\t\treturn new ReflectionMethod(...explode('::', $callable, 2));\n\t\t} elseif (is_array($callable)) {\n\t\t\treturn new ReflectionMethod($callable[0], $callable[1]);\n\t\t} elseif (is_object($callable) && !$callable instanceof \\Closure) {\n\t\t\treturn new ReflectionMethod($callable, '__invoke');\n\t\t} else {\n\t\t\treturn new \\ReflectionFunction($callable);\n\t\t}\n\t}\n\n\n\t/**\n\t * Checks whether PHP callback is function or static method.\n\t */\n\tpublic static function isStatic(callable $callable): bool\n\t{\n\t\treturn is_string(is_array($callable) ? $callable[0] : $callable);\n\t}\n\n\n\t/**\n\t * Unwraps closure created by Closure::fromCallable().\n\t */\n\tpublic static function unwrap(\\Closure $closure): callable|array\n\t{\n\t\t$r = new \\ReflectionFunction($closure);\n\t\t$class = $r->getClosureScopeClass()?->name;\n\t\tif (str_ends_with($r->name, '}')) {\n\t\t\treturn $closure;\n\n\t\t} elseif (($obj = $r->getClosureThis()) && $obj::class === $class) {\n\t\t\treturn [$obj, $r->name];\n\n\t\t} elseif ($class) {\n\t\t\treturn [$class, $r->name];\n\n\t\t} else {\n\t\t\treturn $r->name;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Json.php","ext":"php","size":2596,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function defined, is_int, json_decode, json_encode, json_last_error, json_last_error_msg;\nuse const JSON_BIGINT_AS_STRING, JSON_FORCE_OBJECT, JSON_HEX_AMP, JSON_HEX_APOS, JSON_HEX_QUOT, JSON_HEX_TAG, JSON_OBJECT_AS_ARRAY, JSON_PRESERVE_ZERO_FRACTION, JSON_PRETTY_PRINT, JSON_UNESCAPED_SLASHES, JSON_UNESCAPED_UNICODE;\n\n\n/**\n * JSON encoder and decoder.\n */\nfinal class Json\n{\n\tuse Nette\\StaticClass;\n\n\t/** @deprecated use Json::decode(..., forceArrays: true) */\n\tpublic const FORCE_ARRAY = JSON_OBJECT_AS_ARRAY;\n\n\t/** @deprecated use Json::encode(..., pretty: true) */\n\tpublic const PRETTY = JSON_PRETTY_PRINT;\n\n\t/** @deprecated use Json::encode(..., asciiSafe: true) */\n\tpublic const ESCAPE_UNICODE = 1 << 19;\n\n\n\t/**\n\t * Converts value to JSON format. Use $pretty for easier reading and clarity, $asciiSafe for ASCII output\n\t * and $htmlSafe for HTML escaping, $forceObjects enforces the encoding of non-associateve arrays as objects.\n\t * @throws JsonException\n\t */\n\tpublic static function encode(\n\t\tmixed $value,\n\t\tbool|int $pretty = false,\n\t\tbool $asciiSafe = false,\n\t\tbool $htmlSafe = false,\n\t\tbool $forceObjects = false,\n\t): string\n\t{\n\t\tif (is_int($pretty)) { // back compatibility\n\t\t\t$flags = ($pretty & self::ESCAPE_UNICODE ? 0 : JSON_UNESCAPED_UNICODE) | ($pretty & ~self::ESCAPE_UNICODE);\n\t\t} else {\n\t\t\t$flags = ($asciiSafe ? 0 : JSON_UNESCAPED_UNICODE)\n\t\t\t\t| ($pretty ? JSON_PRETTY_PRINT : 0)\n\t\t\t\t| ($forceObjects ? JSON_FORCE_OBJECT : 0)\n\t\t\t\t| ($htmlSafe ? JSON_HEX_AMP | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_TAG : 0);\n\t\t}\n\n\t\t$flags |= JSON_UNESCAPED_SLASHES\n\t\t\t| (defined('JSON_PRESERVE_ZERO_FRACTION') ? JSON_PRESERVE_ZERO_FRACTION : 0); // since PHP 5.6.6 & PECL JSON-C 1.3.7\n\n\t\t$json = json_encode($value, $flags);\n\t\tif ($error = json_last_error()) {\n\t\t\tthrow new JsonException(json_last_error_msg(), $error);\n\t\t}\n\n\t\treturn $json;\n\t}\n\n\n\t/**\n\t * Parses JSON to PHP value. The $forceArrays enforces the decoding of objects as arrays.\n\t * @throws JsonException\n\t */\n\tpublic static function decode(string $json, bool|int $forceArrays = false): mixed\n\t{\n\t\t$flags = is_int($forceArrays) // back compatibility\n\t\t\t? $forceArrays\n\t\t\t: ($forceArrays ? JSON_OBJECT_AS_ARRAY : 0);\n\t\t$flags |= JSON_BIGINT_AS_STRING;\n\n\t\t$value = json_decode($json, flags: $flags);\n\t\tif ($error = json_last_error()) {\n\t\t\tthrow new JsonException(json_last_error_msg(), $error);\n\t\t}\n\n\t\treturn $value;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Type.php","ext":"php","size":6667,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function array_map, array_search, array_splice, count, explode, implode, is_a, is_string, strcasecmp, strtolower, substr, trim;\nuse const PHP_VERSION_ID;\n\n\n/**\n * PHP type reflection.\n */\nfinal class Type\n{\n\t/** @var array<int, string|self> */\n\tprivate array $types;\n\tprivate bool $simple;\n\tprivate string $kind; // | &\n\n\n\t/**\n\t * Creates a Type object based on reflection. Resolves self, static and parent to the actual class name.\n\t * If the subject has no type, it returns null.\n\t */\n\tpublic static function fromReflection(\n\t\t\\ReflectionFunctionAbstract|\\ReflectionParameter|\\ReflectionProperty $reflection,\n\t): ?self\n\t{\n\t\t$type = $reflection instanceof \\ReflectionFunctionAbstract\n\t\t\t? $reflection->getReturnType() ?? (PHP_VERSION_ID >= 80100 && $reflection instanceof \\ReflectionMethod ? $reflection->getTentativeReturnType() : null)\n\t\t\t: $reflection->getType();\n\n\t\treturn $type ? self::fromReflectionType($type, $reflection, asObject: true) : null;\n\t}\n\n\n\tprivate static function fromReflectionType(\\ReflectionType $type, $of, bool $asObject): self|string\n\t{\n\t\tif ($type instanceof \\ReflectionNamedType) {\n\t\t\t$name = self::resolve($type->getName(), $of);\n\t\t\treturn $asObject\n\t\t\t\t? new self($type->allowsNull() && $name !== 'mixed' ? [$name, 'null'] : [$name])\n\t\t\t\t: $name;\n\n\t\t} elseif ($type instanceof \\ReflectionUnionType || $type instanceof \\ReflectionIntersectionType) {\n\t\t\treturn new self(\n\t\t\t\tarray_map(fn($t) => self::fromReflectionType($t, $of, asObject: false), $type->getTypes()),\n\t\t\t\t$type instanceof \\ReflectionUnionType ? '|' : '&',\n\t\t\t);\n\n\t\t} else {\n\t\t\tthrow new Nette\\InvalidStateException('Unexpected type of ' . Reflection::toString($of));\n\t\t}\n\t}\n\n\n\t/**\n\t * Creates the Type object according to the text notation.\n\t */\n\tpublic static function fromString(string $type): self\n\t{\n\t\tif (!Validators::isTypeDeclaration($type)) {\n\t\t\tthrow new Nette\\InvalidArgumentException(\"Invalid type '$type'.\");\n\t\t}\n\n\t\tif ($type[0] === '?') {\n\t\t\treturn new self([substr($type, 1), 'null']);\n\t\t}\n\n\t\t$unions = [];\n\t\tforeach (explode('|', $type) as $part) {\n\t\t\t$part = explode('&', trim($part, '()'));\n\t\t\t$unions[] = count($part) === 1 ? $part[0] : new self($part, '&');\n\t\t}\n\n\t\treturn count($unions) === 1 && $unions[0] instanceof self\n\t\t\t? $unions[0]\n\t\t\t: new self($unions);\n\t}\n\n\n\t/**\n\t * Resolves 'self', 'static' and 'parent' to the actual class name.\n\t */\n\tpublic static function resolve(\n\t\tstring $type,\n\t\t\\ReflectionFunctionAbstract|\\ReflectionParameter|\\ReflectionProperty $of,\n\t): string\n\t{\n\t\t$lower = strtolower($type);\n\t\tif ($of instanceof \\ReflectionFunction) {\n\t\t\treturn $type;\n\t\t} elseif ($lower === 'self') {\n\t\t\treturn $of->getDeclaringClass()->name;\n\t\t} elseif ($lower === 'static') {\n\t\t\treturn ($of instanceof ReflectionMethod ? $of->getOriginalClass() : $of->getDeclaringClass())->name;\n\t\t} elseif ($lower === 'parent' && $of->getDeclaringClass()->getParentClass()) {\n\t\t\treturn $of->getDeclaringClass()->getParentClass()->name;\n\t\t} else {\n\t\t\treturn $type;\n\t\t}\n\t}\n\n\n\tprivate function __construct(array $types, string $kind = '|')\n\t{\n\t\t$o = array_search('null', $types, strict: true);\n\t\tif ($o !== false) { // null as last\n\t\t\tarray_splice($types, $o, 1);\n\t\t\t$types[] = 'null';\n\t\t}\n\n\t\t$this->types = $types;\n\t\t$this->simple = is_string($types[0]) && ($types[1] ?? 'null') === 'null';\n\t\t$this->kind = count($types) > 1 ? $kind : '';\n\t}\n\n\n\tpublic function __toString(): string\n\t{\n\t\t$multi = count($this->types) > 1;\n\t\tif ($this->simple) {\n\t\t\treturn ($multi ? '?' : '') . $this->types[0];\n\t\t}\n\n\t\t$res = [];\n\t\tforeach ($this->types as $type) {\n\t\t\t$res[] = $type instanceof self && $multi ? \"($type)\" : $type;\n\t\t}\n\t\treturn implode($this->kind, $res);\n\t}\n\n\n\t/**\n\t * Returns the array of subtypes that make up the compound type as strings.\n\t * @return array<int, string|string[]>\n\t */\n\tpublic function getNames(): array\n\t{\n\t\treturn array_map(fn($t) => $t instanceof self ? $t->getNames() : $t, $this->types);\n\t}\n\n\n\t/**\n\t * Returns the array of subtypes that make up the compound type as Type objects:\n\t * @return self[]\n\t */\n\tpublic function getTypes(): array\n\t{\n\t\treturn array_map(fn($t) => $t instanceof self ? $t : new self([$t]), $this->types);\n\t}\n\n\n\t/**\n\t * Returns the type name for simple types, otherwise null.\n\t */\n\tpublic function getSingleName(): ?string\n\t{\n\t\treturn $this->simple\n\t\t\t? $this->types[0]\n\t\t\t: null;\n\t}\n\n\n\t/**\n\t * Returns true whether it is a union type.\n\t */\n\tpublic function isUnion(): bool\n\t{\n\t\treturn $this->kind === '|';\n\t}\n\n\n\t/**\n\t * Returns true whether it is an intersection type.\n\t */\n\tpublic function isIntersection(): bool\n\t{\n\t\treturn $this->kind === '&';\n\t}\n\n\n\t/**\n\t * Returns true whether it is a simple type. Single nullable types are also considered to be simple types.\n\t */\n\tpublic function isSimple(): bool\n\t{\n\t\treturn $this->simple;\n\t}\n\n\n\t#[\\Deprecated('use isSimple()')]\n\tpublic function isSingle(): bool\n\t{\n\t\treturn $this->simple;\n\t}\n\n\n\t/**\n\t * Returns true whether the type is both a simple and a PHP built-in type.\n\t */\n\tpublic function isBuiltin(): bool\n\t{\n\t\treturn $this->simple && Validators::isBuiltinType($this->types[0]);\n\t}\n\n\n\t/**\n\t * Returns true whether the type is both a simple and a class name.\n\t */\n\tpublic function isClass(): bool\n\t{\n\t\treturn $this->simple && !Validators::isBuiltinType($this->types[0]);\n\t}\n\n\n\t/**\n\t * Determines if type is special class name self/parent/static.\n\t */\n\tpublic function isClassKeyword(): bool\n\t{\n\t\treturn $this->simple && Validators::isClassKeyword($this->types[0]);\n\t}\n\n\n\t/**\n\t * Verifies type compatibility. For example, it checks if a value of a certain type could be passed as a parameter.\n\t */\n\tpublic function allows(string $subtype): bool\n\t{\n\t\tif ($this->types === ['mixed']) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$subtype = self::fromString($subtype);\n\t\treturn $subtype->isUnion()\n\t\t\t? Arrays::every($subtype->types, fn($t) => $this->allows2($t instanceof self ? $t->types : [$t]))\n\t\t\t: $this->allows2($subtype->types);\n\t}\n\n\n\tprivate function allows2(array $subtypes): bool\n\t{\n\t\treturn $this->isUnion()\n\t\t\t? Arrays::some($this->types, fn($t) => $this->allows3($t instanceof self ? $t->types : [$t], $subtypes))\n\t\t\t: $this->allows3($this->types, $subtypes);\n\t}\n\n\n\tprivate function allows3(array $types, array $subtypes): bool\n\t{\n\t\treturn Arrays::every(\n\t\t\t$types,\n\t\t\tfn($type) => Arrays::some(\n\t\t\t\t$subtypes,\n\t\t\t\tfn($subtype) => Validators::isBuiltinType($type)\n\t\t\t\t\t? strcasecmp($type, $subtype) === 0\n\t\t\t\t\t: is_a($subtype, $type, allow_string: true),\n\t\t\t),\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Helpers.php","ext":"php","size":2757,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function array_unique, ini_get, levenshtein, max, min, ob_end_clean, ob_get_clean, ob_start, preg_replace, strlen;\nuse const PHP_OS_FAMILY;\n\n\nclass Helpers\n{\n\tpublic const IsWindows = PHP_OS_FAMILY === 'Windows';\n\n\n\t/**\n\t * Executes a callback and returns the captured output as a string.\n\t */\n\tpublic static function capture(callable $func): string\n\t{\n\t\tob_start(fn() => '');\n\t\ttry {\n\t\t\t$func();\n\t\t\treturn ob_get_clean();\n\t\t} catch (\\Throwable $e) {\n\t\t\tob_end_clean();\n\t\t\tthrow $e;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the last occurred PHP error or an empty string if no error occurred. Unlike error_get_last(),\n\t * it is nit affected by the PHP directive html_errors and always returns text, not HTML.\n\t */\n\tpublic static function getLastError(): string\n\t{\n\t\t$message = error_get_last()['message'] ?? '';\n\t\t$message = ini_get('html_errors') ? Html::htmlToText($message) : $message;\n\t\t$message = preg_replace('#^\\w+\\(.*?\\): #', '', $message);\n\t\treturn $message;\n\t}\n\n\n\t/**\n\t * Converts false to null, does not change other values.\n\t */\n\tpublic static function falseToNull(mixed $value): mixed\n\t{\n\t\treturn $value === false ? null : $value;\n\t}\n\n\n\t/**\n\t * Returns value clamped to the inclusive range of min and max.\n\t */\n\tpublic static function clamp(int|float $value, int|float $min, int|float $max): int|float\n\t{\n\t\tif ($min > $max) {\n\t\t\tthrow new Nette\\InvalidArgumentException(\"Minimum ($min) is not less than maximum ($max).\");\n\t\t}\n\n\t\treturn min(max($value, $min), $max);\n\t}\n\n\n\t/**\n\t * Looks for a string from possibilities that is most similar to value, but not the same (for 8-bit encoding).\n\t * @param  string[]  $possibilities\n\t */\n\tpublic static function getSuggestion(array $possibilities, string $value): ?string\n\t{\n\t\t$best = null;\n\t\t$min = (strlen($value) / 4 + 1) * 10 + .1;\n\t\tforeach (array_unique($possibilities) as $item) {\n\t\t\tif ($item !== $value && ($len = levenshtein($item, $value, 10, 11, 10)) < $min) {\n\t\t\t\t$min = $len;\n\t\t\t\t$best = $item;\n\t\t\t}\n\t\t}\n\n\t\treturn $best;\n\t}\n\n\n\t/**\n\t * Compares two values in the same way that PHP does. Recognizes operators: >, >=, <, <=, =, ==, ===, !=, !==, <>\n\t */\n\tpublic static function compare(mixed $left, string $operator, mixed $right): bool\n\t{\n\t\treturn match ($operator) {\n\t\t\t'>' => $left > $right,\n\t\t\t'>=' => $left >= $right,\n\t\t\t'<' => $left < $right,\n\t\t\t'<=' => $left <= $right,\n\t\t\t'=', '==' => $left == $right,\n\t\t\t'===' => $left === $right,\n\t\t\t'!=', '<>' => $left != $right,\n\t\t\t'!==' => $left !== $right,\n\t\t\tdefault => throw new Nette\\InvalidArgumentException(\"Unknown operator '$operator'\"),\n\t\t};\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/ImageColor.php","ext":"php","size":1694,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function hexdec, ltrim, max, min, round, strlen;\n\n\n/**\n * Represent RGB color (0..255) with opacity (0..1).\n */\nclass ImageColor\n{\n\tpublic static function rgb(int $red, int $green, int $blue, float $opacity = 1): self\n\t{\n\t\treturn new self($red, $green, $blue, $opacity);\n\t}\n\n\n\t/**\n\t * Accepts formats #RRGGBB, #RRGGBBAA, #RGB, #RGBA\n\t */\n\tpublic static function hex(string $hex): self\n\t{\n\t\t$hex = ltrim($hex, '#');\n\t\t$len = strlen($hex);\n\t\tif ($len === 3 || $len === 4) {\n\t\t\treturn new self(\n\t\t\t\t(int) hexdec($hex[0]) * 17,\n\t\t\t\t(int) hexdec($hex[1]) * 17,\n\t\t\t\t(int) hexdec($hex[2]) * 17,\n\t\t\t\t(int) hexdec($hex[3] ?? 'F') * 17 / 255,\n\t\t\t);\n\t\t} elseif ($len === 6 || $len === 8) {\n\t\t\treturn new self(\n\t\t\t\t(int) hexdec($hex[0] . $hex[1]),\n\t\t\t\t(int) hexdec($hex[2] . $hex[3]),\n\t\t\t\t(int) hexdec($hex[4] . $hex[5]),\n\t\t\t\t(int) hexdec(($hex[6] ?? 'F') . ($hex[7] ?? 'F')) / 255,\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Nette\\InvalidArgumentException('Invalid hex color format.');\n\t\t}\n\t}\n\n\n\tprivate function __construct(\n\t\tpublic int $red,\n\t\tpublic int $green,\n\t\tpublic int $blue,\n\t\tpublic float $opacity = 1,\n\t) {\n\t\t$this->red = max(0, min(255, $red));\n\t\t$this->green = max(0, min(255, $green));\n\t\t$this->blue = max(0, min(255, $blue));\n\t\t$this->opacity = max(0, min(1, $opacity));\n\t}\n\n\n\tpublic function toRGBA(): array\n\t{\n\t\treturn [\n\t\t\tmax(0, min(255, $this->red)),\n\t\t\tmax(0, min(255, $this->green)),\n\t\t\tmax(0, min(255, $this->blue)),\n\t\t\tmax(0, min(127, (int) round(127 - $this->opacity * 127))),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Arrays.php","ext":"php","size":14238,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse JetBrains\\PhpStorm\\Language;\nuse Nette;\nuse function array_combine, array_intersect_key, array_is_list, array_key_exists, array_key_first, array_key_last, array_keys, array_reverse, array_search, array_slice, array_walk_recursive, count, func_num_args, in_array, is_array, is_int, is_object, key, preg_split, range;\nuse const PHP_VERSION_ID, PREG_GREP_INVERT, PREG_SPLIT_DELIM_CAPTURE, PREG_SPLIT_NO_EMPTY;\n\n\n/**\n * Array tools library.\n */\nclass Arrays\n{\n\tuse Nette\\StaticClass;\n\n\t/**\n\t * Returns item from array. If it does not exist, it throws an exception, unless a default value is set.\n\t * @template T\n\t * @param  array<T>  $array\n\t * @param  array-key|array-key[]  $key\n\t * @param  ?T  $default\n\t * @return ?T\n\t * @throws Nette\\InvalidArgumentException if item does not exist and default value is not provided\n\t */\n\tpublic static function get(array $array, string|int|array $key, mixed $default = null): mixed\n\t{\n\t\tforeach (is_array($key) ? $key : [$key] as $k) {\n\t\t\tif (is_array($array) && array_key_exists($k, $array)) {\n\t\t\t\t$array = $array[$k];\n\t\t\t} else {\n\t\t\t\tif (func_num_args() < 3) {\n\t\t\t\t\tthrow new Nette\\InvalidArgumentException(\"Missing item '$k'.\");\n\t\t\t\t}\n\n\t\t\t\treturn $default;\n\t\t\t}\n\t\t}\n\n\t\treturn $array;\n\t}\n\n\n\t/**\n\t * Returns reference to array item. If the index does not exist, new one is created with value null.\n\t * @template T\n\t * @param  array<T>  $array\n\t * @param  array-key|array-key[]  $key\n\t * @return ?T\n\t * @throws Nette\\InvalidArgumentException if traversed item is not an array\n\t */\n\tpublic static function &getRef(array &$array, string|int|array $key): mixed\n\t{\n\t\tforeach (is_array($key) ? $key : [$key] as $k) {\n\t\t\tif (is_array($array) || $array === null) {\n\t\t\t\t$array = &$array[$k];\n\t\t\t} else {\n\t\t\t\tthrow new Nette\\InvalidArgumentException('Traversed item is not an array.');\n\t\t\t}\n\t\t}\n\n\t\treturn $array;\n\t}\n\n\n\t/**\n\t * Recursively merges two fields. It is useful, for example, for merging tree structures. It behaves as\n\t * the + operator for array, ie. it adds a key/value pair from the second array to the first one and retains\n\t * the value from the first array in the case of a key collision.\n\t * @template T1\n\t * @template T2\n\t * @param  array<T1>  $array1\n\t * @param  array<T2>  $array2\n\t * @return array<T1|T2>\n\t */\n\tpublic static function mergeTree(array $array1, array $array2): array\n\t{\n\t\t$res = $array1 + $array2;\n\t\tforeach (array_intersect_key($array1, $array2) as $k => $v) {\n\t\t\tif (is_array($v) && is_array($array2[$k])) {\n\t\t\t\t$res[$k] = self::mergeTree($v, $array2[$k]);\n\t\t\t}\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Returns zero-indexed position of given array key. Returns null if key is not found.\n\t */\n\tpublic static function getKeyOffset(array $array, string|int $key): ?int\n\t{\n\t\treturn Helpers::falseToNull(array_search(self::toKey($key), array_keys($array), strict: true));\n\t}\n\n\n\t/**\n\t * @deprecated  use  getKeyOffset()\n\t */\n\tpublic static function searchKey(array $array, $key): ?int\n\t{\n\t\treturn self::getKeyOffset($array, $key);\n\t}\n\n\n\t/**\n\t * Tests an array for the presence of value.\n\t */\n\tpublic static function contains(array $array, mixed $value): bool\n\t{\n\t\treturn in_array($value, $array, true);\n\t}\n\n\n\t/**\n\t * Returns the first item (matching the specified predicate if given). If there is no such item, it returns result of invoking $else or null.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  ?callable(V, K, array<K, V>): bool  $predicate\n\t * @return ?V\n\t */\n\tpublic static function first(array $array, ?callable $predicate = null, ?callable $else = null): mixed\n\t{\n\t\t$key = self::firstKey($array, $predicate);\n\t\treturn $key === null\n\t\t\t? ($else ? $else() : null)\n\t\t\t: $array[$key];\n\t}\n\n\n\t/**\n\t * Returns the last item (matching the specified predicate if given). If there is no such item, it returns result of invoking $else or null.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  ?callable(V, K, array<K, V>): bool  $predicate\n\t * @return ?V\n\t */\n\tpublic static function last(array $array, ?callable $predicate = null, ?callable $else = null): mixed\n\t{\n\t\t$key = self::lastKey($array, $predicate);\n\t\treturn $key === null\n\t\t\t? ($else ? $else() : null)\n\t\t\t: $array[$key];\n\t}\n\n\n\t/**\n\t * Returns the key of first item (matching the specified predicate if given) or null if there is no such item.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  ?callable(V, K, array<K, V>): bool  $predicate\n\t * @return ?K\n\t */\n\tpublic static function firstKey(array $array, ?callable $predicate = null): int|string|null\n\t{\n\t\tif (!$predicate) {\n\t\t\treturn array_key_first($array);\n\t\t}\n\t\tforeach ($array as $k => $v) {\n\t\t\tif ($predicate($v, $k, $array)) {\n\t\t\t\treturn $k;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the key of last item (matching the specified predicate if given) or null if there is no such item.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  ?callable(V, K, array<K, V>): bool  $predicate\n\t * @return ?K\n\t */\n\tpublic static function lastKey(array $array, ?callable $predicate = null): int|string|null\n\t{\n\t\treturn $predicate\n\t\t\t? self::firstKey(array_reverse($array, preserve_keys: true), $predicate)\n\t\t\t: array_key_last($array);\n\t}\n\n\n\t/**\n\t * Inserts the contents of the $inserted array into the $array immediately after the $key.\n\t * If $key is null (or does not exist), it is inserted at the beginning.\n\t */\n\tpublic static function insertBefore(array &$array, string|int|null $key, array $inserted): void\n\t{\n\t\t$offset = $key === null ? 0 : (int) self::getKeyOffset($array, $key);\n\t\t$array = array_slice($array, 0, $offset, preserve_keys: true)\n\t\t\t+ $inserted\n\t\t\t+ array_slice($array, $offset, count($array), preserve_keys: true);\n\t}\n\n\n\t/**\n\t * Inserts the contents of the $inserted array into the $array before the $key.\n\t * If $key is null (or does not exist), it is inserted at the end.\n\t */\n\tpublic static function insertAfter(array &$array, string|int|null $key, array $inserted): void\n\t{\n\t\tif ($key === null || ($offset = self::getKeyOffset($array, $key)) === null) {\n\t\t\t$offset = count($array) - 1;\n\t\t}\n\n\t\t$array = array_slice($array, 0, $offset + 1, preserve_keys: true)\n\t\t\t+ $inserted\n\t\t\t+ array_slice($array, $offset + 1, count($array), preserve_keys: true);\n\t}\n\n\n\t/**\n\t * Renames key in array.\n\t */\n\tpublic static function renameKey(array &$array, string|int $oldKey, string|int $newKey): bool\n\t{\n\t\t$offset = self::getKeyOffset($array, $oldKey);\n\t\tif ($offset === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$val = &$array[$oldKey];\n\t\t$keys = array_keys($array);\n\t\t$keys[$offset] = $newKey;\n\t\t$array = array_combine($keys, $array);\n\t\t$array[$newKey] = &$val;\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Returns only those array items, which matches a regular expression $pattern.\n\t * @param  string[]  $array\n\t * @return string[]\n\t */\n\tpublic static function grep(\n\t\tarray $array,\n\t\t#[Language('RegExp')]\n\t\tstring $pattern,\n\t\tbool|int $invert = false,\n\t): array\n\t{\n\t\t$flags = $invert ? PREG_GREP_INVERT : 0;\n\t\treturn Strings::pcre('preg_grep', [$pattern, $array, $flags]);\n\t}\n\n\n\t/**\n\t * Transforms multidimensional array to flat array.\n\t */\n\tpublic static function flatten(array $array, bool $preserveKeys = false): array\n\t{\n\t\t$res = [];\n\t\t$cb = $preserveKeys\n\t\t\t? function ($v, $k) use (&$res): void { $res[$k] = $v; }\n\t\t: function ($v) use (&$res): void { $res[] = $v; };\n\t\tarray_walk_recursive($array, $cb);\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Checks if the array is indexed in ascending order of numeric keys from zero, a.k.a list.\n\t * @return ($value is list ? true : false)\n\t */\n\tpublic static function isList(mixed $value): bool\n\t{\n\t\treturn is_array($value) && (\n\t\t\tPHP_VERSION_ID < 80100\n\t\t\t? !$value || array_keys($value) === range(0, count($value) - 1)\n\t\t\t: array_is_list($value)\n\t\t);\n\t}\n\n\n\t/**\n\t * Reformats table to associative tree. Path looks like 'field|field[]field->field=field'.\n\t * @param  string|string[]  $path\n\t */\n\tpublic static function associate(array $array, $path): array|\\stdClass\n\t{\n\t\t$parts = is_array($path)\n\t\t\t? $path\n\t\t\t: preg_split('#(\\[\\]|->|=|\\|)#', $path, -1, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY);\n\n\t\tif (!$parts || $parts === ['->'] || $parts[0] === '=' || $parts[0] === '|') {\n\t\t\tthrow new Nette\\InvalidArgumentException(\"Invalid path '$path'.\");\n\t\t}\n\n\t\t$res = $parts[0] === '->' ? new \\stdClass : [];\n\n\t\tforeach ($array as $rowOrig) {\n\t\t\t$row = (array) $rowOrig;\n\t\t\t$x = &$res;\n\n\t\t\tfor ($i = 0; $i < count($parts); $i++) {\n\t\t\t\t$part = $parts[$i];\n\t\t\t\tif ($part === '[]') {\n\t\t\t\t\t$x = &$x[];\n\n\t\t\t\t} elseif ($part === '=') {\n\t\t\t\t\tif (isset($parts[++$i])) {\n\t\t\t\t\t\t$x = $row[$parts[$i]];\n\t\t\t\t\t\t$row = null;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($part === '->') {\n\t\t\t\t\tif (isset($parts[++$i])) {\n\t\t\t\t\t\tif ($x === null) {\n\t\t\t\t\t\t\t$x = new \\stdClass;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$x = &$x->{$row[$parts[$i]]};\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$row = is_object($rowOrig) ? $rowOrig : (object) $row;\n\t\t\t\t\t}\n\t\t\t\t} elseif ($part !== '|') {\n\t\t\t\t\t$x = &$x[(string) $row[$part]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($x === null) {\n\t\t\t\t$x = $row;\n\t\t\t}\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Normalizes array to associative array. Replace numeric keys with their values, the new value will be $filling.\n\t */\n\tpublic static function normalize(array $array, mixed $filling = null): array\n\t{\n\t\t$res = [];\n\t\tforeach ($array as $k => $v) {\n\t\t\t$res[is_int($k) ? $v : $k] = is_int($k) ? $filling : $v;\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Returns and removes the value of an item from an array. If it does not exist, it throws an exception,\n\t * or returns $default, if provided.\n\t * @template T\n\t * @param  array<T>  $array\n\t * @param  ?T  $default\n\t * @return ?T\n\t * @throws Nette\\InvalidArgumentException if item does not exist and default value is not provided\n\t */\n\tpublic static function pick(array &$array, string|int $key, mixed $default = null): mixed\n\t{\n\t\tif (array_key_exists($key, $array)) {\n\t\t\t$value = $array[$key];\n\t\t\tunset($array[$key]);\n\t\t\treturn $value;\n\n\t\t} elseif (func_num_args() < 3) {\n\t\t\tthrow new Nette\\InvalidArgumentException(\"Missing item '$key'.\");\n\n\t\t} else {\n\t\t\treturn $default;\n\t\t}\n\t}\n\n\n\t/**\n\t * Tests whether at least one element in the array passes the test implemented by the provided function.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  callable(V, K, array<K, V>): bool  $predicate\n\t */\n\tpublic static function some(iterable $array, callable $predicate): bool\n\t{\n\t\tforeach ($array as $k => $v) {\n\t\t\tif ($predicate($v, $k, $array)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Tests whether all elements in the array pass the test implemented by the provided function.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  callable(V, K, array<K, V>): bool  $predicate\n\t */\n\tpublic static function every(iterable $array, callable $predicate): bool\n\t{\n\t\tforeach ($array as $k => $v) {\n\t\t\tif (!$predicate($v, $k, $array)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Returns a new array containing all key-value pairs matching the given $predicate.\n\t * @template K of int|string\n\t * @template V\n\t * @param  array<K, V>  $array\n\t * @param  callable(V, K, array<K, V>): bool  $predicate\n\t * @return array<K, V>\n\t */\n\tpublic static function filter(array $array, callable $predicate): array\n\t{\n\t\t$res = [];\n\t\tforeach ($array as $k => $v) {\n\t\t\tif ($predicate($v, $k, $array)) {\n\t\t\t\t$res[$k] = $v;\n\t\t\t}\n\t\t}\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Returns an array containing the original keys and results of applying the given transform function to each element.\n\t * @template K of int|string\n\t * @template V\n\t * @template R\n\t * @param  array<K, V>  $array\n\t * @param  callable(V, K, array<K, V>): R  $transformer\n\t * @return array<K, R>\n\t */\n\tpublic static function map(iterable $array, callable $transformer): array\n\t{\n\t\t$res = [];\n\t\tforeach ($array as $k => $v) {\n\t\t\t$res[$k] = $transformer($v, $k, $array);\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Returns an array containing new keys and values generated by applying the given transform function to each element.\n\t * If the function returns null, the element is skipped.\n\t * @template K of int|string\n\t * @template V\n\t * @template ResK of int|string\n\t * @template ResV\n\t * @param  array<K, V>  $array\n\t * @param  callable(V, K, array<K, V>): ?array{ResK, ResV}  $transformer\n\t * @return array<ResK, ResV>\n\t */\n\tpublic static function mapWithKeys(array $array, callable $transformer): array\n\t{\n\t\t$res = [];\n\t\tforeach ($array as $k => $v) {\n\t\t\t$pair = $transformer($v, $k, $array);\n\t\t\tif ($pair) {\n\t\t\t\t$res[$pair[0]] = $pair[1];\n\t\t\t}\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Invokes all callbacks and returns array of results.\n\t * @param  callable[]  $callbacks\n\t */\n\tpublic static function invoke(iterable $callbacks, ...$args): array\n\t{\n\t\t$res = [];\n\t\tforeach ($callbacks as $k => $cb) {\n\t\t\t$res[$k] = $cb(...$args);\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Invokes method on every object in an array and returns array of results.\n\t * @param  object[]  $objects\n\t */\n\tpublic static function invokeMethod(iterable $objects, string $method, ...$args): array\n\t{\n\t\t$res = [];\n\t\tforeach ($objects as $k => $obj) {\n\t\t\t$res[$k] = $obj->$method(...$args);\n\t\t}\n\n\t\treturn $res;\n\t}\n\n\n\t/**\n\t * Copies the elements of the $array array to the $object object and then returns it.\n\t * @template T of object\n\t * @param  T  $object\n\t * @return T\n\t */\n\tpublic static function toObject(iterable $array, object $object): object\n\t{\n\t\tforeach ($array as $k => $v) {\n\t\t\t$object->$k = $v;\n\t\t}\n\n\t\treturn $object;\n\t}\n\n\n\t/**\n\t * Converts value to array key.\n\t */\n\tpublic static function toKey(mixed $value): int|string\n\t{\n\t\treturn key([$value => null]);\n\t}\n\n\n\t/**\n\t * Returns copy of the $array where every item is converted to string\n\t * and prefixed by $prefix and suffixed by $suffix.\n\t * @param  string[]  $array\n\t * @return string[]\n\t */\n\tpublic static function wrap(array $array, string $prefix = '', string $suffix = ''): array\n\t{\n\t\t$res = [];\n\t\tforeach ($array as $k => $v) {\n\t\t\t$res[$k] = $prefix . $v . $suffix;\n\t\t}\n\n\t\treturn $res;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Html.php","ext":"php","size":19749,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette\\HtmlStringable;\nuse function array_merge, array_splice, count, explode, func_num_args, html_entity_decode, htmlspecialchars, http_build_query, implode, is_array, is_bool, is_float, is_object, is_string, json_encode, max, number_format, rtrim, str_contains, str_repeat, str_replace, strip_tags, strncmp, strpbrk, substr;\nuse const ENT_HTML5, ENT_NOQUOTES, ENT_QUOTES;\n\n\n/**\n * HTML helper.\n *\n * @property string|null $accept\n * @property string|null $accesskey\n * @property string|null $action\n * @property string|null $align\n * @property string|null $allow\n * @property string|null $alt\n * @property bool|null   $async\n * @property string|null $autocapitalize\n * @property string|null $autocomplete\n * @property bool|null   $autofocus\n * @property bool|null   $autoplay\n * @property string|null $charset\n * @property bool|null   $checked\n * @property string|null $cite\n * @property string|null $class\n * @property int|null    $cols\n * @property int|null    $colspan\n * @property string|null $content\n * @property bool|null   $contenteditable\n * @property bool|null   $controls\n * @property string|null $coords\n * @property string|null $crossorigin\n * @property string|null $data\n * @property string|null $datetime\n * @property string|null $decoding\n * @property bool|null   $default\n * @property bool|null   $defer\n * @property string|null $dir\n * @property string|null $dirname\n * @property bool|null   $disabled\n * @property bool|null   $download\n * @property string|null $draggable\n * @property string|null $dropzone\n * @property string|null $enctype\n * @property string|null $for\n * @property string|null $form\n * @property string|null $formaction\n * @property string|null $formenctype\n * @property string|null $formmethod\n * @property bool|null   $formnovalidate\n * @property string|null $formtarget\n * @property string|null $headers\n * @property int|null    $height\n * @property bool|null   $hidden\n * @property float|null  $high\n * @property string|null $href\n * @property string|null $hreflang\n * @property string|null $id\n * @property string|null $integrity\n * @property string|null $inputmode\n * @property bool|null   $ismap\n * @property string|null $itemprop\n * @property string|null $kind\n * @property string|null $label\n * @property string|null $lang\n * @property string|null $list\n * @property bool|null   $loop\n * @property float|null  $low\n * @property float|null  $max\n * @property int|null    $maxlength\n * @property int|null    $minlength\n * @property string|null $media\n * @property string|null $method\n * @property float|null  $min\n * @property bool|null   $multiple\n * @property bool|null   $muted\n * @property string|null $name\n * @property bool|null   $novalidate\n * @property bool|null   $open\n * @property float|null  $optimum\n * @property string|null $pattern\n * @property string|null $ping\n * @property string|null $placeholder\n * @property string|null $poster\n * @property string|null $preload\n * @property string|null $radiogroup\n * @property bool|null   $readonly\n * @property string|null $rel\n * @property bool|null   $required\n * @property bool|null   $reversed\n * @property int|null    $rows\n * @property int|null    $rowspan\n * @property string|null $sandbox\n * @property string|null $scope\n * @property bool|null   $selected\n * @property string|null $shape\n * @property int|null    $size\n * @property string|null $sizes\n * @property string|null $slot\n * @property int|null    $span\n * @property string|null $spellcheck\n * @property string|null $src\n * @property string|null $srcdoc\n * @property string|null $srclang\n * @property string|null $srcset\n * @property int|null    $start\n * @property float|null  $step\n * @property string|null $style\n * @property int|null    $tabindex\n * @property string|null $target\n * @property string|null $title\n * @property string|null $translate\n * @property string|null $type\n * @property string|null $usemap\n * @property string|null $value\n * @property int|null    $width\n * @property string|null $wrap\n *\n * @method self accept(?string $val)\n * @method self accesskey(?string $val, bool $state = null)\n * @method self action(?string $val)\n * @method self align(?string $val)\n * @method self allow(?string $val, bool $state = null)\n * @method self alt(?string $val)\n * @method self async(?bool $val)\n * @method self autocapitalize(?string $val)\n * @method self autocomplete(?string $val)\n * @method self autofocus(?bool $val)\n * @method self autoplay(?bool $val)\n * @method self charset(?string $val)\n * @method self checked(?bool $val)\n * @method self cite(?string $val)\n * @method self class(?string $val, bool $state = null)\n * @method self cols(?int $val)\n * @method self colspan(?int $val)\n * @method self content(?string $val)\n * @method self contenteditable(?bool $val)\n * @method self controls(?bool $val)\n * @method self coords(?string $val)\n * @method self crossorigin(?string $val)\n * @method self datetime(?string $val)\n * @method self decoding(?string $val)\n * @method self default(?bool $val)\n * @method self defer(?bool $val)\n * @method self dir(?string $val)\n * @method self dirname(?string $val)\n * @method self disabled(?bool $val)\n * @method self download(?bool $val)\n * @method self draggable(?string $val)\n * @method self dropzone(?string $val)\n * @method self enctype(?string $val)\n * @method self for(?string $val)\n * @method self form(?string $val)\n * @method self formaction(?string $val)\n * @method self formenctype(?string $val)\n * @method self formmethod(?string $val)\n * @method self formnovalidate(?bool $val)\n * @method self formtarget(?string $val)\n * @method self headers(?string $val, bool $state = null)\n * @method self height(?int $val)\n * @method self hidden(?bool $val)\n * @method self high(?float $val)\n * @method self hreflang(?string $val)\n * @method self id(?string $val)\n * @method self integrity(?string $val)\n * @method self inputmode(?string $val)\n * @method self ismap(?bool $val)\n * @method self itemprop(?string $val)\n * @method self kind(?string $val)\n * @method self label(?string $val)\n * @method self lang(?string $val)\n * @method self list(?string $val)\n * @method self loop(?bool $val)\n * @method self low(?float $val)\n * @method self max(?float $val)\n * @method self maxlength(?int $val)\n * @method self minlength(?int $val)\n * @method self media(?string $val)\n * @method self method(?string $val)\n * @method self min(?float $val)\n * @method self multiple(?bool $val)\n * @method self muted(?bool $val)\n * @method self name(?string $val)\n * @method self novalidate(?bool $val)\n * @method self open(?bool $val)\n * @method self optimum(?float $val)\n * @method self pattern(?string $val)\n * @method self ping(?string $val, bool $state = null)\n * @method self placeholder(?string $val)\n * @method self poster(?string $val)\n * @method self preload(?string $val)\n * @method self radiogroup(?string $val)\n * @method self readonly(?bool $val)\n * @method self rel(?string $val)\n * @method self required(?bool $val)\n * @method self reversed(?bool $val)\n * @method self rows(?int $val)\n * @method self rowspan(?int $val)\n * @method self sandbox(?string $val, bool $state = null)\n * @method self scope(?string $val)\n * @method self selected(?bool $val)\n * @method self shape(?string $val)\n * @method self size(?int $val)\n * @method self sizes(?string $val)\n * @method self slot(?string $val)\n * @method self span(?int $val)\n * @method self spellcheck(?string $val)\n * @method self src(?string $val)\n * @method self srcdoc(?string $val)\n * @method self srclang(?string $val)\n * @method self srcset(?string $val)\n * @method self start(?int $val)\n * @method self step(?float $val)\n * @method self style(?string $property, string $val = null)\n * @method self tabindex(?int $val)\n * @method self target(?string $val)\n * @method self title(?string $val)\n * @method self translate(?string $val)\n * @method self type(?string $val)\n * @method self usemap(?string $val)\n * @method self value(?string $val)\n * @method self width(?int $val)\n * @method self wrap(?string $val)\n */\nclass Html implements \\ArrayAccess, \\Countable, \\IteratorAggregate, HtmlStringable\n{\n\t/** @var array<string, mixed>  element's attributes */\n\tpublic $attrs = [];\n\n\t/** void elements */\n\tpublic static $emptyElements = [\n\t\t'img' => 1, 'hr' => 1, 'br' => 1, 'input' => 1, 'meta' => 1, 'area' => 1, 'embed' => 1, 'keygen' => 1,\n\t\t'source' => 1, 'base' => 1, 'col' => 1, 'link' => 1, 'param' => 1, 'basefont' => 1, 'frame' => 1,\n\t\t'isindex' => 1, 'wbr' => 1, 'command' => 1, 'track' => 1,\n\t];\n\n\t/** @var array<int, HtmlStringable|string> nodes */\n\tprotected $children = [];\n\n\t/** element's name */\n\tprivate string $name = '';\n\n\tprivate bool $isEmpty = false;\n\n\n\t/**\n\t * Constructs new HTML element.\n\t * @param  array|string $attrs element's attributes or plain text content\n\t */\n\tpublic static function el(?string $name = null, array|string|null $attrs = null): static\n\t{\n\t\t$el = new static;\n\t\t$parts = explode(' ', (string) $name, 2);\n\t\t$el->setName($parts[0]);\n\n\t\tif (is_array($attrs)) {\n\t\t\t$el->attrs = $attrs;\n\n\t\t} elseif ($attrs !== null) {\n\t\t\t$el->setText($attrs);\n\t\t}\n\n\t\tif (isset($parts[1])) {\n\t\t\tforeach (Strings::matchAll($parts[1] . ' ', '#([a-z0-9:-]+)(?:=([\"\\'])?(.*?)(?(2)\\2|\\s))?#i') as $m) {\n\t\t\t\t$el->attrs[$m[1]] = $m[3] ?? true;\n\t\t\t}\n\t\t}\n\n\t\treturn $el;\n\t}\n\n\n\t/**\n\t * Returns an object representing HTML text.\n\t */\n\tpublic static function fromHtml(string $html): static\n\t{\n\t\treturn (new static)->setHtml($html);\n\t}\n\n\n\t/**\n\t * Returns an object representing plain text.\n\t */\n\tpublic static function fromText(string $text): static\n\t{\n\t\treturn (new static)->setText($text);\n\t}\n\n\n\t/**\n\t * Converts to HTML.\n\t */\n\tfinal public function toHtml(): string\n\t{\n\t\treturn $this->render();\n\t}\n\n\n\t/**\n\t * Converts to plain text.\n\t */\n\tfinal public function toText(): string\n\t{\n\t\treturn $this->getText();\n\t}\n\n\n\t/**\n\t * Converts given HTML code to plain text.\n\t */\n\tpublic static function htmlToText(string $html): string\n\t{\n\t\treturn html_entity_decode(strip_tags($html), ENT_QUOTES | ENT_HTML5, 'UTF-8');\n\t}\n\n\n\t/**\n\t * Changes element's name.\n\t */\n\tfinal public function setName(string $name, ?bool $isEmpty = null): static\n\t{\n\t\t$this->name = $name;\n\t\t$this->isEmpty = $isEmpty ?? isset(static::$emptyElements[$name]);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns element's name.\n\t */\n\tfinal public function getName(): string\n\t{\n\t\treturn $this->name;\n\t}\n\n\n\t/**\n\t * Is element empty?\n\t */\n\tfinal public function isEmpty(): bool\n\t{\n\t\treturn $this->isEmpty;\n\t}\n\n\n\t/**\n\t * Sets multiple attributes.\n\t */\n\tpublic function addAttributes(array $attrs): static\n\t{\n\t\t$this->attrs = array_merge($this->attrs, $attrs);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Appends value to element's attribute.\n\t */\n\tpublic function appendAttribute(string $name, mixed $value, mixed $option = true): static\n\t{\n\t\tif (is_array($value)) {\n\t\t\t$prev = isset($this->attrs[$name]) ? (array) $this->attrs[$name] : [];\n\t\t\t$this->attrs[$name] = $value + $prev;\n\n\t\t} elseif ((string) $value === '') {\n\t\t\t$tmp = &$this->attrs[$name]; // appending empty value? -> ignore, but ensure it exists\n\n\t\t} elseif (!isset($this->attrs[$name]) || is_array($this->attrs[$name])) { // needs array\n\t\t\t$this->attrs[$name][$value] = $option;\n\n\t\t} else {\n\t\t\t$this->attrs[$name] = [$this->attrs[$name] => true, $value => $option];\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Sets element's attribute.\n\t */\n\tpublic function setAttribute(string $name, mixed $value): static\n\t{\n\t\t$this->attrs[$name] = $value;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns element's attribute.\n\t */\n\tpublic function getAttribute(string $name): mixed\n\t{\n\t\treturn $this->attrs[$name] ?? null;\n\t}\n\n\n\t/**\n\t * Unsets element's attribute.\n\t */\n\tpublic function removeAttribute(string $name): static\n\t{\n\t\tunset($this->attrs[$name]);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Unsets element's attributes.\n\t */\n\tpublic function removeAttributes(array $attributes): static\n\t{\n\t\tforeach ($attributes as $name) {\n\t\t\tunset($this->attrs[$name]);\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Overloaded setter for element's attribute.\n\t */\n\tfinal public function __set(string $name, mixed $value): void\n\t{\n\t\t$this->attrs[$name] = $value;\n\t}\n\n\n\t/**\n\t * Overloaded getter for element's attribute.\n\t */\n\tfinal public function &__get(string $name): mixed\n\t{\n\t\treturn $this->attrs[$name];\n\t}\n\n\n\t/**\n\t * Overloaded tester for element's attribute.\n\t */\n\tfinal public function __isset(string $name): bool\n\t{\n\t\treturn isset($this->attrs[$name]);\n\t}\n\n\n\t/**\n\t * Overloaded unsetter for element's attribute.\n\t */\n\tfinal public function __unset(string $name): void\n\t{\n\t\tunset($this->attrs[$name]);\n\t}\n\n\n\t/**\n\t * Overloaded setter for element's attribute.\n\t */\n\tfinal public function __call(string $m, array $args): mixed\n\t{\n\t\t$p = substr($m, 0, 3);\n\t\tif ($p === 'get' || $p === 'set' || $p === 'add') {\n\t\t\t$m = substr($m, 3);\n\t\t\t$m[0] = $m[0] | \"\\x20\";\n\t\t\tif ($p === 'get') {\n\t\t\t\treturn $this->attrs[$m] ?? null;\n\n\t\t\t} elseif ($p === 'add') {\n\t\t\t\t$args[] = true;\n\t\t\t}\n\t\t}\n\n\t\tif (count($args) === 0) { // invalid\n\n\t\t} elseif (count($args) === 1) { // set\n\t\t\t$this->attrs[$m] = $args[0];\n\n\t\t} else { // add\n\t\t\t$this->appendAttribute($m, $args[0], $args[1]);\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Special setter for element's attribute.\n\t */\n\tfinal public function href(string $path, array $query = []): static\n\t{\n\t\tif ($query) {\n\t\t\t$query = http_build_query($query, '', '&');\n\t\t\tif ($query !== '') {\n\t\t\t\t$path .= '?' . $query;\n\t\t\t}\n\t\t}\n\n\t\t$this->attrs['href'] = $path;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Setter for data-* attributes. Booleans are converted to 'true' resp. 'false'.\n\t */\n\tpublic function data(string $name, mixed $value = null): static\n\t{\n\t\tif (func_num_args() === 1) {\n\t\t\t$this->attrs['data'] = $name;\n\t\t} else {\n\t\t\t$this->attrs[\"data-$name\"] = is_bool($value)\n\t\t\t\t? json_encode($value)\n\t\t\t\t: $value;\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Sets element's HTML content.\n\t */\n\tfinal public function setHtml(mixed $html): static\n\t{\n\t\t$this->children = [(string) $html];\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns element's HTML content.\n\t */\n\tfinal public function getHtml(): string\n\t{\n\t\treturn implode('', $this->children);\n\t}\n\n\n\t/**\n\t * Sets element's textual content.\n\t */\n\tfinal public function setText(mixed $text): static\n\t{\n\t\tif (!$text instanceof HtmlStringable) {\n\t\t\t$text = htmlspecialchars((string) $text, ENT_NOQUOTES, 'UTF-8');\n\t\t}\n\n\t\t$this->children = [(string) $text];\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns element's textual content.\n\t */\n\tfinal public function getText(): string\n\t{\n\t\treturn self::htmlToText($this->getHtml());\n\t}\n\n\n\t/**\n\t * Adds new element's child.\n\t */\n\tfinal public function addHtml(mixed $child): static\n\t{\n\t\treturn $this->insert(null, $child);\n\t}\n\n\n\t/**\n\t * Appends plain-text string to element content.\n\t */\n\tpublic function addText(mixed $text): static\n\t{\n\t\tif (!$text instanceof HtmlStringable) {\n\t\t\t$text = htmlspecialchars((string) $text, ENT_NOQUOTES, 'UTF-8');\n\t\t}\n\n\t\treturn $this->insert(null, $text);\n\t}\n\n\n\t/**\n\t * Creates and adds a new Html child.\n\t */\n\tfinal public function create(string $name, array|string|null $attrs = null): static\n\t{\n\t\t$this->insert(null, $child = static::el($name, $attrs));\n\t\treturn $child;\n\t}\n\n\n\t/**\n\t * Inserts child node.\n\t */\n\tpublic function insert(?int $index, HtmlStringable|string $child, bool $replace = false): static\n\t{\n\t\t$child = $child instanceof self ? $child : (string) $child;\n\t\tif ($index === null) { // append\n\t\t\t$this->children[] = $child;\n\n\t\t} else { // insert or replace\n\t\t\tarray_splice($this->children, $index, $replace ? 1 : 0, [$child]);\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Inserts (replaces) child node (\\ArrayAccess implementation).\n\t * @param  int|null  $index  position or null for appending\n\t * @param  Html|string  $child  Html node or raw HTML string\n\t */\n\tfinal public function offsetSet($index, $child): void\n\t{\n\t\t$this->insert($index, $child, replace: true);\n\t}\n\n\n\t/**\n\t * Returns child node (\\ArrayAccess implementation).\n\t * @param  int  $index\n\t */\n\tfinal public function offsetGet($index): HtmlStringable|string\n\t{\n\t\treturn $this->children[$index];\n\t}\n\n\n\t/**\n\t * Exists child node? (\\ArrayAccess implementation).\n\t * @param  int  $index\n\t */\n\tfinal public function offsetExists($index): bool\n\t{\n\t\treturn isset($this->children[$index]);\n\t}\n\n\n\t/**\n\t * Removes child node (\\ArrayAccess implementation).\n\t * @param  int  $index\n\t */\n\tpublic function offsetUnset($index): void\n\t{\n\t\tif (isset($this->children[$index])) {\n\t\t\tarray_splice($this->children, $index, 1);\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns children count.\n\t */\n\tfinal public function count(): int\n\t{\n\t\treturn count($this->children);\n\t}\n\n\n\t/**\n\t * Removes all children.\n\t */\n\tpublic function removeChildren(): void\n\t{\n\t\t$this->children = [];\n\t}\n\n\n\t/**\n\t * Iterates over elements.\n\t * @return \\ArrayIterator<int, HtmlStringable|string>\n\t */\n\tfinal public function getIterator(): \\ArrayIterator\n\t{\n\t\treturn new \\ArrayIterator($this->children);\n\t}\n\n\n\t/**\n\t * Returns all children.\n\t */\n\tfinal public function getChildren(): array\n\t{\n\t\treturn $this->children;\n\t}\n\n\n\t/**\n\t * Renders element's start tag, content and end tag.\n\t */\n\tfinal public function render(?int $indent = null): string\n\t{\n\t\t$s = $this->startTag();\n\n\t\tif (!$this->isEmpty) {\n\t\t\t// add content\n\t\t\tif ($indent !== null) {\n\t\t\t\t$indent++;\n\t\t\t}\n\n\t\t\tforeach ($this->children as $child) {\n\t\t\t\tif ($child instanceof self) {\n\t\t\t\t\t$s .= $child->render($indent);\n\t\t\t\t} else {\n\t\t\t\t\t$s .= $child;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// add end tag\n\t\t\t$s .= $this->endTag();\n\t\t}\n\n\t\tif ($indent !== null) {\n\t\t\treturn \"\\n\" . str_repeat(\"\\t\", $indent - 1) . $s . \"\\n\" . str_repeat(\"\\t\", max(0, $indent - 2));\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\n\tfinal public function __toString(): string\n\t{\n\t\treturn $this->render();\n\t}\n\n\n\t/**\n\t * Returns element's start tag.\n\t */\n\tfinal public function startTag(): string\n\t{\n\t\treturn $this->name\n\t\t\t? '<' . $this->name . $this->attributes() . '>'\n\t\t\t: '';\n\t}\n\n\n\t/**\n\t * Returns element's end tag.\n\t */\n\tfinal public function endTag(): string\n\t{\n\t\treturn $this->name && !$this->isEmpty ? '</' . $this->name . '>' : '';\n\t}\n\n\n\t/**\n\t * Returns element's attributes.\n\t * @internal\n\t */\n\tfinal public function attributes(): string\n\t{\n\t\tif (!is_array($this->attrs)) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$s = '';\n\t\t$attrs = $this->attrs;\n\t\tforeach ($attrs as $key => $value) {\n\t\t\tif ($value === null || $value === false) {\n\t\t\t\tcontinue;\n\n\t\t\t} elseif ($value === true) {\n\t\t\t\t$s .= ' ' . $key;\n\n\t\t\t\tcontinue;\n\n\t\t\t} elseif (is_array($value)) {\n\t\t\t\tif (strncmp($key, 'data-', 5) === 0) {\n\t\t\t\t\t$value = Json::encode($value);\n\n\t\t\t\t} else {\n\t\t\t\t\t$tmp = null;\n\t\t\t\t\tforeach ($value as $k => $v) {\n\t\t\t\t\t\tif ($v != null) { // intentionally ==, skip nulls & empty string\n\t\t\t\t\t\t\t// composite 'style' vs. 'others'\n\t\t\t\t\t\t\t$tmp[] = $v === true\n\t\t\t\t\t\t\t\t? $k\n\t\t\t\t\t\t\t\t: (is_string($k) ? $k . ':' . $v : $v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($tmp === null) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$value = implode($key === 'style' || !strncmp($key, 'on', 2) ? ';' : ' ', $tmp);\n\t\t\t\t}\n\t\t\t} elseif (is_float($value)) {\n\t\t\t\t$value = rtrim(rtrim(number_format($value, 10, '.', ''), '0'), '.');\n\n\t\t\t} else {\n\t\t\t\t$value = (string) $value;\n\t\t\t}\n\n\t\t\t$q = str_contains($value, '\"') ? \"'\" : '\"';\n\t\t\t$s .= ' ' . $key . '=' . $q\n\t\t\t\t. str_replace(\n\t\t\t\t\t['&', $q, '<'],\n\t\t\t\t\t['&amp;', $q === '\"' ? '&quot;' : '&#39;', '<'],\n\t\t\t\t\t$value,\n\t\t\t\t)\n\t\t\t\t. (str_contains($value, '`') && strpbrk($value, ' <>\"\\'') === false ? ' ' : '')\n\t\t\t\t. $q;\n\t\t}\n\n\t\t$s = str_replace('@', '&#64;', $s);\n\t\treturn $s;\n\t}\n\n\n\t/**\n\t * Clones all children too.\n\t */\n\tpublic function __clone()\n\t{\n\t\tforeach ($this->children as $key => $value) {\n\t\t\tif (is_object($value)) {\n\t\t\t\t$this->children[$key] = clone $value;\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/ReflectionMethod.php","ext":"php","size":860,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse function explode, is_string, str_contains;\n\n\n/**\n * ReflectionMethod preserving the original class name.\n * @internal\n */\nfinal class ReflectionMethod extends \\ReflectionMethod\n{\n\tprivate \\ReflectionClass $originalClass;\n\n\n\tpublic function __construct(object|string $objectOrMethod, ?string $method = null)\n\t{\n\t\tif (is_string($objectOrMethod) && str_contains($objectOrMethod, '::')) {\n\t\t\t[$objectOrMethod, $method] = explode('::', $objectOrMethod, 2);\n\t\t}\n\t\tparent::__construct($objectOrMethod, $method);\n\t\t$this->originalClass = new \\ReflectionClass($objectOrMethod);\n\t}\n\n\n\tpublic function getOriginalClass(): \\ReflectionClass\n\t{\n\t\treturn $this->originalClass;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/FileInfo.php","ext":"php","size":1322,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse const DIRECTORY_SEPARATOR;\n\n\n/**\n * Represents the file or directory returned by the Finder.\n * @internal do not create instances directly\n */\nfinal class FileInfo extends \\SplFileInfo\n{\n\tprivate string $relativePath;\n\n\n\tpublic function __construct(string $file, string $relativePath = '')\n\t{\n\t\tparent::__construct($file);\n\t\t$this->setInfoClass(static::class);\n\t\t$this->relativePath = $relativePath;\n\t}\n\n\n\t/**\n\t * Returns the relative directory path.\n\t */\n\tpublic function getRelativePath(): string\n\t{\n\t\treturn $this->relativePath;\n\t}\n\n\n\t/**\n\t * Returns the relative path including file name.\n\t */\n\tpublic function getRelativePathname(): string\n\t{\n\t\treturn ($this->relativePath === '' ? '' : $this->relativePath . DIRECTORY_SEPARATOR)\n\t\t\t. $this->getBasename();\n\t}\n\n\n\t/**\n\t * Returns the contents of the file.\n\t * @throws Nette\\IOException\n\t */\n\tpublic function read(): string\n\t{\n\t\treturn FileSystem::read($this->getPathname());\n\t}\n\n\n\t/**\n\t * Writes the contents to the file.\n\t * @throws Nette\\IOException\n\t */\n\tpublic function write(string $content): void\n\t{\n\t\tFileSystem::write($this->getPathname(), $content);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Image.php","ext":"php","size":24280,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function is_array, is_int, is_string;\nuse const IMG_BMP, IMG_FLIP_BOTH, IMG_FLIP_HORIZONTAL, IMG_FLIP_VERTICAL, IMG_GIF, IMG_JPG, IMG_PNG, IMG_WEBP, PATHINFO_EXTENSION;\n\n\n/**\n * Basic manipulation with images. Supported types are JPEG, PNG, GIF, WEBP, AVIF and BMP.\n *\n * <code>\n * $image = Image::fromFile('nette.jpg');\n * $image->resize(150, 100);\n * $image->sharpen();\n * $image->send();\n * </code>\n *\n * @method Image affine(array $affine, ?array $clip = null)\n * @method void alphaBlending(bool $enable)\n * @method void antialias(bool $enable)\n * @method void arc(int $centerX, int $centerY, int $width, int $height, int $startAngle, int $endAngle, ImageColor $color)\n * @method int colorAllocate(int $red, int $green, int $blue)\n * @method int colorAllocateAlpha(int $red, int $green, int $blue, int $alpha)\n * @method int colorAt(int $x, int $y)\n * @method int colorClosest(int $red, int $green, int $blue)\n * @method int colorClosestAlpha(int $red, int $green, int $blue, int $alpha)\n * @method int colorClosestHWB(int $red, int $green, int $blue)\n * @method void colorDeallocate(int $color)\n * @method int colorExact(int $red, int $green, int $blue)\n * @method int colorExactAlpha(int $red, int $green, int $blue, int $alpha)\n * @method void colorMatch(Image $image2)\n * @method int colorResolve(int $red, int $green, int $blue)\n * @method int colorResolveAlpha(int $red, int $green, int $blue, int $alpha)\n * @method void colorSet(int $index, int $red, int $green, int $blue, int $alpha = 0)\n * @method array colorsForIndex(int $color)\n * @method int colorsTotal()\n * @method int colorTransparent(?int $color = null)\n * @method void convolution(array $matrix, float $div, float $offset)\n * @method void copy(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH)\n * @method void copyMerge(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $pct)\n * @method void copyMergeGray(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $pct)\n * @method void copyResampled(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH)\n * @method void copyResized(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH)\n * @method Image cropAuto(int $mode = IMG_CROP_DEFAULT, float $threshold = .5, ?ImageColor $color = null)\n * @method void ellipse(int $centerX, int $centerY, int $width, int $height, ImageColor $color)\n * @method void fill(int $x, int $y, ImageColor $color)\n * @method void filledArc(int $centerX, int $centerY, int $width, int $height, int $startAngle, int $endAngle, ImageColor $color, int $style)\n * @method void filledEllipse(int $centerX, int $centerY, int $width, int $height, ImageColor $color)\n * @method void filledPolygon(array $points, ImageColor $color)\n * @method void filledRectangle(int $x1, int $y1, int $x2, int $y2, ImageColor $color)\n * @method void fillToBorder(int $x, int $y, ImageColor $borderColor, ImageColor $color)\n * @method void filter(int $filter, ...$args)\n * @method void flip(int $mode)\n * @method array ftText(float $size, float $angle, int $x, int $y, ImageColor $color, string $fontFile, string $text, array $options = [])\n * @method void gammaCorrect(float $inputgamma, float $outputgamma)\n * @method array getClip()\n * @method int getInterpolation()\n * @method int interlace(?bool $enable = null)\n * @method bool isTrueColor()\n * @method void layerEffect(int $effect)\n * @method void line(int $x1, int $y1, int $x2, int $y2, ImageColor $color)\n * @method void openPolygon(array $points, ImageColor $color)\n * @method void paletteCopy(Image $source)\n * @method void paletteToTrueColor()\n * @method void polygon(array $points, ImageColor $color)\n * @method void rectangle(int $x1, int $y1, int $x2, int $y2, ImageColor $color)\n * @method mixed resolution(?int $resolutionX = null, ?int $resolutionY = null)\n * @method Image rotate(float $angle, ImageColor $backgroundColor)\n * @method void saveAlpha(bool $enable)\n * @method Image scale(int $newWidth, int $newHeight = -1, int $mode = IMG_BILINEAR_FIXED)\n * @method void setBrush(Image $brush)\n * @method void setClip(int $x1, int $y1, int $x2, int $y2)\n * @method void setInterpolation(int $method = IMG_BILINEAR_FIXED)\n * @method void setPixel(int $x, int $y, ImageColor $color)\n * @method void setStyle(array $style)\n * @method void setThickness(int $thickness)\n * @method void setTile(Image $tile)\n * @method void trueColorToPalette(bool $dither, int $ncolors)\n * @method array ttfText(float $size, float $angle, int $x, int $y, ImageColor $color, string $fontfile, string $text, array $options = [])\n * @property-read positive-int $width\n * @property-read positive-int $height\n * @property-read \\GdImage $imageResource\n */\nclass Image\n{\n\tuse Nette\\SmartObject;\n\n\t/** Prevent from getting resized to a bigger size than the original */\n\tpublic const ShrinkOnly = 0b0001;\n\n\t/** Resizes to a specified width and height without keeping aspect ratio */\n\tpublic const Stretch = 0b0010;\n\n\t/** Resizes to fit into a specified width and height and preserves aspect ratio */\n\tpublic const OrSmaller = 0b0000;\n\n\t/** Resizes while bounding the smaller dimension to the specified width or height and preserves aspect ratio */\n\tpublic const OrBigger = 0b0100;\n\n\t/** Resizes to the smallest possible size to completely cover specified width and height and reserves aspect ratio */\n\tpublic const Cover = 0b1000;\n\n\t/** @deprecated use Image::ShrinkOnly */\n\tpublic const SHRINK_ONLY = self::ShrinkOnly;\n\n\t/** @deprecated use Image::Stretch */\n\tpublic const STRETCH = self::Stretch;\n\n\t/** @deprecated use Image::OrSmaller */\n\tpublic const FIT = self::OrSmaller;\n\n\t/** @deprecated use Image::OrBigger */\n\tpublic const FILL = self::OrBigger;\n\n\t/** @deprecated use Image::Cover */\n\tpublic const EXACT = self::Cover;\n\n\t/** @deprecated use Image::EmptyGIF */\n\tpublic const EMPTY_GIF = self::EmptyGIF;\n\n\t/** image types */\n\tpublic const\n\t\tJPEG = ImageType::JPEG,\n\t\tPNG = ImageType::PNG,\n\t\tGIF = ImageType::GIF,\n\t\tWEBP = ImageType::WEBP,\n\t\tAVIF = ImageType::AVIF,\n\t\tBMP = ImageType::BMP;\n\n\tpublic const EmptyGIF = \"GIF89a\\x01\\x00\\x01\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00!\\xf9\\x04\\x01\\x00\\x00\\x00\\x00,\\x00\\x00\\x00\\x00\\x01\\x00\\x01\\x00\\x00\\x02\\x02D\\x01\\x00;\";\n\n\tprivate const Formats = [ImageType::JPEG => 'jpeg', ImageType::PNG => 'png', ImageType::GIF => 'gif', ImageType::WEBP => 'webp', ImageType::AVIF => 'avif', ImageType::BMP => 'bmp'];\n\n\tprivate \\GdImage $image;\n\n\n\t/**\n\t * Returns RGB color (0..255) and transparency (0..127).\n\t * @deprecated use ImageColor::rgb()\n\t */\n\tpublic static function rgb(int $red, int $green, int $blue, int $transparency = 0): array\n\t{\n\t\treturn [\n\t\t\t'red' => max(0, min(255, $red)),\n\t\t\t'green' => max(0, min(255, $green)),\n\t\t\t'blue' => max(0, min(255, $blue)),\n\t\t\t'alpha' => max(0, min(127, $transparency)),\n\t\t];\n\t}\n\n\n\t/**\n\t * Reads an image from a file and returns its type in $type.\n\t * @throws Nette\\NotSupportedException if gd extension is not loaded\n\t * @throws UnknownImageFileException if file not found or file type is not known\n\t */\n\tpublic static function fromFile(string $file, ?int &$type = null): static\n\t{\n\t\tself::ensureExtension();\n\t\t$type = self::detectTypeFromFile($file);\n\t\tif (!$type) {\n\t\t\tthrow new UnknownImageFileException(is_file($file) ? \"Unknown type of file '$file'.\" : \"File '$file' not found.\");\n\t\t}\n\n\t\treturn self::invokeSafe('imagecreatefrom' . self::Formats[$type], $file, \"Unable to open file '$file'.\", __METHOD__);\n\t}\n\n\n\t/**\n\t * Reads an image from a string and returns its type in $type.\n\t * @throws Nette\\NotSupportedException if gd extension is not loaded\n\t * @throws ImageException\n\t */\n\tpublic static function fromString(string $s, ?int &$type = null): static\n\t{\n\t\tself::ensureExtension();\n\t\t$type = self::detectTypeFromString($s);\n\t\tif (!$type) {\n\t\t\tthrow new UnknownImageFileException('Unknown type of image.');\n\t\t}\n\n\t\treturn self::invokeSafe('imagecreatefromstring', $s, 'Unable to open image from string.', __METHOD__);\n\t}\n\n\n\tprivate static function invokeSafe(string $func, string $arg, string $message, string $callee): static\n\t{\n\t\t$errors = [];\n\t\t$res = Callback::invokeSafe($func, [$arg], function (string $message) use (&$errors): void {\n\t\t\t$errors[] = $message;\n\t\t});\n\n\t\tif (!$res) {\n\t\t\tthrow new ImageException($message . ' Errors: ' . implode(', ', $errors));\n\t\t} elseif ($errors) {\n\t\t\ttrigger_error($callee . '(): ' . implode(', ', $errors), E_USER_WARNING);\n\t\t}\n\n\t\treturn new static($res);\n\t}\n\n\n\t/**\n\t * Creates a new true color image of the given dimensions. The default color is black.\n\t * @param  positive-int  $width\n\t * @param  positive-int  $height\n\t * @throws Nette\\NotSupportedException if gd extension is not loaded\n\t */\n\tpublic static function fromBlank(int $width, int $height, ImageColor|array|null $color = null): static\n\t{\n\t\tself::ensureExtension();\n\t\tif ($width < 1 || $height < 1) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Image width and height must be greater than zero.');\n\t\t}\n\n\t\t$image = new static(imagecreatetruecolor($width, $height));\n\t\tif ($color) {\n\t\t\t$image->alphablending(false);\n\t\t\t$image->filledrectangle(0, 0, $width - 1, $height - 1, $color);\n\t\t\t$image->alphablending(true);\n\t\t}\n\n\t\treturn $image;\n\t}\n\n\n\t/**\n\t * Returns the type of image from file.\n\t * @return ImageType::*|null\n\t */\n\tpublic static function detectTypeFromFile(string $file, &$width = null, &$height = null): ?int\n\t{\n\t\t[$width, $height, $type] = @getimagesize($file); // @ - files smaller than 12 bytes causes read error\n\t\treturn isset(self::Formats[$type]) ? $type : null;\n\t}\n\n\n\t/**\n\t * Returns the type of image from string.\n\t * @return ImageType::*|null\n\t */\n\tpublic static function detectTypeFromString(string $s, &$width = null, &$height = null): ?int\n\t{\n\t\t[$width, $height, $type] = @getimagesizefromstring($s); // @ - strings smaller than 12 bytes causes read error\n\t\treturn isset(self::Formats[$type]) ? $type : null;\n\t}\n\n\n\t/**\n\t * Returns the file extension for the given image type.\n\t * @param  ImageType::*  $type\n\t * @return value-of<self::Formats>\n\t */\n\tpublic static function typeToExtension(int $type): string\n\t{\n\t\tif (!isset(self::Formats[$type])) {\n\t\t\tthrow new Nette\\InvalidArgumentException(\"Unsupported image type '$type'.\");\n\t\t}\n\n\t\treturn self::Formats[$type];\n\t}\n\n\n\t/**\n\t * Returns the image type for given file extension.\n\t * @return ImageType::*\n\t */\n\tpublic static function extensionToType(string $extension): int\n\t{\n\t\t$extensions = array_flip(self::Formats) + ['jpg' => ImageType::JPEG];\n\t\t$extension = strtolower($extension);\n\t\tif (!isset($extensions[$extension])) {\n\t\t\tthrow new Nette\\InvalidArgumentException(\"Unsupported file extension '$extension'.\");\n\t\t}\n\n\t\treturn $extensions[$extension];\n\t}\n\n\n\t/**\n\t * Returns the mime type for the given image type.\n\t * @param  ImageType::*  $type\n\t */\n\tpublic static function typeToMimeType(int $type): string\n\t{\n\t\treturn 'image/' . self::typeToExtension($type);\n\t}\n\n\n\t/**\n\t * @param  ImageType::*  $type\n\t */\n\tpublic static function isTypeSupported(int $type): bool\n\t{\n\t\tself::ensureExtension();\n\t\treturn (bool) (imagetypes() & match ($type) {\n\t\t\tImageType::JPEG => IMG_JPG,\n\t\t\tImageType::PNG => IMG_PNG,\n\t\t\tImageType::GIF => IMG_GIF,\n\t\t\tImageType::WEBP => IMG_WEBP,\n\t\t\tImageType::AVIF => 256, // IMG_AVIF,\n\t\t\tImageType::BMP => IMG_BMP,\n\t\t\tdefault => 0,\n\t\t});\n\t}\n\n\n\t/** @return  ImageType[] */\n\tpublic static function getSupportedTypes(): array\n\t{\n\t\tself::ensureExtension();\n\t\t$flag = imagetypes();\n\t\treturn array_filter([\n\t\t\t$flag & IMG_GIF ? ImageType::GIF : null,\n\t\t\t$flag & IMG_JPG ? ImageType::JPEG : null,\n\t\t\t$flag & IMG_PNG ? ImageType::PNG : null,\n\t\t\t$flag & IMG_WEBP ? ImageType::WEBP : null,\n\t\t\t$flag & 256 ? ImageType::AVIF : null, // IMG_AVIF\n\t\t\t$flag & IMG_BMP ? ImageType::BMP : null,\n\t\t]);\n\t}\n\n\n\t/**\n\t * Wraps GD image.\n\t */\n\tpublic function __construct(\\GdImage $image)\n\t{\n\t\t$this->setImageResource($image);\n\t\timagesavealpha($image, true);\n\t}\n\n\n\t/**\n\t * Returns image width.\n\t * @return positive-int\n\t */\n\tpublic function getWidth(): int\n\t{\n\t\treturn imagesx($this->image);\n\t}\n\n\n\t/**\n\t * Returns image height.\n\t * @return positive-int\n\t */\n\tpublic function getHeight(): int\n\t{\n\t\treturn imagesy($this->image);\n\t}\n\n\n\t/**\n\t * Sets image resource.\n\t */\n\tprotected function setImageResource(\\GdImage $image): static\n\t{\n\t\t$this->image = $image;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns image GD resource.\n\t */\n\tpublic function getImageResource(): \\GdImage\n\t{\n\t\treturn $this->image;\n\t}\n\n\n\t/**\n\t * Scales an image. Width and height accept pixels or percent.\n\t * @param  int-mask-of<self::OrSmaller|self::OrBigger|self::Stretch|self::Cover|self::ShrinkOnly>  $mode\n\t */\n\tpublic function resize(int|string|null $width, int|string|null $height, int $mode = self::OrSmaller): static\n\t{\n\t\tif ($mode & self::Cover) {\n\t\t\treturn $this->resize($width, $height, self::OrBigger)->crop('50%', '50%', $width, $height);\n\t\t}\n\n\t\t[$newWidth, $newHeight] = static::calculateSize($this->getWidth(), $this->getHeight(), $width, $height, $mode);\n\n\t\tif ($newWidth !== $this->getWidth() || $newHeight !== $this->getHeight()) { // resize\n\t\t\t$newImage = static::fromBlank($newWidth, $newHeight, ImageColor::rgb(0, 0, 0, 0))->getImageResource();\n\t\t\timagecopyresampled(\n\t\t\t\t$newImage,\n\t\t\t\t$this->image,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t$newWidth,\n\t\t\t\t$newHeight,\n\t\t\t\t$this->getWidth(),\n\t\t\t\t$this->getHeight(),\n\t\t\t);\n\t\t\t$this->image = $newImage;\n\t\t}\n\n\t\tif ($width < 0 || $height < 0) {\n\t\t\timageflip($this->image, $width < 0 ? ($height < 0 ? IMG_FLIP_BOTH : IMG_FLIP_HORIZONTAL) : IMG_FLIP_VERTICAL);\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Calculates dimensions of resized image. Width and height accept pixels or percent.\n\t * @param  int-mask-of<self::OrSmaller|self::OrBigger|self::Stretch|self::Cover|self::ShrinkOnly>  $mode\n\t */\n\tpublic static function calculateSize(\n\t\tint $srcWidth,\n\t\tint $srcHeight,\n\t\t$newWidth,\n\t\t$newHeight,\n\t\tint $mode = self::OrSmaller,\n\t): array\n\t{\n\t\tif ($newWidth === null) {\n\t\t} elseif (self::isPercent($newWidth)) {\n\t\t\t$newWidth = (int) round($srcWidth / 100 * abs($newWidth));\n\t\t\t$percents = true;\n\t\t} else {\n\t\t\t$newWidth = abs($newWidth);\n\t\t}\n\n\t\tif ($newHeight === null) {\n\t\t} elseif (self::isPercent($newHeight)) {\n\t\t\t$newHeight = (int) round($srcHeight / 100 * abs($newHeight));\n\t\t\t$mode |= empty($percents) ? 0 : self::Stretch;\n\t\t} else {\n\t\t\t$newHeight = abs($newHeight);\n\t\t}\n\n\t\tif ($mode & self::Stretch) { // non-proportional\n\t\t\tif (!$newWidth || !$newHeight) {\n\t\t\t\tthrow new Nette\\InvalidArgumentException('For stretching must be both width and height specified.');\n\t\t\t}\n\n\t\t\tif ($mode & self::ShrinkOnly) {\n\t\t\t\t$newWidth = min($srcWidth, $newWidth);\n\t\t\t\t$newHeight = min($srcHeight, $newHeight);\n\t\t\t}\n\t\t} else {  // proportional\n\t\t\tif (!$newWidth && !$newHeight) {\n\t\t\t\tthrow new Nette\\InvalidArgumentException('At least width or height must be specified.');\n\t\t\t}\n\n\t\t\t$scale = [];\n\t\t\tif ($newWidth > 0) { // fit width\n\t\t\t\t$scale[] = $newWidth / $srcWidth;\n\t\t\t}\n\n\t\t\tif ($newHeight > 0) { // fit height\n\t\t\t\t$scale[] = $newHeight / $srcHeight;\n\t\t\t}\n\n\t\t\tif ($mode & self::OrBigger) {\n\t\t\t\t$scale = [max($scale)];\n\t\t\t}\n\n\t\t\tif ($mode & self::ShrinkOnly) {\n\t\t\t\t$scale[] = 1;\n\t\t\t}\n\n\t\t\t$scale = min($scale);\n\t\t\t$newWidth = (int) round($srcWidth * $scale);\n\t\t\t$newHeight = (int) round($srcHeight * $scale);\n\t\t}\n\n\t\treturn [max($newWidth, 1), max($newHeight, 1)];\n\t}\n\n\n\t/**\n\t * Crops image. Arguments accepts pixels or percent.\n\t */\n\tpublic function crop(int|string $left, int|string $top, int|string $width, int|string $height): static\n\t{\n\t\t[$r['x'], $r['y'], $r['width'], $r['height']]\n\t\t\t= static::calculateCutout($this->getWidth(), $this->getHeight(), $left, $top, $width, $height);\n\t\tif (gd_info()['GD Version'] === 'bundled (2.1.0 compatible)') {\n\t\t\t$this->image = imagecrop($this->image, $r);\n\t\t\timagesavealpha($this->image, true);\n\t\t} else {\n\t\t\t$newImage = static::fromBlank($r['width'], $r['height'], ImageColor::rgb(0, 0, 0, 0))->getImageResource();\n\t\t\timagecopy($newImage, $this->image, 0, 0, $r['x'], $r['y'], $r['width'], $r['height']);\n\t\t\t$this->image = $newImage;\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Calculates dimensions of cutout in image. Arguments accepts pixels or percent.\n\t */\n\tpublic static function calculateCutout(\n\t\tint $srcWidth,\n\t\tint $srcHeight,\n\t\tint|string $left,\n\t\tint|string $top,\n\t\tint|string $newWidth,\n\t\tint|string $newHeight,\n\t): array\n\t{\n\t\tif (self::isPercent($newWidth)) {\n\t\t\t$newWidth = (int) round($srcWidth / 100 * $newWidth);\n\t\t}\n\n\t\tif (self::isPercent($newHeight)) {\n\t\t\t$newHeight = (int) round($srcHeight / 100 * $newHeight);\n\t\t}\n\n\t\tif (self::isPercent($left)) {\n\t\t\t$left = (int) round(($srcWidth - $newWidth) / 100 * $left);\n\t\t}\n\n\t\tif (self::isPercent($top)) {\n\t\t\t$top = (int) round(($srcHeight - $newHeight) / 100 * $top);\n\t\t}\n\n\t\tif ($left < 0) {\n\t\t\t$newWidth += $left;\n\t\t\t$left = 0;\n\t\t}\n\n\t\tif ($top < 0) {\n\t\t\t$newHeight += $top;\n\t\t\t$top = 0;\n\t\t}\n\n\t\t$newWidth = min($newWidth, $srcWidth - $left);\n\t\t$newHeight = min($newHeight, $srcHeight - $top);\n\t\treturn [$left, $top, $newWidth, $newHeight];\n\t}\n\n\n\t/**\n\t * Sharpens image a little bit.\n\t */\n\tpublic function sharpen(): static\n\t{\n\t\timageconvolution($this->image, [ // my magic numbers ;)\n\t\t\t[-1, -1, -1],\n\t\t\t[-1, 24, -1],\n\t\t\t[-1, -1, -1],\n\t\t], 16, 0);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Puts another image into this image. Left and top accepts pixels or percent.\n\t * @param  int<0, 100>  $opacity 0..100\n\t */\n\tpublic function place(self $image, int|string $left = 0, int|string $top = 0, int $opacity = 100): static\n\t{\n\t\t$opacity = max(0, min(100, $opacity));\n\t\tif ($opacity === 0) {\n\t\t\treturn $this;\n\t\t}\n\n\t\t$width = $image->getWidth();\n\t\t$height = $image->getHeight();\n\n\t\tif (self::isPercent($left)) {\n\t\t\t$left = (int) round(($this->getWidth() - $width) / 100 * $left);\n\t\t}\n\n\t\tif (self::isPercent($top)) {\n\t\t\t$top = (int) round(($this->getHeight() - $height) / 100 * $top);\n\t\t}\n\n\t\t$output = $input = $image->image;\n\t\tif ($opacity < 100) {\n\t\t\t$tbl = [];\n\t\t\tfor ($i = 0; $i < 128; $i++) {\n\t\t\t\t$tbl[$i] = round(127 - (127 - $i) * $opacity / 100);\n\t\t\t}\n\n\t\t\t$output = imagecreatetruecolor($width, $height);\n\t\t\timagealphablending($output, false);\n\t\t\tif (!$image->isTrueColor()) {\n\t\t\t\t$input = $output;\n\t\t\t\timagefilledrectangle($output, 0, 0, $width, $height, imagecolorallocatealpha($output, 0, 0, 0, 127));\n\t\t\t\timagecopy($output, $image->image, 0, 0, 0, 0, $width, $height);\n\t\t\t}\n\n\t\t\tfor ($x = 0; $x < $width; $x++) {\n\t\t\t\tfor ($y = 0; $y < $height; $y++) {\n\t\t\t\t\t$c = \\imagecolorat($input, $x, $y);\n\t\t\t\t\t$c = ($c & 0xFFFFFF) + ($tbl[$c >> 24] << 24);\n\t\t\t\t\t\\imagesetpixel($output, $x, $y, $c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timagealphablending($output, true);\n\t\t}\n\n\t\timagecopy(\n\t\t\t$this->image,\n\t\t\t$output,\n\t\t\t$left,\n\t\t\t$top,\n\t\t\t0,\n\t\t\t0,\n\t\t\t$width,\n\t\t\t$height,\n\t\t);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Calculates the bounding box for a TrueType text. Returns keys left, top, width and height.\n\t */\n\tpublic static function calculateTextBox(\n\t\tstring $text,\n\t\tstring $fontFile,\n\t\tfloat $size,\n\t\tfloat $angle = 0,\n\t\tarray $options = [],\n\t): array\n\t{\n\t\tself::ensureExtension();\n\t\t$box = imagettfbbox($size, $angle, $fontFile, $text, $options);\n\t\treturn [\n\t\t\t'left' => $minX = min([$box[0], $box[2], $box[4], $box[6]]),\n\t\t\t'top' => $minY = min([$box[1], $box[3], $box[5], $box[7]]),\n\t\t\t'width' => max([$box[0], $box[2], $box[4], $box[6]]) - $minX + 1,\n\t\t\t'height' => max([$box[1], $box[3], $box[5], $box[7]]) - $minY + 1,\n\t\t];\n\t}\n\n\n\t/**\n\t * Draw a rectangle.\n\t */\n\tpublic function rectangleWH(int $x, int $y, int $width, int $height, ImageColor $color): void\n\t{\n\t\tif ($width !== 0 && $height !== 0) {\n\t\t\t$this->rectangle($x, $y, $x + $width + ($width > 0 ? -1 : 1), $y + $height + ($height > 0 ? -1 : 1), $color);\n\t\t}\n\t}\n\n\n\t/**\n\t * Draw a filled rectangle.\n\t */\n\tpublic function filledRectangleWH(int $x, int $y, int $width, int $height, ImageColor $color): void\n\t{\n\t\tif ($width !== 0 && $height !== 0) {\n\t\t\t$this->filledRectangle($x, $y, $x + $width + ($width > 0 ? -1 : 1), $y + $height + ($height > 0 ? -1 : 1), $color);\n\t\t}\n\t}\n\n\n\t/**\n\t * Saves image to the file. Quality is in the range 0..100 for JPEG (default 85), WEBP (default 80) and AVIF (default 30) and 0..9 for PNG (default 9).\n\t * @param  ImageType::*|null  $type\n\t * @throws ImageException\n\t */\n\tpublic function save(string $file, ?int $quality = null, ?int $type = null): void\n\t{\n\t\t$type ??= self::extensionToType(pathinfo($file, PATHINFO_EXTENSION));\n\t\t$this->output($type, $quality, $file);\n\t}\n\n\n\t/**\n\t * Outputs image to string. Quality is in the range 0..100 for JPEG (default 85), WEBP (default 80) and AVIF (default 30) and 0..9 for PNG (default 9).\n\t * @param  ImageType::*  $type\n\t */\n\tpublic function toString(int $type = ImageType::JPEG, ?int $quality = null): string\n\t{\n\t\treturn Helpers::capture(function () use ($type, $quality): void {\n\t\t\t$this->output($type, $quality);\n\t\t});\n\t}\n\n\n\t/**\n\t * Outputs image to string.\n\t */\n\tpublic function __toString(): string\n\t{\n\t\treturn $this->toString();\n\t}\n\n\n\t/**\n\t * Outputs image to browser. Quality is in the range 0..100 for JPEG (default 85), WEBP (default 80) and AVIF (default 30) and 0..9 for PNG (default 9).\n\t * @param  ImageType::*  $type\n\t * @throws ImageException\n\t */\n\tpublic function send(int $type = ImageType::JPEG, ?int $quality = null): void\n\t{\n\t\theader('Content-Type: ' . self::typeToMimeType($type));\n\t\t$this->output($type, $quality);\n\t}\n\n\n\t/**\n\t * Outputs image to browser or file.\n\t * @param  ImageType::*  $type\n\t * @throws ImageException\n\t */\n\tprivate function output(int $type, ?int $quality, ?string $file = null): void\n\t{\n\t\t[$defQuality, $min, $max] = match ($type) {\n\t\t\tImageType::JPEG => [85, 0, 100],\n\t\t\tImageType::PNG => [9, 0, 9],\n\t\t\tImageType::GIF => [null, null, null],\n\t\t\tImageType::WEBP => [80, 0, 100],\n\t\t\tImageType::AVIF => [30, 0, 100],\n\t\t\tImageType::BMP => [null, null, null],\n\t\t\tdefault => throw new Nette\\InvalidArgumentException(\"Unsupported image type '$type'.\"),\n\t\t};\n\n\t\t$args = [$this->image, $file];\n\t\tif ($defQuality !== null) {\n\t\t\t$args[] = $quality === null ? $defQuality : max($min, min($max, $quality));\n\t\t}\n\n\t\tCallback::invokeSafe('image' . self::Formats[$type], $args, function (string $message) use ($file): void {\n\t\t\tif ($file !== null) {\n\t\t\t\t@unlink($file);\n\t\t\t}\n\t\t\tthrow new ImageException($message);\n\t\t});\n\t}\n\n\n\t/**\n\t * Call to undefined method.\n\t * @throws Nette\\MemberAccessException\n\t */\n\tpublic function __call(string $name, array $args): mixed\n\t{\n\t\t$function = 'image' . $name;\n\t\tif (!function_exists($function)) {\n\t\t\tObjectHelpers::strictCall(static::class, $name);\n\t\t}\n\n\t\tforeach ($args as $key => $value) {\n\t\t\tif ($value instanceof self) {\n\t\t\t\t$args[$key] = $value->getImageResource();\n\n\t\t\t} elseif ($value instanceof ImageColor || (is_array($value) && isset($value['red']))) {\n\t\t\t\t$args[$key] = $this->resolveColor($value);\n\t\t\t}\n\t\t}\n\n\t\t$res = $function($this->image, ...$args);\n\t\treturn $res instanceof \\GdImage\n\t\t\t? $this->setImageResource($res)\n\t\t\t: $res;\n\t}\n\n\n\tpublic function __clone()\n\t{\n\t\tob_start(fn() => '');\n\t\timagepng($this->image, null, 0);\n\t\t$this->setImageResource(imagecreatefromstring(ob_get_clean()));\n\t}\n\n\n\tprivate static function isPercent(int|string &$num): bool\n\t{\n\t\tif (is_string($num) && str_ends_with($num, '%')) {\n\t\t\t$num = (float) substr($num, 0, -1);\n\t\t\treturn true;\n\t\t} elseif (is_int($num) || $num === (string) (int) $num) {\n\t\t\t$num = (int) $num;\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow new Nette\\InvalidArgumentException(\"Expected dimension in int|string, '$num' given.\");\n\t}\n\n\n\t/**\n\t * Prevents serialization.\n\t */\n\tpublic function __serialize(): array\n\t{\n\t\tthrow new Nette\\NotSupportedException('You cannot serialize or unserialize ' . self::class . ' instances.');\n\t}\n\n\n\tpublic function resolveColor(ImageColor|array $color): int\n\t{\n\t\t$color = $color instanceof ImageColor ? $color->toRGBA() : array_values($color);\n\t\treturn imagecolorallocatealpha($this->image, ...$color) ?: imagecolorresolvealpha($this->image, ...$color);\n\t}\n\n\n\tprivate static function ensureExtension(): void\n\t{\n\t\tif (!extension_loaded('gd')) {\n\t\t\tthrow new Nette\\NotSupportedException('PHP extension GD is not loaded.');\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Validators.php","ext":"php","size":10934,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function array_key_exists, class_exists, explode, gettype, interface_exists, is_callable, is_float, is_int, is_iterable, is_numeric, is_object, is_string, preg_match, str_ends_with, str_replace, str_starts_with, strlen, strtolower, substr, trait_exists, var_export;\n\n\n/**\n * Validation utilities.\n */\nclass Validators\n{\n\tuse Nette\\StaticClass;\n\n\tprivate const BuiltinTypes = [\n\t\t'string' => 1, 'int' => 1, 'float' => 1, 'bool' => 1, 'array' => 1, 'object' => 1,\n\t\t'callable' => 1, 'iterable' => 1, 'void' => 1, 'null' => 1, 'mixed' => 1, 'false' => 1,\n\t\t'never' => 1, 'true' => 1,\n\t];\n\n\t/** @var array<string,?callable> */\n\tprotected static $validators = [\n\t\t// PHP types\n\t\t'array' => 'is_array',\n\t\t'bool' => 'is_bool',\n\t\t'boolean' => 'is_bool',\n\t\t'float' => 'is_float',\n\t\t'int' => 'is_int',\n\t\t'integer' => 'is_int',\n\t\t'null' => 'is_null',\n\t\t'object' => 'is_object',\n\t\t'resource' => 'is_resource',\n\t\t'scalar' => 'is_scalar',\n\t\t'string' => 'is_string',\n\n\t\t// pseudo-types\n\t\t'callable' => [self::class, 'isCallable'],\n\t\t'iterable' => 'is_iterable',\n\t\t'list' => [Arrays::class, 'isList'],\n\t\t'mixed' => [self::class, 'isMixed'],\n\t\t'none' => [self::class, 'isNone'],\n\t\t'number' => [self::class, 'isNumber'],\n\t\t'numeric' => [self::class, 'isNumeric'],\n\t\t'numericint' => [self::class, 'isNumericInt'],\n\n\t\t// string patterns\n\t\t'alnum' => 'ctype_alnum',\n\t\t'alpha' => 'ctype_alpha',\n\t\t'digit' => 'ctype_digit',\n\t\t'lower' => 'ctype_lower',\n\t\t'pattern' => null,\n\t\t'space' => 'ctype_space',\n\t\t'unicode' => [self::class, 'isUnicode'],\n\t\t'upper' => 'ctype_upper',\n\t\t'xdigit' => 'ctype_xdigit',\n\n\t\t// syntax validation\n\t\t'email' => [self::class, 'isEmail'],\n\t\t'identifier' => [self::class, 'isPhpIdentifier'],\n\t\t'uri' => [self::class, 'isUri'],\n\t\t'url' => [self::class, 'isUrl'],\n\n\t\t// environment validation\n\t\t'class' => 'class_exists',\n\t\t'interface' => 'interface_exists',\n\t\t'directory' => 'is_dir',\n\t\t'file' => 'is_file',\n\t\t'type' => [self::class, 'isType'],\n\t];\n\n\t/** @var array<string,callable> */\n\tprotected static $counters = [\n\t\t'string' => 'strlen',\n\t\t'unicode' => [Strings::class, 'length'],\n\t\t'array' => 'count',\n\t\t'list' => 'count',\n\t\t'alnum' => 'strlen',\n\t\t'alpha' => 'strlen',\n\t\t'digit' => 'strlen',\n\t\t'lower' => 'strlen',\n\t\t'space' => 'strlen',\n\t\t'upper' => 'strlen',\n\t\t'xdigit' => 'strlen',\n\t];\n\n\n\t/**\n\t * Verifies that the value is of expected types separated by pipe.\n\t * @throws AssertionException\n\t */\n\tpublic static function assert(mixed $value, string $expected, string $label = 'variable'): void\n\t{\n\t\tif (!static::is($value, $expected)) {\n\t\t\t$expected = str_replace(['|', ':'], [' or ', ' in range '], $expected);\n\t\t\t$translate = ['boolean' => 'bool', 'integer' => 'int', 'double' => 'float', 'NULL' => 'null'];\n\t\t\t$type = $translate[gettype($value)] ?? gettype($value);\n\t\t\tif (is_int($value) || is_float($value) || (is_string($value) && strlen($value) < 40)) {\n\t\t\t\t$type .= ' ' . var_export($value, return: true);\n\t\t\t} elseif (is_object($value)) {\n\t\t\t\t$type .= ' ' . $value::class;\n\t\t\t}\n\n\t\t\tthrow new AssertionException(\"The $label expects to be $expected, $type given.\");\n\t\t}\n\t}\n\n\n\t/**\n\t * Verifies that element $key in array is of expected types separated by pipe.\n\t * @param  mixed[]  $array\n\t * @throws AssertionException\n\t */\n\tpublic static function assertField(\n\t\tarray $array,\n\t\t$key,\n\t\t?string $expected = null,\n\t\tstring $label = \"item '%' in array\",\n\t): void\n\t{\n\t\tif (!array_key_exists($key, $array)) {\n\t\t\tthrow new AssertionException('Missing ' . str_replace('%', $key, $label) . '.');\n\n\t\t} elseif ($expected) {\n\t\t\tstatic::assert($array[$key], $expected, str_replace('%', $key, $label));\n\t\t}\n\t}\n\n\n\t/**\n\t * Verifies that the value is of expected types separated by pipe.\n\t */\n\tpublic static function is(mixed $value, string $expected): bool\n\t{\n\t\tforeach (explode('|', $expected) as $item) {\n\t\t\tif (str_ends_with($item, '[]')) {\n\t\t\t\tif (is_iterable($value) && self::everyIs($value, substr($item, 0, -2))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t} elseif (str_starts_with($item, '?')) {\n\t\t\t\t$item = substr($item, 1);\n\t\t\t\tif ($value === null) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t[$type] = $item = explode(':', $item, 2);\n\t\t\tif (isset(static::$validators[$type])) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!static::$validators[$type]($value)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} catch (\\TypeError $e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} elseif ($type === 'pattern') {\n\t\t\t\tif (Strings::match($value, '|^' . ($item[1] ?? '') . '$|D')) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t} elseif (!$value instanceof $type) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (isset($item[1])) {\n\t\t\t\t$length = $value;\n\t\t\t\tif (isset(static::$counters[$type])) {\n\t\t\t\t\t$length = static::$counters[$type]($value);\n\t\t\t\t}\n\n\t\t\t\t$range = explode('..', $item[1]);\n\t\t\t\tif (!isset($range[1])) {\n\t\t\t\t\t$range[1] = $range[0];\n\t\t\t\t}\n\n\t\t\t\tif (($range[0] !== '' && $length < $range[0]) || ($range[1] !== '' && $length > $range[1])) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * Finds whether all values are of expected types separated by pipe.\n\t * @param  mixed[]  $values\n\t */\n\tpublic static function everyIs(iterable $values, string $expected): bool\n\t{\n\t\tforeach ($values as $value) {\n\t\t\tif (!static::is($value, $expected)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Checks if the value is an integer or a float.\n\t * @return ($value is int|float ? true : false)\n\t */\n\tpublic static function isNumber(mixed $value): bool\n\t{\n\t\treturn is_int($value) || is_float($value);\n\t}\n\n\n\t/**\n\t * Checks if the value is an integer or a integer written in a string.\n\t * @return ($value is non-empty-string ? bool : ($value is int ? true : false))\n\t */\n\tpublic static function isNumericInt(mixed $value): bool\n\t{\n\t\treturn is_int($value) || (is_string($value) && preg_match('#^[+-]?[0-9]+$#D', $value));\n\t}\n\n\n\t/**\n\t * Checks if the value is a number or a number written in a string.\n\t * @return ($value is non-empty-string ? bool : ($value is int|float ? true : false))\n\t */\n\tpublic static function isNumeric(mixed $value): bool\n\t{\n\t\treturn is_float($value) || is_int($value) || (is_string($value) && preg_match('#^[+-]?([0-9]++\\.?[0-9]*|\\.[0-9]+)$#D', $value));\n\t}\n\n\n\t/**\n\t * Checks if the value is a syntactically correct callback.\n\t */\n\tpublic static function isCallable(mixed $value): bool\n\t{\n\t\treturn $value && is_callable($value, syntax_only: true);\n\t}\n\n\n\t/**\n\t * Checks if the value is a valid UTF-8 string.\n\t */\n\tpublic static function isUnicode(mixed $value): bool\n\t{\n\t\treturn is_string($value) && preg_match('##u', $value);\n\t}\n\n\n\t/**\n\t * Checks if the value is 0, '', false or null.\n\t * @return ($value is 0|''|false|null ? true : false)\n\t */\n\tpublic static function isNone(mixed $value): bool\n\t{\n\t\treturn $value == null; // intentionally ==\n\t}\n\n\n\t/** @internal */\n\tpublic static function isMixed(): bool\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Checks if a variable is a zero-based integer indexed array.\n\t * @deprecated  use Nette\\Utils\\Arrays::isList\n\t * @return ($value is list ? true : false)\n\t */\n\tpublic static function isList(mixed $value): bool\n\t{\n\t\treturn Arrays::isList($value);\n\t}\n\n\n\t/**\n\t * Checks if the value is in the given range [min, max], where the upper or lower limit can be omitted (null).\n\t * Numbers, strings and DateTime objects can be compared.\n\t */\n\tpublic static function isInRange(mixed $value, array $range): bool\n\t{\n\t\tif ($value === null || !(isset($range[0]) || isset($range[1]))) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$limit = $range[0] ?? $range[1];\n\t\tif (is_string($limit)) {\n\t\t\t$value = (string) $value;\n\t\t} elseif ($limit instanceof \\DateTimeInterface) {\n\t\t\tif (!$value instanceof \\DateTimeInterface) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} elseif (is_numeric($value)) {\n\t\t\t$value *= 1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (!isset($range[0]) || ($value >= $range[0])) && (!isset($range[1]) || ($value <= $range[1]));\n\t}\n\n\n\t/**\n\t * Checks if the value is a valid email address. It does not verify that the domain actually exists, only the syntax is verified.\n\t */\n\tpublic static function isEmail(string $value): bool\n\t{\n\t\t$atom = \"[-a-z0-9!#$%&'*+/=?^_`{|}~]\"; // RFC 5322 unquoted characters in local-part\n\t\t$alpha = \"a-z\\x80-\\xFF\"; // superset of IDN\n\t\treturn (bool) preg_match(<<<XX\n\t\t\t(^(?n)\n\t\t\t\t(\"([ !#-[\\\\]-~]*|\\\\\\\\[ -~])+\"|$atom+(\\\\.$atom+)*)  # quoted or unquoted\n\t\t\t\t@\n\t\t\t\t([0-9$alpha]([-0-9$alpha]{0,61}[0-9$alpha])?\\\\.)+  # domain - RFC 1034\n\t\t\t\t[$alpha]([-0-9$alpha]{0,17}[$alpha])?              # top domain\n\t\t\t$)Dix\n\t\t\tXX, $value);\n\t}\n\n\n\t/**\n\t * Checks if the value is a valid URL address.\n\t */\n\tpublic static function isUrl(string $value): bool\n\t{\n\t\t$alpha = \"a-z\\x80-\\xFF\";\n\t\treturn (bool) preg_match(<<<XX\n\t\t\t(^(?n)\n\t\t\t\thttps?://(\n\t\t\t\t\t(([-_0-9$alpha]+\\\\.)*                       # subdomain\n\t\t\t\t\t\t[0-9$alpha]([-0-9$alpha]{0,61}[0-9$alpha])?\\\\.)?  # domain\n\t\t\t\t\t\t[$alpha]([-0-9$alpha]{0,17}[$alpha])?   # top domain\n\t\t\t\t\t|\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}  # IPv4\n\t\t\t\t\t|\\\\[[0-9a-f:]{3,39}\\\\]                      # IPv6\n\t\t\t\t)(:\\\\d{1,5})?                                   # port\n\t\t\t\t(/\\\\S*)?                                        # path\n\t\t\t\t(\\\\?\\\\S*)?                                      # query\n\t\t\t\t(\\\\#\\\\S*)?                                      # fragment\n\t\t\t$)Dix\n\t\t\tXX, $value);\n\t}\n\n\n\t/**\n\t * Checks if the value is a valid URI address, that is, actually a string beginning with a syntactically valid schema.\n\t */\n\tpublic static function isUri(string $value): bool\n\t{\n\t\treturn (bool) preg_match('#^[a-z\\d+\\.-]+:\\S+$#Di', $value);\n\t}\n\n\n\t/**\n\t * Checks whether the input is a class, interface or trait.\n\t * @deprecated\n\t */\n\tpublic static function isType(string $type): bool\n\t{\n\t\treturn class_exists($type) || interface_exists($type) || trait_exists($type);\n\t}\n\n\n\t/**\n\t * Checks whether the input is a valid PHP identifier.\n\t */\n\tpublic static function isPhpIdentifier(string $value): bool\n\t{\n\t\treturn preg_match('#^[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*$#D', $value) === 1;\n\t}\n\n\n\t/**\n\t * Determines if type is PHP built-in type. Otherwise, it is the class name.\n\t */\n\tpublic static function isBuiltinType(string $type): bool\n\t{\n\t\treturn isset(self::BuiltinTypes[strtolower($type)]);\n\t}\n\n\n\t/**\n\t * Determines if type is special class name self/parent/static.\n\t */\n\tpublic static function isClassKeyword(string $name): bool\n\t{\n\t\treturn (bool) preg_match('#^(self|parent|static)$#Di', $name);\n\t}\n\n\n\t/**\n\t * Checks whether the given type declaration is syntactically valid.\n\t */\n\tpublic static function isTypeDeclaration(string $type): bool\n\t{\n\t\treturn (bool) preg_match(<<<'XX'\n\t\t\t~((?n)\n\t\t\t\t\\?? (?<type> \\\\? (?<name> [a-zA-Z_\\x7f-\\xff][\\w\\x7f-\\xff]*) (\\\\ (?&name))* ) |\n\t\t\t\t(?<intersection> (?&type) (& (?&type))+ ) |\n\t\t\t\t(?<upart> (?&type) | \\( (?&intersection) \\) )  (\\| (?&upart))+\n\t\t\t)$~xAD\n\t\t\tXX, $type);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Paginator.php","ext":"php","size":4489,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\n\n\n/**\n * Paginating math.\n *\n * @property   int $page\n * @property-read int $firstPage\n * @property-read int|null $lastPage\n * @property-read int<0,max> $firstItemOnPage\n * @property-read int<0,max> $lastItemOnPage\n * @property   int $base\n * @property-read bool $first\n * @property-read bool $last\n * @property-read int<0,max>|null $pageCount\n * @property   positive-int $itemsPerPage\n * @property   int<0,max>|null $itemCount\n * @property-read int<0,max> $offset\n * @property-read int<0,max>|null $countdownOffset\n * @property-read int<0,max> $length\n */\nclass Paginator\n{\n\tuse Nette\\SmartObject;\n\n\tprivate int $base = 1;\n\n\t/** @var positive-int */\n\tprivate int $itemsPerPage = 1;\n\n\tprivate int $page = 1;\n\n\t/** @var int<0, max>|null */\n\tprivate ?int $itemCount = null;\n\n\n\t/**\n\t * Sets current page number.\n\t */\n\tpublic function setPage(int $page): static\n\t{\n\t\t$this->page = $page;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns current page number.\n\t */\n\tpublic function getPage(): int\n\t{\n\t\treturn $this->base + $this->getPageIndex();\n\t}\n\n\n\t/**\n\t * Returns first page number.\n\t */\n\tpublic function getFirstPage(): int\n\t{\n\t\treturn $this->base;\n\t}\n\n\n\t/**\n\t * Returns last page number.\n\t */\n\tpublic function getLastPage(): ?int\n\t{\n\t\treturn $this->itemCount === null\n\t\t\t? null\n\t\t\t: $this->base + max(0, $this->getPageCount() - 1);\n\t}\n\n\n\t/**\n\t * Returns the sequence number of the first element on the page\n\t * @return int<0, max>\n\t */\n\tpublic function getFirstItemOnPage(): int\n\t{\n\t\treturn $this->itemCount !== 0\n\t\t\t? $this->offset + 1\n\t\t\t: 0;\n\t}\n\n\n\t/**\n\t * Returns the sequence number of the last element on the page\n\t * @return int<0, max>\n\t */\n\tpublic function getLastItemOnPage(): int\n\t{\n\t\treturn $this->offset + $this->length;\n\t}\n\n\n\t/**\n\t * Sets first page (base) number.\n\t */\n\tpublic function setBase(int $base): static\n\t{\n\t\t$this->base = $base;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns first page (base) number.\n\t */\n\tpublic function getBase(): int\n\t{\n\t\treturn $this->base;\n\t}\n\n\n\t/**\n\t * Returns zero-based page number.\n\t * @return int<0, max>\n\t */\n\tprotected function getPageIndex(): int\n\t{\n\t\t$index = max(0, $this->page - $this->base);\n\t\treturn $this->itemCount === null\n\t\t\t? $index\n\t\t\t: min($index, max(0, $this->getPageCount() - 1));\n\t}\n\n\n\t/**\n\t * Is the current page the first one?\n\t */\n\tpublic function isFirst(): bool\n\t{\n\t\treturn $this->getPageIndex() === 0;\n\t}\n\n\n\t/**\n\t * Is the current page the last one?\n\t */\n\tpublic function isLast(): bool\n\t{\n\t\treturn $this->itemCount === null\n\t\t\t? false\n\t\t\t: $this->getPageIndex() >= $this->getPageCount() - 1;\n\t}\n\n\n\t/**\n\t * Returns the total number of pages.\n\t * @return int<0, max>|null\n\t */\n\tpublic function getPageCount(): ?int\n\t{\n\t\treturn $this->itemCount === null\n\t\t\t? null\n\t\t\t: (int) ceil($this->itemCount / $this->itemsPerPage);\n\t}\n\n\n\t/**\n\t * Sets the number of items to display on a single page.\n\t */\n\tpublic function setItemsPerPage(int $itemsPerPage): static\n\t{\n\t\t$this->itemsPerPage = max(1, $itemsPerPage);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns the number of items to display on a single page.\n\t * @return positive-int\n\t */\n\tpublic function getItemsPerPage(): int\n\t{\n\t\treturn $this->itemsPerPage;\n\t}\n\n\n\t/**\n\t * Sets the total number of items.\n\t */\n\tpublic function setItemCount(?int $itemCount = null): static\n\t{\n\t\t$this->itemCount = $itemCount === null ? null : max(0, $itemCount);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Returns the total number of items.\n\t * @return int<0, max>|null\n\t */\n\tpublic function getItemCount(): ?int\n\t{\n\t\treturn $this->itemCount;\n\t}\n\n\n\t/**\n\t * Returns the absolute index of the first item on current page.\n\t * @return int<0, max>\n\t */\n\tpublic function getOffset(): int\n\t{\n\t\treturn $this->getPageIndex() * $this->itemsPerPage;\n\t}\n\n\n\t/**\n\t * Returns the absolute index of the first item on current page in countdown paging.\n\t * @return int<0, max>|null\n\t */\n\tpublic function getCountdownOffset(): ?int\n\t{\n\t\treturn $this->itemCount === null\n\t\t\t? null\n\t\t\t: max(0, $this->itemCount - ($this->getPageIndex() + 1) * $this->itemsPerPage);\n\t}\n\n\n\t/**\n\t * Returns the number of items on current page.\n\t * @return int<0, max>\n\t */\n\tpublic function getLength(): int\n\t{\n\t\treturn $this->itemCount === null\n\t\t\t? $this->itemsPerPage\n\t\t\t: min($this->itemsPerPage, $this->itemCount - $this->getPageIndex() * $this->itemsPerPage);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/ArrayHash.php","ext":"php","size":1958,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function count, is_array, is_scalar, sprintf;\n\n\n/**\n * Provides objects to work as array.\n * @template T\n * @implements \\IteratorAggregate<array-key, T>\n * @implements \\ArrayAccess<array-key, T>\n */\nclass ArrayHash extends \\stdClass implements \\ArrayAccess, \\Countable, \\IteratorAggregate\n{\n\t/**\n\t * Transforms array to ArrayHash.\n\t * @param  array<T>  $array\n\t */\n\tpublic static function from(array $array, bool $recursive = true): static\n\t{\n\t\t$obj = new static;\n\t\tforeach ($array as $key => $value) {\n\t\t\t$obj->$key = $recursive && is_array($value)\n\t\t\t\t? static::from($value)\n\t\t\t\t: $value;\n\t\t}\n\n\t\treturn $obj;\n\t}\n\n\n\t/**\n\t * Returns an iterator over all items.\n\t * @return \\Iterator<array-key, T>\n\t */\n\tpublic function &getIterator(): \\Iterator\n\t{\n\t\tforeach ((array) $this as $key => $foo) {\n\t\t\tyield $key => $this->$key;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns items count.\n\t */\n\tpublic function count(): int\n\t{\n\t\treturn count((array) $this);\n\t}\n\n\n\t/**\n\t * Replaces or appends an item.\n\t * @param  array-key  $key\n\t * @param  T  $value\n\t */\n\tpublic function offsetSet($key, $value): void\n\t{\n\t\tif (!is_scalar($key)) { // prevents null\n\t\t\tthrow new Nette\\InvalidArgumentException(sprintf('Key must be either a string or an integer, %s given.', get_debug_type($key)));\n\t\t}\n\n\t\t$this->$key = $value;\n\t}\n\n\n\t/**\n\t * Returns an item.\n\t * @param  array-key  $key\n\t * @return T\n\t */\n\t#[\\ReturnTypeWillChange]\n\tpublic function offsetGet($key)\n\t{\n\t\treturn $this->$key;\n\t}\n\n\n\t/**\n\t * Determines whether an item exists.\n\t * @param  array-key  $key\n\t */\n\tpublic function offsetExists($key): bool\n\t{\n\t\treturn isset($this->$key);\n\t}\n\n\n\t/**\n\t * Removes the element from this list.\n\t * @param  array-key  $key\n\t */\n\tpublic function offsetUnset($key): void\n\t{\n\t\tunset($this->$key);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Random.php","ext":"php","size":1276,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse Random\\Randomizer;\nuse function strlen;\nuse const PHP_VERSION_ID;\n\n\n/**\n * Secure random string generator.\n */\nfinal class Random\n{\n\tuse Nette\\StaticClass;\n\n\t/**\n\t * Generates a random string of given length from characters specified in second argument.\n\t * Supports intervals, such as `0-9` or `A-Z`.\n\t */\n\tpublic static function generate(int $length = 10, string $charlist = '0-9a-z'): string\n\t{\n\t\t$charlist = preg_replace_callback(\n\t\t\t'#.-.#',\n\t\t\tfn(array $m): string => implode('', range($m[0][0], $m[0][2])),\n\t\t\t$charlist,\n\t\t);\n\t\t$charlist = count_chars($charlist, mode: 3);\n\t\t$chLen = strlen($charlist);\n\n\t\tif ($length < 1) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Length must be greater than zero.');\n\t\t} elseif ($chLen < 2) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Character list must contain at least two chars.');\n\t\t} elseif (PHP_VERSION_ID >= 80300) {\n\t\t\treturn (new Randomizer)->getBytesFromString($charlist, $length);\n\t\t}\n\n\t\t$res = '';\n\t\tfor ($i = 0; $i < $length; $i++) {\n\t\t\t$res .= $charlist[random_int(0, $chLen - 1)];\n\t\t}\n\n\t\treturn $res;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/FileSystem.php","ext":"php","size":10028,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function array_pop, chmod, decoct, dirname, end, fclose, file_exists, file_get_contents, file_put_contents, fopen, implode, is_dir, is_file, is_link, mkdir, preg_match, preg_split, realpath, rename, rmdir, rtrim, sprintf, str_replace, stream_copy_to_stream, stream_is_local, strtr;\nuse const DIRECTORY_SEPARATOR;\n\n\n/**\n * File system tool.\n */\nfinal class FileSystem\n{\n\t/**\n\t * Creates a directory if it does not exist, including parent directories.\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function createDir(string $dir, int $mode = 0o777): void\n\t{\n\t\tif (!is_dir($dir) && !@mkdir($dir, $mode, recursive: true) && !is_dir($dir)) { // @ - dir may already exist\n\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\"Unable to create directory '%s' with mode %s. %s\",\n\t\t\t\tself::normalizePath($dir),\n\t\t\t\tdecoct($mode),\n\t\t\t\tHelpers::getLastError(),\n\t\t\t));\n\t\t}\n\t}\n\n\n\t/**\n\t * Copies a file or an entire directory. Overwrites existing files and directories by default.\n\t * @throws Nette\\IOException  on error occurred\n\t * @throws Nette\\InvalidStateException  if $overwrite is set to false and destination already exists\n\t */\n\tpublic static function copy(string $origin, string $target, bool $overwrite = true): void\n\t{\n\t\tif (stream_is_local($origin) && !file_exists($origin)) {\n\t\t\tthrow new Nette\\IOException(sprintf(\"File or directory '%s' not found.\", self::normalizePath($origin)));\n\n\t\t} elseif (!$overwrite && file_exists($target)) {\n\t\t\tthrow new Nette\\InvalidStateException(sprintf(\"File or directory '%s' already exists.\", self::normalizePath($target)));\n\n\t\t} elseif (is_dir($origin)) {\n\t\t\tstatic::createDir($target);\n\t\t\tforeach (new \\FilesystemIterator($target) as $item) {\n\t\t\t\tstatic::delete($item->getPathname());\n\t\t\t}\n\n\t\t\tforeach ($iterator = new \\RecursiveIteratorIterator(new \\RecursiveDirectoryIterator($origin, \\RecursiveDirectoryIterator::SKIP_DOTS), \\RecursiveIteratorIterator::SELF_FIRST) as $item) {\n\t\t\t\tif ($item->isDir()) {\n\t\t\t\t\tstatic::createDir($target . '/' . $iterator->getSubPathName());\n\t\t\t\t} else {\n\t\t\t\t\tstatic::copy($item->getPathname(), $target . '/' . $iterator->getSubPathName());\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tstatic::createDir(dirname($target));\n\t\t\tif (@stream_copy_to_stream(static::open($origin, 'rb'), static::open($target, 'wb')) === false) { // @ is escalated to exception\n\t\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to copy file '%s' to '%s'. %s\",\n\t\t\t\t\tself::normalizePath($origin),\n\t\t\t\t\tself::normalizePath($target),\n\t\t\t\t\tHelpers::getLastError(),\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Opens file and returns resource.\n\t * @return resource\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function open(string $path, string $mode)\n\t{\n\t\t$f = @fopen($path, $mode); // @ is escalated to exception\n\t\tif (!$f) {\n\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\"Unable to open file '%s'. %s\",\n\t\t\t\tself::normalizePath($path),\n\t\t\t\tHelpers::getLastError(),\n\t\t\t));\n\t\t}\n\t\treturn $f;\n\t}\n\n\n\t/**\n\t * Deletes a file or an entire directory if exists. If the directory is not empty, it deletes its contents first.\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function delete(string $path): void\n\t{\n\t\tif (is_file($path) || is_link($path)) {\n\t\t\t$func = DIRECTORY_SEPARATOR === '\\\\' && is_dir($path) ? 'rmdir' : 'unlink';\n\t\t\tif (!@$func($path)) { // @ is escalated to exception\n\t\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to delete '%s'. %s\",\n\t\t\t\t\tself::normalizePath($path),\n\t\t\t\t\tHelpers::getLastError(),\n\t\t\t\t));\n\t\t\t}\n\t\t} elseif (is_dir($path)) {\n\t\t\tforeach (new \\FilesystemIterator($path) as $item) {\n\t\t\t\tstatic::delete($item->getPathname());\n\t\t\t}\n\n\t\t\tif (!@rmdir($path)) { // @ is escalated to exception\n\t\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to delete directory '%s'. %s\",\n\t\t\t\t\tself::normalizePath($path),\n\t\t\t\t\tHelpers::getLastError(),\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Renames or moves a file or a directory. Overwrites existing files and directories by default.\n\t * @throws Nette\\IOException  on error occurred\n\t * @throws Nette\\InvalidStateException  if $overwrite is set to false and destination already exists\n\t */\n\tpublic static function rename(string $origin, string $target, bool $overwrite = true): void\n\t{\n\t\tif (!$overwrite && file_exists($target)) {\n\t\t\tthrow new Nette\\InvalidStateException(sprintf(\"File or directory '%s' already exists.\", self::normalizePath($target)));\n\n\t\t} elseif (!file_exists($origin)) {\n\t\t\tthrow new Nette\\IOException(sprintf(\"File or directory '%s' not found.\", self::normalizePath($origin)));\n\n\t\t} else {\n\t\t\tstatic::createDir(dirname($target));\n\t\t\tif (realpath($origin) !== realpath($target)) {\n\t\t\t\tstatic::delete($target);\n\t\t\t}\n\n\t\t\tif (!@rename($origin, $target)) { // @ is escalated to exception\n\t\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to rename file or directory '%s' to '%s'. %s\",\n\t\t\t\t\tself::normalizePath($origin),\n\t\t\t\t\tself::normalizePath($target),\n\t\t\t\t\tHelpers::getLastError(),\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Reads the content of a file.\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function read(string $file): string\n\t{\n\t\t$content = @file_get_contents($file); // @ is escalated to exception\n\t\tif ($content === false) {\n\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\"Unable to read file '%s'. %s\",\n\t\t\t\tself::normalizePath($file),\n\t\t\t\tHelpers::getLastError(),\n\t\t\t));\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\n\t/**\n\t * Reads the file content line by line. Because it reads continuously as we iterate over the lines,\n\t * it is possible to read files larger than the available memory.\n\t * @return \\Generator<int, string>\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function readLines(string $file, bool $stripNewLines = true): \\Generator\n\t{\n\t\treturn (function ($f) use ($file, $stripNewLines) {\n\t\t\t$counter = 0;\n\t\t\tdo {\n\t\t\t\t$line = Callback::invokeSafe('fgets', [$f], fn($error) => throw new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to read file '%s'. %s\",\n\t\t\t\t\tself::normalizePath($file),\n\t\t\t\t\t$error,\n\t\t\t\t)));\n\t\t\t\tif ($line === false) {\n\t\t\t\t\tfclose($f);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ($stripNewLines) {\n\t\t\t\t\t$line = rtrim($line, \"\\r\\n\");\n\t\t\t\t}\n\n\t\t\t\tyield $counter++ => $line;\n\n\t\t\t} while (true);\n\t\t})(static::open($file, 'r'));\n\t}\n\n\n\t/**\n\t * Writes the string to a file.\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function write(string $file, string $content, ?int $mode = 0o666): void\n\t{\n\t\tstatic::createDir(dirname($file));\n\t\tif (@file_put_contents($file, $content) === false) { // @ is escalated to exception\n\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\"Unable to write file '%s'. %s\",\n\t\t\t\tself::normalizePath($file),\n\t\t\t\tHelpers::getLastError(),\n\t\t\t));\n\t\t}\n\n\t\tif ($mode !== null && !@chmod($file, $mode)) { // @ is escalated to exception\n\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\"Unable to chmod file '%s' to mode %s. %s\",\n\t\t\t\tself::normalizePath($file),\n\t\t\t\tdecoct($mode),\n\t\t\t\tHelpers::getLastError(),\n\t\t\t));\n\t\t}\n\t}\n\n\n\t/**\n\t * Sets file permissions to `$fileMode` or directory permissions to `$dirMode`.\n\t * Recursively traverses and sets permissions on the entire contents of the directory as well.\n\t * @throws Nette\\IOException  on error occurred\n\t */\n\tpublic static function makeWritable(string $path, int $dirMode = 0o777, int $fileMode = 0o666): void\n\t{\n\t\tif (is_file($path)) {\n\t\t\tif (!@chmod($path, $fileMode)) { // @ is escalated to exception\n\t\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to chmod file '%s' to mode %s. %s\",\n\t\t\t\t\tself::normalizePath($path),\n\t\t\t\t\tdecoct($fileMode),\n\t\t\t\t\tHelpers::getLastError(),\n\t\t\t\t));\n\t\t\t}\n\t\t} elseif (is_dir($path)) {\n\t\t\tforeach (new \\FilesystemIterator($path) as $item) {\n\t\t\t\tstatic::makeWritable($item->getPathname(), $dirMode, $fileMode);\n\t\t\t}\n\n\t\t\tif (!@chmod($path, $dirMode)) { // @ is escalated to exception\n\t\t\t\tthrow new Nette\\IOException(sprintf(\n\t\t\t\t\t\"Unable to chmod directory '%s' to mode %s. %s\",\n\t\t\t\t\tself::normalizePath($path),\n\t\t\t\t\tdecoct($dirMode),\n\t\t\t\t\tHelpers::getLastError(),\n\t\t\t\t));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Nette\\IOException(sprintf(\"File or directory '%s' not found.\", self::normalizePath($path)));\n\t\t}\n\t}\n\n\n\t/**\n\t * Determines if the path is absolute.\n\t */\n\tpublic static function isAbsolute(string $path): bool\n\t{\n\t\treturn (bool) preg_match('#([a-z]:)?[/\\\\\\]|[a-z][a-z0-9+.-]*://#Ai', $path);\n\t}\n\n\n\t/**\n\t * Normalizes `..` and `.` and directory separators in path.\n\t */\n\tpublic static function normalizePath(string $path): string\n\t{\n\t\t$parts = $path === '' ? [] : preg_split('~[/\\\\\\]+~', $path);\n\t\t$res = [];\n\t\tforeach ($parts as $part) {\n\t\t\tif ($part === '..' && $res && end($res) !== '..' && end($res) !== '') {\n\t\t\t\tarray_pop($res);\n\t\t\t} elseif ($part !== '.') {\n\t\t\t\t$res[] = $part;\n\t\t\t}\n\t\t}\n\n\t\treturn $res === ['']\n\t\t\t? DIRECTORY_SEPARATOR\n\t\t\t: implode(DIRECTORY_SEPARATOR, $res);\n\t}\n\n\n\t/**\n\t * Joins all segments of the path and normalizes the result.\n\t */\n\tpublic static function joinPaths(string ...$paths): string\n\t{\n\t\treturn self::normalizePath(implode('/', $paths));\n\t}\n\n\n\t/**\n\t * Resolves a path against a base path. If the path is absolute, returns it directly, if it's relative, joins it with the base path.\n\t */\n\tpublic static function resolvePath(string $basePath, string $path): string\n\t{\n\t\treturn match (true) {\n\t\t\tself::isAbsolute($path) => self::platformSlashes($path),\n\t\t\t$path === '' => self::platformSlashes($basePath),\n\t\t\tdefault => self::joinPaths($basePath, $path),\n\t\t};\n\t}\n\n\n\t/**\n\t * Converts backslashes to slashes.\n\t */\n\tpublic static function unixSlashes(string $path): string\n\t{\n\t\treturn strtr($path, '\\\\', '/');\n\t}\n\n\n\t/**\n\t * Converts slashes to platform-specific directory separators.\n\t */\n\tpublic static function platformSlashes(string $path): string\n\t{\n\t\treturn DIRECTORY_SEPARATOR === '/'\n\t\t\t? strtr($path, '\\\\', '/')\n\t\t\t: str_replace(':\\\\\\\\', '://', strtr($path, '/', '\\\\')); // protocol://\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Floats.php","ext":"php","size":2169,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function abs, is_finite, is_nan, max, round;\n\n\n/**\n * Floating-point numbers comparison.\n */\nclass Floats\n{\n\tuse Nette\\StaticClass;\n\n\tprivate const Epsilon = 1e-10;\n\n\n\tpublic static function isZero(float $value): bool\n\t{\n\t\treturn abs($value) < self::Epsilon;\n\t}\n\n\n\tpublic static function isInteger(float $value): bool\n\t{\n\t\treturn abs(round($value) - $value) < self::Epsilon;\n\t}\n\n\n\t/**\n\t * Compare two floats. If $a < $b it returns -1, if they are equal it returns 0 and if $a > $b it returns 1\n\t * @throws \\LogicException if one of parameters is NAN\n\t */\n\tpublic static function compare(float $a, float $b): int\n\t{\n\t\tif (is_nan($a) || is_nan($b)) {\n\t\t\tthrow new \\LogicException('Trying to compare NAN');\n\n\t\t} elseif (!is_finite($a) && !is_finite($b) && $a === $b) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$diff = abs($a - $b);\n\t\tif (($diff < self::Epsilon || ($diff / max(abs($a), abs($b)) < self::Epsilon))) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn $a < $b ? -1 : 1;\n\t}\n\n\n\t/**\n\t * Returns true if $a = $b\n\t * @throws \\LogicException if one of parameters is NAN\n\t */\n\tpublic static function areEqual(float $a, float $b): bool\n\t{\n\t\treturn self::compare($a, $b) === 0;\n\t}\n\n\n\t/**\n\t * Returns true if $a < $b\n\t * @throws \\LogicException if one of parameters is NAN\n\t */\n\tpublic static function isLessThan(float $a, float $b): bool\n\t{\n\t\treturn self::compare($a, $b) < 0;\n\t}\n\n\n\t/**\n\t * Returns true if $a <= $b\n\t * @throws \\LogicException if one of parameters is NAN\n\t */\n\tpublic static function isLessThanOrEqualTo(float $a, float $b): bool\n\t{\n\t\treturn self::compare($a, $b) <= 0;\n\t}\n\n\n\t/**\n\t * Returns true if $a > $b\n\t * @throws \\LogicException if one of parameters is NAN\n\t */\n\tpublic static function isGreaterThan(float $a, float $b): bool\n\t{\n\t\treturn self::compare($a, $b) > 0;\n\t}\n\n\n\t/**\n\t * Returns true if $a >= $b\n\t * @throws \\LogicException if one of parameters is NAN\n\t */\n\tpublic static function isGreaterThanOrEqualTo(float $a, float $b): bool\n\t{\n\t\treturn self::compare($a, $b) >= 0;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/Finder.php","ext":"php","size":13669,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function array_merge, count, func_get_args, func_num_args, glob, implode, is_array, is_dir, iterator_to_array, preg_match, preg_quote, preg_replace, preg_split, rtrim, spl_object_id, sprintf, str_ends_with, str_starts_with, strnatcmp, strpbrk, strrpos, strtolower, strtr, substr, usort;\nuse const GLOB_NOESCAPE, GLOB_NOSORT, GLOB_ONLYDIR;\n\n\n/**\n * Finder allows searching through directory trees using iterator.\n *\n * Finder::findFiles('*.php')\n *     ->size('> 10kB')\n *     ->from('.')\n *     ->exclude('temp');\n *\n * @implements \\IteratorAggregate<string, FileInfo>\n */\nclass Finder implements \\IteratorAggregate\n{\n\t/** @var array<array{string, string}> */\n\tprivate array $find = [];\n\n\t/** @var string[] */\n\tprivate array $in = [];\n\n\t/** @var \\Closure[] */\n\tprivate array $filters = [];\n\n\t/** @var \\Closure[] */\n\tprivate array $descentFilters = [];\n\n\t/** @var array<string|self> */\n\tprivate array $appends = [];\n\tprivate bool $childFirst = false;\n\n\t/** @var ?callable */\n\tprivate $sort;\n\tprivate int $maxDepth = -1;\n\tprivate bool $ignoreUnreadableDirs = true;\n\n\n\t/**\n\t * Begins search for files and directories matching mask.\n\t */\n\tpublic static function find(string|array $masks = ['*']): static\n\t{\n\t\t$masks = is_array($masks) ? $masks : func_get_args(); // compatibility with variadic\n\t\treturn (new static)->addMask($masks, 'dir')->addMask($masks, 'file');\n\t}\n\n\n\t/**\n\t * Begins search for files matching mask.\n\t */\n\tpublic static function findFiles(string|array $masks = ['*']): static\n\t{\n\t\t$masks = is_array($masks) ? $masks : func_get_args(); // compatibility with variadic\n\t\treturn (new static)->addMask($masks, 'file');\n\t}\n\n\n\t/**\n\t * Begins search for directories matching mask.\n\t */\n\tpublic static function findDirectories(string|array $masks = ['*']): static\n\t{\n\t\t$masks = is_array($masks) ? $masks : func_get_args(); // compatibility with variadic\n\t\treturn (new static)->addMask($masks, 'dir');\n\t}\n\n\n\t/**\n\t * Finds files matching the specified masks.\n\t */\n\tpublic function files(string|array $masks = ['*']): static\n\t{\n\t\treturn $this->addMask((array) $masks, 'file');\n\t}\n\n\n\t/**\n\t * Finds directories matching the specified masks.\n\t */\n\tpublic function directories(string|array $masks = ['*']): static\n\t{\n\t\treturn $this->addMask((array) $masks, 'dir');\n\t}\n\n\n\tprivate function addMask(array $masks, string $mode): static\n\t{\n\t\tforeach ($masks as $mask) {\n\t\t\t$mask = FileSystem::unixSlashes($mask);\n\t\t\tif ($mode === 'dir') {\n\t\t\t\t$mask = rtrim($mask, '/');\n\t\t\t}\n\t\t\tif ($mask === '' || ($mode === 'file' && str_ends_with($mask, '/'))) {\n\t\t\t\tthrow new Nette\\InvalidArgumentException(\"Invalid mask '$mask'\");\n\t\t\t}\n\t\t\tif (str_starts_with($mask, '**/')) {\n\t\t\t\t$mask = substr($mask, 3);\n\t\t\t}\n\t\t\t$this->find[] = [$mask, $mode];\n\t\t}\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Searches in the given directories. Wildcards are allowed.\n\t */\n\tpublic function in(string|array $paths): static\n\t{\n\t\t$paths = is_array($paths) ? $paths : func_get_args(); // compatibility with variadic\n\t\t$this->addLocation($paths, '');\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Searches recursively from the given directories. Wildcards are allowed.\n\t */\n\tpublic function from(string|array $paths): static\n\t{\n\t\t$paths = is_array($paths) ? $paths : func_get_args(); // compatibility with variadic\n\t\t$this->addLocation($paths, '/**');\n\t\treturn $this;\n\t}\n\n\n\tprivate function addLocation(array $paths, string $ext): void\n\t{\n\t\tforeach ($paths as $path) {\n\t\t\tif ($path === '') {\n\t\t\t\tthrow new Nette\\InvalidArgumentException(\"Invalid directory '$path'\");\n\t\t\t}\n\t\t\t$path = rtrim(FileSystem::unixSlashes($path), '/');\n\t\t\t$this->in[] = $path . $ext;\n\t\t}\n\t}\n\n\n\t/**\n\t * Lists directory's contents before the directory itself. By default, this is disabled.\n\t */\n\tpublic function childFirst(bool $state = true): static\n\t{\n\t\t$this->childFirst = $state;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Ignores unreadable directories. By default, this is enabled.\n\t */\n\tpublic function ignoreUnreadableDirs(bool $state = true): static\n\t{\n\t\t$this->ignoreUnreadableDirs = $state;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Set a compare function for sorting directory entries. The function will be called to sort entries from the same directory.\n\t * @param  callable(FileInfo, FileInfo): int  $callback\n\t */\n\tpublic function sortBy(callable $callback): static\n\t{\n\t\t$this->sort = $callback;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Sorts files in each directory naturally by name.\n\t */\n\tpublic function sortByName(): static\n\t{\n\t\t$this->sort = fn(FileInfo $a, FileInfo $b): int => strnatcmp($a->getBasename(), $b->getBasename());\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Adds the specified paths or appends a new finder that returns.\n\t */\n\tpublic function append(string|array|null $paths = null): static\n\t{\n\t\tif ($paths === null) {\n\t\t\treturn $this->appends[] = new static;\n\t\t}\n\n\t\t$this->appends = array_merge($this->appends, (array) $paths);\n\t\treturn $this;\n\t}\n\n\n\t/********************* filtering ****************d*g**/\n\n\n\t/**\n\t * Skips entries that matches the given masks relative to the ones defined with the in() or from() methods.\n\t */\n\tpublic function exclude(string|array $masks): static\n\t{\n\t\t$masks = is_array($masks) ? $masks : func_get_args(); // compatibility with variadic\n\t\tforeach ($masks as $mask) {\n\t\t\t$mask = FileSystem::unixSlashes($mask);\n\t\t\tif (!preg_match('~^/?(\\*\\*/)?(.+)(/\\*\\*|/\\*|/|)$~D', $mask, $m)) {\n\t\t\t\tthrow new Nette\\InvalidArgumentException(\"Invalid mask '$mask'\");\n\t\t\t}\n\t\t\t$end = $m[3];\n\t\t\t$re = $this->buildPattern($m[2]);\n\t\t\t$filter = fn(FileInfo $file): bool => ($end && !$file->isDir())\n\t\t\t\t|| !preg_match($re, FileSystem::unixSlashes($file->getRelativePathname()));\n\n\t\t\t$this->descentFilter($filter);\n\t\t\tif ($end !== '/*') {\n\t\t\t\t$this->filter($filter);\n\t\t\t}\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Yields only entries which satisfy the given filter.\n\t * @param  callable(FileInfo): bool  $callback\n\t */\n\tpublic function filter(callable $callback): static\n\t{\n\t\t$this->filters[] = \\Closure::fromCallable($callback);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * It descends only to directories that match the specified filter.\n\t * @param  callable(FileInfo): bool  $callback\n\t */\n\tpublic function descentFilter(callable $callback): static\n\t{\n\t\t$this->descentFilters[] = \\Closure::fromCallable($callback);\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Sets the maximum depth of entries.\n\t */\n\tpublic function limitDepth(?int $depth): static\n\t{\n\t\t$this->maxDepth = $depth ?? -1;\n\t\treturn $this;\n\t}\n\n\n\t/**\n\t * Restricts the search by size. $operator accepts \"[operator] [size] [unit]\" example: >=10kB\n\t */\n\tpublic function size(string $operator, ?int $size = null): static\n\t{\n\t\tif (func_num_args() === 1) { // in $operator is predicate\n\t\t\tif (!preg_match('#^(?:([=<>!]=?|<>)\\s*)?((?:\\d*\\.)?\\d+)\\s*(K|M|G|)B?$#Di', $operator, $matches)) {\n\t\t\t\tthrow new Nette\\InvalidArgumentException('Invalid size predicate format.');\n\t\t\t}\n\n\t\t\t[, $operator, $size, $unit] = $matches;\n\t\t\t$units = ['' => 1, 'k' => 1e3, 'm' => 1e6, 'g' => 1e9];\n\t\t\t$size *= $units[strtolower($unit)];\n\t\t\t$operator = $operator ?: '=';\n\t\t}\n\n\t\treturn $this->filter(fn(FileInfo $file): bool => !$file->isFile() || Helpers::compare($file->getSize(), $operator, $size));\n\t}\n\n\n\t/**\n\t * Restricts the search by modified time. $operator accepts \"[operator] [date]\" example: >1978-01-23\n\t */\n\tpublic function date(string $operator, string|int|\\DateTimeInterface|null $date = null): static\n\t{\n\t\tif (func_num_args() === 1) { // in $operator is predicate\n\t\t\tif (!preg_match('#^(?:([=<>!]=?|<>)\\s*)?(.+)$#Di', $operator, $matches)) {\n\t\t\t\tthrow new Nette\\InvalidArgumentException('Invalid date predicate format.');\n\t\t\t}\n\n\t\t\t[, $operator, $date] = $matches;\n\t\t\t$operator = $operator ?: '=';\n\t\t}\n\n\t\t$date = DateTime::from($date)->getTimestamp();\n\t\treturn $this->filter(fn(FileInfo $file): bool => !$file->isFile() || Helpers::compare($file->getMTime(), $operator, $date));\n\t}\n\n\n\t/********************* iterator generator ****************d*g**/\n\n\n\t/**\n\t * Returns an array with all found files and directories.\n\t * @return list<FileInfo>\n\t */\n\tpublic function collect(): array\n\t{\n\t\treturn iterator_to_array($this->getIterator(), preserve_keys: false);\n\t}\n\n\n\t/** @return \\Generator<string, FileInfo> */\n\tpublic function getIterator(): \\Generator\n\t{\n\t\t$plan = $this->buildPlan();\n\t\tforeach ($plan as $dir => $searches) {\n\t\t\tyield from $this->traverseDir($dir, $searches);\n\t\t}\n\n\t\tforeach ($this->appends as $item) {\n\t\t\tif ($item instanceof self) {\n\t\t\t\tyield from $item->getIterator();\n\t\t\t} else {\n\t\t\t\t$item = FileSystem::platformSlashes($item);\n\t\t\t\tyield $item => new FileInfo($item);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * @param  array<object{pattern: string, mode: string, recursive: bool}>  $searches\n\t * @param  string[]  $subdirs\n\t * @return \\Generator<string, FileInfo>\n\t */\n\tprivate function traverseDir(string $dir, array $searches, array $subdirs = []): \\Generator\n\t{\n\t\tif ($this->maxDepth >= 0 && count($subdirs) > $this->maxDepth) {\n\t\t\treturn;\n\t\t} elseif (!is_dir($dir)) {\n\t\t\tthrow new Nette\\InvalidStateException(sprintf(\"Directory '%s' does not exist.\", rtrim($dir, '/\\\\')));\n\t\t}\n\n\t\ttry {\n\t\t\t$pathNames = new \\FilesystemIterator($dir, \\FilesystemIterator::FOLLOW_SYMLINKS | \\FilesystemIterator::SKIP_DOTS | \\FilesystemIterator::CURRENT_AS_PATHNAME | \\FilesystemIterator::UNIX_PATHS);\n\t\t} catch (\\UnexpectedValueException $e) {\n\t\t\tif ($this->ignoreUnreadableDirs) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthrow new Nette\\InvalidStateException($e->getMessage());\n\t\t\t}\n\t\t}\n\n\t\t$files = $this->convertToFiles($pathNames, implode('/', $subdirs), FileSystem::isAbsolute($dir));\n\n\t\tif ($this->sort) {\n\t\t\t$files = iterator_to_array($files);\n\t\t\tusort($files, $this->sort);\n\t\t}\n\n\t\tforeach ($files as $file) {\n\t\t\t$pathName = $file->getPathname();\n\t\t\t$cache = $subSearch = [];\n\n\t\t\tif ($file->isDir()) {\n\t\t\t\tforeach ($searches as $search) {\n\t\t\t\t\tif ($search->recursive && $this->proveFilters($this->descentFilters, $file, $cache)) {\n\t\t\t\t\t\t$subSearch[] = $search;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($this->childFirst && $subSearch) {\n\t\t\t\tyield from $this->traverseDir($pathName, $subSearch, array_merge($subdirs, [$file->getBasename()]));\n\t\t\t}\n\n\t\t\t$relativePathname = FileSystem::unixSlashes($file->getRelativePathname());\n\t\t\tforeach ($searches as $search) {\n\t\t\t\tif (\n\t\t\t\t\t$file->{'is' . $search->mode}()\n\t\t\t\t\t&& preg_match($search->pattern, $relativePathname)\n\t\t\t\t\t&& $this->proveFilters($this->filters, $file, $cache)\n\t\t\t\t) {\n\t\t\t\t\tyield $pathName => $file;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!$this->childFirst && $subSearch) {\n\t\t\t\tyield from $this->traverseDir($pathName, $subSearch, array_merge($subdirs, [$file->getBasename()]));\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprivate function convertToFiles(iterable $pathNames, string $relativePath, bool $absolute): \\Generator\n\t{\n\t\tforeach ($pathNames as $pathName) {\n\t\t\tif (!$absolute) {\n\t\t\t\t$pathName = preg_replace('~\\.?/~A', '', $pathName);\n\t\t\t}\n\t\t\t$pathName = FileSystem::platformSlashes($pathName);\n\t\t\tyield new FileInfo($pathName, $relativePath);\n\t\t}\n\t}\n\n\n\tprivate function proveFilters(array $filters, FileInfo $file, array &$cache): bool\n\t{\n\t\tforeach ($filters as $filter) {\n\t\t\t$res = &$cache[spl_object_id($filter)];\n\t\t\t$res ??= $filter($file);\n\t\t\tif (!$res) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\t/** @return array<string, array<object{pattern: string, mode: string, recursive: bool}>> */\n\tprivate function buildPlan(): array\n\t{\n\t\t$plan = $dirCache = [];\n\t\tforeach ($this->find as [$mask, $mode]) {\n\t\t\t$splits = [];\n\t\t\tif (FileSystem::isAbsolute($mask)) {\n\t\t\t\tif ($this->in) {\n\t\t\t\t\tthrow new Nette\\InvalidStateException(\"You cannot combine the absolute path in the mask '$mask' and the directory to search '{$this->in[0]}'.\");\n\t\t\t\t}\n\t\t\t\t$splits[] = self::splitRecursivePart($mask);\n\t\t\t} else {\n\t\t\t\tforeach ($this->in ?: ['.'] as $in) {\n\t\t\t\t\t$in = strtr($in, ['[' => '[[]', ']' => '[]]']); // in path, do not treat [ and ] as a pattern by glob()\n\t\t\t\t\t$splits[] = self::splitRecursivePart($in . '/' . $mask);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tforeach ($splits as [$base, $rest, $recursive]) {\n\t\t\t\t$base = $base === '' ? '.' : $base;\n\t\t\t\t$dirs = $dirCache[$base] ??= strpbrk($base, '*?[')\n\t\t\t\t\t? glob($base, GLOB_NOSORT | GLOB_ONLYDIR | GLOB_NOESCAPE)\n\t\t\t\t\t: [strtr($base, ['[[]' => '[', '[]]' => ']'])]; // unescape [ and ]\n\n\t\t\t\tif (!$dirs) {\n\t\t\t\t\tthrow new Nette\\InvalidStateException(sprintf(\"Directory '%s' does not exist.\", rtrim($base, '/\\\\')));\n\t\t\t\t}\n\n\t\t\t\t$search = (object) ['pattern' => $this->buildPattern($rest), 'mode' => $mode, 'recursive' => $recursive];\n\t\t\t\tforeach ($dirs as $dir) {\n\t\t\t\t\t$plan[$dir][] = $search;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $plan;\n\t}\n\n\n\t/**\n\t * Since glob() does not know ** wildcard, we divide the path into a part for glob and a part for manual traversal.\n\t */\n\tprivate static function splitRecursivePart(string $path): array\n\t{\n\t\t$a = strrpos($path, '/');\n\t\t$parts = preg_split('~(?<=^|/)\\*\\*($|/)~', substr($path, 0, $a + 1), 2);\n\t\treturn isset($parts[1])\n\t\t\t? [$parts[0], $parts[1] . substr($path, $a + 1), true]\n\t\t\t: [$parts[0], substr($path, $a + 1), false];\n\t}\n\n\n\t/**\n\t * Converts wildcards to regular expression.\n\t */\n\tprivate function buildPattern(string $mask): string\n\t{\n\t\tif ($mask === '*') {\n\t\t\treturn '##';\n\t\t} elseif (str_starts_with($mask, './')) {\n\t\t\t$anchor = '^';\n\t\t\t$mask = substr($mask, 2);\n\t\t} else {\n\t\t\t$anchor = '(?:^|/)';\n\t\t}\n\n\t\t$pattern = strtr(\n\t\t\tpreg_quote($mask, '#'),\n\t\t\t[\n\t\t\t\t'\\*\\*/' => '(.+/)?',\n\t\t\t\t'\\*' => '[^/]*',\n\t\t\t\t'\\?' => '[^/]',\n\t\t\t\t'\\[\\!' => '[^',\n\t\t\t\t'\\[' => '[',\n\t\t\t\t'\\]' => ']',\n\t\t\t\t'\\-' => '-',\n\t\t\t],\n\t\t);\n\t\treturn '#' . $anchor . $pattern . '$#D' . (Helpers::IsWindows ? 'i' : '');\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/ObjectHelpers.php","ext":"php","size":7244,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse Nette\\MemberAccessException;\nuse function array_filter, array_merge, array_pop, array_unique, get_class_methods, get_parent_class, implode, is_a, levenshtein, method_exists, preg_match_all, preg_replace, strlen, ucfirst;\nuse const PREG_SET_ORDER, SORT_REGULAR;\n\n\n/**\n * Nette\\SmartObject helpers.\n * @internal\n */\nfinal class ObjectHelpers\n{\n\tuse Nette\\StaticClass;\n\n\t/**\n\t * @return never\n\t * @throws MemberAccessException\n\t */\n\tpublic static function strictGet(string $class, string $name): void\n\t{\n\t\t$rc = new \\ReflectionClass($class);\n\t\t$hint = self::getSuggestion(array_merge(\n\t\t\tarray_filter($rc->getProperties(\\ReflectionProperty::IS_PUBLIC), fn($p) => !$p->isStatic()),\n\t\t\tself::parseFullDoc($rc, '~^[ \\t*]*@property(?:-read)?[ \\t]+(?:\\S+[ \\t]+)??\\$(\\w+)~m'),\n\t\t), $name);\n\t\tthrow new MemberAccessException(\"Cannot read an undeclared property $class::\\$$name\" . ($hint ? \", did you mean \\$$hint?\" : '.'));\n\t}\n\n\n\t/**\n\t * @return never\n\t * @throws MemberAccessException\n\t */\n\tpublic static function strictSet(string $class, string $name): void\n\t{\n\t\t$rc = new \\ReflectionClass($class);\n\t\t$hint = self::getSuggestion(array_merge(\n\t\t\tarray_filter($rc->getProperties(\\ReflectionProperty::IS_PUBLIC), fn($p) => !$p->isStatic()),\n\t\t\tself::parseFullDoc($rc, '~^[ \\t*]*@property(?:-write)?[ \\t]+(?:\\S+[ \\t]+)??\\$(\\w+)~m'),\n\t\t), $name);\n\t\tthrow new MemberAccessException(\"Cannot write to an undeclared property $class::\\$$name\" . ($hint ? \", did you mean \\$$hint?\" : '.'));\n\t}\n\n\n\t/**\n\t * @return never\n\t * @throws MemberAccessException\n\t */\n\tpublic static function strictCall(string $class, string $method, array $additionalMethods = []): void\n\t{\n\t\t$trace = debug_backtrace(0, 3); // suppose this method is called from __call()\n\t\t$context = ($trace[1]['function'] ?? null) === '__call'\n\t\t\t? ($trace[2]['class'] ?? null)\n\t\t\t: null;\n\n\t\tif ($context && is_a($class, $context, true) && method_exists($context, $method)) { // called parent::$method()\n\t\t\t$class = get_parent_class($context);\n\t\t}\n\n\t\tif (method_exists($class, $method)) { // insufficient visibility\n\t\t\t$rm = new \\ReflectionMethod($class, $method);\n\t\t\t$visibility = $rm->isPrivate()\n\t\t\t\t? 'private '\n\t\t\t\t: ($rm->isProtected() ? 'protected ' : '');\n\t\t\tthrow new MemberAccessException(\"Call to {$visibility}method $class::$method() from \" . ($context ? \"scope $context.\" : 'global scope.'));\n\n\t\t} else {\n\t\t\t$hint = self::getSuggestion(array_merge(\n\t\t\t\tget_class_methods($class),\n\t\t\t\tself::parseFullDoc(new \\ReflectionClass($class), '~^[ \\t*]*@method[ \\t]+(?:static[ \\t]+)?(?:\\S+[ \\t]+)??(\\w+)\\(~m'),\n\t\t\t\t$additionalMethods,\n\t\t\t), $method);\n\t\t\tthrow new MemberAccessException(\"Call to undefined method $class::$method()\" . ($hint ? \", did you mean $hint()?\" : '.'));\n\t\t}\n\t}\n\n\n\t/**\n\t * @return never\n\t * @throws MemberAccessException\n\t */\n\tpublic static function strictStaticCall(string $class, string $method): void\n\t{\n\t\t$trace = debug_backtrace(0, 3); // suppose this method is called from __callStatic()\n\t\t$context = ($trace[1]['function'] ?? null) === '__callStatic'\n\t\t\t? ($trace[2]['class'] ?? null)\n\t\t\t: null;\n\n\t\tif ($context && is_a($class, $context, true) && method_exists($context, $method)) { // called parent::$method()\n\t\t\t$class = get_parent_class($context);\n\t\t}\n\n\t\tif (method_exists($class, $method)) { // insufficient visibility\n\t\t\t$rm = new \\ReflectionMethod($class, $method);\n\t\t\t$visibility = $rm->isPrivate()\n\t\t\t\t? 'private '\n\t\t\t\t: ($rm->isProtected() ? 'protected ' : '');\n\t\t\tthrow new MemberAccessException(\"Call to {$visibility}method $class::$method() from \" . ($context ? \"scope $context.\" : 'global scope.'));\n\n\t\t} else {\n\t\t\t$hint = self::getSuggestion(\n\t\t\t\tarray_filter((new \\ReflectionClass($class))->getMethods(\\ReflectionMethod::IS_PUBLIC), fn($m) => $m->isStatic()),\n\t\t\t\t$method,\n\t\t\t);\n\t\t\tthrow new MemberAccessException(\"Call to undefined static method $class::$method()\" . ($hint ? \", did you mean $hint()?\" : '.'));\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns array of magic properties defined by annotation @property.\n\t * @return array of [name => bit mask]\n\t * @internal\n\t */\n\tpublic static function getMagicProperties(string $class): array\n\t{\n\t\tstatic $cache;\n\t\t$props = &$cache[$class];\n\t\tif ($props !== null) {\n\t\t\treturn $props;\n\t\t}\n\n\t\t$rc = new \\ReflectionClass($class);\n\t\tpreg_match_all(\n\t\t\t'~^  [ \\t*]*  @property(|-read|-write|-deprecated)  [ \\t]+  [^\\s$]+  [ \\t]+  \\$  (\\w+)  ()~mx',\n\t\t\t(string) $rc->getDocComment(),\n\t\t\t$matches,\n\t\t\tPREG_SET_ORDER,\n\t\t);\n\n\t\t$props = [];\n\t\tforeach ($matches as [, $type, $name]) {\n\t\t\t$uname = ucfirst($name);\n\t\t\t$write = $type !== '-read'\n\t\t\t\t&& $rc->hasMethod($nm = 'set' . $uname)\n\t\t\t\t&& ($rm = $rc->getMethod($nm))->name === $nm && !$rm->isPrivate() && !$rm->isStatic();\n\t\t\t$read = $type !== '-write'\n\t\t\t\t&& ($rc->hasMethod($nm = 'get' . $uname) || $rc->hasMethod($nm = 'is' . $uname))\n\t\t\t\t&& ($rm = $rc->getMethod($nm))->name === $nm && !$rm->isPrivate() && !$rm->isStatic();\n\n\t\t\tif ($read || $write) {\n\t\t\t\t$props[$name] = $read << 0 | ($nm[0] === 'g') << 1 | $rm->returnsReference() << 2 | $write << 3 | ($type === '-deprecated') << 4;\n\t\t\t}\n\t\t}\n\n\t\tforeach ($rc->getTraits() as $trait) {\n\t\t\t$props += self::getMagicProperties($trait->name);\n\t\t}\n\n\t\tif ($parent = get_parent_class($class)) {\n\t\t\t$props += self::getMagicProperties($parent);\n\t\t}\n\n\t\treturn $props;\n\t}\n\n\n\t/**\n\t * Finds the best suggestion (for 8-bit encoding).\n\t * @param  (\\ReflectionFunctionAbstract|\\ReflectionParameter|\\ReflectionClass|\\ReflectionProperty|string)[]  $possibilities\n\t * @internal\n\t */\n\tpublic static function getSuggestion(array $possibilities, string $value): ?string\n\t{\n\t\t$norm = preg_replace($re = '#^(get|set|has|is|add)(?=[A-Z])#', '+', $value);\n\t\t$best = null;\n\t\t$min = (strlen($value) / 4 + 1) * 10 + .1;\n\t\tforeach (array_unique($possibilities, SORT_REGULAR) as $item) {\n\t\t\t$item = $item instanceof \\Reflector ? $item->name : $item;\n\t\t\tif ($item !== $value && (\n\t\t\t\t($len = levenshtein($item, $value, 10, 11, 10)) < $min\n\t\t\t\t|| ($len = levenshtein(preg_replace($re, '*', $item), $norm, 10, 11, 10)) < $min\n\t\t\t)) {\n\t\t\t\t$min = $len;\n\t\t\t\t$best = $item;\n\t\t\t}\n\t\t}\n\n\t\treturn $best;\n\t}\n\n\n\tprivate static function parseFullDoc(\\ReflectionClass $rc, string $pattern): array\n\t{\n\t\tdo {\n\t\t\t$doc[] = $rc->getDocComment();\n\t\t\t$traits = $rc->getTraits();\n\t\t\twhile ($trait = array_pop($traits)) {\n\t\t\t\t$doc[] = $trait->getDocComment();\n\t\t\t\t$traits += $trait->getTraits();\n\t\t\t}\n\t\t} while ($rc = $rc->getParentClass());\n\n\t\treturn preg_match_all($pattern, implode('', $doc), $m) ? $m[1] : [];\n\t}\n\n\n\t/**\n\t * Checks if the public non-static property exists.\n\t * Returns 'event' if the property exists and has event like name\n\t * @internal\n\t */\n\tpublic static function hasProperty(string $class, string $name): bool|string\n\t{\n\t\tstatic $cache;\n\t\t$prop = &$cache[$class][$name];\n\t\tif ($prop === null) {\n\t\t\t$prop = false;\n\t\t\ttry {\n\t\t\t\t$rp = new \\ReflectionProperty($class, $name);\n\t\t\t\tif ($rp->isPublic() && !$rp->isStatic()) {\n\t\t\t\t\t$prop = $name >= 'onA' && $name < 'on_' ? 'event' : true;\n\t\t\t\t}\n\t\t\t} catch (\\ReflectionException $e) {\n\t\t\t}\n\t\t}\n\n\t\treturn $prop;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/exceptions.php","ext":"php","size":760,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\n\n/**\n * An error occurred while working with the image.\n */\nclass ImageException extends \\Exception\n{\n}\n\n\n/**\n * The image file is invalid or in an unsupported format.\n */\nclass UnknownImageFileException extends ImageException\n{\n}\n\n\n/**\n * JSON encoding or decoding failed.\n */\nclass JsonException extends \\JsonException\n{\n}\n\n\n/**\n * Regular expression pattern or execution failed.\n */\nclass RegexpException extends \\Exception\n{\n}\n\n\n/**\n * Type validation failed. The value doesn't match the expected type constraints.\n */\nclass AssertionException extends \\Exception\n{\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Utils/ArrayList.php","ext":"php","size":2708,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\nuse function array_slice, array_splice, count, is_int;\n\n\n/**\n * Provides the base class for a generic list (items can be accessed by index).\n * @template T\n * @implements \\IteratorAggregate<int, T>\n * @implements \\ArrayAccess<int, T>\n */\nclass ArrayList implements \\ArrayAccess, \\Countable, \\IteratorAggregate\n{\n\tprivate array $list = [];\n\n\n\t/**\n\t * Transforms array to ArrayList.\n\t * @param  list<T>  $array\n\t */\n\tpublic static function from(array $array): static\n\t{\n\t\tif (!Arrays::isList($array)) {\n\t\t\tthrow new Nette\\InvalidArgumentException('Array is not valid list.');\n\t\t}\n\n\t\t$obj = new static;\n\t\t$obj->list = $array;\n\t\treturn $obj;\n\t}\n\n\n\t/**\n\t * Returns an iterator over all items.\n\t * @return \\Iterator<int, T>\n\t */\n\tpublic function &getIterator(): \\Iterator\n\t{\n\t\tforeach ($this->list as &$item) {\n\t\t\tyield $item;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns items count.\n\t */\n\tpublic function count(): int\n\t{\n\t\treturn count($this->list);\n\t}\n\n\n\t/**\n\t * Replaces or appends an item.\n\t * @param  int|null  $index\n\t * @param  T  $value\n\t * @throws Nette\\OutOfRangeException\n\t */\n\tpublic function offsetSet($index, $value): void\n\t{\n\t\tif ($index === null) {\n\t\t\t$this->list[] = $value;\n\n\t\t} elseif (!is_int($index) || $index < 0 || $index >= count($this->list)) {\n\t\t\tthrow new Nette\\OutOfRangeException('Offset invalid or out of range');\n\n\t\t} else {\n\t\t\t$this->list[$index] = $value;\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns an item.\n\t * @param  int  $index\n\t * @return T\n\t * @throws Nette\\OutOfRangeException\n\t */\n\tpublic function offsetGet($index): mixed\n\t{\n\t\tif (!is_int($index) || $index < 0 || $index >= count($this->list)) {\n\t\t\tthrow new Nette\\OutOfRangeException('Offset invalid or out of range');\n\t\t}\n\n\t\treturn $this->list[$index];\n\t}\n\n\n\t/**\n\t * Determines whether an item exists.\n\t * @param  int  $index\n\t */\n\tpublic function offsetExists($index): bool\n\t{\n\t\treturn is_int($index) && $index >= 0 && $index < count($this->list);\n\t}\n\n\n\t/**\n\t * Removes the element at the specified position in this list.\n\t * @param  int  $index\n\t * @throws Nette\\OutOfRangeException\n\t */\n\tpublic function offsetUnset($index): void\n\t{\n\t\tif (!is_int($index) || $index < 0 || $index >= count($this->list)) {\n\t\t\tthrow new Nette\\OutOfRangeException('Offset invalid or out of range');\n\t\t}\n\n\t\tarray_splice($this->list, $index, 1);\n\t}\n\n\n\t/**\n\t * Prepends an item.\n\t * @param  T  $value\n\t */\n\tpublic function prepend(mixed $value): void\n\t{\n\t\t$first = array_slice($this->list, 0, 1);\n\t\t$this->offsetSet(0, $value);\n\t\tarray_splice($this->list, 1, 0, $first);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/compatibility.php","ext":"php","size":686,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Utils;\n\nuse Nette;\n\nif (false) {\n\t/** @deprecated use Nette\\HtmlStringable */\n\tinterface IHtmlString extends Nette\\HtmlStringable\n\t{\n\t}\n} elseif (!interface_exists(IHtmlString::class)) {\n\tclass_alias(Nette\\HtmlStringable::class, IHtmlString::class);\n}\n\nnamespace Nette\\Localization;\n\nif (false) {\n\t/** @deprecated use Nette\\Localization\\Translator */\n\tinterface ITranslator extends Translator\n\t{\n\t}\n} elseif (!interface_exists(ITranslator::class)) {\n\tclass_alias(Translator::class, ITranslator::class);\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Iterators/Mapper.php","ext":"php","size":585,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Iterators;\n\n\n/**\n * @deprecated use Nette\\Utils\\Iterables::map()\n */\nclass Mapper extends \\IteratorIterator\n{\n\t/** @var callable */\n\tprivate $callback;\n\n\n\tpublic function __construct(\\Traversable $iterator, callable $callback)\n\t{\n\t\tparent::__construct($iterator);\n\t\t$this->callback = $callback;\n\t}\n\n\n\tpublic function current(): mixed\n\t{\n\t\treturn ($this->callback)(parent::current(), parent::key());\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/Iterators/CachingIterator.php","ext":"php","size":2530,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette\\Iterators;\n\nuse Nette;\n\n\n/**\n * Smarter caching iterator.\n *\n * @property-read bool $first\n * @property-read bool $last\n * @property-read bool $empty\n * @property-read bool $odd\n * @property-read bool $even\n * @property-read int $counter\n * @property-read mixed $nextKey\n * @property-read mixed $nextValue\n */\nclass CachingIterator extends \\CachingIterator implements \\Countable\n{\n\tuse Nette\\SmartObject;\n\n\tprivate int $counter = 0;\n\n\n\tpublic function __construct(iterable|\\stdClass $iterable)\n\t{\n\t\t$iterable = $iterable instanceof \\stdClass\n\t\t\t? new \\ArrayIterator($iterable)\n\t\t\t: Nette\\Utils\\Iterables::toIterator($iterable);\n\t\tparent::__construct($iterable, 0);\n\t}\n\n\n\t/**\n\t * Is the current element the first one?\n\t */\n\tpublic function isFirst(?int $gridWidth = null): bool\n\t{\n\t\treturn $this->counter === 1 || ($gridWidth && $this->counter !== 0 && (($this->counter - 1) % $gridWidth) === 0);\n\t}\n\n\n\t/**\n\t * Is the current element the last one?\n\t */\n\tpublic function isLast(?int $gridWidth = null): bool\n\t{\n\t\treturn !$this->hasNext() || ($gridWidth && ($this->counter % $gridWidth) === 0);\n\t}\n\n\n\t/**\n\t * Is the iterator empty?\n\t */\n\tpublic function isEmpty(): bool\n\t{\n\t\treturn $this->counter === 0;\n\t}\n\n\n\t/**\n\t * Is the counter odd?\n\t */\n\tpublic function isOdd(): bool\n\t{\n\t\treturn $this->counter % 2 === 1;\n\t}\n\n\n\t/**\n\t * Is the counter even?\n\t */\n\tpublic function isEven(): bool\n\t{\n\t\treturn $this->counter % 2 === 0;\n\t}\n\n\n\t/**\n\t * Returns the counter.\n\t */\n\tpublic function getCounter(): int\n\t{\n\t\treturn $this->counter;\n\t}\n\n\n\t/**\n\t * Returns the count of elements.\n\t */\n\tpublic function count(): int\n\t{\n\t\t$inner = $this->getInnerIterator();\n\t\tif ($inner instanceof \\Countable) {\n\t\t\treturn $inner->count();\n\n\t\t} else {\n\t\t\tthrow new Nette\\NotSupportedException('Iterator is not countable.');\n\t\t}\n\t}\n\n\n\t/**\n\t * Forwards to the next element.\n\t */\n\tpublic function next(): void\n\t{\n\t\tparent::next();\n\t\tif (parent::valid()) {\n\t\t\t$this->counter++;\n\t\t}\n\t}\n\n\n\t/**\n\t * Rewinds the Iterator.\n\t */\n\tpublic function rewind(): void\n\t{\n\t\tparent::rewind();\n\t\t$this->counter = parent::valid() ? 1 : 0;\n\t}\n\n\n\t/**\n\t * Returns the next key.\n\t */\n\tpublic function getNextKey(): mixed\n\t{\n\t\treturn $this->getInnerIterator()->key();\n\t}\n\n\n\t/**\n\t * Returns the next element.\n\t */\n\tpublic function getNextValue(): mixed\n\t{\n\t\treturn $this->getInnerIterator()->current();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/SmartObject.php","ext":"php","size":3574,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette;\n\nuse Nette\\Utils\\ObjectHelpers;\n\n\n/**\n * Strict class for better experience.\n * - 'did you mean' hints\n * - access to undeclared members throws exceptions\n * - support for @property annotations\n * - support for calling event handlers stored in $onEvent via onEvent()\n */\ntrait SmartObject\n{\n\t/**\n\t * @return mixed\n\t * @throws MemberAccessException\n\t */\n\tpublic function __call(string $name, array $args)\n\t{\n\t\t$class = static::class;\n\n\t\tif (ObjectHelpers::hasProperty($class, $name) === 'event') { // calling event handlers\n\t\t\t$handlers = $this->$name ?? null;\n\t\t\tif (is_iterable($handlers)) {\n\t\t\t\tforeach ($handlers as $handler) {\n\t\t\t\t\t$handler(...$args);\n\t\t\t\t}\n\t\t\t} elseif ($handlers !== null) {\n\t\t\t\tthrow new UnexpectedValueException(\"Property $class::$$name must be iterable or null, \" . get_debug_type($handlers) . ' given.');\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tObjectHelpers::strictCall($class, $name);\n\t}\n\n\n\t/**\n\t * @throws MemberAccessException\n\t */\n\tpublic static function __callStatic(string $name, array $args)\n\t{\n\t\tObjectHelpers::strictStaticCall(static::class, $name);\n\t}\n\n\n\t/**\n\t * @return mixed\n\t * @throws MemberAccessException if the property is not defined.\n\t */\n\tpublic function &__get(string $name)\n\t{\n\t\t$class = static::class;\n\n\t\tif ($prop = ObjectHelpers::getMagicProperties($class)[$name] ?? null) { // property getter\n\t\t\tif (!($prop & 0b0001)) {\n\t\t\t\tthrow new MemberAccessException(\"Cannot read a write-only property $class::\\$$name.\");\n\t\t\t}\n\n\t\t\t$m = ($prop & 0b0010 ? 'get' : 'is') . ucfirst($name);\n\t\t\tif ($prop & 0b10000) {\n\t\t\t\t$trace = debug_backtrace(0, 1)[0]; // suppose this method is called from __call()\n\t\t\t\t$loc = isset($trace['file'], $trace['line'])\n\t\t\t\t\t? \" in $trace[file] on line $trace[line]\"\n\t\t\t\t\t: '';\n\t\t\t\ttrigger_error(\"Property $class::\\$$name is deprecated, use $class::$m() method$loc.\", E_USER_DEPRECATED);\n\t\t\t}\n\n\t\t\tif ($prop & 0b0100) { // return by reference\n\t\t\t\treturn $this->$m();\n\t\t\t} else {\n\t\t\t\t$val = $this->$m();\n\t\t\t\treturn $val;\n\t\t\t}\n\t\t} else {\n\t\t\tObjectHelpers::strictGet($class, $name);\n\t\t}\n\t}\n\n\n\t/**\n\t * @throws MemberAccessException if the property is not defined or is read-only\n\t */\n\tpublic function __set(string $name, mixed $value): void\n\t{\n\t\t$class = static::class;\n\n\t\tif (ObjectHelpers::hasProperty($class, $name)) { // unsetted property\n\t\t\t$this->$name = $value;\n\n\t\t} elseif ($prop = ObjectHelpers::getMagicProperties($class)[$name] ?? null) { // property setter\n\t\t\tif (!($prop & 0b1000)) {\n\t\t\t\tthrow new MemberAccessException(\"Cannot write to a read-only property $class::\\$$name.\");\n\t\t\t}\n\n\t\t\t$m = 'set' . ucfirst($name);\n\t\t\tif ($prop & 0b10000) {\n\t\t\t\t$trace = debug_backtrace(0, 1)[0]; // suppose this method is called from __call()\n\t\t\t\t$loc = isset($trace['file'], $trace['line'])\n\t\t\t\t\t? \" in $trace[file] on line $trace[line]\"\n\t\t\t\t\t: '';\n\t\t\t\ttrigger_error(\"Property $class::\\$$name is deprecated, use $class::$m() method$loc.\", E_USER_DEPRECATED);\n\t\t\t}\n\n\t\t\t$this->$m($value);\n\n\t\t} else {\n\t\t\tObjectHelpers::strictSet($class, $name);\n\t\t}\n\t}\n\n\n\t/**\n\t * @throws MemberAccessException\n\t */\n\tpublic function __unset(string $name): void\n\t{\n\t\t$class = static::class;\n\t\tif (!ObjectHelpers::hasProperty($class, $name)) {\n\t\t\tthrow new MemberAccessException(\"Cannot unset the property $class::\\$$name.\");\n\t\t}\n\t}\n\n\n\tpublic function __isset(string $name): bool\n\t{\n\t\treturn isset(ObjectHelpers::getMagicProperties(static::class)[$name]);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/StaticClass.php","ext":"php","size":327,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette;\n\n\n/**\n * Static class.\n */\ntrait StaticClass\n{\n\t/**\n\t * Class is static and cannot be instantiated.\n\t */\n\tprivate function __construct()\n\t{\n\t}\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/nette/utils/src/exceptions.php","ext":"php","size":1733,"mtime":1756373566,"type":"text","content":"<?php\n\n/**\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n\ndeclare(strict_types=1);\n\nnamespace Nette;\n\n\n/**\n * The value is outside the allowed range.\n */\nclass ArgumentOutOfRangeException extends \\InvalidArgumentException\n{\n}\n\n\n/**\n * The object is in a state that does not allow the requested operation.\n */\nclass InvalidStateException extends \\RuntimeException\n{\n}\n\n\n/**\n * The requested feature is not implemented.\n */\nclass NotImplementedException extends \\LogicException\n{\n}\n\n\n/**\n * The requested operation is not supported.\n */\nclass NotSupportedException extends \\LogicException\n{\n}\n\n\n/**\n * The requested feature is deprecated and no longer available.\n */\nclass DeprecatedException extends NotSupportedException\n{\n}\n\n\n/**\n * Cannot access the requested class property or method.\n */\nclass MemberAccessException extends \\Error\n{\n}\n\n\n/**\n * Failed to read from or write to a file or stream.\n */\nclass IOException extends \\RuntimeException\n{\n}\n\n\n/**\n * The requested file does not exist.\n */\nclass FileNotFoundException extends IOException\n{\n}\n\n\n/**\n * The requested directory does not exist.\n */\nclass DirectoryNotFoundException extends IOException\n{\n}\n\n\n/**\n * The provided argument has invalid type or format.\n */\nclass InvalidArgumentException extends \\InvalidArgumentException\n{\n}\n\n\n/**\n * The requested array or collection index does not exist.\n */\nclass OutOfRangeException extends \\OutOfRangeException\n{\n}\n\n\n/**\n * The returned value has unexpected type or format.\n */\nclass UnexpectedValueException extends \\UnexpectedValueException\n{\n}\n\n\n/**\n * Houston, we have a problem.\n */\nclass ShouldNotHappenException extends \\LogicException\n{\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/load-v5p6.php","ext":"php","size":1148,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5\\PucFactory as MajorFactory;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\PucFactory as MinorFactory;\n\nrequire __DIR__ . '/Puc/v5p6/Autoloader.php';\nnew Autoloader();\n\nrequire __DIR__ . '/Puc/v5p6/PucFactory.php';\nrequire __DIR__ . '/Puc/v5/PucFactory.php';\n\n//Register classes defined in this version with the factory.\nforeach (\n\tarray(\n\t\t'Plugin\\\\UpdateChecker' => Plugin\\UpdateChecker::class,\n\t\t'Theme\\\\UpdateChecker'  => Theme\\UpdateChecker::class,\n\n\t\t'Vcs\\\\PluginUpdateChecker' => Vcs\\PluginUpdateChecker::class,\n\t\t'Vcs\\\\ThemeUpdateChecker'  => Vcs\\ThemeUpdateChecker::class,\n\n\t\t'GitHubApi'    => Vcs\\GitHubApi::class,\n\t\t'BitBucketApi' => Vcs\\BitBucketApi::class,\n\t\t'GitLabApi'    => Vcs\\GitLabApi::class,\n\t)\n\tas $pucGeneralClass => $pucVersionedClass\n) {\n\tMajorFactory::addVersion($pucGeneralClass, $pucVersionedClass, '5.6');\n\t//Also add it to the minor-version factory in case the major-version factory\n\t//was already defined by another, older version of the update checker.\n\tMinorFactory::addVersion($pucGeneralClass, $pucVersionedClass, '5.6');\n}\n\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/license.txt","ext":"txt","size":1056,"mtime":1756373566,"type":"text","content":"Copyright (c) 2023 Jānis Elsts\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/js/debug-bar.js","ext":"js","size":1740,"mtime":1756373566,"type":"text","content":"jQuery(function($) {\n\n\tfunction runAjaxAction(button, action) {\n\t\tbutton = $(button);\n\t\tvar panel = button.closest('.puc-debug-bar-panel-v5');\n\t\tvar responseBox = button.closest('td').find('.puc-ajax-response');\n\n\t\tresponseBox.text('Processing...').show();\n\t\t$.post(\n\t\t\tajaxurl,\n\t\t\t{\n\t\t\t\taction  : action,\n\t\t\t\tuid     : panel.data('uid'),\n\t\t\t\t_wpnonce: panel.data('nonce')\n\t\t\t},\n\t\t\tfunction(data) {\n\t\t\t\t//The response contains HTML that should already be escaped in server-side code.\n\t\t\t\t//phpcs:ignore WordPressVIPMinimum.JS.HTMLExecutingFunctions.html\n\t\t\t\tresponseBox.html(data);\n\t\t\t},\n\t\t\t'html'\n\t\t);\n\t}\n\n\t$('.puc-debug-bar-panel-v5 input[name=\"puc-check-now-button\"]').on('click', function() {\n\t\trunAjaxAction(this, 'puc_v5_debug_check_now');\n\t\treturn false;\n\t});\n\n\t$('.puc-debug-bar-panel-v5 input[name=\"puc-request-info-button\"]').on('click', function() {\n\t\trunAjaxAction(this, 'puc_v5_debug_request_info');\n\t\treturn false;\n\t});\n\n\n\t// Debug Bar uses the panel class name as part of its link and container IDs. This means we can\n\t// end up with multiple identical IDs if more than one plugin uses the update checker library.\n\t// Fix it by replacing the class name with the plugin slug.\n\tvar panels = $('#debug-menu-targets').find('.puc-debug-bar-panel-v5');\n\tpanels.each(function() {\n\t\tvar panel = $(this);\n\t\tvar uid = panel.data('uid');\n\t\tvar target = panel.closest('.debug-menu-target');\n\n\t\t//Change the panel wrapper ID.\n\t\ttarget.attr('id', 'debug-menu-target-puc-' + uid);\n\n\t\t//Change the menu link ID as well and point it at the new target ID.\n\t\t$('#debug-bar-menu').find('.puc-debug-menu-link-' + uid)\n\t\t\t.closest('.debug-menu-link')\n\t\t\t.attr('id', 'debug-menu-link-puc-' + uid)\n\t\t\t.attr('href', '#' + target.attr('id'));\n\t});\n});"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/plugin-update-checker.php","ext":"php","size":218,"mtime":1756373566,"type":"text","content":"<?php\n/**\n * Plugin Update Checker Library 5.6\n * http://w-shadow.com/\n *\n * Copyright 2024 Janis Elsts\n * Released under the MIT license. See license.txt for details.\n */\n\nrequire dirname(__FILE__) . '/load-v5p6.php';"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/css/puc-debug-bar.css","ext":"css","size":1264,"mtime":1756373566,"type":"text","content":".puc-debug-bar-panel-v5 pre {\n\tmargin-top: 0;\n}\n\n/* Style the debug data table to match \"widefat\" table style used by WordPress. */\ntable.puc-debug-data {\n    width: 100%;\n    clear: both;\n    margin: 0;\n\n    border-spacing: 0;\n    background-color: #f9f9f9;\n\n    border-radius: 3px;\n    border: 1px solid #dfdfdf;\n    border-collapse: separate;\n}\n\ntable.puc-debug-data * {\n    word-wrap: break-word;\n}\n\ntable.puc-debug-data th {\n\twidth: 11em;\n    padding: 7px 7px 8px;\n    text-align: left;\n\n    font-family: \"Georgia\", \"Times New Roman\", \"Bitstream Charter\", \"Times\", serif;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.3em;\n    text-shadow: rgba(255, 255, 255, 0.804) 0 1px 0;\n}\n\ntable.puc-debug-data td, table.puc-debug-data th {\n    border-width: 1px 0;\n    border-style: solid;\n\n    border-top-color: #fff;\n    border-bottom-color: #dfdfdf;\n\n    text-transform: none;\n}\n\ntable.puc-debug-data td {\n    color: #555;\n    font-size: 12px;\n    padding: 4px 7px 2px;\n    vertical-align: top;\n}\n\n.puc-ajax-response {\n\tborder: 1px solid #dfdfdf;\n\tborder-radius: 3px;\n\tpadding: 0.5em;\n\tmargin: 5px 0;\n\tbackground-color: white;\n}\n\n.puc-ajax-nonce {\n\tdisplay: none;\n}\n\n.puc-ajax-response dt {\n\tmargin: 0;\n}\n\n.puc-ajax-response dd {\n\tmargin: 0 0 1em;\n}\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/UpdateChecker.php","ext":"php","size":36305,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nuse stdClass;\nuse WP_Error;\n\nif ( !class_exists(UpdateChecker::class, false) ):\n\n\tabstract class UpdateChecker {\n\t\tprotected $filterSuffix = '';\n\t\tprotected $updateTransient = '';\n\n\t\t/**\n\t\t * @var string This can be \"plugin\" or \"theme\".\n\t\t */\n\t\tprotected $componentType = '';\n\t\t/**\n\t\t * @var string Currently the same as $componentType, but this is an implementation detail that\n\t\t *             depends on how WP works internally, and could therefore change.\n\t\t */\n\t\tprotected $translationType = '';\n\n\t\t/**\n\t\t * Set to TRUE to enable error reporting. Errors are raised using trigger_error()\n\t\t * and should be logged to the standard PHP error log.\n\t\t * @var bool\n\t\t */\n\t\tpublic $debugMode = null;\n\n\t\t/**\n\t\t * @var string Where to store the update info.\n\t\t */\n\t\tpublic $optionName = '';\n\n\t\t/**\n\t\t * @var string The URL of the metadata file.\n\t\t */\n\t\tpublic $metadataUrl = '';\n\n\t\t/**\n\t\t * @var string Plugin or theme directory name.\n\t\t */\n\t\tpublic $directoryName = '';\n\n\t\t/**\n\t\t * @var string The slug that will be used in update checker hooks and remote API requests.\n\t\t * Usually matches the directory name unless the plugin/theme directory has been renamed.\n\t\t */\n\t\tpublic $slug = '';\n\n\t\t/**\n\t\t * @var InstalledPackage\n\t\t */\n\t\tprotected $package;\n\n\t\t/**\n\t\t * @var Scheduler\n\t\t */\n\t\tpublic $scheduler;\n\n\t\t/**\n\t\t * @var UpgraderStatus\n\t\t */\n\t\tprotected $upgraderStatus;\n\n\t\t/**\n\t\t * @var StateStore\n\t\t */\n\t\tprotected $updateState;\n\n\t\t/**\n\t\t * @var array List of API errors triggered during the last checkForUpdates() call.\n\t\t */\n\t\tprotected $lastRequestApiErrors = array();\n\n\t\t/**\n\t\t * @var string|mixed The default is 0 because parse_url() can return NULL or FALSE.\n\t\t */\n\t\tprotected $cachedMetadataHost = 0;\n\n\t\t/**\n\t\t * @var DebugBar\\Extension|null\n\t\t */\n\t\tprotected $debugBarExtension = null;\n\n\t\t/**\n\t\t * @var WpCliCheckTrigger|null\n\t\t */\n\t\tprotected $wpCliCheckTrigger = null;\n\n\t\tpublic function __construct($metadataUrl, $directoryName, $slug = null, $checkPeriod = 12, $optionName = '') {\n\t\t\t$this->debugMode = (bool)(constant('WP_DEBUG'));\n\t\t\t$this->metadataUrl = $metadataUrl;\n\t\t\t$this->directoryName = $directoryName;\n\t\t\t$this->slug = !empty($slug) ? $slug : $this->directoryName;\n\n\t\t\t$this->optionName = $optionName;\n\t\t\tif ( empty($this->optionName) ) {\n\t\t\t\t//BC: Initially the library only supported plugin updates and didn't use type prefixes\n\t\t\t\t//in the option name. Lets use the same prefix-less name when possible.\n\t\t\t\tif ( $this->filterSuffix === '' ) {\n\t\t\t\t\t$this->optionName = 'external_updates-' . $this->slug;\n\t\t\t\t} else {\n\t\t\t\t\t$this->optionName = $this->getUniqueName('external_updates');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( empty($this->translationType) ) {\n\t\t\t\t$this->translationType = $this->componentType;\n\t\t\t}\n\n\t\t\t$this->package = $this->createInstalledPackage();\n\t\t\t$this->scheduler = $this->createScheduler($checkPeriod);\n\t\t\t$this->upgraderStatus = new UpgraderStatus();\n\t\t\t$this->updateState = new StateStore($this->optionName);\n\n\t\t\tif ( did_action('init') ) {\n\t\t\t\t$this->loadTextDomain();\n\t\t\t} else {\n\t\t\t\tadd_action('init', array($this, 'loadTextDomain'));\n\t\t\t}\n\n\t\t\t$this->installHooks();\n\n\t\t\tif ( ($this->wpCliCheckTrigger === null) && defined('WP_CLI') ) {\n\t\t\t\t$this->wpCliCheckTrigger = new WpCliCheckTrigger($this->componentType, $this->scheduler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @internal\n\t\t */\n\t\tpublic function loadTextDomain() {\n\t\t\t//We're not using load_plugin_textdomain() or its siblings because figuring out where\n\t\t\t//the library is located (plugin, mu-plugin, theme, custom wp-content paths) is messy.\n\t\t\t$domain = 'plugin-update-checker';\n\t\t\t$locale = apply_filters(\n\t\t\t\t'plugin_locale',\n\t\t\t\t(is_admin() && function_exists('get_user_locale')) ? get_user_locale() : get_locale(),\n\t\t\t\t$domain\n\t\t\t);\n\n\t\t\t$moFile = $domain . '-' . $locale . '.mo';\n\t\t\t$path = realpath(dirname(__FILE__) . '/../../languages');\n\n\t\t\tif ($path && file_exists($path)) {\n\t\t\t\tload_textdomain($domain, $path . '/' . $moFile);\n\t\t\t}\n\t\t}\n\n\t\tprotected function installHooks() {\n\t\t\t//Insert our update info into the update array maintained by WP.\n\t\t\tadd_filter('site_transient_' . $this->updateTransient, array($this,'injectUpdate'));\n\n\t\t\t//Insert translation updates into the update list.\n\t\t\tadd_filter('site_transient_' . $this->updateTransient, array($this, 'injectTranslationUpdates'));\n\n\t\t\t//Clear translation updates when WP clears the update cache.\n\t\t\t//This needs to be done directly because the library doesn't actually remove obsolete plugin updates,\n\t\t\t//it just hides them (see getUpdate()). We can't do that with translations - too much disk I/O.\n\t\t\tadd_action(\n\t\t\t\t'delete_site_transient_' . $this->updateTransient,\n\t\t\t\tarray($this, 'clearCachedTranslationUpdates')\n\t\t\t);\n\n\t\t\t//Rename the update directory to be the same as the existing directory.\n\t\t\tif ( $this->directoryName !== '.' ) {\n\t\t\t\tadd_filter('upgrader_source_selection', array($this, 'fixDirectoryName'), 10, 3);\n\t\t\t}\n\n\t\t\t//Allow HTTP requests to the metadata URL even if it's on a local host.\n\t\t\tadd_filter('http_request_host_is_external', array($this, 'allowMetadataHost'), 10, 2);\n\n\t\t\t//Potentially exclude information about this entity from core update check requests to api.wordpress.org.\n\t\t\t//phpcs:ignore WordPressVIPMinimum.Hooks.RestrictedHooks.http_request_args -- Doesn't modify timeouts.\n\t\t\tadd_filter('http_request_args', array($this, 'excludeEntityFromWordPressAPI'), 10, 2);\n\n\t\t\t//DebugBar integration.\n\t\t\tif ( did_action('plugins_loaded') ) {\n\t\t\t\t$this->maybeInitDebugBar();\n\t\t\t} else {\n\t\t\t\tadd_action('plugins_loaded', array($this, 'maybeInitDebugBar'));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Remove hooks that were added by this update checker instance.\n\t\t */\n\t\tpublic function removeHooks() {\n\t\t\tremove_filter('site_transient_' . $this->updateTransient, array($this,'injectUpdate'));\n\t\t\tremove_filter('site_transient_' . $this->updateTransient, array($this, 'injectTranslationUpdates'));\n\t\t\tremove_action(\n\t\t\t\t'delete_site_transient_' . $this->updateTransient,\n\t\t\t\tarray($this, 'clearCachedTranslationUpdates')\n\t\t\t);\n\n\t\t\tremove_filter('upgrader_source_selection', array($this, 'fixDirectoryName'), 10);\n\t\t\tremove_filter('http_request_host_is_external', array($this, 'allowMetadataHost'), 10);\n\t\t\tremove_filter('http_request_args', array($this, 'excludeEntityFromWordPressAPI'));\n\t\t\tremove_action('plugins_loaded', array($this, 'maybeInitDebugBar'));\n\n\t\t\tremove_action('init', array($this, 'loadTextDomain'));\n\n\t\t\tif ( $this->scheduler ) {\n\t\t\t\t$this->scheduler->removeHooks();\n\t\t\t}\n\n\t\t\tif ( $this->debugBarExtension ) {\n\t\t\t\t$this->debugBarExtension->removeHooks();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Check if the current user has the required permissions to install updates.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tabstract public function userCanInstallUpdates();\n\n\t\t/**\n\t\t * Explicitly allow HTTP requests to the metadata URL.\n\t\t *\n\t\t * WordPress has a security feature where the HTTP API will reject all requests that are sent to\n\t\t * another site hosted on the same server as the current site (IP match), a local host, or a local\n\t\t * IP, unless the host exactly matches the current site.\n\t\t *\n\t\t * This feature is opt-in (at least in WP 4.4). Apparently some people enable it.\n\t\t *\n\t\t * That can be a problem when you're developing your plugin and you decide to host the update information\n\t\t * on the same server as your test site. Update requests will mysteriously fail.\n\t\t *\n\t\t * We fix that by adding an exception for the metadata host.\n\t\t *\n\t\t * @param bool $allow\n\t\t * @param string $host\n\t\t * @return bool\n\t\t */\n\t\tpublic function allowMetadataHost($allow, $host) {\n\t\t\tif ( $this->cachedMetadataHost === 0 ) {\n\t\t\t\t$this->cachedMetadataHost = wp_parse_url($this->metadataUrl, PHP_URL_HOST);\n\t\t\t}\n\n\t\t\tif ( is_string($this->cachedMetadataHost) && (strtolower($host) === strtolower($this->cachedMetadataHost)) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn $allow;\n\t\t}\n\n\t\t/**\n\t\t * Create a package instance that represents this plugin or theme.\n\t\t *\n\t\t * @return InstalledPackage\n\t\t */\n\t\tabstract protected function createInstalledPackage();\n\n\t\t/**\n\t\t * @return InstalledPackage\n\t\t */\n\t\tpublic function getInstalledPackage() {\n\t\t\treturn $this->package;\n\t\t}\n\n\t\t/**\n\t\t * Create an instance of the scheduler.\n\t\t *\n\t\t * This is implemented as a method to make it possible for plugins to subclass the update checker\n\t\t * and substitute their own scheduler.\n\t\t *\n\t\t * @param int $checkPeriod\n\t\t * @return Scheduler\n\t\t */\n\t\tabstract protected function createScheduler($checkPeriod);\n\n\t\t/**\n\t\t * Remove information about this plugin or theme from the requests that WordPress core sends\n\t\t * to api.wordpress.org when checking for updates.\n\t\t *\n\t\t * @param array $args\n\t\t * @param string $url\n\t\t * @return array\n\t\t */\n\t\tpublic function excludeEntityFromWordPressAPI($args, $url) {\n\t\t\t//Is this an api.wordpress.org update check request?\n\t\t\t$parsedUrl = wp_parse_url($url);\n\t\t\tif ( !isset($parsedUrl['host']) || (strtolower($parsedUrl['host']) !== 'api.wordpress.org') ) {\n\t\t\t\treturn $args;\n\t\t\t}\n\n\t\t\t$typePluralised = $this->componentType . 's';\n\t\t\t$expectedPathPrefix = '/' . $typePluralised . '/update-check/1.';  //e.g. \"/plugins/update-check/1.1/\"\n\t\t\tif ( !isset($parsedUrl['path']) || !Utils::startsWith($parsedUrl['path'], $expectedPathPrefix) ) {\n\t\t\t\treturn $args;\n\t\t\t}\n\n\t\t\t//Plugins and themes can disable this feature by using the filter below.\n\t\t\tif ( !apply_filters(\n\t\t\t\t$this->getUniqueName('remove_from_default_update_checks'),\n\t\t\t\ttrue, $this, $args, $url\n\t\t\t) ) {\n\t\t\t\treturn $args;\n\t\t\t}\n\n\t\t\tif ( empty($args['body'][$typePluralised]) ) {\n\t\t\t\treturn $args;\n\t\t\t}\n\n\t\t\t$reportingItems = json_decode($args['body'][$typePluralised], true);\n\t\t\tif ( $reportingItems === null ) {\n\t\t\t\treturn $args;\n\t\t\t}\n\n\t\t\t//The list of installed items uses different key formats for plugins and themes.\n\t\t\t//Luckily, we can reuse the getUpdateListKey() method here.\n\t\t\t$updateListKey = $this->getUpdateListKey();\n\t\t\tif ( isset($reportingItems[$typePluralised][$updateListKey]) ) {\n\t\t\t\tunset($reportingItems[$typePluralised][$updateListKey]);\n\t\t\t}\n\n\t\t\tif ( !empty($reportingItems['active']) ) {\n\t\t\t\tif ( is_array($reportingItems['active']) ) {\n\t\t\t\t\tforeach ($reportingItems['active'] as $index => $relativePath) {\n\t\t\t\t\t\tif ( $relativePath === $updateListKey ) {\n\t\t\t\t\t\t\tunset($reportingItems['active'][$index]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//Re-index the array.\n\t\t\t\t\t$reportingItems['active'] = array_values($reportingItems['active']);\n\t\t\t\t} else if ( $reportingItems['active'] === $updateListKey ) {\n\t\t\t\t\t//For themes, the \"active\" field is a string that contains the theme's directory name.\n\t\t\t\t\t//Pretend that the default theme is active so that we don't reveal the actual theme.\n\t\t\t\t\tif ( defined('WP_DEFAULT_THEME') ) {\n\t\t\t\t\t\t$reportingItems['active'] = WP_DEFAULT_THEME;\n\t\t\t\t\t}\n\n\t\t\t\t\t//Unfortunately, it doesn't seem to be documented if we can safely remove the \"active\"\n\t\t\t\t\t//key. So when we don't know the default theme, we'll just leave it as is.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$args['body'][$typePluralised] = wp_json_encode($reportingItems);\n\t\t\treturn $args;\n\t\t}\n\n\t\t/**\n\t\t * Check for updates. The results are stored in the DB option specified in $optionName.\n\t\t *\n\t\t * @return Update|null\n\t\t */\n\t\tpublic function checkForUpdates() {\n\t\t\t$installedVersion = $this->getInstalledVersion();\n\t\t\t//Fail silently if we can't find the plugin/theme or read its header.\n\t\t\tif ( $installedVersion === null ) {\n\t\t\t\t$this->triggerError(\n\t\t\t\t\tsprintf('Skipping update check for %s - installed version unknown.', $this->slug),\n\t\t\t\t\tE_USER_WARNING\n\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//Start collecting API errors.\n\t\t\t$this->lastRequestApiErrors = array();\n\t\t\tadd_action('puc_api_error', array($this, 'collectApiErrors'), 10, 4);\n\n\t\t\t$state = $this->updateState;\n\t\t\t$state->setLastCheckToNow()\n\t\t\t\t->setCheckedVersion($installedVersion)\n\t\t\t\t->save(); //Save before checking in case something goes wrong\n\n\t\t\t$state->setUpdate($this->requestUpdate());\n\t\t\t$state->save();\n\n\t\t\t//Stop collecting API errors.\n\t\t\tremove_action('puc_api_error', array($this, 'collectApiErrors'), 10);\n\n\t\t\treturn $this->getUpdate();\n\t\t}\n\n\t\t/**\n\t\t * Load the update checker state from the DB.\n\t\t *\n\t\t * @return StateStore\n\t\t */\n\t\tpublic function getUpdateState() {\n\t\t\treturn $this->updateState->lazyLoad();\n\t\t}\n\n\t\t/**\n\t\t * Reset update checker state - i.e. last check time, cached update data and so on.\n\t\t *\n\t\t * Call this when your plugin is being uninstalled, or if you want to\n\t\t * clear the update cache.\n\t\t */\n\t\tpublic function resetUpdateState() {\n\t\t\t$this->updateState->delete();\n\t\t}\n\n\t\t/**\n\t\t * Get the details of the currently available update, if any.\n\t\t *\n\t\t * If no updates are available, or if the last known update version is below or equal\n\t\t * to the currently installed version, this method will return NULL.\n\t\t *\n\t\t * Uses cached update data. To retrieve update information straight from\n\t\t * the metadata URL, call requestUpdate() instead.\n\t\t *\n\t\t * @return Update|null\n\t\t */\n\t\tpublic function getUpdate() {\n\t\t\t$update = $this->updateState->getUpdate();\n\n\t\t\t//Is there an update available?\n\t\t\tif ( isset($update) ) {\n\t\t\t\t//Check if the update is actually newer than the currently installed version.\n\t\t\t\t$installedVersion = $this->getInstalledVersion();\n\t\t\t\tif ( ($installedVersion !== null) && version_compare($update->version, $installedVersion, '>') ){\n\t\t\t\t\treturn $update;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Retrieve the latest update (if any) from the configured API endpoint.\n\t\t *\n\t\t * Subclasses should run the update through filterUpdateResult before returning it.\n\t\t *\n\t\t * @return Update An instance of Update, or NULL when no updates are available.\n\t\t */\n\t\tabstract public function requestUpdate();\n\n\t\t/**\n\t\t * Filter the result of a requestUpdate() call.\n\t\t *\n\t\t * @template T of Update\n\t\t * @param T|null $update\n\t\t * @param array|WP_Error|null $httpResult The value returned by wp_remote_get(), if any.\n\t\t * @return T\n\t\t */\n\t\tprotected function filterUpdateResult($update, $httpResult = null) {\n\t\t\t//Let plugins/themes modify the update.\n\t\t\t$update = apply_filters($this->getUniqueName('request_update_result'), $update, $httpResult);\n\n\t\t\t$this->fixSupportedWordpressVersion($update);\n\n\t\t\tif ( isset($update, $update->translations) ) {\n\t\t\t\t//Keep only those translation updates that apply to this site.\n\t\t\t\t$update->translations = $this->filterApplicableTranslations($update->translations);\n\t\t\t}\n\n\t\t\treturn $update;\n\t\t}\n\n\t\t/**\n\t\t * The \"Tested up to\" field in the plugin metadata is supposed to be in the form of \"major.minor\",\n\t\t * while WordPress core's list_plugin_updates() expects the $update->tested field to be an exact\n\t\t * version, e.g. \"major.minor.patch\", to say it's compatible. In other case it shows\n\t\t * \"Compatibility: Unknown\".\n\t\t * The function mimics how wordpress.org API crafts the \"tested\" field out of \"Tested up to\".\n\t\t *\n\t\t * @param Metadata|null $update\n\t\t */\n\t\tprotected function fixSupportedWordpressVersion($update = null) {\n\t\t\tif ( !isset($update->tested) || !preg_match('/^\\d++\\.\\d++$/', $update->tested) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$actualWpVersions = array();\n\n\t\t\t$wpVersion = $GLOBALS['wp_version'];\n\n\t\t\tif ( function_exists('get_core_updates') ) {\n\t\t\t\t$coreUpdates = get_core_updates();\n\t\t\t\tif ( is_array($coreUpdates) ) {\n\t\t\t\t\tforeach ($coreUpdates as $coreUpdate) {\n\t\t\t\t\t\tif ( isset($coreUpdate->current) ) {\n\t\t\t\t\t\t\t$actualWpVersions[] = $coreUpdate->current;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$actualWpVersions[] = $wpVersion;\n\n\t\t\t$actualWpPatchNumber = null;\n\t\t\tforeach ($actualWpVersions as $version) {\n\t\t\t\tif ( preg_match('/^(?P<majorMinor>\\d++\\.\\d++)(?:\\.(?P<patch>\\d++))?/', $version, $versionParts) ) {\n\t\t\t\t\tif ( $versionParts['majorMinor'] === $update->tested ) {\n\t\t\t\t\t\t$patch = isset($versionParts['patch']) ? intval($versionParts['patch']) : 0;\n\t\t\t\t\t\tif ( $actualWpPatchNumber === null ) {\n\t\t\t\t\t\t\t$actualWpPatchNumber = $patch;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$actualWpPatchNumber = max($actualWpPatchNumber, $patch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( $actualWpPatchNumber === null ) {\n\t\t\t\t$actualWpPatchNumber = 999;\n\t\t\t}\n\n\t\t\tif ( $actualWpPatchNumber > 0 ) {\n\t\t\t\t$update->tested .= '.' . $actualWpPatchNumber;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Get the currently installed version of the plugin or theme.\n\t\t *\n\t\t * @return string|null Version number.\n\t\t */\n\t\tpublic function getInstalledVersion() {\n\t\t\treturn $this->package->getInstalledVersion();\n\t\t}\n\n\t\t/**\n\t\t * Get the full path of the plugin or theme directory.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tpublic function getAbsoluteDirectoryPath() {\n\t\t\treturn $this->package->getAbsoluteDirectoryPath();\n\t\t}\n\n\t\t/**\n\t\t * Trigger a PHP error, but only when $debugMode is enabled.\n\t\t *\n\t\t * @param string $message\n\t\t * @param int $errorType\n\t\t */\n\t\tpublic function triggerError($message, $errorType) {\n\t\t\tif ( $this->isDebugModeEnabled() ) {\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error -- Only happens in debug mode.\n\t\t\t\ttrigger_error(esc_html($message), $errorType);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @return bool\n\t\t */\n\t\tprotected function isDebugModeEnabled() {\n\t\t\tif ( $this->debugMode === null ) {\n\t\t\t\t$this->debugMode = (bool)(constant('WP_DEBUG'));\n\t\t\t}\n\t\t\treturn $this->debugMode;\n\t\t}\n\n\t\t/**\n\t\t * Get the full name of an update checker filter, action or DB entry.\n\t\t *\n\t\t * This method adds the \"puc_\" prefix and the \"-$slug\" suffix to the filter name.\n\t\t * For example, \"pre_inject_update\" becomes \"puc_pre_inject_update-plugin-slug\".\n\t\t *\n\t\t * @param string $baseTag\n\t\t * @return string\n\t\t */\n\t\tpublic function getUniqueName($baseTag) {\n\t\t\t$name = 'puc_' . $baseTag;\n\t\t\tif ( $this->filterSuffix !== '' ) {\n\t\t\t\t$name .= '_' . $this->filterSuffix;\n\t\t\t}\n\t\t\treturn $name . '-' . $this->slug;\n\t\t}\n\n\t\t/**\n\t\t * Store API errors that are generated when checking for updates.\n\t\t *\n\t\t * @internal\n\t\t * @param \\WP_Error $error\n\t\t * @param array|null $httpResponse\n\t\t * @param string|null $url\n\t\t * @param string|null $slug\n\t\t */\n\t\tpublic function collectApiErrors($error, $httpResponse = null, $url = null, $slug = null) {\n\t\t\tif ( isset($slug) && ($slug !== $this->slug) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$this->lastRequestApiErrors[] = array(\n\t\t\t\t'error'        => $error,\n\t\t\t\t'httpResponse' => $httpResponse,\n\t\t\t\t'url'          => $url,\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * @return array\n\t\t */\n\t\tpublic function getLastRequestApiErrors() {\n\t\t\treturn $this->lastRequestApiErrors;\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * PUC filters and filter utilities\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Register a callback for one of the update checker filters.\n\t\t *\n\t\t * Identical to add_filter(), except it automatically adds the \"puc_\" prefix\n\t\t * and the \"-$slug\" suffix to the filter name. For example, \"request_info_result\"\n\t\t * becomes \"puc_request_info_result-your_plugin_slug\".\n\t\t *\n\t\t * @param string $tag\n\t\t * @param callable $callback\n\t\t * @param int $priority\n\t\t * @param int $acceptedArgs\n\t\t */\n\t\tpublic function addFilter($tag, $callback, $priority = 10, $acceptedArgs = 1) {\n\t\t\tadd_filter($this->getUniqueName($tag), $callback, $priority, $acceptedArgs);\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * Inject updates\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Insert the latest update (if any) into the update list maintained by WP.\n\t\t *\n\t\t * @param \\stdClass $updates Update list.\n\t\t * @return \\stdClass Modified update list.\n\t\t */\n\t\tpublic function injectUpdate($updates) {\n\t\t\t//Is there an update to insert?\n\t\t\t$update = $this->getUpdate();\n\n\t\t\tif ( !$this->shouldShowUpdates() ) {\n\t\t\t\t$update = null;\n\t\t\t}\n\n\t\t\tif ( !empty($update) ) {\n\t\t\t\t//Let plugins filter the update info before it's passed on to WordPress.\n\t\t\t\t$update = apply_filters($this->getUniqueName('pre_inject_update'), $update);\n\t\t\t\t$updates = $this->addUpdateToList($updates, $update->toWpFormat());\n\t\t\t} else {\n\t\t\t\t//Clean up any stale update info.\n\t\t\t\t$updates = $this->removeUpdateFromList($updates);\n\t\t\t\t//Add a placeholder item to the \"no_update\" list to enable auto-update support.\n\t\t\t\t//If we don't do this, the option to enable automatic updates will only show up\n\t\t\t\t//when an update is available.\n\t\t\t\t$updates = $this->addNoUpdateItem($updates);\n\t\t\t}\n\n\t\t\treturn $updates;\n\t\t}\n\n\t\t/**\n\t\t * @param \\stdClass|null $updates\n\t\t * @param \\stdClass|array $updateToAdd\n\t\t * @return \\stdClass\n\t\t */\n\t\tprotected function addUpdateToList($updates, $updateToAdd) {\n\t\t\tif ( !is_object($updates) ) {\n\t\t\t\t$updates = new stdClass();\n\t\t\t\t$updates->response = array();\n\t\t\t}\n\n\t\t\t$updates->response[$this->getUpdateListKey()] = $updateToAdd;\n\t\t\treturn $updates;\n\t\t}\n\n\t\t/**\n\t\t * @param \\stdClass|null $updates\n\t\t * @return \\stdClass|null\n\t\t */\n\t\tprotected function removeUpdateFromList($updates) {\n\t\t\tif ( isset($updates, $updates->response) ) {\n\t\t\t\tunset($updates->response[$this->getUpdateListKey()]);\n\t\t\t}\n\t\t\treturn $updates;\n\t\t}\n\n\t\t/**\n\t\t * See this post for more information:\n\t\t * @link https://make.wordpress.org/core/2020/07/30/recommended-usage-of-the-updates-api-to-support-the-auto-updates-ui-for-plugins-and-themes-in-wordpress-5-5/\n\t\t *\n\t\t * @param \\stdClass|null $updates\n\t\t * @return \\stdClass\n\t\t */\n\t\tprotected function addNoUpdateItem($updates) {\n\t\t\tif ( !is_object($updates) ) {\n\t\t\t\t$updates = new stdClass();\n\t\t\t\t$updates->response = array();\n\t\t\t\t$updates->no_update = array();\n\t\t\t} else if ( !isset($updates->no_update) ) {\n\t\t\t\t$updates->no_update = array();\n\t\t\t}\n\n\t\t\t$updates->no_update[$this->getUpdateListKey()] = (object) $this->getNoUpdateItemFields();\n\n\t\t\treturn $updates;\n\t\t}\n\n\t\t/**\n\t\t * Subclasses should override this method to add fields that are specific to plugins or themes.\n\t\t * @return array\n\t\t */\n\t\tprotected function getNoUpdateItemFields() {\n\t\t\treturn array(\n\t\t\t\t'new_version'   => $this->getInstalledVersion(),\n\t\t\t\t'url'           => '',\n\t\t\t\t'package'       => '',\n\t\t\t\t'requires_php'  => '',\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Get the key that will be used when adding updates to the update list that's maintained\n\t\t * by the WordPress core. The list is always an associative array, but the key is different\n\t\t * for plugins and themes.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tabstract protected function getUpdateListKey();\n\n\t\t/**\n\t\t * Should we show available updates?\n\t\t *\n\t\t * Usually the answer is \"yes\", but there are exceptions. For example, WordPress doesn't\n\t\t * support automatic updates installation for mu-plugins, so PUC usually won't show update\n\t\t * notifications in that case. See the plugin-specific subclass for details.\n\t\t *\n\t\t * Note: This method only applies to updates that are displayed (or not) in the WordPress\n\t\t * admin. It doesn't affect APIs like requestUpdate and getUpdate.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tprotected function shouldShowUpdates() {\n\t\t\treturn true;\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * JSON-based update API\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Retrieve plugin or theme metadata from the JSON document at $this->metadataUrl.\n\t\t *\n\t\t * @param class-string<Update> $metaClass Parse the JSON as an instance of this class. It must have a static fromJson method.\n\t\t * @param string $filterRoot\n\t\t * @param array $queryArgs Additional query arguments.\n\t\t * @return array<Metadata|null, array|WP_Error> A metadata instance and the value returned by wp_remote_get().\n\t\t */\n\t\tprotected function requestMetadata($metaClass, $filterRoot, $queryArgs = array()) {\n\t\t\t//Query args to append to the URL. Plugins can add their own by using a filter callback (see addQueryArgFilter()).\n\t\t\t$queryArgs = array_merge(\n\t\t\t\tarray(\n\t\t\t\t\t'installed_version' => strval($this->getInstalledVersion()),\n\t\t\t\t\t'php' => phpversion(),\n\t\t\t\t\t'locale' => get_locale(),\n\t\t\t\t),\n\t\t\t\t$queryArgs\n\t\t\t);\n\t\t\t$queryArgs = apply_filters($this->getUniqueName($filterRoot . '_query_args'), $queryArgs);\n\n\t\t\t//Various options for the wp_remote_get() call. Plugins can filter these, too.\n\t\t\t$options = array(\n\t\t\t\t'timeout' => wp_doing_cron() ? 10 : 3,\n\t\t\t\t'headers' => array(\n\t\t\t\t\t'Accept' => 'application/json',\n\t\t\t\t),\n\t\t\t);\n\t\t\t$options = apply_filters($this->getUniqueName($filterRoot . '_options'), $options);\n\n\t\t\t//The metadata file should be at 'http://your-api.com/url/here/$slug/info.json'\n\t\t\t$url = $this->metadataUrl;\n\t\t\tif ( !empty($queryArgs) ){\n\t\t\t\t$url = add_query_arg($queryArgs, $url);\n\t\t\t}\n\n\t\t\t$result = wp_remote_get($url, $options);\n\n\t\t\t$result = apply_filters($this->getUniqueName('request_metadata_http_result'), $result, $url, $options);\n\n\t\t\t//Try to parse the response\n\t\t\t$status = $this->validateApiResponse($result);\n\t\t\t$metadata = null;\n\t\t\tif ( !is_wp_error($status) ){\n\t\t\t\tif ( (strpos($metaClass, '\\\\') === false) ) {\n\t\t\t\t\t$metaClass = __NAMESPACE__ . '\\\\' . $metaClass;\n\t\t\t\t}\n\t\t\t\t$metadata = call_user_func(array($metaClass, 'fromJson'), $result['body']);\n\t\t\t} else {\n\t\t\t\tdo_action('puc_api_error', $status, $result, $url, $this->slug);\n\t\t\t\t$this->triggerError(\n\t\t\t\t\tsprintf('The URL %s does not point to a valid metadata file. ', $url)\n\t\t\t\t\t. $status->get_error_message(),\n\t\t\t\t\tE_USER_WARNING\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn array($metadata, $result);\n\t\t}\n\n\t\t/**\n\t\t * Check if $result is a successful update API response.\n\t\t *\n\t\t * @param array|WP_Error $result\n\t\t * @return true|WP_Error\n\t\t */\n\t\tprotected function validateApiResponse($result) {\n\t\t\tif ( is_wp_error($result) ) { /** @var WP_Error $result */\n\t\t\t\treturn new WP_Error($result->get_error_code(), 'WP HTTP Error: ' . $result->get_error_message());\n\t\t\t}\n\n\t\t\tif ( !isset($result['response']['code']) ) {\n\t\t\t\treturn new WP_Error(\n\t\t\t\t\t'puc_no_response_code',\n\t\t\t\t\t'wp_remote_get() returned an unexpected result.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( $result['response']['code'] !== 200 ) {\n\t\t\t\treturn new WP_Error(\n\t\t\t\t\t'puc_unexpected_response_code',\n\t\t\t\t\t'HTTP response code is ' . $result['response']['code'] . ' (expected: 200)'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( empty($result['body']) ) {\n\t\t\t\treturn new WP_Error('puc_empty_response', 'The metadata file appears to be empty.');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * Language packs / Translation updates\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Filter a list of translation updates and return a new list that contains only updates\n\t\t * that apply to the current site.\n\t\t *\n\t\t * @param array $translations\n\t\t * @return array\n\t\t */\n\t\tprotected function filterApplicableTranslations($translations) {\n\t\t\t$languages = array_flip(array_values(get_available_languages()));\n\t\t\t$installedTranslations = $this->getInstalledTranslations();\n\n\t\t\t$applicableTranslations = array();\n\t\t\tforeach ($translations as $translation) {\n\t\t\t\t//Does it match one of the available core languages?\n\t\t\t\t$isApplicable = array_key_exists($translation->language, $languages);\n\t\t\t\t//Is it more recent than an already-installed translation?\n\t\t\t\tif ( isset($installedTranslations[$translation->language]) ) {\n\t\t\t\t\t$updateTimestamp = strtotime($translation->updated);\n\t\t\t\t\t$installedTimestamp = strtotime($installedTranslations[$translation->language]['PO-Revision-Date']);\n\t\t\t\t\t$isApplicable = $updateTimestamp > $installedTimestamp;\n\t\t\t\t}\n\n\t\t\t\tif ( $isApplicable ) {\n\t\t\t\t\t$applicableTranslations[] = $translation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $applicableTranslations;\n\t\t}\n\n\t\t/**\n\t\t * Get a list of installed translations for this plugin or theme.\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tprotected function getInstalledTranslations() {\n\t\t\tif ( !function_exists('wp_get_installed_translations') ) {\n\t\t\t\treturn array();\n\t\t\t}\n\t\t\t$installedTranslations = wp_get_installed_translations($this->translationType . 's');\n\t\t\tif ( isset($installedTranslations[$this->directoryName]) ) {\n\t\t\t\t$installedTranslations = $installedTranslations[$this->directoryName];\n\t\t\t} else {\n\t\t\t\t$installedTranslations = array();\n\t\t\t}\n\t\t\treturn $installedTranslations;\n\t\t}\n\n\t\t/**\n\t\t * Insert translation updates into the list maintained by WordPress.\n\t\t *\n\t\t * @param stdClass $updates\n\t\t * @return stdClass\n\t\t */\n\t\tpublic function injectTranslationUpdates($updates) {\n\t\t\t$translationUpdates = $this->getTranslationUpdates();\n\t\t\tif ( empty($translationUpdates) ) {\n\t\t\t\treturn $updates;\n\t\t\t}\n\n\t\t\t//Being defensive.\n\t\t\tif ( !is_object($updates) ) {\n\t\t\t\t$updates = new stdClass();\n\t\t\t}\n\t\t\tif ( !isset($updates->translations) ) {\n\t\t\t\t$updates->translations = array();\n\t\t\t}\n\n\t\t\t//In case there's a name collision with a plugin or theme hosted on wordpress.org,\n\t\t\t//remove any preexisting updates that match our thing.\n\t\t\t$updates->translations = array_values(array_filter(\n\t\t\t\t$updates->translations,\n\t\t\t\tarray($this, 'isNotMyTranslation')\n\t\t\t));\n\n\t\t\t//Add our updates to the list.\n\t\t\tforeach($translationUpdates as $update) {\n\t\t\t\t$convertedUpdate = array_merge(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type' => $this->translationType,\n\t\t\t\t\t\t'slug' => $this->directoryName,\n\t\t\t\t\t\t'autoupdate' => 0,\n\t\t\t\t\t\t//AFAICT, WordPress doesn't actually use the \"version\" field for anything.\n\t\t\t\t\t\t//But lets make sure it's there, just in case.\n\t\t\t\t\t\t'version' => isset($update->version) ? $update->version : ('1.' . strtotime($update->updated)),\n\t\t\t\t\t),\n\t\t\t\t\t(array)$update\n\t\t\t\t);\n\n\t\t\t\t$updates->translations[] = $convertedUpdate;\n\t\t\t}\n\n\t\t\treturn $updates;\n\t\t}\n\n\t\t/**\n\t\t * Get a list of available translation updates.\n\t\t *\n\t\t * This method will return an empty array if there are no updates.\n\t\t * Uses cached update data.\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tpublic function getTranslationUpdates() {\n\t\t\treturn $this->updateState->getTranslations();\n\t\t}\n\n\t\t/**\n\t\t * Remove all cached translation updates.\n\t\t *\n\t\t * @see wp_clean_update_cache\n\t\t */\n\t\tpublic function clearCachedTranslationUpdates() {\n\t\t\t$this->updateState->setTranslations(array());\n\t\t}\n\n\t\t/**\n\t\t * Filter callback. Keeps only translations that *don't* match this plugin or theme.\n\t\t *\n\t\t * @param array $translation\n\t\t * @return bool\n\t\t */\n\t\tprotected function isNotMyTranslation($translation) {\n\t\t\t$isMatch = isset($translation['type'], $translation['slug'])\n\t\t\t\t&& ($translation['type'] === $this->translationType)\n\t\t\t\t&& ($translation['slug'] === $this->directoryName);\n\n\t\t\treturn !$isMatch;\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * Fix directory name when installing updates\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Rename the update directory to match the existing plugin/theme directory.\n\t\t *\n\t\t * When WordPress installs a plugin or theme update, it assumes that the ZIP file will contain\n\t\t * exactly one directory, and that the directory name will be the same as the directory where\n\t\t * the plugin or theme is currently installed.\n\t\t *\n\t\t * GitHub and other repositories provide ZIP downloads, but they often use directory names like\n\t\t * \"project-branch\" or \"project-tag-hash\". We need to change the name to the actual plugin folder.\n\t\t *\n\t\t * This is a hook callback. Don't call it from a plugin.\n\t\t *\n\t\t * @access protected\n\t\t *\n\t\t * @param string $source The directory to copy to /wp-content/plugins or /wp-content/themes. Usually a subdirectory of $remoteSource.\n\t\t * @param string $remoteSource WordPress has extracted the update to this directory.\n\t\t * @param \\WP_Upgrader $upgrader\n\t\t * @return string|WP_Error\n\t\t */\n\t\tpublic function fixDirectoryName($source, $remoteSource, $upgrader) {\n\t\t\tglobal $wp_filesystem;\n\t\t\t/** @var \\WP_Filesystem_Base $wp_filesystem */\n\n\t\t\t//Basic sanity checks.\n\t\t\tif ( !isset($source, $remoteSource, $upgrader, $upgrader->skin, $wp_filesystem) ) {\n\t\t\t\treturn $source;\n\t\t\t}\n\n\t\t\t//If WordPress is upgrading anything other than our plugin/theme, leave the directory name unchanged.\n\t\t\tif ( !$this->isBeingUpgraded($upgrader) ) {\n\t\t\t\treturn $source;\n\t\t\t}\n\n\t\t\t//Fix the remote source structure if necessary.\n\t\t\t//The update archive should contain a single directory that contains the rest of plugin/theme files.\n\t\t\t//Otherwise, WordPress will try to copy the entire working directory ($source == $remoteSource).\n\t\t\t//We can't rename $remoteSource because that would break WordPress code that cleans up temporary files\n\t\t\t//after update.\n\t\t\tif ( $this->isBadDirectoryStructure($remoteSource) ) {\n\t\t\t\t//Create a new directory using the plugin slug.\n\t\t\t\t$newDirectory = trailingslashit($remoteSource) . $this->slug . '/';\n\n\t\t\t\tif ( !$wp_filesystem->is_dir($newDirectory) ) {\n\t\t\t\t\t$wp_filesystem->mkdir($newDirectory);\n\n\t\t\t\t\t//Move all files to the newly created directory.\n\t\t\t\t\t$sourceFiles = $wp_filesystem->dirlist($remoteSource);\n\t\t\t\t\tif ( is_array($sourceFiles) ) {\n\t\t\t\t\t\t$sourceFiles = array_keys($sourceFiles);\n\t\t\t\t\t\t$allMoved = true;\n\t\t\t\t\t\tforeach ($sourceFiles as $filename) {\n\t\t\t\t\t\t\t//Skip our newly created folder.\n\t\t\t\t\t\t\tif ( $filename === $this->slug ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$previousSource = trailingslashit($remoteSource) . $filename;\n\t\t\t\t\t\t\t$newSource = trailingslashit($newDirectory) . $filename;\n\n\t\t\t\t\t\t\tif ( !$wp_filesystem->move($previousSource, $newSource, true) ) {\n\t\t\t\t\t\t\t\t$allMoved = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $allMoved ) {\n\t\t\t\t\t\t\t//Rename source.\n\t\t\t\t\t\t\t$source = $newDirectory;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Delete our newly created folder including all files in it.\n\t\t\t\t\t\t\t$wp_filesystem->rmdir($newDirectory, true);\n\n\t\t\t\t\t\t\t//And return a relevant error.\n\t\t\t\t\t\t\treturn new WP_Error(\n\t\t\t\t\t\t\t\t'puc-incorrect-directory-structure',\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t'The directory structure of the update was incorrect. All files should be inside ' .\n\t\t\t\t\t\t\t\t\t'a directory named <span class=\"code\">%s</span>, not at the root of the ZIP archive. Plugin Update Checker tried to fix the directory structure, but failed.',\n\t\t\t\t\t\t\t\t\thtmlentities($this->slug)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Rename the source to match the existing directory.\n\t\t\t$correctedSource = trailingslashit($remoteSource) . $this->directoryName . '/';\n\t\t\tif ( $source !== $correctedSource ) {\n\t\t\t\t$upgrader->skin->feedback(sprintf(\n\t\t\t\t\t'Renaming %s to %s&#8230;',\n\t\t\t\t\t'<span class=\"code\">' . basename($source) . '</span>',\n\t\t\t\t\t'<span class=\"code\">' . $this->directoryName . '</span>'\n\t\t\t\t));\n\n\t\t\t\tif ( $wp_filesystem->move($source, $correctedSource, true) ) {\n\t\t\t\t\t$upgrader->skin->feedback('Directory successfully renamed.');\n\t\t\t\t\treturn $correctedSource;\n\t\t\t\t} else {\n\t\t\t\t\treturn new WP_Error(\n\t\t\t\t\t\t'puc-rename-failed',\n\t\t\t\t\t\t'Unable to rename the update to match the existing directory.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $source;\n\t\t}\n\n\t\t/**\n\t\t * Is there an update being installed right now, for this plugin or theme?\n\t\t *\n\t\t * @param \\WP_Upgrader|null $upgrader The upgrader that's performing the current update.\n\t\t * @return bool\n\t\t */\n\t\tabstract public function isBeingUpgraded($upgrader = null);\n\n\t\t/**\n\t\t * Check for incorrect update directory structure. An update must contain a single directory,\n\t\t * all other files should be inside that directory.\n\t\t *\n\t\t * @param string $remoteSource Directory path.\n\t\t * @return bool\n\t\t */\n\t\tprotected function isBadDirectoryStructure($remoteSource) {\n\t\t\tglobal $wp_filesystem;\n\t\t\t/** @var \\WP_Filesystem_Base $wp_filesystem */\n\n\t\t\t$sourceFiles = $wp_filesystem->dirlist($remoteSource);\n\t\t\tif ( is_array($sourceFiles) ) {\n\t\t\t\t$sourceFiles = array_keys($sourceFiles);\n\t\t\t\t$firstFilePath = trailingslashit($remoteSource) . $sourceFiles[0];\n\t\t\t\treturn (count($sourceFiles) > 1) || (!$wp_filesystem->is_dir($firstFilePath));\n\t\t\t}\n\n\t\t\t//Assume it's fine.\n\t\t\treturn false;\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * DebugBar integration\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Initialize the update checker Debug Bar plugin/add-on thingy.\n\t\t */\n\t\tpublic function maybeInitDebugBar() {\n\t\t\tif (\n\t\t\t\tclass_exists('Debug_Bar', false)\n\t\t\t\t&& class_exists('Debug_Bar_Panel', false)\n\t\t\t\t&& file_exists(dirname(__FILE__) . '/DebugBar')\n\t\t\t) {\n\t\t\t\t$this->debugBarExtension = $this->createDebugBarExtension();\n\t\t\t}\n\t\t}\n\n\t\tprotected function createDebugBarExtension() {\n\t\t\treturn new DebugBar\\Extension($this);\n\t\t}\n\n\t\t/**\n\t\t * Display additional configuration details in the Debug Bar panel.\n\t\t *\n\t\t * @param DebugBar\\Panel $panel\n\t\t */\n\t\tpublic function onDisplayConfiguration($panel) {\n\t\t\t//Do nothing. Subclasses can use this to add additional info to the panel.\n\t\t}\n\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/DebugBar/ThemePanel.php","ext":"php","size":573,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Theme\\UpdateChecker;\n\nif ( !class_exists(ThemePanel::class, false) ):\n\n\tclass ThemePanel extends Panel {\n\t\t/**\n\t\t * @var UpdateChecker\n\t\t */\n\t\tprotected $updateChecker;\n\n\t\tprotected function displayConfigHeader() {\n\t\t\t$this->row('Theme directory', htmlentities($this->updateChecker->directoryName));\n\t\t\tparent::displayConfigHeader();\n\t\t}\n\n\t\tprotected function getUpdateFields() {\n\t\t\treturn array_merge(parent::getUpdateFields(), array('details_url'));\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/DebugBar/PluginExtension.php","ext":"php","size":1230,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin\\UpdateChecker;\n\nif ( !class_exists(PluginExtension::class, false) ):\n\n\tclass PluginExtension extends Extension {\n\t\t/** @var UpdateChecker */\n\t\tprotected $updateChecker;\n\n\t\tpublic function __construct($updateChecker) {\n\t\t\tparent::__construct($updateChecker, PluginPanel::class);\n\n\t\t\tadd_action('wp_ajax_puc_v5_debug_request_info', array($this, 'ajaxRequestInfo'));\n\t\t}\n\n\t\t/**\n\t\t * Request plugin info and output it.\n\t\t */\n\t\tpublic function ajaxRequestInfo() {\n\t\t\t//phpcs:ignore WordPress.Security.NonceVerification.Missing -- Nonce is checked in preAjaxRequest().\n\t\t\tif ( !isset($_POST['uid']) || ($_POST['uid'] !== $this->updateChecker->getUniqueName('uid')) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$this->preAjaxRequest();\n\t\t\t$info = $this->updateChecker->requestInfo();\n\t\t\tif ( $info !== null ) {\n\t\t\t\techo 'Successfully retrieved plugin info from the metadata URL:';\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_print_r -- For debugging output.\n\t\t\t\techo '<pre>', esc_html(print_r($info, true)), '</pre>';\n\t\t\t} else {\n\t\t\t\techo 'Failed to retrieve plugin info from the metadata URL.';\n\t\t\t}\n\t\t\texit;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/DebugBar/Panel.php","ext":"php","size":5895,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\UpdateChecker;\n\nif ( !class_exists(Panel::class, false) && class_exists('Debug_Bar_Panel', false) ):\n\n\tclass Panel extends \\Debug_Bar_Panel {\n\t\t/** @var UpdateChecker */\n\t\tprotected $updateChecker;\n\n\t\tprivate $responseBox = '<div class=\"puc-ajax-response\" style=\"display: none;\"></div>';\n\n\t\tpublic function __construct($updateChecker) {\n\t\t\t$this->updateChecker = $updateChecker;\n\t\t\t$title = sprintf(\n\t\t\t\t'<span class=\"puc-debug-menu-link-%s\">PUC (%s)</span>',\n\t\t\t\tesc_attr($this->updateChecker->getUniqueName('uid')),\n\t\t\t\t$this->updateChecker->slug\n\t\t\t);\n\t\t\tparent::__construct($title);\n\t\t}\n\n\t\tpublic function render() {\n\t\t\tprintf(\n\t\t\t\t'<div class=\"puc-debug-bar-panel-v5\" id=\"%1$s\" data-slug=\"%2$s\" data-uid=\"%3$s\" data-nonce=\"%4$s\">',\n\t\t\t\tesc_attr($this->updateChecker->getUniqueName('debug-bar-panel')),\n\t\t\t\tesc_attr($this->updateChecker->slug),\n\t\t\t\tesc_attr($this->updateChecker->getUniqueName('uid')),\n\t\t\t\tesc_attr(wp_create_nonce('puc-ajax'))\n\t\t\t);\n\n\t\t\t$this->displayConfiguration();\n\t\t\t$this->displayStatus();\n\t\t\t$this->displayCurrentUpdate();\n\n\t\t\techo '</div>';\n\t\t}\n\n\t\tprivate function displayConfiguration() {\n\t\t\techo '<h3>Configuration</h3>';\n\t\t\techo '<table class=\"puc-debug-data\">';\n\t\t\t$this->displayConfigHeader();\n\t\t\t$this->row('Slug', htmlentities($this->updateChecker->slug));\n\t\t\t$this->row('DB option', htmlentities($this->updateChecker->optionName));\n\n\t\t\t$requestInfoButton = $this->getMetadataButton();\n\t\t\t$this->row('Metadata URL', htmlentities($this->updateChecker->metadataUrl) . ' ' . $requestInfoButton . $this->responseBox);\n\n\t\t\t$scheduler = $this->updateChecker->scheduler;\n\t\t\tif ( $scheduler->checkPeriod > 0 ) {\n\t\t\t\t$this->row('Automatic checks', 'Every ' . $scheduler->checkPeriod . ' hours');\n\t\t\t} else {\n\t\t\t\t$this->row('Automatic checks', 'Disabled');\n\t\t\t}\n\n\t\t\tif ( isset($scheduler->throttleRedundantChecks) ) {\n\t\t\t\tif ( $scheduler->throttleRedundantChecks && ($scheduler->checkPeriod > 0) ) {\n\t\t\t\t\t$this->row(\n\t\t\t\t\t\t'Throttling',\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t'Enabled. If an update is already available, check for updates every %1$d hours instead of every %2$d hours.',\n\t\t\t\t\t\t\t$scheduler->throttledCheckPeriod,\n\t\t\t\t\t\t\t$scheduler->checkPeriod\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t$this->row('Throttling', 'Disabled');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->updateChecker->onDisplayConfiguration($this);\n\n\t\t\techo '</table>';\n\t\t}\n\n\t\tprotected function displayConfigHeader() {\n\t\t\t//Do nothing. This should be implemented in subclasses.\n\t\t}\n\n\t\tprotected function getMetadataButton() {\n\t\t\treturn '';\n\t\t}\n\n\t\tprivate function displayStatus() {\n\t\t\techo '<h3>Status</h3>';\n\t\t\techo '<table class=\"puc-debug-data\">';\n\t\t\t$state = $this->updateChecker->getUpdateState();\n\t\t\t$checkButtonId = $this->updateChecker->getUniqueName('check-now-button');\n\t\t\tif ( function_exists('get_submit_button')  ) {\n\t\t\t\t$checkNowButton = get_submit_button(\n\t\t\t\t\t'Check Now',\n\t\t\t\t\t'secondary',\n\t\t\t\t\t'puc-check-now-button',\n\t\t\t\t\tfalse,\n\t\t\t\t\tarray('id' => $checkButtonId)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t//get_submit_button() is not available in the frontend. Make a button directly.\n\t\t\t\t//It won't look the same without admin styles, but it should still work.\n\t\t\t\t$checkNowButton = sprintf(\n\t\t\t\t\t'<input type=\"button\" id=\"%1$s\" name=\"puc-check-now-button\" value=\"%2$s\" class=\"button button-secondary\" />',\n\t\t\t\t\tesc_attr($checkButtonId),\n\t\t\t\t\tesc_attr('Check Now')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( $state->getLastCheck() > 0 ) {\n\t\t\t\t$this->row('Last check', $this->formatTimeWithDelta($state->getLastCheck()) . ' ' . $checkNowButton . $this->responseBox);\n\t\t\t} else {\n\t\t\t\t$this->row('Last check', 'Never');\n\t\t\t}\n\n\t\t\t$nextCheck = wp_next_scheduled($this->updateChecker->scheduler->getCronHookName());\n\t\t\t$this->row('Next automatic check', $this->formatTimeWithDelta($nextCheck));\n\n\t\t\tif ( $state->getCheckedVersion() !== '' ) {\n\t\t\t\t$this->row('Checked version', htmlentities($state->getCheckedVersion()));\n\t\t\t\t$this->row('Cached update', $state->getUpdate());\n\t\t\t}\n\t\t\t$this->row('Update checker class', htmlentities(get_class($this->updateChecker)));\n\t\t\techo '</table>';\n\t\t}\n\n\t\tprivate function displayCurrentUpdate() {\n\t\t\t$update = $this->updateChecker->getUpdate();\n\t\t\tif ( $update !== null ) {\n\t\t\t\techo '<h3>An Update Is Available</h3>';\n\t\t\t\techo '<table class=\"puc-debug-data\">';\n\t\t\t\t$fields = $this->getUpdateFields();\n\t\t\t\tforeach($fields as $field) {\n\t\t\t\t\tif ( property_exists($update, $field) ) {\n\t\t\t\t\t\t$this->row(\n\t\t\t\t\t\t\tucwords(str_replace('_', ' ', $field)),\n\t\t\t\t\t\t\tisset($update->$field) ? htmlentities($update->$field) : null\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\techo '</table>';\n\t\t\t} else {\n\t\t\t\techo '<h3>No updates currently available</h3>';\n\t\t\t}\n\t\t}\n\n\t\tprotected function getUpdateFields() {\n\t\t\treturn array('version', 'download_url', 'slug',);\n\t\t}\n\n\t\tprivate function formatTimeWithDelta($unixTime) {\n\t\t\tif ( empty($unixTime) ) {\n\t\t\t\treturn 'Never';\n\t\t\t}\n\n\t\t\t$delta = time() - $unixTime;\n\t\t\t$result = human_time_diff(time(), $unixTime);\n\t\t\tif ( $delta < 0 ) {\n\t\t\t\t$result = 'after ' . $result;\n\t\t\t} else {\n\t\t\t\t$result = $result . ' ago';\n\t\t\t}\n\t\t\t$result .= ' (' . $this->formatTimestamp($unixTime) . ')';\n\t\t\treturn $result;\n\t\t}\n\n\t\tprivate function formatTimestamp($unixTime) {\n\t\t\treturn gmdate('Y-m-d H:i:s', $unixTime + (get_option('gmt_offset') * 3600));\n\t\t}\n\n\t\tpublic function row($name, $value) {\n\t\t\tif ( is_object($value) || is_array($value) ) {\n\t\t\t\t//This is specifically for debugging, so print_r() is fine.\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_print_r\n\t\t\t\t$value = '<pre>' . htmlentities(print_r($value, true)) . '</pre>';\n\t\t\t} else if ($value === null) {\n\t\t\t\t$value = '<code>null</code>';\n\t\t\t}\n\t\t\tprintf(\n\t\t\t\t'<tr><th scope=\"row\">%1$s</th> <td>%2$s</td></tr>',\n\t\t\t\tesc_html($name),\n\t\t\t\t//phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaped above.\n\t\t\t\t$value\n\t\t\t);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/DebugBar/Extension.php","ext":"php","size":6471,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\PucFactory;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\UpdateChecker;\n\nif ( !class_exists(Extension::class, false) ):\n\n\tclass Extension {\n\t\tconst RESPONSE_BODY_LENGTH_LIMIT = 4000;\n\n\t\t/** @var UpdateChecker */\n\t\tprotected $updateChecker;\n\t\tprotected $panelClass = Panel::class;\n\n\t\tpublic function __construct($updateChecker, $panelClass = null) {\n\t\t\t$this->updateChecker = $updateChecker;\n\t\t\tif ( isset($panelClass) ) {\n\t\t\t\t$this->panelClass = $panelClass;\n\t\t\t}\n\n\t\t\tif ( (strpos($this->panelClass, '\\\\') === false) ) {\n\t\t\t\t$this->panelClass = __NAMESPACE__ . '\\\\' . $this->panelClass;\n\t\t\t}\n\n\t\t\tadd_filter('debug_bar_panels', array($this, 'addDebugBarPanel'));\n\t\t\tadd_action('debug_bar_enqueue_scripts', array($this, 'enqueuePanelDependencies'));\n\n\t\t\tadd_action('wp_ajax_puc_v5_debug_check_now', array($this, 'ajaxCheckNow'));\n\t\t}\n\n\t\t/**\n\t\t * Register the PUC Debug Bar panel.\n\t\t *\n\t\t * @param array $panels\n\t\t * @return array\n\t\t */\n\t\tpublic function addDebugBarPanel($panels) {\n\t\t\tif ( $this->updateChecker->userCanInstallUpdates() ) {\n\t\t\t\t$panels[] = new $this->panelClass($this->updateChecker);\n\t\t\t}\n\t\t\treturn $panels;\n\t\t}\n\n\t\t/**\n\t\t * Enqueue our Debug Bar scripts and styles.\n\t\t */\n\t\tpublic function enqueuePanelDependencies() {\n\t\t\twp_enqueue_style(\n\t\t\t\t'puc-debug-bar-style-v5',\n\t\t\t\t$this->getLibraryUrl(\"/css/puc-debug-bar.css\"),\n\t\t\t\tarray('debug-bar'),\n\t\t\t\t'20221008'\n\t\t\t);\n\n\t\t\twp_enqueue_script(\n\t\t\t\t'puc-debug-bar-js-v5',\n\t\t\t\t$this->getLibraryUrl(\"/js/debug-bar.js\"),\n\t\t\t\tarray('jquery'),\n\t\t\t\t'20221008'\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Run an update check and output the result. Useful for making sure that\n\t\t * the update checking process works as expected.\n\t\t */\n\t\tpublic function ajaxCheckNow() {\n\t\t\t//phpcs:ignore WordPress.Security.NonceVerification.Missing -- Nonce is checked in preAjaxRequest().\n\t\t\tif ( !isset($_POST['uid']) || ($_POST['uid'] !== $this->updateChecker->getUniqueName('uid')) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$this->preAjaxRequest();\n\t\t\t$update = $this->updateChecker->checkForUpdates();\n\t\t\tif ( $update !== null ) {\n\t\t\t\techo \"An update is available:\";\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_print_r -- For debugging output.\n\t\t\t\techo '<pre>', esc_html(print_r($update, true)), '</pre>';\n\t\t\t} else {\n\t\t\t\techo 'No updates found.';\n\t\t\t}\n\n\t\t\t$errors = $this->updateChecker->getLastRequestApiErrors();\n\t\t\tif ( !empty($errors) ) {\n\t\t\t\tprintf('<p>The update checker encountered %d API error%s.</p>', count($errors), (count($errors) > 1) ? 's' : '');\n\n\t\t\t\tforeach (array_values($errors) as $num => $item) {\n\t\t\t\t\t$wpError = $item['error'];\n\t\t\t\t\t/** @var \\WP_Error $wpError */\n\t\t\t\t\tprintf('<h4>%d) %s</h4>', intval($num + 1), esc_html($wpError->get_error_message()));\n\n\t\t\t\t\techo '<dl>';\n\t\t\t\t\tprintf('<dt>Error code:</dt><dd><code>%s</code></dd>', esc_html($wpError->get_error_code()));\n\n\t\t\t\t\tif ( isset($item['url']) ) {\n\t\t\t\t\t\tprintf('<dt>Requested URL:</dt><dd><code>%s</code></dd>', esc_html($item['url']));\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isset($item['httpResponse']) ) {\n\t\t\t\t\t\tif ( is_wp_error($item['httpResponse']) ) {\n\t\t\t\t\t\t\t$httpError = $item['httpResponse'];\n\t\t\t\t\t\t\t/** @var \\WP_Error $httpError */\n\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t'<dt>WordPress HTTP API error:</dt><dd>%s (<code>%s</code>)</dd>',\n\t\t\t\t\t\t\t\tesc_html($httpError->get_error_message()),\n\t\t\t\t\t\t\t\tesc_html($httpError->get_error_code())\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//Status code.\n\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t'<dt>HTTP status:</dt><dd><code>%d %s</code></dd>',\n\t\t\t\t\t\t\t\tesc_html(wp_remote_retrieve_response_code($item['httpResponse'])),\n\t\t\t\t\t\t\t\tesc_html(wp_remote_retrieve_response_message($item['httpResponse']))\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t//Headers.\n\t\t\t\t\t\t\techo '<dt>Response headers:</dt><dd><pre>';\n\t\t\t\t\t\t\tforeach (wp_remote_retrieve_headers($item['httpResponse']) as $name => $value) {\n\t\t\t\t\t\t\t\tprintf(\"%s: %s\\n\", esc_html($name), esc_html($value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\techo '</pre></dd>';\n\n\t\t\t\t\t\t\t//Body.\n\t\t\t\t\t\t\t$body = wp_remote_retrieve_body($item['httpResponse']);\n\t\t\t\t\t\t\tif ( $body === '' ) {\n\t\t\t\t\t\t\t\t$body = '(Empty response.)';\n\t\t\t\t\t\t\t} else if ( strlen($body) > self::RESPONSE_BODY_LENGTH_LIMIT ) {\n\t\t\t\t\t\t\t\t$length = strlen($body);\n\t\t\t\t\t\t\t\t$body = substr($body, 0, self::RESPONSE_BODY_LENGTH_LIMIT)\n\t\t\t\t\t\t\t\t\t. sprintf(\"\\n(Long string truncated. Total length: %d bytes.)\", $length);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprintf('<dt>Response body:</dt><dd><pre>%s</pre></dd>', esc_html($body));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\techo '<dl>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\texit;\n\t\t}\n\n\t\t/**\n\t\t * Check access permissions and enable error display (for debugging).\n\t\t */\n\t\tprotected function preAjaxRequest() {\n\t\t\tif ( !$this->updateChecker->userCanInstallUpdates() ) {\n\t\t\t\tdie('Access denied');\n\t\t\t}\n\t\t\tcheck_ajax_referer('puc-ajax');\n\n\t\t\t//phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.runtime_configuration_error_reporting -- Part of a debugging feature.\n\t\t\terror_reporting(E_ALL);\n\t\t\t//phpcs:ignore WordPress.PHP.IniSet.display_errors_Blacklisted\n\t\t\t@ini_set('display_errors', 'On');\n\t\t}\n\n\t\t/**\n\t\t * Remove hooks that were added by this extension.\n\t\t */\n\t\tpublic function removeHooks() {\n\t\t\tremove_filter('debug_bar_panels', array($this, 'addDebugBarPanel'));\n\t\t\tremove_action('debug_bar_enqueue_scripts', array($this, 'enqueuePanelDependencies'));\n\t\t\tremove_action('wp_ajax_puc_v5_debug_check_now', array($this, 'ajaxCheckNow'));\n\t\t}\n\n\t\t/**\n\t\t * @param string $filePath\n\t\t * @return string\n\t\t */\n\t\tprivate function getLibraryUrl($filePath) {\n\t\t\t$absolutePath = realpath(dirname(__FILE__) . '/../../../' . ltrim($filePath, '/'));\n\n\t\t\t//Where is the library located inside the WordPress directory structure?\n\t\t\t$absolutePath = PucFactory::normalizePath($absolutePath);\n\n\t\t\t$pluginDir = PucFactory::normalizePath(WP_PLUGIN_DIR);\n\t\t\t$muPluginDir = PucFactory::normalizePath(WPMU_PLUGIN_DIR);\n\t\t\t$themeDir = PucFactory::normalizePath(get_theme_root());\n\n\t\t\tif ( (strpos($absolutePath, $pluginDir) === 0) || (strpos($absolutePath, $muPluginDir) === 0) ) {\n\t\t\t\t//It's part of a plugin.\n\t\t\t\treturn plugins_url(basename($absolutePath), $absolutePath);\n\t\t\t} else if ( strpos($absolutePath, $themeDir) === 0 ) {\n\t\t\t\t//It's part of a theme.\n\t\t\t\t$relativePath = substr($absolutePath, strlen($themeDir) + 1);\n\t\t\t\t$template = substr($relativePath, 0, strpos($relativePath, '/'));\n\t\t\t\t$baseUrl = get_theme_root_uri($template);\n\n\t\t\t\tif ( !empty($baseUrl) && $relativePath ) {\n\t\t\t\t\treturn $baseUrl . '/' . $relativePath;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/DebugBar/PluginPanel.php","ext":"php","size":1205,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin\\UpdateChecker;\n\nif ( !class_exists(PluginPanel::class, false) ):\n\n\tclass PluginPanel extends Panel {\n\t\t/**\n\t\t * @var UpdateChecker\n\t\t */\n\t\tprotected $updateChecker;\n\n\t\tprotected function displayConfigHeader() {\n\t\t\t$this->row('Plugin file', htmlentities($this->updateChecker->pluginFile));\n\t\t\tparent::displayConfigHeader();\n\t\t}\n\n\t\tprotected function getMetadataButton() {\n\t\t\t$buttonId = $this->updateChecker->getUniqueName('request-info-button');\n\t\t\tif ( function_exists('get_submit_button') ) {\n\t\t\t\t$requestInfoButton = get_submit_button(\n\t\t\t\t\t'Request Info',\n\t\t\t\t\t'secondary',\n\t\t\t\t\t'puc-request-info-button',\n\t\t\t\t\tfalse,\n\t\t\t\t\tarray('id' => $buttonId)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$requestInfoButton = sprintf(\n\t\t\t\t\t'<input type=\"button\" name=\"puc-request-info-button\" id=\"%1$s\" value=\"%2$s\" class=\"button button-secondary\" />',\n\t\t\t\t\tesc_attr($buttonId),\n\t\t\t\t\tesc_attr('Request Info')\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $requestInfoButton;\n\t\t}\n\n\t\tprotected function getUpdateFields() {\n\t\t\treturn array_merge(\n\t\t\t\tparent::getUpdateFields(),\n\t\t\t\tarray('homepage', 'upgrade_notice', 'tested',)\n\t\t\t);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/StateStore.php","ext":"php","size":4758,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(StateStore::class, false) ):\n\n\tclass StateStore {\n\t\t/**\n\t\t * @var int Last update check timestamp.\n\t\t */\n\t\tprotected $lastCheck = 0;\n\n\t\t/**\n\t\t * @var string Version number.\n\t\t */\n\t\tprotected $checkedVersion = '';\n\n\t\t/**\n\t\t * @var Update|null Cached update.\n\t\t */\n\t\tprotected $update = null;\n\n\t\t/**\n\t\t * @var string Site option name.\n\t\t */\n\t\tprivate $optionName = '';\n\n\t\t/**\n\t\t * @var bool Whether we've already tried to load the state from the database.\n\t\t */\n\t\tprivate $isLoaded = false;\n\n\t\tpublic function __construct($optionName) {\n\t\t\t$this->optionName = $optionName;\n\t\t}\n\n\t\t/**\n\t\t * Get time elapsed since the last update check.\n\t\t *\n\t\t * If there are no recorded update checks, this method returns a large arbitrary number\n\t\t * (i.e. time since the Unix epoch).\n\t\t *\n\t\t * @return int Elapsed time in seconds.\n\t\t */\n\t\tpublic function timeSinceLastCheck() {\n\t\t\t$this->lazyLoad();\n\t\t\treturn time() - $this->lastCheck;\n\t\t}\n\n\t\t/**\n\t\t * @return int\n\t\t */\n\t\tpublic function getLastCheck() {\n\t\t\t$this->lazyLoad();\n\t\t\treturn $this->lastCheck;\n\t\t}\n\n\t\t/**\n\t\t * Set the time of the last update check to the current timestamp.\n\t\t *\n\t\t * @return $this\n\t\t */\n\t\tpublic function setLastCheckToNow() {\n\t\t\t$this->lazyLoad();\n\t\t\t$this->lastCheck = time();\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * @return null|Update\n\t\t */\n\t\tpublic function getUpdate() {\n\t\t\t$this->lazyLoad();\n\t\t\treturn $this->update;\n\t\t}\n\n\t\t/**\n\t\t * @param Update|null $update\n\t\t * @return $this\n\t\t */\n\t\tpublic function setUpdate($update = null) {\n\t\t\t$this->lazyLoad();\n\t\t\t$this->update = $update;\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * @return string\n\t\t */\n\t\tpublic function getCheckedVersion() {\n\t\t\t$this->lazyLoad();\n\t\t\treturn $this->checkedVersion;\n\t\t}\n\n\t\t/**\n\t\t * @param string $version\n\t\t * @return $this\n\t\t */\n\t\tpublic function setCheckedVersion($version) {\n\t\t\t$this->lazyLoad();\n\t\t\t$this->checkedVersion = strval($version);\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * Get translation updates.\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tpublic function getTranslations() {\n\t\t\t$this->lazyLoad();\n\t\t\tif ( isset($this->update, $this->update->translations) ) {\n\t\t\t\treturn $this->update->translations;\n\t\t\t}\n\t\t\treturn array();\n\t\t}\n\n\t\t/**\n\t\t * Set translation updates.\n\t\t *\n\t\t * @param array $translationUpdates\n\t\t */\n\t\tpublic function setTranslations($translationUpdates) {\n\t\t\t$this->lazyLoad();\n\t\t\tif ( isset($this->update) ) {\n\t\t\t\t$this->update->translations = $translationUpdates;\n\t\t\t\t$this->save();\n\t\t\t}\n\t\t}\n\n\t\tpublic function save() {\n\t\t\t$state = new \\stdClass();\n\n\t\t\t$state->lastCheck = $this->lastCheck;\n\t\t\t$state->checkedVersion = $this->checkedVersion;\n\n\t\t\tif ( isset($this->update)) {\n\t\t\t\t$state->update = $this->update->toStdClass();\n\n\t\t\t\t$updateClass = get_class($this->update);\n\t\t\t\t$state->updateClass = $updateClass;\n\t\t\t\t$prefix = $this->getLibPrefix();\n\t\t\t\tif ( Utils::startsWith($updateClass, $prefix) ) {\n\t\t\t\t\t$state->updateBaseClass = substr($updateClass, strlen($prefix));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdate_site_option($this->optionName, $state);\n\t\t\t$this->isLoaded = true;\n\t\t}\n\n\t\t/**\n\t\t * @return $this\n\t\t */\n\t\tpublic function lazyLoad() {\n\t\t\tif ( !$this->isLoaded ) {\n\t\t\t\t$this->load();\n\t\t\t}\n\t\t\treturn $this;\n\t\t}\n\n\t\tprotected function load() {\n\t\t\t$this->isLoaded = true;\n\n\t\t\t$state = get_site_option($this->optionName, null);\n\n\t\t\tif (\n\t\t\t\t!is_object($state)\n\t\t\t\t//Sanity check: If the Utils class is missing, the plugin is probably in the process\n\t\t\t\t//of being deleted (e.g. the old version gets deleted during an update).\n\t\t\t\t|| !class_exists(Utils::class)\n\t\t\t) {\n\t\t\t\t$this->lastCheck = 0;\n\t\t\t\t$this->checkedVersion = '';\n\t\t\t\t$this->update = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$this->lastCheck = intval(Utils::get($state, 'lastCheck', 0));\n\t\t\t$this->checkedVersion = Utils::get($state, 'checkedVersion', '');\n\t\t\t$this->update = null;\n\n\t\t\tif ( isset($state->update) ) {\n\t\t\t\t//This mess is due to the fact that the want the update class from this version\n\t\t\t\t//of the library, not the version that saved the update.\n\n\t\t\t\t$updateClass = null;\n\t\t\t\tif ( isset($state->updateBaseClass) ) {\n\t\t\t\t\t$updateClass = $this->getLibPrefix() . $state->updateBaseClass;\n\t\t\t\t} else if ( isset($state->updateClass) ) {\n\t\t\t\t\t$updateClass = $state->updateClass;\n\t\t\t\t}\n\n\t\t\t\t$factory = array($updateClass, 'fromObject');\n\t\t\t\tif ( ($updateClass !== null) && is_callable($factory) ) {\n\t\t\t\t\t$this->update = call_user_func($factory, $state->update);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic function delete() {\n\t\t\tdelete_site_option($this->optionName);\n\n\t\t\t$this->lastCheck = 0;\n\t\t\t$this->checkedVersion = '';\n\t\t\t$this->update = null;\n\t\t}\n\n\t\tprivate function getLibPrefix() {\n\t\t\t//This assumes that the current class is at the top of the versioned namespace.\n\t\t\treturn __NAMESPACE__ . '\\\\';\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/UpgraderStatus.php","ext":"php","size":7048,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(UpgraderStatus::class, false) ):\n\n\t/**\n\t * A utility class that helps figure out which plugin or theme WordPress is upgrading.\n\t *\n\t * It may seem strange to have a separate class just for that, but the task is surprisingly complicated.\n\t * Core classes like Plugin_Upgrader don't expose the plugin file name during an in-progress update (AFAICT).\n\t * This class uses a few workarounds and heuristics to get the file name.\n\t */\n\tclass UpgraderStatus {\n\t\tprivate $currentType = null; //This must be either \"plugin\" or \"theme\".\n\t\tprivate $currentId = null;   //Plugin basename or theme directory name.\n\n\t\tpublic function __construct() {\n\t\t\t//Keep track of which plugin/theme WordPress is currently upgrading.\n\t\t\tadd_filter('upgrader_pre_install', array($this, 'setUpgradedThing'), 10, 2);\n\t\t\tadd_filter('upgrader_package_options', array($this, 'setUpgradedPluginFromOptions'), 10, 1);\n\t\t\tadd_filter('upgrader_post_install', array($this, 'clearUpgradedThing'), 10, 1);\n\t\t\tadd_action('upgrader_process_complete', array($this, 'clearUpgradedThing'), 10, 1);\n\t\t}\n\n\t\t/**\n\t\t * Is there and update being installed RIGHT NOW, for a specific plugin?\n\t\t *\n\t\t * Caution: This method is unreliable. WordPress doesn't make it easy to figure out what it is upgrading,\n\t\t * and upgrader implementations are liable to change without notice.\n\t\t *\n\t\t * @param string $pluginFile The plugin to check.\n\t\t * @param \\WP_Upgrader|null $upgrader The upgrader that's performing the current update.\n\t\t * @return bool True if the plugin identified by $pluginFile is being upgraded.\n\t\t */\n\t\tpublic function isPluginBeingUpgraded($pluginFile, $upgrader = null) {\n\t\t\treturn $this->isBeingUpgraded('plugin', $pluginFile, $upgrader);\n\t\t}\n\n\t\t/**\n\t\t * Is there an update being installed for a specific theme?\n\t\t *\n\t\t * @param string $stylesheet Theme directory name.\n\t\t * @param \\WP_Upgrader|null $upgrader The upgrader that's performing the current update.\n\t\t * @return bool\n\t\t */\n\t\tpublic function isThemeBeingUpgraded($stylesheet, $upgrader = null) {\n\t\t\treturn $this->isBeingUpgraded('theme', $stylesheet, $upgrader);\n\t\t}\n\n\t\t/**\n\t\t * Check if a specific theme or plugin is being upgraded.\n\t\t *\n\t\t * @param string $type\n\t\t * @param string $id\n\t\t * @param \\Plugin_Upgrader|\\WP_Upgrader|null $upgrader\n\t\t * @return bool\n\t\t */\n\t\tprotected function isBeingUpgraded($type, $id, $upgrader = null) {\n\t\t\tif ( isset($upgrader) ) {\n\t\t\t\tlist($currentType, $currentId) = $this->getThingBeingUpgradedBy($upgrader);\n\t\t\t\tif ( $currentType !== null ) {\n\t\t\t\t\t$this->currentType = $currentType;\n\t\t\t\t\t$this->currentId = $currentId;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ($this->currentType === $type) && ($this->currentId === $id);\n\t\t}\n\n\t\t/**\n\t\t * Figure out which theme or plugin is being upgraded by a WP_Upgrader instance.\n\t\t *\n\t\t * Returns an array with two items. The first item is the type of the thing that's being\n\t\t * upgraded: \"plugin\" or \"theme\". The second item is either the plugin basename or\n\t\t * the theme directory name. If we can't determine what the upgrader is doing, both items\n\t\t * will be NULL.\n\t\t *\n\t\t * Examples:\n\t\t *      ['plugin', 'plugin-dir-name/plugin.php']\n\t\t *      ['theme', 'theme-dir-name']\n\t\t *\n\t\t * @param \\Plugin_Upgrader|\\WP_Upgrader $upgrader\n\t\t * @return array\n\t\t */\n\t\tprivate function getThingBeingUpgradedBy($upgrader) {\n\t\t\tif ( !isset($upgrader, $upgrader->skin) ) {\n\t\t\t\treturn array(null, null);\n\t\t\t}\n\n\t\t\t//Figure out which plugin or theme is being upgraded.\n\t\t\t$pluginFile = null;\n\t\t\t$themeDirectoryName = null;\n\n\t\t\t$skin = $upgrader->skin;\n\t\t\tif ( isset($skin->theme_info) && ($skin->theme_info instanceof \\WP_Theme) ) {\n\t\t\t\t$themeDirectoryName = $skin->theme_info->get_stylesheet();\n\t\t\t} elseif ( $skin instanceof \\Plugin_Upgrader_Skin ) {\n\t\t\t\tif ( isset($skin->plugin) && is_string($skin->plugin) && ($skin->plugin !== '') ) {\n\t\t\t\t\t$pluginFile = $skin->plugin;\n\t\t\t\t}\n\t\t\t} elseif ( $skin instanceof \\Theme_Upgrader_Skin ) {\n\t\t\t\tif ( isset($skin->theme) && is_string($skin->theme) && ($skin->theme !== '') ) {\n\t\t\t\t\t$themeDirectoryName = $skin->theme;\n\t\t\t\t}\n\t\t\t} elseif ( isset($skin->plugin_info) && is_array($skin->plugin_info) ) {\n\t\t\t\t//This case is tricky because Bulk_Plugin_Upgrader_Skin (etc) doesn't actually store the plugin\n\t\t\t\t//filename anywhere. Instead, it has the plugin headers in $plugin_info. So the best we can\n\t\t\t\t//do is compare those headers to the headers of installed plugins.\n\t\t\t\t$pluginFile = $this->identifyPluginByHeaders($skin->plugin_info);\n\t\t\t}\n\n\t\t\tif ( $pluginFile !== null ) {\n\t\t\t\treturn array('plugin', $pluginFile);\n\t\t\t} elseif ( $themeDirectoryName !== null ) {\n\t\t\t\treturn array('theme', $themeDirectoryName);\n\t\t\t}\n\t\t\treturn array(null, null);\n\t\t}\n\n\t\t/**\n\t\t * Identify an installed plugin based on its headers.\n\t\t *\n\t\t * @param array $searchHeaders The plugin file header to look for.\n\t\t * @return string|null Plugin basename (\"foo/bar.php\"), or NULL if we can't identify the plugin.\n\t\t */\n\t\tprivate function identifyPluginByHeaders($searchHeaders) {\n\t\t\tif ( !function_exists('get_plugins') ){\n\t\t\t\trequire_once( ABSPATH . '/wp-admin/includes/plugin.php' );\n\t\t\t}\n\n\t\t\t$installedPlugins = get_plugins();\n\t\t\t$matches = array();\n\t\t\tforeach($installedPlugins as $pluginBasename => $headers) {\n\t\t\t\t$diff1 = array_diff_assoc($headers, $searchHeaders);\n\t\t\t\t$diff2 = array_diff_assoc($searchHeaders, $headers);\n\t\t\t\tif ( empty($diff1) && empty($diff2) ) {\n\t\t\t\t\t$matches[] = $pluginBasename;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//It's possible (though very unlikely) that there could be two plugins with identical\n\t\t\t//headers. In that case, we can't unambiguously identify the plugin that's being upgraded.\n\t\t\tif ( count($matches) !== 1 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn reset($matches);\n\t\t}\n\n\t\t/**\n\t\t * @access private\n\t\t *\n\t\t * @param mixed $input\n\t\t * @param array $hookExtra\n\t\t * @return mixed Returns $input unaltered.\n\t\t */\n\t\tpublic function setUpgradedThing($input, $hookExtra) {\n\t\t\tif ( !empty($hookExtra['plugin']) && is_string($hookExtra['plugin']) ) {\n\t\t\t\t$this->currentId = $hookExtra['plugin'];\n\t\t\t\t$this->currentType = 'plugin';\n\t\t\t} elseif ( !empty($hookExtra['theme']) && is_string($hookExtra['theme']) ) {\n\t\t\t\t$this->currentId = $hookExtra['theme'];\n\t\t\t\t$this->currentType = 'theme';\n\t\t\t} else {\n\t\t\t\t$this->currentType = null;\n\t\t\t\t$this->currentId = null;\n\t\t\t}\n\t\t\treturn $input;\n\t\t}\n\n\t\t/**\n\t\t * @access private\n\t\t *\n\t\t * @param array $options\n\t\t * @return array\n\t\t */\n\t\tpublic function setUpgradedPluginFromOptions($options) {\n\t\t\tif ( isset($options['hook_extra']['plugin']) && is_string($options['hook_extra']['plugin']) ) {\n\t\t\t\t$this->currentType = 'plugin';\n\t\t\t\t$this->currentId = $options['hook_extra']['plugin'];\n\t\t\t} else {\n\t\t\t\t$this->currentType = null;\n\t\t\t\t$this->currentId = null;\n\t\t\t}\n\t\t\treturn $options;\n\t\t}\n\n\t\t/**\n\t\t * @access private\n\t\t *\n\t\t * @param mixed $input\n\t\t * @return mixed Returns $input unaltered.\n\t\t */\n\t\tpublic function clearUpgradedThing($input = null) {\n\t\t\t$this->currentId = null;\n\t\t\t$this->currentType = null;\n\t\t\treturn $input;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/ThemeUpdateChecker.php","ext":"php","size":2703,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Theme;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Utils;\n\nif ( !class_exists(ThemeUpdateChecker::class, false) ):\n\n\tclass ThemeUpdateChecker extends Theme\\UpdateChecker implements BaseChecker {\n\t\tuse VcsCheckerMethods;\n\n\t\t/**\n\t\t * ThemeUpdateChecker constructor.\n\t\t *\n\t\t * @param Api $api\n\t\t * @param null $stylesheet\n\t\t * @param null $customSlug\n\t\t * @param int $checkPeriod\n\t\t * @param string $optionName\n\t\t */\n\t\tpublic function __construct($api, $stylesheet = null, $customSlug = null, $checkPeriod = 12, $optionName = '') {\n\t\t\t$this->api = $api;\n\n\t\t\tparent::__construct($api->getRepositoryUrl(), $stylesheet, $customSlug, $checkPeriod, $optionName);\n\n\t\t\t$this->api->setHttpFilterName($this->getUniqueName('request_update_options'));\n\t\t\t$this->api->setStrategyFilterName($this->getUniqueName('vcs_update_detection_strategies'));\n\t\t\t$this->api->setSlug($this->slug);\n\t\t}\n\n\t\tpublic function requestUpdate() {\n\t\t\t$api = $this->api;\n\t\t\t$api->setLocalDirectory($this->package->getAbsoluteDirectoryPath());\n\n\t\t\t$update = new Theme\\Update();\n\t\t\t$update->slug = $this->slug;\n\n\t\t\t//Figure out which reference (tag or branch) we'll use to get the latest version of the theme.\n\t\t\t$updateSource = $api->chooseReference($this->branch);\n\t\t\tif ( $updateSource ) {\n\t\t\t\t$ref = $updateSource->name;\n\t\t\t\t$update->download_url = $updateSource->downloadUrl;\n\t\t\t} else {\n\t\t\t\tdo_action(\n\t\t\t\t\t'puc_api_error',\n\t\t\t\t\tnew \\WP_Error(\n\t\t\t\t\t\t'puc-no-update-source',\n\t\t\t\t\t\t'Could not retrieve version information from the repository. '\n\t\t\t\t\t\t. 'This usually means that the update checker either can\\'t connect '\n\t\t\t\t\t\t. 'to the repository or it\\'s configured incorrectly.'\n\t\t\t\t\t),\n\t\t\t\t\tnull, null, $this->slug\n\t\t\t\t);\n\t\t\t\t$ref = $this->branch;\n\t\t\t}\n\n\t\t\t//Get headers from the main stylesheet in this branch/tag. Its \"Version\" header and other metadata\n\t\t\t//are what the WordPress install will actually see after upgrading, so they take precedence over releases/tags.\n\t\t\t$remoteHeader = $this->package->getFileHeader($api->getRemoteFile('style.css', $ref));\n\t\t\t$update->version = Utils::findNotEmpty(array(\n\t\t\t\t$remoteHeader['Version'],\n\t\t\t\tUtils::get($updateSource, 'version'),\n\t\t\t));\n\n\t\t\t//The details URL defaults to the Theme URI header or the repository URL.\n\t\t\t$update->details_url = Utils::findNotEmpty(array(\n\t\t\t\t$remoteHeader['ThemeURI'],\n\t\t\t\t$this->package->getHeaderValue('ThemeURI'),\n\t\t\t\t$this->metadataUrl,\n\t\t\t));\n\n\t\t\tif ( empty($update->version) ) {\n\t\t\t\t//It looks like we didn't find a valid update after all.\n\t\t\t\t$update = null;\n\t\t\t}\n\n\t\t\t$update = $this->filterUpdateResult($update);\n\t\t\treturn $update;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/ReleaseFilteringFeature.php","ext":"php","size":3180,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !trait_exists(ReleaseFilteringFeature::class, false) ) :\n\n\ttrait ReleaseFilteringFeature {\n\t\t/**\n\t\t * @var callable|null\n\t\t */\n\t\tprotected $releaseFilterCallback = null;\n\t\t/**\n\t\t * @var int\n\t\t */\n\t\tprotected $releaseFilterMaxReleases = 1;\n\t\t/**\n\t\t * @var string One of the Api::RELEASE_FILTER_* constants.\n\t\t */\n\t\tprotected $releaseFilterByType = Api::RELEASE_FILTER_SKIP_PRERELEASE;\n\n\t\t/**\n\t\t * Set a custom release filter.\n\t\t *\n\t\t * Setting a new filter will override the old filter, if any.\n\t\t *\n\t\t * @param callable $callback A callback that accepts a version number and a release\n\t\t *                           object, and returns a boolean.\n\t\t * @param int $releaseTypes  One of the Api::RELEASE_FILTER_* constants.\n\t\t * @param int $maxReleases   Optional. The maximum number of recent releases to examine\n\t\t *                           when trying to find a release that matches the filter. 1 to 100.\n\t\t * @return $this\n\t\t */\n\t\tpublic function setReleaseFilter(\n\t\t\t$callback,\n\t\t\t$releaseTypes = Api::RELEASE_FILTER_SKIP_PRERELEASE,\n\t\t\t$maxReleases = 20\n\t\t) {\n\t\t\tif ( $maxReleases > 100 ) {\n\t\t\t\tthrow new \\InvalidArgumentException(sprintf(\n\t\t\t\t\t'The max number of releases is too high (%d). It must be 100 or less.',\n\t\t\t\t\t$maxReleases\n\t\t\t\t));\n\t\t\t} else if ( $maxReleases < 1 ) {\n\t\t\t\tthrow new \\InvalidArgumentException(sprintf(\n\t\t\t\t\t'The max number of releases is too low (%d). It must be at least 1.',\n\t\t\t\t\t$maxReleases\n\t\t\t\t));\n\t\t\t}\n\n\t\t\t$this->releaseFilterCallback = $callback;\n\t\t\t$this->releaseFilterByType = $releaseTypes;\n\t\t\t$this->releaseFilterMaxReleases = $maxReleases;\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * Filter releases by their version number.\n\t\t *\n\t\t * @param string $regex A regular expression. The release version number must match this regex.\n\t\t * @param int $releaseTypes\n\t\t * @param int $maxReleasesToExamine\n\t\t * @return $this\n\t\t * @noinspection PhpUnused -- Public API\n\t\t */\n\t\tpublic function setReleaseVersionFilter(\n\t\t\t$regex,\n\t\t\t$releaseTypes = Api::RELEASE_FILTER_SKIP_PRERELEASE,\n\t\t\t$maxReleasesToExamine = 20\n\t\t) {\n\t\t\treturn $this->setReleaseFilter(\n\t\t\t\tfunction ($versionNumber) use ($regex) {\n\t\t\t\t\treturn (preg_match($regex, $versionNumber) === 1);\n\t\t\t\t},\n\t\t\t\t$releaseTypes,\n\t\t\t\t$maxReleasesToExamine\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * @param string $versionNumber The detected release version number.\n\t\t * @param object $releaseObject Varies depending on the host/API.\n\t\t * @return bool\n\t\t */\n\t\tprotected function matchesCustomReleaseFilter($versionNumber, $releaseObject) {\n\t\t\tif ( !is_callable($this->releaseFilterCallback) ) {\n\t\t\t\treturn true; //No custom filter.\n\t\t\t}\n\t\t\treturn call_user_func($this->releaseFilterCallback, $versionNumber, $releaseObject);\n\t\t}\n\n\t\t/**\n\t\t * @return bool\n\t\t */\n\t\tprotected function shouldSkipPreReleases() {\n\t\t\t//Maybe this could be a bitfield in the future, if we need to support\n\t\t\t//more release types.\n\t\t\treturn ($this->releaseFilterByType !== Api::RELEASE_FILTER_ALL);\n\t\t}\n\n\t\t/**\n\t\t * @return bool\n\t\t */\n\t\tprotected function hasCustomReleaseFilter() {\n\t\t\treturn isset($this->releaseFilterCallback) && is_callable($this->releaseFilterCallback);\n\t\t}\n\t}\n\nendif;"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/GitHubApi.php","ext":"php","size":13740,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nuse Parsedown;\n\nif ( !class_exists(GitHubApi::class, false) ):\n\n\tclass GitHubApi extends Api {\n\t\tuse ReleaseAssetSupport;\n\t\tuse ReleaseFilteringFeature;\n\n\t\t/**\n\t\t * @var string GitHub username.\n\t\t */\n\t\tprotected $userName;\n\t\t/**\n\t\t * @var string GitHub repository name.\n\t\t */\n\t\tprotected $repositoryName;\n\n\t\t/**\n\t\t * @var string Either a fully qualified repository URL, or just \"user/repo-name\".\n\t\t */\n\t\tprotected $repositoryUrl;\n\n\t\t/**\n\t\t * @var string GitHub authentication token. Optional.\n\t\t */\n\t\tprotected $accessToken;\n\n\t\t/**\n\t\t * @var bool\n\t\t */\n\t\tprivate $downloadFilterAdded = false;\n\n\t\tpublic function __construct($repositoryUrl, $accessToken = null) {\n\t\t\t$path = wp_parse_url($repositoryUrl, PHP_URL_PATH);\n\t\t\tif ( preg_match('@^/?(?P<username>[^/]+?)/(?P<repository>[^/#?&]+?)/?$@', $path, $matches) ) {\n\t\t\t\t$this->userName = $matches['username'];\n\t\t\t\t$this->repositoryName = $matches['repository'];\n\t\t\t} else {\n\t\t\t\tthrow new \\InvalidArgumentException('Invalid GitHub repository URL: \"' . $repositoryUrl . '\"');\n\t\t\t}\n\n\t\t\tparent::__construct($repositoryUrl, $accessToken);\n\t\t}\n\n\t\t/**\n\t\t * Get the latest release from GitHub.\n\t\t *\n\t\t * @return Reference|null\n\t\t */\n\t\tpublic function getLatestRelease() {\n\t\t\t//The \"latest release\" endpoint returns one release and always skips pre-releases,\n\t\t\t//so we can only use it if that's compatible with the current filter settings.\n\t\t\tif (\n\t\t\t\t$this->shouldSkipPreReleases()\n\t\t\t\t&& (\n\t\t\t\t\t($this->releaseFilterMaxReleases === 1) || !$this->hasCustomReleaseFilter()\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t//Just get the latest release.\n\t\t\t\t$release = $this->api('/repos/:user/:repo/releases/latest');\n\t\t\t\tif ( is_wp_error($release) || !is_object($release) || !isset($release->tag_name) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t$foundReleases = array($release);\n\t\t\t} else {\n\t\t\t\t//Get a list of the most recent releases.\n\t\t\t\t$foundReleases = $this->api(\n\t\t\t\t\t'/repos/:user/:repo/releases',\n\t\t\t\t\tarray('per_page' => $this->releaseFilterMaxReleases)\n\t\t\t\t);\n\t\t\t\tif ( is_wp_error($foundReleases) || !is_array($foundReleases) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tforeach ($foundReleases as $release) {\n\t\t\t\t//Always skip drafts.\n\t\t\t\tif ( isset($release->draft) && !empty($release->draft) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//Skip pre-releases unless specifically included.\n\t\t\t\tif (\n\t\t\t\t\t$this->shouldSkipPreReleases()\n\t\t\t\t\t&& isset($release->prerelease)\n\t\t\t\t\t&& !empty($release->prerelease)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$versionNumber = ltrim($release->tag_name, 'v'); //Remove the \"v\" prefix from \"v1.2.3\".\n\n\t\t\t\t//Custom release filtering.\n\t\t\t\tif ( !$this->matchesCustomReleaseFilter($versionNumber, $release) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$reference = new Reference(array(\n\t\t\t\t\t'name'        => $release->tag_name,\n\t\t\t\t\t'version'     => $versionNumber,\n\t\t\t\t\t'downloadUrl' => $release->zipball_url,\n\t\t\t\t\t'updated'     => $release->created_at,\n\t\t\t\t\t'apiResponse' => $release,\n\t\t\t\t));\n\n\t\t\t\tif ( isset($release->assets[0]) ) {\n\t\t\t\t\t$reference->downloadCount = $release->assets[0]->download_count;\n\t\t\t\t}\n\n\t\t\t\tif ( $this->releaseAssetsEnabled ) {\n\t\t\t\t\t//Use the first release asset that matches the specified regular expression.\n\t\t\t\t\tif ( isset($release->assets, $release->assets[0]) ) {\n\t\t\t\t\t\t$matchingAssets = array_values(array_filter($release->assets, array($this, 'matchesAssetFilter')));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$matchingAssets = array();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !empty($matchingAssets) ) {\n\t\t\t\t\t\tif ( $this->isAuthenticationEnabled() ) {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Keep in mind that we'll need to add an \"Accept\" header to download this asset.\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @see setUpdateDownloadHeaders()\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t$reference->downloadUrl = $matchingAssets[0]->url;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//It seems that browser_download_url only works for public repositories.\n\t\t\t\t\t\t\t//Using an access_token doesn't help. Maybe OAuth would work?\n\t\t\t\t\t\t\t$reference->downloadUrl = $matchingAssets[0]->browser_download_url;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$reference->downloadCount = $matchingAssets[0]->download_count;\n\t\t\t\t\t} else if ( $this->releaseAssetPreference === Api::REQUIRE_RELEASE_ASSETS ) {\n\t\t\t\t\t\t//None of the assets match the filter, and we're not allowed\n\t\t\t\t\t\t//to fall back to the auto-generated source ZIP.\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( !empty($release->body) ) {\n\t\t\t\t\t$reference->changelog = Parsedown::instance()->text($release->body);\n\t\t\t\t}\n\n\t\t\t\treturn $reference;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get the tag that looks like the highest version number.\n\t\t *\n\t\t * @return Reference|null\n\t\t */\n\t\tpublic function getLatestTag() {\n\t\t\t$tags = $this->api('/repos/:user/:repo/tags');\n\n\t\t\tif ( is_wp_error($tags) || !is_array($tags) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$versionTags = $this->sortTagsByVersion($tags);\n\t\t\tif ( empty($versionTags) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$tag = $versionTags[0];\n\t\t\treturn new Reference(array(\n\t\t\t\t'name'        => $tag->name,\n\t\t\t\t'version'     => ltrim($tag->name, 'v'),\n\t\t\t\t'downloadUrl' => $tag->zipball_url,\n\t\t\t\t'apiResponse' => $tag,\n\t\t\t));\n\t\t}\n\n\t\t/**\n\t\t * Get a branch by name.\n\t\t *\n\t\t * @param string $branchName\n\t\t * @return null|Reference\n\t\t */\n\t\tpublic function getBranch($branchName) {\n\t\t\t$branch = $this->api('/repos/:user/:repo/branches/' . $branchName);\n\t\t\tif ( is_wp_error($branch) || empty($branch) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$reference = new Reference(array(\n\t\t\t\t'name'        => $branch->name,\n\t\t\t\t'downloadUrl' => $this->buildArchiveDownloadUrl($branch->name),\n\t\t\t\t'apiResponse' => $branch,\n\t\t\t));\n\n\t\t\tif ( isset($branch->commit, $branch->commit->commit, $branch->commit->commit->author->date) ) {\n\t\t\t\t$reference->updated = $branch->commit->commit->author->date;\n\t\t\t}\n\n\t\t\treturn $reference;\n\t\t}\n\n\t\t/**\n\t\t * Get the latest commit that changed the specified file.\n\t\t *\n\t\t * @param string $filename\n\t\t * @param string $ref Reference name (e.g. branch or tag).\n\t\t * @return \\StdClass|null\n\t\t */\n\t\tpublic function getLatestCommit($filename, $ref = 'master') {\n\t\t\t$commits = $this->api(\n\t\t\t\t'/repos/:user/:repo/commits',\n\t\t\t\tarray(\n\t\t\t\t\t'path' => $filename,\n\t\t\t\t\t'sha'  => $ref,\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ( !is_wp_error($commits) && isset($commits[0]) ) {\n\t\t\t\treturn $commits[0];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get the timestamp of the latest commit that changed the specified branch or tag.\n\t\t *\n\t\t * @param string $ref Reference name (e.g. branch or tag).\n\t\t * @return string|null\n\t\t */\n\t\tpublic function getLatestCommitTime($ref) {\n\t\t\t$commits = $this->api('/repos/:user/:repo/commits', array('sha' => $ref));\n\t\t\tif ( !is_wp_error($commits) && isset($commits[0]) ) {\n\t\t\t\treturn $commits[0]->commit->author->date;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Perform a GitHub API request.\n\t\t *\n\t\t * @param string $url\n\t\t * @param array $queryParams\n\t\t * @return mixed|\\WP_Error\n\t\t */\n\t\tprotected function api($url, $queryParams = array()) {\n\t\t\t$baseUrl = $url;\n\t\t\t$url = $this->buildApiUrl($url, $queryParams);\n\n\t\t\t$options = array('timeout' => wp_doing_cron() ? 10 : 3);\n\t\t\tif ( $this->isAuthenticationEnabled() ) {\n\t\t\t\t$options['headers'] = array('Authorization' => $this->getAuthorizationHeader());\n\t\t\t}\n\n\t\t\tif ( !empty($this->httpFilterName) ) {\n\t\t\t\t$options = apply_filters($this->httpFilterName, $options);\n\t\t\t}\n\t\t\t$response = wp_remote_get($url, $options);\n\t\t\tif ( is_wp_error($response) ) {\n\t\t\t\tdo_action('puc_api_error', $response, null, $url, $this->slug);\n\t\t\t\treturn $response;\n\t\t\t}\n\n\t\t\t$code = wp_remote_retrieve_response_code($response);\n\t\t\t$body = wp_remote_retrieve_body($response);\n\t\t\tif ( $code === 200 ) {\n\t\t\t\t$document = json_decode($body);\n\t\t\t\treturn $document;\n\t\t\t}\n\n\t\t\t$error = new \\WP_Error(\n\t\t\t\t'puc-github-http-error',\n\t\t\t\tsprintf('GitHub API error. Base URL: \"%s\",  HTTP status code: %d.', $baseUrl, $code)\n\t\t\t);\n\t\t\tdo_action('puc_api_error', $error, $response, $url, $this->slug);\n\n\t\t\treturn $error;\n\t\t}\n\n\t\t/**\n\t\t * Build a fully qualified URL for an API request.\n\t\t *\n\t\t * @param string $url\n\t\t * @param array $queryParams\n\t\t * @return string\n\t\t */\n\t\tprotected function buildApiUrl($url, $queryParams) {\n\t\t\t$variables = array(\n\t\t\t\t'user' => $this->userName,\n\t\t\t\t'repo' => $this->repositoryName,\n\t\t\t);\n\t\t\tforeach ($variables as $name => $value) {\n\t\t\t\t$url = str_replace('/:' . $name, '/' . urlencode($value), $url);\n\t\t\t}\n\t\t\t$url = 'https://api.github.com' . $url;\n\n\t\t\tif ( !empty($queryParams) ) {\n\t\t\t\t$url = add_query_arg($queryParams, $url);\n\t\t\t}\n\n\t\t\treturn $url;\n\t\t}\n\n\t\t/**\n\t\t * Get the contents of a file from a specific branch or tag.\n\t\t *\n\t\t * @param string $path File name.\n\t\t * @param string $ref\n\t\t * @return null|string Either the contents of the file, or null if the file doesn't exist or there's an error.\n\t\t */\n\t\tpublic function getRemoteFile($path, $ref = 'master') {\n\t\t\t$apiUrl = '/repos/:user/:repo/contents/' . $path;\n\t\t\t$response = $this->api($apiUrl, array('ref' => $ref));\n\n\t\t\tif ( is_wp_error($response) || !isset($response->content) || ($response->encoding !== 'base64') ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn base64_decode($response->content);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to download a ZIP archive of the specified branch/tag/etc.\n\t\t *\n\t\t * @param string $ref\n\t\t * @return string\n\t\t */\n\t\tpublic function buildArchiveDownloadUrl($ref = 'master') {\n\t\t\t$url = sprintf(\n\t\t\t\t'https://api.github.com/repos/%1$s/%2$s/zipball/%3$s',\n\t\t\t\turlencode($this->userName),\n\t\t\t\turlencode($this->repositoryName),\n\t\t\t\turlencode($ref)\n\t\t\t);\n\t\t\treturn $url;\n\t\t}\n\n\t\t/**\n\t\t * Get a specific tag.\n\t\t *\n\t\t * @param string $tagName\n\t\t * @return void\n\t\t */\n\t\tpublic function getTag($tagName) {\n\t\t\t//The current GitHub update checker doesn't use getTag, so I didn't bother to implement it.\n\t\t\tthrow new \\LogicException('The ' . __METHOD__ . ' method is not implemented and should not be used.');\n\t\t}\n\n\t\tpublic function setAuthentication($credentials) {\n\t\t\tparent::setAuthentication($credentials);\n\t\t\t$this->accessToken = is_string($credentials) ? $credentials : null;\n\n\t\t\t//Optimization: Instead of filtering all HTTP requests, let's do it only when\n\t\t\t//WordPress is about to download an update.\n\t\t\tadd_filter('upgrader_pre_download', array($this, 'addHttpRequestFilter'), 10, 1); //WP 3.7+\n\t\t}\n\n\t\tprotected function getUpdateDetectionStrategies($configBranch) {\n\t\t\t$strategies = array();\n\n\t\t\tif ( $configBranch === 'master' || $configBranch === 'main') {\n\t\t\t\t//Use the latest release.\n\t\t\t\t$strategies[self::STRATEGY_LATEST_RELEASE] = array($this, 'getLatestRelease');\n\t\t\t\t//Failing that, use the tag with the highest version number.\n\t\t\t\t$strategies[self::STRATEGY_LATEST_TAG] = array($this, 'getLatestTag');\n\t\t\t}\n\n\t\t\t//Alternatively, just use the branch itself.\n\t\t\t$strategies[self::STRATEGY_BRANCH] = function () use ($configBranch) {\n\t\t\t\treturn $this->getBranch($configBranch);\n\t\t\t};\n\n\t\t\treturn $strategies;\n\t\t}\n\n\t\t/**\n\t\t * Get the unchanging part of a release asset URL. Used to identify download attempts.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprotected function getAssetApiBaseUrl() {\n\t\t\treturn sprintf(\n\t\t\t\t'//api.github.com/repos/%1$s/%2$s/releases/assets/',\n\t\t\t\t$this->userName,\n\t\t\t\t$this->repositoryName\n\t\t\t);\n\t\t}\n\n\t\tprotected function getFilterableAssetName($releaseAsset) {\n\t\t\tif ( isset($releaseAsset->name) ) {\n\t\t\t\treturn $releaseAsset->name;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @param bool $result\n\t\t * @return bool\n\t\t * @internal\n\t\t */\n\t\tpublic function addHttpRequestFilter($result) {\n\t\t\tif ( !$this->downloadFilterAdded && $this->isAuthenticationEnabled() ) {\n\t\t\t\t//phpcs:ignore WordPressVIPMinimum.Hooks.RestrictedHooks.http_request_args -- The callback doesn't change the timeout.\n\t\t\t\tadd_filter('http_request_args', array($this, 'setUpdateDownloadHeaders'), 10, 2);\n\t\t\t\tadd_action('requests-requests.before_redirect', array($this, 'removeAuthHeaderFromRedirects'), 10, 4);\n\t\t\t\t$this->downloadFilterAdded = true;\n\t\t\t}\n\t\t\treturn $result;\n\t\t}\n\n\t\t/**\n\t\t * Set the HTTP headers that are necessary to download updates from private repositories.\n\t\t *\n\t\t * See GitHub docs:\n\t\t *\n\t\t * @link https://developer.github.com/v3/repos/releases/#get-a-single-release-asset\n\t\t * @link https://developer.github.com/v3/auth/#basic-authentication\n\t\t *\n\t\t * @internal\n\t\t * @param array $requestArgs\n\t\t * @param string $url\n\t\t * @return array\n\t\t */\n\t\tpublic function setUpdateDownloadHeaders($requestArgs, $url = '') {\n\t\t\t//Is WordPress trying to download one of our release assets?\n\t\t\tif ( $this->releaseAssetsEnabled && (strpos($url, $this->getAssetApiBaseUrl()) !== false) ) {\n\t\t\t\t$requestArgs['headers']['Accept'] = 'application/octet-stream';\n\t\t\t}\n\t\t\t//Use Basic authentication, but only if the download is from our repository.\n\t\t\t$repoApiBaseUrl = $this->buildApiUrl('/repos/:user/:repo/', array());\n\t\t\tif ( $this->isAuthenticationEnabled() && (strpos($url, $repoApiBaseUrl)) === 0 ) {\n\t\t\t\t$requestArgs['headers']['Authorization'] = $this->getAuthorizationHeader();\n\t\t\t}\n\t\t\treturn $requestArgs;\n\t\t}\n\n\t\t/**\n\t\t * When following a redirect, the Requests library will automatically forward\n\t\t * the authorization header to other hosts. We don't want that because it breaks\n\t\t * AWS downloads and can leak authorization information.\n\t\t *\n\t\t * @param string $location\n\t\t * @param array $headers\n\t\t * @internal\n\t\t */\n\t\tpublic function removeAuthHeaderFromRedirects(&$location, &$headers) {\n\t\t\t$repoApiBaseUrl = $this->buildApiUrl('/repos/:user/:repo/', array());\n\t\t\tif ( strpos($location, $repoApiBaseUrl) === 0 ) {\n\t\t\t\treturn; //This request is going to GitHub, so it's fine.\n\t\t\t}\n\t\t\t//Remove the header.\n\t\t\tif ( isset($headers['Authorization']) ) {\n\t\t\t\tunset($headers['Authorization']);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Generate the value of the \"Authorization\" header.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprotected function getAuthorizationHeader() {\n\t\t\treturn 'Basic ' . base64_encode($this->userName . ':' . $this->accessToken);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/BitBucketApi.php","ext":"php","size":7354,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\OAuthSignature;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Utils;\n\nif ( !class_exists(BitBucketApi::class, false) ):\n\n\tclass BitBucketApi extends Api {\n\t\t/**\n\t\t * @var OAuthSignature\n\t\t */\n\t\tprivate $oauth = null;\n\n\t\t/**\n\t\t * @var string\n\t\t */\n\t\tprivate $username;\n\n\t\t/**\n\t\t * @var string\n\t\t */\n\t\tprivate $repository;\n\n\t\tpublic function __construct($repositoryUrl, $credentials = array()) {\n\t\t\t$path = wp_parse_url($repositoryUrl, PHP_URL_PATH);\n\t\t\tif ( preg_match('@^/?(?P<username>[^/]+?)/(?P<repository>[^/#?&]+?)/?$@', $path, $matches) ) {\n\t\t\t\t$this->username = $matches['username'];\n\t\t\t\t$this->repository = $matches['repository'];\n\t\t\t} else {\n\t\t\t\tthrow new \\InvalidArgumentException('Invalid BitBucket repository URL: \"' . $repositoryUrl . '\"');\n\t\t\t}\n\n\t\t\tparent::__construct($repositoryUrl, $credentials);\n\t\t}\n\n\t\tprotected function getUpdateDetectionStrategies($configBranch) {\n\t\t\t$strategies = array(\n\t\t\t\tself::STRATEGY_STABLE_TAG => function () use ($configBranch) {\n\t\t\t\t\treturn $this->getStableTag($configBranch);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif ( ($configBranch === 'master' || $configBranch === 'main') ) {\n\t\t\t\t$strategies[self::STRATEGY_LATEST_TAG] = array($this, 'getLatestTag');\n\t\t\t}\n\n\t\t\t$strategies[self::STRATEGY_BRANCH] = function () use ($configBranch) {\n\t\t\t\treturn $this->getBranch($configBranch);\n\t\t\t};\n\t\t\treturn $strategies;\n\t\t}\n\n\t\tpublic function getBranch($branchName) {\n\t\t\t$branch = $this->api('/refs/branches/' . $branchName);\n\t\t\tif ( is_wp_error($branch) || empty($branch) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//The \"/src/{stuff}/{path}\" endpoint doesn't seem to handle branch names that contain slashes.\n\t\t\t//If we don't encode the slash, we get a 404. If we encode it as \"%2F\", we get a 401.\n\t\t\t//To avoid issues, if the branch name is not URL-safe, let's use the commit hash instead.\n\t\t\t$ref = $branch->name;\n\t\t\tif ((urlencode($ref) !== $ref) && isset($branch->target->hash)) {\n\t\t\t\t$ref = $branch->target->hash;\n\t\t\t}\n\n\t\t\treturn new Reference(array(\n\t\t\t\t'name' => $ref,\n\t\t\t\t'updated' => $branch->target->date,\n\t\t\t\t'downloadUrl' => $this->getDownloadUrl($branch->name),\n\t\t\t));\n\t\t}\n\n\t\t/**\n\t\t * Get a specific tag.\n\t\t *\n\t\t * @param string $tagName\n\t\t * @return Reference|null\n\t\t */\n\t\tpublic function getTag($tagName) {\n\t\t\t$tag = $this->api('/refs/tags/' . $tagName);\n\t\t\tif ( is_wp_error($tag) || empty($tag) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn new Reference(array(\n\t\t\t\t'name' => $tag->name,\n\t\t\t\t'version' => ltrim($tag->name, 'v'),\n\t\t\t\t'updated' => $tag->target->date,\n\t\t\t\t'downloadUrl' => $this->getDownloadUrl($tag->name),\n\t\t\t));\n\t\t}\n\n\t\t/**\n\t\t * Get the tag that looks like the highest version number.\n\t\t *\n\t\t * @return Reference|null\n\t\t */\n\t\tpublic function getLatestTag() {\n\t\t\t$tags = $this->api('/refs/tags?sort=-target.date');\n\t\t\tif ( !isset($tags, $tags->values) || !is_array($tags->values) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//Filter and sort the list of tags.\n\t\t\t$versionTags = $this->sortTagsByVersion($tags->values);\n\n\t\t\t//Return the first result.\n\t\t\tif ( !empty($versionTags) ) {\n\t\t\t\t$tag = $versionTags[0];\n\t\t\t\treturn new Reference(array(\n\t\t\t\t\t'name' => $tag->name,\n\t\t\t\t\t'version' => ltrim($tag->name, 'v'),\n\t\t\t\t\t'updated' => $tag->target->date,\n\t\t\t\t\t'downloadUrl' => $this->getDownloadUrl($tag->name),\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get the tag/ref specified by the \"Stable tag\" header in the readme.txt of a given branch.\n\t\t *\n\t\t * @param string $branch\n\t\t * @return null|Reference\n\t\t */\n\t\tprotected function getStableTag($branch) {\n\t\t\t$remoteReadme = $this->getRemoteReadme($branch);\n\t\t\tif ( !empty($remoteReadme['stable_tag']) ) {\n\t\t\t\t$tag = $remoteReadme['stable_tag'];\n\n\t\t\t\t//You can explicitly opt out of using tags by setting \"Stable tag\" to\n\t\t\t\t//\"trunk\" or the name of the current branch.\n\t\t\t\tif ( ($tag === $branch) || ($tag === 'trunk') ) {\n\t\t\t\t\treturn $this->getBranch($branch);\n\t\t\t\t}\n\n\t\t\t\treturn $this->getTag($tag);\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @param string $ref\n\t\t * @return string\n\t\t */\n\t\tprotected function getDownloadUrl($ref) {\n\t\t\treturn sprintf(\n\t\t\t\t'https://bitbucket.org/%s/%s/get/%s.zip',\n\t\t\t\t$this->username,\n\t\t\t\t$this->repository,\n\t\t\t\t$ref\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Get the contents of a file from a specific branch or tag.\n\t\t *\n\t\t * @param string $path File name.\n\t\t * @param string $ref\n\t\t * @return null|string Either the contents of the file, or null if the file doesn't exist or there's an error.\n\t\t */\n\t\tpublic function getRemoteFile($path, $ref = 'master') {\n\t\t\t$response = $this->api('src/' . $ref . '/' . ltrim($path));\n\t\t\tif ( is_wp_error($response) || !is_string($response) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn $response;\n\t\t}\n\n\t\t/**\n\t\t * Get the timestamp of the latest commit that changed the specified branch or tag.\n\t\t *\n\t\t * @param string $ref Reference name (e.g. branch or tag).\n\t\t * @return string|null\n\t\t */\n\t\tpublic function getLatestCommitTime($ref) {\n\t\t\t$response = $this->api('commits/' . $ref);\n\t\t\tif ( isset($response->values, $response->values[0], $response->values[0]->date) ) {\n\t\t\t\treturn $response->values[0]->date;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Perform a BitBucket API 2.0 request.\n\t\t *\n\t\t * @param string $url\n\t\t * @param string $version\n\t\t * @return mixed|\\WP_Error\n\t\t */\n\t\tpublic function api($url, $version = '2.0') {\n\t\t\t$url = ltrim($url, '/');\n\t\t\t$isSrcResource = Utils::startsWith($url, 'src/');\n\n\t\t\t$url = implode('/', array(\n\t\t\t\t'https://api.bitbucket.org',\n\t\t\t\t$version,\n\t\t\t\t'repositories',\n\t\t\t\t$this->username,\n\t\t\t\t$this->repository,\n\t\t\t\t$url\n\t\t\t));\n\t\t\t$baseUrl = $url;\n\n\t\t\tif ( $this->oauth ) {\n\t\t\t\t$url = $this->oauth->sign($url,'GET');\n\t\t\t}\n\n\t\t\t$options = array('timeout' => wp_doing_cron() ? 10 : 3);\n\t\t\tif ( !empty($this->httpFilterName) ) {\n\t\t\t\t$options = apply_filters($this->httpFilterName, $options);\n\t\t\t}\n\t\t\t$response = wp_remote_get($url, $options);\n\t\t\tif ( is_wp_error($response) ) {\n\t\t\t\tdo_action('puc_api_error', $response, null, $url, $this->slug);\n\t\t\t\treturn $response;\n\t\t\t}\n\n\t\t\t$code = wp_remote_retrieve_response_code($response);\n\t\t\t$body = wp_remote_retrieve_body($response);\n\t\t\tif ( $code === 200 ) {\n\t\t\t\tif ( $isSrcResource ) {\n\t\t\t\t\t//Most responses are JSON-encoded, but src resources just\n\t\t\t\t\t//return raw file contents.\n\t\t\t\t\t$document = $body;\n\t\t\t\t} else {\n\t\t\t\t\t$document = json_decode($body);\n\t\t\t\t}\n\t\t\t\treturn $document;\n\t\t\t}\n\n\t\t\t$error = new \\WP_Error(\n\t\t\t\t'puc-bitbucket-http-error',\n\t\t\t\tsprintf('BitBucket API error. Base URL: \"%s\",  HTTP status code: %d.', $baseUrl, $code)\n\t\t\t);\n\t\t\tdo_action('puc_api_error', $error, $response, $url, $this->slug);\n\n\t\t\treturn $error;\n\t\t}\n\n\t\t/**\n\t\t * @param array $credentials\n\t\t */\n\t\tpublic function setAuthentication($credentials) {\n\t\t\tparent::setAuthentication($credentials);\n\n\t\t\tif ( !empty($credentials) && !empty($credentials['consumer_key']) ) {\n\t\t\t\t$this->oauth = new OAuthSignature(\n\t\t\t\t\t$credentials['consumer_key'],\n\t\t\t\t\t$credentials['consumer_secret']\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$this->oauth = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic function signDownloadUrl($url) {\n\t\t\t//Add authentication data to download URLs. Since OAuth signatures incorporate\n\t\t\t//timestamps, we have to do this immediately before inserting the update. Otherwise,\n\t\t\t//authentication could fail due to a stale timestamp.\n\t\t\tif ( $this->oauth ) {\n\t\t\t\t$url = $this->oauth->sign($url);\n\t\t\t}\n\t\t\treturn $url;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/BaseChecker.php","ext":"php","size":547,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !interface_exists(BaseChecker::class, false) ):\n\n\tinterface BaseChecker {\n\t\t/**\n\t\t * Set the repository branch to use for updates. Defaults to 'master'.\n\t\t *\n\t\t * @param string $branch\n\t\t * @return $this\n\t\t */\n\t\tpublic function setBranch($branch);\n\n\t\t/**\n\t\t * Set authentication credentials.\n\t\t *\n\t\t * @param array|string $credentials\n\t\t * @return $this\n\t\t */\n\t\tpublic function setAuthentication($credentials);\n\n\t\t/**\n\t\t * @return Api\n\t\t */\n\t\tpublic function getVcsApi();\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/VcsCheckerMethods.php","ext":"php","size":1286,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !trait_exists(VcsCheckerMethods::class, false) ) :\n\n\ttrait VcsCheckerMethods {\n\t\t/**\n\t\t * @var string The branch where to look for updates. Defaults to \"master\".\n\t\t */\n\t\tprotected $branch = 'master';\n\n\t\t/**\n\t\t * @var Api Repository API client.\n\t\t */\n\t\tprotected $api = null;\n\n\t\tpublic function setBranch($branch) {\n\t\t\t$this->branch = $branch;\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * Set authentication credentials.\n\t\t *\n\t\t * @param array|string $credentials\n\t\t * @return $this\n\t\t */\n\t\tpublic function setAuthentication($credentials) {\n\t\t\t$this->api->setAuthentication($credentials);\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * @return Api\n\t\t */\n\t\tpublic function getVcsApi() {\n\t\t\treturn $this->api;\n\t\t}\n\n\t\tpublic function getUpdate() {\n\t\t\t$update = parent::getUpdate();\n\n\t\t\tif ( isset($update) && !empty($update->download_url) ) {\n\t\t\t\t$update->download_url = $this->api->signDownloadUrl($update->download_url);\n\t\t\t}\n\n\t\t\treturn $update;\n\t\t}\n\n\t\tpublic function onDisplayConfiguration($panel) {\n\t\t\tparent::onDisplayConfiguration($panel);\n\t\t\t$panel->row('Branch', $this->branch);\n\t\t\t$panel->row('Authentication enabled', $this->api->isAuthenticationEnabled() ? 'Yes' : 'No');\n\t\t\t$panel->row('API client', get_class($this->api));\n\t\t}\n\t}\n\nendif;"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/ReleaseAssetSupport.php","ext":"php","size":2383,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !trait_exists(ReleaseAssetSupport::class, false) ) :\n\n\ttrait ReleaseAssetSupport {\n\t\t/**\n\t\t * @var bool Whether to download release assets instead of the auto-generated\n\t\t *           source code archives.\n\t\t */\n\t\tprotected $releaseAssetsEnabled = false;\n\n\t\t/**\n\t\t * @var string|null Regular expression that's used to filter release assets\n\t\t *                  by file name or URL. Optional.\n\t\t */\n\t\tprotected $assetFilterRegex = null;\n\n\t\t/**\n\t\t * How to handle releases that don't have any matching release assets.\n\t\t *\n\t\t * @var int\n\t\t */\n\t\tprotected $releaseAssetPreference = Api::PREFER_RELEASE_ASSETS;\n\n\t\t/**\n\t\t * Enable updating via release assets.\n\t\t *\n\t\t * If the latest release contains no usable assets, the update checker\n\t\t * will fall back to using the automatically generated ZIP archive.\n\t\t *\n\t\t * @param string|null $nameRegex Optional. Use only those assets where\n\t\t *                               the file name or URL matches this regex.\n\t\t * @param int $preference Optional. How to handle releases that don't have\n\t\t *                        any matching release assets.\n\t\t */\n\t\tpublic function enableReleaseAssets($nameRegex = null, $preference = Api::PREFER_RELEASE_ASSETS) {\n\t\t\t$this->releaseAssetsEnabled = true;\n\t\t\t$this->assetFilterRegex = $nameRegex;\n\t\t\t$this->releaseAssetPreference = $preference;\n\t\t}\n\n\t\t/**\n\t\t * Disable release assets.\n\t\t *\n\t\t * @return void\n\t\t * @noinspection PhpUnused -- Public API\n\t\t */\n\t\tpublic function disableReleaseAssets() {\n\t\t\t$this->releaseAssetsEnabled = false;\n\t\t\t$this->assetFilterRegex = null;\n\t\t}\n\n\t\t/**\n\t\t * Does the specified asset match the name regex?\n\t\t *\n\t\t * @param mixed $releaseAsset Data type and structure depend on the host/API.\n\t\t * @return bool\n\t\t */\n\t\tprotected function matchesAssetFilter($releaseAsset) {\n\t\t\tif ( $this->assetFilterRegex === null ) {\n\t\t\t\t//The default is to accept all assets.\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t$name = $this->getFilterableAssetName($releaseAsset);\n\t\t\tif ( !is_string($name) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (bool)preg_match($this->assetFilterRegex, $releaseAsset->name);\n\t\t}\n\n\t\t/**\n\t\t * Get the part of asset data that will be checked against the filter regex.\n\t\t *\n\t\t * @param mixed $releaseAsset\n\t\t * @return string|null\n\t\t */\n\t\tabstract protected function getFilterableAssetName($releaseAsset);\n\t}\n\nendif;"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/Reference.php","ext":"php","size":1122,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !class_exists(Reference::class, false) ):\n\n\t/**\n\t * This class represents a VCS branch or tag. It's intended as a read only, short-lived container\n\t * that only exists to provide a limited degree of type checking.\n\t *\n\t * @property string $name\n\t * @property string|null version\n\t * @property string $downloadUrl\n\t * @property string $updated\n\t *\n\t * @property string|null $changelog\n\t * @property int|null $downloadCount\n\t */\n\tclass Reference {\n\t\tprivate $properties = array();\n\n\t\tpublic function __construct($properties = array()) {\n\t\t\t$this->properties = $properties;\n\t\t}\n\n\t\t/**\n\t\t * @param string $name\n\t\t * @return mixed|null\n\t\t */\n\t\tpublic function __get($name) {\n\t\t\treturn array_key_exists($name, $this->properties) ? $this->properties[$name] : null;\n\t\t}\n\n\t\t/**\n\t\t * @param string $name\n\t\t * @param mixed $value\n\t\t */\n\t\tpublic function __set($name, $value) {\n\t\t\t$this->properties[$name] = $value;\n\t\t}\n\n\t\t/**\n\t\t * @param string $name\n\t\t * @return bool\n\t\t */\n\t\tpublic function __isset($name) {\n\t\t\treturn isset($this->properties[$name]);\n\t\t}\n\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/GitLabApi.php","ext":"php","size":11721,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !class_exists(GitLabApi::class, false) ):\n\n\tclass GitLabApi extends Api {\n\t\tuse ReleaseAssetSupport;\n\t\tuse ReleaseFilteringFeature;\n\n\t\t/**\n\t\t * @var string GitLab username.\n\t\t */\n\t\tprotected $userName;\n\n\t\t/**\n\t\t * @var string GitLab server host.\n\t\t */\n\t\tprotected $repositoryHost;\n\n\t\t/**\n\t\t * @var string Protocol used by this GitLab server: \"http\" or \"https\".\n\t\t */\n\t\tprotected $repositoryProtocol = 'https';\n\n\t\t/**\n\t\t * @var string GitLab repository name.\n\t\t */\n\t\tprotected $repositoryName;\n\n\t\t/**\n\t\t * @var string GitLab authentication token. Optional.\n\t\t */\n\t\tprotected $accessToken;\n\n\t\t/**\n\t\t * @deprecated\n\t\t * @var bool No longer used.\n\t\t */\n\t\tprotected $releasePackageEnabled = false;\n\n\t\tpublic function __construct($repositoryUrl, $accessToken = null, $subgroup = null) {\n\t\t\t//Parse the repository host to support custom hosts.\n\t\t\t$port = wp_parse_url($repositoryUrl, PHP_URL_PORT);\n\t\t\tif ( !empty($port) ) {\n\t\t\t\t$port = ':' . $port;\n\t\t\t}\n\t\t\t$this->repositoryHost = wp_parse_url($repositoryUrl, PHP_URL_HOST) . $port;\n\n\t\t\tif ( $this->repositoryHost !== 'gitlab.com' ) {\n\t\t\t\t$this->repositoryProtocol = wp_parse_url($repositoryUrl, PHP_URL_SCHEME);\n\t\t\t}\n\n\t\t\t//Find the repository information\n\t\t\t$path = wp_parse_url($repositoryUrl, PHP_URL_PATH);\n\t\t\tif ( preg_match('@^/?(?P<username>[^/]+?)/(?P<repository>[^/#?&]+?)/?$@', $path, $matches) ) {\n\t\t\t\t$this->userName = $matches['username'];\n\t\t\t\t$this->repositoryName = $matches['repository'];\n\t\t\t} elseif ( ($this->repositoryHost === 'gitlab.com') ) {\n\t\t\t\t//This is probably a repository in a subgroup, e.g. \"/organization/category/repo\".\n\t\t\t\t$parts = explode('/', trim($path, '/'));\n\t\t\t\tif ( count($parts) < 3 ) {\n\t\t\t\t\tthrow new \\InvalidArgumentException('Invalid GitLab.com repository URL: \"' . $repositoryUrl . '\"');\n\t\t\t\t}\n\t\t\t\t$lastPart = array_pop($parts);\n\t\t\t\t$this->userName = implode('/', $parts);\n\t\t\t\t$this->repositoryName = $lastPart;\n\t\t\t} else {\n\t\t\t\t//There could be subgroups in the URL:  gitlab.domain.com/group/subgroup/subgroup2/repository\n\t\t\t\tif ( $subgroup !== null ) {\n\t\t\t\t\t$path = str_replace(trailingslashit($subgroup), '', $path);\n\t\t\t\t}\n\n\t\t\t\t//This is not a traditional url, it could be gitlab is in a deeper subdirectory.\n\t\t\t\t//Get the path segments.\n\t\t\t\t$segments = explode('/', untrailingslashit(ltrim($path, '/')));\n\n\t\t\t\t//We need at least /user-name/repository-name/\n\t\t\t\tif ( count($segments) < 2 ) {\n\t\t\t\t\tthrow new \\InvalidArgumentException('Invalid GitLab repository URL: \"' . $repositoryUrl . '\"');\n\t\t\t\t}\n\n\t\t\t\t//Get the username and repository name.\n\t\t\t\t$usernameRepo = array_splice($segments, -2, 2);\n\t\t\t\t$this->userName = $usernameRepo[0];\n\t\t\t\t$this->repositoryName = $usernameRepo[1];\n\n\t\t\t\t//Append the remaining segments to the host if there are segments left.\n\t\t\t\tif ( count($segments) > 0 ) {\n\t\t\t\t\t$this->repositoryHost = trailingslashit($this->repositoryHost) . implode('/', $segments);\n\t\t\t\t}\n\n\t\t\t\t//Add subgroups to username.\n\t\t\t\tif ( $subgroup !== null ) {\n\t\t\t\t\t$this->userName = $usernameRepo[0] . '/' . untrailingslashit($subgroup);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparent::__construct($repositoryUrl, $accessToken);\n\t\t}\n\n\t\t/**\n\t\t * Get the latest release from GitLab.\n\t\t *\n\t\t * @return Reference|null\n\t\t */\n\t\tpublic function getLatestRelease() {\n\t\t\t$releases = $this->api('/:id/releases', array('per_page' => $this->releaseFilterMaxReleases));\n\t\t\tif ( is_wp_error($releases) || empty($releases) || !is_array($releases) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tforeach ($releases as $release) {\n\t\t\t\tif (\n\t\t\t\t\t//Skip invalid/unsupported releases.\n\t\t\t\t\t!is_object($release)\n\t\t\t\t\t|| !isset($release->tag_name)\n\t\t\t\t\t//Skip upcoming releases.\n\t\t\t\t\t|| (\n\t\t\t\t\t\t!empty($release->upcoming_release)\n\t\t\t\t\t\t&& $this->shouldSkipPreReleases()\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$versionNumber = ltrim($release->tag_name, 'v'); //Remove the \"v\" prefix from \"v1.2.3\".\n\n\t\t\t\t//Apply custom filters.\n\t\t\t\tif ( !$this->matchesCustomReleaseFilter($versionNumber, $release) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$downloadUrl = $this->findReleaseDownloadUrl($release);\n\t\t\t\tif ( empty($downloadUrl) ) {\n\t\t\t\t\t//The latest release doesn't have valid download URL.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( !empty($this->accessToken) ) {\n\t\t\t\t\t$downloadUrl = add_query_arg('private_token', $this->accessToken, $downloadUrl);\n\t\t\t\t}\n\n\t\t\t\treturn new Reference(array(\n\t\t\t\t\t'name'        => $release->tag_name,\n\t\t\t\t\t'version'     => $versionNumber,\n\t\t\t\t\t'downloadUrl' => $downloadUrl,\n\t\t\t\t\t'updated'     => $release->released_at,\n\t\t\t\t\t'apiResponse' => $release,\n\t\t\t\t));\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * @param object $release\n\t\t * @return string|null\n\t\t */\n\t\tprotected function findReleaseDownloadUrl($release) {\n\t\t\tif ( $this->releaseAssetsEnabled ) {\n\t\t\t\tif ( isset($release->assets, $release->assets->links) ) {\n\t\t\t\t\t//Use the first asset link where the URL matches the filter.\n\t\t\t\t\tforeach ($release->assets->links as $link) {\n\t\t\t\t\t\tif ( $this->matchesAssetFilter($link) ) {\n\t\t\t\t\t\t\treturn $link->url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( $this->releaseAssetPreference === Api::REQUIRE_RELEASE_ASSETS ) {\n\t\t\t\t\t//Falling back to source archives is not allowed, so give up.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Use the first source code archive that's in ZIP format.\n\t\t\tforeach ($release->assets->sources as $source) {\n\t\t\t\tif ( isset($source->format) && ($source->format === 'zip') ) {\n\t\t\t\t\treturn $source->url;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get the tag that looks like the highest version number.\n\t\t *\n\t\t * @return Reference|null\n\t\t */\n\t\tpublic function getLatestTag() {\n\t\t\t$tags = $this->api('/:id/repository/tags');\n\t\t\tif ( is_wp_error($tags) || empty($tags) || !is_array($tags) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$versionTags = $this->sortTagsByVersion($tags);\n\t\t\tif ( empty($versionTags) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$tag = $versionTags[0];\n\t\t\treturn new Reference(array(\n\t\t\t\t'name'        => $tag->name,\n\t\t\t\t'version'     => ltrim($tag->name, 'v'),\n\t\t\t\t'downloadUrl' => $this->buildArchiveDownloadUrl($tag->name),\n\t\t\t\t'apiResponse' => $tag,\n\t\t\t));\n\t\t}\n\n\t\t/**\n\t\t * Get a branch by name.\n\t\t *\n\t\t * @param string $branchName\n\t\t * @return null|Reference\n\t\t */\n\t\tpublic function getBranch($branchName) {\n\t\t\t$branch = $this->api('/:id/repository/branches/' . $branchName);\n\t\t\tif ( is_wp_error($branch) || empty($branch) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$reference = new Reference(array(\n\t\t\t\t'name'        => $branch->name,\n\t\t\t\t'downloadUrl' => $this->buildArchiveDownloadUrl($branch->name),\n\t\t\t\t'apiResponse' => $branch,\n\t\t\t));\n\n\t\t\tif ( isset($branch->commit, $branch->commit->committed_date) ) {\n\t\t\t\t$reference->updated = $branch->commit->committed_date;\n\t\t\t}\n\n\t\t\treturn $reference;\n\t\t}\n\n\t\t/**\n\t\t * Get the timestamp of the latest commit that changed the specified branch or tag.\n\t\t *\n\t\t * @param string $ref Reference name (e.g. branch or tag).\n\t\t * @return string|null\n\t\t */\n\t\tpublic function getLatestCommitTime($ref) {\n\t\t\t$commits = $this->api('/:id/repository/commits/', array('ref_name' => $ref));\n\t\t\tif ( is_wp_error($commits) || !is_array($commits) || !isset($commits[0]) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn $commits[0]->committed_date;\n\t\t}\n\n\t\t/**\n\t\t * Perform a GitLab API request.\n\t\t *\n\t\t * @param string $url\n\t\t * @param array $queryParams\n\t\t * @return mixed|\\WP_Error\n\t\t */\n\t\tprotected function api($url, $queryParams = array()) {\n\t\t\t$baseUrl = $url;\n\t\t\t$url = $this->buildApiUrl($url, $queryParams);\n\n\t\t\t$options = array('timeout' => wp_doing_cron() ? 10 : 3);\n\t\t\tif ( !empty($this->httpFilterName) ) {\n\t\t\t\t$options = apply_filters($this->httpFilterName, $options);\n\t\t\t}\n\n\t\t\t$response = wp_remote_get($url, $options);\n\t\t\tif ( is_wp_error($response) ) {\n\t\t\t\tdo_action('puc_api_error', $response, null, $url, $this->slug);\n\t\t\t\treturn $response;\n\t\t\t}\n\n\t\t\t$code = wp_remote_retrieve_response_code($response);\n\t\t\t$body = wp_remote_retrieve_body($response);\n\t\t\tif ( $code === 200 ) {\n\t\t\t\treturn json_decode($body);\n\t\t\t}\n\n\t\t\t$error = new \\WP_Error(\n\t\t\t\t'puc-gitlab-http-error',\n\t\t\t\tsprintf('GitLab API error. URL: \"%s\",  HTTP status code: %d.', $baseUrl, $code)\n\t\t\t);\n\t\t\tdo_action('puc_api_error', $error, $response, $url, $this->slug);\n\n\t\t\treturn $error;\n\t\t}\n\n\t\t/**\n\t\t * Build a fully qualified URL for an API request.\n\t\t *\n\t\t * @param string $url\n\t\t * @param array $queryParams\n\t\t * @return string\n\t\t */\n\t\tprotected function buildApiUrl($url, $queryParams) {\n\t\t\t$variables = array(\n\t\t\t\t'user' => $this->userName,\n\t\t\t\t'repo' => $this->repositoryName,\n\t\t\t\t'id'   => $this->userName . '/' . $this->repositoryName,\n\t\t\t);\n\n\t\t\tforeach ($variables as $name => $value) {\n\t\t\t\t$url = str_replace(\"/:{$name}\", '/' . urlencode($value), $url);\n\t\t\t}\n\n\t\t\t$url = substr($url, 1);\n\t\t\t$url = sprintf('%1$s://%2$s/api/v4/projects/%3$s', $this->repositoryProtocol, $this->repositoryHost, $url);\n\n\t\t\tif ( !empty($this->accessToken) ) {\n\t\t\t\t$queryParams['private_token'] = $this->accessToken;\n\t\t\t}\n\n\t\t\tif ( !empty($queryParams) ) {\n\t\t\t\t$url = add_query_arg($queryParams, $url);\n\t\t\t}\n\n\t\t\treturn $url;\n\t\t}\n\n\t\t/**\n\t\t * Get the contents of a file from a specific branch or tag.\n\t\t *\n\t\t * @param string $path File name.\n\t\t * @param string $ref\n\t\t * @return null|string Either the contents of the file, or null if the file doesn't exist or there's an error.\n\t\t */\n\t\tpublic function getRemoteFile($path, $ref = 'master') {\n\t\t\t$response = $this->api('/:id/repository/files/' . $path, array('ref' => $ref));\n\t\t\tif ( is_wp_error($response) || !isset($response->content) || $response->encoding !== 'base64' ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn base64_decode($response->content);\n\t\t}\n\n\t\t/**\n\t\t * Generate a URL to download a ZIP archive of the specified branch/tag/etc.\n\t\t *\n\t\t * @param string $ref\n\t\t * @return string\n\t\t */\n\t\tpublic function buildArchiveDownloadUrl($ref = 'master') {\n\t\t\t$url = sprintf(\n\t\t\t\t'%1$s://%2$s/api/v4/projects/%3$s/repository/archive.zip',\n\t\t\t\t$this->repositoryProtocol,\n\t\t\t\t$this->repositoryHost,\n\t\t\t\turlencode($this->userName . '/' . $this->repositoryName)\n\t\t\t);\n\t\t\t$url = add_query_arg('sha', urlencode($ref), $url);\n\n\t\t\tif ( !empty($this->accessToken) ) {\n\t\t\t\t$url = add_query_arg('private_token', $this->accessToken, $url);\n\t\t\t}\n\n\t\t\treturn $url;\n\t\t}\n\n\t\t/**\n\t\t * Get a specific tag.\n\t\t *\n\t\t * @param string $tagName\n\t\t * @return void\n\t\t */\n\t\tpublic function getTag($tagName) {\n\t\t\tthrow new \\LogicException('The ' . __METHOD__ . ' method is not implemented and should not be used.');\n\t\t}\n\n\t\tprotected function getUpdateDetectionStrategies($configBranch) {\n\t\t\t$strategies = array();\n\n\t\t\tif ( ($configBranch === 'main') || ($configBranch === 'master') ) {\n\t\t\t\t$strategies[self::STRATEGY_LATEST_RELEASE] = array($this, 'getLatestRelease');\n\t\t\t\t$strategies[self::STRATEGY_LATEST_TAG] = array($this, 'getLatestTag');\n\t\t\t}\n\n\t\t\t$strategies[self::STRATEGY_BRANCH] = function () use ($configBranch) {\n\t\t\t\treturn $this->getBranch($configBranch);\n\t\t\t};\n\n\t\t\treturn $strategies;\n\t\t}\n\n\t\tpublic function setAuthentication($credentials) {\n\t\t\tparent::setAuthentication($credentials);\n\t\t\t$this->accessToken = is_string($credentials) ? $credentials : null;\n\t\t}\n\n\t\t/**\n\t\t * Use release assets that link to GitLab generic packages (e.g. .zip files)\n\t\t * instead of automatically generated source archives.\n\t\t *\n\t\t * This is included for backwards compatibility with older versions of PUC.\n\t\t *\n\t\t * @return void\n\t\t * @deprecated   Use enableReleaseAssets() instead.\n\t\t * @noinspection PhpUnused -- Public API\n\t\t */\n\t\tpublic function enableReleasePackages() {\n\t\t\t$this->enableReleaseAssets(\n\t\t\t/** @lang RegExp */ '/\\.zip($|[?&#])/i',\n\t\t\t\tApi::REQUIRE_RELEASE_ASSETS\n\t\t\t);\n\t\t}\n\n\t\tprotected function getFilterableAssetName($releaseAsset) {\n\t\t\tif ( isset($releaseAsset->url) ) {\n\t\t\t\treturn $releaseAsset->url;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/PluginUpdateChecker.php","ext":"php","size":9106,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\n\nif ( !class_exists(PluginUpdateChecker::class, false) ):\n\n\tclass PluginUpdateChecker extends Plugin\\UpdateChecker implements BaseChecker {\n\t\tuse VcsCheckerMethods;\n\n\t\t/**\n\t\t * PluginUpdateChecker constructor.\n\t\t *\n\t\t * @param Api $api\n\t\t * @param string $pluginFile\n\t\t * @param string $slug\n\t\t * @param int $checkPeriod\n\t\t * @param string $optionName\n\t\t * @param string $muPluginFile\n\t\t */\n\t\tpublic function __construct($api, $pluginFile, $slug = '', $checkPeriod = 12, $optionName = '', $muPluginFile = '') {\n\t\t\t$this->api = $api;\n\n\t\t\tparent::__construct($api->getRepositoryUrl(), $pluginFile, $slug, $checkPeriod, $optionName, $muPluginFile);\n\n\t\t\t$this->api->setHttpFilterName($this->getUniqueName('request_info_options'));\n\t\t\t$this->api->setStrategyFilterName($this->getUniqueName('vcs_update_detection_strategies'));\n\t\t\t$this->api->setSlug($this->slug);\n\t\t}\n\n\t\tpublic function requestInfo($unusedParameter = null) {\n\t\t\t//We have to make several remote API requests to gather all the necessary info\n\t\t\t//which can take a while on slow networks.\n\t\t\tif ( function_exists('set_time_limit') ) {\n\t\t\t\t@set_time_limit(60);\n\t\t\t}\n\n\t\t\t$api = $this->api;\n\t\t\t$api->setLocalDirectory($this->package->getAbsoluteDirectoryPath());\n\n\t\t\t$info = new Plugin\\PluginInfo();\n\t\t\t$info->filename = $this->pluginFile;\n\t\t\t$info->slug = $this->slug;\n\n\t\t\t$this->setInfoFromHeader($this->package->getPluginHeader(), $info);\n\t\t\t$this->setIconsFromLocalAssets($info);\n\t\t\t$this->setBannersFromLocalAssets($info);\n\n\t\t\t//Pick a branch or tag.\n\t\t\t$updateSource = $api->chooseReference($this->branch);\n\t\t\tif ( $updateSource ) {\n\t\t\t\t$ref = $updateSource->name;\n\t\t\t\t$info->version = $updateSource->version;\n\t\t\t\t$info->last_updated = $updateSource->updated;\n\t\t\t\t$info->download_url = $updateSource->downloadUrl;\n\n\t\t\t\tif ( !empty($updateSource->changelog) ) {\n\t\t\t\t\t$info->sections['changelog'] = $updateSource->changelog;\n\t\t\t\t}\n\t\t\t\tif ( isset($updateSource->downloadCount) ) {\n\t\t\t\t\t$info->downloaded = $updateSource->downloadCount;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//There's probably a network problem or an authentication error.\n\t\t\t\tdo_action(\n\t\t\t\t\t'puc_api_error',\n\t\t\t\t\tnew \\WP_Error(\n\t\t\t\t\t\t'puc-no-update-source',\n\t\t\t\t\t\t'Could not retrieve version information from the repository. '\n\t\t\t\t\t\t. 'This usually means that the update checker either can\\'t connect '\n\t\t\t\t\t\t. 'to the repository or it\\'s configured incorrectly.'\n\t\t\t\t\t),\n\t\t\t\t\tnull, null, $this->slug\n\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//Get headers from the main plugin file in this branch/tag. Its \"Version\" header and other metadata\n\t\t\t//are what the WordPress install will actually see after upgrading, so they take precedence over releases/tags.\n\t\t\t$mainPluginFile = basename($this->pluginFile);\n\t\t\t$remotePlugin = $api->getRemoteFile($mainPluginFile, $ref);\n\t\t\tif ( !empty($remotePlugin) ) {\n\t\t\t\t$remoteHeader = $this->package->getFileHeader($remotePlugin);\n\t\t\t\t$this->setInfoFromHeader($remoteHeader, $info);\n\t\t\t}\n\n\t\t\t//Sanity check: Reject updates that don't have a version number.\n\t\t\t//This can happen when we're using a branch, and we either fail to retrieve the main plugin\n\t\t\t//file or the file doesn't have a \"Version\" header.\n\t\t\tif ( empty($info->version) ) {\n\t\t\t\tdo_action(\n\t\t\t\t\t'puc_api_error',\n\t\t\t\t\tnew \\WP_Error(\n\t\t\t\t\t\t'puc-no-plugin-version',\n\t\t\t\t\t\t'Could not find the version number in the repository.'\n\t\t\t\t\t),\n\t\t\t\t\tnull, null, $this->slug\n\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//Try parsing readme.txt. If it's formatted according to WordPress.org standards, it will contain\n\t\t\t//a lot of useful information like the required/tested WP version, changelog, and so on.\n\t\t\tif ( $this->readmeTxtExistsLocally() ) {\n\t\t\t\t$this->setInfoFromRemoteReadme($ref, $info);\n\t\t\t}\n\n\t\t\t//The changelog might be in a separate file.\n\t\t\tif ( empty($info->sections['changelog']) ) {\n\t\t\t\t$info->sections['changelog'] = $api->getRemoteChangelog($ref, $this->package->getAbsoluteDirectoryPath());\n\t\t\t\tif ( empty($info->sections['changelog']) ) {\n\t\t\t\t\t$info->sections['changelog'] = __('There is no changelog available.', 'plugin-update-checker');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( empty($info->last_updated) ) {\n\t\t\t\t//Fetch the latest commit that changed the tag or branch and use it as the \"last_updated\" date.\n\t\t\t\t$latestCommitTime = $api->getLatestCommitTime($ref);\n\t\t\t\tif ( $latestCommitTime !== null ) {\n\t\t\t\t\t$info->last_updated = $latestCommitTime;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$info = apply_filters($this->getUniqueName('request_info_result'), $info, null);\n\t\t\treturn $info;\n\t\t}\n\n\t\t/**\n\t\t * Check if the currently installed version has a readme.txt file.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tprotected function readmeTxtExistsLocally() {\n\t\t\treturn $this->package->fileExists($this->api->getLocalReadmeName());\n\t\t}\n\n\t\t/**\n\t\t * Copy plugin metadata from a file header to a Plugin Info object.\n\t\t *\n\t\t * @param array $fileHeader\n\t\t * @param Plugin\\PluginInfo $pluginInfo\n\t\t */\n\t\tprotected function setInfoFromHeader($fileHeader, $pluginInfo) {\n\t\t\t$headerToPropertyMap = array(\n\t\t\t\t'Version' => 'version',\n\t\t\t\t'Name' => 'name',\n\t\t\t\t'PluginURI' => 'homepage',\n\t\t\t\t'Author' => 'author',\n\t\t\t\t'AuthorName' => 'author',\n\t\t\t\t'AuthorURI' => 'author_homepage',\n\n\t\t\t\t'Requires WP' => 'requires',\n\t\t\t\t'Tested WP' => 'tested',\n\t\t\t\t'Requires at least' => 'requires',\n\t\t\t\t'Tested up to' => 'tested',\n\n\t\t\t\t'Requires PHP' => 'requires_php',\n\t\t\t);\n\t\t\tforeach ($headerToPropertyMap as $headerName => $property) {\n\t\t\t\tif ( isset($fileHeader[$headerName]) && !empty($fileHeader[$headerName]) ) {\n\t\t\t\t\t$pluginInfo->$property = $fileHeader[$headerName];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !empty($fileHeader['Description']) ) {\n\t\t\t\t$pluginInfo->sections['description'] = $fileHeader['Description'];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Copy plugin metadata from the remote readme.txt file.\n\t\t *\n\t\t * @param string $ref GitHub tag or branch where to look for the readme.\n\t\t * @param Plugin\\PluginInfo $pluginInfo\n\t\t */\n\t\tprotected function setInfoFromRemoteReadme($ref, $pluginInfo) {\n\t\t\t$readme = $this->api->getRemoteReadme($ref);\n\t\t\tif ( empty($readme) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isset($readme['sections']) ) {\n\t\t\t\t$pluginInfo->sections = array_merge($pluginInfo->sections, $readme['sections']);\n\t\t\t}\n\t\t\tif ( !empty($readme['tested_up_to']) ) {\n\t\t\t\t$pluginInfo->tested = $readme['tested_up_to'];\n\t\t\t}\n\t\t\tif ( !empty($readme['requires_at_least']) ) {\n\t\t\t\t$pluginInfo->requires = $readme['requires_at_least'];\n\t\t\t}\n\t\t\tif ( !empty($readme['requires_php']) ) {\n\t\t\t\t$pluginInfo->requires_php = $readme['requires_php'];\n\t\t\t}\n\n\t\t\tif ( isset($readme['upgrade_notice'], $readme['upgrade_notice'][$pluginInfo->version]) ) {\n\t\t\t\t$pluginInfo->upgrade_notice = $readme['upgrade_notice'][$pluginInfo->version];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Add icons from the currently installed version to a Plugin Info object.\n\t\t *\n\t\t * The icons should be in a subdirectory named \"assets\". Supported image formats\n\t\t * and file names are described here:\n\t\t * @link https://developer.wordpress.org/plugins/wordpress-org/plugin-assets/#plugin-icons\n\t\t *\n\t\t * @param Plugin\\PluginInfo $pluginInfo\n\t\t */\n\t\tprotected function setIconsFromLocalAssets($pluginInfo) {\n\t\t\t$icons = $this->getLocalAssetUrls(array(\n\t\t\t\t'icon.svg'         => 'svg',\n\t\t\t\t'icon-256x256.png' => '2x',\n\t\t\t\t'icon-256x256.jpg' => '2x',\n\t\t\t\t'icon-128x128.png' => '1x',\n\t\t\t\t'icon-128x128.jpg' => '1x',\n\t\t\t));\n\n\t\t\tif ( !empty($icons) ) {\n\t\t\t\t//The \"default\" key seems to be used only as last-resort fallback in WP core (5.8/5.9),\n\t\t\t\t//but we'll set it anyway in case some code somewhere needs it.\n\t\t\t\treset($icons);\n\t\t\t\t$firstKey = key($icons);\n\t\t\t\t$icons['default'] = $icons[$firstKey];\n\n\t\t\t\t$pluginInfo->icons = $icons;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Add banners from the currently installed version to a Plugin Info object.\n\t\t *\n\t\t * The banners should be in a subdirectory named \"assets\". Supported image formats\n\t\t * and file names are described here:\n\t\t * @link https://developer.wordpress.org/plugins/wordpress-org/plugin-assets/#plugin-headers\n\t\t *\n\t\t * @param Plugin\\PluginInfo $pluginInfo\n\t\t */\n\t\tprotected function setBannersFromLocalAssets($pluginInfo) {\n\t\t\t$banners = $this->getLocalAssetUrls(array(\n\t\t\t\t'banner-772x250.png' => 'high',\n\t\t\t\t'banner-772x250.jpg' => 'high',\n\t\t\t\t'banner-1544x500.png' => 'low',\n\t\t\t\t'banner-1544x500.jpg' => 'low',\n\t\t\t));\n\n\t\t\tif ( !empty($banners) ) {\n\t\t\t\t$pluginInfo->banners = $banners;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param array<string, string> $filesToKeys\n\t\t * @return array<string, string>\n\t\t */\n\t\tprotected function getLocalAssetUrls($filesToKeys) {\n\t\t\t$assetDirectory = $this->package->getAbsoluteDirectoryPath() . DIRECTORY_SEPARATOR . 'assets';\n\t\t\tif ( !is_dir($assetDirectory) ) {\n\t\t\t\treturn array();\n\t\t\t}\n\t\t\t$assetBaseUrl = trailingslashit(plugins_url('', $assetDirectory . '/imaginary.file'));\n\n\t\t\t$foundAssets = array();\n\t\t\tforeach ($filesToKeys as $fileName => $key) {\n\t\t\t\t$fullBannerPath = $assetDirectory . DIRECTORY_SEPARATOR . $fileName;\n\t\t\t\tif ( !isset($icons[$key]) && is_file($fullBannerPath) ) {\n\t\t\t\t\t$foundAssets[$key] = $assetBaseUrl . $fileName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $foundAssets;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Vcs/Api.php","ext":"php","size":9885,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nuse Parsedown;\nuse PucReadmeParser;\n\nif ( !class_exists(Api::class, false) ):\n\n\tabstract class Api {\n\t\tconst STRATEGY_LATEST_RELEASE = 'latest_release';\n\t\tconst STRATEGY_LATEST_TAG = 'latest_tag';\n\t\tconst STRATEGY_STABLE_TAG = 'stable_tag';\n\t\tconst STRATEGY_BRANCH = 'branch';\n\n\t\t/**\n\t\t * Consider all releases regardless of their version number or prerelease/upcoming\n\t\t * release status.\n\t\t */\n\t\tconst RELEASE_FILTER_ALL = 3;\n\n\t\t/**\n\t\t * Exclude releases that have the \"prerelease\" or \"upcoming release\" flag.\n\t\t *\n\t\t * This does *not* look for prerelease keywords like \"beta\" in the version number.\n\t\t * It only uses the data provided by the API. For example, on GitHub, you can\n\t\t * manually mark a release as a prerelease.\n\t\t */\n\t\tconst RELEASE_FILTER_SKIP_PRERELEASE = 1;\n\n\t\t/**\n\t\t * If there are no release assets or none of them match the configured filter,\n\t\t * fall back to the automatically generated source code archive.\n\t\t */\n\t\tconst PREFER_RELEASE_ASSETS = 1;\n\t\t/**\n\t\t * Skip releases that don't have any matching release assets.\n\t\t */\n\t\tconst REQUIRE_RELEASE_ASSETS = 2;\n\n\t\tprotected $tagNameProperty = 'name';\n\t\tprotected $slug = '';\n\n\t\t/**\n\t\t * @var string\n\t\t */\n\t\tprotected $repositoryUrl = '';\n\n\t\t/**\n\t\t * @var mixed Authentication details for private repositories. Format depends on service.\n\t\t */\n\t\tprotected $credentials = null;\n\n\t\t/**\n\t\t * @var string The filter tag that's used to filter options passed to wp_remote_get.\n\t\t * For example, \"puc_request_info_options-slug\" or \"puc_request_update_options_theme-slug\".\n\t\t */\n\t\tprotected $httpFilterName = '';\n\n\t\t/**\n\t\t * @var string The filter applied to the list of update detection strategies that\n\t\t * are used to find the latest version.\n\t\t */\n\t\tprotected $strategyFilterName = '';\n\n\t\t/**\n\t\t * @var string|null\n\t\t */\n\t\tprotected $localDirectory = null;\n\n\t\t/**\n\t\t * Api constructor.\n\t\t *\n\t\t * @param string $repositoryUrl\n\t\t * @param array|string|null $credentials\n\t\t */\n\t\tpublic function __construct($repositoryUrl, $credentials = null) {\n\t\t\t$this->repositoryUrl = $repositoryUrl;\n\t\t\t$this->setAuthentication($credentials);\n\t\t}\n\n\t\t/**\n\t\t * @return string\n\t\t */\n\t\tpublic function getRepositoryUrl() {\n\t\t\treturn $this->repositoryUrl;\n\t\t}\n\n\t\t/**\n\t\t * Figure out which reference (i.e. tag or branch) contains the latest version.\n\t\t *\n\t\t * @param string $configBranch Start looking in this branch.\n\t\t * @return null|Reference\n\t\t */\n\t\tpublic function chooseReference($configBranch) {\n\t\t\t$strategies = $this->getUpdateDetectionStrategies($configBranch);\n\n\t\t\tif ( !empty($this->strategyFilterName) ) {\n\t\t\t\t$strategies = apply_filters(\n\t\t\t\t\t$this->strategyFilterName,\n\t\t\t\t\t$strategies,\n\t\t\t\t\t$this->slug\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tforeach ($strategies as $strategy) {\n\t\t\t\t$reference = call_user_func($strategy);\n\t\t\t\tif ( !empty($reference) ) {\n\t\t\t\t\treturn $reference;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get an ordered list of strategies that can be used to find the latest version.\n\t\t *\n\t\t * The update checker will try each strategy in order until one of them\n\t\t * returns a valid reference.\n\t\t *\n\t\t * @param string $configBranch\n\t\t * @return array<callable> Array of callables that return Vcs_Reference objects.\n\t\t */\n\t\tabstract protected function getUpdateDetectionStrategies($configBranch);\n\n\t\t/**\n\t\t * Get the readme.txt file from the remote repository and parse it\n\t\t * according to the plugin readme standard.\n\t\t *\n\t\t * @param string $ref Tag or branch name.\n\t\t * @return array Parsed readme.\n\t\t */\n\t\tpublic function getRemoteReadme($ref = 'master') {\n\t\t\t$fileContents = $this->getRemoteFile($this->getLocalReadmeName(), $ref);\n\t\t\tif ( empty($fileContents) ) {\n\t\t\t\treturn array();\n\t\t\t}\n\n\t\t\t$parser = new PucReadmeParser();\n\t\t\treturn $parser->parse_readme_contents($fileContents);\n\t\t}\n\n\t\t/**\n\t\t * Get the case-sensitive name of the local readme.txt file.\n\t\t *\n\t\t * In most cases it should just be called \"readme.txt\", but some plugins call it \"README.txt\",\n\t\t * \"README.TXT\", or even \"Readme.txt\". Most VCS are case-sensitive so we need to know the correct\n\t\t * capitalization.\n\t\t *\n\t\t * Defaults to \"readme.txt\" (all lowercase).\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tpublic function getLocalReadmeName() {\n\t\t\tstatic $fileName = null;\n\t\t\tif ( $fileName !== null ) {\n\t\t\t\treturn $fileName;\n\t\t\t}\n\n\t\t\t$fileName = 'readme.txt';\n\t\t\tif ( isset($this->localDirectory) ) {\n\t\t\t\t$files = scandir($this->localDirectory);\n\t\t\t\tif ( !empty($files) ) {\n\t\t\t\t\tforeach ($files as $possibleFileName) {\n\t\t\t\t\t\tif ( strcasecmp($possibleFileName, 'readme.txt') === 0 ) {\n\t\t\t\t\t\t\t$fileName = $possibleFileName;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $fileName;\n\t\t}\n\n\t\t/**\n\t\t * Get a branch.\n\t\t *\n\t\t * @param string $branchName\n\t\t * @return Reference|null\n\t\t */\n\t\tabstract public function getBranch($branchName);\n\n\t\t/**\n\t\t * Get a specific tag.\n\t\t *\n\t\t * @param string $tagName\n\t\t * @return Reference|null\n\t\t */\n\t\tabstract public function getTag($tagName);\n\n\t\t/**\n\t\t * Get the tag that looks like the highest version number.\n\t\t * (Implementations should skip pre-release versions if possible.)\n\t\t *\n\t\t * @return Reference|null\n\t\t */\n\t\tabstract public function getLatestTag();\n\n\t\t/**\n\t\t * Check if a tag name string looks like a version number.\n\t\t *\n\t\t * @param string $name\n\t\t * @return bool\n\t\t */\n\t\tprotected function looksLikeVersion($name) {\n\t\t\t//Tag names may be prefixed with \"v\", e.g. \"v1.2.3\".\n\t\t\t$name = ltrim($name, 'v');\n\n\t\t\t//The version string must start with a number.\n\t\t\tif ( !is_numeric(substr($name, 0, 1)) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//The goal is to accept any SemVer-compatible or \"PHP-standardized\" version number.\n\t\t\treturn (preg_match('@^(\\d{1,5}?)(\\.\\d{1,10}?){0,4}?($|[abrdp+_\\-]|\\s)@i', $name) === 1);\n\t\t}\n\n\t\t/**\n\t\t * Check if a tag appears to be named like a version number.\n\t\t *\n\t\t * @param \\stdClass $tag\n\t\t * @return bool\n\t\t */\n\t\tprotected function isVersionTag($tag) {\n\t\t\t$property = $this->tagNameProperty;\n\t\t\treturn isset($tag->$property) && $this->looksLikeVersion($tag->$property);\n\t\t}\n\n\t\t/**\n\t\t * Sort a list of tags as if they were version numbers.\n\t\t * Tags that don't look like version number will be removed.\n\t\t *\n\t\t * @param \\stdClass[] $tags Array of tag objects.\n\t\t * @return \\stdClass[] Filtered array of tags sorted in descending order.\n\t\t */\n\t\tprotected function sortTagsByVersion($tags) {\n\t\t\t//Keep only those tags that look like version numbers.\n\t\t\t$versionTags = array_filter($tags, array($this, 'isVersionTag'));\n\t\t\t//Sort them in descending order.\n\t\t\tusort($versionTags, array($this, 'compareTagNames'));\n\n\t\t\treturn $versionTags;\n\t\t}\n\n\t\t/**\n\t\t * Compare two tags as if they were version number.\n\t\t *\n\t\t * @param \\stdClass $tag1 Tag object.\n\t\t * @param \\stdClass $tag2 Another tag object.\n\t\t * @return int\n\t\t */\n\t\tprotected function compareTagNames($tag1, $tag2) {\n\t\t\t$property = $this->tagNameProperty;\n\t\t\tif ( !isset($tag1->$property) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ( !isset($tag2->$property) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn -version_compare(ltrim($tag1->$property, 'v'), ltrim($tag2->$property, 'v'));\n\t\t}\n\n\t\t/**\n\t\t * Get the contents of a file from a specific branch or tag.\n\t\t *\n\t\t * @param string $path File name.\n\t\t * @param string $ref\n\t\t * @return null|string Either the contents of the file, or null if the file doesn't exist or there's an error.\n\t\t */\n\t\tabstract public function getRemoteFile($path, $ref = 'master');\n\n\t\t/**\n\t\t * Get the timestamp of the latest commit that changed the specified branch or tag.\n\t\t *\n\t\t * @param string $ref Reference name (e.g. branch or tag).\n\t\t * @return string|null\n\t\t */\n\t\tabstract public function getLatestCommitTime($ref);\n\n\t\t/**\n\t\t * Get the contents of the changelog file from the repository.\n\t\t *\n\t\t * @param string $ref\n\t\t * @param string $localDirectory Full path to the local plugin or theme directory.\n\t\t * @return null|string The HTML contents of the changelog.\n\t\t */\n\t\tpublic function getRemoteChangelog($ref, $localDirectory) {\n\t\t\t$filename = $this->findChangelogName($localDirectory);\n\t\t\tif ( empty($filename) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$changelog = $this->getRemoteFile($filename, $ref);\n\t\t\tif ( $changelog === null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn Parsedown::instance()->text($changelog);\n\t\t}\n\n\t\t/**\n\t\t * Guess the name of the changelog file.\n\t\t *\n\t\t * @param string $directory\n\t\t * @return string|null\n\t\t */\n\t\tprotected function findChangelogName($directory = null) {\n\t\t\tif ( !isset($directory) ) {\n\t\t\t\t$directory = $this->localDirectory;\n\t\t\t}\n\t\t\tif ( empty($directory) || !is_dir($directory) || ($directory === '.') ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t$possibleNames = array('CHANGES.md', 'CHANGELOG.md', 'changes.md', 'changelog.md');\n\t\t\t$files = scandir($directory);\n\t\t\t$foundNames = array_intersect($possibleNames, $files);\n\n\t\t\tif ( !empty($foundNames) ) {\n\t\t\t\treturn reset($foundNames);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Set authentication credentials.\n\t\t *\n\t\t * @param $credentials\n\t\t */\n\t\tpublic function setAuthentication($credentials) {\n\t\t\t$this->credentials = $credentials;\n\t\t}\n\n\t\tpublic function isAuthenticationEnabled() {\n\t\t\treturn !empty($this->credentials);\n\t\t}\n\n\t\t/**\n\t\t * @param string $url\n\t\t * @return string\n\t\t */\n\t\tpublic function signDownloadUrl($url) {\n\t\t\treturn $url;\n\t\t}\n\n\t\t/**\n\t\t * @param string $filterName\n\t\t */\n\t\tpublic function setHttpFilterName($filterName) {\n\t\t\t$this->httpFilterName = $filterName;\n\t\t}\n\n\t\t/**\n\t\t * @param string $filterName\n\t\t */\n\t\tpublic function setStrategyFilterName($filterName) {\n\t\t\t$this->strategyFilterName = $filterName;\n\t\t}\n\n\t\t/**\n\t\t * @param string $directory\n\t\t */\n\t\tpublic function setLocalDirectory($directory) {\n\t\t\tif ( empty($directory) || !is_dir($directory) || ($directory === '.') ) {\n\t\t\t\t$this->localDirectory = null;\n\t\t\t} else {\n\t\t\t\t$this->localDirectory = $directory;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param string $slug\n\t\t */\n\t\tpublic function setSlug($slug) {\n\t\t\t$this->slug = $slug;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Scheduler.php","ext":"php","size":10867,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(Scheduler::class, false) ):\n\n\t/**\n\t * The scheduler decides when and how often to check for updates.\n\t * It calls @see UpdateChecker::checkForUpdates() to perform the actual checks.\n\t */\n\tclass Scheduler {\n\t\tpublic $checkPeriod = 12; //How often to check for updates (in hours).\n\t\tpublic $throttleRedundantChecks = false; //Check less often if we already know that an update is available.\n\t\tpublic $throttledCheckPeriod = 72;\n\n\t\tprotected $hourlyCheckHooks = array('load-update.php');\n\n\t\t/**\n\t\t * @var UpdateChecker\n\t\t */\n\t\tprotected $updateChecker;\n\n\t\tprivate $cronHook = null;\n\n\t\t/**\n\t\t * Scheduler constructor.\n\t\t *\n\t\t * @param UpdateChecker $updateChecker\n\t\t * @param int $checkPeriod How often to check for updates (in hours).\n\t\t * @param array $hourlyHooks\n\t\t */\n\t\tpublic function __construct($updateChecker, $checkPeriod, $hourlyHooks = array('load-plugins.php')) {\n\t\t\t$this->updateChecker = $updateChecker;\n\t\t\t$this->checkPeriod = $checkPeriod;\n\n\t\t\t//Set up the periodic update checks\n\t\t\t$this->cronHook = $this->updateChecker->getUniqueName('cron_check_updates');\n\t\t\tif ( $this->checkPeriod > 0 ){\n\n\t\t\t\t//Trigger the check via Cron.\n\t\t\t\t//Try to use one of the default schedules if possible as it's less likely to conflict\n\t\t\t\t//with other plugins and their custom schedules.\n\t\t\t\t$defaultSchedules = array(\n\t\t\t\t\t1  => 'hourly',\n\t\t\t\t\t12 => 'twicedaily',\n\t\t\t\t\t24 => 'daily',\n\t\t\t\t);\n\t\t\t\tif ( array_key_exists($this->checkPeriod, $defaultSchedules) ) {\n\t\t\t\t\t$scheduleName = $defaultSchedules[$this->checkPeriod];\n\t\t\t\t} else {\n\t\t\t\t\t//Use a custom cron schedule.\n\t\t\t\t\t$scheduleName = 'every' . $this->checkPeriod . 'hours';\n\t\t\t\t\t//phpcs:ignore WordPress.WP.CronInterval.ChangeDetected -- WPCS fails to parse the callback.\n\t\t\t\t\tadd_filter('cron_schedules', array($this, '_addCustomSchedule'));\n\t\t\t\t}\n\n\t\t\t\tif ( !wp_next_scheduled($this->cronHook) && !defined('WP_INSTALLING') ) {\n\t\t\t\t\t//Randomly offset the schedule to help prevent update server traffic spikes. Without this\n\t\t\t\t\t//most checks may happen during times of day when people are most likely to install new plugins.\n\t\t\t\t\t$upperLimit = max($this->checkPeriod * 3600 - 15 * 60, 1);\n\t\t\t\t\tif ( function_exists('wp_rand') ) {\n\t\t\t\t\t\t$randomOffset = wp_rand(0, $upperLimit);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//This constructor may be called before wp_rand() is available.\n\t\t\t\t\t\t//phpcs:ignore WordPress.WP.AlternativeFunctions.rand_rand\n\t\t\t\t\t\t$randomOffset = rand(0, $upperLimit);\n\t\t\t\t\t}\n\t\t\t\t\t$firstCheckTime = time() - $randomOffset;\n\t\t\t\t\t$firstCheckTime = apply_filters(\n\t\t\t\t\t\t$this->updateChecker->getUniqueName('first_check_time'),\n\t\t\t\t\t\t$firstCheckTime\n\t\t\t\t\t);\n\t\t\t\t\twp_schedule_event($firstCheckTime, $scheduleName, $this->cronHook);\n\t\t\t\t}\n\t\t\t\tadd_action($this->cronHook, array($this, 'maybeCheckForUpdates'));\n\n\t\t\t\t//In case Cron is disabled or unreliable, we also manually trigger\n\t\t\t\t//the periodic checks while the user is browsing the Dashboard.\n\t\t\t\tadd_action( 'admin_init', array($this, 'maybeCheckForUpdates') );\n\n\t\t\t\t//Like WordPress itself, we check more often on certain pages.\n\t\t\t\t/** @see wp_update_plugins */\n\t\t\t\tadd_action('load-update-core.php', array($this, 'maybeCheckForUpdates'));\n\t\t\t\t//phpcs:ignore Squiz.PHP.CommentedOutCode.Found -- Not actually code, just file names.\n\t\t\t\t//\"load-update.php\" and \"load-plugins.php\" or \"load-themes.php\".\n\t\t\t\t$this->hourlyCheckHooks = array_merge($this->hourlyCheckHooks, $hourlyHooks);\n\t\t\t\tforeach($this->hourlyCheckHooks as $hook) {\n\t\t\t\t\tadd_action($hook, array($this, 'maybeCheckForUpdates'));\n\t\t\t\t}\n\t\t\t\t//This hook fires after a bulk update is complete.\n\t\t\t\tadd_action('upgrader_process_complete', array($this, 'removeHooksIfLibraryGone'), 1, 0);\n\t\t\t\tadd_action('upgrader_process_complete', array($this, 'upgraderProcessComplete'), 11, 2);\n\n\t\t\t} else {\n\t\t\t\t//Periodic checks are disabled.\n\t\t\t\twp_clear_scheduled_hook($this->cronHook);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Remove all hooks if this version of PUC has been deleted or overwritten.\n\t\t *\n\t\t * Callback for the \"upgrader_process_complete\" action.\n\t\t */\n\t\tpublic function removeHooksIfLibraryGone() {\n\t\t\t//Cancel all further actions if the current version of PUC has been deleted or overwritten\n\t\t\t//by a different version during the upgrade. If we try to do anything more in that situation,\n\t\t\t//we could trigger a fatal error by trying to autoload a deleted class.\n\t\t\tclearstatcache();\n\t\t\tif ( !file_exists(__FILE__) ) {\n\t\t\t\t$this->removeHooks();\n\t\t\t\t$this->updateChecker->removeHooks();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Runs upon the WP action upgrader_process_complete.\n\t\t *\n\t\t * We look at the parameters to decide whether to call maybeCheckForUpdates() or not.\n\t\t * We also check if the update checker has been removed by the update.\n\t\t *\n\t\t * @param \\WP_Upgrader $upgrader  WP_Upgrader instance\n\t\t * @param array $upgradeInfo extra information about the upgrade\n\t\t */\n\t\tpublic function upgraderProcessComplete(\n\t\t\t/** @noinspection PhpUnusedParameterInspection */\n\t\t\t$upgrader, $upgradeInfo\n\t\t) {\n\t\t\t//Sanity check and limitation to relevant types.\n\t\t\tif (\n\t\t\t\t!is_array($upgradeInfo) || !isset($upgradeInfo['type'], $upgradeInfo['action'])\n\t\t\t\t|| 'update' !== $upgradeInfo['action'] || !in_array($upgradeInfo['type'], array('plugin', 'theme'))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Filter out notifications of upgrades that should have no bearing upon whether or not our\n\t\t\t//current info is up-to-date.\n\t\t\tif ( is_a($this->updateChecker, Theme\\UpdateChecker::class) ) {\n\t\t\t\tif ( 'theme' !== $upgradeInfo['type'] || !isset($upgradeInfo['themes']) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//Letting too many things going through for checks is not a real problem, so we compare widely.\n\t\t\t\tif ( !in_array(\n\t\t\t\t\tstrtolower($this->updateChecker->directoryName),\n\t\t\t\t\tarray_map('strtolower', $upgradeInfo['themes'])\n\t\t\t\t) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( is_a($this->updateChecker, Plugin\\UpdateChecker::class) ) {\n\t\t\t\tif ( 'plugin' !== $upgradeInfo['type'] || !isset($upgradeInfo['plugins']) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//Themes pass in directory names in the information array, but plugins use the relative plugin path.\n\t\t\t\tif ( !in_array(\n\t\t\t\t\tstrtolower($this->updateChecker->directoryName),\n\t\t\t\t\tarray_map('dirname', array_map('strtolower', $upgradeInfo['plugins']))\n\t\t\t\t) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->maybeCheckForUpdates();\n\t\t}\n\n\t\t/**\n\t\t * Check for updates if the configured check interval has already elapsed.\n\t\t * Will use a shorter check interval on certain admin pages like \"Dashboard -> Updates\" or when doing cron.\n\t\t *\n\t\t * You can override the default behaviour by using the \"puc_check_now-$slug\" filter.\n\t\t * The filter callback will be passed three parameters:\n\t\t *     - Current decision. TRUE = check updates now, FALSE = don't check now.\n\t\t *     - Last check time as a Unix timestamp.\n\t\t *     - Configured check period in hours.\n\t\t * Return TRUE to check for updates immediately, or FALSE to cancel.\n\t\t *\n\t\t * This method is declared public because it's a hook callback. Calling it directly is not recommended.\n\t\t */\n\t\tpublic function maybeCheckForUpdates() {\n\t\t\tif ( empty($this->checkPeriod) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$state = $this->updateChecker->getUpdateState();\n\t\t\t$shouldCheck = ($state->timeSinceLastCheck() >= $this->getEffectiveCheckPeriod());\n\n\t\t\tif ( $shouldCheck ) {\n\t\t\t\t//Sanity check: Do not proceed if one of the critical classes is missing.\n\t\t\t\t//That can happen - theoretically and extremely rarely - if maybeCheckForUpdates()\n\t\t\t\t//is called before the old version of our plugin has been fully deleted, or\n\t\t\t\t//called from an independent AJAX request during deletion.\n\t\t\t\tif ( !(\n\t\t\t\t\tclass_exists(Utils::class)\n\t\t\t\t\t&& class_exists(Metadata::class)\n\t\t\t\t\t&& class_exists(Plugin\\Update::class)\n\t\t\t\t\t&& class_exists(Theme\\Update::class)\n\t\t\t\t) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Let plugin authors substitute their own algorithm.\n\t\t\t$shouldCheck = apply_filters(\n\t\t\t\t$this->updateChecker->getUniqueName('check_now'),\n\t\t\t\t$shouldCheck,\n\t\t\t\t$state->getLastCheck(),\n\t\t\t\t$this->checkPeriod\n\t\t\t);\n\n\t\t\tif ( $shouldCheck ) {\n\t\t\t\t$this->updateChecker->checkForUpdates();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Calculate the actual check period based on the current status and environment.\n\t\t *\n\t\t * @return int Check period in seconds.\n\t\t */\n\t\tprotected function getEffectiveCheckPeriod() {\n\t\t\t$currentFilter = current_filter();\n\t\t\tif ( in_array($currentFilter, array('load-update-core.php', 'upgrader_process_complete')) ) {\n\t\t\t\t//Check more often when the user visits \"Dashboard -> Updates\" or does a bulk update.\n\t\t\t\t$period = 60;\n\t\t\t} else if ( in_array($currentFilter, $this->hourlyCheckHooks) ) {\n\t\t\t\t//Also check more often on /wp-admin/update.php and the \"Plugins\" or \"Themes\" page.\n\t\t\t\t$period = 3600;\n\t\t\t} else if ( $this->throttleRedundantChecks && ($this->updateChecker->getUpdate() !== null) ) {\n\t\t\t\t//Check less frequently if it's already known that an update is available.\n\t\t\t\t$period = $this->throttledCheckPeriod * 3600;\n\t\t\t} else if ( defined('DOING_CRON') && constant('DOING_CRON') ) {\n\t\t\t\t//WordPress cron schedules are not exact, so let's do an update check even\n\t\t\t\t//if slightly less than $checkPeriod hours have elapsed since the last check.\n\t\t\t\t$cronFuzziness = 20 * 60;\n\t\t\t\t$period = $this->checkPeriod * 3600 - $cronFuzziness;\n\t\t\t} else {\n\t\t\t\t$period = $this->checkPeriod * 3600;\n\t\t\t}\n\n\t\t\treturn $period;\n\t\t}\n\n\t\t/**\n\t\t * Add our custom schedule to the array of Cron schedules used by WP.\n\t\t *\n\t\t * @param array $schedules\n\t\t * @return array\n\t\t */\n\t\tpublic function _addCustomSchedule($schedules) {\n\t\t\tif ( $this->checkPeriod && ($this->checkPeriod > 0) ){\n\t\t\t\t$scheduleName = 'every' . $this->checkPeriod . 'hours';\n\t\t\t\t$schedules[$scheduleName] = array(\n\t\t\t\t\t'interval' => $this->checkPeriod * 3600,\n\t\t\t\t\t'display' => sprintf('Every %d hours', $this->checkPeriod),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $schedules;\n\t\t}\n\n\t\t/**\n\t\t * Remove the scheduled cron event that the library uses to check for updates.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tpublic function removeUpdaterCron() {\n\t\t\twp_clear_scheduled_hook($this->cronHook);\n\t\t}\n\n\t\t/**\n\t\t * Get the name of the update checker's WP-cron hook. Mostly useful for debugging.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tpublic function getCronHookName() {\n\t\t\treturn $this->cronHook;\n\t\t}\n\n\t\t/**\n\t\t * Remove most hooks added by the scheduler.\n\t\t */\n\t\tpublic function removeHooks() {\n\t\t\tremove_filter('cron_schedules', array($this, '_addCustomSchedule'));\n\t\t\tremove_action('admin_init', array($this, 'maybeCheckForUpdates'));\n\t\t\tremove_action('load-update-core.php', array($this, 'maybeCheckForUpdates'));\n\n\t\t\tif ( $this->cronHook !== null ) {\n\t\t\t\tremove_action($this->cronHook, array($this, 'maybeCheckForUpdates'));\n\t\t\t}\n\t\t\tif ( !empty($this->hourlyCheckHooks) ) {\n\t\t\t\tforeach ($this->hourlyCheckHooks as $hook) {\n\t\t\t\t\tremove_action($hook, array($this, 'maybeCheckForUpdates'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/InstalledPackage.php","ext":"php","size":2937,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(InstalledPackage::class, false) ):\n\n\t/**\n\t * This class represents a currently installed plugin or theme.\n\t *\n\t * Not to be confused with the \"package\" field in WP update API responses that contains\n\t * the download URL of a the new version.\n\t */\n\tabstract class InstalledPackage {\n\t\t/**\n\t\t * @var UpdateChecker\n\t\t */\n\t\tprotected $updateChecker;\n\n\t\tpublic function __construct($updateChecker) {\n\t\t\t$this->updateChecker = $updateChecker;\n\t\t}\n\n\t\t/**\n\t\t * Get the currently installed version of the plugin or theme.\n\t\t *\n\t\t * @return string|null Version number.\n\t\t */\n\t\tabstract public function getInstalledVersion();\n\n\t\t/**\n\t\t * Get the full path of the plugin or theme directory (without a trailing slash).\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tabstract public function getAbsoluteDirectoryPath();\n\n\t\t/**\n\t\t * Check whether a regular file exists in the package's directory.\n\t\t *\n\t\t * @param string $relativeFileName File name relative to the package directory.\n\t\t * @return bool\n\t\t */\n\t\tpublic function fileExists($relativeFileName) {\n\t\t\treturn is_file(\n\t\t\t\t$this->getAbsoluteDirectoryPath()\n\t\t\t\t. DIRECTORY_SEPARATOR\n\t\t\t\t. ltrim($relativeFileName, '/\\\\')\n\t\t\t);\n\t\t}\n\n\t\t/* -------------------------------------------------------------------\n\t\t * File header parsing\n\t\t * -------------------------------------------------------------------\n\t\t */\n\n\t\t/**\n\t\t * Parse plugin or theme metadata from the header comment.\n\t\t *\n\t\t * This is basically a simplified version of the get_file_data() function from /wp-includes/functions.php.\n\t\t * It's intended as a utility for subclasses that detect updates by parsing files in a VCS.\n\t\t *\n\t\t * @param string|null $content File contents.\n\t\t * @return string[]\n\t\t */\n\t\tpublic function getFileHeader($content) {\n\t\t\t$content = (string)$content;\n\n\t\t\t//WordPress only looks at the first 8 KiB of the file, so we do the same.\n\t\t\t$content = substr($content, 0, 8192);\n\t\t\t//Normalize line endings.\n\t\t\t$content = str_replace(\"\\r\", \"\\n\", $content);\n\n\t\t\t$headers = $this->getHeaderNames();\n\t\t\t$results = array();\n\t\t\tforeach ($headers as $field => $name) {\n\t\t\t\t$success = preg_match('/^[ \\t\\/*#@]*' . preg_quote($name, '/') . ':(.*)$/mi', $content, $matches);\n\n\t\t\t\tif ( ($success === 1) && $matches[1] ) {\n\t\t\t\t\t$value = $matches[1];\n\t\t\t\t\tif ( function_exists('_cleanup_header_comment') ) {\n\t\t\t\t\t\t$value = _cleanup_header_comment($value);\n\t\t\t\t\t}\n\t\t\t\t\t$results[$field] = $value;\n\t\t\t\t} else {\n\t\t\t\t\t$results[$field] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $results;\n\t\t}\n\n\t\t/**\n\t\t * @return array Format: ['HeaderKey' => 'Header Name']\n\t\t */\n\t\tabstract protected function getHeaderNames();\n\n\t\t/**\n\t\t * Get the value of a specific plugin or theme header.\n\t\t *\n\t\t * @param string $headerName\n\t\t * @return string Either the value of the header, or an empty string if the header doesn't exist.\n\t\t */\n\t\tabstract public function getHeaderValue($headerName);\n\n\t}\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Autoloader.php","ext":"php","size":2688,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(Autoloader::class, false) ):\n\n\tclass Autoloader {\n\t\tconst DEFAULT_NS_PREFIX = 'YahnisElsts\\\\PluginUpdateChecker\\\\';\n\n\t\tprivate $prefix;\n\t\tprivate $rootDir;\n\t\tprivate $libraryDir;\n\n\t\tprivate $staticMap;\n\n\t\tpublic function __construct() {\n\t\t\t$this->rootDir = dirname(__FILE__) . '/';\n\n\t\t\t$namespaceWithSlash = __NAMESPACE__ . '\\\\';\n\t\t\t$this->prefix = $namespaceWithSlash;\n\n\t\t\t$this->libraryDir = $this->rootDir . '../..';\n\t\t\tif ( !self::isPhar() ) {\n\t\t\t\t$this->libraryDir = realpath($this->libraryDir);\n\t\t\t}\n\t\t\t$this->libraryDir = $this->libraryDir . '/';\n\n\t\t\t//Usually, dependencies like Parsedown are in the global namespace,\n\t\t\t//but if someone adds a custom namespace to the entire library, they\n\t\t\t//will be in the same namespace as this class.\n\t\t\t$isCustomNamespace = (\n\t\t\t\tsubstr($namespaceWithSlash, 0, strlen(self::DEFAULT_NS_PREFIX)) !== self::DEFAULT_NS_PREFIX\n\t\t\t);\n\t\t\t$libraryPrefix = $isCustomNamespace ? $namespaceWithSlash : '';\n\n\t\t\t$this->staticMap = array(\n\t\t\t\t$libraryPrefix . 'PucReadmeParser' => 'vendor/PucReadmeParser.php',\n\t\t\t\t$libraryPrefix . 'Parsedown'       => 'vendor/Parsedown.php',\n\t\t\t);\n\n\t\t\t//Add the generic, major-version-only factory class to the static map.\n\t\t\t$versionSeparatorPos = strrpos(__NAMESPACE__, '\\\\v');\n\t\t\tif ( $versionSeparatorPos !== false ) {\n\t\t\t\t$versionSegment = substr(__NAMESPACE__, $versionSeparatorPos + 1);\n\t\t\t\t$pointPos = strpos($versionSegment, 'p');\n\t\t\t\tif ( ($pointPos !== false) && ($pointPos > 1) ) {\n\t\t\t\t\t$majorVersionSegment = substr($versionSegment, 0, $pointPos);\n\t\t\t\t\t$majorVersionNs = __NAMESPACE__ . '\\\\' . $majorVersionSegment;\n\t\t\t\t\t$this->staticMap[$majorVersionNs . '\\\\PucFactory'] =\n\t\t\t\t\t\t'Puc/' . $majorVersionSegment . '/Factory.php';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tspl_autoload_register(array($this, 'autoload'));\n\t\t}\n\n\t\t/**\n\t\t * Determine if this file is running as part of a Phar archive.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tprivate static function isPhar() {\n\t\t\t//Check if the current file path starts with \"phar://\".\n\t\t\tstatic $pharProtocol = 'phar://';\n\t\t\treturn (substr(__FILE__, 0, strlen($pharProtocol)) === $pharProtocol);\n\t\t}\n\n\t\tpublic function autoload($className) {\n\t\t\tif ( isset($this->staticMap[$className]) && file_exists($this->libraryDir . $this->staticMap[$className]) ) {\n\t\t\t\tinclude($this->libraryDir . $this->staticMap[$className]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( strpos($className, $this->prefix) === 0 ) {\n\t\t\t\t$path = substr($className, strlen($this->prefix));\n\t\t\t\t$path = str_replace(array('_', '\\\\'), '/', $path);\n\t\t\t\t$path = $this->rootDir . $path . '.php';\n\n\t\t\t\tif ( file_exists($path) ) {\n\t\t\t\t\tinclude $path;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Theme/Package.php","ext":"php","size":1829,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Theme;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\InstalledPackage;\n\nif ( !class_exists(Package::class, false) ):\n\n\tclass Package extends InstalledPackage {\n\t\t/**\n\t\t * @var string Theme directory name.\n\t\t */\n\t\tprotected $stylesheet;\n\n\t\t/**\n\t\t * @var \\WP_Theme Theme object.\n\t\t */\n\t\tprotected $theme;\n\n\t\tpublic function __construct($stylesheet, $updateChecker) {\n\t\t\t$this->stylesheet = $stylesheet;\n\t\t\t$this->theme = wp_get_theme($this->stylesheet);\n\n\t\t\tparent::__construct($updateChecker);\n\t\t}\n\n\t\tpublic function getInstalledVersion() {\n\t\t\treturn $this->theme->get('Version');\n\t\t}\n\n\t\tpublic function getAbsoluteDirectoryPath() {\n\t\t\tif ( method_exists($this->theme, 'get_stylesheet_directory') ) {\n\t\t\t\treturn $this->theme->get_stylesheet_directory(); //Available since WP 3.4.\n\t\t\t}\n\t\t\treturn get_theme_root($this->stylesheet) . '/' . $this->stylesheet;\n\t\t}\n\n\t\t/**\n\t\t * Get the value of a specific plugin or theme header.\n\t\t *\n\t\t * @param string $headerName\n\t\t * @param string $defaultValue\n\t\t * @return string Either the value of the header, or $defaultValue if the header doesn't exist or is empty.\n\t\t */\n\t\tpublic function getHeaderValue($headerName, $defaultValue = '') {\n\t\t\t$value = $this->theme->get($headerName);\n\t\t\tif ( ($headerName === false) || ($headerName === '') ) {\n\t\t\t\treturn $defaultValue;\n\t\t\t}\n\t\t\treturn $value;\n\t\t}\n\n\t\tprotected function getHeaderNames() {\n\t\t\treturn array(\n\t\t\t\t'Name'        => 'Theme Name',\n\t\t\t\t'ThemeURI'    => 'Theme URI',\n\t\t\t\t'Description' => 'Description',\n\t\t\t\t'Author'      => 'Author',\n\t\t\t\t'AuthorURI'   => 'Author URI',\n\t\t\t\t'Version'     => 'Version',\n\t\t\t\t'Template'    => 'Template',\n\t\t\t\t'Status'      => 'Status',\n\t\t\t\t'Tags'        => 'Tags',\n\t\t\t\t'TextDomain'  => 'Text Domain',\n\t\t\t\t'DomainPath'  => 'Domain Path',\n\t\t\t);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Theme/UpdateChecker.php","ext":"php","size":4678,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Theme;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\UpdateChecker as BaseUpdateChecker;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\InstalledPackage;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Scheduler;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nif ( !class_exists(UpdateChecker::class, false) ):\n\n\tclass UpdateChecker extends BaseUpdateChecker {\n\t\tprotected $filterSuffix = 'theme';\n\t\tprotected $updateTransient = 'update_themes';\n\t\tprotected $componentType = 'theme';\n\n\t\t/**\n\t\t * @var string Theme directory name.\n\t\t */\n\t\tprotected $stylesheet;\n\n\t\tpublic function __construct($metadataUrl, $stylesheet = null, $customSlug = null, $checkPeriod = 12, $optionName = '') {\n\t\t\tif ( $stylesheet === null ) {\n\t\t\t\t$stylesheet = get_stylesheet();\n\t\t\t}\n\t\t\t$this->stylesheet = $stylesheet;\n\n\t\t\tparent::__construct(\n\t\t\t\t$metadataUrl,\n\t\t\t\t$stylesheet,\n\t\t\t\t$customSlug ? $customSlug : $stylesheet,\n\t\t\t\t$checkPeriod,\n\t\t\t\t$optionName\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * For themes, the update array is indexed by theme directory name.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprotected function getUpdateListKey() {\n\t\t\treturn $this->directoryName;\n\t\t}\n\n\t\t/**\n\t\t * Retrieve the latest update (if any) from the configured API endpoint.\n\t\t *\n\t\t * @return Update|null An instance of Update, or NULL when no updates are available.\n\t\t */\n\t\tpublic function requestUpdate() {\n\t\t\tlist($themeUpdate, $result) = $this->requestMetadata(Update::class, 'request_update');\n\n\t\t\tif ( $themeUpdate !== null ) {\n\t\t\t\t/** @var Update $themeUpdate */\n\t\t\t\t$themeUpdate->slug = $this->slug;\n\t\t\t}\n\n\t\t\t$themeUpdate = $this->filterUpdateResult($themeUpdate, $result);\n\t\t\treturn $themeUpdate;\n\t\t}\n\n\t\tprotected function getNoUpdateItemFields() {\n\t\t\treturn array_merge(\n\t\t\t\tparent::getNoUpdateItemFields(),\n\t\t\t\tarray(\n\t\t\t\t\t'theme'        => $this->directoryName,\n\t\t\t\t\t'requires'     => '',\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tpublic function userCanInstallUpdates() {\n\t\t\treturn current_user_can('update_themes');\n\t\t}\n\n\t\t/**\n\t\t * Create an instance of the scheduler.\n\t\t *\n\t\t * @param int $checkPeriod\n\t\t * @return Scheduler\n\t\t */\n\t\tprotected function createScheduler($checkPeriod) {\n\t\t\treturn new Scheduler($this, $checkPeriod, array('load-themes.php'));\n\t\t}\n\n\t\t/**\n\t\t * Is there an update being installed right now for this theme?\n\t\t *\n\t\t * @param \\WP_Upgrader|null $upgrader The upgrader that's performing the current update.\n\t\t * @return bool\n\t\t */\n\t\tpublic function isBeingUpgraded($upgrader = null) {\n\t\t\treturn $this->upgraderStatus->isThemeBeingUpgraded($this->stylesheet, $upgrader);\n\t\t}\n\n\t\tprotected function createDebugBarExtension() {\n\t\t\treturn new DebugBar\\Extension($this, DebugBar\\ThemePanel::class);\n\t\t}\n\n\t\t/**\n\t\t * Register a callback for filtering query arguments.\n\t\t *\n\t\t * The callback function should take one argument - an associative array of query arguments.\n\t\t * It should return a modified array of query arguments.\n\t\t *\n\t\t * @param callable $callback\n\t\t * @return void\n\t\t */\n\t\tpublic function addQueryArgFilter($callback){\n\t\t\t$this->addFilter('request_update_query_args', $callback);\n\t\t}\n\n\t\t/**\n\t\t * Register a callback for filtering arguments passed to wp_remote_get().\n\t\t *\n\t\t * The callback function should take one argument - an associative array of arguments -\n\t\t * and return a modified array or arguments. See the WP documentation on wp_remote_get()\n\t\t * for details on what arguments are available and how they work.\n\t\t *\n\t\t * @uses add_filter() This method is a convenience wrapper for add_filter().\n\t\t *\n\t\t * @param callable $callback\n\t\t * @return void\n\t\t */\n\t\tpublic function addHttpRequestArgFilter($callback) {\n\t\t\t$this->addFilter('request_update_options', $callback);\n\t\t}\n\n\t\t/**\n\t\t * Register a callback for filtering theme updates retrieved from the external API.\n\t\t *\n\t\t * The callback function should take two arguments. If the theme update was retrieved\n\t\t * successfully, the first argument passed will be an instance of Theme_Update. Otherwise,\n\t\t * it will be NULL. The second argument will be the corresponding return value of\n\t\t * wp_remote_get (see WP docs for details).\n\t\t *\n\t\t * The callback function should return a new or modified instance of Theme_Update or NULL.\n\t\t *\n\t\t * @uses add_filter() This method is a convenience wrapper for add_filter().\n\t\t *\n\t\t * @param callable $callback\n\t\t * @return void\n\t\t */\n\t\tpublic function addResultFilter($callback) {\n\t\t\t$this->addFilter('request_update_result', $callback, 10, 2);\n\t\t}\n\n\t\t/**\n\t\t * Create a package instance that represents this plugin or theme.\n\t\t *\n\t\t * @return InstalledPackage\n\t\t */\n\t\tprotected function createInstalledPackage() {\n\t\t\treturn new Package($this->stylesheet, $this);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Theme/Update.php","ext":"php","size":2211,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Theme;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Update as BaseUpdate;\n\nif ( !class_exists(Update::class, false) ):\n\n\tclass Update extends BaseUpdate {\n\t\tpublic $details_url = '';\n\n\t\tprotected static $extraFields = array('details_url');\n\n\t\t/**\n\t\t * Transform the metadata into the format used by WordPress core.\n\t\t * Note the inconsistency: WP stores plugin updates as objects and theme updates as arrays.\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tpublic function toWpFormat() {\n\t\t\t$update = array(\n\t\t\t\t'theme' => $this->slug,\n\t\t\t\t'new_version' => $this->version,\n\t\t\t\t'url' => $this->details_url,\n\t\t\t);\n\n\t\t\tif ( !empty($this->download_url) ) {\n\t\t\t\t$update['package'] = $this->download_url;\n\t\t\t}\n\n\t\t\treturn $update;\n\t\t}\n\n\t\t/**\n\t\t * Create a new instance of Theme_Update from its JSON-encoded representation.\n\t\t *\n\t\t * @param string $json Valid JSON string representing a theme information object.\n\t\t * @return self New instance of ThemeUpdate, or NULL on error.\n\t\t */\n\t\tpublic static function fromJson($json) {\n\t\t\t$instance = new self();\n\t\t\tif ( !parent::createFromJson($json, $instance) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn $instance;\n\t\t}\n\n\t\t/**\n\t\t * Create a new instance by copying the necessary fields from another object.\n\t\t *\n\t\t * @param \\StdClass|self $object The source object.\n\t\t * @return self The new copy.\n\t\t */\n\t\tpublic static function fromObject($object) {\n\t\t\t$update = new self();\n\t\t\t$update->copyFields($object, $update);\n\t\t\treturn $update;\n\t\t}\n\n\t\t/**\n\t\t * Basic validation.\n\t\t *\n\t\t * @param \\StdClass $apiResponse\n\t\t * @return bool|\\WP_Error\n\t\t */\n\t\tprotected function validateMetadata($apiResponse) {\n\t\t\t$required = array('version', 'details_url');\n\t\t\tforeach($required as $key) {\n\t\t\t\tif ( !isset($apiResponse->$key) || empty($apiResponse->$key) ) {\n\t\t\t\t\treturn new \\WP_Error(\n\t\t\t\t\t\t'tuc-invalid-metadata',\n\t\t\t\t\t\tsprintf('The theme metadata is missing the required \"%s\" key.', $key)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tprotected function getFieldNames() {\n\t\t\treturn array_merge(parent::getFieldNames(), self::$extraFields);\n\t\t}\n\n\t\tprotected function getPrefixedFilter($tag) {\n\t\t\treturn parent::getPrefixedFilter($tag) . '_theme';\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Utils.php","ext":"php","size":1895,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(Utils::class, false) ):\n\n\tclass Utils {\n\t\t/**\n\t\t * Get a value from a nested array or object based on a path.\n\t\t *\n\t\t * @param array|object|null $collection Get an entry from this array.\n\t\t * @param array|string $path A list of array keys in hierarchy order, or a string path like \"foo.bar.baz\".\n\t\t * @param mixed $default The value to return if the specified path is not found.\n\t\t * @param string $separator Path element separator. Only applies to string paths.\n\t\t * @return mixed\n\t\t */\n\t\tpublic static function get($collection, $path, $default = null, $separator = '.') {\n\t\t\tif ( is_string($path) ) {\n\t\t\t\t$path = explode($separator, $path);\n\t\t\t}\n\n\t\t\t//Follow the $path into $input as far as possible.\n\t\t\t$currentValue = $collection;\n\t\t\tforeach ($path as $node) {\n\t\t\t\tif ( is_array($currentValue) && isset($currentValue[$node]) ) {\n\t\t\t\t\t$currentValue = $currentValue[$node];\n\t\t\t\t} else if ( is_object($currentValue) && isset($currentValue->$node) ) {\n\t\t\t\t\t$currentValue = $currentValue->$node;\n\t\t\t\t} else {\n\t\t\t\t\treturn $default;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $currentValue;\n\t\t}\n\n\t\t/**\n\t\t * Get the first array element that is not empty.\n\t\t *\n\t\t * @param array $values\n\t\t * @param mixed|null $default Returns this value if there are no non-empty elements.\n\t\t * @return mixed|null\n\t\t */\n\t\tpublic static function findNotEmpty($values, $default = null) {\n\t\t\tif ( empty($values) ) {\n\t\t\t\treturn $default;\n\t\t\t}\n\n\t\t\tforeach ($values as $value) {\n\t\t\t\tif ( !empty($value) ) {\n\t\t\t\t\treturn $value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $default;\n\t\t}\n\n\t\t/**\n\t\t * Check if the input string starts with the specified prefix.\n\t\t *\n\t\t * @param string $input\n\t\t * @param string $prefix\n\t\t * @return bool\n\t\t */\n\t\tpublic static function startsWith($input, $prefix) {\n\t\t\t$length = strlen($prefix);\n\t\t\treturn (substr($input, 0, $length) === $prefix);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Update.php","ext":"php","size":749,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nuse stdClass;\n\nif ( !class_exists(Update::class, false) ):\n\n\t/**\n\t * A simple container class for holding information about an available update.\n\t *\n\t * @author Janis Elsts\n\t * @access public\n\t */\n\tabstract class Update extends Metadata {\n\t\tpublic $slug;\n\t\tpublic $version;\n\t\tpublic $download_url;\n\t\tpublic $translations = array();\n\n\t\t/**\n\t\t * @return string[]\n\t\t */\n\t\tprotected function getFieldNames() {\n\t\t\treturn array('slug', 'version', 'download_url', 'translations');\n\t\t}\n\n\t\tpublic function toWpFormat() {\n\t\t\t$update = new stdClass();\n\n\t\t\t$update->slug = $this->slug;\n\t\t\t$update->new_version = $this->version;\n\t\t\t$update->package = $this->download_url;\n\n\t\t\treturn $update;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Metadata.php","ext":"php","size":4239,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nuse LogicException;\nuse stdClass;\nuse WP_Error;\n\nif ( !class_exists(Metadata::class, false) ):\n\n\t/**\n\t * A base container for holding information about updates and plugin metadata.\n\t *\n\t * @author Janis Elsts\n\t * @copyright 2016\n\t * @access public\n\t */\n\tabstract class Metadata {\n\t\t/**\n\t\t * Additional dynamic properties, usually copied from the API response.\n\t\t *\n\t\t * @var array<string,mixed>\n\t\t */\n\t\tprotected $extraProperties = array();\n\n\t\t/**\n\t\t * Create an instance of this class from a JSON document.\n\t\t *\n\t\t * @abstract\n\t\t * @param string $json\n\t\t * @return self\n\t\t */\n\t\tpublic static function fromJson($json) {\n\t\t\tthrow new LogicException('The ' . __METHOD__ . ' method must be implemented by subclasses');\n\t\t}\n\n\t\t/**\n\t\t * @param string $json\n\t\t * @param self $target\n\t\t * @return bool\n\t\t */\n\t\tprotected static function createFromJson($json, $target) {\n\t\t\t/** @var \\StdClass $apiResponse */\n\t\t\t$apiResponse = json_decode($json);\n\t\t\tif ( empty($apiResponse) || !is_object($apiResponse) ){\n\t\t\t\t$errorMessage = \"Failed to parse update metadata. Try validating your .json file with https://jsonlint.com/\";\n\t\t\t\tdo_action('puc_api_error', new WP_Error('puc-invalid-json', $errorMessage));\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error -- For plugin developers.\n\t\t\t\ttrigger_error(esc_html($errorMessage), E_USER_NOTICE);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$valid = $target->validateMetadata($apiResponse);\n\t\t\tif ( is_wp_error($valid) ){\n\t\t\t\tdo_action('puc_api_error', $valid);\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error -- For plugin developers.\n\t\t\t\ttrigger_error(esc_html($valid->get_error_message()), E_USER_NOTICE);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tforeach(get_object_vars($apiResponse) as $key => $value){\n\t\t\t\t$target->$key = $value;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * No validation by default! Subclasses should check that the required fields are present.\n\t\t *\n\t\t * @param \\StdClass $apiResponse\n\t\t * @return bool|\\WP_Error\n\t\t */\n\t\tprotected function validateMetadata($apiResponse) {\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * Create a new instance by copying the necessary fields from another object.\n\t\t *\n\t\t * @abstract\n\t\t * @param \\StdClass|self $object The source object.\n\t\t * @return self The new copy.\n\t\t */\n\t\tpublic static function fromObject($object) {\n\t\t\tthrow new LogicException('The ' . __METHOD__ . ' method must be implemented by subclasses');\n\t\t}\n\n\t\t/**\n\t\t * Create an instance of StdClass that can later be converted back to an\n\t\t * update or info container. Useful for serialization and caching, as it\n\t\t * avoids the \"incomplete object\" problem if the cached value is loaded\n\t\t * before this class.\n\t\t *\n\t\t * @return \\StdClass\n\t\t */\n\t\tpublic function toStdClass() {\n\t\t\t$object = new stdClass();\n\t\t\t$this->copyFields($this, $object);\n\t\t\treturn $object;\n\t\t}\n\n\t\t/**\n\t\t * Transform the metadata into the format used by WordPress core.\n\t\t *\n\t\t * @return object\n\t\t */\n\t\tabstract public function toWpFormat();\n\n\t\t/**\n\t\t * Copy known fields from one object to another.\n\t\t *\n\t\t * @param \\StdClass|self $from\n\t\t * @param \\StdClass|self $to\n\t\t */\n\t\tprotected function copyFields($from, $to) {\n\t\t\t$fields = $this->getFieldNames();\n\n\t\t\tif ( property_exists($from, 'slug') && !empty($from->slug) ) {\n\t\t\t\t//Let plugins add extra fields without having to create subclasses.\n\t\t\t\t$fields = apply_filters($this->getPrefixedFilter('retain_fields') . '-' . $from->slug, $fields);\n\t\t\t}\n\n\t\t\tforeach ($fields as $field) {\n\t\t\t\tif ( property_exists($from, $field) ) {\n\t\t\t\t\t$to->$field = $from->$field;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @return string[]\n\t\t */\n\t\tprotected function getFieldNames() {\n\t\t\treturn array();\n\t\t}\n\n\t\t/**\n\t\t * @param string $tag\n\t\t * @return string\n\t\t */\n\t\tprotected function getPrefixedFilter($tag) {\n\t\t\treturn 'puc_' . $tag;\n\t\t}\n\n\t\tpublic function __set($name, $value) {\n\t\t\t$this->extraProperties[$name] = $value;\n\t\t}\n\n\t\tpublic function __get($name) {\n\t\t\treturn isset($this->extraProperties[$name]) ? $this->extraProperties[$name] : null;\n\t\t}\n\n\t\tpublic function __isset($name) {\n\t\t\treturn isset($this->extraProperties[$name]);\n\t\t}\n\n\t\tpublic function __unset($name) {\n\t\t\tunset($this->extraProperties[$name]);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Plugin/PluginInfo.php","ext":"php","size":3837,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Metadata;\n\nif ( !class_exists(PluginInfo::class, false) ):\n\n\t/**\n\t * A container class for holding and transforming various plugin metadata.\n\t *\n\t * @author Janis Elsts\n\t * @copyright 2016\n\t * @access public\n\t */\n\tclass PluginInfo extends Metadata {\n\t\t//Most fields map directly to the contents of the plugin's info.json file.\n\t\t//See the relevant docs for a description of their meaning.\n\t\tpublic $name;\n\t\tpublic $slug;\n\t\tpublic $version;\n\t\tpublic $homepage;\n\t\tpublic $sections = array();\n\t\tpublic $download_url;\n\n\t\tpublic $banners;\n\t\tpublic $icons = array();\n\t\tpublic $translations = array();\n\n\t\tpublic $author;\n\t\tpublic $author_homepage;\n\n\t\tpublic $requires;\n\t\tpublic $tested;\n\t\tpublic $requires_php;\n\t\tpublic $upgrade_notice;\n\n\t\tpublic $rating;\n\t\tpublic $num_ratings;\n\t\tpublic $downloaded;\n\t\tpublic $active_installs;\n\t\tpublic $last_updated;\n\n\t\tpublic $id = 0; //The native WP.org API returns numeric plugin IDs, but they're not used for anything.\n\n\t\tpublic $filename; //Plugin filename relative to the plugins directory.\n\n\t\t/**\n\t\t * Create a new instance of Plugin Info from JSON-encoded plugin info\n\t\t * returned by an external update API.\n\t\t *\n\t\t * @param string $json Valid JSON string representing plugin info.\n\t\t * @return self|null New instance of Plugin Info, or NULL on error.\n\t\t */\n\t\tpublic static function fromJson($json){\n\t\t\t$instance = new self();\n\n\t\t\tif ( !parent::createFromJson($json, $instance) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t//json_decode decodes assoc. arrays as objects. We want them as arrays.\n\t\t\t$instance->sections = (array)$instance->sections;\n\t\t\t$instance->icons = (array)$instance->icons;\n\n\t\t\treturn $instance;\n\t\t}\n\n\t\t/**\n\t\t * Very, very basic validation.\n\t\t *\n\t\t * @param \\StdClass $apiResponse\n\t\t * @return bool|\\WP_Error\n\t\t */\n\t\tprotected function validateMetadata($apiResponse) {\n\t\t\tif (\n\t\t\t\t!isset($apiResponse->name, $apiResponse->version)\n\t\t\t\t|| empty($apiResponse->name)\n\t\t\t\t|| empty($apiResponse->version)\n\t\t\t) {\n\t\t\t\treturn new \\WP_Error(\n\t\t\t\t\t'puc-invalid-metadata',\n\t\t\t\t\t\"The plugin metadata file does not contain the required 'name' and/or 'version' keys.\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\n\t\t/**\n\t\t * Transform plugin info into the format used by the native WordPress.org API\n\t\t *\n\t\t * @return object\n\t\t */\n\t\tpublic function toWpFormat(){\n\t\t\t$info = new \\stdClass;\n\n\t\t\t//The custom update API is built so that many fields have the same name and format\n\t\t\t//as those returned by the native WordPress.org API. These can be assigned directly.\n\t\t\t$sameFormat = array(\n\t\t\t\t'name', 'slug', 'version', 'requires', 'tested', 'rating', 'upgrade_notice',\n\t\t\t\t'num_ratings', 'downloaded', 'active_installs', 'homepage', 'last_updated',\n\t\t\t\t'requires_php',\n\t\t\t);\n\t\t\tforeach($sameFormat as $field){\n\t\t\t\tif ( isset($this->$field) ) {\n\t\t\t\t\t$info->$field = $this->$field;\n\t\t\t\t} else {\n\t\t\t\t\t$info->$field = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Other fields need to be renamed and/or transformed.\n\t\t\t$info->download_link = $this->download_url;\n\t\t\t$info->author = $this->getFormattedAuthor();\n\t\t\t$info->sections = array_merge(array('description' => ''), $this->sections);\n\n\t\t\tif ( !empty($this->banners) ) {\n\t\t\t\t//WP expects an array with two keys: \"high\" and \"low\". Both are optional.\n\t\t\t\t//Docs: https://wordpress.org/plugins/about/faq/#banners\n\t\t\t\t$info->banners = is_object($this->banners) ? get_object_vars($this->banners) : $this->banners;\n\t\t\t\t$info->banners = array_intersect_key($info->banners, array('high' => true, 'low' => true));\n\t\t\t}\n\n\t\t\treturn $info;\n\t\t}\n\n\t\tprotected function getFormattedAuthor() {\n\t\t\tif ( !empty($this->author_homepage) ){\n\t\t\t\t/** @noinspection HtmlUnknownTarget */\n\t\t\t\treturn sprintf('<a href=\"%s\">%s</a>', $this->author_homepage, $this->author);\n\t\t\t}\n\t\t\treturn $this->author;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Plugin/Ui.php","ext":"php","size":10420,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\n\nif ( !class_exists(Ui::class, false) ):\n\t/**\n\t * Additional UI elements for plugins.\n\t */\n\tclass Ui {\n\t\tprivate $updateChecker;\n\t\tprivate $manualCheckErrorTransient = '';\n\n\t\t/**\n\t\t * @param UpdateChecker $updateChecker\n\t\t */\n\t\tpublic function __construct($updateChecker) {\n\t\t\t$this->updateChecker = $updateChecker;\n\t\t\t$this->manualCheckErrorTransient = $this->updateChecker->getUniqueName('manual_check_errors');\n\n\t\t\tadd_action('admin_init', array($this, 'onAdminInit'));\n\t\t}\n\n\t\tpublic function onAdminInit() {\n\t\t\tif ( $this->updateChecker->userCanInstallUpdates() ) {\n\t\t\t\t$this->handleManualCheck();\n\n\t\t\t\tadd_filter('plugin_row_meta', array($this, 'addViewDetailsLink'), 10, 3);\n\t\t\t\tadd_filter('plugin_row_meta', array($this, 'addCheckForUpdatesLink'), 10, 2);\n\t\t\t\tadd_action('all_admin_notices', array($this, 'displayManualCheckResult'));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Add a \"View Details\" link to the plugin row in the \"Plugins\" page. By default,\n\t\t * the new link will appear before the \"Visit plugin site\" link (if present).\n\t\t *\n\t\t * You can change the link text by using the \"puc_view_details_link-$slug\" filter.\n\t\t * Returning an empty string from the filter will disable the link.\n\t\t *\n\t\t * You can change the position of the link using the\n\t\t * \"puc_view_details_link_position-$slug\" filter.\n\t\t * Returning 'before' or 'after' will place the link immediately before/after\n\t\t * the \"Visit plugin site\" link.\n\t\t * Returning 'append' places the link after any existing links at the time of the hook.\n\t\t * Returning 'replace' replaces the \"Visit plugin site\" link.\n\t\t * Returning anything else disables the link when there is a \"Visit plugin site\" link.\n\t\t *\n\t\t * If there is no \"Visit plugin site\" link 'append' is always used!\n\t\t *\n\t\t * @param array $pluginMeta Array of meta links.\n\t\t * @param string $pluginFile\n\t\t * @param array $pluginData Array of plugin header data.\n\t\t * @return array\n\t\t */\n\t\tpublic function addViewDetailsLink($pluginMeta, $pluginFile, $pluginData = array()) {\n\t\t\tif ( $this->isMyPluginFile($pluginFile) && !isset($pluginData['slug']) ) {\n\t\t\t\t$linkText = apply_filters($this->updateChecker->getUniqueName('view_details_link'), __('View details'));\n\t\t\t\tif ( !empty($linkText) ) {\n\t\t\t\t\t$viewDetailsLinkPosition = 'append';\n\n\t\t\t\t\t//Find the \"Visit plugin site\" link (if present).\n\t\t\t\t\t$visitPluginSiteLinkIndex = count($pluginMeta) - 1;\n\t\t\t\t\tif ( $pluginData['PluginURI'] ) {\n\t\t\t\t\t\t$escapedPluginUri = esc_url($pluginData['PluginURI']);\n\t\t\t\t\t\tforeach ($pluginMeta as $linkIndex => $existingLink) {\n\t\t\t\t\t\t\tif ( strpos($existingLink, $escapedPluginUri) !== false ) {\n\t\t\t\t\t\t\t\t$visitPluginSiteLinkIndex = $linkIndex;\n\t\t\t\t\t\t\t\t$viewDetailsLinkPosition = apply_filters(\n\t\t\t\t\t\t\t\t\t$this->updateChecker->getUniqueName('view_details_link_position'),\n\t\t\t\t\t\t\t\t\t'before'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$viewDetailsLink = sprintf('<a href=\"%s\" class=\"thickbox open-plugin-details-modal\" aria-label=\"%s\" data-title=\"%s\">%s</a>',\n\t\t\t\t\t\tesc_url(network_admin_url('plugin-install.php?tab=plugin-information&plugin=' . urlencode($this->updateChecker->slug) .\n\t\t\t\t\t\t\t'&TB_iframe=true&width=600&height=550')),\n\t\t\t\t\t\tesc_attr(sprintf(__('More information about %s'), $pluginData['Name'])),\n\t\t\t\t\t\tesc_attr($pluginData['Name']),\n\t\t\t\t\t\t$linkText\n\t\t\t\t\t);\n\t\t\t\t\tswitch ($viewDetailsLinkPosition) {\n\t\t\t\t\t\tcase 'before':\n\t\t\t\t\t\t\tarray_splice($pluginMeta, $visitPluginSiteLinkIndex, 0, $viewDetailsLink);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'after':\n\t\t\t\t\t\t\tarray_splice($pluginMeta, $visitPluginSiteLinkIndex + 1, 0, $viewDetailsLink);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'replace':\n\t\t\t\t\t\t\t$pluginMeta[$visitPluginSiteLinkIndex] = $viewDetailsLink;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'append':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t$pluginMeta[] = $viewDetailsLink;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $pluginMeta;\n\t\t}\n\n\t\t/**\n\t\t * Add a \"Check for updates\" link to the plugin row in the \"Plugins\" page. By default,\n\t\t * the new link will appear after the \"Visit plugin site\" link if present, otherwise\n\t\t * after the \"View plugin details\" link.\n\t\t *\n\t\t * You can change the link text by using the \"puc_manual_check_link-$slug\" filter.\n\t\t * Returning an empty string from the filter will disable the link.\n\t\t *\n\t\t * @param array $pluginMeta Array of meta links.\n\t\t * @param string $pluginFile\n\t\t * @return array\n\t\t */\n\t\tpublic function addCheckForUpdatesLink($pluginMeta, $pluginFile) {\n\t\t\tif ( $this->isMyPluginFile($pluginFile) ) {\n\t\t\t\t$linkUrl = wp_nonce_url(\n\t\t\t\t\tadd_query_arg(\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'puc_check_for_updates' => 1,\n\t\t\t\t\t\t\t'puc_slug'              => $this->updateChecker->slug,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tself_admin_url('plugins.php')\n\t\t\t\t\t),\n\t\t\t\t\t'puc_check_for_updates'\n\t\t\t\t);\n\n\t\t\t\t$linkText = apply_filters(\n\t\t\t\t\t$this->updateChecker->getUniqueName('manual_check_link'),\n\t\t\t\t\t__('Check for updates', 'plugin-update-checker')\n\t\t\t\t);\n\t\t\t\tif ( !empty($linkText) ) {\n\t\t\t\t\t/** @noinspection HtmlUnknownTarget */\n\t\t\t\t\t$pluginMeta[] = sprintf('<a href=\"%s\">%s</a>', esc_attr($linkUrl), $linkText);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $pluginMeta;\n\t\t}\n\n\t\tprotected function isMyPluginFile($pluginFile) {\n\t\t\treturn ($pluginFile == $this->updateChecker->pluginFile)\n\t\t\t\t|| (!empty($this->updateChecker->muPluginFile) && ($pluginFile == $this->updateChecker->muPluginFile));\n\t\t}\n\n\t\t/**\n\t\t * Check for updates when the user clicks the \"Check for updates\" link.\n\t\t *\n\t\t * @see self::addCheckForUpdatesLink()\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tpublic function handleManualCheck() {\n\t\t\t$shouldCheck =\n\t\t\t\tisset($_GET['puc_check_for_updates'], $_GET['puc_slug'])\n\t\t\t\t&& $_GET['puc_slug'] == $this->updateChecker->slug\n\t\t\t\t&& check_admin_referer('puc_check_for_updates');\n\n\t\t\tif ( $shouldCheck ) {\n\t\t\t\t$update = $this->updateChecker->checkForUpdates();\n\t\t\t\t$status = ($update === null) ? 'no_update' : 'update_available';\n\t\t\t\t$lastRequestApiErrors = $this->updateChecker->getLastRequestApiErrors();\n\n\t\t\t\tif ( ($update === null) && !empty($lastRequestApiErrors) ) {\n\t\t\t\t\t//Some errors are not critical. For example, if PUC tries to retrieve the readme.txt\n\t\t\t\t\t//file from GitHub and gets a 404, that's an API error, but it doesn't prevent updates\n\t\t\t\t\t//from working. Maybe the plugin simply doesn't have a readme.\n\t\t\t\t\t//Let's only show important errors.\n\t\t\t\t\t$foundCriticalErrors = false;\n\t\t\t\t\t$questionableErrorCodes = array(\n\t\t\t\t\t\t'puc-github-http-error',\n\t\t\t\t\t\t'puc-gitlab-http-error',\n\t\t\t\t\t\t'puc-bitbucket-http-error',\n\t\t\t\t\t);\n\n\t\t\t\t\tforeach ($lastRequestApiErrors as $item) {\n\t\t\t\t\t\t$wpError = $item['error'];\n\t\t\t\t\t\t/** @var \\WP_Error $wpError */\n\t\t\t\t\t\tif ( !in_array($wpError->get_error_code(), $questionableErrorCodes) ) {\n\t\t\t\t\t\t\t$foundCriticalErrors = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( $foundCriticalErrors ) {\n\t\t\t\t\t\t$status = 'error';\n\t\t\t\t\t\tset_site_transient($this->manualCheckErrorTransient, $lastRequestApiErrors, 60);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twp_redirect(add_query_arg(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'puc_update_check_result' => $status,\n\t\t\t\t\t\t'puc_slug'                => $this->updateChecker->slug,\n\t\t\t\t\t),\n\t\t\t\t\tself_admin_url('plugins.php')\n\t\t\t\t));\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Display the results of a manual update check.\n\t\t *\n\t\t * @see self::handleManualCheck()\n\t\t *\n\t\t * You can change the result message by using the \"puc_manual_check_message-$slug\" filter.\n\t\t */\n\t\tpublic function displayManualCheckResult() {\n\t\t\t//phpcs:disable WordPress.Security.NonceVerification.Recommended -- Just displaying a message.\n\t\t\tif ( isset($_GET['puc_update_check_result'], $_GET['puc_slug']) && ($_GET['puc_slug'] == $this->updateChecker->slug) ) {\n\t\t\t\t$status = sanitize_key($_GET['puc_update_check_result']);\n\t\t\t\t$title = $this->updateChecker->getInstalledPackage()->getPluginTitle();\n\t\t\t\t$noticeClass = 'updated notice-success';\n\t\t\t\t$details = '';\n\n\t\t\t\tif ( $status == 'no_update' ) {\n\t\t\t\t\t$message = sprintf(_x('The %s plugin is up to date.', 'the plugin title', 'plugin-update-checker'), $title);\n\t\t\t\t} else if ( $status == 'update_available' ) {\n\t\t\t\t\t$message = sprintf(_x('A new version of the %s plugin is available.', 'the plugin title', 'plugin-update-checker'), $title);\n\t\t\t\t} else if ( $status === 'error' ) {\n\t\t\t\t\t$message = sprintf(_x('Could not determine if updates are available for %s.', 'the plugin title', 'plugin-update-checker'), $title);\n\t\t\t\t\t$noticeClass = 'error notice-error';\n\n\t\t\t\t\t$details = $this->formatManualCheckErrors(get_site_transient($this->manualCheckErrorTransient));\n\t\t\t\t\tdelete_site_transient($this->manualCheckErrorTransient);\n\t\t\t\t} else {\n\t\t\t\t\t$message = sprintf(__('Unknown update checker status \"%s\"', 'plugin-update-checker'), $status);\n\t\t\t\t\t$noticeClass = 'error notice-error';\n\t\t\t\t}\n\n\t\t\t\t$message = esc_html($message);\n\n\t\t\t\t//Plugins can replace the message with their own, including adding HTML.\n\t\t\t\t$message = apply_filters(\n\t\t\t\t\t$this->updateChecker->getUniqueName('manual_check_message'),\n\t\t\t\t\t$message,\n\t\t\t\t\t$status\n\t\t\t\t);\n\n\t\t\t\tprintf(\n\t\t\t\t\t'<div class=\"notice %s is-dismissible\"><p>%s</p>%s</div>',\n\t\t\t\t\tesc_attr($noticeClass),\n\t\t\t\t\t//phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- Was escaped above, and plugins can add HTML.\n\t\t\t\t\t$message,\n\t\t\t\t\t//phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- Contains HTML. Content should already be escaped.\n\t\t\t\t\t$details\n\t\t\t\t);\n\t\t\t}\n\t\t\t//phpcs:enable\n\t\t}\n\n\t\t/**\n\t\t * Format the list of errors that were thrown during an update check.\n\t\t *\n\t\t * @param array $errors\n\t\t * @return string\n\t\t */\n\t\tprotected function formatManualCheckErrors($errors) {\n\t\t\tif ( empty($errors) ) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\t$output = '';\n\n\t\t\t$showAsList = count($errors) > 1;\n\t\t\tif ( $showAsList ) {\n\t\t\t\t$output .= '<ol>';\n\t\t\t\t$formatString = '<li>%1$s <code>%2$s</code></li>';\n\t\t\t} else {\n\t\t\t\t$formatString = '<p>%1$s <code>%2$s</code></p>';\n\t\t\t}\n\t\t\tforeach ($errors as $item) {\n\t\t\t\t$wpError = $item['error'];\n\t\t\t\t/** @var \\WP_Error $wpError */\n\t\t\t\t$output .= sprintf(\n\t\t\t\t\t$formatString,\n\t\t\t\t\tesc_html($wpError->get_error_message()),\n\t\t\t\t\tesc_html($wpError->get_error_code())\n\t\t\t\t);\n\t\t\t}\n\t\t\tif ( $showAsList ) {\n\t\t\t\t$output .= '</ol>';\n\t\t\t}\n\n\t\t\treturn $output;\n\t\t}\n\n\t\tpublic function removeHooks() {\n\t\t\tremove_action('admin_init', array($this, 'onAdminInit'));\n\t\t\tremove_filter('plugin_row_meta', array($this, 'addViewDetailsLink'), 10);\n\t\t\tremove_filter('plugin_row_meta', array($this, 'addCheckForUpdatesLink'), 10);\n\t\t\tremove_action('all_admin_notices', array($this, 'displayManualCheckResult'));\n\t\t}\n\t}\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Plugin/Package.php","ext":"php","size":5547,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\InstalledPackage;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\PucFactory;\n\nif ( !class_exists(Package::class, false) ):\n\n\tclass Package extends InstalledPackage {\n\t\t/**\n\t\t * @var UpdateChecker\n\t\t */\n\t\tprotected $updateChecker;\n\n\t\t/**\n\t\t * @var string Full path of the main plugin file.\n\t\t */\n\t\tprotected $pluginAbsolutePath = '';\n\n\t\t/**\n\t\t * @var string Plugin basename.\n\t\t */\n\t\tprivate $pluginFile;\n\n\t\t/**\n\t\t * @var string|null\n\t\t */\n\t\tprivate $cachedInstalledVersion = null;\n\n\t\tpublic function __construct($pluginAbsolutePath, $updateChecker) {\n\t\t\t$this->pluginAbsolutePath = $pluginAbsolutePath;\n\t\t\t$this->pluginFile = plugin_basename($this->pluginAbsolutePath);\n\n\t\t\tparent::__construct($updateChecker);\n\n\t\t\t//Clear the version number cache when something - anything - is upgraded or WP clears the update cache.\n\t\t\tadd_filter('upgrader_post_install', array($this, 'clearCachedVersion'));\n\t\t\tadd_action('delete_site_transient_update_plugins', array($this, 'clearCachedVersion'));\n\t\t}\n\n\t\tpublic function getInstalledVersion() {\n\t\t\tif ( isset($this->cachedInstalledVersion) ) {\n\t\t\t\treturn $this->cachedInstalledVersion;\n\t\t\t}\n\n\t\t\t$pluginHeader = $this->getPluginHeader();\n\t\t\tif ( isset($pluginHeader['Version']) ) {\n\t\t\t\t$this->cachedInstalledVersion = $pluginHeader['Version'];\n\t\t\t\treturn $pluginHeader['Version'];\n\t\t\t} else {\n\t\t\t\t//This can happen if the filename points to something that is not a plugin.\n\t\t\t\t$this->updateChecker->triggerError(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\"Cannot read the Version header for '%s'. The filename is incorrect or is not a plugin.\",\n\t\t\t\t\t\t$this->updateChecker->pluginFile\n\t\t\t\t\t),\n\t\t\t\t\tE_USER_WARNING\n\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Clear the cached plugin version. This method can be set up as a filter (hook) and will\n\t\t * return the filter argument unmodified.\n\t\t *\n\t\t * @param mixed $filterArgument\n\t\t * @return mixed\n\t\t */\n\t\tpublic function clearCachedVersion($filterArgument = null) {\n\t\t\t$this->cachedInstalledVersion = null;\n\t\t\treturn $filterArgument;\n\t\t}\n\n\t\tpublic function getAbsoluteDirectoryPath() {\n\t\t\treturn dirname($this->pluginAbsolutePath);\n\t\t}\n\n\t\t/**\n\t\t * Get the value of a specific plugin or theme header.\n\t\t *\n\t\t * @param string $headerName\n\t\t * @param string $defaultValue\n\t\t * @return string Either the value of the header, or $defaultValue if the header doesn't exist or is empty.\n\t\t */\n\t\tpublic function getHeaderValue($headerName, $defaultValue = '') {\n\t\t\t$headers = $this->getPluginHeader();\n\t\t\tif ( isset($headers[$headerName]) && ($headers[$headerName] !== '') ) {\n\t\t\t\treturn $headers[$headerName];\n\t\t\t}\n\t\t\treturn $defaultValue;\n\t\t}\n\n\t\tprotected function getHeaderNames() {\n\t\t\treturn array(\n\t\t\t\t'Name'              => 'Plugin Name',\n\t\t\t\t'PluginURI'         => 'Plugin URI',\n\t\t\t\t'Version'           => 'Version',\n\t\t\t\t'Description'       => 'Description',\n\t\t\t\t'Author'            => 'Author',\n\t\t\t\t'AuthorURI'         => 'Author URI',\n\t\t\t\t'TextDomain'        => 'Text Domain',\n\t\t\t\t'DomainPath'        => 'Domain Path',\n\t\t\t\t'Network'           => 'Network',\n\n\t\t\t\t//The newest WordPress version that this plugin requires or has been tested with.\n\t\t\t\t//We support several different formats for compatibility with other libraries.\n\t\t\t\t'Tested WP'         => 'Tested WP',\n\t\t\t\t'Requires WP'       => 'Requires WP',\n\t\t\t\t'Tested up to'      => 'Tested up to',\n\t\t\t\t'Requires at least' => 'Requires at least',\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Get the translated plugin title.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tpublic function getPluginTitle() {\n\t\t\t$title = '';\n\t\t\t$header = $this->getPluginHeader();\n\t\t\tif ( $header && !empty($header['Name']) && isset($header['TextDomain']) ) {\n\t\t\t\t$title = translate($header['Name'], $header['TextDomain']);\n\t\t\t}\n\t\t\treturn $title;\n\t\t}\n\n\t\t/**\n\t\t * Get plugin's metadata from its file header.\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tpublic function getPluginHeader() {\n\t\t\tif ( !is_file($this->pluginAbsolutePath) ) {\n\t\t\t\t//This can happen if the plugin filename is wrong.\n\t\t\t\t$this->updateChecker->triggerError(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\"Can't to read the plugin header for '%s'. The file does not exist.\",\n\t\t\t\t\t\t$this->updateChecker->pluginFile\n\t\t\t\t\t),\n\t\t\t\t\tE_USER_WARNING\n\t\t\t\t);\n\t\t\t\treturn array();\n\t\t\t}\n\n\t\t\tif ( !function_exists('get_plugin_data') ) {\n\t\t\t\trequire_once(ABSPATH . '/wp-admin/includes/plugin.php');\n\t\t\t}\n\t\t\treturn get_plugin_data($this->pluginAbsolutePath, false, false);\n\t\t}\n\n\t\tpublic function removeHooks() {\n\t\t\tremove_filter('upgrader_post_install', array($this, 'clearCachedVersion'));\n\t\t\tremove_action('delete_site_transient_update_plugins', array($this, 'clearCachedVersion'));\n\t\t}\n\n\t\t/**\n\t\t * Check if the plugin file is inside the mu-plugins directory.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tpublic function isMuPlugin() {\n\t\t\tstatic $cachedResult = null;\n\n\t\t\tif ( $cachedResult === null ) {\n\t\t\t\tif ( !defined('WPMU_PLUGIN_DIR') || !is_string(WPMU_PLUGIN_DIR) ) {\n\t\t\t\t\t$cachedResult = false;\n\t\t\t\t\treturn $cachedResult;\n\t\t\t\t}\n\n\t\t\t\t//Convert both paths to the canonical form before comparison.\n\t\t\t\t$muPluginDir = realpath(WPMU_PLUGIN_DIR);\n\t\t\t\t$pluginPath  = realpath($this->pluginAbsolutePath);\n\t\t\t\t//If realpath() fails, just normalize the syntax instead.\n\t\t\t\tif (($muPluginDir === false) || ($pluginPath === false)) {\n\t\t\t\t\t$muPluginDir = PucFactory::normalizePath(WPMU_PLUGIN_DIR);\n\t\t\t\t\t$pluginPath  = PucFactory::normalizePath($this->pluginAbsolutePath);\n\t\t\t\t}\n\n\t\t\t\t$cachedResult = (strpos($pluginPath, $muPluginDir) === 0);\n\t\t\t}\n\n\t\t\treturn $cachedResult;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Plugin/UpdateChecker.php","ext":"php","size":13355,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\InstalledPackage;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\UpdateChecker as BaseUpdateChecker;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Scheduler;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\DebugBar;\n\nif ( !class_exists(UpdateChecker::class, false) ):\n\n\t/**\n\t * A custom plugin update checker.\n\t *\n\t * @author Janis Elsts\n\t * @copyright 2018\n\t * @access public\n\t */\n\tclass UpdateChecker extends BaseUpdateChecker {\n\t\tprotected $updateTransient = 'update_plugins';\n\t\tprotected $componentType = 'plugin';\n\n\t\tpublic $pluginAbsolutePath = ''; //Full path of the main plugin file.\n\t\tpublic $pluginFile = '';  //Plugin filename relative to the plugins directory. Many WP APIs use this to identify plugins.\n\t\tpublic $muPluginFile = ''; //For MU plugins, the plugin filename relative to the mu-plugins directory.\n\n\t\t/**\n\t\t * @var Package\n\t\t */\n\t\tprotected $package;\n\n\t\tprivate $extraUi = null;\n\n\t\t/**\n\t\t * Class constructor.\n\t\t *\n\t\t * @param string $metadataUrl The URL of the plugin's metadata file.\n\t\t * @param string $pluginFile Fully qualified path to the main plugin file.\n\t\t * @param string $slug The plugin's 'slug'. If not specified, the filename part of $pluginFile sans '.php' will be used as the slug.\n\t\t * @param integer $checkPeriod How often to check for updates (in hours). Defaults to checking every 12 hours. Set to 0 to disable automatic update checks.\n\t\t * @param string $optionName Where to store book-keeping info about update checks. Defaults to 'external_updates-$slug'.\n\t\t * @param string $muPluginFile Optional. The plugin filename relative to the mu-plugins directory.\n\t\t */\n\t\tpublic function __construct($metadataUrl, $pluginFile, $slug = '', $checkPeriod = 12, $optionName = '', $muPluginFile = ''){\n\t\t\t$this->pluginAbsolutePath = $pluginFile;\n\t\t\t$this->pluginFile = plugin_basename($this->pluginAbsolutePath);\n\t\t\t$this->muPluginFile = $muPluginFile;\n\n\t\t\t//If no slug is specified, use the name of the main plugin file as the slug.\n\t\t\t//For example, 'my-cool-plugin/cool-plugin.php' becomes 'cool-plugin'.\n\t\t\tif ( empty($slug) ){\n\t\t\t\t$slug = basename($this->pluginFile, '.php');\n\t\t\t}\n\n\t\t\t//Plugin slugs must be unique.\n\t\t\t$slugCheckFilter = 'puc_is_slug_in_use-' . $slug;\n\t\t\t$slugUsedBy = apply_filters($slugCheckFilter, false);\n\t\t\tif ( $slugUsedBy ) {\n\t\t\t\t$this->triggerError(sprintf(\n\t\t\t\t\t'Plugin slug \"%s\" is already in use by %s. Slugs must be unique.',\n\t\t\t\t\t$slug,\n\t\t\t\t\t$slugUsedBy\n\t\t\t\t), E_USER_ERROR);\n\t\t\t}\n\t\t\tadd_filter($slugCheckFilter, array($this, 'getAbsolutePath'));\n\n\t\t\tparent::__construct($metadataUrl, dirname($this->pluginFile), $slug, $checkPeriod, $optionName);\n\n\t\t\t//Backwards compatibility: If the plugin is a mu-plugin but no $muPluginFile is specified, assume\n\t\t\t//it's the same as $pluginFile given that it's not in a subdirectory (WP only looks in the base dir).\n\t\t\tif ( (strpbrk($this->pluginFile, '/\\\\') === false) && $this->isUnknownMuPlugin() ) {\n\t\t\t\t$this->muPluginFile = $this->pluginFile;\n\t\t\t}\n\n\t\t\t//To prevent a crash during plugin uninstallation, remove updater hooks when the user removes the plugin.\n\t\t\t//Details: https://github.com/YahnisElsts/plugin-update-checker/issues/138#issuecomment-335590964\n\t\t\tadd_action('uninstall_' . $this->pluginFile, array($this, 'removeHooks'));\n\n\t\t\t$this->extraUi = new Ui($this);\n\t\t}\n\n\t\t/**\n\t\t * Create an instance of the scheduler.\n\t\t *\n\t\t * @param int $checkPeriod\n\t\t * @return Scheduler\n\t\t */\n\t\tprotected function createScheduler($checkPeriod) {\n\t\t\t$scheduler = new Scheduler($this, $checkPeriod, array('load-plugins.php'));\n\t\t\tregister_deactivation_hook($this->pluginFile, array($scheduler, 'removeUpdaterCron'));\n\t\t\treturn $scheduler;\n\t\t}\n\n\t\t/**\n\t\t * Install the hooks required to run periodic update checks and inject update info\n\t\t * into WP data structures.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tprotected function installHooks(){\n\t\t\t//Override requests for plugin information\n\t\t\tadd_filter('plugins_api', array($this, 'injectInfo'), 20, 3);\n\n\t\t\tparent::installHooks();\n\t\t}\n\n\t\t/**\n\t\t * Remove update checker hooks.\n\t\t *\n\t\t * The intent is to prevent a fatal error that can happen if the plugin has an uninstall\n\t\t * hook. During uninstallation, WP includes the main plugin file (which creates a PUC instance),\n\t\t * the uninstall hook runs, WP deletes the plugin files and then updates some transients.\n\t\t * If PUC hooks are still around at this time, they could throw an error while trying to\n\t\t * autoload classes from files that no longer exist.\n\t\t *\n\t\t * The \"site_transient_{$transient}\" filter is the main problem here, but let's also remove\n\t\t * most other PUC hooks to be safe.\n\t\t *\n\t\t * @internal\n\t\t */\n\t\tpublic function removeHooks() {\n\t\t\tparent::removeHooks();\n\t\t\t$this->extraUi->removeHooks();\n\t\t\t$this->package->removeHooks();\n\n\t\t\tremove_filter('plugins_api', array($this, 'injectInfo'), 20);\n\t\t}\n\n\t\t/**\n\t\t * Retrieve plugin info from the configured API endpoint.\n\t\t *\n\t\t * @uses wp_remote_get()\n\t\t *\n\t\t * @param array $queryArgs Additional query arguments to append to the request. Optional.\n\t\t * @return PluginInfo\n\t\t */\n\t\tpublic function requestInfo($queryArgs = array()) {\n\t\t\tlist($pluginInfo, $result) = $this->requestMetadata(\n\t\t\t\tPluginInfo::class,\n\t\t\t\t'request_info',\n\t\t\t\t$queryArgs\n\t\t\t);\n\n\t\t\tif ( $pluginInfo !== null ) {\n\t\t\t\t/** @var PluginInfo $pluginInfo */\n\t\t\t\t$pluginInfo->filename = $this->pluginFile;\n\t\t\t\t$pluginInfo->slug = $this->slug;\n\t\t\t}\n\n\t\t\t$pluginInfo = apply_filters($this->getUniqueName('request_info_result'), $pluginInfo, $result);\n\t\t\treturn $pluginInfo;\n\t\t}\n\n\t\t/**\n\t\t * Retrieve the latest update (if any) from the configured API endpoint.\n\t\t *\n\t\t * @uses UpdateChecker::requestInfo()\n\t\t *\n\t\t * @return Update|null An instance of Plugin Update, or NULL when no updates are available.\n\t\t */\n\t\tpublic function requestUpdate() {\n\t\t\t//For the sake of simplicity, this function just calls requestInfo()\n\t\t\t//and transforms the result accordingly.\n\t\t\t$pluginInfo = $this->requestInfo(array('checking_for_updates' => '1'));\n\t\t\tif ( $pluginInfo === null ){\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t$update = Update::fromPluginInfo($pluginInfo);\n\n\t\t\t$update = $this->filterUpdateResult($update);\n\n\t\t\treturn $update;\n\t\t}\n\n\t\t/**\n\t\t * Intercept plugins_api() calls that request information about our plugin and\n\t\t * use the configured API endpoint to satisfy them.\n\t\t *\n\t\t * @see plugins_api()\n\t\t *\n\t\t * @param mixed $result\n\t\t * @param string $action\n\t\t * @param array|object $args\n\t\t * @return mixed\n\t\t */\n\t\tpublic function injectInfo($result, $action = null, $args = null){\n\t\t\t$relevant = ($action == 'plugin_information') && isset($args->slug) && (\n\t\t\t\t\t($args->slug == $this->slug) || ($args->slug == dirname($this->pluginFile))\n\t\t\t\t);\n\t\t\tif ( !$relevant ) {\n\t\t\t\treturn $result;\n\t\t\t}\n\n\t\t\t$pluginInfo = $this->requestInfo();\n\t\t\t$this->fixSupportedWordpressVersion($pluginInfo);\n\n\t\t\t$pluginInfo = apply_filters($this->getUniqueName('pre_inject_info'), $pluginInfo);\n\t\t\tif ( $pluginInfo ) {\n\t\t\t\treturn $pluginInfo->toWpFormat();\n\t\t\t}\n\n\t\t\treturn $result;\n\t\t}\n\n\t\tprotected function shouldShowUpdates() {\n\t\t\t//No update notifications for mu-plugins unless explicitly enabled. The MU plugin file\n\t\t\t//is usually different from the main plugin file so the update wouldn't show up properly anyway.\n\t\t\treturn !$this->isUnknownMuPlugin();\n\t\t}\n\n\t\t/**\n\t\t * @param \\stdClass|null $updates\n\t\t * @param \\stdClass $updateToAdd\n\t\t * @return \\stdClass\n\t\t */\n\t\tprotected function addUpdateToList($updates, $updateToAdd) {\n\t\t\tif ( $this->package->isMuPlugin() ) {\n\t\t\t\t//WP does not support automatic update installation for mu-plugins, but we can\n\t\t\t\t//still display a notice.\n\t\t\t\t$updateToAdd->package = null;\n\t\t\t}\n\t\t\treturn parent::addUpdateToList($updates, $updateToAdd);\n\t\t}\n\n\t\t/**\n\t\t * @param \\stdClass|null $updates\n\t\t * @return \\stdClass|null\n\t\t */\n\t\tprotected function removeUpdateFromList($updates) {\n\t\t\t$updates = parent::removeUpdateFromList($updates);\n\t\t\tif ( !empty($this->muPluginFile) && isset($updates, $updates->response) ) {\n\t\t\t\tunset($updates->response[$this->muPluginFile]);\n\t\t\t}\n\t\t\treturn $updates;\n\t\t}\n\n\t\t/**\n\t\t * For plugins, the update array is indexed by the plugin filename relative to the \"plugins\"\n\t\t * directory. Example: \"plugin-name/plugin.php\".\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprotected function getUpdateListKey() {\n\t\t\tif ( $this->package->isMuPlugin() ) {\n\t\t\t\treturn $this->muPluginFile;\n\t\t\t}\n\t\t\treturn $this->pluginFile;\n\t\t}\n\n\t\tprotected function getNoUpdateItemFields() {\n\t\t\treturn array_merge(\n\t\t\t\tparent::getNoUpdateItemFields(),\n\t\t\t\tarray(\n\t\t\t\t\t'id'            => $this->pluginFile,\n\t\t\t\t\t'slug'          => $this->slug,\n\t\t\t\t\t'plugin'        => $this->pluginFile,\n\t\t\t\t\t'icons'         => array(),\n\t\t\t\t\t'banners'       => array(),\n\t\t\t\t\t'banners_rtl'   => array(),\n\t\t\t\t\t'tested'        => '',\n\t\t\t\t\t'compatibility' => new \\stdClass(),\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Alias for isBeingUpgraded().\n\t\t *\n\t\t * @deprecated\n\t\t * @param \\WP_Upgrader|null $upgrader The upgrader that's performing the current update.\n\t\t * @return bool\n\t\t */\n\t\tpublic function isPluginBeingUpgraded($upgrader = null) {\n\t\t\treturn $this->isBeingUpgraded($upgrader);\n\t\t}\n\n\t\t/**\n\t\t * Is there an update being installed for this plugin, right now?\n\t\t *\n\t\t * @param \\WP_Upgrader|null $upgrader\n\t\t * @return bool\n\t\t */\n\t\tpublic function isBeingUpgraded($upgrader = null) {\n\t\t\treturn $this->upgraderStatus->isPluginBeingUpgraded($this->pluginFile, $upgrader);\n\t\t}\n\n\t\t/**\n\t\t * Get the details of the currently available update, if any.\n\t\t *\n\t\t * If no updates are available, or if the last known update version is below or equal\n\t\t * to the currently installed version, this method will return NULL.\n\t\t *\n\t\t * Uses cached update data. To retrieve update information straight from\n\t\t * the metadata URL, call requestUpdate() instead.\n\t\t *\n\t\t * @return Update|null\n\t\t */\n\t\tpublic function getUpdate() {\n\t\t\t$update = parent::getUpdate();\n\t\t\tif ( isset($update) ) {\n\t\t\t\t/** @var Update $update */\n\t\t\t\t$update->filename = $this->pluginFile;\n\t\t\t}\n\t\t\treturn $update;\n\t\t}\n\n\t\t/**\n\t\t * Get the translated plugin title.\n\t\t *\n\t\t * @deprecated\n\t\t * @return string\n\t\t */\n\t\tpublic function getPluginTitle() {\n\t\t\treturn $this->package->getPluginTitle();\n\t\t}\n\n\t\t/**\n\t\t * Check if the current user has the required permissions to install updates.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tpublic function userCanInstallUpdates() {\n\t\t\treturn current_user_can('update_plugins');\n\t\t}\n\n\t\t/**\n\t\t * Check if the plugin file is inside the mu-plugins directory.\n\t\t *\n\t\t * @deprecated\n\t\t * @return bool\n\t\t */\n\t\tprotected function isMuPlugin() {\n\t\t\treturn $this->package->isMuPlugin();\n\t\t}\n\n\t\t/**\n\t\t * MU plugins are partially supported, but only when we know which file in mu-plugins\n\t\t * corresponds to this plugin.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tprotected function isUnknownMuPlugin() {\n\t\t\treturn empty($this->muPluginFile) && $this->package->isMuPlugin();\n\t\t}\n\n\t\t/**\n\t\t * Get absolute path to the main plugin file.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tpublic function getAbsolutePath() {\n\t\t\treturn $this->pluginAbsolutePath;\n\t\t}\n\n\t\t/**\n\t\t * Register a callback for filtering query arguments.\n\t\t *\n\t\t * The callback function should take one argument - an associative array of query arguments.\n\t\t * It should return a modified array of query arguments.\n\t\t *\n\t\t * @uses add_filter() This method is a convenience wrapper for add_filter().\n\t\t *\n\t\t * @param callable $callback\n\t\t * @return void\n\t\t */\n\t\tpublic function addQueryArgFilter($callback){\n\t\t\t$this->addFilter('request_info_query_args', $callback);\n\t\t}\n\n\t\t/**\n\t\t * Register a callback for filtering arguments passed to wp_remote_get().\n\t\t *\n\t\t * The callback function should take one argument - an associative array of arguments -\n\t\t * and return a modified array or arguments. See the WP documentation on wp_remote_get()\n\t\t * for details on what arguments are available and how they work.\n\t\t *\n\t\t * @uses add_filter() This method is a convenience wrapper for add_filter().\n\t\t *\n\t\t * @param callable $callback\n\t\t * @return void\n\t\t */\n\t\tpublic function addHttpRequestArgFilter($callback) {\n\t\t\t$this->addFilter('request_info_options', $callback);\n\t\t}\n\n\t\t/**\n\t\t * Register a callback for filtering the plugin info retrieved from the external API.\n\t\t *\n\t\t * The callback function should take two arguments. If the plugin info was retrieved\n\t\t * successfully, the first argument passed will be an instance of  PluginInfo. Otherwise,\n\t\t * it will be NULL. The second argument will be the corresponding return value of\n\t\t * wp_remote_get (see WP docs for details).\n\t\t *\n\t\t * The callback function should return a new or modified instance of PluginInfo or NULL.\n\t\t *\n\t\t * @uses add_filter() This method is a convenience wrapper for add_filter().\n\t\t *\n\t\t * @param callable $callback\n\t\t * @return void\n\t\t */\n\t\tpublic function addResultFilter($callback) {\n\t\t\t$this->addFilter('request_info_result', $callback, 10, 2);\n\t\t}\n\n\t\tprotected function createDebugBarExtension() {\n\t\t\treturn new DebugBar\\PluginExtension($this);\n\t\t}\n\n\t\t/**\n\t\t * Create a package instance that represents this plugin or theme.\n\t\t *\n\t\t * @return InstalledPackage\n\t\t */\n\t\tprotected function createInstalledPackage() {\n\t\t\treturn new Package($this->pluginAbsolutePath, $this);\n\t\t}\n\n\t\t/**\n\t\t * @return Package\n\t\t */\n\t\tpublic function getInstalledPackage() {\n\t\t\treturn $this->package;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/Plugin/Update.php","ext":"php","size":3259,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Update as BaseUpdate;\n\nif ( !class_exists(Update::class, false) ):\n\n\t/**\n\t * A simple container class for holding information about an available update.\n\t *\n\t * @author Janis Elsts\n\t * @copyright 2016\n\t * @access public\n\t */\n\tclass Update extends BaseUpdate {\n\t\tpublic $id = 0;\n\t\tpublic $homepage;\n\t\tpublic $upgrade_notice;\n\t\tpublic $tested;\n\t\tpublic $requires_php = false;\n\t\tpublic $icons = array();\n\t\tpublic $filename; //Plugin filename relative to the plugins directory.\n\n\t\tprotected static $extraFields = array(\n\t\t\t'id', 'homepage', 'tested', 'requires_php', 'upgrade_notice', 'icons', 'filename',\n\t\t);\n\n\t\t/**\n\t\t * Create a new instance of PluginUpdate from its JSON-encoded representation.\n\t\t *\n\t\t * @param string $json\n\t\t * @return self|null\n\t\t */\n\t\tpublic static function fromJson($json){\n\t\t\t//Since update-related information is simply a subset of the full plugin info,\n\t\t\t//we can parse the update JSON as if it was a plugin info string, then copy over\n\t\t\t//the parts that we care about.\n\t\t\t$pluginInfo = PluginInfo::fromJson($json);\n\t\t\tif ( $pluginInfo !== null ) {\n\t\t\t\treturn self::fromPluginInfo($pluginInfo);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Create a new instance of PluginUpdate based on an instance of PluginInfo.\n\t\t * Basically, this just copies a subset of fields from one object to another.\n\t\t *\n\t\t * @param PluginInfo $info\n\t\t * @return static\n\t\t */\n\t\tpublic static function fromPluginInfo($info){\n\t\t\treturn static::fromObject($info);\n\t\t}\n\n\t\t/**\n\t\t * Create a new instance by copying the necessary fields from another object.\n\t\t *\n\t\t * @param \\StdClass|PluginInfo|self $object The source object.\n\t\t * @return self The new copy.\n\t\t */\n\t\tpublic static function fromObject($object) {\n\t\t\t$update = new self();\n\t\t\t$update->copyFields($object, $update);\n\t\t\treturn $update;\n\t\t}\n\n\t\t/**\n\t\t * @return string[]\n\t\t */\n\t\tprotected function getFieldNames() {\n\t\t\treturn array_merge(parent::getFieldNames(), self::$extraFields);\n\t\t}\n\n\t\t/**\n\t\t * Transform the update into the format used by WordPress native plugin API.\n\t\t *\n\t\t * @return object\n\t\t */\n\t\tpublic function toWpFormat() {\n\t\t\t$update = parent::toWpFormat();\n\n\t\t\t$update->id = $this->id;\n\t\t\t$update->url = $this->homepage;\n\t\t\t$update->tested = $this->tested;\n\t\t\t$update->requires_php = $this->requires_php;\n\t\t\t$update->plugin = $this->filename;\n\n\t\t\tif ( !empty($this->upgrade_notice) ) {\n\t\t\t\t$update->upgrade_notice = $this->upgrade_notice;\n\t\t\t}\n\n\t\t\tif ( !empty($this->icons) && is_array($this->icons) ) {\n\t\t\t\t//This should be an array with up to 4 keys: 'svg', '1x', '2x' and 'default'.\n\t\t\t\t//Docs: https://developer.wordpress.org/plugins/wordpress-org/plugin-assets/#plugin-icons\n\t\t\t\t$icons = array_intersect_key(\n\t\t\t\t\t$this->icons,\n\t\t\t\t\tarray('svg' => true, '1x' => true, '2x' => true, 'default' => true)\n\t\t\t\t);\n\t\t\t\tif ( !empty($icons) ) {\n\t\t\t\t\t$update->icons = $icons;\n\n\t\t\t\t\t//It appears that the 'default' icon isn't used anywhere in WordPress 4.9,\n\t\t\t\t\t//but lets set it just in case a future release needs it.\n\t\t\t\t\tif ( !isset($update->icons['default']) ) {\n\t\t\t\t\t\t$update->icons['default'] = current($update->icons);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $update;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/WpCliCheckTrigger.php","ext":"php","size":2584,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nuse WP_CLI;\n\n/**\n * Triggers an update check when relevant WP-CLI commands are executed.\n *\n * When WP-CLI runs certain commands like \"wp plugin status\" or \"wp theme list\", it calls\n * wp_update_plugins() and wp_update_themes() to refresh update information. This class hooks into\n * the same commands and triggers an update check when they are executed.\n *\n * Note that wp_update_plugins() and wp_update_themes() do not perform an update check *every* time\n * they are called. They use a context-dependent delay between update checks. Similarly, this class\n * calls Scheduler::maybeCheckForUpdates(), which also dynamically decides whether to actually\n * run a check. If you want to force an update check, call UpdateChecker::checkForUpdates() instead.\n */\nclass WpCliCheckTrigger {\n\t/**\n\t * @var Scheduler\n\t */\n\tprivate $scheduler;\n\n\t/**\n\t * @var string 'plugin' or 'theme'\n\t */\n\tprivate $componentType;\n\n\t/**\n\t * @var bool Whether an update check was already triggered during the current request\n\t *           or script execution.\n\t */\n\tprivate $wasCheckTriggered = false;\n\n\tpublic function __construct($componentType, Scheduler $scheduler) {\n\t\tif ( !in_array($componentType, ['plugin', 'theme']) ) {\n\t\t\tthrow new \\InvalidArgumentException('Invalid component type. Must be \"plugin\" or \"theme\".');\n\t\t}\n\n\t\t$this->componentType = $componentType;\n\t\t$this->scheduler = $scheduler;\n\n\t\tif ( !defined('WP_CLI') || !class_exists(WP_CLI::class, false) ) {\n\t\t\treturn; //Nothing to do if WP-CLI is not available.\n\t\t}\n\n\t\t/*\n\t\t * We can't hook directly into wp_update_plugins(), but we can hook into the WP-CLI\n\t\t * commands that call it. We'll use the \"before_invoke:xyz\" hook to trigger update checks.\n\t\t */\n\t\tforeach ($this->getRelevantCommands() as $command) {\n\t\t\tWP_CLI::add_hook('before_invoke:' . $command, [$this, 'triggerUpdateCheckOnce']);\n\t\t}\n\t}\n\n\tprivate function getRelevantCommands() {\n\t\t$result = [];\n\t\tforeach (['status', 'list', 'update'] as $subcommand) {\n\t\t\t$result[] = $this->componentType . ' ' . $subcommand;\n\t\t}\n\t\treturn $result;\n\t}\n\n\t/**\n\t * Trigger a potential update check once.\n\t *\n\t * @param mixed $input\n\t * @return mixed The input value, unchanged.\n\t * @internal This method is public so that it can be used as a WP-CLI hook callback.\n\t *           It should not be called directly.\n\t *\n\t */\n\tpublic function triggerUpdateCheckOnce($input = null) {\n\t\tif ( $this->wasCheckTriggered ) {\n\t\t\treturn $input;\n\t\t}\n\n\t\t$this->wasCheckTriggered = true;\n\t\t$this->scheduler->maybeCheckForUpdates();\n\n\t\treturn $input;\n\t}\n}"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/OAuthSignature.php","ext":"php","size":3065,"mtime":1756373566,"type":"text","content":"<?php\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nif ( !class_exists(OAuthSignature::class, false) ):\n\n\t/**\n\t * A basic signature generator for zero-legged OAuth 1.0.\n\t */\n\tclass OAuthSignature {\n\t\tprivate $consumerKey = '';\n\t\tprivate $consumerSecret = '';\n\n\t\tpublic function __construct($consumerKey, $consumerSecret) {\n\t\t\t$this->consumerKey = $consumerKey;\n\t\t\t$this->consumerSecret = $consumerSecret;\n\t\t}\n\n\t\t/**\n\t\t * Sign a URL using OAuth 1.0.\n\t\t *\n\t\t * @param string $url The URL to be signed. It may contain query parameters.\n\t\t * @param string $method HTTP method such as \"GET\", \"POST\" and so on.\n\t\t * @return string The signed URL.\n\t\t */\n\t\tpublic function sign($url, $method = 'GET') {\n\t\t\t$parameters = array();\n\n\t\t\t//Parse query parameters.\n\t\t\t$query = wp_parse_url($url, PHP_URL_QUERY);\n\t\t\tif ( !empty($query) ) {\n\t\t\t\tparse_str($query, $parsedParams);\n\t\t\t\tif ( is_array($parsedParams) ) {\n\t\t\t\t\t$parameters = $parsedParams;\n\t\t\t\t}\n\t\t\t\t//Remove the query string from the URL. We'll replace it later.\n\t\t\t\t$url = substr($url, 0, strpos($url, '?'));\n\t\t\t}\n\n\t\t\t$parameters = array_merge(\n\t\t\t\t$parameters,\n\t\t\t\tarray(\n\t\t\t\t\t'oauth_consumer_key' => $this->consumerKey,\n\t\t\t\t\t'oauth_nonce' => $this->nonce(),\n\t\t\t\t\t'oauth_signature_method' => 'HMAC-SHA1',\n\t\t\t\t\t'oauth_timestamp' => time(),\n\t\t\t\t\t'oauth_version' => '1.0',\n\t\t\t\t)\n\t\t\t);\n\t\t\tunset($parameters['oauth_signature']);\n\n\t\t\t//Parameters must be sorted alphabetically before signing.\n\t\t\tksort($parameters);\n\n\t\t\t//The most complicated part of the request - generating the signature.\n\t\t\t//The string to sign contains the HTTP method, the URL path, and all of\n\t\t\t//our query parameters. Everything is URL encoded. Then we concatenate\n\t\t\t//them with ampersands into a single string to hash.\n\t\t\t$encodedVerb = urlencode($method);\n\t\t\t$encodedUrl = urlencode($url);\n\t\t\t$encodedParams = urlencode(http_build_query($parameters, '', '&'));\n\n\t\t\t$stringToSign = $encodedVerb . '&' . $encodedUrl . '&' . $encodedParams;\n\n\t\t\t//Since we only have one OAuth token (the consumer secret) we only have\n\t\t\t//to use it as our HMAC key. However, we still have to append an & to it\n\t\t\t//as if we were using it with additional tokens.\n\t\t\t$secret = urlencode($this->consumerSecret) . '&';\n\n\t\t\t//The signature is a hash of the consumer key and the base string. Note\n\t\t\t//that we have to get the raw output from hash_hmac and base64 encode\n\t\t\t//the binary data result.\n\t\t\t$parameters['oauth_signature'] = base64_encode(hash_hmac('sha1', $stringToSign, $secret, true));\n\n\t\t\treturn ($url . '?' . http_build_query($parameters));\n\t\t}\n\n\t\t/**\n\t\t * Generate a random nonce.\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprivate function nonce() {\n\t\t\t$mt = microtime();\n\n\t\t\t$rand = null;\n\t\t\tif ( is_callable('random_bytes') ) {\n\t\t\t\ttry {\n\t\t\t\t\t$rand = random_bytes(16);\n\t\t\t\t} catch (\\Exception $ex) {\n\t\t\t\t\t//Fall back to mt_rand (below).\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( $rand === null ) {\n\t\t\t\t//phpcs:ignore WordPress.WP.AlternativeFunctions.rand_mt_rand\n\t\t\t\t$rand = function_exists('wp_rand') ? wp_rand() : mt_rand();\n\t\t\t}\n\n\t\t\treturn md5($mt . '_' . $rand);\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5p6/PucFactory.php","ext":"php","size":11767,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5p6;\n\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Plugin;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Theme;\nuse YahnisElsts\\PluginUpdateChecker\\v5p6\\Vcs;\n\nif ( !class_exists(PucFactory::class, false) ):\n\n\t/**\n\t * A factory that builds update checker instances.\n\t *\n\t * When multiple versions of the same class have been loaded (e.g. PluginUpdateChecker 4.0\n\t * and 4.1), this factory will always use the latest available minor version. Register class\n\t * versions by calling {@link PucFactory::addVersion()}.\n\t *\n\t * At the moment it can only build instances of the UpdateChecker class. Other classes are\n\t * intended mainly for internal use and refer directly to specific implementations.\n\t */\n\tclass PucFactory {\n\t\tprotected static $classVersions = array();\n\t\tprotected static $sorted = false;\n\n\t\tprotected static $myMajorVersion = '';\n\t\tprotected static $latestCompatibleVersion = '';\n\n\t\t/**\n\t\t * A wrapper method for buildUpdateChecker() that reads the metadata URL from the plugin or theme header.\n\t\t *\n\t\t * @param string $fullPath Full path to the main plugin file or the theme's style.css.\n\t\t * @param array $args Optional arguments. Keys should match the argument names of the buildUpdateChecker() method.\n\t\t * @return Plugin\\UpdateChecker|Theme\\UpdateChecker|Vcs\\BaseChecker\n\t\t */\n\t\tpublic static function buildFromHeader($fullPath, $args = array()) {\n\t\t\t$fullPath = self::normalizePath($fullPath);\n\n\t\t\t//Set up defaults.\n\t\t\t$defaults = array(\n\t\t\t\t'metadataUrl'  => '',\n\t\t\t\t'slug'         => '',\n\t\t\t\t'checkPeriod'  => 12,\n\t\t\t\t'optionName'   => '',\n\t\t\t\t'muPluginFile' => '',\n\t\t\t);\n\t\t\t$args = array_merge($defaults, array_intersect_key($args, $defaults));\n\t\t\textract($args, EXTR_SKIP);\n\n\t\t\t//Check for the service URI\n\t\t\tif ( empty($metadataUrl) ) {\n\t\t\t\t$metadataUrl = self::getServiceURI($fullPath);\n\t\t\t}\n\n\t\t\treturn self::buildUpdateChecker($metadataUrl, $fullPath, $slug, $checkPeriod, $optionName, $muPluginFile);\n\t\t}\n\n\t\t/**\n\t\t * Create a new instance of the update checker.\n\t\t *\n\t\t * This method automatically detects if you're using it for a plugin or a theme and chooses\n\t\t * the appropriate implementation for your update source (JSON file, GitHub, BitBucket, etc).\n\t\t *\n\t\t * @see UpdateChecker::__construct\n\t\t *\n\t\t * @param string $metadataUrl The URL of the metadata file, a GitHub repository, or another supported update source.\n\t\t * @param string $fullPath Full path to the main plugin file or to the theme directory.\n\t\t * @param string $slug Custom slug. Defaults to the name of the main plugin file or the theme directory.\n\t\t * @param int $checkPeriod How often to check for updates (in hours).\n\t\t * @param string $optionName Where to store bookkeeping info about update checks.\n\t\t * @param string $muPluginFile The plugin filename relative to the mu-plugins directory.\n\t\t * @return Plugin\\UpdateChecker|Theme\\UpdateChecker|Vcs\\BaseChecker\n\t\t */\n\t\tpublic static function buildUpdateChecker($metadataUrl, $fullPath, $slug = '', $checkPeriod = 12, $optionName = '', $muPluginFile = '') {\n\t\t\t$fullPath = self::normalizePath($fullPath);\n\t\t\t$id = null;\n\n\t\t\t//Plugin or theme?\n\t\t\t$themeDirectory = self::getThemeDirectoryName($fullPath);\n\t\t\tif ( self::isPluginFile($fullPath) ) {\n\t\t\t\t$type = 'Plugin';\n\t\t\t\t$id = $fullPath;\n\t\t\t} else if ( $themeDirectory !== null ) {\n\t\t\t\t$type = 'Theme';\n\t\t\t\t$id = $themeDirectory;\n\t\t\t} else {\n\t\t\t\tthrow new \\RuntimeException(sprintf(\n\t\t\t\t\t'The update checker cannot determine if \"%s\" is a plugin or a theme. ' .\n\t\t\t\t\t'This is a bug. Please contact the PUC developer.',\n\t\t\t\t\thtmlentities($fullPath)\n\t\t\t\t));\n\t\t\t}\n\n\t\t\t//Which hosting service does the URL point to?\n\t\t\t$service = self::getVcsService($metadataUrl);\n\n\t\t\t$apiClass = null;\n\t\t\tif ( empty($service) ) {\n\t\t\t\t//The default is to get update information from a remote JSON file.\n\t\t\t\t$checkerClass = $type . '\\\\UpdateChecker';\n\t\t\t} else {\n\t\t\t\t//You can also use a VCS repository like GitHub.\n\t\t\t\t$checkerClass = 'Vcs\\\\' . $type . 'UpdateChecker';\n\t\t\t\t$apiClass = $service . 'Api';\n\t\t\t}\n\n\t\t\t$checkerClass = self::getCompatibleClassVersion($checkerClass);\n\t\t\tif ( $checkerClass === null ) {\n\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t\t\t\ttrigger_error(\n\t\t\t\t\tesc_html(sprintf(\n\t\t\t\t\t\t'PUC %s does not support updates for %ss %s',\n\t\t\t\t\t\tself::$latestCompatibleVersion,\n\t\t\t\t\t\tstrtolower($type),\n\t\t\t\t\t\t$service ? ('hosted on ' . $service) : 'using JSON metadata'\n\t\t\t\t\t)),\n\t\t\t\t\tE_USER_ERROR\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( !isset($apiClass) ) {\n\t\t\t\t//Plain old update checker.\n\t\t\t\treturn new $checkerClass($metadataUrl, $id, $slug, $checkPeriod, $optionName, $muPluginFile);\n\t\t\t} else {\n\t\t\t\t//VCS checker + an API client.\n\t\t\t\t$apiClass = self::getCompatibleClassVersion($apiClass);\n\t\t\t\tif ( $apiClass === null ) {\n\t\t\t\t\t//phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t\t\t\t\ttrigger_error(esc_html(sprintf(\n\t\t\t\t\t\t'PUC %s does not support %s',\n\t\t\t\t\t\tself::$latestCompatibleVersion,\n\t\t\t\t\t\t$service\n\t\t\t\t\t)), E_USER_ERROR);\n\t\t\t\t}\n\n\t\t\t\treturn new $checkerClass(\n\t\t\t\t\tnew $apiClass($metadataUrl),\n\t\t\t\t\t$id,\n\t\t\t\t\t$slug,\n\t\t\t\t\t$checkPeriod,\n\t\t\t\t\t$optionName,\n\t\t\t\t\t$muPluginFile\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * Normalize a filesystem path. Introduced in WP 3.9.\n\t\t * Copying here allows use of the class on earlier versions.\n\t\t * This version adapted from WP 4.8.2 (unchanged since 4.5.6)\n\t\t *\n\t\t * @param string $path Path to normalize.\n\t\t * @return string Normalized path.\n\t\t */\n\t\tpublic static function normalizePath($path) {\n\t\t\tif ( function_exists('wp_normalize_path') ) {\n\t\t\t\treturn wp_normalize_path($path);\n\t\t\t}\n\t\t\t$path = str_replace('\\\\', '/', $path);\n\t\t\t$path = preg_replace('|(?<=.)/+|', '/', $path);\n\t\t\tif ( substr($path, 1, 1) === ':' ) {\n\t\t\t\t$path = ucfirst($path);\n\t\t\t}\n\t\t\treturn $path;\n\t\t}\n\n\t\t/**\n\t\t * Check if the path points to a plugin file.\n\t\t *\n\t\t * @param string $absolutePath Normalized path.\n\t\t * @return bool\n\t\t */\n\t\tprotected static function isPluginFile($absolutePath) {\n\t\t\t//Is the file inside the \"plugins\" or \"mu-plugins\" directory?\n\t\t\t$pluginDir = self::normalizePath(WP_PLUGIN_DIR);\n\t\t\t$muPluginDir = self::normalizePath(WPMU_PLUGIN_DIR);\n\t\t\tif ( (strpos($absolutePath, $pluginDir) === 0) || (strpos($absolutePath, $muPluginDir) === 0) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//Is it a file at all? Caution: is_file() can fail if the parent dir. doesn't have the +x permission set.\n\t\t\tif ( !is_file($absolutePath) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t//Does it have a valid plugin header?\n\t\t\t//This is a last-ditch check for plugins symlinked from outside the WP root.\n\t\t\tif ( function_exists('get_file_data') ) {\n\t\t\t\t$headers = get_file_data($absolutePath, array('Name' => 'Plugin Name'), 'plugin');\n\t\t\t\treturn !empty($headers['Name']);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Get the name of the theme's directory from a full path to a file inside that directory.\n\t\t * E.g. \"/abc/public_html/wp-content/themes/foo/whatever.php\" => \"foo\".\n\t\t *\n\t\t * Note that subdirectories are currently not supported. For example,\n\t\t * \"/xyz/wp-content/themes/my-theme/includes/whatever.php\" => NULL.\n\t\t *\n\t\t * @param string $absolutePath Normalized path.\n\t\t * @return string|null Directory name, or NULL if the path doesn't point to a theme.\n\t\t */\n\t\tprotected static function getThemeDirectoryName($absolutePath) {\n\t\t\tif ( is_file($absolutePath) ) {\n\t\t\t\t$absolutePath = dirname($absolutePath);\n\t\t\t}\n\n\t\t\tif ( file_exists($absolutePath . '/style.css') ) {\n\t\t\t\treturn basename($absolutePath);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get the service URI from the file header.\n\t\t *\n\t\t * @param string $fullPath\n\t\t * @return string\n\t\t */\n\t\tprivate static function getServiceURI($fullPath) {\n\t\t\t//Look for the URI\n\t\t\tif ( is_readable($fullPath) ) {\n\t\t\t\t$seek = array(\n\t\t\t\t\t'github' => 'GitHub URI',\n\t\t\t\t\t'gitlab' => 'GitLab URI',\n\t\t\t\t\t'bucket' => 'BitBucket URI',\n\t\t\t\t);\n\t\t\t\t$seek = apply_filters('puc_get_source_uri', $seek);\n\t\t\t\t$data = get_file_data($fullPath, $seek);\n\t\t\t\tforeach ($data as $key => $uri) {\n\t\t\t\t\tif ( $uri ) {\n\t\t\t\t\t\treturn $uri;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//URI was not found so throw an error.\n\t\t\tthrow new \\RuntimeException(\n\t\t\t\tsprintf('Unable to locate URI in header of \"%s\"', htmlentities($fullPath))\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Get the name of the hosting service that the URL points to.\n\t\t *\n\t\t * @param string $metadataUrl\n\t\t * @return string|null\n\t\t */\n\t\tprivate static function getVcsService($metadataUrl) {\n\t\t\t$service = null;\n\n\t\t\t//Which hosting service does the URL point to?\n\t\t\t$host = (string)(wp_parse_url($metadataUrl, PHP_URL_HOST));\n\t\t\t$path = (string)(wp_parse_url($metadataUrl, PHP_URL_PATH));\n\n\t\t\t//Check if the path looks like \"/user-name/repository\".\n\t\t\t//For GitLab.com it can also be \"/user/group1/group2/.../repository\".\n\t\t\t$repoRegex = '@^/?([^/]+?)/([^/#?&]+?)/?$@';\n\t\t\tif ( $host === 'gitlab.com' ) {\n\t\t\t\t$repoRegex = '@^/?(?:[^/#?&]++/){1,20}(?:[^/#?&]++)/?$@';\n\t\t\t}\n\t\t\tif ( preg_match($repoRegex, $path) ) {\n\t\t\t\t$knownServices = array(\n\t\t\t\t\t'github.com' => 'GitHub',\n\t\t\t\t\t'bitbucket.org' => 'BitBucket',\n\t\t\t\t\t'gitlab.com' => 'GitLab',\n\t\t\t\t);\n\t\t\t\tif ( isset($knownServices[$host]) ) {\n\t\t\t\t\t$service = $knownServices[$host];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn apply_filters('puc_get_vcs_service', $service, $host, $path, $metadataUrl);\n\t\t}\n\n\t\t/**\n\t\t * Get the latest version of the specified class that has the same major version number\n\t\t * as this factory class.\n\t\t *\n\t\t * @param string $class Partial class name.\n\t\t * @return string|null Full class name.\n\t\t */\n\t\tprotected static function getCompatibleClassVersion($class) {\n\t\t\tif ( isset(self::$classVersions[$class][self::$latestCompatibleVersion]) ) {\n\t\t\t\treturn self::$classVersions[$class][self::$latestCompatibleVersion];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t * Get the specific class name for the latest available version of a class.\n\t\t *\n\t\t * @param string $class\n\t\t * @return null|string\n\t\t */\n\t\tpublic static function getLatestClassVersion($class) {\n\t\t\tif ( !self::$sorted ) {\n\t\t\t\tself::sortVersions();\n\t\t\t}\n\n\t\t\tif ( isset(self::$classVersions[$class]) ) {\n\t\t\t\treturn reset(self::$classVersions[$class]);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Sort available class versions in descending order (i.e. newest first).\n\t\t */\n\t\tprotected static function sortVersions() {\n\t\t\tforeach ( self::$classVersions as $class => $versions ) {\n\t\t\t\tuksort($versions, array(__CLASS__, 'compareVersions'));\n\t\t\t\tself::$classVersions[$class] = $versions;\n\t\t\t}\n\t\t\tself::$sorted = true;\n\t\t}\n\n\t\tprotected static function compareVersions($a, $b) {\n\t\t\treturn -version_compare($a, $b);\n\t\t}\n\n\t\t/**\n\t\t * Register a version of a class.\n\t\t *\n\t\t * @access private This method is only for internal use by the library.\n\t\t *\n\t\t * @param string $generalClass Class name without version numbers, e.g. 'PluginUpdateChecker'.\n\t\t * @param string $versionedClass Actual class name, e.g. 'PluginUpdateChecker_1_2'.\n\t\t * @param string $version Version number, e.g. '1.2'.\n\t\t */\n\t\tpublic static function addVersion($generalClass, $versionedClass, $version) {\n\t\t\tif ( empty(self::$myMajorVersion) ) {\n\t\t\t\t$lastNamespaceSegment = substr(__NAMESPACE__, strrpos(__NAMESPACE__, '\\\\') + 1);\n\t\t\t\tself::$myMajorVersion = substr(ltrim($lastNamespaceSegment, 'v'), 0, 1);\n\t\t\t}\n\n\t\t\t//Store the greatest version number that matches our major version.\n\t\t\t$components = explode('.', $version);\n\t\t\tif ( $components[0] === self::$myMajorVersion ) {\n\n\t\t\t\tif (\n\t\t\t\t\tempty(self::$latestCompatibleVersion)\n\t\t\t\t\t|| version_compare($version, self::$latestCompatibleVersion, '>')\n\t\t\t\t) {\n\t\t\t\t\tself::$latestCompatibleVersion = $version;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( !isset(self::$classVersions[$generalClass]) ) {\n\t\t\t\tself::$classVersions[$generalClass] = array();\n\t\t\t}\n\t\t\tself::$classVersions[$generalClass][$version] = $versionedClass;\n\t\t\tself::$sorted = false;\n\t\t}\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/Puc/v5/PucFactory.php","ext":"php","size":191,"mtime":1756373566,"type":"text","content":"<?php\n\nnamespace YahnisElsts\\PluginUpdateChecker\\v5;\n\nif ( !class_exists(PucFactory::class, false) ):\n\n\tclass PucFactory extends \\YahnisElsts\\PluginUpdateChecker\\v5p6\\PucFactory {\n\t}\n\nendif;\n"},{"base":"plugins","rel":"hostinger-ai-assistant/vendor/yahnis-elsts/plugin-update-checker/vendor/Parsedown.php","ext":"php","size":94,"mtime":1756373566,"type":"text","content":"<?php\nif ( !class_exists('Parsedown', false) ) {\n\trequire __DIR__ . '/ParsedownModern.php';\n}\n"}]