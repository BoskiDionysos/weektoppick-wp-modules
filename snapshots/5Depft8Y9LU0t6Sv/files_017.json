[{"base":"plugins","rel":"seo-by-rank-math\/includes\/3rdparty\/divi\/assets\/css\/divi.css","ext":"css","size":130044,"mtime":1757324689,"type":"text","content":"@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}:root{--rankmath-wp-adminbar-height: 0}.rank-math-tabs input[type=text],.rank-math-tabs input[type=number],.rank-math-tabs input[type=url],.rank-math-tabs textarea,.rank-math-tabs select{border-color:#7f868d;border-radius:4px;width:100%}.rank-math-tabs input[type=text]:focus,.rank-math-tabs input[type=text]:hover,.rank-math-tabs input[type=number]:focus,.rank-math-tabs input[type=number]:hover,.rank-math-tabs input[type=url]:focus,.rank-math-tabs input[type=url]:hover,.rank-math-tabs textarea:focus,.rank-math-tabs textarea:hover,.rank-math-tabs select:focus,.rank-math-tabs select:hover{border-color:#069de3;outline:none}.rank-math-tabs input[type=text]:focus,.rank-math-tabs input[type=number]:focus,.rank-math-tabs input[type=url]:focus,.rank-math-tabs textarea:focus,.rank-math-tabs select:focus{background:#fff;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-tabs input[type=radio]:before{-webkit-box-sizing:inherit;box-sizing:inherit}.rank-math-link-control svg{max-width:24px}.rank-math-sidebar-panel .components-base-control__label{font-weight:600;display:block;margin-bottom:10px}.rank-math-sidebar-panel .components-toggle-control__label{font-weight:600}.rank-math-sidebar-panel .components-base-control__help{font-weight:normal;margin-top:0}.rank-math-sidebar-panel .components-base-control__help.rank-math-notice{margin:1rem 0;border-width:0 0 0 4px;border-radius:4px}.rank-math-sidebar-panel,.rank-math-modal-overlay{line-height:1.4em}.rank-math-sidebar-panel .hidden,.rank-math-modal-overlay .hidden{display:none}.rank-math-sidebar-panel p,.rank-math-modal-overlay p{line-height:1.5}.rank-math-sidebar-panel strong,.rank-math-modal-overlay strong{font-weight:600}.rank-math-sidebar-panel>div,.rank-math-modal-overlay>div{outline:0}.rank-math-sidebar-panel .notice,.rank-math-sidebar-panel div.error,.rank-math-sidebar-panel div.updated,.rank-math-modal-overlay .notice,.rank-math-modal-overlay div.error,.rank-math-modal-overlay div.updated{margin:5px 15px 2px;padding:1px 12px;color:#444;border-left-width:4px;background:#fff;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.04);box-shadow:0 1px 1px rgba(0,0,0,.04)}.rank-math-sidebar-panel .notice p,.rank-math-sidebar-panel div.error p,.rank-math-sidebar-panel div.updated p,.rank-math-modal-overlay .notice p,.rank-math-modal-overlay div.error p,.rank-math-modal-overlay div.updated p{margin:.5em 0;padding:2px}.rank-math-sidebar-panel .notice-info,.rank-math-modal-overlay .notice-info{border-left-color:#00a0d2}.rank-math-sidebar-panel .notice-info.notice-alt,.rank-math-modal-overlay .notice-info.notice-alt{background-color:#e5f5fa}.rank-math-sidebar-panel .notice-warning.notice-alt,.rank-math-modal-overlay .notice-warning.notice-alt{border-left-color:#ffb900;background-color:#fff8e5}.rank-math-sidebar-panel .notice-error.notice-alt,.rank-math-modal-overlay .notice-error.notice-alt{border-left-color:#dc3232;background-color:#fbeaea}.rank-math-sidebar-panel .notice-success.notice-alt,.rank-math-modal-overlay .notice-success.notice-alt{border-left-color:#00a0d2;background-color:#e5f5fa}.rank-math-tab-content-schema .variable-group .components-button{top:30px}.rank-math-tab-content-schema .variable-group .rank-math-variables-dropdown{top:59px;width:100%}.rank-math-tab-content-social p:last-of-type{margin-bottom:0}.rank-math-tab-content-advanced .rank-math-redirect .components-toggle-control.is-close .components-base-control__field{margin-bottom:0}.rank-math-robots-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-robots-list .components-base-control{margin-bottom:5px;-webkit-box-flex:0;-ms-flex:0 0 55%;flex:0 0 55%}#side-sortables .rank-math-robots-list .components-base-control{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}.rank-math-robots-list .components-base-control__field{margin-bottom:0}.rank-math-robots-list .components-base-control__field label{cursor:pointer}#side-sortables .rank-math-robots-list .components-base-control__field label{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.rank-math-robots-list .components-base-control:nth-child(even){-webkit-box-flex:0;-ms-flex:0 0 44%;flex:0 0 44%}#side-sortables .rank-math-robots-list .components-base-control:nth-child(even){-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}.rank-math-robots-list .components-base-control:nth-child(even) .rank-math-tooltip-content{float:right;width:227%}.block-editor .rank-math-robots-list .components-base-control:nth-child(even) .rank-math-tooltip-content{max-width:268px}.rank-math-robots-list.advanced-robots .components-base-control{margin-top:6px;-webkit-box-flex:0;-ms-flex:0 0 65%;flex:0 0 65%}.rank-math-robots-list.advanced-robots .components-base-control:nth-child(even){margin-top:0;-webkit-box-flex:0;-ms-flex:0 0 33%;flex:0 0 33%}.rank-math-sidebar-panel .rank-math-robots-list.advanced-robots .rank-math-tooltip-content{width:162%}.rank-math-sidebar-panel .rank-math-robots-list .rank-math-tooltip-content{width:182%}.block-editor .rank-math-sidebar-panel .rank-math-robots-list .rank-math-tooltip-content{max-width:268px}.rank-math-primary-term-picker{margin:20px 0 0;padding:16px 0;padding-bottom:24px;border-top:1px solid #e2e4e7;border-bottom:1px solid #e2e4e7}.rank-math-primary-term-picker .components-base-control{width:100%}.rank-math-primary-term-picker label{font-weight:600;margin-bottom:8px !important;color:#191e23}@media(min-width: 782px){body .edit-post-layout.is-sidebar-opened .edit-post-layout__content{margin-right:300px}body .edit-post-layout.is-sidebar-opened .edit-post-plugin-sidebar__sidebar-layout,body .edit-post-layout.is-sidebar-opened .edit-post-sidebar{width:300px}}.rank-math-datepicker__dialog .components-popover__content{padding:10px}@media(min-width: 782px){.rank-math-datepicker__dialog .components-popover__content{width:270px}}.rank-math-tabs>.components-tab-panel__tabs{display:-webkit-box;display:-ms-flexbox;display:flex;background:#f8f9fa;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 1rem}.rank-math-tabs>.components-tab-panel__tabs.contentAI{display:none}.rank-math-tabs>.components-tab-panel__tabs button{font-weight:normal;position:relative;display:block;overflow:visible;padding:3px 7px;color:#5a6065;border-radius:0;background:none;-webkit-box-shadow:none;box-shadow:none;height:50px;width:48px}.rank-math-tabs>.components-tab-panel__tabs button:hover{color:inherit;background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-tabs>.components-tab-panel__tabs button:hover i{border-radius:20em;background:#d9e9ed;-webkit-box-shadow:0 0 0 8px #d9e9ed;box-shadow:0 0 0 8px #d9e9ed}.rank-math-tabs>.components-tab-panel__tabs button:focus{font-weight:normal;outline:none;background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-tabs>.components-tab-panel__tabs button i{font-size:17px;vertical-align:-4px;margin-right:7px;margin-left:0}.rank-math-tabs>.components-tab-panel__tabs button i.rm-icon-schema{font-size:18px;vertical-align:-4px}.rank-math-tabs>.components-tab-panel__tabs button span{display:none}.rank-math-tabs>.components-tab-panel__tabs button.is-active{width:auto;margin-bottom:-1px;color:#242628}.rank-math-tabs>.components-tab-panel__tabs button.is-active:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):hover i{background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-tabs>.components-tab-panel__tabs button.is-active i{-webkit-box-shadow:none;box-shadow:none;margin-right:7px;margin-left:0}.rank-math-tabs>.components-tab-panel__tabs button.is-active span{display:inline-block}.rank-math-tabs>.components-tab-panel__tabs button.is-active:after{visibility:visible;width:100%;height:3px;content:\"\";background:#069de3;-webkit-box-shadow:none;box-shadow:none;position:absolute;bottom:-1px;left:0}.rank-math-tabs>.components-tab-panel__tabs button.hidden{display:none !important}.rank-math-tabs .cmb2-metabox-description{font-style:normal}.rank-math-tabs .rank-math-datepicker{position:relative}.rank-math-tabs .rank-math-datepicker>button{position:absolute;top:31px;right:2px;height:24px;padding:0 3px}.rank-math-tabs .rank-math-datepicker>button:not(.is-default):hover{background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-tabs .rank-math-frontend-score .components-base-control__field{margin-bottom:0}.rank-math-tabs .rank-math-frontend-score .components-toggle-control__label{margin-bottom:0}.rank-math-sidebar-panel .components-panel__body,.rank-math-sidebar-panel .components-modal__content,.rank-math-modal .components-panel__body,.rank-math-modal .components-modal__content{margin-bottom:0;border-bottom:0}.rank-math-sidebar-panel .components-panel__body .button,.rank-math-sidebar-panel .components-panel__body .button-secondary,.rank-math-sidebar-panel .components-panel__body .is-secondary,.rank-math-sidebar-panel .components-modal__content .button,.rank-math-sidebar-panel .components-modal__content .button-secondary,.rank-math-sidebar-panel .components-modal__content .is-secondary,.rank-math-modal .components-panel__body .button,.rank-math-modal .components-panel__body .button-secondary,.rank-math-modal .components-panel__body .is-secondary,.rank-math-modal .components-modal__content .button,.rank-math-modal .components-modal__content .button-secondary,.rank-math-modal .components-modal__content .is-secondary{font-size:14px;line-height:38px;height:auto;min-height:30px;padding:0 20px;color:#6b7278;border:1px solid #7f868d;border-radius:3px;background:#f8f9fa;-webkit-box-shadow:none;box-shadow:none}.rank-math-sidebar-panel .components-panel__body .button.active,.rank-math-sidebar-panel .components-panel__body .button-secondary.active,.rank-math-sidebar-panel .components-panel__body .is-secondary.active,.rank-math-sidebar-panel .components-modal__content .button.active,.rank-math-sidebar-panel .components-modal__content .button-secondary.active,.rank-math-sidebar-panel .components-modal__content .is-secondary.active,.rank-math-modal .components-panel__body .button.active,.rank-math-modal .components-panel__body .button-secondary.active,.rank-math-modal .components-panel__body .is-secondary.active,.rank-math-modal .components-modal__content .button.active,.rank-math-modal .components-modal__content .button-secondary.active,.rank-math-modal .components-modal__content .is-secondary.active{color:#61676d;border-color:#7f868d;background:#f8f9fa;-webkit-box-shadow:inset 0 2px 5px -3px #7f8292;box-shadow:inset 0 2px 5px -3px #7f8292}.rank-math-sidebar-panel .components-panel__body .button:focus:not(:disabled),.rank-math-sidebar-panel .components-panel__body .button:hover:not(:disabled),.rank-math-sidebar-panel .components-panel__body .button-secondary:focus:not(:disabled),.rank-math-sidebar-panel .components-panel__body .button-secondary:hover:not(:disabled),.rank-math-sidebar-panel .components-panel__body .is-secondary:focus:not(:disabled),.rank-math-sidebar-panel .components-panel__body .is-secondary:hover:not(:disabled),.rank-math-sidebar-panel .components-modal__content .button:focus:not(:disabled),.rank-math-sidebar-panel .components-modal__content .button:hover:not(:disabled),.rank-math-sidebar-panel .components-modal__content .button-secondary:focus:not(:disabled),.rank-math-sidebar-panel .components-modal__content .button-secondary:hover:not(:disabled),.rank-math-sidebar-panel .components-modal__content .is-secondary:focus:not(:disabled),.rank-math-sidebar-panel .components-modal__content .is-secondary:hover:not(:disabled),.rank-math-modal .components-panel__body .button:focus:not(:disabled),.rank-math-modal .components-panel__body .button:hover:not(:disabled),.rank-math-modal .components-panel__body .button-secondary:focus:not(:disabled),.rank-math-modal .components-panel__body .button-secondary:hover:not(:disabled),.rank-math-modal .components-panel__body .is-secondary:focus:not(:disabled),.rank-math-modal .components-panel__body .is-secondary:hover:not(:disabled),.rank-math-modal .components-modal__content .button:focus:not(:disabled),.rank-math-modal .components-modal__content .button:hover:not(:disabled),.rank-math-modal .components-modal__content .button-secondary:focus:not(:disabled),.rank-math-modal .components-modal__content .button-secondary:hover:not(:disabled),.rank-math-modal .components-modal__content .is-secondary:focus:not(:disabled),.rank-math-modal .components-modal__content .is-secondary:hover:not(:disabled){color:#069de3;border-color:#069de3;background:#f8f9fa}.rank-math-sidebar-panel .components-panel__body .button:focus,.rank-math-sidebar-panel .components-panel__body .button-secondary:focus,.rank-math-sidebar-panel .components-panel__body .is-secondary:focus,.rank-math-sidebar-panel .components-modal__content .button:focus,.rank-math-sidebar-panel .components-modal__content .button-secondary:focus,.rank-math-sidebar-panel .components-modal__content .is-secondary:focus,.rank-math-modal .components-panel__body .button:focus,.rank-math-modal .components-panel__body .button-secondary:focus,.rank-math-modal .components-panel__body .is-secondary:focus,.rank-math-modal .components-modal__content .button:focus,.rank-math-modal .components-modal__content .button-secondary:focus,.rank-math-modal .components-modal__content .is-secondary:focus{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-sidebar-panel .components-panel__body .button .dashicons,.rank-math-sidebar-panel .components-panel__body .button-secondary .dashicons,.rank-math-sidebar-panel .components-panel__body .is-secondary .dashicons,.rank-math-sidebar-panel .components-modal__content .button .dashicons,.rank-math-sidebar-panel .components-modal__content .button-secondary .dashicons,.rank-math-sidebar-panel .components-modal__content .is-secondary .dashicons,.rank-math-modal .components-panel__body .button .dashicons,.rank-math-modal .components-panel__body .button-secondary .dashicons,.rank-math-modal .components-panel__body .is-secondary .dashicons,.rank-math-modal .components-modal__content .button .dashicons,.rank-math-modal .components-modal__content .button-secondary .dashicons,.rank-math-modal .components-modal__content .is-secondary .dashicons{margin:0 3px 0 0}.rank-math-sidebar-panel .components-panel__body .button.disabled,.rank-math-sidebar-panel .components-panel__body .button-secondary.disabled,.rank-math-sidebar-panel .components-panel__body .is-secondary.disabled,.rank-math-sidebar-panel .components-modal__content .button.disabled,.rank-math-sidebar-panel .components-modal__content .button-secondary.disabled,.rank-math-sidebar-panel .components-modal__content .is-secondary.disabled,.rank-math-modal .components-panel__body .button.disabled,.rank-math-modal .components-panel__body .button-secondary.disabled,.rank-math-modal .components-panel__body .is-secondary.disabled,.rank-math-modal .components-modal__content .button.disabled,.rank-math-modal .components-modal__content .button-secondary.disabled,.rank-math-modal .components-modal__content .is-secondary.disabled{pointer-events:none}.rank-math-sidebar-panel .components-panel__body .button-primary,.rank-math-sidebar-panel .components-panel__body .is-primary,.rank-math-sidebar-panel .components-modal__content .button-primary,.rank-math-sidebar-panel .components-modal__content .is-primary,.rank-math-modal .components-panel__body .button-primary,.rank-math-modal .components-panel__body .is-primary,.rank-math-modal .components-modal__content .button-primary,.rank-math-modal .components-modal__content .is-primary{color:#fff;border-color:#069de3;background:#069de3;text-shadow:none;border-radius:3px}.rank-math-sidebar-panel .components-panel__body .button-primary:focus:not(:disabled),.rank-math-sidebar-panel .components-panel__body .button-primary:hover:not(:disabled),.rank-math-sidebar-panel .components-panel__body .is-primary:focus:not(:disabled),.rank-math-sidebar-panel .components-panel__body .is-primary:hover:not(:disabled),.rank-math-sidebar-panel .components-modal__content .button-primary:focus:not(:disabled),.rank-math-sidebar-panel .components-modal__content .button-primary:hover:not(:disabled),.rank-math-sidebar-panel .components-modal__content .is-primary:focus:not(:disabled),.rank-math-sidebar-panel .components-modal__content .is-primary:hover:not(:disabled),.rank-math-modal .components-panel__body .button-primary:focus:not(:disabled),.rank-math-modal .components-panel__body .button-primary:hover:not(:disabled),.rank-math-modal .components-panel__body .is-primary:focus:not(:disabled),.rank-math-modal .components-panel__body .is-primary:hover:not(:disabled),.rank-math-modal .components-modal__content .button-primary:focus:not(:disabled),.rank-math-modal .components-modal__content .button-primary:hover:not(:disabled),.rank-math-modal .components-modal__content .is-primary:focus:not(:disabled),.rank-math-modal .components-modal__content .is-primary:hover:not(:disabled){color:#fff;border-color:#08a7f1;background:#08a7f1}.rank-math-sidebar-panel .components-panel__body .button-primary:focus,.rank-math-sidebar-panel .components-panel__body .is-primary:focus,.rank-math-sidebar-panel .components-modal__content .button-primary:focus,.rank-math-sidebar-panel .components-modal__content .is-primary:focus,.rank-math-modal .components-panel__body .button-primary:focus,.rank-math-modal .components-panel__body .is-primary:focus,.rank-math-modal .components-modal__content .button-primary:focus,.rank-math-modal .components-modal__content .is-primary:focus{-webkit-box-shadow:0 0 0 1px #fff,0 0 0 3px #069de3;box-shadow:0 0 0 1px #fff,0 0 0 3px #069de3}.rank-math-sidebar-panel .components-panel__body .button-primary[disabled],.rank-math-sidebar-panel .components-panel__body .is-primary[disabled],.rank-math-sidebar-panel .components-modal__content .button-primary[disabled],.rank-math-sidebar-panel .components-modal__content .is-primary[disabled],.rank-math-modal .components-panel__body .button-primary[disabled],.rank-math-modal .components-panel__body .is-primary[disabled],.rank-math-modal .components-modal__content .button-primary[disabled],.rank-math-modal .components-modal__content .is-primary[disabled]{border-color:#069de3 !important;background:#069de3 !important;color:#9fdffc !important}.rank-math-sidebar-panel .components-panel__body .is-blue:not(.default),.rank-math-sidebar-panel .components-modal__content .is-blue:not(.default),.rank-math-modal .components-panel__body .is-blue:not(.default),.rank-math-modal .components-modal__content .is-blue:not(.default){border-color:#4e8cde;background:#4e8cde}.rank-math-sidebar-panel .components-panel__body .is-blue:not(.default):hover,.rank-math-sidebar-panel .components-panel__body .is-blue:not(.default):focus,.rank-math-sidebar-panel .components-modal__content .is-blue:not(.default):hover,.rank-math-sidebar-panel .components-modal__content .is-blue:not(.default):focus,.rank-math-modal .components-panel__body .is-blue:not(.default):hover,.rank-math-modal .components-panel__body .is-blue:not(.default):focus,.rank-math-modal .components-modal__content .is-blue:not(.default):hover,.rank-math-modal .components-modal__content .is-blue:not(.default):focus{border-color:#397eda;background:#397eda}.rank-math-sidebar-panel .components-panel__body .is-blue:not(.default):focus,.rank-math-sidebar-panel .components-modal__content .is-blue:not(.default):focus,.rank-math-modal .components-panel__body .is-blue:not(.default):focus,.rank-math-modal .components-modal__content .is-blue:not(.default):focus{-webkit-box-shadow:0 0 0 1px #fff,0 0 0 3px #397eda;box-shadow:0 0 0 1px #fff,0 0 0 3px #397eda}.rank-math-sidebar-panel .components-panel__body .is-green:not(.default),.rank-math-sidebar-panel .components-modal__content .is-green:not(.default),.rank-math-modal .components-panel__body .is-green:not(.default),.rank-math-modal .components-modal__content .is-green:not(.default){border-color:#10ac84;background:#10ac84}.rank-math-sidebar-panel .components-panel__body .is-green:not(.default):hover,.rank-math-sidebar-panel .components-panel__body .is-green:not(.default):focus,.rank-math-sidebar-panel .components-modal__content .is-green:not(.default):hover,.rank-math-sidebar-panel .components-modal__content .is-green:not(.default):focus,.rank-math-modal .components-panel__body .is-green:not(.default):hover,.rank-math-modal .components-panel__body .is-green:not(.default):focus,.rank-math-modal .components-modal__content .is-green:not(.default):hover,.rank-math-modal .components-modal__content .is-green:not(.default):focus{border-color:#0f9e79;background:#0f9e79}.rank-math-sidebar-panel .components-panel__body .is-green:not(.default):focus,.rank-math-sidebar-panel .components-modal__content .is-green:not(.default):focus,.rank-math-modal .components-panel__body .is-green:not(.default):focus,.rank-math-modal .components-modal__content .is-green:not(.default):focus{-webkit-box-shadow:0 0 0 1px #fff,0 0 0 3px #0f9e79;box-shadow:0 0 0 1px #fff,0 0 0 3px #0f9e79}.rank-math-sidebar-panel .components-panel__body .is-red:not(.default),.rank-math-sidebar-panel .components-modal__content .is-red:not(.default),.rank-math-modal .components-panel__body .is-red:not(.default),.rank-math-modal .components-modal__content .is-red:not(.default){border-color:#ed5e5e;background:#ed5e5e}.rank-math-sidebar-panel .components-panel__body .is-red:not(.default):hover,.rank-math-sidebar-panel .components-panel__body .is-red:not(.default):focus,.rank-math-sidebar-panel .components-modal__content .is-red:not(.default):hover,.rank-math-sidebar-panel .components-modal__content .is-red:not(.default):focus,.rank-math-modal .components-panel__body .is-red:not(.default):hover,.rank-math-modal .components-panel__body .is-red:not(.default):focus,.rank-math-modal .components-modal__content .is-red:not(.default):hover,.rank-math-modal .components-modal__content .is-red:not(.default):focus{border-color:#eb5050;background:#eb5050}.rank-math-sidebar-panel .components-panel__body .is-red:not(.default):focus,.rank-math-sidebar-panel .components-modal__content .is-red:not(.default):focus,.rank-math-modal .components-panel__body .is-red:not(.default):focus,.rank-math-modal .components-modal__content .is-red:not(.default):focus{-webkit-box-shadow:0 0 0 1px #fff,0 0 0 3px #eb5050;box-shadow:0 0 0 1px #fff,0 0 0 3px #eb5050}.rank-math-sidebar-panel .components-panel__body .button-link-delete,.rank-math-sidebar-panel .components-modal__content .button-link-delete,.rank-math-modal .components-panel__body .button-link-delete,.rank-math-modal .components-modal__content .button-link-delete{color:#ee6a5e;border-color:#ee6a5e;background:rgba(0,0,0,0)}.rank-math-sidebar-panel .components-panel__body .button-link-delete:hover,.rank-math-sidebar-panel .components-panel__body .button-link-delete:focus,.rank-math-sidebar-panel .components-modal__content .button-link-delete:hover,.rank-math-sidebar-panel .components-modal__content .button-link-delete:focus,.rank-math-modal .components-panel__body .button-link-delete:hover,.rank-math-modal .components-panel__body .button-link-delete:focus,.rank-math-modal .components-modal__content .button-link-delete:hover,.rank-math-modal .components-modal__content .button-link-delete:focus{color:#fff;border-color:#ee6a5e;background:#ee6a5e;-webkit-box-shadow:0 0 0 1px #ee6a5e;box-shadow:0 0 0 1px #ee6a5e}.rank-math-sidebar-panel .components-panel__body .button-link,.rank-math-sidebar-panel .components-panel__body .is-link,.rank-math-sidebar-panel .components-modal__content .button-link,.rank-math-sidebar-panel .components-modal__content .is-link,.rank-math-modal .components-panel__body .button-link,.rank-math-modal .components-panel__body .is-link,.rank-math-modal .components-modal__content .button-link,.rank-math-modal .components-modal__content .is-link{border:0;background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-sidebar-panel .components-panel__body .button-small,.rank-math-sidebar-panel .components-panel__body .is-small,.rank-math-sidebar-panel .components-modal__content .button-small,.rank-math-sidebar-panel .components-modal__content .is-small,.rank-math-modal .components-panel__body .button-small,.rank-math-modal .components-panel__body .is-small,.rank-math-modal .components-modal__content .button-small,.rank-math-modal .components-modal__content .is-small{font-size:12px;line-height:24px;min-height:24px;padding:0 8px}.rank-math-sidebar-panel .components-panel__body .button-xlarge,.rank-math-sidebar-panel .components-panel__body .is-large,.rank-math-sidebar-panel .components-modal__content .button-xlarge,.rank-math-sidebar-panel .components-modal__content .is-large,.rank-math-modal .components-panel__body .button-xlarge,.rank-math-modal .components-panel__body .is-large,.rank-math-modal .components-modal__content .button-xlarge,.rank-math-modal .components-modal__content .is-large{font-size:16px;line-height:44px;height:46px}.rank-math-sidebar-panel .components-panel__body .button-animated,.rank-math-sidebar-panel .components-modal__content .button-animated,.rank-math-modal .components-panel__body .button-animated,.rank-math-modal .components-modal__content .button-animated{font-size:24px;line-height:82px;height:auto;min-height:30px;padding:0 40px;-webkit-transform:perspective(1px) translateZ(0);transform:perspective(1px) translateZ(0);text-align:center;border-radius:82px}.rank-math-sidebar-panel .components-panel__body .button-animated i,.rank-math-sidebar-panel .components-modal__content .button-animated i,.rank-math-modal .components-panel__body .button-animated i,.rank-math-modal .components-modal__content .button-animated i{line-height:85px}.rank-math-sidebar-panel .components-panel__body .button-animated:before,.rank-math-sidebar-panel .components-modal__content .button-animated:before,.rank-math-modal .components-panel__body .button-animated:before,.rank-math-modal .components-modal__content .button-animated:before{content:\"\";-webkit-animation:hvr-ripple-out 1s linear infinite;animation:hvr-ripple-out 1s linear infinite;border:#bcdbea solid 6px;border-radius:55px;position:absolute;top:-6px;right:-6px;bottom:-6px;left:-6px}.rank-math-sidebar-panel .components-panel__body .rank-math-help-icon,.rank-math-sidebar-panel .components-modal__content .rank-math-help-icon,.rank-math-modal .components-panel__body .rank-math-help-icon,.rank-math-modal .components-modal__content .rank-math-help-icon{margin:0 4px;vertical-align:.5px;text-decoration:none;color:#b5bfc9;-webkit-box-shadow:none;box-shadow:none}.rank-math-sidebar-panel .components-panel__body .rank-math-help-icon:hover,.rank-math-sidebar-panel .components-modal__content .rank-math-help-icon:hover,.rank-math-modal .components-panel__body .rank-math-help-icon:hover,.rank-math-modal .components-modal__content .rank-math-help-icon:hover{color:#069de3}.rank-math-sidebar-panel .components-panel__body .rank-math-highlight-button,.rank-math-sidebar-panel .components-modal__content .rank-math-highlight-button,.rank-math-modal .components-panel__body .rank-math-highlight-button,.rank-math-modal .components-modal__content .rank-math-highlight-button{padding:0;height:auto;-webkit-box-shadow:none;box-shadow:none}@-webkit-keyframes hvr-ripple-out{100%{opacity:0;top:-20px;right:-20px;bottom:-20px;left:-20px}}@-webkit-keyframes hvr-ripple-out{100%{opacity:0;top:-20px;right:-20px;bottom:-20px;left:-20px}}@keyframes hvr-ripple-out{100%{opacity:0;top:-20px;right:-20px;bottom:-20px;left:-20px}}.rank-math-sidebar-panel .rank-math-edit-snippet,.rank-math-modal .rank-math-edit-snippet{height:30px;margin:1rem 0;border-color:#069de3;background:#069de3}.rank-math-sidebar-panel .rank-math-edit-snippet:hover,.rank-math-modal .rank-math-edit-snippet:hover{border-color:#08a7f1;background:#08a7f1}@media(min-width: 600px){.rank-math-tabs .components-checkbox-control__input-container{width:14px;height:14px;margin-right:5px}.rank-math-tabs .components-checkbox-control__input-container svg{width:20px;height:18px}.rank-math-tabs .components-checkbox-control__input[type=checkbox]{width:16px;height:16px}.rank-math-tabs .components-checkbox-control__input[type=checkbox]:checked,.rank-math-tabs .components-checkbox-control__input[type=checkbox]:checked:focus{border-color:#069de3;background:#069de3}}body.rtl .rank-math-tabs>.components-tab-panel__tabs button.is-active i,body.rtl .rank-math-tabs>.components-tab-panel__tabs button i{margin-right:0;margin-left:5px}body.rtl .rank-math-tabs>.components-tab-panel__tabs button[id=\"1-review\"]{margin-right:auto;margin-left:0}.rank-math-sidebar-panel .rank-math-tooltip{display:inline}.rank-math-sidebar-panel .rank-math-tooltip label{position:relative;margin-left:1px;vertical-align:.5px;color:#b5bfc9}.rank-math-sidebar-panel .rank-math-tooltip label:hover{opacity:1;color:#069de3}.rank-math-sidebar-panel .rank-math-tooltip label:after{display:none;content:\"\";-webkit-transform:translate(-50%, 3px);transform:translate(-50%, 3px);border-style:solid;height:0;width:0;border-color:rgba(0,0,0,0) rgba(0,0,0,0) #edf0f2;border-width:0 10px 8px;position:absolute;top:100%;left:50%}.rank-math-sidebar-panel .rank-math-tooltip input{display:none !important}.rank-math-sidebar-panel .rank-math-tooltip input:checked+label{opacity:1;color:#069de3}.rank-math-sidebar-panel .rank-math-tooltip input:checked+label:after{display:block}.rank-math-sidebar-panel .rank-math-tooltip input:checked~.rank-math-tooltip-content{display:block}.rank-math-sidebar-panel .rank-math-tooltip-content{font-weight:normal;line-height:1.3;display:none;width:100%;margin:7px 0 0;padding:8px 10px;color:#737982;border-radius:3px;background:#edf0f2}.rank-math-sidebar-panel .rank-math-tooltip-content a{text-decoration:underline}div.rank-math-modal{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;overflow-y:scroll;width:665px;max-width:100%;height:94vh;max-height:735px;border:0;-webkit-box-shadow:0 5px 30px 0 rgba(0,0,0,.2);box-shadow:0 5px 30px 0 rgba(0,0,0,.2)}div.rank-math-modal .components-modal__content{padding:0;margin-top:50px}div.rank-math-modal .components-modal__content:before{margin:0}div.rank-math-modal .components-panel__body{border:0}div.rank-math-modal .components-modal__header{height:51px;margin:0;padding:0 1rem;border-bottom:1px solid #dadfe4;z-index:999}div.rank-math-modal .components-modal__header .components-modal__header-heading{font-size:14px}div.rank-math-modal .components-modal__header button{padding:0 10px}@media(max-width: 782px){.rank-math-modal{width:100%;height:100%;max-height:100%}}.variable-group{position:relative}.variable-group .components-button{height:26px;padding:3px;color:inherit;position:absolute;top:2px;right:2px}.variable-group .components-button:not(.is-default):hover{background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.variable-group .components-button .dashicon{margin-right:0}.variable-group input,.variable-group textarea{margin:0;padding-right:40px !important}.rank-math-variables-dropdown{z-index:999;display:none;overflow:auto;-webkit-box-sizing:border-box;box-sizing:border-box;width:80%;max-width:450px;max-height:290px;border:1px solid #b5bfc9;border-radius:4px;background:#fff;position:absolute;top:38px;right:0}body.rtl{right:auto;left:38px}.rank-math-variables-dropdown .components-base-control{padding:10px 10px 0}.rank-math-variables-dropdown input[type=text].components-text-control__input{border-color:#b5bfc9;-webkit-box-shadow:none !important;box-shadow:none !important;height:34px;width:100%}.rank-math-variables-dropdown ul{margin:0}.rank-math-variables-dropdown li{font-size:12px;position:relative;margin:0;padding:10px;cursor:pointer;border-bottom:1px solid #b5bfc9}.rank-math-variables-dropdown li span{font-style:italic;line-height:1.3;display:block;padding-top:3px}.rank-math-variables-dropdown li:hover{background:#f8f9fa}.rank-math-variables-dropdown li:after{display:inline-block;margin-top:5px;padding:.25em .4em;content:attr(data-var);white-space:nowrap;border-radius:.25rem;background-color:#f0f2f4}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items{gap:4px}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"],.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"],.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"],.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]{padding:0;background:rgba(0,0,0,0);width:auto;min-width:80px}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover{background:rgba(0,0,0,0)}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled),.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled),.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled),.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled),.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled),.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled),.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled),.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled){-webkit-box-shadow:none;box-shadow:none}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div{-webkit-box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #b5bfc9;box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #b5bfc9}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div.bad-fk{-webkit-box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #e12925;box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #e12925}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div.ok-fk{-webkit-box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #b36f0e;box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #b36f0e}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:focus:not(:disabled)>div.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:hover:not(:disabled)>div.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:focus:not(:disabled)>div.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:hover:not(:disabled)>div.good-fk{-webkit-box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #439f40;box-shadow:inset 0 0 0 1px #fff,0 0 0 .5px #439f40}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.content-ai-score,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.content-ai-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.content-ai-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.content-ai-score{font-size:12px;font-weight:600;position:relative}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.bad-fk{color:#e42567;border-color:#e42567;background:#fce8ef}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.ok-fk{color:#b36f0e;border-color:#b36f0e;background:#fcf0de}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"]:not(.is-pressed) .rank-math-toolbar-score.content-ai-score.good-fk{color:#249677;border-color:#249677;background:#dcf7ef}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score{padding:10px 5px 8px 3px;color:#212f3e;border:1px solid #a6b2be;border-radius:2px;background:#dadfe4;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score .rm-icon,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score .rm-icon,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score .rm-icon,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score .rm-icon{font-size:15px;float:left;height:15px}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score .rm-icon-target,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score .rm-icon-target,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score .rm-icon-target,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score .rm-icon-target{font-size:15px;font-weight:600}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score .seo-score,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score .seo-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score .seo-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score .seo-score{font-size:12px;font-weight:600;display:inline-block}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.loading,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.loading,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.loading,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.loading{pointer-events:none}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.bad-fk{color:#e12925;border-color:#e12925;background:#fce5e2}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.ok-fk{color:#b36f0e;border-color:#b36f0e;background:#ffe9c2}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"] .rank-math-toolbar-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"] .rank-math-toolbar-score.good-fk{color:#439f40;border-color:#439f40;background:#e3f4e3}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score{color:#fff;background:#b5bfc9}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score.bad-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score.bad-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score.bad-fk{background:#ed817f}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score.ok-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score.ok-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score.ok-fk{background:orange}.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score.good-fk,.editor-editor-interface:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-toggled .rank-math-toolbar-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Rank Math\"].is-pressed .rank-math-toolbar-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-toggled .rank-math-toolbar-score.good-fk,.edit-post-layout:not(.show-icon-labels) .interface-pinned-items button.components-button[aria-label=\"Content AI\"].is-pressed .rank-math-toolbar-score.good-fk{border-color:#429f40;background:#6bc368}.components-menu-group .rank-math-toolbar-score .seo-score,.components-menu-group .rank-math-toolbar-score .content-ai-score{display:none}.components-menu-group .rank-math-toolbar-score i{font-size:1.25rem}.rank-math-focus-keyword .tagify{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-ms-flex-wrap:wrap;flex-wrap:wrap;border:1px solid #8d96a0;padding:0;cursor:text;position:relative;border-radius:4px;margin-bottom:16px;overflow:auto}@-webkit-keyframes tags--bump{30%{-webkit-transform:scale(1.2);transform:scale(1.2)}}@keyframes tags--bump{30%{-webkit-transform:scale(1.2);transform:scale(1.2)}}.rtl #side-sortables .rank-math-focus-keyword .tagify{padding-right:5px}.rank-math-focus-keyword .tagify:hover{border-color:#8d96a0}.rank-math-focus-keyword .tagify.tagify--focus{border-color:#00a0d2;-webkit-box-shadow:0 0 0 1px #00a0d2;box-shadow:0 0 0 1px #00a0d2}.rank-math-focus-keyword .tagify+input,.rank-math-focus-keyword .tagify+textarea{display:none !important}.tagify__tag+.rank-math-focus-keyword .tagify__tag{min-width:20px}.tagify__tag+.rank-math-focus-keyword .tagify__tag::before{display:none}.rank-math-focus-keyword .tagify__tag{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:5px 0 5px 5px;position:relative;z-index:1;cursor:pointer;padding:4px 6px 4px 10px;border-radius:14px;font-size:14px;line-height:17px}.rank-math-focus-keyword .tagify__tag:focus{outline:none}.rank-math-focus-keyword .tagify__tag.tagify--editable>div{color:#000}.rank-math-focus-keyword .tagify__tag.dragsort--dragElem{display:none}.rank-math-focus-keyword .tagify__tag>div{vertical-align:top;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:100%;line-height:inherit;border-radius:3px;-webkit-transition:none;transition:none;padding:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:inherit}.rank-math-focus-keyword .tagify__tag>div:before{color:green;-webkit-box-shadow:none;box-shadow:none;position:relative}.rank-math-focus-keyword .tagify__tag>div>*{white-space:pre-wrap;overflow:hidden;text-overflow:ellipsis;display:inline-block;vertical-align:top;min-width:10px;line-height:17px;max-width:initial;-webkit-transition:none;transition:none}.rank-math-focus-keyword .tagify__tag>div>*[contenteditable]{outline:none;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:text;margin:-2px;padding:2px}.rank-math-focus-keyword .tagify__tag.tagify--noAnim{-webkit-animation:none;animation:none}.rank-math-focus-keyword .tagify__tag.tagify--hide{width:0 !important;padding-left:0;padding-right:0;margin-left:0;margin-right:0;opacity:0;-webkit-transform:scale(0);transform:scale(0);-webkit-transition:.3s;transition:.3s;pointer-events:none}.rank-math-focus-keyword .tagify__tag.tagify--mark div::before{-webkit-animation:none;animation:none}.rank-math-focus-keyword .tagify__tag:first-child .tagify__tag-text:before{font-family:\"dashicons\";font-size:12px;margin-right:5px;vertical-align:-1px;display:inline-block;content:\"\uf155\";text-align:center;color:currentColor;border-radius:50%}.rank-math-focus-keyword .tagify__tag.bad-fk{color:#ef877f;background:#fce9e8}.rank-math-focus-keyword .tagify__tag.bad-fk .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.bad-fk .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.bad-fk .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#fce9e8 !important}.rank-math-focus-keyword .tagify__tag.bad-fk.selected{color:#fff;background:#f29c96}.rank-math-focus-keyword .tagify__tag.bad-fk.selected .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.bad-fk.selected .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.bad-fk.selected .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#f29c96 !important}.rank-math-focus-keyword .tagify__tag.bad-fk.selected .tagify__tag__removeBtn{color:#fff;background:#e4827b}.rank-math-focus-keyword .tagify__tag.bad-fk.selected .tagify__tag__removeBtn:hover{background:#de746d}.rank-math-focus-keyword .tagify__tag.bad-fk .tagify__tag__removeBtn{color:#fff;background:#f6d1cf}.rank-math-focus-keyword .tagify__tag.bad-fk .tagify__tag__removeBtn:hover{background:#f5c0bc}.rank-math-focus-keyword .tagify__tag.ok-fk{color:#ff9f13;background:#ffeccf}.rank-math-focus-keyword .tagify__tag.ok-fk .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.ok-fk .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.ok-fk .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#ffeccf !important}.rank-math-focus-keyword .tagify__tag.ok-fk.selected{color:#fff;background:#ffbe5f}.rank-math-focus-keyword .tagify__tag.ok-fk.selected .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.ok-fk.selected .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.ok-fk.selected .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#ffbe5f !important}.rank-math-focus-keyword .tagify__tag.ok-fk.selected .tagify__tag__removeBtn{color:#fff;background:#f3ab42}.rank-math-focus-keyword .tagify__tag.ok-fk.selected .tagify__tag__removeBtn:hover{background:#eea232}.rank-math-focus-keyword .tagify__tag.ok-fk .tagify__tag__removeBtn{color:#fff;background:#fbd6a0}.rank-math-focus-keyword .tagify__tag.ok-fk .tagify__tag__removeBtn:hover{background:#fccc86}.rank-math-focus-keyword .tagify__tag.good-fk{color:#67c267;background:#dff2df}.rank-math-focus-keyword .tagify__tag.good-fk .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.good-fk .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.good-fk .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#dff2df !important}.rank-math-focus-keyword .tagify__tag.good-fk.selected{color:#fff;background:#79c979}.rank-math-focus-keyword .tagify__tag.good-fk.selected .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.good-fk.selected .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.good-fk.selected .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#79c979 !important}.rank-math-focus-keyword .tagify__tag.good-fk.selected .tagify__tag__removeBtn{color:#fff;background:#6ab06a}.rank-math-focus-keyword .tagify__tag.good-fk.selected .tagify__tag__removeBtn:hover{background:#60a560}.rank-math-focus-keyword .tagify__tag.good-fk .tagify__tag__removeBtn{color:#fff;background:#b2dcb2}.rank-math-focus-keyword .tagify__tag.good-fk .tagify__tag__removeBtn:hover{background:#9ad19a}.rank-math-focus-keyword .tagify__tag__removeBtn{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5;font:14px\/18px Dashicons;color:#fff;height:18px;width:18px;text-align:center;cursor:pointer;margin-left:4px;border-radius:50px;background:rgba(0,0,0,.35)}.rank-math-focus-keyword .tagify__tag__removeBtn::after{content:\"\uf335\"}.rank-math-focus-keyword .tagify__tag__removeBtn:hover{color:#fff !important;background:rgba(86,86,86,.35);border-radius:50px}.rank-math-focus-keyword .tagify__tag__removeBtn:hover+div>span{opacity:1}.rank-math-focus-keyword .tagify--hasMaxTags .tagify__input{display:none}.rank-math-focus-keyword .tagify__input{display:block;min-width:20px;margin:5px;padding:7px 6px 6px;line-height:1;position:relative}.rank-math-focus-keyword .tagify__input::before{content:attr(data-placeholder);-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:1;-webkit-transform:none;transform:none;color:rgba(0,0,0,.25);color:var(--placeholder-color-focus);height:1em;line-height:1em;margin:auto 0;white-space:nowrap;pointer-events:none}.rank-math-focus-keyword .tagify__input:after{content:attr(data-suggest);display:inline-block;vertical-align:middle;position:absolute;min-width:calc(100% - 1.5em);text-overflow:ellipsis;overflow:hidden;white-space:pre;color:var(--tag-text-color);opacity:.3;pointer-events:none;max-width:100px}.rank-math-focus-keyword .tagify__input:empty::before{-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:.5;-webkit-transform:none;transform:none;width:auto}.rank-math-focus-keyword .tagify__input:focus{outline:none}.rank-math-focus-keyword .tagify__input:focus::before{-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:0;-webkit-transform:translatex(6px);transform:translatex(6px);transition:.2s ease-out;opacity:0;-webkit-transform:translateX(6px);transform:translateX(6px);min-width:0px;display:none}@supports(-moz-appearance: none){.rank-math-focus-keyword .tagify__input:focus::before{display:none}}.rank-math-focus-keyword .tagify__input:focus:empty::before{-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:.3;-webkit-transform:none;transform:none}@supports(-moz-appearance: none){.rank-math-focus-keyword .tagify__input:focus:empty::before{display:inline-block}}.rank-math-focus-keyword .tagify__input::after{content:attr(data-suggest);color:#000;opacity:.3;pointer-events:none}.tagify__dropdown{position:absolute;z-index:99999999;background:#fff;max-height:350px;overflow:auto;border:1px solid #e8e9ec;border-radius:4px;-webkit-box-shadow:0 9px 18px 0 rgba(25,30,35,.18);box-shadow:0 9px 18px 0 rgba(25,30,35,.18);-webkit-box-sizing:border-box;box-sizing:border-box}.tagify__dropdown__item{-webkit-box-sizing:inherit;box-sizing:inherit;padding:6px 13px;cursor:pointer;position:relative;outline:none;color:#717780;border-top:1px solid #edf0f2}.tagify__dropdown__item--active,.tagify__dropdown__item:active{background:#0095cd;color:#fff}body.rtl .rank-math-focus-keyword .tagify__tag{padding-right:10px;padding-left:6px}body.rtl .rank-math-focus-keyword .tagify__tag .tagify__tag__removeBtn{margin-right:4px;margin-left:0}body.rtl .rank-math-focus-keyword .tagify__tag:first-child .tagify__tag-text:before{margin-right:0;margin-left:5px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent{-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:6px 8px 6px 12px;margin-left:8px;margin-right:2px;border-radius:20px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent .tagify__tag__removeBtn{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:-2px;left:-8px;width:16px;height:16px;color:rgba(0,0,0,.4) !important;background:#fff !important;-webkit-box-shadow:0px 1px 3px rgba(0,0,0,.15);box-shadow:0px 1px 3px rgba(0,0,0,.15);-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.rank-math-focus-keyword .tagify__tag.has-keyword-intent .tagify__tag__removeBtn:hover{color:#d9655d !important}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type{padding-right:5px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type>div{margin-right:6px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container{display:-webkit-box;display:-ms-flexbox;display:flex;border-top-right-radius:20px;border-bottom-right-radius:20px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:3px;width:22px;padding-left:3px;border:0;border-radius:16px;color:#fff;font-size:12px;font-weight:500;line-height:14px;z-index:10;overflow:hidden;cursor:pointer;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper:hover{width:-webkit-max-content;width:-moz-max-content;width:max-content;padding-right:7px;padding-left:5px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper:hover .intent{visibility:visible}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper .icon::before{font-size:16px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper .intent{font-size:11px;font-weight:400;visibility:hidden}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{height:18px;color:rgba(0,0,0,.4);background:rgba(0,0,0,0) !important}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent:hover{color:rgba(0,0,0,.7)}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent{padding-right:27px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent:first-of-type .rank-math-keyword-intent-container{position:absolute;right:4px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);height:100%}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent:first-of-type .rank-math-keyword-intent-container:not(.is-loading):hover::after,.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent:first-of-type .rank-math-keyword-intent-container:not(.is-loading):hover::before{content:\"\";display:block}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent:first-of-type .rank-math-keyword-intent-container:not(.is-loading):hover::before{width:30px;-webkit-mask-image:-webkit-gradient(linear, left top, right top, from(transparent), to(#000));-webkit-mask-image:linear-gradient(to right, transparent, #000);mask-image:-webkit-gradient(linear, left top, right top, from(transparent), to(#000));mask-image:linear-gradient(to right, transparent, #000);z-index:5}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent:first-of-type .rank-math-keyword-intent-container:not(.is-loading):hover::after{position:absolute;inset:0;left:30px;z-index:1;border-top-right-radius:16px;border-bottom-right-radius:16px}.rank-math-focus-keyword .tagify__tag.has-keyword-intent:first-of-type.float-keyword-intent:first-of-type .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper{height:100%}.rank-math-focus-keyword{position:relative}.rank-math-focus-keyword .components-panel__body-title{margin-bottom:0;padding:16px;padding-bottom:10px;background:rgba(0,0,0,0) !important}.rank-math-focus-keyword .components-notice{margin:0 0 10px;color:#555d66;border-radius:4px}.rank-math-focus-keyword .components-notice__content{margin:0}.rank-math-focus-keyword .components-notice a{font-weight:500}.rank-math-modal.rank-math-focus-keywords-cta-modal{height:auto}.rank-math-modal.rank-math-focus-keywords-cta-modal #rank-math-pro-cta{position:relative}.rank-math-modal.rank-math-focus-keywords-cta-modal #rank-math-pro-cta .rank-math-cta-box{-webkit-box-shadow:none;box-shadow:none;padding:0 0 1rem 0}.rank-math-modal.rank-math-focus-keywords-cta-modal .components-modal__content::before{margin-bottom:0}.rank-math-checklist{background:#fff}.rank-math-checklist .components-panel__body-title,.rank-math-checklist .components-panel__body-toggle.components-button{font-size:14px;outline:0 !important}.rank-math-checklist li{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:8px;position:relative;padding-left:24px;line-height:1.4;margin-bottom:6px}.rank-math-checklist li:before{font-family:dashicons;font-size:14px;line-height:16px;content:\"\uf335\";text-align:center;color:#fff;border-radius:50em;background:#f29c96;position:absolute;top:1px;left:-1px;height:16px;width:16px}.rank-math-checklist li.test-ok:before{content:\"\uf147\";background:#79c979}.rank-math-checklist li.test-warning:before{background:#ffbe5f}.rank-math-checklist li.test-check-good:before{background:#fff;color:#79c979;-webkit-box-shadow:inset 0 0 0 2px #79c979;box-shadow:inset 0 0 0 2px #79c979}.rank-math-checklist li.test-check-ok:before{background:#fff;color:#ffbe5f;-webkit-box-shadow:inset 0 0 0 2px #ffbe5f;box-shadow:inset 0 0 0 2px #ffbe5f}.rank-math-checklist li.test-check-bad:before{background:#fff;color:#ffa35f;-webkit-box-shadow:inset 0 0 0 2px #ffa35f;box-shadow:inset 0 0 0 2px #ffa35f}.rank-math-checklist li .rank-math-help-icon{margin:0 !important}.rank-math-checklist li .rank-math-ai-button.is-link{gap:3px;padding:4px 5px;margin-left:4px;border-radius:3px;color:#b34a91;background:rgba(179,74,145,.1);font-size:12px;-webkit-transition:.2s all ease-in-out;transition:.2s all ease-in-out}.rank-math-checklist li .rank-math-ai-button.is-link:hover{background:rgba(179,74,145,.17)}.rank-math-checklist li.seo-check-fleschReading.okay:before,.rank-math-checklist li.seo-check-fleschReading.fairly-difficult:before{background:#ffbe5f}.rank-math-checklist li.seo-check-fleschReading.difficult:before{background:#eac0c2}.rank-math-group-score{font-size:11px;font-weight:normal;line-height:21px;padding:0 7px;letter-spacing:.05em;color:#fff;border-radius:20em;background:#f29c96;margin-top:-2px;margin-left:5px}.rank-math-group-score:before{font-family:dashicons;font-size:13px;line-height:12px;content:\"\uf335\";margin-top:3px;margin-right:2px;vertical-align:middle}.rank-math-group-score.test-ok{background:#79c979}.rank-math-group-score.test-ok:before{content:\"\uf147\"}.rank-math-group-score.test-warning{padding:3px 10px 3px 5px;background:#ffbe5f}.rank-math-group-score.test-warning:before{font-size:11px;font-weight:500;margin-top:1px;padding:0 4px 0 6px;content:\"!\";text-align:center}body.rtl .rank-math-group-score{margin:0 10px 0 0}.serp-preview-noindex{display:none}.noindex-preview .serp-preview-body{opacity:.6}.noindex-preview .serp-preview-body{pointer-events:none}.noindex-preview .serp-preview-noindex{z-index:1;display:block;margin-top:10px;padding:5px 10px;border-left:4px solid #f0b849;border-radius:4px;background:#fef8ee}.noindex-preview .serp-preview-noindex h3{font-weight:700;line-height:1.4;margin:5px 0 0;letter-spacing:1px;text-transform:uppercase;color:#32383d}.noindex-preview .serp-preview-noindex p{font-size:14px;width:400px;max-width:100%;margin:5px 0;color:#333}.suggestion-item{overflow:hidden;margin-bottom:5px;padding-bottom:5px;border-bottom:1px dotted #b5bfc9}.suggestion-item a{text-decoration:none;-webkit-box-shadow:none !important;box-shadow:none !important}.suggestion-item .suggestion-actions{float:right;margin-left:5px}.suggestion-item .dashicons{cursor:pointer;background:none;-webkit-box-shadow:none;box-shadow:none;border:0;position:relative;width:20px;height:20px;margin-top:5px;margin-left:2px;margin-right:2px;padding:0px;display:inline-block}.suggestion-item .dashicons-admin-links::before{position:absolute;top:0px;left:0px}.suggestion-item .dashicons-clipboard::before{position:absolute;top:0px;left:0px}#rank_math_keyword_density{font-weight:600;display:none;float:right;cursor:pointer;color:#888}#rank_math_keyword_density span{float:right}#rank_math_keyword_density .inner-wrapper{position:absolute;z-index:1;right:30px;margin-top:8px;padding:5px 15px;background:#fff;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.1);box-shadow:0 1px 1px rgba(0,0,0,.1)}#rank_math_keyword_density .inner-wrapper ul{margin-top:15px}#rank_math_keyword_density.state-closed span:before{content:\"\uf140\" !important}#rank_math_keyword_density.state-closed .inner-wrapper{display:none}#rank_math_metabox_link_suggestions .postbox-header .hndle{-webkit-box-pack:normal;-ms-flex-pack:normal;justify-content:normal}.rank-math-button-devices{float:right}.rank-math-button-devices .button.button-small{font-size:14px;line-height:32px;display:inline-block;height:30px;min-height:26px;padding:0 8px;cursor:pointer;-webkit-transition:.25s all linear;transition:.25s all linear;color:#7f8292;border:1px solid #b5bfc9;border-radius:3px;background:#f3f5f6}.rank-math-button-devices .button.button-small:first-child{margin-right:5px}.rank-math-button-devices .button.button-small:hover{color:#069de3;border-color:#069de3}.rank-math-button-devices .button.button-small.active{color:#fff;border-color:#069de3;background:#069de3;-webkit-box-shadow:none;box-shadow:none}.serp-preview{background:#fff}.serp-preview *{-webkit-box-sizing:border-box;box-sizing:border-box}.serp-preview-title{margin-bottom:5px}.serp-preview-title:before{font-size:14px;font-weight:600;line-height:24px;content:attr(data-title);letter-spacing:.05em}.serp-preview-title .seo-score{font-weight:600;display:none;float:right;padding:4px 6px;color:#fff;border-radius:3px;background:#ffbe5f}.show-icon-labels .serp-preview-title .seo-score{display:block}.serp-preview-title .seo-score.bad-fk{background:#f29c96}.serp-preview-title .seo-score.good-fk{background:#79c979}.serp-preview-wrapper{position:relative;padding-top:5px;-webkit-transition:all .6s ease;transition:all .6s ease}.serp-preview-body{cursor:pointer;-webkit-transition:width .2s ease,padding .2s ease,margin .2s ease;transition:width .2s ease,padding .2s ease,margin .2s ease}.serp-preview .group{position:relative;width:100%}.serp-preview .serp-description,.serp-preview .serp-title,.serp-preview .serp-url{font-family:arial,sans-serif;font-size:13px;position:relative;z-index:1;display:block;overflow:hidden;width:100%;max-width:600px;margin:0;cursor:pointer;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}.serp-preview .serp-description mark,.serp-preview .serp-title mark,.serp-preview .serp-url mark{font-weight:bold;color:inherit;background-color:rgba(0,0,0,0)}.serp-preview .serp-title{font-size:16px;font-weight:normal;line-height:1.5;margin-bottom:3px;padding-bottom:0;color:#1a0dab}.serp-preview .serp-url{font-size:14px;line-height:16px;margin:3px 0 5px;padding-right:5px;color:#202124}.serp-preview .serp-url:after{position:absolute;top:-2px;margin-left:10px;content:url('data:image\/svg+xml; utf8, <svg focusable=\"false\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"><\/path><\/svg>');opacity:.4;height:17px;width:17px}.serp-preview .serp-description{line-height:1.4;white-space:normal;text-overflow:unset;word-wrap:break-word;color:#555d66}.serp-preview .rank-math-rating-preview{margin-bottom:4px;margin-left:-1px}.serp-preview .serp-ratings{line-height:1;position:relative;display:inline;margin-right:5px;vertical-align:-1px;color:#ccc}.serp-preview .serp-ratings span{font-size:14px;width:14px;height:14px}.serp-preview .serp-result{position:absolute;top:0;left:0;overflow:hidden;white-space:nowrap;color:#f9b709}.serp-preview .serp-result span{margin-top:-1px}.serp-preview .serp-rating-label,.serp-preview .serp-rating-value{color:#70757a}.rank-math-editor-general .serp-preview-title{margin-bottom:0}.rank-math-editor-general .serp-preview-title:before{line-height:36px}.serp-preview-favicon{display:none}.serp-preview-bg{overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;max-height:0;-webkit-transition:.2s max-height ease-in-out;transition:.2s max-height ease-in-out;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rank-math-editor .serp-preview-input{position:relative;max-width:598px;pointer-events:none}.rank-math-editor .serp-preview-input input[disabled]{font:16px arial,sans-serif;padding:5px 16px;color:#000;border:1px solid rgba(0,0,0,0);border-radius:24px;background:#fff;-webkit-box-shadow:0 2px 5px 1px rgba(64,60,67,.16);box-shadow:0 2px 5px 1px rgba(64,60,67,.16);height:46px;width:100%}.rank-math-editor .serp-preview-input .serp-icon-mic,.rank-math-editor .serp-preview-input .serp-icon-search{display:inline-block;width:24px;position:absolute;top:0;right:48px}.rank-math-editor .serp-preview-input .serp-icon-mic{background:url(\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAACrElEQVR42u2Xz2sTQRSAX8VSb1K8iNqKooJH2Ux6Ksn+iPQqxZMIehJB0do\/IMhmQWsvHr2KSEGk0tSLIoWIYNUKij20F2\/N7iaUZnYT0kYzzhMKs0HDJiTdLcwHDwKZSd63781LBiQSSW9JZdkhzfKm1Rz9mjZp\/W9YdEU3vXv4HsQZ40FtNG36q5rls\/\/Ej4tmbSS2T15Mvp3ExOPmEMQNbBtMMEyoljcFcQN7PqyAlqNfIG7gYQ0tYNIaxA1MrJPY3wImbUqBKAXSFv0tBSIVMOkvKRDtGKWN\/T6FdqRAxFNoWwpEPIXqUqBT6ALU\/UVgu8GW4GD3f6f9TRDYNJTDrk7YbtiqUumHwIYoUJuHERDAS0r4CvgFECgbY+cFAR7KT+g1POmCKFDNw6WggHc3fBtVb4CAoyauBgXIG+g1Xh5mRAGah6cggBd11fK\/h7lOprIs0H6uRl6KAo5O7kOv4QmPiwJ4Jqqv4FiwCtXjvD2+tRmfK6kZ\/ygI2HritK0rDVGgrClJ6DWMwYC\/AGuCBMYcIC2V0CzvjmbRz3j3xUjn6CfeYreUJ2wQkGD75INPX1mFfsEFrrcIYCvdhC4paWQakxajpJMr0C9YFg54i7AsClRmh9\/xnr0NHcInzZStk2aLwAcGMAD9pPIazvFKVDD5rdnhJeHLX5RTyRPQHpz5o66emMc9wdlPtvA8wF7Aq2BUHh1525qEo5JtR1WeOXpickO9cJIpyuD6xJmhYiZ5ytWSl3mlnuOaf+2zDaLDXmJrSgZ\/MYVEugo+gSh+FkSBa4yd5Ul87DZ5XpFl\/AyIEjzYjkau8WqshU2cr13HPbgX4gJOD97n465GZlyVvC9mSKloKI2iTnbwNT+gBX54H+IaXAtxJzE3ycSAFqSAFJACUkAikXD+AHj5\/wx2o5osAAAAAElFTkSuQmCC\");background-repeat:no-repeat;background-position:right center;background-size:24px 24px;height:48px;width:24px}.rank-math-editor .serp-preview-input .serp-icon-search{right:16px}.rank-math-editor .serp-preview-input .serp-icon-search svg{fill:#4285f4;height:48px;width:24px}.serp-preview-menus{overflow:hidden;max-width:600px}.serp-preview-menus ul{float:left;overflow:hidden;margin:0;padding:0;list-style:none}.serp-preview-menus ul li{font-family:arial,sans-serif;font-size:13px;line-height:19px;float:left;margin:0;padding:27px 12px 12px;color:#777}.serp-preview-menus ul li.current{color:#1a73e8;border-bottom:3px solid #1a73e8}.serp-preview-menus ul li.current img{margin-right:3px}.serp-preview-menus ul li img,.serp-preview-menus ul li svg{display:inline-block;width:16px;margin-right:1px;vertical-align:-3px;fill:#5f6368}.serp-preview-menus ul.menus-right{float:right}.serp-preview-result-stats{font-family:arial,sans-serif;font-size:small;line-height:43px;color:gray;border-top:1px solid #ebebeb}.desktop-preview .serp-preview-title:before{content:attr(data-desktop)}.mobile-preview .serp-preview-title:before{content:attr(data-mobile)}.mobile-preview .serp-preview-bg{width:400px;margin:auto;border-bottom:1px solid rgba(60,64,67,.08)}.mobile-preview .serp-preview-input{max-width:399px}.mobile-preview .serp-preview-input input[disabled]{height:41px;padding-left:43px}.mobile-preview .serp-preview-input .serp-icon-mic{display:none}.mobile-preview .serp-preview-input .serp-icon-search{top:0;left:4px;width:40px;height:41px;padding-right:8px;padding-left:8px;text-align:center;border-radius:0 20px 20px 0}.mobile-preview .serp-preview-input .serp-icon-search svg{height:41px;fill:#9aa0a6}.mobile-preview .serp-preview-menus{padding:0 10px}.mobile-preview .serp-preview-menus ul{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.mobile-preview .serp-preview-menus ul li{font-family:inherit;font-size:14px;font-weight:500;line-height:34px;padding:6px 0 0;text-align:center}.mobile-preview .serp-preview-menus ul li.current{color:#202124;border-bottom:2px solid #202124}.mobile-preview .serp-preview-menus ul li img,.mobile-preview .serp-preview-menus ul li svg{display:none}.mobile-preview .serp-preview-menus ul.menus-right{display:none}.mobile-preview .serp-preview-result-stats{display:none}.mobile-preview .serp-preview-body{-webkit-box-sizing:border-box;box-sizing:border-box;width:400px;margin:10px auto auto;padding:10px;word-wrap:break-word;background-color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column wrap;flex-flow:column wrap}.mobile-preview .rank-math-rating-preview{display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:10px;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.mobile-preview .rank-math-rating-preview .serp-ratings{margin:2px 0 0 5px;-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.mobile-preview .rank-math-rating-preview .serp-ratings .dashicon{font-size:14px}.mobile-preview .rank-math-rating-preview .serp-result{color:#f9b709}.mobile-preview .rank-math-rating-preview .serp-rating-label{width:100%;margin-bottom:2px;color:#202124;-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.mobile-preview .rank-math-rating-preview .serp-rating-value{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.rank-math-editor .mobile-preview .serp-title{color:#1558d6}.rank-math-editor .mobile-preview .group:first-child{max-width:250px;display:-webkit-box;display:-ms-flexbox;display:flex}.rank-math-editor .mobile-preview .serp-preview-bg{display:none}.rank-math-editor .mobile-preview .serp-preview-favicon{display:block;height:16px;margin-top:7px;margin-right:7px}.rank-math-editor .mobile-preview .serp-url{font-size:12px;margin-bottom:12px;color:#3c4043}.expanded-preview.desktop-preview .serp-preview-bg{overflow:visible}@media(min-width: 768px){.expanded-preview.desktop-preview .serp-preview-bg{max-height:168px}}.expanded-preview.mobile-preview .serp-preview-bg{display:block;overflow:visible;max-height:99px}.expanded-preview.mobile-preview .serp-title{margin-bottom:10px}.expanded-preview.mobile-preview .serp-description{color:#3c4041}body.rtl .rank-math-button-devices{float:left}body.rtl .rank-math-button-devices .button.button-small:first-child{margin-right:0;margin-left:5px}body.rtl .serp-preview-bg .serp-preview-input .serp-icon-search{right:auto;left:15px}body.rtl .serp-preview-bg .serp-preview-input .serp-icon-mic{right:auto;left:50px;padding-right:8px;padding-left:2px}body.rtl .serp-preview-bg .serp-preview-menus li,body.rtl .serp-preview-bg .serp-preview-menus ul{float:right}body.rtl .serp-preview-bg .serp-preview-menus li.menus-right,body.rtl .serp-preview-bg .serp-preview-menus ul.menus-right{float:left}body.rtl .mobile-preview .serp-preview-bg .serp-preview-input .serp-icon-search{left:0;border-radius:20px 0 0 20px}body.rtl .mobile-preview .serp-preview-favicon{margin-right:0;margin-left:6px}body.rtl .serp-preview .serp-description:focus:before,body.rtl .serp-preview .serp-description:hover:before,body.rtl .serp-preview .serp-title:focus:before,body.rtl .serp-preview .serp-title:hover:before,body.rtl .serp-preview .serp-url:focus:before,body.rtl .serp-preview .serp-url:hover:before{text-align:left}#setting-panel-social .rank-math-tab{padding:30px 0 0}#setting-panel-social .rank-math-social-preview+.notice{margin-top:20px}#setting-panel-social .cmb-row.cmb-row-33{min-height:118px;vertical-align:top}.rank-math-social-preview-button{font-size:13px;display:inline-block;padding:4px 8px;text-decoration:none;text-transform:uppercase;color:#555;border:0;outline:none;background:#ededee;-webkit-box-shadow:none !important;box-shadow:none !important}.rank-math-social-preview-button .dashicons{position:relative;top:-2px}.open .rank-math-social-preview-button{color:#fff;background:#069de3}.rank-math-social-preview-item{display:none;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:500px;margin:0 auto;padding:30px 0}.rank-math-social-preview-item-wrapper{overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:100%;margin:auto;border:1px solid #dddfe2;border-radius:0 0 3px 3px;background:#fff}.rank-math-social-preview-item .error-msg{line-height:1;display:none;width:528px;max-width:100%;margin:auto;padding-top:10px}.rank-math-social-preview-item .error-msg.show{display:block}.rank-math-social-preview-image{line-height:0;position:relative;z-index:1}.rank-math-social-preview-image img{display:none;max-width:100%;height:auto;min-height:initial}.rank-math-social-preview-image-overlay{-webkit-transform:translate(-50%, -50%) scale(0.45);transform:translate(-50%, -50%) scale(0.45);position:absolute;top:50%;left:50%}.rank-math-social-preview-image .error-msg{line-height:1;display:none}.rank-math-social-preview .rank-math-social-preview-caption{font-size:12px;padding:10px 10px 5px;color:#1d2129;background:#f2f3f5}.rank-math-social-preview .rank-math-social-preview-title{font-size:16px;font-weight:600;line-height:22px;margin:0 0 3px;padding:0;letter-spacing:normal;word-wrap:break-word}.rank-math-social-preview-description,.rank-math-social-preview-publisher{line-height:16px;margin:0}.rank-math-social-preview-publisher{font-size:12px;font-weight:normal;padding-top:3px;padding-bottom:3px;text-transform:uppercase;color:#90949c}.rank-math-social-preview-publisher.facebook{text-transform:uppercase}.rank-math-social-preview-meta{position:relative;display:none;display:block;clear:both;margin:0 auto;margin-bottom:15px}.rank-math-social-preview-meta .social-profile-image{position:absolute;left:-58px;float:left;width:46px;height:46px;border-radius:50%;background:#dcc7c7}.rank-math-social-preview-meta .social-name{font-size:14px;font-weight:700;color:#14171a}.rank-math-social-preview-meta .social-username,.rank-math-social-preview-meta .social-time{font-size:12px;font-weight:normal;margin-left:5px;color:#657786}.rank-math-social-preview-meta .social-time:before{margin-right:5px;content:\"\u00b7\"}.rank-math-social-preview-meta .social-text{margin-top:5px}.rank-math-social-preview-facebook .rank-math-social-preview-button strong:before{content:attr(data-facebook)}.rank-math-social-preview-facebook .facebook-thumbnail{display:block}.rank-math-social-preview-facebook .no-facebook-image .facebook-thumbnail{display:none}.rank-math-social-preview-facebook .rank-math-social-preview-meta.twitter-meta{display:none}.rank-math-social-preview-facebook .rank-math-social-preview-title{font-size:1.0625rem}.rank-math-social-preview-facebook .rank-math-social-preview-description{font-size:.9375rem;overflow:hidden;max-height:1.3em;margin-bottom:5px;white-space:nowrap;text-overflow:ellipsis;color:#606770}.rank-math-social-preview-facebook .rank-math-social-preview-meta{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;min-height:66px;margin-bottom:0;padding:12px;border:1px solid #dddfe2;border-bottom:0;border-radius:3px 3px 0 0;background:#fff}.rank-math-social-preview-facebook .rank-math-social-preview-meta .social-profile-image{position:relative;left:auto;width:40px;height:40px;margin-right:10px;margin-left:-2px}.rank-math-social-preview-facebook .rank-math-social-preview-meta .social-name{margin-bottom:3px;color:#365899}.rank-math-social-preview-facebook .rank-math-social-preview-meta .social-time:before{display:none}.rank-math-social-preview-facebook .rank-math-social-preview-meta .social-time span{width:auto}.rank-math-social-preview-facebook .rank-math-social-preview-meta .social-time span:first-child:after{margin:0 5px;content:\"\u00b7\"}.rank-math-social-preview-facebook .rank-math-social-preview-meta .social-time span svg{vertical-align:middle}.rank-math-social-preview-facebook .rank-math-social-preview-meta .dashicons.dashicons-admin-site{font-size:12px;line-height:18px}.rank-math-social-preview-facebook .twitter{display:none}.rank-math-social-preview-twitter.app,.rank-math-social-preview-twitter.player{display:none !important}.rank-math-social-preview-twitter .rank-math-social-preview-item{max-width:582px;padding-left:58px}.rank-math-social-preview-twitter .rank-math-social-preview-meta .social-text,.rank-math-social-preview-twitter .rank-math-social-preview-meta .social-username,.rank-math-social-preview-twitter .rank-math-social-preview-meta .social-time{font-size:14px}.rank-math-social-preview-twitter .rank-math-social-preview-item-wrapper{clear:both;max-width:100%;border:1px solid #ccd6dd;border-radius:14px}.rank-math-social-preview-twitter .rank-math-social-preview-item-wrapper .twitter-thumbnail{display:block;max-width:100%}.rank-math-social-preview-twitter .rank-math-social-preview-item-wrapper .rank-math-social-preview-caption{background:#fff}.rank-math-social-preview-twitter .rank-math-social-preview-item-wrapper:hover{background:#f5f8fa}.rank-math-social-preview-twitter .rank-math-social-preview-item-wrapper:hover .rank-math-social-preview-caption{background:#f5f8fa}.rank-math-social-preview-twitter .rank-math-social-preview-title{font-weight:normal;overflow:hidden;margin-bottom:2px;white-space:nowrap;text-overflow:ellipsis;color:#14171a}.rank-math-social-preview-twitter .rank-math-social-preview-description{font-size:15px;line-height:1.3125;overflow:hidden;max-height:2.5em;text-overflow:ellipsis;color:#657786}.rank-math-social-preview-twitter .rank-math-social-preview-publisher{font-size:15px;padding-top:5px;text-transform:initial;color:#657786}.rank-math-social-preview-twitter .rank-math-social-preview-publisher .dashicon{margin-right:3px;-webkit-text-stroke:1px #fff}.rank-math-social-preview-twitter .rank-math-social-preview-publisher.facebook{display:none}.rank-math-social-preview-twitter .no-twitter-image .twitter-thumbnail{display:none}.rank-math-social-preview-twitter .rank-math-social-preview-button strong:before{content:attr(data-twitter)}.rank-math-social-preview-twitter.summary_card .rank-math-social-preview-image{float:left}.rank-math-social-preview-twitter.summary_card .rank-math-social-preview-image img{height:125px;width:125px}.rank-math-social-preview-twitter.summary_card .rank-math-social-preview-caption{overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;max-height:125px;padding:5px 0 0 15px}.rank-math-social-preview-twitter.summary_card .rank-math-social-preview-description{max-height:4.5rem}.rank-math-social-preview-twitter .rank-math-social-preview-meta.facebook-meta{display:none}.rank-math-social-preview-twitter .rank-math-social-preview-meta.twitter-meta{display:block}body.rtl .social-tabs-navigation a .dashicons,body.rtl .rank-math-editor-social .components-tab-panel__tabs .dashicon{margin-right:0;margin-left:8px}body.rtl .rank-math-social-preview-facebook .rank-math-social-preview-meta .social-profile-image{float:right;margin-right:0;margin-left:10px}body.rtl .rank-math-social-preview-twitter .rank-math-social-preview-item{padding-right:58px;padding-left:0}body.rtl .rank-math-social-preview-twitter .social-profile-image{right:-58px;left:auto}.rank-math-modal-overlay .rank-math-social-preview-item,.rank-math-modal-overlay .rank-math-social-preview-image img{display:block}.length-indicator-wrapper{position:relative;display:block;position:absolute;top:22px;right:15px;background-color:rgba(0,0,0,0) !important;border:none !important}.length-indicator-wrapper .length-indicator{position:relative;display:inline-block;overflow:hidden;border-radius:2px;background:-webkit-gradient(linear, left top, right top, from(#e33e2b), color-stop(18%, #f06818), color-stop(19%, #fff), color-stop(19%, #fff), color-stop(20%, #f16b17), color-stop(38%, #f1a104), color-stop(39%, #fff), color-stop(39%, #fff), color-stop(40%, #f1a404), color-stop(58%, #d9b507), color-stop(59%, #fff), color-stop(59%, #fff), color-stop(60%, #d4b509), color-stop(78%, #7bb02c), color-stop(79%, #fff), color-stop(79%, #fff), color-stop(80%, #76ae2e), to(#2da24c));background:linear-gradient(to right, #e33e2b 0%, #f06818 18%, #fff 19%, #fff 19%, #f16b17 20%, #f1a104 38%, #fff 39%, #fff 39%, #f1a404 40%, #d9b507 58%, #fff 59%, #fff 59%, #d4b509 60%, #7bb02c 78%, #fff 79%, #fff 79%, #76ae2e 80%, #2da24c 100%);height:8px;width:180px;margin-left:10px}.length-indicator-wrapper .length-indicator span{position:absolute;z-index:11;border-radius:0 2px 2px 0;background:#e0e0e0;height:100%;width:100%}.length-indicator-wrapper.invalid .length-indicator{background:-webkit-gradient(linear, left top, right top, from(#e33d2a), color-stop(18%, #e33d2a), color-stop(19%, #fff), color-stop(19%, #fff), color-stop(20%, #e33d2a), color-stop(38%, #e33d2a), color-stop(39%, #fff), color-stop(39%, #fff), color-stop(40%, #e33d2a), color-stop(58%, #e33d2a), color-stop(59%, #fff), color-stop(59%, #fff), color-stop(60%, #e33d2a), color-stop(78%, #e33d2a), color-stop(79%, #fff), color-stop(79%, #fff), color-stop(80%, #e33d2a), to(#e33d2a));background:linear-gradient(to right, #e33d2a 0%, #e33d2a 18%, #fff 19%, #fff 19%, #e33d2a 20%, #e33d2a 38%, #fff 39%, #fff 39%, #e33d2a 40%, #e33d2a 58%, #fff 59%, #fff 59%, #e33d2a 60%, #e33d2a 78%, #fff 79%, #fff 79%, #e33d2a 80%, #e33d2a 100%)}.length-indicator-wrapper input:focus+.length-indicator,.length-indicator-wrapper textarea:focus+.length-indicator{display:block}.length-indicator-wrapper .length-count{font-size:12px;color:#7f868d}#rank-math-width-tester{position:absolute;top:0;left:0;margin:0;padding:0;font-weight:normal;white-space:nowrap;font-family:arial,sans-serif}#rank-math-width-tester.title{font-size:20px}#rank-math-width-tester.description{font-size:14px}body.rtl .length-indicator-wrapper{right:auto;left:15px}body.rtl .length-indicator-wrapper .length-indicator{margin-left:0;margin-right:10px}.rank-math-editor{overflow:hidden}.rank-math-editor>.components-tab-panel__tabs{padding:0 17px;-webkit-box-pack:left;-ms-flex-pack:left;justify-content:left;background:#f8f9fa;border-bottom:1px solid #b5bfc9}.rank-math-editor>.components-tab-panel__tabs button{width:auto;border:0 !important;padding:3px 15px}.rank-math-editor>.components-tab-panel__tabs button span{display:inline-block}.rank-math-editor>.components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):hover i{background:none;-webkit-box-shadow:none;box-shadow:none}.rank-math-editor>.components-tab-panel__tabs button[id=\"1-review\"]{margin-left:auto}.rank-math-editor>.components-tab-panel__tabs button .rm-icon-heart-filled{color:#f44336;-webkit-transition:.25s all linear;transition:.25s all linear;margin-right:0 !important}.rank-math-editor>.components-tab-panel__tabs button:not(.is-active):hover .rm-icon-heart-filled{color:#e93f30;text-shadow:0 0 5px #f5aaa3}.rank-math-editor>.components-tab-panel__tab-content{padding:20px;position:relative}.rank-math-editor .field-group{position:relative;margin-top:12px;padding:20px 15px 15px;border-radius:4px;background:#f0f2f4}.rank-math-editor .field-group:last-of-type{margin-bottom:0}.rank-math-editor .field-group label:not(.components-toggle-control__label){font-weight:600;margin-bottom:6px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.rank-math-editor .field-group .components-toggle-control__label{font-weight:600}.rank-math-editor .field-group .components-base-control__field{margin-bottom:0 !important}.rank-math-editor .field-group .components-textarea-control__input{display:block}.rank-math-editor .field-group .components-base-control__help{margin:0;color:#7f868d;padding-top:5px}.rank-math-editor .field-group .notice{margin-bottom:0}.rank-math-editor .field-group .components-toggle-control .components-base-control__field{margin-bottom:0}.rank-math-editor .field-group .components-toggle-control+.components-base-control{margin-top:12px}.rank-math-editor .field-group input[type=text],.rank-math-editor .field-group input[type=url],.rank-math-editor .field-group textarea,.rank-math-editor .field-group select{background-color:#fff;margin:0}.rank-math-editor .field-group input[type=text]:hover,.rank-math-editor .field-group input[type=url]:hover,.rank-math-editor .field-group textarea:hover,.rank-math-editor .field-group select:hover{border-color:#069de3}.rank-math-editor .field-group input[type=text]:focus,.rank-math-editor .field-group input[type=url]:focus,.rank-math-editor .field-group textarea:focus,.rank-math-editor .field-group select:focus{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-editor .field-group .rank-math-description-variables .rank-math-variables-dropdown{bottom:100%;top:auto}.rank-math-editor .serp-preview-wrapper{padding:15px 0 10px}.rank-math-editor .serp-title{font-size:20px;line-height:1.3}.rank-math-editor .serp-url{margin:7px 0 7px}.rank-math-editor .serp-description{font-size:14px;line-height:1.57}.rank-math-editor-social .components-tab-panel__tabs{width:266px;height:48px;margin:10px auto 0;border-radius:4px;background:rgba(0,0,0,0);-webkit-box-shadow:0 0px 6px rgba(50,50,93,.1),0 0px 3px rgba(0,0,0,.1);box-shadow:0 0px 6px rgba(50,50,93,.1),0 0px 3px rgba(0,0,0,.1)}.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link){font-size:16px;line-height:48px;float:left;display:inline-block;width:50%;height:auto;padding:0;text-align:center;color:#939393;border:0;-webkit-box-shadow:none !important;box-shadow:none !important}.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):first-child{border-radius:3px 0 0 3px}.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):last-child{border-radius:0 3px 3px 0}.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active,.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):focus{color:#fff;background:#3b5998}.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active.button-twitter,.rank-math-editor-social .components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):focus.button-twitter{background:#55acee}.rank-math-editor-social .components-tab-panel__tabs .dashicon{margin-right:5px;vertical-align:-4px;-webkit-transition:none;transition:none}.rank-math-editor-social .notice{margin:5px 0 20px}.rank-math-editor-social .components-base-control .is-destructive{margin-left:10px;vertical-align:vertical-align}.rank-math-editor-social .components-base-control__label{font-weight:600;margin-bottom:10px;margin-left:2px}.rank-math-editor-social .components-base-control+.components-base-control:last-of-type,.rank-math-editor-social .components-base-control+.components-base-control.components-toggle-control{border-bottom:0;padding-bottom:0;margin-bottom:0}.ask-review{text-align:center}.ask-review h3{font-size:2em;margin:1em 0}.ask-review p{font-size:16px;margin-bottom:20px}.ask-review .stars-wrapper{line-height:60px;width:316px;margin:0 auto;margin-bottom:20px;border:1px solid #e2e4e7;border-radius:6px}.ask-review .stars-wrapper .stars a{position:relative;top:9px;display:inline-block;text-decoration:none;color:#aaa;height:40px;width:40px}.ask-review .stars-wrapper .stars a span{font-size:40px;height:40px;width:40px}.ask-review .stars-wrapper .stars a.highlighted,.ask-review .stars-wrapper .stars a:hover{color:#f9cb12}.ask-review .stars-wrapper .face{float:right;position:relative;border-left:1px solid #e2e4e7;background:#f0f2f4;border-radius:0 6px 6px 0;height:60px;width:70px}.smiley{padding:5px;position:relative;margin:9px auto 0 auto;border-radius:100%;background:linear-gradient(135deg, rgb(255, 233, 25) 0%, rgb(251, 192, 0) 100%);height:40px;width:40px;-webkit-box-sizing:border-box;box-sizing:border-box}.mouth{-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:-30%;border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:40px;border-bottom-left-radius:40px;background:#b57700;-webkit-transition:all 300ms cubic-bezier(0.645, 0.045, 0.355, 1);transition:all 300ms cubic-bezier(0.645, 0.045, 0.355, 1);height:30%;width:60%;position:absolute;bottom:18%;left:50%}.eyes{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;margin-top:15%;padding:0 5px;-webkit-transition:all 300ms cubic-bezier(0.645, 0.045, 0.355, 1);transition:all 300ms cubic-bezier(0.645, 0.045, 0.355, 1)}.eyes .eye{position:relative;float:left;border-radius:100%;background:#b57700;height:8px;width:8px}.eyes .eye:nth-of-type(2){float:right}.eyes .eye::after{display:block;content:\"\";background:#fed800;-webkit-transform:rotate(0deg);transform:rotate(0deg);-webkit-transition:all 300ms cubic-bezier(0.645, 0.045, 0.355, 1);transition:all 300ms cubic-bezier(0.645, 0.045, 0.355, 1);height:0;width:0;position:absolute;top:-15px;left:5px}.eyes .eye:first-of-type::after{right:5px;left:auto;-webkit-transform:rotate(0deg);transform:rotate(0deg)}.smiley.normal .mouth{bottom:25%;margin-left:-20%;border-top-left-radius:40px;border-top-right-radius:40px;border-bottom-right-radius:40px;border-bottom-left-radius:40px;height:10%;width:40%}.smiley.normal .eyes{margin-top:30%}.smiley.normal .eye{height:8px;margin-top:0;-webkit-animation-delay:.3s;animation-delay:.3s;-webkit-animation:blink .6s;animation:blink .6s}.smiley.angry .mouth,.smiley.angry .eyes{-webkit-animation-delay:.3s;animation-delay:.3s;-webkit-animation:move-angry-head .6s;animation:move-angry-head .6s}.smiley.angry .mouth{bottom:18%;left:50%;margin-left:-20%;border-bottom:0;border-top-left-radius:100%;border-top-right-radius:100%;border-bottom-right-radius:8px;border-bottom-left-radius:8px;height:20%;width:40%}.smiley.angry .eyes{margin-top:35%}.smiley.angry .eye::after{top:-3px;left:-5px;width:120%;height:50%;-webkit-transform:rotate(-35deg);transform:rotate(-35deg);border-radius:0}.smiley.angry .eye:first-of-type::after{right:-5px;left:auto;-webkit-transform:rotate(35deg);transform:rotate(35deg)}.smiley.happy .mouth{-webkit-animation-delay:.3s;animation-delay:.3s;-webkit-animation:move-mouth-down .8s;animation:move-mouth-down .8s}.smiley.happy .eyes{-webkit-animation-delay:.3s;animation-delay:.3s;-webkit-animation:move-eyes-down .8s;animation:move-eyes-down .8s}.smiley.happy .eye:nth-of-type(2){height:8px;margin-top:0;-webkit-animation-delay:.3s;animation-delay:.3s;-webkit-animation:wink .8s;animation:wink .8s}@-webkit-keyframes blink{0%{height:8px;margin-top:0}25%{height:2px;margin-top:8px}50%{height:8px;margin-top:0}75%{height:2px;margin-top:8px}100%{height:8px;margin-top:0}}@keyframes blink{0%{height:8px;margin-top:0}25%{height:2px;margin-top:8px}50%{height:8px;margin-top:0}75%{height:2px;margin-top:8px}100%{height:8px;margin-top:0}}@-webkit-keyframes move-mouth-down{0%{bottom:18%}35%{bottom:16%}65%{bottom:16%}100%{bottom:18%}}@keyframes move-mouth-down{0%{bottom:18%}35%{bottom:16%}65%{bottom:16%}100%{bottom:18%}}@-webkit-keyframes move-eyes-down{0%{margin-top:15%}35%{margin-top:19%}65%{margin-top:19%}100%{margin-top:15%}}@keyframes move-eyes-down{0%{margin-top:15%}35%{margin-top:19%}65%{margin-top:19%}100%{margin-top:15%}}@-webkit-keyframes wink{0%{height:8px;margin-top:0}30%{height:4px;margin-top:4px}70%{height:4px;margin-top:4px}100%{height:8px;margin-top:0}}@keyframes wink{0%{height:8px;margin-top:0}30%{height:4px;margin-top:4px}70%{height:4px;margin-top:4px}100%{height:8px;margin-top:0}}@-webkit-keyframes move-angry-head{0%{-webkit-transform:translateX(0%);transform:translateX(0%)}20%{-webkit-transform:translateX(-20%);transform:translateX(-20%)}40%{-webkit-transform:translateX(15%);transform:translateX(15%)}60%{-webkit-transform:translateX(-10%);transform:translateX(-10%)}80%{-webkit-transform:translateX(5%);transform:translateX(5%)}100%{-webkit-transform:translateX(0%);transform:translateX(0%)}}@keyframes move-angry-head{0%{-webkit-transform:translateX(0%);transform:translateX(0%)}20%{-webkit-transform:translateX(-20%);transform:translateX(-20%)}40%{-webkit-transform:translateX(15%);transform:translateX(15%)}60%{-webkit-transform:translateX(-10%);transform:translateX(-10%)}80%{-webkit-transform:translateX(5%);transform:translateX(5%)}100%{-webkit-transform:translateX(0%);transform:translateX(0%)}}#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header,.rank-math-post-publish .rank-math-social-share-buttons,.rank-math-tabs>.components-tab-panel__tabs .rank-math-extra-menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.rank-math-post-publish p{margin-top:0}.rank-math-post-publish .rank-math-share-button{font-size:22px;line-height:30px;margin-right:5px;padding:0;-webkit-transition:.2s all linear;transition:.2s all linear;text-align:center;color:#fff;border-radius:30px;background:#d14836;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.rank-math-post-publish .rank-math-share-button:last-of-type{margin-right:0}.rank-math-post-publish .rank-math-share-button:hover{opacity:.9}.rank-math-post-publish .rank-math-share-button a{display:block;text-decoration:none;color:inherit}.rank-math-post-publish .rank-math-share-button a:focus{-webkit-box-shadow:none;box-shadow:none}.rank-math-post-publish .rank-math-share-button .dashicon{vertical-align:-2px}.rank-math-post-publish .rank-math-share-button.rm-facebook{background:#1877f2}.rank-math-post-publish .rank-math-share-button.rm-twitter{background:#1da1f2}#rank-math-compare-keywords-trigger{position:absolute;right:0;top:-31px;height:22px;min-height:22px;width:22px;line-height:22px;padding:0;text-decoration:none;text-align:center;border-radius:3px;-webkit-box-shadow:none;box-shadow:none}#rank-math-compare-keywords-trigger .button-icon{margin:0 auto}#rank-math-compare-keywords-trigger svg{width:16px;height:16px;vertical-align:-2px}.rank-math-sidebar-panel #rank-math-compare-keywords-trigger{top:15px;right:16px}#side-sortables #rank-math-compare-keywords-trigger{top:23px}.rank-math-modal.rank-math-trends-cta-modal{width:930px;max-height:580px}.rank-math-modal.rank-math-trends-cta-modal img{max-width:99.3%}.rank-math-modal.rank-math-trends-cta-modal #rank-math-pro-cta{z-index:initial}body.rtl #rank-math-compare-keywords-trigger{left:16px;right:auto}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header,.rank-math-tabs>.components-tab-panel__tabs .rank-math-extra-menu,.rank-math-post-publish .rank-math-social-share-buttons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.blurred{pointer-events:none;-webkit-filter:blur(2px);filter:blur(2px)}.blurred:after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";background:rgba(248,249,250,.1)}#rank-math-pro-cta{position:relative;z-index:100;margin-top:2rem}#rank-math-pro-cta.center{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:0}#rank-math-pro-cta.analytics{width:560px;max-width:100%;margin:2rem auto 0}#rank-math-pro-cta.no-margin{margin:0}#rank-math-pro-cta .rank-math-cta-box{-ms-flex-item-align:center;align-self:center;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;max-width:90%;padding:2rem 1.5rem;border:2px solid #6666c3;border-radius:4px;background:#fff;-webkit-box-shadow:0 4px 14px 0 rgba(34,36,55,.28);box-shadow:0 4px 14px 0 rgba(34,36,55,.28);justify-self:center}#rank-math-pro-cta .rank-math-cta-box.no-shadow{-webkit-box-shadow:none;box-shadow:none}#rank-math-pro-cta .rank-math-cta-box.no-padding{padding:0}#rank-math-pro-cta .rank-math-cta-box.no-border{border:none}#rank-math-pro-cta .rank-math-cta-box.less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-box.less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.top-20{-ms-flex-item-align:start;align-self:flex-start;margin-top:10%}#rank-math-pro-cta .rank-math-cta-box h3{font-size:1.25rem;font-weight:600;line-height:1.4;margin-top:0;margin-bottom:1.5rem;color:#242628}@media screen and (min-width: 48rem){#rank-math-pro-cta .rank-math-cta-box.width-100{width:100%;max-width:100%}#rank-math-pro-cta .rank-math-cta-box.width-80{max-width:80%}#rank-math-pro-cta .rank-math-cta-box.width-70{max-width:70%}#rank-math-pro-cta .rank-math-cta-box.width-60{max-width:60%}#rank-math-pro-cta .rank-math-cta-box.width-60 h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.width-50{max-width:50%}#rank-math-pro-cta .rank-math-cta-box.width-40{max-width:40%}#rank-math-pro-cta .rank-math-cta-box.width-30{max-width:30%}}#rank-math-pro-cta .rank-math-cta-box.blue-ticks ul li:before{background:#069de3}#rank-math-pro-cta .rank-math-cta-table{margin-bottom:2rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}#rank-math-pro-cta .rank-math-cta-table .less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-table .less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-header{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem .825rem;border-bottom:1px solid #dadfe4}#rank-math-pro-cta .rank-math-cta-header h2{font-size:1.125rem;font-weight:500;margin:0}#rank-math-pro-cta .rank-math-cta-body{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem 1.5rem 1.25rem .825rem}#rank-math-pro-cta .rank-math-cta-body svg,#rank-math-pro-cta .rank-math-cta-body .dashicon{margin-right:1.25rem;fill:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body span.dashicon{font-size:50px;width:50px;height:50px;color:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body p{font-size:1rem;-webkit-box-flex:1;-ms-flex:1;flex:1}#rank-math-pro-cta .rank-math-cta-body .button{line-height:40px;margin-left:1.25rem}#rank-math-pro-cta .rank-math-cta-text{display:block;color:#7f868d}#rank-math-pro-cta .rank-math-cta-text span{margin-right:3px}#rank-math-pro-cta p,#rank-math-pro-cta ul{font-size:1rem;color:#7f868d}#rank-math-pro-cta p{margin-top:0}#rank-math-pro-cta ul{margin-bottom:1.5rem}#rank-math-pro-cta ul li{font-size:1rem;line-height:1.5;margin-bottom:1rem;padding:0;border:0}#rank-math-pro-cta ul li:before{font-family:\"dashicons\";font-size:16px;line-height:18px;display:inline-block;width:18px;margin-right:8px;content:\"\uf15e\";text-align:center;vertical-align:-2px;color:#fff;border-radius:50%;background:#10ac84}#rank-math-pro-cta .button{font-weight:500;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:auto;max-width:100%;margin:0 auto;padding:0 2rem;text-align:center}#rank-math-pro-cta .button.is-link{margin-left:15px;padding:0;font-size:10px;background-color:rgba(0,0,0,0)}.rank-math-error-modal.rank-math-contentai-modal{background-color:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none;height:auto}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content{margin-top:0}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content .components-modal__header{border:none}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta{position:static}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta .rank-math-cta-box{margin-top:0;max-width:100%}:root{--rankmath-wp-adminbar-height: 0}:root{--rankmath-et-seetings-bar-height: 90px;--rankmath-rm-modal-header-height: 58px;--rankmath-rm-modal-spacing: 30px;--rankmath-rm-modal-width: 400px}#rank-math-rm-app-root{position:absolute;z-index:1;top:0;left:0;height:0;width:0;overflow:visible}.rank-math-rm-app{position:absolute;top:0;left:0;height:0;width:0;overflow:visible}#rank-math-rm-settings-bar-root{position:absolute}body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root,body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root *{pointer-events:auto}body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-top,body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-bottom,body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-top-left,body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-bottom-left{left:calc(50% + 45px)}body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-top-right,body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-bottom-right{right:calc(50% + 45px)}body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-left,body.rank-math-et-settings-bar-is-inactive #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-right{top:calc(50% + 45px)}body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-mobile-top-left,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-mobile-top-right{top:calc(100% + 24px)}body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-mobile-bottom-left,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-mobile-bottom-right{bottom:calc(100% + 24px)}body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-mobile-left,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-mobile-right{top:calc(100% + 24px)}body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-top,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-bottom,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-top-left,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-bottom-left{left:calc(100% + 24px)}body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-top-right,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-bottom-right{right:calc(100% + 24px)}body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-left,body.rank-math-et-settings-bar-is-active #rank-math-rm-settings-bar-root.rank-math-rm-settings-bar-root-is-desktop-right{top:calc(100% + 24px)}.rank-math-rm-modal-toggle-button{background-image:linear-gradient(45deg, #724BB7 0%, #4098D7 100%) !important}.rank-math-rm-modal-button{display:block;height:auto;max-width:100%;margin:0;text-align:center;text-decoration:none;line-height:1;color:inherit;background-color:rgba(0,0,0,0);border:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;white-space:nowrap;cursor:pointer}.rank-math-rm-modal-button::-moz-focus-inner{border-style:none;padding:0}body.rank-math-et-settings-bar-is-top .rank-math-rm-modal,body.rank-math-et-settings-bar-is-top-left .rank-math-rm-modal,body.rank-math-et-settings-bar-is-top-right .rank-math-rm-modal{top:calc(var(--rankmath-wp-adminbar-height) + var(--rankmath-et-seetings-bar-height))}body.rank-math-et-settings-bar-is-top .rank-math-rm-modal,body.rank-math-et-settings-bar-is-top-right .rank-math-rm-modal,body.rank-math-et-settings-bar-is-right .rank-math-rm-modal,body.rank-math-et-settings-bar-is-bottom-right .rank-math-rm-modal,body.rank-math-et-settings-bar-is-bottom .rank-math-rm-modal{left:var(--rankmath-rm-modal-spacing)}body.rank-math-et-settings-bar-is-top-left .rank-math-rm-modal,body.rank-math-et-settings-bar-is-left .rank-math-rm-modal,body.rank-math-et-settings-bar-is-bottom-left .rank-math-rm-modal{left:calc(100vw - var(--rankmath-rm-modal-width) - var(--rankmath-rm-modal-spacing))}.rank-math-rm-modal{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;position:relative;top:calc(var(--rankmath-rm-modal-spacing) + var(--rankmath-wp-adminbar-height));display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:var(--rankmath-rm-modal-width);padding-top:var(--rankmath-rm-modal-header-height);background:#fff;-webkit-box-shadow:0 5px 30px rgba(44,135,218,.2);box-shadow:0 5px 30px rgba(44,135,218,.2);-webkit-font-smoothing:subpixel-antialiased}.rank-math-rm-modal-is-hidden{display:none}.rank-math-rm-modal-content{position:relative;z-index:0;overflow:hidden;overflow-y:auto;max-height:calc(100vh - var(--rankmath-wp-adminbar-height) - var(--rankmath-et-seetings-bar-height) - var(--rankmath-rm-modal-spacing) - var(--rankmath-rm-modal-header-height))}body.rank-math-et-settings-bar-is-left .rank-math-rm-modal-content,body.rank-math-et-settings-bar-is-right .rank-math-rm-modal-content{max-height:calc(100vh - var(--rankmath-wp-adminbar-height) - var(--rankmath-rm-modal-spacing)*2 - var(--rankmath-rm-modal-header-height))}.rank-math-rm-modal-content h1,.rank-math-rm-modal-content h2,.rank-math-rm-modal-content h3,.rank-math-rm-modal-content h4,.rank-math-rm-modal-content h5,.rank-math-rm-modal-content h6{padding-bottom:0}.rank-math-rm-modal-header{position:absolute;z-index:1;top:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:var(--rankmath-rm-modal-header-height);padding-right:21px;padding-left:26px;color:#fff;background-color:#6c2eb9;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;cursor:move}.rank-math-rm-modal-header-title{font-family:\"Open Sans\",Helvetica,Roboto,Arial,sans-serif;font-size:18px;font-weight:600;font-style:normal;line-height:16px;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;letter-spacing:0;text-transform:none;color:#fff}.rank-math-rm-modal-header-options{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-rm-modal-header-option{display:block}.rank-math-rm-modal-header-discard-button{width:100%;height:100%;padding:4px}.rank-math-rm-modal-header-discard-button svg{position:relative;top:2px;width:26px;height:26px;fill:#fff}#rank-math-primary-term-input .rank-math-primary-term-select{margin-bottom:20px}#rank-math-primary-term-input .rank-math-primary-term-select .components-input-control__label{display:inline-block;font-family:\"Open Sans\",Helvetica,Roboto,Arial,sans-serif;color:#32373c;font-weight:600;line-height:20px;margin:0;padding:0;border:0;font-size:14px;white-space:normal;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}#rank-math-primary-term-input .rank-math-primary-term-select .components-select-control__input{background-color:#f1f5f9;border-radius:3px;font-family:\"Open Sans\",Helvetica,Roboto,Arial,sans-serif;padding-left:10px;outline:0;color:#4c5866;font-size:13px;font-weight:600;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}#rank-math-primary-term-input .rank-math-primary-term-select .components-input-control__suffix svg path{fill:#4c5866}#rank-math-primary-term-input .rank-math-primary-term-select .components-input-control__backdrop{border:0;-webkit-box-shadow:none;box-shadow:none}body.rtl #rank-math-rm-app-root{left:auto;right:0}body.rtl #rank-math-rm-app-root .rank-math-rm-modal{left:auto;right:var(--rankmath-rm-modal-spacing)}body.rtl #rank-math-rm-app-root .rank-math-rm-modal .serp-preview-title .seo-score{float:left}body.rtl #rank-math-rm-app-root .rank-math-rm-modal #rank-math-compare-keywords-trigger{left:16px;right:auto}#rank-math-lock-modified-date-wrapper{margin-left:1px}#rank-math-lock-modified-date-wrapper button{-webkit-box-shadow:none;box-shadow:none;outline:none;height:40px;border-radius:3px}#rank-math-lock-modified-date-wrapper button.rank-math-lock-modified-date{position:absolute;right:0;top:-105%}.components-tab-panel__tab-content .rank-math-tab-content-general .serp-preview-title .seo-score{display:block}.components-tab-panel__tab-content .rank-math-tab-content-general .serp-preview-title::before{font-weight:500;letter-spacing:0}.components-tab-panel__tab-content .rank-math-tab-content-general .serp-result{position:absolute;top:-1px;left:0}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs{background:#7e3bd0;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link){font-size:100%;line-height:1;display:block;width:auto;padding:13px 20px;-webkit-transition:background .5s ease-in-out;transition:background .5s ease-in-out;vertical-align:baseline;text-decoration:none;color:#fff;background:rgba(0,0,0,0)}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link) i{background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):hover{background:#7435c1}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):hover i{background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not([id]){margin-left:auto}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not(.is-active){padding:13px 19px 13px 26px}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active{margin-bottom:0}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active,.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active:hover{background:#8f42eb}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link)::before,.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tabs button:not(:disabled):not([aria-disabled=true]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link)::after{display:none}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tab-content .rank-math-ca-credits{right:15px;margin-top:10px;color:#fff}.rank-math-rm-modal .rank-math-tabs .components-tab-panel__tab-content .rank-math-ca-credits button.update-credits{height:auto;color:#fff}.rank-math-modal .components-modal__header-heading{padding-bottom:0}.rank-math-modal .rank-math-tabs>.components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active::after{background:#2c87da !important}.rank-math-tabs>.components-tab-panel__tab-content>div>div:first-child{margin-top:10px;border-top:0;border-bottom:0}.rank-math-tabs>.components-tab-panel__tab-content select,.rank-math-tabs>.components-tab-panel__tab-content input[type=text]{min-height:30px}.rank-math-tabs>.components-tab-panel__tab-content textarea{font-family:inherit;line-height:1.42857143}.rank-math-tabs .cmb2-metabox-description{font-weight:400}.rank-math-tabs .rank-math-datepicker>button{color:inherit}.rank-math-tooltip label{cursor:pointer}.rank-math-tooltip label:before{height:21px;vertical-align:middle}.rank-math-tooltip label:hover{color:#d30c5c}.rank-math-tooltip input:checked+label{color:#d30c5c}.rank-math-modal .rank-math-tabs>.components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link){font-size:13px;height:44px;text-transform:none}.rank-math-modal .rank-math-tabs>.components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):hover i,.rank-math-modal .rank-math-tabs>.components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):not(.is-active):hover i{background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-modal .rank-math-tabs>.components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active{-webkit-box-shadow:none;box-shadow:none}.rank-math-modal .rank-math-tabs>.components-tab-panel__tabs button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link).is-active:after{display:block;background:#d30c5c}.rank-math-modal .rank-math-button-devices .components-button.active,.rank-math-modal .rank-math-button-devices .components-button:hover{background:#f6e7ee !important}.rank-math-modal.rank-math-modal-trends-tool{width:930px;max-height:580px}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/3rdparty\/divi\/class-divi-admin.php","ext":"php","size":1023,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Divi admin integration.\n *\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Divi;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Divi class.\n *\/\nclass Divi_Admin {\n\n\tuse Hooker;\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->init();\n\t}\n\n\t\/**\n\t * Intialize Divi admin.\n\t *\/\n\tpublic function init() {\n\t\t$screen = get_current_screen();\n\t\tif ( 'toplevel_page_et_divi_options' === $screen->id ) {\n\t\t\t$this->action( 'admin_enqueue_scripts', 'enqueue_divi_admin_scripts' );\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue scripts for Divi admin options screen.\n\t *\/\n\tpublic function enqueue_divi_admin_scripts() {\n\t\twp_enqueue_script(\n\t\t\t'rank-math-divi-admin',\n\t\t\trank_math()->plugin_url() . 'includes\/3rdparty\/divi\/assets\/js\/divi-admin.js',\n\t\t\t[\n\t\t\t\t'jquery',\n\t\t\t\t'react',\n\t\t\t\t'react-dom',\n\t\t\t\t'wp-components',\n\t\t\t\t'wp-element',\n\t\t\t\t'wp-i18n',\n\t\t\t\t'wp-polyfill',\n\t\t\t],\n\t\t\trank_math()->version,\n\t\t\ttrue\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/3rdparty\/divi\/class-divi.php","ext":"php","size":11152,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Divi integration.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Divi;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Editor;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Schema\\DB as Schema_DB;\nuse RankMath\\Schema\\Admin as Schema_Admin;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Metabox\\Screen;\nuse WP_Dependencies;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Divi class.\n *\/\nclass Divi {\n\n\tuse Hooker;\n\n\t\/**\n\t * Screen object.\n\t *\n\t * @var Screen\n\t *\/\n\tprivate $screen;\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'wp', 'init' );\n\t}\n\n\t\/**\n\t * Intialize.\n\t *\/\n\tpublic function init() {\n\t\tif ( ! $this->can_add_seo_tab() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->screen = new Screen();\n\t\t$this->screen->load_screen( 'post' );\n\n\t\t$this->action( 'template_redirect', 'set_window_lodash', 0 );\n\t\t$this->action( 'wp_enqueue_scripts', 'register_rankmath_react' );\n\t\t$this->action( 'wp_enqueue_scripts', 'add_json_data', 0 );\n\t\t$this->action( 'wp_footer', 'footer_enqueue_scripts', 11 );\n\t\tremove_action( 'wp_footer', [ rank_math()->json, 'output' ], 0 );\n\t\tadd_action( 'wp_footer', [ rank_math()->json, 'output' ], 11 );\n\t\t$this->filter( 'script_loader_tag', 'add_et_tag', 10, 3 );\n\t}\n\n\t\/**\n\t * Set the global lodash variable.\n\t *\n\t * Lodash's `noConflict` would prevent UnderscoreJS from taking over the underscore (_)\n\t * global variable. Because Underscore.js will later also be assigned to the underscore (_)\n\t * global this function should run as early as possible.\n\t *\/\n\tpublic function set_window_lodash() {\n\t\twp_register_script( 'rm-set-window-lodash', '', [ 'lodash' ], rank_math()->version, false );\n\t\twp_enqueue_script( 'rm-set-window-lodash' );\n\t\twp_add_inline_script(\n\t\t\t'rm-set-window-lodash',\n\t\t\tjoin(\n\t\t\t\t\"\\r\\n \",\n\t\t\t\t[\n\t\t\t\t\t'window.isLodash = function() {',\n\t\t\t\t\t\"if ( typeof window._ !== 'function' || typeof window._.forEach !== 'function' ) {\",\n\t\t\t\t\t'return false;',\n\t\t\t\t\t'}',\n\t\t\t\t\t'var isLodash = true;',\n\t\t\t\t\t'window._.forEach(',\n\t\t\t\t\t\"[ 'cloneDeep', 'at', 'add', 'ary', 'attempt' ],\",\n\t\t\t\t\t'function( fn ) {',\n\t\t\t\t\t\"if ( isLodash && typeof window._[ fn ] !== 'function' ) {\",\n\t\t\t\t\t'isLodash = false;',\n\t\t\t\t\t'}',\n\t\t\t\t\t'}',\n\t\t\t\t\t');',\n\t\t\t\t\t'return isLodash;',\n\t\t\t\t\t'}',\n\t\t\t\t\t'if ( window.isLodash() ) { window.lodash = window._.noConflict(); }',\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Register RankMath React and ReactDOM.\n\t *\n\t * Registers the native WP version of react with a custom handle for use in the\n\t * RankMath module. Divi builder dequeues and deregisters native WP react scripts\n\t * and replaces them with their own copy of React. Their copy might not be of the\n\t * same version as the one RankMath requires.\n\t *\/\n\tpublic function register_rankmath_react() {\n\t\t$path   = site_url( '\/wp-includes\/js\/dist\/vendor\/' );\n\t\t$suffix = wp_scripts_get_suffix();\n\t\twp_register_script( 'rm-react', \"{$path}react{$suffix}.js\", [ 'wp-polyfill', 'react' ], '16.13.1', true );\n\t\twp_register_script( 'rm-react-dom', \"{$path}react-dom{$suffix}.js\", [ 'rm-react', 'react-dom' ], '16.13.1', true );\n\t}\n\n\t\/**\n\t * Add JSON data.\n\t *\/\n\tpublic function add_json_data() {\n\t\t$this->maybe_load_editor_deps();\n\n\t\tif ( Helper::has_cap( 'onpage_snippet' ) ) {\n\n\t\t\t\/\/ Schema.\n\t\t\t$schemas = $this->get_schema_data( get_the_ID() );\n\t\t\tHelper::add_json( 'schemas', $schemas );\n\t\t\tHelper::add_json( 'customSchemaImage', esc_url( rank_math()->plugin_url() . 'includes\/modules\/schema\/assets\/img\/custom-schema-builder.jpg' ) );\n\n\t\t\t\/\/ Trends.\n\t\t\t$trends_upgrade_link = KB::get( 'pro', 'Divi General Tab Trends' );\n\t\t\tHelper::add_json( 'trendsUpgradeLink', esc_url_raw( $trends_upgrade_link ) );\n\t\t\tHelper::add_json( 'trendsPreviewImage', esc_url( rank_math()->plugin_url() . 'assets\/admin\/img\/trends-preview.jpg' ) );\n\t\t}\n\n\t\tHelper::add_json(\n\t\t\t'api',\n\t\t\t[\n\t\t\t\t'root'  => esc_url_raw( get_rest_url() ),\n\t\t\t\t'nonce' => ( wp_installing() && ! is_multisite() ) ? '' : wp_create_nonce( 'wp_rest' ),\n\t\t\t]\n\t\t);\n\n\t\tHelper::add_json(\n\t\t\t'keywordsApi',\n\t\t\t[\n\t\t\t\t'url' => 'https:\/\/api.rankmath.com\/ltkw\/v1\/',\n\t\t\t]\n\t\t);\n\n\t\tHelper::add_json( 'links', KB::get_links() );\n\n\t\tHelper::add_json(\n\t\t\t'validationl10n',\n\t\t\t[\n\t\t\t\t'regexErrorDefault'    => __( 'Please use the correct format.', 'rank-math' ),\n\t\t\t\t'requiredErrorDefault' => __( 'This field is required.', 'rank-math' ),\n\t\t\t\t'emailErrorDefault'    => __( 'Please enter a valid email address.', 'rank-math' ),\n\t\t\t\t'urlErrorDefault'      => __( 'Please enter a valid URL.', 'rank-math' ),\n\t\t\t]\n\t\t);\n\n\t\tHelper::add_json( 'capitalizeTitle', Helper::get_settings( 'titles.capitalize_titles' ) );\n\t\tHelper::add_json( 'blogName', get_bloginfo( 'name' ) );\n\n\t\tif ( is_admin_bar_showing() && Helper::has_cap( 'admin_bar' ) ) {\n\t\t\tHelper::add_json( 'objectID', get_the_ID() );\n\t\t\tHelper::add_json( 'objectType', 'post' );\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue scripts.\n\t *\/\n\tpublic function footer_enqueue_scripts() {\n\t\t\/**\n\t\t * Allow other plugins to enqueue\/dequeue admin styles or scripts before plugin assets.\n\t\t *\/\n\t\t$this->do_action( 'admin\/before_editor_scripts' );\n\n\t\t$divi_deps = [\n\t\t\t'jquery',\n\t\t\t'lodash',\n\t\t\t'rm-react',\n\t\t\t'rm-react-dom',\n\t\t\t'rm-set-window-lodash',\n\t\t\t'et-dynamic-asset-helpers',\n\t\t\t'wp-api-fetch',\n\t\t\t'wp-block-editor',\n\t\t\t'wp-components',\n\t\t\t'wp-compose',\n\t\t\t'wp-core-data',\n\t\t\t'wp-data',\n\t\t\t'wp-element',\n\t\t\t'wp-hooks',\n\t\t\t'wp-media-utils',\n\t\t\t'wp-wordcount',\n\t\t\t'rank-math-analyzer',\n\t\t\t'rank-math-app',\n\t\t];\n\n\t\tif ( is_admin_bar_showing() && Helper::has_cap( 'admin_bar' ) ) {\n\t\t\twp_enqueue_style( 'rank-math', rank_math()->assets() . 'css\/rank-math.css', null, rank_math()->version );\n\t\t\twp_enqueue_script( 'rank-math', rank_math()->assets() . 'js\/rank-math.js', [ 'jquery' ], rank_math()->version, true );\n\t\t}\n\n\t\twp_enqueue_style( 'rank-math-common', rank_math()->plugin_url() . 'assets\/admin\/css\/common.css', null, rank_math()->version );\n\t\twp_enqueue_style( 'wp-components' );\n\t\twp_enqueue_style( 'rank-math-editor', rank_math()->plugin_url() . 'includes\/3rdparty\/divi\/assets\/css\/divi.css', [], rank_math()->version );\n\n\t\twp_register_script( 'rank-math-analyzer', rank_math()->plugin_url() . 'assets\/admin\/js\/analyzer.js', null, rank_math()->version, true );\n\t\twp_enqueue_script( 'rank-math-editor', rank_math()->plugin_url() . 'includes\/3rdparty\/divi\/assets\/js\/divi.js', $divi_deps, rank_math()->version, true );\n\t\twp_enqueue_script( 'rank-math-divi-iframe', rank_math()->plugin_url() . 'includes\/3rdparty\/divi\/assets\/js\/divi-iframe.js', [ 'jquery', 'lodash' ], rank_math()->version, true );\n\n\t\twp_set_script_translations( 'rank-math-app', 'seo-by-rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\twp_set_script_translations( 'rank-math-divi-iframe', 'seo-by-rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\twp_set_script_translations( 'rank-math-editor', 'seo-by-rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\twp_set_script_translations( 'rank-math-analyzer', 'seo-by-rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\n\t\tif ( Helper::is_module_active( 'rich-snippet' ) ) {\n\t\t\twp_enqueue_style( 'rank-math-schema', rank_math()->plugin_url() . 'includes\/modules\/schema\/assets\/css\/schema.css', [ 'wp-components' ], rank_math()->version );\n\n\t\t\twp_enqueue_script( 'rank-math-schema', rank_math()->plugin_url() . 'includes\/modules\/schema\/assets\/js\/schema-gutenberg.js', [ 'rank-math-editor' ], rank_math()->version, true );\n\t\t\twp_set_script_translations( 'rank-math-schema', 'seo-by-rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\t}\n\n\t\trank_math()->variables->setup();\n\t\trank_math()->variables->setup_json();\n\n\t\t$this->screen->localize();\n\n\t\t$this->print_react_containers();\n\n\t\t\/**\n\t\t * Allow other plugins to enqueue\/dequeue admin styles or scripts after plugin assets.\n\t\t *\/\n\t\t$this->do_action( 'admin\/editor_scripts', $this->screen );\n\t}\n\n\t\/**\n\t * Add et attributes to script tags.\n\t *\n\t * @param string $tag The <script> tag for the enqueued script.\n\t * @param string $handle The script's registered handle.\n\t *\n\t * @return string\n\t *\/\n\tpublic function add_et_tag( $tag, $handle ) {\n\t\t$script_handles = [\n\t\t\t'rm-react',\n\t\t\t'rm-react-dom',\n\t\t\t'lodash',\n\t\t\t'moment',\n\t\t\t'rank-math',\n\t\t\t'rank-math-analyzer',\n\t\t\t'rank-math-schema',\n\t\t\t'rank-math-editor',\n\t\t\t'rank-math-content-ai',\n\t\t\t'rank-math-app',\n\t\t\t\/\/ Scripts required by pro version.\n\t\t\t'wp-plugins',\n\t\t\t'jquery-ui-autocomplete',\n\t\t\t'rank-math-pro-editor',\n\t\t\t'rank-math-schema-pro',\n\t\t\t'rank-math-pro-schema-filters',\n\t\t\t'rank-math-pro-news',\n\t\t];\n\n\t\t$exclude_handles = [\n\t\t\t'wp-util',\n\t\t\t'wp-backbone',\n\t\t\t'wp-plupload',\n\t\t\t'wp-mediaelement',\n\t\t\t'wp-color-picker',\n\t\t\t'wp-color-picker-alpha',\n\t\t\t'wp-embed',\n\t\t\t'wp-hooks',\n\t\t];\n\n\t\tif ( in_array( $handle, $exclude_handles, true ) ) {\n\t\t\treturn $tag;\n\t\t}\n\n\t\tif ( Str::starts_with( 'wp-', $handle ) || in_array( $handle, $script_handles, true ) ) {\n\t\t\t\/\/ These tags load in parent window only, not in Divi iframe.\n\t\t\t$tag = preg_replace(\n\t\t\t\t'\/<script\\b(?![^>]*\\bclass=)([^>]*)>\/i',\n\t\t\t\t'<script class=\"et_fb_ignore_iframe\"$1>',\n\t\t\t\t$tag\n\t\t\t);\n\t\t}\n\n\t\treturn $tag;\n\t}\n\n\t\/**\n\t * Print React containers onto the screen.\n\t *\/\n\tpublic function print_react_containers() {\n\t\techo '<div id=\"rank-math-rm-app-root\" class=\"et_fb_ignore_iframe\"><\/div>';\n\t\techo '<div id=\"rank-math-rm-settings-bar-root\" class=\"et_fb_ignore_iframe\"><\/div>';\n\t}\n\n\n\t\/**\n\t * Can add SEO in Divi Page Builder.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_add_seo_tab() {\n\t\tif (\n\t\t\t! Helper::is_divi_frontend_editor() ||\n\t\t\t! defined( 'ET_BUILDER_PRODUCT_VERSION' ) ||\n\t\t\t! version_compare( '4.9.2', ET_BUILDER_PRODUCT_VERSION, 'le' )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter to show\/hide SEO Tab in Divi Editor.\n\t\t *\/\n\t\tif ( ! $this->do_filter( 'divi\/add_seo_tab', true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$post_type = get_post_type();\n\t\tif ( $post_type && ! Helper::get_settings( 'titles.pt_' . $post_type . '_add_meta_box' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Editor::can_add_editor();\n\t}\n\n\t\/**\n\t * Get Schema Data.\n\t *\n\t * @param int $post_id Post ID.\n\t *\n\t * @return array $schemas Schema Data.\n\t *\/\n\tprivate function get_schema_data( $post_id ) {\n\t\t$schemas = Schema_DB::get_schemas( $post_id );\n\t\tif ( ! empty( $schemas ) || metadata_exists( 'post', $post_id, 'rank_math_rich_snippet' ) ) {\n\t\t\treturn $schemas;\n\t\t}\n\n\t\t$post_type    = get_post_type( $post_id );\n\t\t$default_type = ucfirst( Helper::get_default_schema_type( $post_id ) );\n\t\tif ( ! $default_type ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$schemas['new-9999'] = [\n\t\t\t'@type'    => $default_type,\n\t\t\t'metadata' => [\n\t\t\t\t'title'     => Helper::sanitize_schema_title( $default_type ),\n\t\t\t\t'type'      => 'template',\n\t\t\t\t'shortcode' => uniqid( 's-' ),\n\t\t\t\t'isPrimary' => true,\n\t\t\t],\n\t\t];\n\n\t\treturn $schemas;\n\t}\n\n\t\/**\n\t * Ensures required dependencies are loaded when toolbar is hidden.\n\t *\n\t * @return void\n\t *\/\n\tprivate function maybe_load_editor_deps() {\n\t\tif ( is_admin_bar_showing() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::add_json( 'security', wp_create_nonce( 'rank-math-ajax-nonce' ) );\n\t\tHelper::add_json( 'restNonce', ( wp_installing() && ! is_multisite() ) ? '' : wp_create_nonce( 'wp_rest' ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-compatibility.php","ext":"php","size":2578,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The compatibility functionality for 3rd party plugins.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Compatibility class.\n *\/\nclass Compatibility {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\tif ( is_admin() ) {\n\n\t\t\tif ( \\defined( 'PIRATE_FORMS_VERSION' ) ) {\n\t\t\t\t$this->action( 'admin_enqueue_scripts', 'pirate_forms_dequeue_scripts' );\n\t\t\t}\n\t\t}\n\n\t\t$this->filter( 'rank_math\/pre_simple_page_id', 'subscribe_to_comments_reloaded' );\n\t\t$this->filter( 'genesis_detect_seo_plugins', 'disable_genesis_seo' );\n\t}\n\n\t\/**\n\t * Subscribe to comments reloaded page ID.\n\t *\n\t * @param  int $page_id Change page id to real page.\n\t * @return int\n\t *\/\n\tpublic function subscribe_to_comments_reloaded( $page_id ) {\n\t\tif ( is_plugin_active( 'subscribe-to-comments-reloaded\/subscribe-to-comments-reloaded.php' ) ) {\n\t\t\t$page_permalink = get_option( 'subscribe_reloaded_manager_page', '\/comment-subscriptions\/' );\n\t\t\tif ( function_exists( 'qtrans_convertURL' ) ) {\n\t\t\t\t$page_permalink = qtrans_convertURL( $page_permalink );\n\t\t\t}\n\t\t\tif ( isset( $_SERVER['REQUEST_URI'] ) && ( strpos( sanitize_text_field( $_SERVER['REQUEST_URI'] ), $page_permalink ) !== false ) ) {\n\t\t\t\t$this->action( 'rank_math\/head', 'subscribe_to_comments_reloaded_remove_robots', 1 );\n\t\t\t\treturn get_queried_object_id();\n\t\t\t}\n\t\t}\n\n\t\treturn $page_id;\n\t}\n\n\t\/**\n\t * Remove robots for this plugin.\n\t *\/\n\tpublic function subscribe_to_comments_reloaded_remove_robots() {\n\t\tremove_action( 'rank_math\/frontend\/robots', '__return_empty_array' );\n\t}\n\n\t\/**\n\t * Remove Pirate forms plugin scripts and styles from setting panels.\n\t *\/\n\tpublic function pirate_forms_dequeue_scripts() {\n\n\t\tif ( ! wp_script_is( 'pirate_forms_pro_admin_scripts' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$screen = get_current_screen();\n\t\tif (\n\t\t\t( ! Str::contains( 'rank-math', $screen->id ) && ! in_array( $screen->base, [ 'post', 'term', 'profile', 'user-edit' ], true ) ) ||\n\t\t\t'pf_form' === $screen->id\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_dequeue_script( 'pirate_forms_pro_admin_scripts' );\n\t\twp_dequeue_style( 'pirate_forms_pro_admin_styles' );\n\t}\n\n\t\/**\n\t * Disable Genesis SEO functionality.\n\t *\n\t * @param array $value Array hold disable info.\n\t *\n\t * @return array\n\t *\/\n\tpublic function disable_genesis_seo( $value ) {\n\t\t$value['classes'][]   = '\\RankMath\\RankMath';\n\t\t$value['functions'][] = 'rank_math';\n\n\t\treturn $value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-defaults.php","ext":"php","size":1158,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Defaults by plugins.\n *\n * @since      1.0.40\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Defaults class.\n *\/\nclass Defaults {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor method.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->filter( 'rank_math\/excluded_taxonomies', 'exclude_taxonomies' );\n\t\t$this->filter( 'rank_math\/excluded_post_types', 'excluded_post_types' );\n\t}\n\n\t\/**\n\t * Exclude taxonomies.\n\t *\n\t * @param array $taxonomies Excluded taxonomies.\n\t *\n\t * @return array\n\t *\/\n\tpublic function exclude_taxonomies( $taxonomies ) {\n\t\tif ( ! current_theme_supports( 'post-formats' ) ) {\n\t\t\tunset( $taxonomies['post_format'] );\n\t\t}\n\t\tunset( $taxonomies['product_shipping_class'] );\n\n\t\treturn $taxonomies;\n\t}\n\n\t\/**\n\t * Exclude post_types.\n\t *\n\t * @param array $post_types Excluded post_types.\n\t *\n\t * @return array\n\t *\/\n\tpublic function excluded_post_types( $post_types ) {\n\t\tif ( isset( $post_types['elementor_library'] ) ) {\n\t\t\tunset( $post_types['elementor_library'] );\n\t\t}\n\n\t\treturn $post_types;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-helper.php","ext":"php","size":11569,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Helper Functions.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Helpers\\Api;\nuse RankMath\\Helpers\\Conditional;\nuse RankMath\\Helpers\\Choices;\nuse RankMath\\Helpers\\Post_Type;\nuse RankMath\\Helpers\\Options;\nuse RankMath\\Helpers\\Taxonomy;\nuse RankMath\\Helpers\\WordPress;\nuse RankMath\\Helpers\\Schema;\nuse RankMath\\Helpers\\Analytics;\nuse RankMath\\Helpers\\Content_AI;\nuse RankMath\\Helpers\\HTML;\nuse RankMath\\Replace_Variables\\Replacer;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Helper class.\n *\/\nclass Helper {\n\n\tuse Api;\n\tuse Conditional;\n\tuse Choices;\n\tuse Post_Type;\n\tuse Options;\n\tuse Taxonomy;\n\tuse WordPress;\n\tuse Schema;\n\tuse Analytics;\n\tuse Content_AI;\n\n\t\/**\n\t * Replace `%variables%` with context-dependent value.\n\t *\n\t * @param string $content The string containing the %variables%.\n\t * @param array  $args    Context object, can be post, taxonomy or term.\n\t * @param array  $exclude Excluded variables won't be replaced.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function replace_vars( $content, $args = [], $exclude = [] ) {\n\t\treturn ( new Replacer() )->replace( $content, $args, $exclude );\n\t}\n\n\t\/**\n\t * Replace `%variables%` with context-dependent value in SEO fields.\n\t *\n\t * @param string $content The string containing the %variables%.\n\t * @param object $post    Context object, can be post, taxonomy or term.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function replace_seo_fields( $content, $post ) {\n\t\tif ( empty( $post ) || ! in_array( $content, [ '%seo_title%', '%seo_description%', '%url%' ], true ) ) {\n\t\t\treturn self::replace_vars( $content, $post );\n\t\t}\n\n\t\tif ( '%seo_title%' === $content ) {\n\t\t\t$default = self::get_settings( \"titles.pt_{$post->post_type}_title\", '%title% %sep% %sitename%' );\n\t\t\t$title   = self::get_post_meta( 'title', $post->ID, $default );\n\n\t\t\treturn self::replace_vars( $title, $post );\n\t\t}\n\n\t\tif ( '%seo_description%' === $content ) {\n\t\t\t$default = self::get_settings( \"titles.pt_{$post->post_type}_description\", '%excerpt%' );\n\t\t\t$desc    = self::get_post_meta( 'description', $post->ID, $default );\n\n\t\t\treturn self::replace_vars( $desc, $post );\n\t\t}\n\n\t\treturn self::get_post_meta( 'canonical', $post->ID, get_the_permalink( $post->ID ) );\n\t}\n\n\t\/**\n\t * Register extra %variables%. For developers.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @deprecated 1.0.34 Use rank_math_register_var_replacement()\n\t * @see rank_math_register_var_replacement()\n\t *\n\t * @param  string $variable  Variable name, for example %custom%. '%' signs are optional.\n\t * @param  mixed  $callback  Replacement callback. Should return value, not output it.\n\t * @param  array  $args      Array with additional title, description and example values for the variable.\n\t *\n\t * @return bool Replacement was registered successfully or not.\n\t *\/\n\tpublic static function register_var_replacement( $variable, $callback, $args = [] ) {\n\t\t_deprecated_function( 'RankMath\\Helper::register_var_replacement()', '1.0.34', 'rank_math_register_var_replacement()' );\n\t\t$args['description'] = isset( $args['desc'] ) ? $args['desc'] : '';\n\t\t$args['variable']    = $variable;\n\t\treturn rank_math_register_var_replacement( $variable, $args, $callback );\n\t}\n\n\t\/**\n\t * Get midnight time for the date variables.\n\t *\n\t * @param  int $time Timestamp of date.\n\t * @return int\n\t *\/\n\tpublic static function get_midnight( $time ) {\n\t\t$org_time = $time;\n\t\tif ( is_numeric( $time ) ) {\n\t\t\t$time = self::get_date( 'Y-m-d H:i:s', $time, false, true );\n\t\t}\n\n\t\t\/\/ Early bail if time format is invalid.\n\t\tif ( false === strtotime( $time ) ) {\n\t\t\treturn $org_time;\n\t\t}\n\n\t\t$date = new \\DateTime( $time );\n\t\t$date->setTime( 0, 0, 0 );\n\n\t\treturn $date->getTimestamp();\n\t}\n\n\t\/**\n\t * Extract URL part.\n\t *\n\t * @param  string $url  The URL to parse.\n\t * @param  string $part The URL part to retrieve.\n\t *\n\t * @return string The extracted URL part.\n\t *\/\n\tpublic static function get_url_part( $url, $part ) {\n\t\t$url_parts = wp_parse_url( $url );\n\n\t\treturn $url_parts[ $part ] ?? '';\n\t}\n\n\t\/**\n\t * Get current page URL.\n\t *\n\t * @param  bool $ignore_qs Ignore query string.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_current_page_url( $ignore_qs = false ) {\n\t\t$link = ( is_ssl() ? 'https' : 'http' ) . ':\/\/' . Param::server( 'HTTP_HOST' ) . Param::server( 'REQUEST_URI' );\n\n\t\tif ( $ignore_qs ) {\n\t\t\t$link = explode( '?', $link );\n\t\t\t$link = $link[0];\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t\/**\n\t * Get module by ID.\n\t *\n\t * @param  string $id ID to get module.\n\t *\n\t * @return object Module class object.\n\t *\/\n\tpublic static function get_module( $id ) {\n\t\treturn rank_math()->manager->get_module( $id );\n\t}\n\n\t\/**\n\t * Modify module status.\n\t *\n\t * @param array $modules Modules to modify.\n\t *\/\n\tpublic static function update_modules( $modules ) {\n\t\t$stored = get_option( 'rank_math_modules', [] );\n\n\t\tforeach ( $modules as $module => $action ) {\n\t\t\tif ( 'off' === $action ) {\n\t\t\t\tif ( in_array( $module, $stored, true ) ) {\n\t\t\t\t\t$stored = array_diff( $stored, [ $module ] );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$stored[] = $module;\n\t\t\tInstaller::create_tables( [ $module ] );\n\t\t}\n\n\t\tupdate_option( 'rank_math_modules', array_unique( $stored ) );\n\t}\n\n\t\/**\n\t * Get list of currently active modules.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_active_modules() {\n\t\t$registered_modules = rank_math()->manager->modules;\n\t\t$stored             = array_values( get_option( 'rank_math_modules', [] ) );\n\t\tforeach ( $stored as $key => $value ) {\n\t\t\tif (\n\t\t\t\t! isset( $registered_modules[ $value ] )\n\t\t\t\t|| ! is_object( $registered_modules[ $value ] )\n\t\t\t\t|| ! method_exists( $registered_modules[ $value ], 'is_disabled' )\n\t\t\t\t|| $registered_modules[ $value ]->is_disabled()\n\t\t\t) {\n\t\t\t\tunset( $stored[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn $stored;\n\t}\n\n\t\/**\n\t * Clear cache from:\n\t *  - WordPress Total Cache\n\t *  - W3 Total Cache\n\t *  - WP Super Cache\n\t *  - SG CachePress\n\t *  - WPEngine\n\t *  - Varnish\n\t *\n\t * @param string $context Context for cache to clear.\n\t *\/\n\tpublic static function clear_cache( $context = '' ) {\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/pre_clear_cache' - Allow developers to extend\/override cache clearing.\n\t\t * Pass a truthy value to override the cache clearing.\n\t\t *\/\n\t\tif ( apply_filters( 'rank_math\/pre_clear_cache', false, $context ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Clean WordPress cache.\n\t\tif ( function_exists( 'wp_cache_clear_cache' ) ) {\n\t\t\twp_cache_clear_cache();\n\t\t}\n\n\t\t\/\/ If W3 Total Cache is being used, clear the cache.\n\t\tif ( function_exists( 'w3tc_pgcache_flush' ) ) {\n\t\t\tw3tc_pgcache_flush();\n\t\t}\n\n\t\t\/\/ If WP Super Cache is being used, clear the cache.\n\t\tif ( function_exists( 'wp_cache_clean_cache' ) ) {\n\t\t\tglobal $file_prefix;\n\t\t\twp_cache_clean_cache( $file_prefix );\n\t\t}\n\n\t\t\/\/ If SG CachePress is installed, reset its caches.\n\t\tif ( class_exists( 'SG_CachePress_Supercacher' ) && is_callable( [ 'SG_CachePress_Supercacher', 'purge_cache' ] ) ) {\n\t\t\t\\SG_CachePress_Supercacher::purge_cache();\n\t\t}\n\n\t\t\/\/ Clear caches on WPEngine-hosted sites.\n\t\tif ( class_exists( 'WpeCommon' ) ) {\n\t\t\t\\WpeCommon::purge_memcached();\n\t\t\t\\WpeCommon::purge_varnish_cache();\n\n\t\t\t\/\/ Clear WPEngine CDN cache. Added this condition to avoid PHP error as we are not sure when the new clear_cdn_cache method was added.\n\t\t\tif ( method_exists( 'WpeCommon', 'clear_cdn_cache' ) ) {\n\t\t\t\t\\WpeCommon::clear_cdn_cache();\n\t\t\t} else {\n\t\t\t\t\\WpeCommon::clear_maxcdn_cache();\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Clear Varnish caches.\n\t\tself::clear_varnish_cache();\n\t}\n\n\t\/**\n\t * Clear varnish cache for the dynamic files.\n\t * Credit @davidbarratt: https:\/\/github.com\/davidbarratt\/varnish-http-purge\n\t *\/\n\tprivate static function clear_varnish_cache() {\n\t\t\/\/ Early bail if Varnish cache is not enabled on the site.\n\t\tif ( ! isset( $_SERVER['HTTP_X_VARNISH'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Parse the URL for proxy proxies.\n\t\t$parsed_url = wp_parse_url( home_url() );\n\n\t\t\/\/ Build a varniship.\n\t\t$varniship = get_option( 'vhp_varnish_ip' );\n\t\tif ( defined( 'VHP_VARNISH_IP' ) && false !== VHP_VARNISH_IP ) {\n\t\t\t$varniship = VHP_VARNISH_IP;\n\t\t}\n\n\t\t\/\/ If we made varniship, let it sail.\n\t\t$purgeme = ( isset( $varniship ) && null !== $varniship ) ? $varniship : $parsed_url['host'];\n\t\twp_remote_request(\n\t\t\t$parsed_url['scheme'] . ':\/\/' . $purgeme,\n\t\t\t[\n\t\t\t\t'method'   => 'PURGE',\n\t\t\t\t'blocking' => false,\n\t\t\t\t'headers'  => [\n\t\t\t\t\t'host'           => $parsed_url['host'],\n\t\t\t\t\t'X-Purge-Method' => 'default',\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Check if current environment is a localhost.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_localhost() {\n\t\t$whitelist = [\n\t\t\t'127.0.0.1', \/\/ IPv4 address.\n\t\t\t'::1', \/\/ IPv6 address.\n\t\t];\n\n\t\treturn in_array( self::get_remote_addr(), $whitelist, true );\n\t}\n\n\t\/**\n\t * Get IP address from which the user is viewing the current page.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_remote_addr() {\n\t\t$ip = filter_input( INPUT_SERVER, 'REMOTE_ADDR', FILTER_VALIDATE_IP );\n\n\t\t\/\/ INPUT_SERVER is not available on some hosts, let's try INPUT_ENV.\n\t\tif ( ! $ip ) {\n\t\t\t$ip = filter_input( INPUT_ENV, 'REMOTE_ADDR', FILTER_VALIDATE_IP );\n\t\t}\n\n\t\t\/\/ If we still don't have it, try to get it from the $_SERVER global.\n\t\tif ( ! $ip && isset( $_SERVER['REMOTE_ADDR'] ) ) {\n\t\t\t$ip = filter_var( $_SERVER['REMOTE_ADDR'], FILTER_VALIDATE_IP );\n\t\t}\n\n\t\treturn $ip ? $ip : '';\n\t}\n\n\t\/**\n\t * Get date using date_i18n() or date().\n\t *\n\t * @param string      $format Format to display the date.\n\t * @param int|boolean $timestamp_with_offset A sum of Unix timestamp and timezone offset in seconds.\n\t * @param boolean     $gmt Whether to use GMT timezone. Only applies if timestamp is not provided.\n\t * @param boolean     $mode Whether to use date() or date_i18n().\n\t * @return mixin\n\t *\/\n\tpublic static function get_date( $format, $timestamp_with_offset = false, $gmt = false, $mode = false ) {\n\t\tif ( true === $mode ) {\n\t\t\treturn date( $format, $timestamp_with_offset ); \/\/ phpcs:ignore\n\t\t}\n\t\treturn date_i18n( $format, $timestamp_with_offset, $gmt );\n\t}\n\n\t\/**\n\t * Check for valid image url.\n\t *\n\t * @param string $image_url The image url.\n\t * @return boolean\n\t *\/\n\tpublic static function is_image_url( $image_url ) {\n\t\treturn filter_var( $image_url, FILTER_VALIDATE_URL ) && preg_match( '\/\\.(jpg|jpeg|png|gif|webp)$\/i', $image_url );\n\t}\n\n\t\/**\n\t * Check if plugin auto update is disabled.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_plugin_update_disabled() {\n\t\treturn ! apply_filters_ref_array( 'auto_update_plugin', [ true, (object) [] ] )\n\t\t\t|| apply_filters_ref_array( 'automatic_updater_disabled', [ false ] )\n\t\t\t|| ( defined( 'DISALLOW_FILE_MODS' ) && DISALLOW_FILE_MODS )\n\t\t\t|| ( defined( 'AUTOMATIC_UPDATER_DISABLED' ) && AUTOMATIC_UPDATER_DISABLED );\n\t}\n\n\t\/**\n\t * Enable big selects.\n\t *\/\n\tpublic static function enable_big_selects_for_queries() {\n\t\tstatic $rank_math_enable_big_select;\n\n\t\tif ( $rank_math_enable_big_select || ! apply_filters( 'rank_math\/enable_big_selects', true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$rank_math_enable_big_select = DB_Helper::query( 'SET SESSION SQL_BIG_SELECTS=1' );\n\t}\n\n\t\/**\n\t * Used for Backward compatibility to prevent site from showing undefined method error. (PRO  v3.0.49-beta)\n\t *\n\t * @param string $name     Method name.\n\t * @param array  $argument Parameters passed to the function.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function __callStatic( $name, $argument ) {\n\t\tif ( 'extract_attributes' === $name ) {\n\t\t\treturn HTML::extract_attributes( current( $argument ) );\n\t\t}\n\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-tracking.php","ext":"php","size":8537,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Code related to the Mixpanel Tracking.\n *\n * @since      1.0.x\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndeclare(strict_types=1);\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Editor;\nuse RankMath\\Admin\\Admin_Helper;\nuse WPMedia\\Mixpanel\\Optin;\nuse WPMedia\\Mixpanel\\TrackingPlugin;\n\n\/**\n * Tracking class.\n *\/\nclass Tracking {\n\tuse Hooker;\n\n\t\/**\n\t * Opt-in instance.\n\t *\n\t * @var Optin\n\t *\/\n\tprivate $optin;\n\n\t\/**\n\t * Mixpanel instance.\n\t *\n\t * @var TrackingPlugin\n\t *\/\n\tprivate $mixpanel;\n\n\t\/**\n\t * User email for identification.\n\t *\n\t * @var string\n\t *\/\n\tprivate $user_email = '';\n\n\t\/**\n\t * User language.\n\t *\n\t * @var string\n\t *\/\n\tprivate $user_language = '';\n\n\t\/**\n\t * Plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprivate $plugin = '';\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->plugin   = defined( 'RANK_MATH_PRO_VERSION' ) ? 'Rank Math Pro ' . RANK_MATH_PRO_VERSION : 'Rank Math Free ' . rank_math()->version;\n\t\t$this->optin    = new Optin( 'rank_math', 'manage_options' );\n\t\t$this->mixpanel = new TrackingPlugin( '517e881edc2636e99a2ecf013d8134d3', $this->plugin, 'RankMath', 'RankMath' );\n\n\t\t$this->action( 'init', 'hooks' );\n\t}\n\n\t\/**\n\t * Initialize the tracking class hooks.\n\t *\/\n\tpublic function hooks(): void {\n\t\t$this->init_user_data();\n\t\t$this->action( 'rank_math_mixpanel_optin_changed', 'track_optin_change' );\n\t\t$this->action( 'rank_math\/module_changed', 'track_module_option_change', 10, 2 );\n\t\t$this->action( 'rank_math\/setup_wizard\/enable_tracking', 'enable_usage_tracking' );\n\t\t$this->action( 'rank_math\/setup_wizard\/step_viewed', 'track_setup_wizard_step_view' );\n\t\t$this->action( 'rank_math\/admin\/enqueue_scripts', 'enqueue_mixpanel' );\n\t\t$this->action( 'admin_init', 'track_admin_page_view' );\n\t\t$this->action( 'rank_math\/admin\/options\/general_data', 'set_usage_tracking_option', 99 );\n\t\t$this->action( 'rank_math\/settings\/before_save', 'update_mixpanel_optin', 10, 2 );\n\t\t$this->filter( 'rank_math\/settings\/saved_data', 'add_mixpanel_data', 10, 2 );\n\t\t$this->action( 'cmb2_save_options-page_fields_rank-math-options-general_options', 'update_mixpanel_optin_cmb2' );\n\t}\n\n\t\/**\n\t * Track the opt-in status change.\n\t *\n\t * @param bool $status The new opt-in status.\n\t *\/\n\tpublic function track_optin_change( $status ): void {\n\t\t$this->mixpanel->identify( $this->user_email );\n\t\t$this->mixpanel->track_optin( $status );\n\t}\n\n\t\/**\n\t * Track module option changes.\n\t *\n\t * @param string $module_id The module ID.\n\t * @param string $state     The new state (on\/off).\n\t *\/\n\tpublic function track_module_option_change( $module_id, $state ): void {\n\t\tif ( ! $this->optin->is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$enable_module = $state === 'on';\n\t\t$properties    = [\n\t\t\t'context'        => 'wp_plugin',\n\t\t\t'option_name'    => 'module ' . $module_id,\n\t\t\t'previous_value' => ! $enable_module ? 1 : 0,\n\t\t\t'new_value'      => $enable_module ? 1 : 0,\n\t\t\t'language'       => $this->user_language,\n\t\t];\n\n\t\t$this->mixpanel->identify( $this->user_email );\n\t\t$this->mixpanel->track( 'Option Changed', $properties );\n\t}\n\n\t\/**\n\t * Enable or disable usage tracking.\n\t *\n\t * @param bool $enable True to enable, false to disable.\n\t *\/\n\tpublic function enable_usage_tracking( $enable ): void {\n\t\tif ( $enable ) {\n\t\t\t$this->optin->enable();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->optin->disable();\n\t}\n\n\t\/**\n\t * Track setup wizard step views.\n\t *\/\n\tpublic function track_setup_wizard_step_view() {\n\t\tif ( ! $this->optin->is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Get the actual admin page URL from the request referer.\n\t\t$referer     = wp_get_referer();\n\t\t$current_url = $referer ? $referer : Helper::get_current_page_url();\n\t\t$path        = wp_parse_url( $current_url, PHP_URL_PATH ) . '?' . wp_parse_url( $current_url, PHP_URL_QUERY );\n\n\t\t\/\/ Parse the referer URL to get the current step being viewed.\n\t\t$url_parts = wp_parse_url( $referer );\n\t\tparse_str( $url_parts['query'] ?? '', $query_params );\n\t\t$current_step_being_viewed = $query_params['step'] ?? 'compatibility';\n\n\t\t\/\/ Use static variable to prevent duplicate tracking in the same request.\n\t\tstatic $tracked_steps = [];\n\t\tif ( in_array( $current_step_being_viewed, $tracked_steps, true ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$tracked_steps[] = $current_step_being_viewed;\n\n\t\t$properties = [\n\t\t\t'current_url' => $current_url,\n\t\t\t'path'        => $path,\n\t\t\t'context'     => 'wp_plugin',\n\t\t\t'language'    => $this->user_language,\n\t\t];\n\n\t\t$this->mixpanel->identify( $this->user_email );\n\t\t$this->mixpanel->track( 'Page Viewed', $properties );\n\t}\n\n\t\/**\n\t * Enqueue Mixpanel script on Block Editor pages.\n\t *\/\n\tpublic function enqueue_mixpanel(): void {\n\t\tif ( ! $this->optin->is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::is_block_editor() || ! Editor::can_add_editor() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->mixpanel->add_script();\n\t\tHelper::add_json(\n\t\t\t'tracking',\n\t\t\t[\n\t\t\t\t'plugin'   => $this->plugin,\n\t\t\t\t'path'     => isset( $_SERVER['REQUEST_URI'] ) ? esc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) ) : '',\n\t\t\t\t'email'    => $this->user_email,\n\t\t\t\t'language' => $this->user_language,\n\t\t\t],\n\t\t);\n\t}\n\n\t\/**\n\t * Track admin page views.\n\t *\/\n\tpublic function track_admin_page_view() {\n\t\tif ( ! $this->optin->is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Only track Rank Math admin\/configuration pages.\n\t\tif ( ! Str::starts_with( Param::get( 'page' ), 'rank-math' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check if we've already tracked this user in the last 7 days.\n\t\t$transient_key = 'rank_math_admin_tracking_' . md5( $this->user_email );\n\t\tif ( get_transient( $transient_key ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Set transient for 7 days to prevent duplicate tracking.\n\t\tset_transient( $transient_key, true, WEEK_IN_SECONDS );\n\n\t\t\/\/ Get the current admin page URL.\n\t\t$current_url = Helper::get_current_page_url();\n\t\t$path        = wp_parse_url( $current_url, PHP_URL_PATH ) . '?' . wp_parse_url( $current_url, PHP_URL_QUERY );\n\n\t\t$properties = [\n\t\t\t'current_url' => $current_url,\n\t\t\t'path'        => $path,\n\t\t\t'context'     => 'wp_plugin',\n\t\t\t'language'    => $this->user_language,\n\t\t];\n\n\t\t$this->mixpanel->identify( $this->user_email );\n\t\t$this->mixpanel->track( 'Page Viewed', $properties );\n\t}\n\n\t\/**\n\t * Add usage_tracking option to the general settings.\n\t *\n\t * @param array $json Localized data.\n\t *\/\n\tpublic function set_usage_tracking_option( $json ) {\n\t\t\/\/ Early bail if the current page is not general settings.\n\t\tif ( ! isset( $json['optionPage'] ) || $json['optionPage'] !== 'general' || ! isset( $json['data'] ) ) {\n\t\t\treturn $json;\n\t\t}\n\n\t\t$json['canAddUsageTracking']    = current_user_can( 'manage_options' );\n\t\t$json['data']['usage_tracking'] = $this->optin->is_enabled();\n\n\t\treturn $json;\n\t}\n\n\t\/**\n\t * Update opt-in value.\n\t *\n\t * @param string $type     Settings type.\n\t * @param array  $settings Settings data.\n\t *\/\n\tpublic function update_mixpanel_optin( $type, $settings ) {\n\t\tif ( $type !== 'general' || ! isset( $settings['usage_tracking'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! empty( $settings['usage_tracking'] ) ) {\n\t\t\t$this->optin->enable();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->optin->disable();\n\t}\n\n\t\/**\n\t * Add usage tracking data to the saved settings.\n\t *\n\t * @param array  $data Settings data.\n\t * @param string $type Settings type.\n\t * @return array\n\t *\/\n\tpublic function add_mixpanel_data( $data, $type ) {\n\t\tif ( $type !== 'general' ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$data['usage_tracking'] = $this->optin->is_enabled();\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Update Mixpanel optin option when general settings are saved. Used\n\t *\/\n\tpublic function update_mixpanel_optin_cmb2() {\n\t\t\/\/ Get the value from the form submission.\n\t\t$usage_tracking = isset( $_POST['usage_tracking'] ) ? sanitize_text_field( wp_unslash( $_POST['usage_tracking'] ) ) : 'off';\n\t\tif ( $usage_tracking === 'on' ) {\n\t\t\t$this->optin->enable();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->optin->disable();\n\t}\n\n\t\/**\n\t * Initialize user data.\n\t *\/\n\tprivate function init_user_data() {\n\t\tif ( ! $this->user_email ) {\n\t\t\t$this->user_email = $this->get_user_email();\n\t\t}\n\n\t\tif ( ! $this->user_language ) {\n\t\t\t$this->user_language = get_user_locale();\n\t\t}\n\t}\n\n\t\/**\n\t * Get user email for identification.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_user_email(): string {\n\t\t$account = Admin_Helper::get_registration_data();\n\t\tif ( ! empty( $account['email'] ) ) {\n\t\t\treturn $account['email'];\n\t\t}\n\n\t\t$user = wp_get_current_user();\n\t\treturn isset( $user->user_email ) ? (string) $user->user_email : '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-rewrite.php","ext":"php","size":9794,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * This class handles the category and author rewrites.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Sitepress;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Rewrite class.\n *\/\nclass Rewrite {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\tif ( Helper::get_settings( 'general.strip_category_base' ) ) {\n\t\t\t$this->filter( 'query_vars', 'query_vars' );\n\t\t\t$this->filter( 'request', 'request' );\n\t\t\t$this->filter( 'category_rewrite_rules', 'category_rewrite_rules' );\n\t\t\t$this->filter( 'term_link', 'no_category_base', 10, 3 );\n\n\t\t\tadd_action( 'created_category', 'RankMath\\\\Helper::schedule_flush_rewrite' );\n\t\t\tadd_action( 'delete_category', 'RankMath\\\\Helper::schedule_flush_rewrite' );\n\t\t\tadd_action( 'edited_category', 'RankMath\\\\Helper::schedule_flush_rewrite' );\n\t\t}\n\n\t\tif ( ! Helper::get_settings( 'titles.disable_author_archives' ) ) {\n\t\t\tif ( ! empty( Helper::get_settings( 'titles.url_author_base' ) ) ) {\n\t\t\t\tadd_action( 'init', 'RankMath\\\\Rewrite::change_author_base', 4 );\n\t\t\t}\n\n\t\t\t$this->filter( 'author_link', 'author_link', 10, 3 );\n\t\t\t$this->filter( 'request', 'author_request' );\n\t\t}\n\t}\n\n\t\/**\n\t * Change the URL to the author's page.\n\t *\n\t * @param  string $link            The URL to the author's page.\n\t * @param  int    $author_id       The author's ID.\n\t * @param  string $author_nicename The author's nice name.\n\t * @return string\n\t *\/\n\tpublic function author_link( $link, $author_id, $author_nicename ) {\n\t\t$custom_url = get_user_meta( $author_id, 'rank_math_permalink', true );\n\t\tif ( $custom_url ) {\n\t\t\t$link = str_replace( $author_nicename, $custom_url, $link );\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t\/**\n\t * Redirect the old user permalink to the new one.\n\t *\n\t * @param  array $query_vars Query vars to check for author_name var.\n\t *\n\t * @return array\n\t *\/\n\tpublic function author_request( $query_vars ) {\n\t\tglobal $wpdb;\n\n\t\tif ( ! array_key_exists( 'author_name', $query_vars ) ) {\n\t\t\treturn $query_vars;\n\t\t}\n\n\t\t$author_id = DB_Helper::get_var( $wpdb->prepare( \"SELECT user_id FROM {$wpdb->usermeta} WHERE meta_key='rank_math_permalink' AND meta_value = %s\", $query_vars['author_name'] ) );\n\t\tif ( $author_id ) {\n\t\t\t$query_vars['author'] = $author_id;\n\t\t\tunset( $query_vars['author_name'] );\n\t\t}\n\n\t\treturn $query_vars;\n\t}\n\n\t\/**\n\t * Remove the rewrite rules.\n\t *\/\n\tpublic function remove_rules() {\n\t\t$this->remove_filter( 'query_vars', 'query_vars' );\n\t\t$this->remove_filter( 'request', 'request' );\n\t\t$this->remove_filter( 'category_rewrite_rules', 'category_rewrite_rules' );\n\t\t$this->remove_filter( 'term_link', 'no_category_base', 10 );\n\n\t\tremove_action( 'init', 'RankMath\\\\Rewrite::change_author_base', 4 );\n\t}\n\n\t\/**\n\t * Change the base for author permalinks.\n\t *\/\n\tpublic static function change_author_base() {\n\t\tglobal $wp_rewrite;\n\n\t\t\/**\n\t\t * Filter: Change the author base.\n\t\t *\n\t\t * @param string $base The author base.\n\t\t *\/\n\t\t$base = apply_filters( 'rank_math\/author_base', sanitize_title_with_dashes( Helper::get_settings( 'titles.url_author_base' ), '', 'save' ) );\n\t\tif ( empty( $base ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$wp_rewrite->author_base      = $base;\n\t\t$wp_rewrite->author_structure = '\/' . $wp_rewrite->author_base . '\/%author%';\n\t}\n\n\t\/**\n\t * Add the redirect var to the query vars if the \"strip category bases\" option is enabled.\n\t *\n\t * @param  array $query_vars Query vars to filter.\n\t *\n\t * @return array\n\t *\/\n\tpublic function query_vars( $query_vars ) {\n\t\t$query_vars[] = 'rank_math_category_redirect';\n\n\t\treturn $query_vars;\n\t}\n\n\t\/**\n\t * Redirect the original category URL to the new one.\n\t *\n\t * @param  array $query_vars Query vars to check for redirect var.\n\t * @return array\n\t *\/\n\tpublic function request( $query_vars ) {\n\t\tif ( isset( $query_vars['rank_math_category_redirect'] ) ) {\n\t\t\t$catlink = trailingslashit( get_option( 'home' ) ) . user_trailingslashit( $query_vars['rank_math_category_redirect'], 'category' );\n\t\t\tHelper::redirect( $catlink, 301 );\n\t\t\texit;\n\t\t}\n\n\t\treturn $query_vars;\n\t}\n\n\t\/**\n\t * This function was taken and slightly adapted from WP No Category Base plugin by Saurabh Gupta.\n\t *\n\t * @return array\n\t *\/\n\tpublic function category_rewrite_rules() {\n\t\tglobal $wp_rewrite;\n\n\t\t$category_rewrite = $this->get_category_rules();\n\n\t\t$old_base                            = str_replace( '%category%', '(.+)', $wp_rewrite->get_category_permastruct() );\n\t\t$old_base                            = trim( $old_base, '\/' );\n\t\t$category_rewrite[ $old_base . '$' ] = 'index.php?rank_math_category_redirect=$matches[1]';\n\n\t\treturn $category_rewrite;\n\t}\n\n\t\/**\n\t * Remove the category base from the category link.\n\t *\n\t * @param  string $link     Term link.\n\t * @param  object $term     Current Term Object.\n\t * @param  string $taxonomy Current Taxonomy.\n\t * @return string\n\t *\/\n\tpublic function no_category_base( $link, $term, $taxonomy ) {\n\t\tif ( 'category' !== $taxonomy ) {\n\t\t\treturn $link;\n\t\t}\n\n\t\t$category_base = get_option( 'category_base' );\n\t\tif ( empty( $category_base ) ) {\n\t\t\tglobal $wp_rewrite;\n\t\t\t$category_base = trim( str_replace( '%category%', '', $wp_rewrite->get_category_permastruct() ), '\/' );\n\t\t}\n\n\t\t\/\/ Remove initial slash, if there is one (we remove the trailing slash in the regex replacement and don't want to end up short a slash).\n\t\tif ( '\/' === substr( $category_base, 0, 1 ) ) {\n\t\t\t$category_base = substr( $category_base, 1 );\n\t\t}\n\n\t\t$category_base .= '\/';\n\n\t\treturn preg_replace( '`' . preg_quote( $category_base, '`' ) . '`u', '', $link, 1 );\n\t}\n\t\/**\n\t * Get category re-write rules.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_category_rules() {\n\t\tglobal $wp_rewrite;\n\n\t\t$category_rewrite = [];\n\t\t$categories       = $this->get_categories();\n\t\t$blog_prefix      = $this->get_blog_prefix();\n\n\t\tif ( empty( $categories ) ) {\n\t\t\treturn $category_rewrite;\n\t\t}\n\n\t\tforeach ( $categories as $category ) {\n\t\t\t$category_nicename = $this->get_category_parents( $category ) . $category->slug;\n\t\t\t$category_rewrite  = $this->add_category_rewrites( $category_rewrite, $category_nicename, $blog_prefix, $wp_rewrite->pagination_base );\n\n\t\t\t\/\/ Add rules for upper case encoded nicename.\n\t\t\t$category_nicename_filtered = $this->convert_encoded_to_upper( $category_nicename );\n\n\t\t\tif ( $category_nicename !== $category_nicename_filtered ) {\n\t\t\t\t$category_rewrite = $this->add_category_rewrites( $category_rewrite, $category_nicename_filtered, $blog_prefix, $wp_rewrite->pagination_base );\n\t\t\t}\n\t\t}\n\n\t\treturn $category_rewrite;\n\t}\n\n\t\/**\n\t * Adds required category rewrites rules.\n\t *\n\t * @param array  $category_rewrite   The current set of rules.\n\t * @param string $category_nicename   Category nicename.\n\t * @param string $blog_prefix     Multisite blog prefix.\n\t * @param string $pagination_base WP_Query pagination base.\n\t *\n\t * @return array The added set of rules.\n\t *\/\n\tprivate function add_category_rewrites( $category_rewrite, $category_nicename, $blog_prefix, $pagination_base ) {\n\n\t\t$category_rewrite[ $blog_prefix . '(' . $category_nicename . ')\/(?:feed\/)?(feed|rdf|rss|rss2|atom)\/?$' ]    = 'index.php?category_name=$matches[1]&feed=$matches[2]';\n\t\t$category_rewrite[ $blog_prefix . '(' . $category_nicename . ')\/' . $pagination_base . '\/?([0-9]{1,})\/?$' ] = 'index.php?category_name=$matches[1]&paged=$matches[2]';\n\t\t$category_rewrite[ $blog_prefix . '(' . $category_nicename . ')\/?$' ]                                       = 'index.php?category_name=$matches[1]';\n\n\t\treturn $category_rewrite;\n\t}\n\n\t\/**\n\t * Walks through category nicename and convert encoded parts\n\t * into uppercase using $this->encode_to_upper().\n\t *\n\t * @param string $name The encoded category URI string.\n\t *\n\t * @return string The convered URI string.\n\t *\/\n\tprivate function convert_encoded_to_upper( $name ) {\n\t\t\/\/ Checks if name has any encoding in it.\n\t\tif ( strpos( $name, '%' ) === false ) {\n\t\t\treturn $name;\n\t\t}\n\n\t\t$names = explode( '\/', $name );\n\t\t$names = array_map( [ $this, 'encode_to_upper' ], $names );\n\n\t\treturn implode( '\/', $names );\n\t}\n\n\t\/**\n\t * Converts the encoded URI string to uppercase.\n\t *\n\t * @param string $encoded The encoded string.\n\t *\n\t * @return string The uppercased string.\n\t *\/\n\tprivate function encode_to_upper( $encoded ) {\n\t\tif ( strpos( $encoded, '%' ) === false ) {\n\t\t\treturn $encoded;\n\t\t}\n\n\t\treturn strtoupper( $encoded );\n\t}\n\n\t\/**\n\t * Retrieve category parents with separator.\n\t *\n\t * @param WP_Term $category Category instance.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_category_parents( $category ) {\n\t\tif ( $category->parent === $category->cat_ID || absint( $category->parent ) < 1 ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$parents = get_category_parents( $category->parent, false, '\/', true );\n\t\treturn is_wp_error( $parents ) ? '' : $parents;\n\t}\n\n\t\/**\n\t * Get categories with WPML compatibility.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_categories() {\n\t\t\/**\n\t\t * Remove WPML filters while getting terms, to get all languages\n\t\t *\/\n\t\tSitepress::get()->remove_term_filters();\n\n\t\t$categories = get_categories( [ 'hide_empty' => false ] );\n\n\t\t\/**\n\t\t * Register WPML filters back\n\t\t *\/\n\t\tSitepress::get()->restore_term_filters();\n\n\t\treturn $categories;\n\t}\n\n\t\/**\n\t * Get the blog prefix.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_blog_prefix() {\n\t\t$permalink_structure = get_option( 'permalink_structure' );\n\t\tif ( is_multisite() && ! is_subdomain_install() && is_main_site() && 0 === strpos( $permalink_structure, '\/blog\/' ) ) {\n\t\t\treturn 'blog\/';\n\t\t}\n\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-head.php","ext":"php","size":13099,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The <head> tag.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Post;\nuse RankMath\\Helper;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Security;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Head class.\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\nclass Head {\n\n\tuse Hooker;\n\n\t\/**\n\t * Keeps the buffer level.\n\t *\n\t * @since 1.0.252\n\t *\n\t * @var int\n\t *\/\n\tprivate $buffer_level = 0;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$this->action( 'wp_head', 'head', 1 );\n\n\t\tif ( Helper::is_amp_active() ) {\n\t\t\t$this->action( 'amphtml_template_head', 'head', 1 );\n\t\t\t$this->action( 'weeblramp_print_meta_data', 'head', 1 );\n\t\t\t$this->action( 'better-amp\/template\/head', 'head', 99 );\n\t\t\t$this->action( 'amp_post_template_head', 'head', 9 );\n\t\t\tremove_action( 'better-amp\/template\/head', 'better_amp_print_rel_canonical' );\n\t\t}\n\n\t\t$this->action( 'wp_head', 'front_page_init', 0 );\n\t\t$this->filter( 'language_attributes', 'search_results_schema' );\n\n\t\t$this->action( 'rank_math\/head', 'metadesc', 6 );\n\t\t$this->action( 'rank_math\/head', 'robots', 10 );\n\t\t$this->action( 'rank_math\/head', 'canonical', 20 );\n\t\t$this->action( 'rank_math\/head', 'adjacent_rel_links', 21 );\n\t\t$this->action( 'rank_math\/head', 'metakeywords', 22 );\n\n\t\t$this->filter( 'wp_title', 'title', 15 );\n\t\t$this->filter( 'thematic_doctitle', 'title', 15 );\n\t\t$this->filter( 'pre_get_document_title', 'title', 15 );\n\n\t\t\/\/ Code to move title inside the Rank Math's meta.\n\t\tremove_action( 'wp_head', '_wp_render_title_tag', 1 );\n\t\tadd_action( 'rank_math\/head', '_wp_render_title_tag', 1 );\n\n\t\t\/\/ Force Rewrite title.\n\t\tif ( Helper::get_settings( 'titles.rewrite_title' ) && ! current_theme_supports( 'title-tag' ) ) {\n\t\t\t$this->action( 'get_header', 'start_ob', 0 );\n\t\t\t$this->action( 'wp_head', 'rewrite_title', 9999 );\n\t\t}\n\n\t\t\/\/ Remove core robots data.\n\t\tif ( ! is_embed() ) {\n\t\t\tremove_all_filters( 'wp_robots' );\n\t\t}\n\t}\n\n\t\/**\n\t * Initialize front page related stuff.\n\t *\/\n\tpublic function front_page_init() {\n\t\tif ( ! is_front_page() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'rank_math\/head', 'webmaster_tools_authentication', 90 );\n\t}\n\n\t\/**\n\t * Output authentication codes for all the Webmaster Tools.\n\t *\/\n\tpublic function webmaster_tools_authentication() {\n\t\t$tools = [\n\t\t\t'google_verify'    => 'google-site-verification',\n\t\t\t'bing_verify'      => 'msvalidate.01',\n\t\t\t'baidu_verify'     => 'baidu-site-verification',\n\t\t\t'yandex_verify'    => 'yandex-verification',\n\t\t\t'pinterest_verify' => 'p:domain_verify',\n\t\t\t'norton_verify'    => 'norton-safeweb-site-verification',\n\t\t];\n\n\t\tforeach ( $tools as $id => $name ) {\n\t\t\t$content = trim( Helper::get_settings( \"general.{$id}\" ) );\n\t\t\t$content = $this->do_filter( 'webmaster\/' . $id, $content );\n\t\t\tif ( empty( $content ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tprintf( '<meta name=\"%1$s\" content=\"%2$s\" \/>' . \"\\n\", esc_attr( $name ), esc_attr( $content ) );\n\t\t}\n\n\t\t$custom_webmaster_tags = Helper::get_settings( 'general.custom_webmaster_tags' );\n\t\tif ( empty( $custom_webmaster_tags ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$custom_webmaster_tags = Arr::from_string( $custom_webmaster_tags );\n\t\tforeach ( $custom_webmaster_tags as $custom_webmaster_tag ) {\n\t\t\t$custom_webmaster_tag = trim( $custom_webmaster_tag );\n\t\t\tif ( empty( $custom_webmaster_tag ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\techo wp_kses(\n\t\t\t\t$custom_webmaster_tag,\n\t\t\t\t[\n\t\t\t\t\t'meta' => [\n\t\t\t\t\t\t'name'    => [],\n\t\t\t\t\t\t'content' => [],\n\t\t\t\t\t],\n\t\t\t\t]\n\t\t\t) . \"\\n\";\n\t\t}\n\t}\n\n\t\/**\n\t * Add Search Result Page schema as language attributes for the <html> tag.\n\t *\n\t * @param  string $output A space-separated list of language attributes.\n\t * @return string\n\t *\/\n\tpublic function search_results_schema( $output ) {\n\t\tif ( ! is_search() ) {\n\t\t\treturn $output;\n\t\t}\n\n\t\treturn preg_replace( '\/itemtype=\"([^\"]+)\"\/', 'itemtype=\"https:\/\/schema.org\/SearchResultsPage', $output );\n\t}\n\n\t\/**\n\t * Main function attached to the wp_head hook.\n\t *\/\n\tpublic function head() {\n\t\tglobal $wp_query;\n\n\t\t$old_wp_query = null;\n\t\tif ( ! $wp_query->is_main_query() ) {\n\t\t\t$old_wp_query = $wp_query;\n\t\t\twp_reset_query(); \/\/phpcs:ignore -- This function is needed here to reset the query before running the head code.\n\t\t}\n\n\t\t$this->credits();\n\n\t\t\/\/ Remove core actions, now handled by Rank Math.\n\t\tremove_action( 'wp_head', 'rel_canonical' );\n\t\tremove_action( 'wp_head', 'index_rel_link' );\n\t\tremove_action( 'wp_head', 'start_post_rel_link' );\n\t\tremove_action( 'wp_head', 'adjacent_posts_rel_link_wp_head' );\n\t\tremove_action( 'wp_head', 'noindex', 1 );\n\n\t\tif ( Helper::is_amp_active() ) {\n\t\t\tremove_action( 'amp_post_template_head', 'amp_post_template_add_title' );\n\t\t\tremove_action( 'amp_post_template_head', 'amp_post_template_add_canonical' );\n\t\t\tremove_action( 'amp_post_template_head', 'amp_print_schemaorg_metadata' );\n\t\t}\n\n\t\t\/**\n\t\t * Add extra output in the head tag.\n\t\t *\/\n\t\t$this->do_action( 'head' );\n\n\t\t$this->credits( true );\n\n\t\tif ( ! empty( $old_wp_query ) ) {\n\t\t\t$GLOBALS['wp_query'] = $old_wp_query;\n\t\t\tunset( $old_wp_query );\n\t\t}\n\t}\n\n\t\/**\n\t * Main title function.\n\t *\n\t * @param  string $title Already set title or empty string.\n\t * @return string\n\t *\/\n\tpublic function title( $title ) {\n\t\tif ( is_feed() ) {\n\t\t\treturn $title;\n\t\t}\n\n\t\t$generated = Paper::get()->get_title();\n\t\treturn Str::is_non_empty( $generated ) ? $generated : $title;\n\t}\n\n\t\/**\n\t * Output the meta description tag with the generated description.\n\t *\/\n\tpublic function metadesc() {\n\t\t$generated = Paper::get()->get_description();\n\n\t\tif ( Str::is_non_empty( $generated ) ) {\n\t\t\techo '<meta name=\"description\" content=\"' . esc_attr( $generated ) . '\"\/>', \"\\n\";\n\t\t}\n\t}\n\n\t\/**\n\t * Output the meta robots tag.\n\t *\/\n\tpublic function robots() {\n\t\t$robots    = Paper::get()->get_robots();\n\t\t$robotsstr = join( ', ', $robots );\n\t\tif ( Str::is_non_empty( $robotsstr ) ) {\n\t\t\techo '<meta name=\"robots\" content=\"', esc_attr( $robotsstr ), '\"\/>', \"\\n\";\n\t\t}\n\n\t\t\/\/ If a page is noindex, let's remove the canonical URL.\n\t\t\/\/ https:\/\/www.seroundtable.com\/google-noindex-rel-canonical-confusion-26079.html .\n\t\tif ( isset( $robots['index'] ) && 'noindex' === $robots['index'] ) {\n\t\t\t$this->remove_action( 'rank_math\/head', 'canonical', 20 );\n\t\t\t$this->remove_action( 'rank_math\/head', 'adjacent_rel_links', 21 );\n\t\t}\n\t}\n\n\t\/**\n\t * Output the canonical URL tag.\n\t *\/\n\tpublic function canonical() {\n\t\t$canonical = Paper::get()->get_canonical();\n\t\tif ( Str::is_non_empty( $canonical ) ) {\n\t\t\techo '<link rel=\"canonical\" href=\"' . esc_url( $canonical, null, 'other' ) . '\" \/>' . \"\\n\";\n\t\t}\n\t}\n\n\t\/**\n\t * Add the rel 'prev' and 'next' links to archives or single posts.\n\t *\n\t * @link http:\/\/googlewebmastercentral.blogspot.com\/2011\/09\/pagination-with-relnext-and-relprev.html\n\t *\/\n\tpublic function adjacent_rel_links() {\n\t\t\/**\n\t\t * Enable rel \"next\" & \"prev\" tags on sites running Genesis.\n\t\t *\n\t\t * @param bool $unsigned Whether or not to show rel next \/ prev .\n\t\t *\/\n\t\tif ( is_home() && function_exists( 'genesis' ) && false === $this->do_filter( 'frontend\/genesis\/force_adjacent_rel_home', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Disable rel 'prev' and 'next' links.\n\t\t *\n\t\t * @param bool $disable Rel 'prev' and 'next' links should be disabled or not.\n\t\t *\/\n\t\tif ( true === $this->do_filter( 'frontend\/disable_adjacent_rel_links', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_singular() ) {\n\t\t\t$this->adjacent_rel_links_single();\n\t\t\treturn;\n\t\t}\n\t\t$this->adjacent_rel_links_archive();\n\t}\n\n\t\/**\n\t * Output the meta keywords value.\n\t *\/\n\tpublic function metakeywords() {\n\t\t\/**\n\t\t * Passing a truthy value to the filter will effectively short-circuit the\n\t\t * set keywords process.\n\t\t *\n\t\t * @param bool $return Short-circuit return value. Either false or true.\n\t\t *\/\n\t\tif ( ! $this->do_filter( 'frontend\/show_keywords', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$keywords = Paper::get()->get_keywords();\n\t\tif ( Str::is_non_empty( $keywords ) ) {\n\t\t\techo '<meta name=\"keywords\" content=\"', esc_attr( $keywords ), '\"\/>', \"\\n\";\n\t\t}\n\t}\n\n\t\/**\n\t * Output the rel next\/prev tags on a paginated single post.\n\t *\n\t * @return void\n\t *\/\n\tprivate function adjacent_rel_links_single() {\n\t\t$num_pages = 1;\n\n\t\t$queried_object = get_queried_object();\n\t\tif ( ! empty( $queried_object ) ) {\n\t\t\t$num_pages = substr_count( $queried_object->post_content, '<!--nextpage-->' ) + 1;\n\t\t}\n\n\t\tif ( 1 === $num_pages ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$page = max( 1, (int) get_query_var( 'page' ) );\n\t\t$url  = get_permalink( get_queried_object_id() );\n\n\t\tif ( $page > 1 ) {\n\t\t\t$this->adjacent_rel_link( 'prev', $url, $page - 1, 'page' );\n\t\t}\n\n\t\tif ( $page < $num_pages ) {\n\t\t\t$this->adjacent_rel_link( 'next', $url, $page + 1, 'page' );\n\t\t}\n\t}\n\n\t\/**\n\t * Output the rel next\/prev tags on archives.\n\t *\/\n\tprivate function adjacent_rel_links_archive() {\n\t\t$url = Paper::get()->get_canonical( true, true );\n\t\tif ( ! is_string( $url ) || '' === $url ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$paged = max( 1, (int) get_query_var( 'paged' ) );\n\t\tif ( 2 === $paged ) {\n\t\t\t$this->adjacent_rel_link( 'prev', $url, $paged - 1 );\n\t\t}\n\n\t\tif ( is_front_page() ) {\n\t\t\t$url = Router::get_base_url( '' );\n\t\t}\n\n\t\tif ( $paged > 2 ) {\n\t\t\t$this->adjacent_rel_link( 'prev', $url, $paged - 1 );\n\t\t}\n\n\t\tif ( $paged < $GLOBALS['wp_query']->max_num_pages ) {\n\t\t\t$this->adjacent_rel_link( 'next', $url, $paged + 1 );\n\t\t}\n\t}\n\n\t\/**\n\t * Build adjacent page link for archives.\n\t *\n\t * @param string $rel       Prev or next.\n\t * @param string $url       The current archive URL without page parameter.\n\t * @param string $page      The page number added to the $url in the link tag.\n\t * @param string $query_arg The pagination query argument to use for the $url.\n\t *\/\n\tprivate function adjacent_rel_link( $rel, $url, $page, $query_arg = 'paged' ) {\n\t\tglobal $wp_rewrite;\n\n\t\tif ( $page > 1 ) {\n\t\t\t$url = ! $wp_rewrite->using_permalinks() ? Security::add_query_arg_raw( $query_arg, $page, $url ) : user_trailingslashit( trailingslashit( $url ) . $this->get_pagination_base() . $page );\n\t\t}\n\n\t\t\/**\n\t\t * Change the link rel HTML output.\n\t\t *\n\t\t * @param string $link The `<link rel=\"\"` tag.\n\t\t *\/\n\t\t$link = $this->do_filter( \"frontend\/{$rel}_rel_link\", '<link rel=\"' . esc_attr( $rel ) . '\" href=\"' . esc_url( $url ) . \"\\\" \/>\\n\" );\n\t\tif ( Str::is_non_empty( $link ) ) {\n\t\t\t$allowed_tags = [\n\t\t\t\t'link' => [\n\t\t\t\t\t'href' => [],\n\t\t\t\t\t'rel'  => [],\n\t\t\t\t],\n\t\t\t];\n\t\t\techo wp_kses( $link, $allowed_tags );\n\t\t}\n\t}\n\n\t\/**\n\t * Get pagination base.\n\t *\n\t * @return string The pagination base.\n\t *\/\n\tprivate function get_pagination_base() {\n\t\tglobal $wp_rewrite;\n\n\t\treturn ( ! is_singular() || Post::is_home_static_page() ) ? trailingslashit( $wp_rewrite->pagination_base ) : '';\n\t}\n\n\t\/**\n\t * Credits.\n\t *\n\t * @param boolean $closing Is closing credits needed.\n\t *\/\n\tprivate function credits( $closing = false ) {\n\n\t\t\/**\n\t\t * Disable credit in the HTML source.\n\t\t *\n\t\t * @param bool $remove\n\t\t *\/\n\t\tif ( $this->do_filter( 'frontend\/remove_credit_notice', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( false === $closing ) {\n\t\t\tif ( ! Helper::is_whitelabel() && ! defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\t\techo \"\\n<!-- \" . esc_html__( 'Search Engine Optimization by Rank Math - https:\/\/rankmath.com\/', 'rank-math' ) . \" -->\\n\";\n\t\t\t} elseif ( defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\t\techo \"\\n<!-- \" . esc_html__( 'Search Engine Optimization by Rank Math PRO - https:\/\/rankmath.com\/', 'rank-math' ) . \" -->\\n\";\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::is_whitelabel() ) {\n\t\t\techo '<!-- \/' . esc_html__( 'Rank Math WordPress SEO plugin', 'rank-math' ) . \" -->\\n\\n\";\n\t\t}\n\t}\n\n\t\/**\n\t * Start the Output Buffer.\n\t *\n\t * @since 1.0.29\n\t *\/\n\tpublic function start_ob() {\n\t\tob_start();\n\t\t$this->buffer_level = ob_get_level();\n\t}\n\n\t\/**\n\t * Use output buffering to force rewrite the title tag.\n\t *\/\n\tpublic function rewrite_title() {\n\t\tif ( ob_get_level() !== $this->buffer_level ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $wp_query;\n\n\t\t\/\/ Check if we're in the main query.\n\t\t$old_wp_query = null;\n\t\tif ( ! $wp_query->is_main_query() ) {\n\t\t\t$old_wp_query = $wp_query;\n\t\t\twp_reset_query(); \/\/phpcs:ignore -- This function is needed here to reset the query before running the head code.\n\t\t}\n\n\t\t$content = ob_get_clean();\n\t\t$title   = Paper::get()->get_title();\n\t\tif ( empty( $title ) ) {\n\t\t\techo $content; \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- This is the output buffer, escaping is unnecessary.\n\t\t}\n\n\t\t\/\/ Find all title tags, remove them, and add the new one.\n\t\t$content = preg_replace( '\/<title.*?\\\/title>\/i', '', $content );\n\t\t$content = str_replace( '<head>', '<head>' . \"\\n\" . '<title>' . esc_html( $title ) . '<\/title>', $content );\n\t\tif ( ! empty( $old_wp_query ) ) {\n\t\t\t$GLOBALS['wp_query'] = $old_wp_query;\n\t\t}\n\n\t\techo $content; \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- This is the output buffer, escaping is unnecessary.\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-comments.php","ext":"php","size":3208,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The class handles the comments functionalities.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\HTML;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Security;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Comments class.\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\nclass Comments {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'wp_head', 'add_attributes', 99 );\n\t}\n\n\t\/**\n\t * Add UGC attribute and remove ?replytocom parameters.\n\t *\/\n\tpublic function add_attributes() {\n\t\t\/**\n\t\t * Enable or disable the feature that adds ugc attribute.\n\t\t *\n\t\t * @param bool $remove Whether to remove the parameters.\n\t\t *\/\n\t\tif ( $this->do_filter( 'frontend\/add_ugc_attribute', true ) ) {\n\t\t\t$this->filter( 'comment_text', 'add_ugc_attribute' );\n\t\t\t$this->filter( 'get_comment_author_link', 'add_ugc_attribute' );\n\t\t}\n\n\t\t\/**\n\t\t * Enable or disable the feature that removes the ?replytocom parameters.\n\t\t *\n\t\t * @param bool $remove Whether to remove the parameters.\n\t\t *\/\n\t\tif ( $this->do_filter( 'frontend\/remove_reply_to_com', true ) ) {\n\t\t\t$this->filter( 'comment_reply_link', 'remove_reply_to_com' );\n\t\t\t$this->action( 'template_redirect', 'replytocom_redirect', 1 );\n\t\t}\n\t}\n\n\t\/**\n\t * Replace the ?replytocom with #comment-[number] in a link.\n\t *\n\t * @param  string $link The comment link as a string.\n\t * @return string The new link.\n\t *\/\n\tpublic function remove_reply_to_com( $link ) {\n\t\treturn preg_replace( '`href=([\"\\'])(?:.*(?:\\?|&|&#038;)replytocom=(\\d+)#respond)`', 'href=$1#comment-$2', $link );\n\t}\n\n\t\/**\n\t * Redirect the ?replytocom URLs.\n\t *\n\t * @return bool True when redirect has been done.\n\t *\/\n\tpublic function replytocom_redirect() {\n\n\t\tif ( isset( $_GET['replytocom'] ) && is_singular() ) {\n\t\t\t$url          = get_permalink( $GLOBALS['post']->ID );\n\t\t\t$query_string = isset( $_SERVER['QUERY_STRING'] ) ? Security::remove_query_arg_raw( 'replytocom', sanitize_text_field( $_SERVER['QUERY_STRING'] ) ) : '';\n\t\t\tif ( ! empty( $query_string ) ) {\n\t\t\t\t$url .= '?' . $query_string;\n\t\t\t}\n\t\t\t$url .= '#comment-' . sanitize_text_field( $_GET['replytocom'] );\n\t\t\tHelper::redirect( $url, 301 );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Add 'ugc' attribute to comment.\n\t *\n\t * @param  string $text Comment or author link text to add ugc attribute.\n\t * @return string\n\t *\/\n\tpublic function add_ugc_attribute( $text ) {\n\t\tpreg_match_all( '\/<(a\\s[^>]+)>\/', $text, $matches );\n\t\tif ( empty( $matches ) || empty( $matches[0] ) ) {\n\t\t\treturn $text;\n\t\t}\n\n\t\tforeach ( $matches[0] as $link ) {\n\t\t\t$attrs        = HTML::extract_attributes( $link );\n\t\t\t$attrs['rel'] = empty( $attrs['rel'] ) ? 'ugc' : ( Str::contains( 'ugc', $attrs['rel'] ) ? $attrs['rel'] : $attrs['rel'] . ' ugc' );\n\n\t\t\t$new  = '<a' . HTML::attributes_to_string( $attrs ) . '>';\n\t\t\t$text = str_replace( $link, $new, $text );\n\t\t}\n\n\t\treturn $text;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-singular.php","ext":"php","size":6216,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Singular Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Post;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Singular class.\n *\/\nclass Singular implements IPaper {\n\n\t\/**\n\t * Post object.\n\t *\n\t * @var WP_Post\n\t *\/\n\tprivate $object;\n\n\t\/**\n\t * Retrieves the SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\treturn $this->get_post_title( $this->object );\n\t}\n\n\t\/**\n\t * Retrieves the SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\treturn $this->get_post_description( $this->object );\n\t}\n\n\t\/**\n\t * Retrieves the robots.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\treturn $this->get_post_robots( $this->object );\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\treturn $this->get_post_advanced_robots( $this->object );\n\t}\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\t$object_id          = Post::get_page_id();\n\t\t$canonical          = get_permalink( $object_id );\n\t\t$canonical_unpaged  = $canonical;\n\t\t$canonical_override = Post::get_meta( 'canonical_url', $object_id );\n\n\t\t\/**\n\t\t * Fix paginated pages canonical, but only if the page is truly paginated.\n\t\t *\n\t\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t\t * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t\t *\/\n\t\tif ( is_singular() && get_query_var( 'page' ) > 1 ) {\n\t\t\t$num_pages = ( substr_count( get_queried_object()->post_content, '<!--nextpage-->' ) + 1 );\n\t\t\tif ( $num_pages && get_query_var( 'page' ) <= $num_pages ) {\n\t\t\t\tglobal $wp_rewrite;\n\t\t\t\t$canonical = ! $wp_rewrite->using_permalinks() ? Security::add_query_arg_raw( 'page', get_query_var( 'page' ), $canonical ) :\n\t\t\t\t\tuser_trailingslashit( trailingslashit( $canonical ) . get_query_var( 'page' ) );\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\t'canonical'          => $canonical,\n\t\t\t'canonical_unpaged'  => $canonical,\n\t\t\t'canonical_override' => $canonical_override,\n\t\t];\n\t}\n\n\t\/**\n\t * Retrieves meta keywords.\n\t *\n\t * @return string The focus keywords.\n\t *\/\n\tpublic function keywords() {\n\t\treturn Post::get_meta( 'focus_keyword', $this->object->ID );\n\t}\n\n\t\/**\n\t * Set post object.\n\t *\n\t * @param WP_Post $post Current post object.\n\t *\/\n\tpublic function set_object( $post ) {\n\t\t$this->object = $post;\n\t}\n\n\t\/**\n\t * Get the SEO title set in the post metabox.\n\t *\n\t * @param object|null $post Post object to retrieve the title for.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_post_title( $post = null ) {\n\t\tif ( ! is_object( $post ) ) {\n\t\t\treturn Paper::get_from_options( '404_title', [], esc_html__( 'Page not found', 'rank-math' ) );\n\t\t}\n\n\t\t$title = Post::get_meta( 'title', $post->ID );\n\t\tif ( '' !== $title ) {\n\t\t\treturn $title;\n\t\t}\n\n\t\t$post_type = isset( $post->post_type ) ? $post->post_type : $post->query_var;\n\t\treturn Paper::get_from_options( \"pt_{$post_type}_title\", $post, '%title% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Retrieves the SEO description set in the post metabox.\n\t *\n\t * Retrieve in this order:\n\t *     1. Custom meta description set for the post in SERP field\n\t *     2. Excerpt\n\t *     3. Description template set in the Titles & Meta\n\t *     4. Paragraph with the focus keyword\n\t *     5. The First paragraph of the content\n\t *\n\t * @param object|null $post Object to retrieve the description from.\n\t *\n\t * @return string The SEO description for the specified object, or queried object if not supplied.\n\t *\/\n\tprotected function get_post_description( $post = null ) {\n\t\tif ( ! is_object( $post ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t\/\/ 1. Custom meta description set for the post in SERP field.\n\t\t$description = Post::get_meta( 'description', $post->ID );\n\t\tif ( '' !== $description ) {\n\t\t\treturn $description;\n\t\t}\n\n\t\t\/\/ 2. Excerpt\n\t\tif ( ! empty( $post->post_excerpt ) ) {\n\t\t\treturn $post->post_excerpt;\n\t\t}\n\n\t\t\/\/ 3. Description template set in the Titles & Meta.\n\t\t$post_type = isset( $post->post_type ) ? $post->post_type : $post->query_var;\n\n\t\treturn Str::truncate( Paper::get_from_options( \"pt_{$post_type}_description\", $post ), 160 );\n\t}\n\n\t\/**\n\t * Retrieves the robots set in the post metabox.\n\t *\n\t * @param object|null $post Object to retrieve the robots data from.\n\t *\n\t * @return string The robots for the specified object, or queried object if not supplied.\n\t *\/\n\tprotected function get_post_robots( $post = null ) {\n\t\tif ( ! is_object( $post ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$post_type = $post->post_type;\n\t\t$robots    = Paper::robots_combine( Post::get_meta( 'robots', $post->ID ) );\n\t\tif ( empty( $robots ) && Helper::get_settings( \"titles.pt_{$post_type}_custom_robots\" ) ) {\n\t\t\t$robots = Paper::robots_combine( Helper::get_settings( \"titles.pt_{$post_type}_robots\" ), true );\n\t\t}\n\n\t\t\/\/ `noindex` these conditions.\n\t\t$noindex_private            = 'private' === $post->post_status;\n\t\t$no_index_subpages          = is_paged() && Helper::get_settings( 'titles.noindex_paginated_pages' );\n\t\t$noindex_password_protected = ! empty( $post->post_password ) && Helper::get_settings( 'titles.noindex_password_protected' );\n\n\t\tif ( $noindex_private || $noindex_password_protected || $no_index_subpages ) {\n\t\t\t$robots['index'] = 'noindex';\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots set in the post metabox.\n\t *\n\t * @param object|null $post Object to retrieve the robots data from.\n\t *\n\t * @return string The robots for the specified object, or queried object if not supplied.\n\t *\/\n\tprotected function get_post_advanced_robots( $post = null ) {\n\t\tif ( ! is_object( $this->object ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$post_type = $this->object->post_type;\n\t\t$robots    = Paper::advanced_robots_combine( Post::get_meta( 'advanced_robots', $this->object->ID ) );\n\t\tif ( ! is_array( $robots ) && Helper::get_settings( \"titles.pt_{$post_type}_custom_robots\" ) ) {\n\t\t\t$robots = Paper::advanced_robots_combine( Helper::get_settings( \"titles.pt_{$post_type}_advanced_robots\" ), true );\n\t\t}\n\n\t\treturn $robots;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-author.php","ext":"php","size":2552,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Author Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\User;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Author class.\n *\/\nclass Author implements IPaper {\n\n\t\/**\n\t * Get the SEO title set in the user metabox.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\t$title = User::get_meta( 'title', $this->get_user_id() );\n\t\tif ( '' !== $title ) {\n\t\t\treturn $title;\n\t\t}\n\n\t\treturn Paper::get_from_options( 'author_archive_title' );\n\t}\n\n\t\/**\n\t * Get the SEO description set in the user metabox.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\t$description = User::get_meta( 'description', $this->get_user_id() );\n\t\tif ( '' !== $description ) {\n\t\t\treturn $description;\n\t\t}\n\n\t\treturn Paper::get_from_options( 'author_archive_description' );\n\t}\n\n\t\/**\n\t * Get the robots meta value set in the user metabox.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\t$robots = Paper::robots_combine( User::get_meta( 'robots', $this->get_user_id() ) );\n\n\t\tif ( empty( $robots ) && Helper::get_settings( 'titles.author_custom_robots' ) ) {\n\t\t\t$robots = Paper::robots_combine( Helper::get_settings( 'titles.author_robots' ), true );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Get the advanced robots meta set in the user metabox.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\t$robots = Paper::advanced_robots_combine( User::get_meta( 'advanced_robots', $this->get_user_id() ) );\n\n\t\tif ( empty( $robots ) && Helper::get_settings( 'titles.author_custom_robots' ) ) {\n\t\t\t$robots = Paper::advanced_robots_combine( Helper::get_settings( 'titles.author_advanced_robots' ), true );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Get the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\treturn [\n\t\t\t'canonical'          => get_author_posts_url( $this->get_user_id(), get_query_var( 'author_name' ) ),\n\t\t\t'canonical_override' => User::get_meta( 'canonical_url', $this->get_user_id() ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get the meta keywords for the user (in our case, the Focus Keywords).\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn User::get_meta( 'focus_keyword', $this->get_user_id() );\n\t}\n\n\t\/**\n\t * Get the user ID on the author archive or BBPress profile.\n\t *\n\t * @return int\n\t *\/\n\tprivate function get_user_id() {\n\t\t$author_id = get_query_var( 'author' );\n\t\tif ( $author_id ) {\n\t\t\treturn $author_id;\n\t\t}\n\n\t\treturn get_query_var( 'bbp_user_id' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-paper.php","ext":"php","size":13415,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Paper Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Post;\nuse RankMath\\Helper;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Security;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Paper class.\n *\/\nclass Paper {\n\n\tuse Hooker;\n\n\t\/**\n\t * Hold the class instance.\n\t *\n\t * @var object\n\t *\/\n\tprivate static $instance = null;\n\n\t\/**\n\t * Hold current paper object.\n\t *\n\t * @var IPaper\n\t *\/\n\tprivate $paper = null;\n\n\t\/**\n\t * Hold title.\n\t *\n\t * @var string\n\t *\/\n\tprivate $title = null;\n\n\t\/**\n\t * Hold description.\n\t *\n\t * @var string\n\t *\/\n\tprivate $description = null;\n\n\t\/**\n\t * Hold robots.\n\t *\n\t * @var array\n\t *\/\n\tprivate $robots = null;\n\n\t\/**\n\t * Hold canonical.\n\t *\n\t * @var array\n\t *\/\n\tprivate $canonical = null;\n\n\t\/**\n\t * Hold keywords.\n\t *\n\t * @var string\n\t *\/\n\tprivate $keywords = null;\n\n\t\/**\n\t * Initialize object\n\t *\n\t * @return object Post|Term|User.\n\t *\/\n\tpublic static function get() {\n\t\tif ( ! is_null( self::$instance ) ) {\n\t\t\treturn self::$instance;\n\t\t}\n\n\t\tself::$instance = new Paper();\n\t\tself::$instance->setup();\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * Setup paper.\n\t *\/\n\tprivate function setup() {\n\t\tforeach ( $this->get_papers() as $class_name => $is_valid ) {\n\t\t\tif ( $this->do_filter( 'paper\/is_valid\/' . strtolower( $class_name ), $is_valid ) ) {\n\t\t\t\t$class_name  = '\\\\RankMath\\\\Paper\\\\' . $class_name;\n\t\t\t\t$this->paper = new $class_name();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( ! method_exists( $this->paper, 'set_object' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Post::is_home_static_page() ) {\n\t\t\t$this->paper->set_object( get_queried_object() );\n\t\t} elseif ( Post::is_simple_page() ) {\n\t\t\t$post = Post::get( Post::get_page_id() );\n\t\t\t$this->paper->set_object( $post->get_object() );\n\t\t}\n\t}\n\n\t\/**\n\t * Get papers types.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_papers() {\n\t\treturn $this->do_filter(\n\t\t\t'paper\/hash',\n\t\t\t[\n\t\t\t\t'Search'    => is_search(),\n\t\t\t\t'Shop'      => Post::is_shop_page(),\n\t\t\t\t'Singular'  => Post::is_home_static_page() || Post::is_simple_page(),\n\t\t\t\t'Blog'      => Post::is_home_posts_page(),\n\t\t\t\t'Author'    => is_author() || ( Helper::is_module_active( 'bbpress' ) && function_exists( 'bbp_is_single_user' ) && bbp_is_single_user() ),\n\t\t\t\t'Date'      => is_date(),\n\t\t\t\t'Taxonomy'  => is_category() || is_tag() || is_tax(),\n\t\t\t\t'Archive'   => is_archive(),\n\t\t\t\t'Error_404' => is_404(),\n\t\t\t\t'Misc'      => true,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get title after sanitization.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_title() {\n\t\tif ( ! is_null( $this->title ) ) {\n\t\t\treturn $this->title;\n\t\t}\n\n\t\t\/**\n\t\t * Allow changing the title.\n\t\t *\n\t\t * @param string $title The page title being put out.\n\t\t *\/\n\t\t$this->title = $this->do_filter( 'frontend\/title', $this->paper->title() );\n\n\t\t\/\/ Early Bail!!\n\t\tif ( '' === $this->title ) {\n\t\t\treturn $this->title;\n\t\t}\n\n\t\t\/\/ Remove excess whitespace.\n\t\t$this->title = preg_replace( '[\\s\\s+]', ' ', $this->title );\n\n\t\t\/\/ Capitalize Titles.\n\t\tif ( Helper::get_settings( 'titles.capitalize_titles' ) ) {\n\t\t\t$this->title = Str::mb_ucwords( $this->title );\n\t\t}\n\n\t\t$this->title = wp_strip_all_tags( stripslashes( $this->title ), true );\n\t\t$this->title = esc_html( $this->title );\n\t\t$this->title = convert_smilies( $this->title );\n\n\t\treturn $this->title;\n\t}\n\n\t\/**\n\t * Get description after sanitization.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_description() {\n\t\tif ( ! is_null( $this->description ) ) {\n\t\t\treturn $this->description;\n\t\t}\n\n\t\t\/**\n\t\t* Allow changing the meta description sentence.\n\t\t*\n\t\t* @param string $description The description sentence.\n\t\t*\/\n\t\t$this->description = $this->do_filter( 'frontend\/description', trim( $this->paper->description() ) );\n\n\t\t\/\/ Early Bail!!\n\t\tif ( '' === $this->description ) {\n\t\t\treturn $this->description;\n\t\t}\n\n\t\t$this->description = wp_strip_all_tags( stripslashes( $this->description ), true );\n\t\t$this->description = esc_attr( $this->description );\n\n\t\treturn $this->description;\n\t}\n\n\t\/**\n\t * Get robots after sanitization.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_robots() {\n\t\tif ( ! is_null( $this->robots ) ) {\n\t\t\treturn $this->robots;\n\t\t}\n\n\t\t$this->robots = $this->paper->robots();\n\t\tif ( empty( $this->robots ) ) {\n\t\t\t$this->robots = self::robots_combine( Helper::get_settings( 'titles.robots_global' ) );\n\t\t}\n\t\t$this->validate_robots();\n\t\t$this->respect_settings_for_robots();\n\n\t\t\/**\n\t\t * Allows filtering of the meta robots.\n\t\t *\n\t\t * @param array $robots The meta robots directives to be echoed.\n\t\t *\/\n\t\t$this->robots = $this->do_filter( 'frontend\/robots', array_unique( $this->robots ) );\n\t\t$this->advanced_robots();\n\n\t\treturn $this->robots;\n\t}\n\n\t\/**\n\t * Validate robots.\n\t *\/\n\tprivate function validate_robots() {\n\t\tif ( empty( $this->robots ) || ! is_array( $this->robots ) ) {\n\t\t\t$this->robots = [\n\t\t\t\t'index'  => 'index',\n\t\t\t\t'follow' => 'follow',\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\n\t\t$this->robots = array_intersect_key(\n\t\t\t$this->robots,\n\t\t\t[\n\t\t\t\t'index'        => '',\n\t\t\t\t'follow'       => '',\n\t\t\t\t'noarchive'    => '',\n\t\t\t\t'noimageindex' => '',\n\t\t\t\t'nosnippet'    => '',\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Add Index and Follow.\n\t\tif ( ! isset( $this->robots['index'] ) ) {\n\t\t\t$this->robots = [ 'index' => 'index' ] + $this->robots;\n\t\t}\n\t\tif ( ! isset( $this->robots['follow'] ) ) {\n\t\t\t$this->robots = [ 'follow' => 'follow' ] + $this->robots;\n\t\t}\n\t}\n\n\t\/**\n\t * Add Advanced robots.\n\t *\/\n\tprivate function advanced_robots() {\n\t\t\/\/ Early Bail if robots is set to noindex or nosnippet!\n\t\tif ( ( isset( $this->robots['index'] ) && 'noindex' === $this->robots['index'] ) || ( isset( $this->robots['nosnippet'] ) && 'nosnippet' === $this->robots['nosnippet'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$advanced_robots = $this->paper->advanced_robots();\n\t\tif ( ! is_array( $advanced_robots ) ) {\n\t\t\t$advanced_robots = wp_parse_args(\n\t\t\t\tHelper::get_settings( 'titles.advanced_robots_global' ),\n\t\t\t\t[\n\t\t\t\t\t'max-snippet'       => -1,\n\t\t\t\t\t'max-video-preview' => -1,\n\t\t\t\t\t'max-image-preview' => 'large',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t$advanced_robots = self::advanced_robots_combine( $advanced_robots );\n\t\t}\n\n\t\t$advanced_robots = array_intersect_key(\n\t\t\t$advanced_robots,\n\t\t\t[\n\t\t\t\t'max-snippet'       => '',\n\t\t\t\t'max-video-preview' => '',\n\t\t\t\t'max-image-preview' => '',\n\t\t\t]\n\t\t);\n\n\t\t\/**\n\t\t * Allows filtering of the advanced meta robots.\n\t\t *\n\t\t * @param array $robots The meta robots directives to be echoed.\n\t\t *\/\n\t\t$advanced_robots = $this->do_filter( 'frontend\/advanced_robots', array_unique( $advanced_robots ) );\n\n\t\t$this->robots = ! empty( $advanced_robots ) ? $this->robots + $advanced_robots : $this->robots;\n\t}\n\n\t\/**\n\t * Get focus keywords\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_keywords() {\n\t\tif ( ! is_null( $this->keywords ) ) {\n\t\t\treturn $this->keywords;\n\t\t}\n\n\t\t\/**\n\t\t * Allows filtering of the meta keywords.\n\t\t *\n\t\t * @param array $keywords The meta keywords to be echoed.\n\t\t *\/\n\t\t$this->keywords = $this->do_filter( 'frontend\/keywords', $this->paper->keywords() );\n\n\t\treturn $this->keywords;\n\t}\n\n\t\/**\n\t * Respect some robots settings.\n\t *\/\n\tprivate function respect_settings_for_robots() {\n\t\t\/\/ If blog is not public or replytocom is set, then force noindex.\n\t\tif ( 0 === absint( get_option( 'blog_public' ) ) || isset( $_GET['replytocom'] ) ) {\n\t\t\t$this->robots['index']  = 'noindex';\n\t\t\t$this->robots['follow'] = 'nofollow';\n\t\t}\n\n\t\t\/\/ Force noindex for sub-pages.\n\t\tif ( is_paged() && Helper::get_settings( 'titles.noindex_archive_subpages' ) ) {\n\t\t\t$this->robots['index'] = 'noindex';\n\t\t}\n\t}\n\n\t\/**\n\t * Get canonical after sanitization.\n\t *\n\t * @param bool $un_paged    Whether or not to return the canonical with or without pagination added to the URL.\n\t * @param bool $no_override Whether or not to return a manually overridden canonical.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_canonical( $un_paged = false, $no_override = false ) {\n\t\tif ( is_null( $this->canonical ) ) {\n\t\t\t$this->generate_canonical();\n\t\t}\n\n\t\t$canonical = $this->canonical['canonical'];\n\t\tif ( $un_paged ) {\n\t\t\t$canonical = $this->canonical['canonical_unpaged'];\n\t\t} elseif ( $no_override ) {\n\t\t\t$canonical = $this->canonical['canonical_no_override'];\n\t\t}\n\n\t\treturn $canonical;\n\t}\n\n\t\/**\n\t * Generate canonical URL parts.\n\t *\/\n\tprivate function generate_canonical() {\n\t\t$this->canonical = wp_parse_args(\n\t\t\t$this->paper->canonical(),\n\t\t\t[\n\t\t\t\t'canonical'          => false,\n\t\t\t\t'canonical_unpaged'  => false,\n\t\t\t\t'canonical_override' => false,\n\t\t\t]\n\t\t);\n\t\textract( $this->canonical ); \/\/ phpcs:ignore\n\n\t\tif ( is_front_page() || ( function_exists( 'ampforwp_is_front_page' ) && ampforwp_is_front_page() ) ) {\n\t\t\t$canonical = user_trailingslashit( home_url() );\n\t\t}\n\n\t\t\/\/ If not singular than we can have pagination.\n\t\tif ( ! is_singular() ) {\n\t\t\t$canonical_unpaged = $canonical;\n\t\t\t$canonical         = $this->get_canonical_paged( $canonical );\n\t\t}\n\n\t\t$this->canonical['canonical_unpaged']     = $canonical_unpaged;\n\t\t$this->canonical['canonical_no_override'] = $canonical;\n\n\t\t\/\/ Force absolute URLs for canonicals.\n\t\t$canonical = Str::is_non_empty( $canonical ) && true === Url::is_relative( $canonical ) ? $this->base_url( $canonical ) : $canonical;\n\t\t$canonical = Str::is_non_empty( $canonical_override ) ? $canonical_override : $canonical;\n\n\t\t\/**\n\t\t * Filter the canonical URL.\n\t\t *\n\t\t * @param string $canonical The canonical URL.\n\t\t *\/\n\t\t$this->canonical['canonical'] = apply_filters( 'rank_math\/frontend\/canonical', $canonical );\n\t}\n\n\t\/**\n\t * Get the paged version of the canonical URL if needed.\n\t *\n\t * @param string $canonical The canonical URL.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_canonical_paged( $canonical ) {\n\t\tglobal $wp_rewrite;\n\n\t\tif ( ! $canonical || get_query_var( 'paged' ) < 2 ) {\n\t\t\treturn $canonical;\n\t\t}\n\n\t\tif ( ! $wp_rewrite->using_permalinks() ) {\n\t\t\treturn Security::add_query_arg_raw(\n\t\t\t\t'paged',\n\t\t\t\tget_query_var( 'paged' ),\n\t\t\t\tis_front_page() ? trailingslashit( $canonical ) : $canonical\n\t\t\t);\n\t\t}\n\n\t\treturn user_trailingslashit(\n\t\t\ttrailingslashit( is_front_page() ? Router::get_base_url( '' ) : $canonical ) .\n\t\t\ttrailingslashit( $wp_rewrite->pagination_base ) .\n\t\t\tget_query_var( 'paged' )\n\t\t);\n\t}\n\n\t\/**\n\t * Get the base URL for relative URLs by parsing the home URL.\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast (https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\n\t * @param  string $path Optional path string.\n\t * @return string\n\t *\/\n\tprivate function base_url( $path = null ) {\n\t\t$parts    = wp_parse_url( get_option( 'home' ) );\n\t\t$base_url = trailingslashit( $parts['scheme'] . ':\/\/' . $parts['host'] );\n\n\t\tif ( ! is_null( $path ) ) {\n\t\t\t$base_url .= ltrim( $path, '\/' );\n\t\t}\n\n\t\treturn $base_url;\n\t}\n\n\t\/**\n\t * Get title or description option from the settings.\n\t * The results will be run through the Helper::replace_vars() function.\n\t *\n\t * @param string       $id            Name of the option we are looking for.\n\t * @param object|array $args          Object to pass to the replace_vars function.\n\t * @param string       $default_value Default value if nothing found.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_from_options( $id, $args = [], $default_value = '' ) {\n\t\t$value = Helper::get_settings( \"titles.$id\" );\n\n\t\t\/\/ Break loop.\n\t\tif ( ! Str::ends_with( 'default_snippet_name', $value ) && ! Str::ends_with( 'default_snippet_desc', $value ) ) {\n\t\t\t$value = \\str_replace(\n\t\t\t\t[ '%seo_title%', '%seo_description%' ],\n\t\t\t\t[ '%title%', '%excerpt%' ],\n\t\t\t\t$value\n\t\t\t);\n\t\t}\n\n\t\treturn Helper::replace_vars( '' !== $value ? $value : $default_value, $args );\n\t}\n\n\t\/**\n\t * Make robots values as keyed array.\n\t *\n\t * @param array $robots        Main instance.\n\t * @param bool  $default_value Append default.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function robots_combine( $robots, $default_value = false ) {\n\t\tif ( empty( $robots ) || ! is_array( $robots ) ) {\n\t\t\treturn ! $default_value ? [] : [\n\t\t\t\t'index'  => 'index',\n\t\t\t\t'follow' => 'follow',\n\t\t\t];\n\t\t}\n\n\t\t$robots = array_combine( $robots, $robots );\n\n\t\t\/\/ Fix noindex key to index.\n\t\tif ( isset( $robots['noindex'] ) ) {\n\t\t\t$robots = [ 'index' => $robots['noindex'] ] + $robots;\n\t\t\tunset( $robots['noindex'] );\n\t\t}\n\n\t\t\/\/ Fix nofollow key to follow.\n\t\tif ( isset( $robots['nofollow'] ) ) {\n\t\t\t$robots = [ 'follow' => $robots['nofollow'] ] + $robots;\n\t\t\tunset( $robots['nofollow'] );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Make robots values as keyed array.\n\t *\n\t * @param array $advanced_robots  Main instance.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function advanced_robots_combine( $advanced_robots ) {\n\t\tif ( empty( $advanced_robots ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$robots = [];\n\t\tforeach ( $advanced_robots as $key => $data ) {\n\t\t\tif ( $data ) {\n\t\t\t\t$robots[ $key ] = $key . ':' . $data;\n\t\t\t}\n\t\t}\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Should apply shortcode on content.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function should_apply_shortcode() {\n\t\tif (\n\t\t\tPost::is_woocommerce_page() ||\n\t\t\t( function_exists( 'is_wcfm_page' ) && is_wcfm_page() )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn apply_filters( 'rank_math\/paper\/auto_generated_description\/apply_shortcode', false );\n\t}\n\n\t\/**\n\t * Clears and reinitializes the object.\n\t *\/\n\tpublic static function reset() {\n\t\tself::$instance = null;\n\t\treturn self::get();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-shop.php","ext":"php","size":1786,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Shop paper.\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Post;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Shop.\n *\/\nclass Shop extends Singular {\n\n\t\/**\n\t * Retrieves the WooCommerce Shop SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\t$post  = Post::get( Post::get_shop_page_id() );\n\t\t$title = $this->get_post_title( $post->get_object() );\n\n\t\t\/\/ Early Bail!\n\t\tif ( Str::is_non_empty( $title ) ) {\n\t\t\treturn $title;\n\t\t}\n\n\t\treturn Paper::get_from_options( 'pt_product_archive_title', [], '%pt_plural% Archive %page% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Retrieves the WooCommerce Shop SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\t$post = Post::get( Post::get_shop_page_id() );\n\t\t$desc = $this->get_post_description( $post->get_object() );\n\n\t\treturn '' !== $desc ? $desc : Paper::get_from_options( 'pt_product_archive_description', [], '%pt_plural% Archive %page% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Retrieves the WooCommerce Shop robots.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\t$post = Post::get( Post::get_shop_page_id() );\n\t\treturn $this->get_post_robots( $post->get_object() );\n\t}\n\n\t\/**\n\t * Retrieves the WooCommerce Shop advanced robots.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\t$post   = Post::get( Post::get_shop_page_id() );\n\t\t$object = $post->get_object();\n\t\treturn $this->get_post_advanced_robots( $object );\n\t}\n\n\t\/**\n\t * Retrieves meta keywords.\n\t *\n\t * @return string The focus keywords.\n\t *\/\n\tpublic function keywords() {\n\t\treturn Post::get_meta( 'focus_keyword', Post::get_shop_page_id() );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/interface-paper.php","ext":"php","size":860,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Paper Interface\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Paper interface.\n *\/\ninterface IPaper {\n\n\t\/**\n\t * Retrieves the SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title();\n\n\t\/**\n\t * Retrieves the SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description();\n\n\t\/**\n\t * Retrieves the robots.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots();\n\n\t\/**\n\t * Retrieves the advanced robots.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots();\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical();\n\n\t\/**\n\t * Retrieves the keywords.\n\t *\n\t * @return string The focus keywords.\n\t *\/\n\tpublic function keywords();\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-date.php","ext":"php","size":1821,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Date Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Date class.\n *\/\nclass Date implements IPaper {\n\n\t\/**\n\t * Get the SEO title for a date archive.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\treturn Paper::get_from_options( 'date_archive_title' );\n\t}\n\n\t\/**\n\t * Get the SEO description for a date archive.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\treturn Paper::get_from_options( 'date_archive_description' );\n\t}\n\n\t\/**\n\t * Get the robots meta for a date archive.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\t$robots = [];\n\t\t$robots = Paper::robots_combine( Helper::get_settings( 'titles.date_archive_robots' ) );\n\t\tif ( Helper::get_settings( 'titles.disable_date_archives' ) ) {\n\t\t\t$robots['index'] = 'noindex';\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Get the advanced robots meta for a date archive.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\treturn Paper::advanced_robots_combine( Helper::get_settings( 'titles.date_advanced_robots' ) );\n\t}\n\n\t\/**\n\t * Get the canonical URL for the current page.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\t$canonical = '';\n\t\tif ( is_day() ) {\n\t\t\t$canonical = get_day_link( get_query_var( 'year' ), get_query_var( 'monthnum' ), get_query_var( 'day' ) );\n\t\t} elseif ( is_month() ) {\n\t\t\t$canonical = get_month_link( get_query_var( 'year' ), get_query_var( 'monthnum' ) );\n\t\t} elseif ( is_year() ) {\n\t\t\t$canonical = get_year_link( get_query_var( 'year' ) );\n\t\t}\n\n\t\treturn [ 'canonical' => $canonical ];\n\t}\n\n\t\/**\n\t * Get the meta keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-taxonomy.php","ext":"php","size":3736,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Term Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Term;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Taxonomy class.\n *\/\nclass Taxonomy implements IPaper {\n\n\t\/**\n\t * Retrieves the SEO title for a taxonomy.\n\t *\n\t * @return string The SEO title for the taxonomy.\n\t *\/\n\tpublic function title() {\n\t\t$object = get_queried_object();\n\t\tif ( ! is_object( $object ) ) {\n\t\t\treturn Paper::get_from_options( '404_title', [], esc_html__( 'Page not found', 'rank-math' ) );\n\t\t}\n\n\t\t$title = Term::get_meta( 'title', $object, $object->taxonomy );\n\t\tif ( '' !== $title ) {\n\t\t\treturn $title;\n\t\t}\n\n\t\treturn Paper::get_from_options( \"tax_{$object->taxonomy}_title\", $object );\n\t}\n\n\t\/**\n\t * Retrieves the SEO description for a taxonomy.\n\t *\n\t * @return string The SEO description for the taxonomy.\n\t *\/\n\tpublic function description() {\n\t\t$object      = get_queried_object();\n\t\t$description = Term::get_meta( 'description', $object, $object->taxonomy );\n\t\tif ( '' !== $description ) {\n\t\t\treturn $description;\n\t\t}\n\n\t\treturn Paper::get_from_options( \"tax_{$object->taxonomy}_description\", $object );\n\t}\n\n\t\/**\n\t * Retrieves the robots for a taxonomy.\n\t *\n\t * @return string The robots for the taxonomy\n\t *\/\n\tpublic function robots() {\n\t\t$object = get_queried_object();\n\t\t$robots = Paper::robots_combine( Term::get_meta( 'robots', $object ) );\n\n\t\tif ( is_object( $object ) && empty( $robots ) && Helper::get_settings( \"titles.tax_{$object->taxonomy}_custom_robots\" ) ) {\n\t\t\t$robots = Paper::robots_combine( Helper::get_settings( \"titles.tax_{$object->taxonomy}_robots\" ), true );\n\t\t}\n\n\t\tif ( $this->noindex_term( $object ) ) {\n\t\t\t$robots['index'] = 'noindex';\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots for a taxonomy.\n\t *\n\t * @return array The advanced robots for the taxonomy\n\t *\/\n\tpublic function advanced_robots() {\n\t\t$object = get_queried_object();\n\t\t$robots = Paper::advanced_robots_combine( Term::get_meta( 'advanced_robots', $object ) );\n\n\t\tif ( is_object( $object ) && empty( $robots ) && Helper::get_settings( \"titles.tax_{$object->taxonomy}_custom_robots\" ) ) {\n\t\t\t$robots = Paper::advanced_robots_combine( Helper::get_settings( \"titles.tax_{$object->taxonomy}_advanced_robots\" ), true );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\t$object = get_queried_object();\n\n\t\tif ( empty( $object ) || Term::is_multiple_terms_query() ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$term_link = get_term_link( $object, $object->taxonomy );\n\n\t\treturn [\n\t\t\t'canonical'          => is_wp_error( $term_link ) ? '' : $term_link,\n\t\t\t'canonical_override' => Term::get_meta( 'canonical_url', $object, $object->taxonomy ),\n\t\t];\n\t}\n\n\t\/**\n\t * Retrieves the keywords.\n\t *\n\t * @return string The focus keywords.\n\t *\/\n\tpublic function keywords() {\n\t\t$object = get_queried_object();\n\n\t\tif ( empty( $object ) || Term::is_multiple_terms_query() ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn Term::get_meta( 'focus_keyword', $object, $object->taxonomy );\n\t}\n\n\t\/**\n\t * Whether to noindex empty terms.\n\t *\n\t * @param object $term Current taxonomy term object.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function noindex_term( $term ) {\n\t\tif ( Term::is_multiple_terms_query() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( is_object( $term ) && 0 === $term->count && Helper::get_settings( 'titles.noindex_empty_taxonomies' ) ) {\n\t\t\t$children = get_terms(\n\t\t\t\t[\n\t\t\t\t\t'taxonomy' => $term->taxonomy,\n\t\t\t\t\t'parent'   => $term->term_id,\n\t\t\t\t\t'number'   => 1,\n\t\t\t\t\t'fields'   => 'ids',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tif ( empty( $children ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-error-404.php","ext":"php","size":1056,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The 404 paper.\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * 404 Error.\n *\/\nclass Error_404 implements IPaper {\n\n\t\/**\n\t * Retrieves the SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\treturn Paper::get_from_options( '404_title', [], esc_html__( 'Page not found', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Retrieves the SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the robots.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\treturn [ 'index' => 'noindex' ];\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Retrieves meta keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-archive.php","ext":"php","size":2302,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The PostArchive Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Archive class.\n *\/\nclass Archive implements IPaper {\n\n\t\/**\n\t * Build the title for a post type archive.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\t$post_type = $this->get_queried_post_type();\n\n\t\treturn Paper::get_from_options( \"pt_{$post_type}_archive_title\", [], '%pt_plural% Archive %page% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Build the description for a post type archive.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\t$post_type = $this->get_queried_post_type();\n\n\t\treturn Paper::get_from_options( \"pt_{$post_type}_archive_description\", [], '%pt_plural% Archive %page% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Retrieves the robots for a post type archive.\n\t *\n\t * @return string The robots to use on a post type archive.\n\t *\/\n\tpublic function robots() {\n\t\t$robots    = [];\n\t\t$post_type = $this->get_queried_post_type();\n\n\t\tif ( Helper::get_settings( \"titles.pt_{$post_type}_custom_robots\" ) ) {\n\t\t\t$robots = Paper::robots_combine( Helper::get_settings( \"titles.pt_{$post_type}_robots\" ) );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots for a post type archive.\n\t *\n\t * @return array The advanced robots to use on a post type archive.\n\t *\/\n\tpublic function advanced_robots() {\n\t\t$robots    = [];\n\t\t$post_type = $this->get_queried_post_type();\n\n\t\tif ( Helper::get_settings( \"titles.pt_{$post_type}_custom_robots\" ) ) {\n\t\t\t$robots = Paper::advanced_robots_combine( Helper::get_settings( \"titles.pt_{$post_type}_advanced_robots\" ) );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Get the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\treturn [ 'canonical' => get_post_type_archive_link( $this->get_queried_post_type() ) ];\n\t}\n\n\t\/**\n\t * Get the meta keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Get the queried post type.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_queried_post_type() {\n\t\t$post_type = get_query_var( 'post_type' );\n\t\tif ( is_array( $post_type ) ) {\n\t\t\t$post_type = reset( $post_type );\n\t\t}\n\n\t\treturn $post_type;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-misc.php","ext":"php","size":946,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Misc paper.\n *\n * @since      1.0.28\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Misc class.\n *\/\nclass Misc implements IPaper {\n\n\t\/**\n\t * Retrieves the SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the robots.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Retrieves meta keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-search.php","ext":"php","size":1312,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Search Results paper.\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Search results.\n *\/\nclass Search implements IPaper {\n\n\t\/**\n\t * Retrieves the SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\treturn Paper::get_from_options( 'search_title', [], 'Searched for %search_query% %page% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Retrieves the SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the robots.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\treturn Helper::get_settings( 'titles.noindex_search' ) ? [ 'index' => 'noindex' ] : [];\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots.\n\t *\n\t * @return array\n\t *\/\n\tpublic function advanced_robots() {\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\t$search_query = get_search_query();\n\t\treturn [ 'canonical' => ! empty( $search_query ) && ! preg_match( '|^page\/\\d+$|', $search_query ) ? get_search_link() : '' ];\n\t}\n\n\t\/**\n\t * Retrieves meta keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/paper\/class-blog.php","ext":"php","size":2219,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Home Class\n *\n * @since      1.0.22\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Post;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Blog class.\n *\/\nclass Blog implements IPaper {\n\n\t\/**\n\t * Builds the title for Homepage.\n\t *\n\t * @return string The title to use on homepage.\n\t *\/\n\tpublic function title() {\n\t\treturn Paper::get_from_options( 'homepage_title' );\n\t}\n\n\t\/**\n\t * Builds the description for Homepage.\n\t *\n\t * @return string The description to use on a homepage.\n\t *\/\n\tpublic function description() {\n\t\treturn Paper::get_from_options( 'homepage_description', [], get_bloginfo( 'description' ) );\n\t}\n\n\t\/**\n\t * Retrieves the robots for Homepage.\n\t *\n\t * @return string The robots specified for the homepage.\n\t *\/\n\tpublic function robots() {\n\t\t$robots = [];\n\n\t\tif ( Helper::get_settings( 'titles.homepage_custom_robots' ) ) {\n\t\t\t$robots = Paper::robots_combine( Helper::get_settings( 'titles.homepage_robots' ) );\n\t\t}\n\n\t\tif ( is_paged() && Helper::get_settings( 'titles.noindex_paginated_pages' ) ) {\n\t\t\t$robots['index'] = 'noindex';\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots for Homepage.\n\t *\n\t * @return array The advanced robots specified for the homepage.\n\t *\/\n\tpublic function advanced_robots() {\n\t\tif ( ! Helper::get_settings( 'titles.homepage_custom_robots' ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Paper::advanced_robots_combine( Helper::get_settings( 'titles.homepage_advanced_robots' ) );\n\t}\n\n\t\/**\n\t * Retrieves the canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\t$canonical = home_url();\n\t\tif ( Post::is_posts_page() ) {\n\t\t\t$posts_page_id = get_option( 'page_for_posts' );\n\t\t\t$canonical     = Post::get_meta( 'canonical_url', $posts_page_id );\n\t\t\tif ( empty( $canonical ) ) {\n\t\t\t\t$canonical = get_permalink( $posts_page_id );\n\t\t\t}\n\t\t}\n\n\t\treturn [ 'canonical' => $canonical ];\n\t}\n\n\t\/**\n\t * Retrieves the keywords.\n\t *\n\t * @return string The focus keywords.\n\t *\/\n\tpublic function keywords() {\n\t\tif ( ! Post::is_posts_page() ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn Post::get_meta( 'focus_keyword', get_option( 'page_for_posts' ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-frontend.php","ext":"php","size":8717,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The public-facing functionality of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Post;\nuse RankMath\\Helper;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\OpenGraph\\Twitter;\nuse RankMath\\OpenGraph\\Facebook;\nuse RankMath\\OpenGraph\\Slack;\nuse RankMath\\Frontend\\Shortcodes;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Frontend class.\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\nclass Frontend {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( \\RankMath\\Helpers\\Param::get( 'et_fb' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->includes();\n\t\t$this->hooks();\n\n\t\t\/**\n\t\t * Fires when frontend is included\/loaded.\n\t\t *\/\n\t\t$this->do_action( 'frontend\/loaded' );\n\t}\n\n\t\/**\n\t * Include required files.\n\t *\/\n\tprivate function includes() {\n\n\t\trank_math()->shortcodes = new Shortcodes();\n\n\t\tif ( Helper::is_breadcrumbs_enabled() ) {\n\t\t\t\/**\n\t\t\t * If RM's breadcrumbs are enabled then we can remove the bbPress breadcrumbs.\n\t\t\t *\/\n\t\t\tadd_filter( 'bbp_get_breadcrumb', '__return_false' );\n\t\t}\n\n\t\tnew Redirection();\n\t\trank_math()->link_attributes = new Link_Attributes();\n\t\trank_math()->comments        = new Comments();\n\t}\n\n\t\/**\n\t * Hook into actions and filters.\n\t *\/\n\tprivate function hooks() {\n\n\t\t$this->action( 'wp_enqueue_scripts', 'enqueue' );\n\t\t$this->action( 'wp', 'integrations' );\n\t\t$this->filter( 'the_content_feed', 'embed_rssfooter' );\n\t\t$this->filter( 'the_excerpt_rss', 'embed_rssfooter_excerpt' );\n\n\t\t\/\/ Add support for shortcode in the Category\/Term description.\n\t\tadd_filter( 'category_description', 'do_shortcode' );\n\t\tadd_filter( 'term_description', 'do_shortcode' );\n\t}\n\n\t\/**\n\t * Initialize integrations.\n\t *\/\n\tpublic function integrations() {\n\t\t$type = get_query_var( 'sitemap' );\n\t\tif ( $this->do_filter( 'frontend\/disable_integration', ! empty( $type ) || is_customize_preview() ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tPaper::get();\n\t\tnew Facebook();\n\t\tnew Twitter();\n\t\tnew Slack();\n\n\t\t\/\/ Leave this for backwards compatibility as AMP plugin uses head function. We can remove this in the future update.\n\t\trank_math()->head = new Head();\n\n\t\tif ( function_exists( 'amp_is_dev_mode' ) && amp_is_dev_mode() ) {\n\t\t\t$this->filter( 'script_loader_tag', 'add_amp_dev_mode_attributes', 10, 2 );\n\t\t\t$this->filter( 'amp_dev_mode_element_xpaths', 'add_amp_dev_mode_xpaths' );\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue Styles and Scripts\n\t *\/\n\tpublic function enqueue() {\n\t\tif ( ! is_admin_bar_showing() || ! Helper::has_cap( 'admin_bar' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_enqueue_style( 'rank-math', rank_math()->assets() . 'css\/rank-math.css', null, rank_math()->version );\n\t\twp_enqueue_script( 'rank-math', rank_math()->assets() . 'js\/rank-math.js', [ 'jquery' ], rank_math()->version, true );\n\n\t\tif ( is_singular() ) {\n\t\t\tHelper::add_json( 'objectID', Post::get_page_id() );\n\t\t\tHelper::add_json( 'objectType', 'post' );\n\t\t} elseif ( is_category() || is_tag() || is_tax() ) {\n\t\t\tHelper::add_json( 'objectID', get_queried_object_id() );\n\t\t\tHelper::add_json( 'objectType', 'term' );\n\t\t} elseif ( is_author() ) {\n\t\t\tHelper::add_json( 'objectID', get_queried_object_id() );\n\t\t\tHelper::add_json( 'objectType', 'user' );\n\t\t}\n\t}\n\n\t\/**\n\t * Adds the RSS header and footer messages to the RSS feed item content.\n\t *\n\t * @param string $content Feed item content.\n\t *\n\t * @return string\n\t *\/\n\tpublic function embed_rssfooter( $content ) {\n\t\treturn $this->embed_rss( $content, 'full' );\n\t}\n\n\t\/**\n\t * Adds the RSS header and footer messages to the RSS feed item excerpt.\n\t *\n\t * @param string $content Feed item excerpt.\n\t *\n\t * @return string\n\t *\/\n\tpublic function embed_rssfooter_excerpt( $content ) {\n\t\treturn $this->embed_rss( $content, 'excerpt' );\n\t}\n\n\t\/**\n\t * Add data-ampdevmode attribute to enqueued scripts.\n\t *\n\t * @since 1.0.45\n\t *\n\t * @param string $tag    The script tag.\n\t * @param string $handle The script handle.\n\t *\n\t * @return string Modified script tag.\n\t *\/\n\tpublic function add_amp_dev_mode_attributes( $tag, $handle ) {\n\t\tif ( ! in_array( $handle, [ 'rank-math', 'jquery-core', 'jquery-migrate' ], true ) ) {\n\t\t\treturn $tag;\n\t\t}\n\n\t\treturn preg_replace( '\/(?<=<script)(?=\\s|>)\/i', ' data-ampdevmode', $tag );\n\t}\n\n\t\/**\n\t * Add data-ampdevmode attributes to the elements that need it.\n\t *\n\t * @since 1.0.45\n\t *\n\t * @param string[] $xpaths XPath queries for elements that should get the data-ampdevmode attribute.\n\t *\n\t * @return string[] XPath queries.\n\t *\/\n\tpublic function add_amp_dev_mode_xpaths( $xpaths ) {\n\t\t$xpaths[] = '\/\/script[ contains( text(), \"var rankMath\" ) ]';\n\t\t$xpaths[] = '\/\/*[ @id = \"rank-math-css\" ]';\n\t\t$xpaths[] = '\/\/a[starts-with(@href, \"tel:\")]';\n\t\treturn $xpaths;\n\t}\n\n\t\/**\n\t * Inserts the RSS header and footer messages in the RSS feed item.\n\t *\n\t * @param string $content Feed item content.\n\t * @param string $context Feed item context, 'excerpt' or 'full'.\n\t *\n\t * @return string\n\t *\/\n\tprivate function embed_rss( $content, $context = 'full' ) {\n\t\tif ( false === $this->can_embed_footer( $content, $context ) ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t$before = $this->get_rss_content( 'before' );\n\t\t$after  = $this->get_rss_content( 'after' );\n\n\t\tif ( '' === $before && '' === $after ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\tif ( 'excerpt' === $context && '' !== trim( $content ) ) {\n\t\t\t$content = wpautop( $content );\n\t\t}\n\n\t\treturn $before . $content . $after;\n\t}\n\n\t\/**\n\t * Check if we can add the RSS footer and\/or header to the RSS feed item.\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\n\t * @param string $content Feed item content.\n\t * @param string $context Feed item context, either 'excerpt' or 'full'.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_embed_footer( $content, $context ) {\n\t\t\/**\n\t\t * Allow the RSS footer to be dynamically shown\/hidden.\n\t\t *\n\t\t * @param bool   $show_embed Indicates if the RSS footer should be shown or not.\n\t\t * @param string $context    The context of the RSS content - 'full' or 'excerpt'.\n\t\t *\/\n\t\tif ( false === $this->do_filter( 'frontend\/rss\/include_footer', true, $context ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn is_feed();\n\t}\n\n\t\/**\n\t * Get RSS content for specified location.\n\t *\n\t * @param string $which Location ID.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_rss_content( $which ) {\n\t\t$content = $this->do_filter( 'frontend\/rss\/' . $which . '_content', Helper::get_settings( 'general.rss_' . $which . '_content' ) );\n\n\t\treturn '' !== $content ? wpautop( $this->rss_replace_vars( $content ) ) : $content;\n\t}\n\n\t\/**\n\t * Replace variables with the actual values in RSS header and footer messages.\n\t *\n\t * @param string $content The RSS content.\n\t *\n\t * @return string\n\t *\/\n\tprivate function rss_replace_vars( $content ) {\n\t\tglobal $post;\n\n\t\t\/**\n\t\t * Add nofollow for the links in the RSS header and footer messages. Default: true.\n\t\t *\n\t\t * @param bool $unsigned Whether or not to follow the links in RSS feed, defaults to true.\n\t\t *\/\n\t\t$no_follow = $this->do_filter( 'frontend\/rss\/nofollow_links', true );\n\t\t$no_follow = true === $no_follow ? 'rel=\"nofollow\" ' : '';\n\n\t\t$author_link = '';\n\t\t$image       = '';\n\t\tif ( ! empty( $post ) && $post instanceof \\WP_Post ) {\n\t\t\t$author_link = '<a ' . $no_follow . 'href=\"' . esc_url( get_author_posts_url( $post->post_author ) ) . '\">' . esc_html( get_the_author() ) . '<\/a>';\n\n\t\t\t\/\/ Featured image.\n\t\t\t$image = Helper::get_thumbnail_with_fallback( $post->ID, 'full' );\n\t\t\t$image = isset( $image[0] ) ? '<img src=\"' . $image[0] . '\" style=\"display: block; margin: 1em auto\">' : '';\n\t\t}\n\n\t\t$post_link      = '<a ' . $no_follow . 'href=\"' . esc_url( get_permalink() ) . '\">' . esc_html( get_the_title() ) . '<\/a>';\n\t\t$blog_link      = '<a ' . $no_follow . 'href=\"' . esc_url( get_bloginfo( 'url' ) ) . '\">' . esc_html( get_bloginfo( 'name' ) ) . '<\/a>';\n\t\t$blog_desc_link = '<a ' . $no_follow . 'href=\"' . esc_url( get_bloginfo( 'url' ) ) . '\">' . esc_html( get_bloginfo( 'name' ) ) . ' - ' . esc_html( get_bloginfo( 'description' ) ) . '<\/a>';\n\n\t\t$content = stripslashes( trim( $content ) );\n\t\t$content = str_replace( '%AUTHORLINK%', $author_link, $content );\n\t\t$content = str_replace( '%POSTLINK%', $post_link, $content );\n\t\t$content = str_replace( '%BLOGLINK%', $blog_link, $content );\n\t\t$content = str_replace( '%BLOGDESCLINK%', $blog_desc_link, $content );\n\t\t$content = str_replace( '%FEATUREDIMAGE%', $image, $content );\n\n\t\treturn $content;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-shortcodes.php","ext":"php","size":12298,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Shortcodes of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Helper;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Traits\\Shortcode;\nuse RankMath\\Helpers\\Arr;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Shortcodes class.\n *\/\nclass Shortcodes {\n\n\tuse Hooker;\n\tuse Shortcode;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'init', 'init' );\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\/\n\tpublic function init() {\n\n\t\t\/\/ Remove Yoast shortcodes.\n\t\t$this->remove_shortcode( 'wpseo_address' );\n\t\t$this->remove_shortcode( 'wpseo_map' );\n\t\t$this->remove_shortcode( 'wpseo_opening_hours' );\n\t\t$this->remove_shortcode( 'wpseo_breadcrumb' );\n\t\t$this->remove_shortcode( 'aioseo_breadcrumbs' );\n\n\t\t\/\/ Add Yoast compatibility shortcodes.\n\t\t$this->add_shortcode( 'wpseo_address', 'yoast_address' );\n\t\t$this->add_shortcode( 'wpseo_map', 'yoast_map' );\n\t\t$this->add_shortcode( 'wpseo_opening_hours', 'yoast_opening_hours' );\n\t\t$this->add_shortcode( 'wpseo_breadcrumb', 'breadcrumb' );\n\t\t$this->add_shortcode( 'aioseo_breadcrumbs', 'breadcrumb' );\n\n\t\t\/\/ Add the Contact shortcode.\n\t\t$this->add_shortcode( 'rank_math_contact_info', 'contact_info' );\n\n\t\t\/\/ Add the Breadcrumbs shortcode.\n\t\t$this->add_shortcode( 'rank_math_breadcrumb', 'breadcrumb' );\n\t}\n\n\t\/**\n\t * Get the breadcrumbs.\n\t *\n\t * @param array $args Arguments.\n\t *\n\t * @return string\n\t *\/\n\tpublic function breadcrumb( $args ) {\n\t\tif ( ! Helper::is_breadcrumbs_enabled() ) {\n\t\t\treturn;\n\t\t}\n\t\treturn Breadcrumbs::get()->get_breadcrumb( $args );\n\t}\n\n\t\/**\n\t * Contact info shortcode, displays nicely formatted contact informations.\n\t *\n\t * @param  array $args Optional. Shortcode arguments - currently only 'show'\n\t *                     parameter, which is a comma-separated list of elements to show.\n\t * @return string Shortcode output.\n\t *\/\n\tpublic function contact_info( $args ) {\n\t\t$args = shortcode_atts(\n\t\t\t[\n\t\t\t\t'show'  => 'all',\n\t\t\t\t'class' => '',\n\t\t\t],\n\t\t\t$args,\n\t\t\t'contact-info'\n\t\t);\n\n\t\t$allowed = $this->get_allowed_info( $args );\n\n\t\twp_enqueue_style( 'rank-math-contact-info', rank_math()->assets() . 'css\/rank-math-contact-info.css', null, rank_math()->version );\n\n\t\tob_start();\n\t\techo '<div class=\"' . esc_attr( $this->get_contact_classes( $allowed, $args['class'] ) ) . '\">';\n\n\t\tforeach ( $allowed as $element ) {\n\t\t\t$method = 'display_' . $element;\n\t\t\tif ( method_exists( $this, $method ) ) {\n\t\t\t\techo '<div class=\"rank-math-contact-section rank-math-contact-' . esc_attr( $element ) . '\">';\n\t\t\t\t$this->$method();\n\t\t\t\techo '<\/div>';\n\t\t\t}\n\t\t}\n\n\t\techo '<\/div>';\n\t\techo '<div class=\"clear\"><\/div>';\n\n\t\t\/**\n\t\t * Change the Contact Info HTML output.\n\t\t *\n\t\t * @param string $unsigned HTML output.\n\t\t *\/\n\t\treturn $this->do_filter( 'contact_info\/html', ob_get_clean() );\n\t}\n\n\t\/**\n\t * Get allowed info array.\n\t *\n\t * @param array $args Shortcode arguments - currently only 'show'.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_allowed_info( $args ) {\n\t\t$type = Helper::get_settings( 'titles.knowledgegraph_type' );\n\n\t\t$allowed = 'person' === $type\n\t\t? [ 'name', 'email', 'person_phone', 'address' ]\n\t\t: [ 'name', 'organization_description', 'email', 'address', 'hours', 'phone', 'additional_info', 'map' ];\n\n\t\tif ( ! empty( $args['show'] ) && 'all' !== $args['show'] ) {\n\t\t\t$allowed = array_intersect( Arr::from_string( $args['show'] ), $allowed );\n\t\t}\n\n\t\treturn $allowed;\n\t}\n\n\t\/**\n\t * Get contact info container classes.\n\t *\n\t * @param  array $allowed     Allowed elements.\n\t * @param  array $extra_class Shortcode arguments.\n\t * @return string\n\t *\/\n\tprivate function get_contact_classes( $allowed, $extra_class ) {\n\t\t$classes = [ 'rank-math-contact-info', $extra_class ];\n\t\tforeach ( $allowed as $elem ) {\n\t\t\t$classes[] = sanitize_html_class( 'show-' . $elem );\n\t\t}\n\t\tif ( count( $allowed ) === 1 ) {\n\t\t\t$classes[] = sanitize_html_class( 'show-' . $elem . '-only' );\n\t\t}\n\n\t\treturn join( ' ', array_filter( $classes ) );\n\t}\n\n\t\/**\n\t * Output address.\n\t *\/\n\tprivate function display_address() {\n\t\t$address = Helper::get_settings( 'titles.local_address' );\n\t\tif ( false === $address ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hash   = [\n\t\t\t'streetAddress'   => 'address',\n\t\t\t'addressLocality' => 'locality',\n\t\t\t'addressRegion'   => 'region',\n\t\t\t'postalCode'      => 'postalcode',\n\t\t\t'addressCountry'  => 'country',\n\t\t];\n\t\t$format = nl2br( Helper::get_settings( 'titles.local_address_format' ) );\n\t\t$data   = self::get_address( $hash, $address, $format );\n\t\t?>\n\t\t<label><?php esc_html_e( 'Address:', 'rank-math' ); ?><\/label>\n\t\t<address><?php echo wp_kses_post( $data ); ?><\/address>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output opening hours.\n\t *\/\n\tprivate function display_hours() {\n\t\t$hours = Helper::get_settings( 'titles.opening_hours' );\n\t\tif ( ! isset( $hours[0]['time'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$combined = $this->get_hours_combined( $hours );\n\t\t$format   = Helper::get_settings( 'titles.opening_hours_format' );\n\t\t?>\n\t\t<label><?php esc_html_e( 'Hours:', 'rank-math' ); ?><\/label>\n\t\t<div class=\"rank-math-contact-hours-details\">\n\t\t\t<?php\n\t\t\tforeach ( $combined as $time => $days ) {\n\t\t\t\tif ( $format ) {\n\t\t\t\t\t$hours = explode( '-', $time );\n\t\t\t\t\t$time  = isset( $hours[1] ) ? date_i18n( 'g:i a', strtotime( $hours[0] ) ) . '-' . date_i18n( 'g:i a', strtotime( $hours[1] ) ) : $time;\n\t\t\t\t}\n\t\t\t\t$time = str_replace( '-', ' &ndash; ', $time );\n\n\t\t\t\tprintf(\n\t\t\t\t\t'<div class=\"rank-math-opening-hours\"><span class=\"rank-math-opening-days\">%1$s<\/span><span class=\"rank-math-opening-time\">%2$s<\/span><\/div>',\n\t\t\t\t\tesc_html( join( ', ', $days ) ),\n\t\t\t\t\tesc_html( $time )\n\t\t\t\t);\n\t\t\t}\n\t\t\t?>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Combine hours in an hour\n\t *\n\t * @param  array $hours Hours to combine.\n\t * @return array\n\t *\/\n\tprivate function get_hours_combined( $hours ) {\n\t\t$combined = [];\n\n\t\tforeach ( $hours as $hour ) {\n\t\t\tif ( empty( $hour['time'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$combined[ trim( $hour['time'] ) ][] = $this->get_localized_day( $hour['day'] );\n\t\t}\n\n\t\treturn $combined;\n\t}\n\n\t\/**\n\t * Retrieve the full translated weekday word.\n\t *\n\t * @param string $day Day to translate.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_localized_day( $day ) {\n\t\tglobal $wp_locale;\n\n\t\t$hash = [\n\t\t\t'Sunday'    => 0,\n\t\t\t'Monday'    => 1,\n\t\t\t'Tuesday'   => 2,\n\t\t\t'Wednesday' => 3,\n\t\t\t'Thursday'  => 4,\n\t\t\t'Friday'    => 5,\n\t\t\t'Saturday'  => 6,\n\t\t];\n\n\t\treturn $wp_locale->get_weekday( $hash[ $day ] );\n\t}\n\n\t\/**\n\t * Output phone numbers.\n\t *\/\n\tprivate function display_phone() {\n\t\t$phones = Helper::get_settings( 'titles.phone_numbers' );\n\t\tif ( empty( $phones ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$choices = Helper::choices_phone_types();\n\t\tforeach ( $phones as $phone ) :\n\t\t\tif ( empty( $phone['number'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$number = esc_html( $phone['number'] );\n\t\t\t$label  = isset( $choices[ $phone['type'] ] ) ? $choices[ $phone['type'] ] : ''\n\t\t\t?>\n\t\t\t<div class=\"rank-math-phone-number type-<?php echo sanitize_html_class( $phone['type'] ); ?>\">\n\t\t\t\t<label><?php echo esc_html( $label ); ?>:<\/label>\n\t\t\t\t<span><?php echo isset( $phone['number'] ) ? '<a href=\"tel:' . esc_attr( $number ) . '\">' . esc_html( $number ) . '<\/a>' : ''; ?><\/span>\n\t\t\t<\/div>\n\t\t\t<?php\n\t\tendforeach;\n\t}\n\n\t\/**\n\t * Output Person phone number.\n\t *\/\n\tprivate function display_person_phone() {\n\t\t$phone = Helper::get_settings( 'titles.phone' );\n\t\tif ( empty( $phone ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t\t<div class=\"rank-math-phone-numbers\">\n\t\t\t\t<label><?php echo esc_html__( 'Telephone', 'rank-math' ); ?>:<\/label>\n\t\t\t\t<span><a href=\"tel:<?php echo esc_attr( $phone ); ?>\"><?php echo esc_html( $phone ); ?><\/a><\/span>\n\t\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output google map.\n\t *\/\n\tprivate function display_map() {\n\t\t$api_key = Helper::get_settings( 'titles.maps_api_key' );\n\t\tif ( ! $api_key ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$address = Helper::get_settings( 'titles.local_address' );\n\t\tif ( false === $address ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Filter address for Google Map in contact shortcode.\n\t\t *\n\t\t * @param string $address\n\t\t *\/\n\t\t$address = $this->do_filter( 'shortcode\/contact\/map_address', implode( ' ', $address ) );\n\t\t$address = $this->do_filter( 'shortcode\/contact\/map_iframe_src', '\/\/maps.google.com\/maps?q=' . rawurlencode( $address ) . '&z=15&output=embed&key=' . rawurlencode( $api_key ) );\n\t\t?>\n\t\t<iframe src=\"<?php echo esc_url( $address ); ?>\"><\/iframe>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output name.\n\t *\/\n\tprivate function display_name() {\n\t\t$name = Helper::get_settings( 'titles.knowledgegraph_name' );\n\t\tif ( false === $name ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$url = Helper::get_settings( 'titles.url' );\n\t\t?>\n\t\t<h4 class=\"rank-math-name\">\n\t\t\t<a href=\"<?php echo esc_url( $url ); ?>\"><?php echo esc_html( $name ); ?><\/a>\n\t\t<\/h4>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output email.\n\t *\/\n\tprivate function display_email() {\n\t\t$email = Helper::get_settings( 'titles.email' );\n\t\tif ( false === $email ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<div class=\"rank-math-email\">\n\t\t\t<label><?php esc_html_e( 'Email:', 'rank-math' ); ?><\/label>\n\t\t\t<a href=\"mailto:<?php echo esc_attr( $email ); ?>\"><?php echo esc_html( $email ); ?><\/a>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output Organization description.\n\t *\/\n\tprivate function display_organization_description() {\n\t\t$description = Helper::get_settings( 'titles.organization_description' );\n\t\tif ( ! $description ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<div class=\"rank-math-organization-description\">\n\t\t\t<label><?php esc_html_e( 'Description:', 'rank-math' ); ?><\/label>\n\t\t\t<p><?php echo esc_html( $description ); ?><\/p>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output Additional Organization details.\n\t *\/\n\tprivate function display_additional_info() {\n\t\t$properties = Helper::get_settings( 'titles.additional_info' );\n\t\tif ( empty( $properties ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$choices = Helper::choices_additional_organization_info();\n\n\t\tforeach ( $properties as $property ) {\n\t\t\tif ( empty( $property['value'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t?>\n\t\t\t<div class=\"rank-math-organization-additional-details\">\n\t\t\t\t<label><?php echo esc_html( $choices[ $property['type'] ] ); ?>:<\/label>\n\t\t\t\t<span><?php echo esc_html( $property['value'] ); ?><\/span>\n\t\t\t<\/div>\n\t\t\t<?php\n\t\t}\n\t}\n\n\t\/**\n\t * Yoast address compatibility functionality.\n\t *\n\t * @param  array $args Array of arguments.\n\t * @return string\n\t *\/\n\tpublic function yoast_address( $args ) {\n\t\t$atts = shortcode_atts(\n\t\t\t[\n\t\t\t\t'hide_name'          => '0',\n\t\t\t\t'hide_address'       => '0',\n\t\t\t\t'show_state'         => '1',\n\t\t\t\t'show_country'       => '1',\n\t\t\t\t'show_phone'         => '1',\n\t\t\t\t'show_phone_2'       => '1',\n\t\t\t\t'show_fax'           => '1',\n\t\t\t\t'show_email'         => '1',\n\t\t\t\t'show_url'           => '0',\n\t\t\t\t'show_vat'           => '0',\n\t\t\t\t'show_tax'           => '0',\n\t\t\t\t'show_coc'           => '0',\n\t\t\t\t'show_price_range'   => '0',\n\t\t\t\t'show_logo'          => '0',\n\t\t\t\t'show_opening_hours' => '0',\n\t\t\t],\n\t\t\t$args,\n\t\t\t'wpseo_address'\n\t\t);\n\t\t$show = [ 'address' ];\n\n\t\tif ( 1 === absint( $atts['show_phone'] ) ) {\n\t\t\t$show[] = 'phone';\n\t\t}\n\n\t\tif ( 1 === absint( $atts['show_opening_hours'] ) ) {\n\t\t\t$show[] = 'hours';\n\t\t}\n\n\t\treturn $this->contact_info(\n\t\t\t[\n\t\t\t\t'show'  => join( ',', $show ),\n\t\t\t\t'class' => 'wpseo_address_compat',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Yoast map compatibility functionality.\n\t *\n\t * @return string\n\t *\/\n\tpublic function yoast_map() {\n\t\treturn $this->contact_info(\n\t\t\t[\n\t\t\t\t'show'  => 'map',\n\t\t\t\t'class' => 'wpseo_map_compat',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Yoast opening hours compatibility functionality.\n\t *\n\t * @return string\n\t *\/\n\tpublic function yoast_opening_hours() {\n\t\treturn $this->contact_info(\n\t\t\t[\n\t\t\t\t'show'  => 'hours',\n\t\t\t\t'class' => 'wpseo_opening_hours_compat',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get address\n\t *\n\t * @param array  $hash   Hash of tags.\n\t * @param array  $address Address data.\n\t * @param string $format Address format.\n\t *\/\n\tpublic static function get_address( $hash, $address, $format ) {\n\t\t$parts_format = apply_filters( 'rank_math\/shortcode\/contact\/address_parts_format', '<span class=\"contact-address-%1$s\">%2$s<\/span>' );\n\n\t\tforeach ( $hash as $key => $tag ) {\n\t\t\t$value = '';\n\t\t\tif ( isset( $address[ $key ] ) && ! empty( $address[ $key ] ) ) {\n\t\t\t\t$value = sprintf( $parts_format, $key, $address[ $key ] );\n\t\t\t}\n\n\t\t\t$format = str_replace( \"{{$tag}}\", $value, $format );\n\t\t}\n\n\t\treturn $format;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-link-attributes.php","ext":"php","size":8272,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The class handles adding of attributes to links to content.\n *\n * @since      1.0.43.2\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\HTML;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Add Link_Attributes class.\n *\/\nclass Link_Attributes {\n\n\tuse Hooker;\n\n\t\/**\n\t * Add rel=noopener or not.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $add_noopener;\n\n\t\/**\n\t * Add rel=nofollow to links or not.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $nofollow_link;\n\n\t\/**\n\t * Add rel=nofollow to images or not.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $nofollow_image;\n\n\t\/**\n\t * Open links in a new window or not.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $new_window_link;\n\n\t\/**\n\t * Remove existing CSS class from links or not.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $remove_class;\n\n\t\/**\n\t * Check if the link attributes have been modified or not.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $is_dirty;\n\n\t\/**\n\t * Additional attributes to add to links.\n\t *\n\t * @var array\n\t *\/\n\tpublic $add_attributes;\n\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'wp', 'add_attributes', 9999 );\n\t\t$this->action( 'rest_api_init', 'add_attributes' );\n\t}\n\n\t\/**\n\t * Add nofollow, target, title and alt attributes to link and images.\n\t *\/\n\tpublic function add_attributes() {\n\n\t\t\/\/ Add rel=\"nofollow\" & target=\"_blank\" for external links.\n\t\t$this->add_noopener    = $this->do_filter( 'noopener', true );\n\t\t$this->nofollow_link   = Helper::get_settings( 'general.nofollow_external_links' );\n\t\t$this->nofollow_image  = Helper::get_settings( 'general.nofollow_image_links' );\n\t\t$this->new_window_link = Helper::get_settings( 'general.new_window_external_links' );\n\t\t$this->remove_class    = $this->do_filter( 'link\/remove_class', false );\n\t\t$this->is_dirty        = false;\n\n\t\t\/\/ Filter to run the link attributes function even when Link options are disabled.\n\t\t$this->add_attributes = $this->do_filter( 'link\/add_attributes', $this->nofollow_link || $this->new_window_link || $this->nofollow_image || $this->add_noopener );\n\n\t\tif ( $this->add_attributes || $this->remove_class ) {\n\t\t\t$this->filter( 'the_content', 'add_link_attributes', 11 );\n\t\t}\n\t}\n\n\t\/**\n\t * Add nofollow and target attributes to link.\n\t *\n\t * @param  string $content Post content.\n\t * @return string\n\t *\/\n\tpublic function add_link_attributes( $content ) {\n\t\t\/\/ Early bail if content is empty.\n\t\tif ( empty( $content ) ) {\n\t\t\treturn $content;\n\t\t}\n\t\t$stripped_content = preg_replace( '@<(script|style)[^>]*?>.*?<\/\\\\1>@si', '', $content );\n\t\tpreg_match_all( '\/<(a\\s[^>]+)>\/', $stripped_content, $matches );\n\t\tif ( empty( $matches ) || empty( $matches[0] ) ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\tforeach ( $matches[0] as $link ) {\n\t\t\t$attrs = HTML::extract_attributes( $link );\n\n\t\t\tif ( ! $this->can_add_attributes( $attrs ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$attrs = $this->remove_link_class( $attrs );\n\t\t\t$attrs = $this->set_external_attrs( $attrs );\n\n\t\t\tif ( $this->is_dirty ) {\n\t\t\t\t$new     = '<a' . HTML::attributes_to_string( $attrs ) . '>';\n\t\t\t\t$content = str_replace( $link, $new, $content );\n\t\t\t}\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t\/**\n\t * Set rel attribute.\n\t *\n\t * @param array   $attrs    Array which hold rel attribute.\n\t * @param string  $property Property to add.\n\t * @param boolean $append   Append or not.\n\t *\/\n\tprivate function set_rel_attribute( &$attrs, $property, $append ) {\n\t\tif ( empty( $attrs['rel'] ) ) {\n\t\t\t$attrs['rel'] = $property;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $append ) {\n\t\t\t$attrs['rel'] .= ' ' . $property;\n\t\t}\n\t}\n\n\t\/**\n\t * Check if we can do anything\n\t *\n\t * @param array $attrs Array of link attributes.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function can_add_attributes( $attrs ) {\n\t\t\/\/ If link has no href attribute or if the link is not valid then we don't need to do anything.\n\t\tif (\n\t\t\tempty( $attrs['href'] ) ||\n\t\t\t( empty( wp_parse_url( $attrs['href'], PHP_URL_HOST ) ) && ! Url::is_affiliate( $attrs['href'] ) ) ||\n\t\t\t( isset( $attrs['role'] ) && 'button' === $attrs['role'] )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Remove rank-math-link class.\n\t *\n\t * @since 1.0.44.2\n\t *\n\t * @param array $attrs Array of link attributes.\n\t *\n\t * @return array $attrs\n\t *\/\n\tprivate function remove_link_class( $attrs ) {\n\t\tif ( ! $this->remove_class || empty( $attrs['class'] ) || strpos( $attrs['class'], 'rank-math-link' ) === false ) {\n\t\t\treturn $attrs;\n\t\t}\n\n\t\t$this->is_dirty = true;\n\t\t$attrs['class'] = str_replace( 'rank-math-link', '', $attrs['class'] );\n\n\t\tif ( ! trim( $attrs['class'] ) ) {\n\t\t\tunset( $attrs['class'] );\n\t\t}\n\n\t\treturn $attrs;\n\t}\n\n\t\/**\n\t * Set External attributs\n\t *\n\t * @since 1.0.44.2\n\t *\n\t * @param array $attrs Array of link attributes.\n\t *\n\t * @return array $attrs\n\t *\/\n\tprivate function set_external_attrs( $attrs ) {\n\t\tif ( ! $this->add_attributes ) {\n\t\t\treturn $attrs;\n\t\t}\n\n\t\t\/\/ Skip if there is no href or it's a hash link like \"#id\".\n\t\t\/\/ Skip if relative link.\n\t\t\/\/ Skip for same domain ignoring sub-domain if any.\n\t\tif ( ! Url::is_external( $attrs['href'] ) ) {\n\t\t\treturn $attrs;\n\t\t}\n\n\t\tif ( $this->do_filter( 'nofollow\/url', $this->should_add_nofollow( $attrs['href'] ), $attrs['href'] ) ) {\n\t\t\tif ( $this->nofollow_link || ( $this->nofollow_image && $this->is_valid_image( $attrs['href'] ) ) ) {\n\t\t\t\t$this->is_dirty = true;\n\t\t\t\t$this->set_rel_attribute( $attrs, 'nofollow', ( isset( $attrs['rel'] ) && ! Str::contains( 'dofollow', $attrs['rel'] ) && ! Str::contains( 'nofollow', $attrs['rel'] ) ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->new_window_link && ! isset( $attrs['target'] ) && $this->do_filter( 'target_blank\/domain', Url::get_domain( $attrs['href'] ) ) ) {\n\t\t\t$this->is_dirty  = true;\n\t\t\t$attrs['target'] = '_blank';\n\t\t}\n\n\t\tif ( $this->add_noopener && $this->do_filter( 'noopener\/domain', Url::get_domain( $attrs['href'] ) ) ) {\n\t\t\t$this->is_dirty = true;\n\t\t\t$this->set_rel_attribute( $attrs, 'noopener', ( isset( $attrs['rel'] ) && ! Str::contains( 'noopener', $attrs['rel'] ) ) );\n\t\t}\n\n\t\tif ( Url::is_affiliate( $attrs['href'] ) ) {\n\t\t\t$this->is_dirty = true;\n\t\t\t$this->set_rel_attribute( $attrs, 'sponsored', ( isset( $attrs['rel'] ) && ! Str::contains( 'sponsored', $attrs['rel'] ) ) );\n\t\t}\n\n\t\treturn $attrs;\n\t}\n\n\t\/**\n\t * Check if we need to add nofollow for this link, based on \"nofollow_domains\" & \"nofollow_exclude_domains\"\n\t *\n\t * @param  string $url Link URL.\n\t * @return bool\n\t *\/\n\tprivate function should_add_nofollow( $url ) {\n\t\tif ( ! $this->nofollow_link && ! $this->nofollow_image ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$include_domains = $this->get_nofollow_domains( 'include' );\n\t\t$exclude_domains = $this->get_nofollow_domains( 'exclude' );\n\t\t$parent_domain   = Url::get_domain( $url );\n\t\t$parent_domain   = preg_replace( '\/^www\\.\/', '', $parent_domain );\n\n\t\t\/\/ Check if domain is in list.\n\t\tif ( ! empty( $include_domains ) ) {\n\t\t\treturn in_array( $parent_domain, $include_domains, true );\n\t\t}\n\n\t\t\/\/ Check if domain is NOT in list.\n\t\tif ( ! empty( $exclude_domains ) && in_array( $parent_domain, $exclude_domains, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get domain for nofollow\n\t *\n\t * @param  string $type Type either include or exclude.\n\t * @return array\n\t *\/\n\tprivate function get_nofollow_domains( $type ) {\n\t\tstatic $rank_math_nofollow_domains;\n\n\t\tif ( isset( $rank_math_nofollow_domains[ $type ] ) ) {\n\t\t\treturn $rank_math_nofollow_domains[ $type ];\n\t\t}\n\n\t\t$setting = 'include' === $type ? 'nofollow_domains' : 'nofollow_exclude_domains';\n\t\t$domains = Helper::get_settings( \"general.{$setting}\" );\n\t\t$domains = Str::to_arr_no_empty( $domains );\n\n\t\t\/\/ Strip off www. prefixes.\n\t\t$domains = array_map(\n\t\t\tfunction ( $domain ) {\n\t\t\t\t$domain = preg_replace( '#^http(s)?:\/\/#', '', trim( $domain, '\/' ) );\n\t\t\t\treturn preg_replace( '\/^www\\.\/', '', $domain );\n\t\t\t},\n\t\t\t$domains\n\t\t);\n\n\t\t$rank_math_nofollow_domains[ $type ] = $domains;\n\n\t\treturn $rank_math_nofollow_domains[ $type ];\n\t}\n\n\t\/**\n\t * Is a valid image url.\n\t *\n\t * @param string $url Image url.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_valid_image( $url ) {\n\t\tforeach ( [ '.jpg', '.jpeg', '.png', '.gif' ] as $ext ) {\n\t\t\tif ( Str::contains( $ext, $url ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-redirection.php","ext":"php","size":2206,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The class handles redirection of attachment & archive pages\n *\n * @since      1.0.216\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Add Link_Attributes class.\n *\/\nclass Redirection {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_module_active( 'redirections' ) ) {\n\t\t\t$this->filter( 'rank_math\/redirection\/pre_search', 'pre_redirection' );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'wp', 'redirect' );\n\t}\n\n\t\/**\n\t * Pre-filter the redirection.\n\t *\n\t * @param string $check Check.\n\t *\n\t * @return string|array\n\t *\/\n\tpublic function pre_redirection( $check ) {\n\t\tif ( $new_link = $this->get_redirection_url() ) { \/\/ phpcs:ignore\n\t\t\treturn [\n\t\t\t\t'url_to'      => $new_link,\n\t\t\t\t'header_code' => 301,\n\t\t\t];\n\t\t}\n\n\t\treturn $check;\n\t}\n\n\t\/**\n\t * Redirect product with base to the new link.\n\t *\/\n\tpublic function redirect() {\n\t\tif ( $link = $this->get_redirection_url() ) { \/\/ phpcs:ignore\n\t\t\tHelper::redirect( $link, 301 );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Get Redirection URL.\n\t *\n\t * @return string Modified URL\n\t *\/\n\tprivate function get_redirection_url() {\n\t\t\/\/ Redirect attachment page to parent post.\n\t\tif ( is_attachment() && Helper::get_settings( 'general.attachment_redirect_urls', true ) ) {\n\t\t\tglobal $post;\n\n\t\t\t$redirect = ! empty( $post->post_parent ) ? get_permalink( $post->post_parent ) : Helper::get_settings( 'general.attachment_redirect_default' );\n\t\t\tif ( ! $redirect ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t\/**\n\t\t\t * Redirect attachment to its parent post.\n\t\t\t *\n\t\t\t * @param string  $redirect URL as calculated for redirection.\n\t\t\t * @param WP_Post $post     Current post instance.\n\t\t\t *\/\n\t\t\treturn $this->do_filter( 'frontend\/attachment\/redirect_url', $redirect, $post );\n\t\t}\n\n\t\t\/\/ Redirect archives.\n\t\tglobal $wp_query;\n\t\tif (\n\t\t\t( Helper::get_settings( 'titles.disable_date_archives' ) && $wp_query->is_date ) ||\n\t\t\t( true === Helper::get_settings( 'titles.disable_author_archives' ) && $wp_query->is_author )\n\t\t) {\n\t\t\treturn get_bloginfo( 'url' );\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/frontend\/class-breadcrumbs.php","ext":"php","size":17989,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Breadcrumbs.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Frontend\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2015, WooCommerce\n * The following code is a derivative work of the code from the WooCommerce(https:\/\/github.com\/woocommerce\/woocommerce\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Frontend;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Security;\nuse WP_Error;\nuse WP_Term;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Breadcrumbs class.\n *\/\nclass Breadcrumbs {\n\n\tuse Hooker;\n\n\t\/**\n\t * Breadcrumb trail.\n\t *\n\t * @var array\n\t *\/\n\tprivate $crumbs = [];\n\n\t\/**\n\t * Breadcrumb settings.\n\t *\n\t * @var array\n\t *\/\n\tprivate $settings = [];\n\n\t\/**\n\t * String.\n\t *\n\t * @var array\n\t *\/\n\tprivate $strings = [];\n\n\t\/**\n\t * Get an instance of the class.\n\t *\n\t * @return Breadcrumb The instancec.\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\t$instance = false;\n\t\tif ( Helper::is_breadcrumbs_enabled() && false === $instance ) {\n\t\t\t$instance = new Breadcrumbs();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Convenience method to output as string.\n\t *\n\t * @return string\n\t *\/\n\tpublic function __toString() {\n\t\treturn $this->get_breadcrumb();\n\t}\n\n\t\/**\n\t * The Constructor\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function __construct() {\n\t\t$this->settings = wp_parse_args(\n\t\t\t$this->do_filter( 'frontend\/breadcrumb\/settings', [] ),\n\t\t\t[\n\t\t\t\t'home'            => Helper::get_settings( 'general.breadcrumbs_home' ),\n\t\t\t\t'separator'       => Helper::get_settings( 'general.breadcrumbs_separator' ),\n\t\t\t\t'remove_title'    => Helper::get_settings( 'general.breadcrumbs_remove_post_title' ),\n\t\t\t\t'hide_tax_name'   => Helper::get_settings( 'general.breadcrumbs_hide_taxonomy_name' ),\n\t\t\t\t'show_ancestors'  => Helper::get_settings( 'general.breadcrumbs_ancestor_categories' ),\n\t\t\t\t'show_blog'       => Helper::get_settings( 'general.breadcrumbs_blog_page' ),\n\t\t\t\t'show_pagination' => true,\n\t\t\t]\n\t\t);\n\n\t\t$this->strings = wp_parse_args(\n\t\t\t$this->do_filter( 'frontend\/breadcrumb\/strings', [] ),\n\t\t\t[\n\t\t\t\t'prefix'         => Helper::get_settings( 'general.breadcrumbs_prefix' ),\n\t\t\t\t'home'           => Helper::get_settings( 'general.breadcrumbs_home_label' ),\n\t\t\t\t'home_link'      => Helper::get_settings( 'general.breadcrumbs_home_link', home_url() ),\n\t\t\t\t'error404'       => Helper::get_settings( 'general.breadcrumbs_404_label' ),\n\t\t\t\t\/* translators: search query *\/\n\t\t\t\t'search_format'  => Helper::get_settings( 'general.breadcrumbs_search_format' ),\n\t\t\t\t\/* translators: archive title *\/\n\t\t\t\t'archive_format' => Helper::get_settings( 'general.breadcrumbs_archive_format' ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the breadcrumbs.\n\t *\n\t * @param array $args Arguments.\n\t * @return string\n\t *\/\n\tpublic function get_breadcrumb( $args = [] ) {\n\t\t$args = $this->do_filter(\n\t\t\t'frontend\/breadcrumb\/args',\n\t\t\twp_parse_args(\n\t\t\t\t$args,\n\t\t\t\t[\n\t\t\t\t\t'separator'   => $this->settings['separator'],\n\t\t\t\t\t'wrap_before' => '<nav aria-label=\"breadcrumbs\" class=\"rank-math-breadcrumb\"><p>',\n\t\t\t\t\t'wrap_after'  => '<\/p><\/nav>',\n\t\t\t\t\t'before'      => '',\n\t\t\t\t\t'after'       => '',\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\n\t\t$html   = '';\n\t\t$crumbs = $this->get_crumbs();\n\n\t\t$remove_title = ( is_single() || is_page() ) && $this->settings['remove_title'];\n\t\tif ( $remove_title ) {\n\t\t\tarray_pop( $crumbs );\n\t\t}\n\t\t$size = count( $crumbs );\n\n\t\tif ( ! empty( $this->strings['prefix'] ) ) {\n\t\t\t$html .= \\sprintf( '<span class=\"label\">%s<\/span> ', $this->strings['prefix'] );\n\t\t}\n\n\t\tforeach ( $crumbs as $key => $crumb ) {\n\t\t\t$link = ! empty( $crumb[1] ) && ( $remove_title || $size !== $key + 1 );\n\t\t\t$link = $link ? '<a href=\"' . esc_url( $crumb[1] ) . '\">' . esc_html( $crumb[0] ) . '<\/a>' :\n\t\t\t\t'<span class=\"last\">' . esc_html( $crumb[0] ) . '<\/span>';\n\n\t\t\t$html .= wp_kses_post( $args['before'] ) . $link . wp_kses_post( $args['after'] );\n\n\t\t\tif ( $size !== $key + 1 ) {\n\t\t\t\t$html .= '<span class=\"separator\"> ' . wp_kses_post( $args['separator'] ) . ' <\/span>';\n\t\t\t}\n\t\t}\n\n\t\t$html = wp_kses_post( $args['wrap_before'] ) . $html . wp_kses_post( $args['wrap_after'] );\n\n\t\t\/**\n\t\t * Change the breadcrumbs HTML output.\n\t\t *\n\t\t * @param string      $html   HTML output.\n\t\t * @param array       $crumbs The breadcrumbs array.\n\t\t * @param Breadcrumbs $this   Current breadcrumb.\n\t\t *\/\n\t\treturn $this->do_filter( 'frontend\/breadcrumb\/html', wp_kses_post( $html ), $crumbs, $this );\n\t}\n\n\t\/**\n\t * Get the breadrumb trail.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_crumbs() {\n\t\tif ( empty( $this->crumbs ) ) {\n\t\t\t$this->generate();\n\t\t}\n\n\t\t\/**\n\t\t * Change the breadcrumb items.\n\t\t *\n\t\t * @param array       $crumbs The breadcrumbs array.\n\t\t * @param Breadcrumbs $this   Current breadcrumb.\n\t\t *\/\n\t\treturn $this->do_filter( 'frontend\/breadcrumb\/items', $this->crumbs, $this );\n\t}\n\n\t\/**\n\t * Add an item to the breadcrumbs.\n\t *\n\t * @param string $name           Name.\n\t * @param string $link           Link.\n\t * @param bool   $hide_in_schema Don't include in JSON-LD.\n\t *\/\n\tprivate function add_crumb( $name, $link = '', $hide_in_schema = false ) {\n\t\t$this->crumbs[] = [\n\t\t\twp_strip_all_tags( $name ),\n\t\t\t$link,\n\t\t\t'hide_in_schema' => $hide_in_schema,\n\t\t];\n\t}\n\n\t\/**\n\t * Generate the breadcrumb trail.\n\t *\/\n\tprivate function generate() {\n\t\t$conditionals = [\n\t\t\t'is_home',\n\t\t\t'is_404',\n\t\t\t'is_search',\n\t\t\t'is_attachment',\n\t\t\t'is_shop',\n\t\t\t'is_product',\n\t\t\t'is_singular',\n\t\t\t'is_product_category',\n\t\t\t'is_product_tag',\n\t\t\t'is_post_type_archive',\n\t\t\t'is_category',\n\t\t\t'is_tag',\n\t\t\t'is_tax',\n\t\t\t'is_date',\n\t\t\t'is_author',\n\t\t];\n\n\t\t$this->maybe_add_home_crumb();\n\n\t\tif ( ! $this->can_generate() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $conditionals as $conditional ) {\n\t\t\tif ( function_exists( $conditional ) && call_user_func( $conditional ) ) {\n\t\t\t\tcall_user_func( [ $this, 'add_crumbs_' . substr( $conditional, 3 ) ] );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$this->maybe_add_page_crumb();\n\t}\n\n\t\/**\n\t * Can generate breadcrumb.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_generate() {\n\t\treturn (\n\t\t\t! is_front_page() &&\n\t\t\t! (\n\t\t\t\tis_post_type_archive() &&\n\t\t\t\tfunction_exists( 'wc_get_page_id' ) &&\n\t\t\t\tintval( get_option( 'page_on_front' ) ) === wc_get_page_id( 'shop' ) )\n\t\t\t) ||\n\t\t\tis_paged();\n\t}\n\n\t\/**\n\t * Is home trail.\n\t *\/\n\tprivate function add_crumbs_home() {\n\t\t$this->add_crumb( single_post_title( '', false ) );\n\t}\n\n\t\/**\n\t * 404 trail.\n\t *\/\n\tprivate function add_crumbs_404() {\n\t\t$this->add_crumb( $this->strings['error404'] );\n\t}\n\n\t\/**\n\t * Search results trail.\n\t *\/\n\tprivate function add_crumbs_search() {\n\t\t$this->add_crumb( sprintf( $this->strings['search_format'], get_search_query() ), Security::remove_query_arg_raw( 'paged' ) );\n\t}\n\n\t\/**\n\t * Attachment trail.\n\t *\/\n\tprivate function add_crumbs_attachment() {\n\t\tglobal $post;\n\n\t\t$this->add_crumbs_singular( $post->post_parent, get_permalink( $post->post_parent ) );\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'post', get_the_ID(), get_the_title() ), get_permalink() );\n\t}\n\n\t\/**\n\t * Single product trail.\n\t *\/\n\tprivate function add_crumbs_product() {\n\t\tglobal $post;\n\n\t\t$this->prepend_shop_page();\n\t\t$main_tax = Helper::get_settings( 'titles.pt_product_primary_taxonomy' );\n\t\tif ( $main_tax ) {\n\t\t\t$this->maybe_add_primary_term( get_the_terms( $post->ID, $main_tax ) );\n\t\t}\n\n\t\tif ( isset( $post->ID ) ) {\n\t\t\t$this->add_crumb( $this->get_breadcrumb_title( 'post', $post->ID, get_the_title( $post ) ), get_permalink( $post ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Single post trail.\n\t *\n\t * @param int    $post_id   Post ID.\n\t * @param string $permalink Post permalink.\n\t *\/\n\tprivate function add_crumbs_singular( $post_id = 0, $permalink = '' ) {\n\t\t$post      = ! $post_id ? $GLOBALS['post'] : get_post( $post_id );\n\t\t$post_type = get_post_type( $post );\n\t\t$permalink = $permalink ? $permalink : get_permalink( $post );\n\n\t\t$this->add_crumbs_post_type_archive( $post_type );\n\n\t\tif ( ! isset( $post->ID ) || empty( $post->ID ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->maybe_add_blog();\n\t\t$main_tax = Helper::get_settings( 'titles.pt_' . $post_type . '_primary_taxonomy' );\n\t\tif ( isset( $post->post_parent ) && 0 === $post->post_parent && $main_tax ) {\n\t\t\t$this->maybe_add_primary_term( get_the_terms( $post, $main_tax ) );\n\t\t}\n\n\t\tif ( isset( $post->post_parent ) && 0 !== $post->post_parent ) {\n\t\t\t$this->add_post_ancestors( $post );\n\t\t}\n\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'post', $post->ID, get_the_title( $post ) ), $permalink );\n\t}\n\n\t\/**\n\t * Product category trail.\n\t *\/\n\tprivate function add_crumbs_product_category() {\n\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\t$this->prepend_shop_page();\n\t\t$this->maybe_add_term_ancestors( $term );\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'term', $term, $term->name ), get_term_link( $term ) );\n\t}\n\n\t\/**\n\t * Product tag trail.\n\t *\/\n\tprivate function add_crumbs_product_tag() {\n\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\t$this->prepend_shop_page();\n\t\t\/* translators: %s: product tag *\/\n\t\t$this->add_crumb( sprintf( __( 'Products tagged &ldquo;%s&rdquo;', 'rank-math' ), $this->get_breadcrumb_title( 'term', $term, $term->name ) ), get_term_link( $term ) );\n\t}\n\n\t\/**\n\t * Shop trail.\n\t *\/\n\tprivate function add_crumbs_shop() {\n\t\t$shop_page_id = function_exists( 'wc_get_page_id' ) ? wc_get_page_id( 'shop' ) : false;\n\t\tif ( intval( get_option( 'page_on_front' ) ) === $shop_page_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$name = $shop_page_id ? $this->get_breadcrumb_title( 'post', $shop_page_id, get_the_title( $shop_page_id ) ) : '';\n\t\tif ( ! $name ) {\n\t\t\t$post_type = get_post_type_object( 'product' );\n\t\t\t$name      = $post_type->labels->singular_name;\n\t\t}\n\t\t$this->add_crumb( $name, get_post_type_archive_link( 'product' ) );\n\t}\n\n\t\/**\n\t * Post type archive trail.\n\t *\n\t * @param string $post_type Post type.\n\t *\/\n\tprivate function add_crumbs_post_type_archive( $post_type = null ) {\n\t\tif ( ! $post_type ) {\n\t\t\t$post_type = $GLOBALS['wp_query']->get( 'post_type' );\n\t\t}\n\n\t\tif ( 'post' === $post_type ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$type_object = get_post_type_object( $post_type );\n\t\tif ( ! empty( $type_object->has_archive ) ) {\n\t\t\t$this->add_crumb( $type_object->labels->name, get_post_type_archive_link( $post_type ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Category trail.\n\t *\/\n\tprivate function add_crumbs_category() {\n\t\t$this->maybe_add_blog();\n\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\tif ( empty( $term ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->maybe_add_term_ancestors( $term );\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'term', $term, $term->name ), get_term_link( $term ) );\n\t}\n\n\t\/**\n\t * Tag trail.\n\t *\/\n\tprivate function add_crumbs_tag() {\n\t\t$this->maybe_add_blog();\n\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'term', $term, $term->name ), get_term_link( $term ) );\n\t}\n\n\t\/**\n\t * Taxonomies trail.\n\t *\/\n\tprivate function add_crumbs_tax() {\n\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\tif ( ! $this->settings['hide_tax_name'] ) {\n\t\t\t$taxonomy = get_taxonomy( $term->taxonomy );\n\t\t\t$this->add_crumb( $taxonomy->labels->name );\n\t\t}\n\n\t\t$this->maybe_add_term_ancestors( $term );\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'term', $term, $term->name ), get_term_link( $term ) );\n\t}\n\n\t\/**\n\t * Trail for date based archives.\n\t *\/\n\tprivate function add_crumbs_date() {\n\t\tif ( is_year() || is_month() || is_day() ) {\n\t\t\t$this->add_crumb( sprintf( $this->strings['archive_format'], get_the_time( 'Y' ) ), get_year_link( get_the_time( 'Y' ) ) );\n\t\t}\n\t\tif ( is_month() || is_day() ) {\n\t\t\t$this->add_crumb( sprintf( $this->strings['archive_format'], get_the_time( 'F' ) ), get_month_link( get_the_time( 'Y' ), get_the_time( 'm' ) ) );\n\t\t}\n\t\tif ( is_day() ) {\n\t\t\t$this->add_crumb( sprintf( $this->strings['archive_format'], get_the_time( 'd' ) ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Trail for author archives.\n\t *\/\n\tprivate function add_crumbs_author() {\n\t\tglobal $author;\n\n\t\t$userdata = get_userdata( $author );\n\t\tif ( ! $userdata || ! is_object( $userdata ) || ! isset( $userdata->ID ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->add_crumb( sprintf( $this->strings['archive_format'], $this->get_breadcrumb_title( 'user', $userdata->ID, $userdata->display_name ) ) );\n\t}\n\n\t\/**\n\t * Single post trail.\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast (https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\n\t * @param WP_Post $post Post object.\n\t *\/\n\tprivate function add_post_ancestors( $post ) {\n\t\t$ancestors = [];\n\t\tif ( isset( $post->ancestors ) ) {\n\t\t\t$ancestors = is_array( $post->ancestors ) ? array_values( $post->ancestors ) : [ $post->ancestors ];\n\t\t} elseif ( isset( $post->post_parent ) ) {\n\t\t\t$ancestors = [ $post->post_parent ];\n\t\t}\n\n\t\tif ( ! is_array( $ancestors ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$ancestors = array_reverse( $ancestors );\n\t\tforeach ( $ancestors as $ancestor ) {\n\t\t\t$this->add_crumb( $this->get_breadcrumb_title( 'post', $ancestor, get_the_title( $ancestor ) ), get_permalink( $ancestor ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Prepend the shop page to the shop trail.\n\t *\/\n\tprivate function prepend_shop_page() {\n\t\t$shop_page_id = function_exists( 'wc_get_page_id' ) ? wc_get_page_id( 'shop' ) : false;\n\t\t$shop_page    = get_post( $shop_page_id );\n\n\t\t\/\/ If permalinks contain the shop page in the URI prepend the breadcrumb with shop.\n\t\tif ( $shop_page_id && $shop_page && $this->is_using_shop_base( $shop_page ) && intval( get_option( 'page_on_front' ) ) !== $shop_page_id ) {\n\t\t\t$this->add_crumb( $this->get_breadcrumb_title( 'post', $shop_page_id, get_the_title( $shop_page ) ), get_permalink( $shop_page ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Checks if the permalinks product base is using the shop base.\n\t *\n\t * @param \\WP_Post $shop_page The shop page.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_using_shop_base( $shop_page ) {\n\t\t$permalinks         = wc_get_permalink_structure();\n\t\t$is_using_shop_base = isset( $permalinks['product_base'] ) && strstr( $permalinks['product_base'], '\/' . $shop_page->post_name );\n\n\t\t\/**\n\t\t * Allows to filter the \"is using shop base\" condition.\n\t\t *\n\t\t * @param bool True if using shop base or false otherwise.\n\t\t *\/\n\t\treturn $this->do_filter( 'frontend\/breadcrumb\/is_using_shop_base', $is_using_shop_base );\n\t}\n\t\/**\n\t * Get the primary term.\n\t *\n\t * @param WP_Term[]|false|WP_Error $terms Terms attached to the current post.\n\t *\/\n\tprivate function maybe_add_primary_term( $terms ) {\n\t\t\/\/ Early Bail!\n\t\tif ( is_wp_error( $terms ) || empty( $terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Allow changing the primary term output of the breadcrumbs class.\n\t\t *\n\t\t * @param WP_Term $term  Primary term.\n\t\t * @param array   $terms Terms attached to the current post.\n\t\t *\/\n\t\t$term = $this->do_filter( 'frontend\/breadcrumb\/main_term', $terms[0], $terms );\n\t\t$this->maybe_add_term_ancestors( $term );\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'term', $term, $term->name ), get_term_link( $term ) );\n\t}\n\n\t\/**\n\t * Add ancestor taxonomy crumbs to the hierachical taxonomy trails.\n\t *\n\t * @param object $term Term data object.\n\t *\/\n\tprivate function maybe_add_term_ancestors( $term ) {\n\t\t\/\/ Early Bail!\n\t\tif ( ! $this->can_add_term_ancestors( $term ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$ancestors = get_ancestors( $term->term_id, $term->taxonomy );\n\t\t$ancestors = array_reverse( $ancestors );\n\n\t\tforeach ( $ancestors as $ancestor ) {\n\t\t\t$ancestor = get_term( $ancestor, $term->taxonomy );\n\t\t\tif ( ! is_wp_error( $ancestor ) && $ancestor ) {\n\t\t\t\t$this->add_crumb( $this->get_breadcrumb_title( 'term', $ancestor, $ancestor->name ), get_term_link( $ancestor ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Can add ancestor taxonomy crumbs to the hierachical taxonomy trails.\n\t *\n\t * @param object $term Term data object.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_add_term_ancestors( $term ) {\n\t\tif ( empty( $term ) || 0 === $term->parent || false === $this->settings['show_ancestors'] || false === is_taxonomy_hierarchical( $term->taxonomy ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Add a page crumb to paginated trails.\n\t *\n\t * @since 1.0.8\n\t *\/\n\tprivate function maybe_add_page_crumb() {\n\t\tif ( empty( $this->settings['show_pagination'] ) || ! is_paged() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$current_page = get_query_var( 'paged', 1 );\n\t\tif ( $current_page <= 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/* translators: %s expands to the current page number *\/\n\t\t$this->add_crumb( sprintf( esc_html__( 'Page %s', 'rank-math' ), $current_page ), '', true );\n\t}\n\n\t\/**\n\t * Add home label.\n\t *\/\n\tprivate function maybe_add_home_crumb() {\n\t\tif ( ! empty( $this->settings['home'] ) ) {\n\t\t\t$this->add_crumb( $this->strings['home'], $this->strings['home_link'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the Blog Page.\n\t *\n\t * @since 1.0.33\n\t *\/\n\tprivate function maybe_add_blog() {\n\t\t\/\/ Early Bail!\n\t\t$blog_id = get_option( 'page_for_posts' );\n\t\tif ( ! $blog_id || ! $this->can_add_blog() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->add_crumb( $this->get_breadcrumb_title( 'post', $blog_id, get_the_title( $blog_id ) ), get_permalink( $blog_id ) );\n\t}\n\n\t\/**\n\t * Can add Blog page crumb.\n\t *\n\t * @since 1.0.33\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_add_blog() {\n\t\tif ( empty( $this->settings['show_blog'] ) || 'page' !== get_option( 'show_on_front' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! is_singular( 'post' ) && ! is_category() && ! is_tag() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get the breadcrumb title.\n\t *\n\t * @param  string $object_type   Object type.\n\t * @param  int    $object_id     Object ID to get the title for.\n\t * @param  string $default_value Default value to use for title.\n\t * @return string\n\t *\/\n\tprivate function get_breadcrumb_title( $object_type, $object_id, $default_value ) {\n\t\t$title = '';\n\t\tif ( 'post' === $object_type ) {\n\t\t\t$title = Helper::get_post_meta( 'breadcrumb_title', $object_id );\n\t\t} elseif ( 'term' === $object_type ) {\n\t\t\t$title = Helper::get_term_meta( 'breadcrumb_title', $object_id );\n\t\t} elseif ( 'user' === $object_type ) {\n\t\t\t$title = Helper::get_user_meta( 'breadcrumb_title', $object_id );\n\t\t}\n\n\t\treturn $title ? $title : $default_value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-register-options-page.php","ext":"php","size":643,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The option page functionality of the plugin.\n *\n * @since      1.0.250\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Register_Options_Page class.\n *\/\nclass Register_Options_Page {\n\n\t\/**\n\t * The Constructor\n\t *\n\t * @param array $config Array of configuration.\n\t *\/\n\tpublic function __construct( $config ) {\n\t\tif ( ! Helper::is_react_enabled() ) {\n\t\t\tnew CMB2_Options( $config );\n\t\t\treturn;\n\t\t}\n\n\t\t$options_page = new Options( $config );\n\t\t$options_page->register_option_page();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-api.php","ext":"php","size":6688,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The RankMath API.\n *\n * @since      1.5.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse WP_Error;\n\n\/**\n * Api class.\n *\/\nclass Api {\n\n\t\/**\n\t * Rank Math SEO Checkup API.\n\t *\n\t * @var string\n\t *\/\n\tprotected $api_url = 'https:\/\/rankmath.com\/wp-json\/rankmath\/v1\/';\n\n\t\/**\n\t * Was the last request successful.\n\t *\n\t * @var bool\n\t *\/\n\tprotected $is_success = false;\n\n\t\/**\n\t * Last error.\n\t *\n\t * @var string\n\t *\/\n\tprotected $last_error = '';\n\n\t\/**\n\t * Last response.\n\t *\n\t * @var array\n\t *\/\n\tprotected $last_response = [];\n\n\t\/**\n\t * Last response header code.\n\t *\n\t * @var int\n\t *\/\n\tprotected $last_code = 0;\n\n\t\/**\n\t * User agent.\n\t *\n\t * @var string\n\t *\/\n\tprotected $user_agent = '';\n\n\t\/**\n\t * Is blocking.\n\t *\n\t * @var bool\n\t *\/\n\tprotected $is_blocking = true;\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Api\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Api ) ) {\n\t\t\t$instance              = new Api();\n\t\t\t$instance->is_blocking = true;\n\t\t\t$instance->user_agent  = 'RankMath\/' . md5( esc_url( home_url( '\/' ) ) );\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Was the last request successful?\n\t *\n\t * @return bool  True for success, false for failure\n\t *\/\n\tpublic function is_success() {\n\t\treturn $this->is_success;\n\t}\n\n\t\/**\n\t * Get the last error returned by either the network transport, or by the API.\n\t * If something didn't work, this should contain the string describing the problem.\n\t *\n\t * @return  array|false  describing the error\n\t *\/\n\tpublic function get_error() {\n\t\treturn $this->last_error ? $this->last_error : false;\n\t}\n\n\t\/**\n\t * Get an array containing the HTTP headers and the body of the API response.\n\t *\n\t * @return array  Assoc array with keys 'headers' and 'body'\n\t *\/\n\tpublic function get_response() {\n\t\treturn $this->last_response;\n\t}\n\n\t\/**\n\t * Remove registration data and disconnect from RankMath.com.\n\t *\n\t * @param string $username Username.\n\t * @param string $api_key  Api key.\n\t *\/\n\tpublic function deactivate_site( $username, $api_key ) {\n\t\t$this->is_blocking = false;\n\t\t$data              = wp_json_encode(\n\t\t\t[\n\t\t\t\t'username' => $username,\n\t\t\t\t'api_key'  => $api_key,\n\t\t\t\t'site_url' => esc_url( home_url() ),\n\t\t\t]\n\t\t);\n\n\t\t$response = wp_remote_post(\n\t\t\tRANK_MATH_SITE_URL . '\/wp-json\/rankmath\/v1\/deactivateSite',\n\t\t\t[\n\t\t\t\t'body'    => $data,\n\t\t\t\t'headers' => [\n\t\t\t\t\t'Content-Type' => 'application\/json',\n\t\t\t\t],\n\t\t\t],\n\t\t);\n\t}\n\n\t\/**\n\t * Make an HTTP GET request - for retrieving data.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_get( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'GET', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Make an HTTP POST request - for creating and updating items.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_post( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'POST', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Make an HTTP PUT request - for creating new items.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_put( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'PUT', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Make an HTTP DELETE request - for deleting data.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_delete( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'DELETE', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Performs the underlying HTTP request. Not very exciting.\n\t *\n\t * @param string $http_verb The HTTP verb to use: get, post, put, patch, delete.\n\t * @param string $url       URL to do request.\n\t * @param array  $args       Assoc array of parameters to be passed.\n\t * @param int    $timeout    Timeout limit for request in seconds.\n\t *\n\t * @return array|false Assoc array of decoded result.\n\t *\/\n\tprotected function make_request( $http_verb, $url, $args = [], $timeout = 10 ) {\n\t\t$params = [\n\t\t\t'timeout'    => $timeout,\n\t\t\t'method'     => $http_verb,\n\t\t\t'user-agent' => $this->user_agent,\n\t\t\t'blocking'   => $this->is_blocking,\n\t\t];\n\n\t\tif ( ! empty( $args ) && is_array( $args ) ) {\n\t\t\t$params['body'] = $args;\n\t\t}\n\n\t\t$this->reset();\n\t\t$response = wp_remote_request( $this->api_url . $url, $params );\n\t\t$this->determine_success( $response );\n\n\t\treturn $this->format_response( $response );\n\t}\n\n\t\/**\n\t * Decode the response and format any error messages for debugging\n\t *\n\t * @param array|WP_Error $response The response from the curl request.\n\t *\n\t * @return array|false The JSON decoded into an array\n\t *\/\n\tprotected function format_response( $response ) {\n\t\t$this->last_response = $response;\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! empty( $response['body'] ) ) {\n\t\t\treturn json_decode( $response['body'], true );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if the response was successful or a failure. If it failed, store the error.\n\t *\n\t * @param array|WP_Error $response The response from the curl request.\n\t *\/\n\tprotected function determine_success( $response ) {\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$this->last_error = 'WP_Error: ' . $response->get_error_message();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->last_code = wp_remote_retrieve_response_code( $response );\n\t\tif ( in_array( $this->last_code, [ 200, 204 ], true ) ) {\n\t\t\t$this->is_success = true;\n\t\t\treturn;\n\t\t}\n\n\t\t$this->last_error = 'Unknown error, call getLastResponse() to find out what happened.';\n\t}\n\n\t\/**\n\t * Reset request.\n\t *\/\n\tprotected function reset() {\n\t\t$this->last_code     = 0;\n\t\t$this->last_error    = '';\n\t\t$this->is_success    = false;\n\t\t$this->is_blocking   = true;\n\t\t$this->last_response = [\n\t\t\t'body'    => null,\n\t\t\t'headers' => null,\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-header.php","ext":"php","size":4236,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Header for the Rank Math pages\n *\n * @since      1.0.44\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\KB;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin Header class.\n *\n * @codeCoverageIgnore\n *\/\nclass Admin_Header {\n\n\t\/**\n\t * Hold current screen ID.\n\t *\n\t * @var Current screen ID.\n\t *\/\n\tprivate $screen_id = '';\n\n\t\/**\n\t * Display Header.\n\t *\n\t * @param bool $show_breadcrumbs Determines whether to show breadcrumbs or not.\n\t *\/\n\tpublic function display( $show_breadcrumbs ) {\n\t\t$logo_url        = '<a href=\"' . esc_url( Helper::get_admin_url() ) . '\"><i class=\"rm-icon rm-icon-rank-math\"><\/i><\/a>';\n\t\t$this->screen_id = $this->get_current_screen();\n\t\t?>\n\t\t<div class=\"rank-math-header\">\n\t\t\t<div class=\"rank-math-logo\">\n\t\t\t\t<?php echo $logo_url; \/\/ phpcs:ignore ?>\n\t\t\t<\/div>\n\t\t\t<h1 class=\"rank-math-logo-text\">\n\t\t\t\tRank Math SEO\n\t\t\t\t<?php do_action( 'rank_math\/pro_badge' ); ?>\n\t\t\t<\/h1>\n\t\t\t<?php $this->get_search_options(); ?>\n\t\t\t<?php $this->get_mode_selector(); ?>\n\n\t\t\t<?php do_action( 'rank_math\/before_help_link' ); ?>\n\t\t\t<a href=\"<?php echo esc_url( $this->get_help_link() ); ?>\" title=\"<?php esc_attr_e( 'Rank Math Knowledge Base', 'rank-math' ); ?>\" target=\"_blank\" class=\"button rank-math-help\"><i class=\"dashicons dashicons-editor-help\"><\/i><\/a>\n\t\t<\/div>\n\t\t<?php\n\n\t\t\/\/ Breadcrumbs.\n\t\tif ( $show_breadcrumbs ) {\n\t\t\trank_math()->admin->display_admin_breadcrumbs();\n\t\t}\n\t}\n\n\t\/**\n\t * Get Search Options.\n\t *\/\n\tprivate function get_search_options() {\n\t\tif (\n\t\t\t! in_array(\n\t\t\t\t$this->screen_id,\n\t\t\t\t[\n\t\t\t\t\t'rank-math_page_rank-math-options-general',\n\t\t\t\t\t'rank-math_page_rank-math-options-titles',\n\t\t\t\t\t'rank-math_page_rank-math-options-sitemap',\n\t\t\t\t],\n\t\t\t\ttrue\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<div class=\"rank-math-search-options\">\n\t\t\t<div class=\"components-input-control\">\n\t\t\t\t<div class=\"components-input-control__container\">\n\t\t\t\t\t\t<!-- <i class=\"rm-icon rm-icon-search\"><\/i> -->\n\t\t\t\t\t\t<input type=\"search\" class=\"components-input-control__input\" value=\"\" placeholder=\"<?php esc_attr_e( 'Search Options', 'rank-math' ); ?>\" style=\"width: 100%;\">\n\t\t\t\t\t\t<!-- <em class=\"clear-search dashicons dashicons-no-alt\"><\/em> -->\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get Mode Selector.\n\t *\/\n\tprivate function get_mode_selector() {\n\t\tif (\n\t\t\t! in_array(\n\t\t\t\t$this->screen_id,\n\t\t\t\t[\n\t\t\t\t\t'toplevel_page_rank-math',\n\t\t\t\t\t'rank-math_page_rank-math-status',\n\t\t\t\t],\n\t\t\t\ttrue\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$is_advanced_mode = Helper::is_advanced_mode();\n\t\t?>\n\t\t<div class=\"rank-math-mode-selector\">\n\t\t\t<a href=\"#\" class=\"<?php echo ! $is_advanced_mode ? 'active' : ''; ?>\" data-mode=\"easy\"><?php esc_attr_e( 'Easy Mode', 'rank-math' ); ?><\/a>\n\t\t\t<a href=\"#\" class=\"<?php echo $is_advanced_mode ? 'active' : ''; ?>\" data-mode=\"advanced\"><?php esc_attr_e( 'Advanced Mode', 'rank-math' ); ?><\/a>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get Current Screen ID.\n\t *\/\n\tprivate function get_help_link() {\n\t\t$links = [\n\t\t\t'import-export-settings'     => 'import_export' === Param::get( 'view' ),\n\t\t\t'version-control'            => 'version_control' === Param::get( 'view' ) || 'rank-math-status' === Param::get( 'page' ),\n\t\t\t'general-settings'           => 'rank-math-options-general' === Param::get( 'page' ),\n\t\t\t'titles-meta'                => 'rank-math-options-titles' === Param::get( 'page' ),\n\t\t\t'sitemap-general'            => 'rank-math-options-sitemap' === Param::get( 'page' ),\n\t\t\t'role-manager'               => 'rank-math-role-manager' === Param::get( 'page' ),\n\t\t\t'seo-analysis'               => 'rank-math-seo-analysis' === Param::get( 'page' ),\n\t\t\t'content-ai-restore-credits' => 'rank-math-content-ai-page' === Param::get( 'page' ),\n\t\t];\n\n\t\t$link = KB::get( 'knowledgebase', 'RM Header KB Icon' );\n\t\tforeach ( $links as $key => $value ) {\n\t\t\tif ( $value ) {\n\t\t\t\t$link = KB::get( $key, 'Admin Bar ' . ucwords( str_replace( '-', ' ', $key ) ) );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t\/**\n\t * Get Current Screen ID.\n\t *\/\n\tprivate function get_current_screen() {\n\t\t$screen = get_current_screen();\n\t\tif ( empty( $screen ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $screen->id;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-redirections.php","ext":"php","size":2138,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections Import Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Redirections\\Redirection;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Redirections class.\n *\/\nclass Redirections extends Plugin_Importer {\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name = 'Redirections';\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys = [ 'redirection_options' ];\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices = [ 'redirections' ];\n\n\t\/**\n\t * Import redirections of plugin.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function redirections() {\n\t\tglobal $wpdb;\n\n\t\t$count = 0;\n\t\t$rows  = DB_Helper::get_results( \"SELECT * FROM {$wpdb->prefix}redirection_items\" );\n\n\t\tif ( empty( $rows ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( (array) $rows as $row ) {\n\t\t\t$item = Redirection::from(\n\t\t\t\t[\n\t\t\t\t\t'sources'     => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'pattern'    => $row->url,\n\t\t\t\t\t\t\t'comparison' => empty( $row->regex ) ? 'exact' : 'regex',\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t\t'url_to'      => $this->get_url_to( $row ),\n\t\t\t\t\t'header_code' => $row->action_code,\n\t\t\t\t\t'status'      => 'disabled' === $row->status ? 'inactive' : 'active',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t$id = $item->save();\n\t\t\tif ( false !== $id ) {\n\t\t\t\tdo_action( 'rank_math\/redirection\/after_import', $id, $row );\n\t\t\t\t++$count;\n\t\t\t}\n\t\t}\n\n\t\tHelper::update_modules( [ 'redirections' => 'on' ] );\n\t\treturn compact( 'count' );\n\t}\n\n\t\/**\n\t * Get validated url to value\n\t *\n\t * @param  object $row Current row we are processing.\n\t * @return string\n\t *\/\n\tprivate function get_url_to( $row ) {\n\t\t$data = maybe_unserialize( $row->action_data );\n\t\tif ( is_array( $data ) && ( isset( $data['url'] ) || isset( $data['url_from'] ) ) ) {\n\t\t\treturn isset( $data['url'] ) ? $data['url'] : $data['url_from'];\n\t\t}\n\n\t\tif ( is_string( $row->action_data ) ) {\n\t\t\treturn $row->action_data;\n\t\t}\n\n\t\treturn '\/';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-status.php","ext":"php","size":3273,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Status.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Status class.\n *\/\nclass Status {\n\n\t\/**\n\t * The status.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $status = false;\n\n\t\/**\n\t * The message.\n\t *\n\t * @var string\n\t *\/\n\tprivate $message = '';\n\n\t\/**\n\t * The action being performed.\n\t *\n\t * @var string\n\t *\/\n\tprivate $action;\n\n\t\/**\n\t * Get the status.\n\t *\n\t * @return bool Status.\n\t *\/\n\tpublic function is_success() {\n\t\treturn $this->status;\n\t}\n\n\t\/**\n\t * Get the message.\n\t *\n\t * @return string Status message.\n\t *\/\n\tpublic function get_message() {\n\t\tif ( '' === $this->message ) {\n\t\t\treturn $this->get_default_message();\n\t\t}\n\n\t\treturn $this->message;\n\t}\n\n\t\/**\n\t * Get the action.\n\t *\n\t * @return string Action type.\n\t *\/\n\tpublic function get_action() {\n\t\treturn $this->action;\n\t}\n\n\t\/**\n\t * Set the status.\n\t *\n\t * @param string $status Status.\n\t *\/\n\tpublic function set_status( $status ) {\n\t\t$this->status = $status;\n\t}\n\n\t\/**\n\t * Set the message.\n\t *\n\t * @param string $message Status message.\n\t *\/\n\tpublic function set_message( $message ) {\n\t\t$this->message = $message;\n\t}\n\n\t\/**\n\t * Set the action.\n\t *\n\t * @param string $action Action performing.\n\t *\/\n\tpublic function set_action( $action ) {\n\t\t$this->action = $action;\n\t}\n\n\t\/**\n\t * Get default message.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_default_message() {\n\t\t$hash = [\n\t\t\t'settings'     => esc_html__( 'Settings imported successfully.', 'rank-math' ),\n\t\t\t'news'         => esc_html__( 'News Settings imported successfully.', 'rank-math' ),\n\t\t\t'video'        => esc_html__( 'Video Settings imported successfully.', 'rank-math' ),\n\t\t\t'deactivate'   => esc_html__( 'Plugin deactivated successfully.', 'rank-math' ),\n\t\t\t\/* translators: start, end, total *\/\n\t\t\t'postmeta'     => esc_html__( 'Imported post meta for posts %1$s - %2$s out of %3$s ', 'rank-math' ),\n\t\t\t\/* translators: total *\/\n\t\t\t'termmeta'     => esc_html__( 'Imported term meta for %s terms.', 'rank-math' ),\n\t\t\t\/* translators: start, end, total *\/\n\t\t\t'usermeta'     => esc_html__( 'Imported user meta for users %1$s - %2$s out of %3$s ', 'rank-math' ),\n\t\t\t\/* translators: total *\/\n\t\t\t'redirections' => esc_html__( 'Imported %s redirections.', 'rank-math' ),\n\t\t\t\/* translators: start, end, total *\/\n\t\t\t'blocks'       => esc_html__( 'Imported blocks from posts %1$s - %2$s out of %3$s ', 'rank-math' ),\n\t\t\t\/* translators: start, end, total *\/\n\t\t\t'recalculate'  => esc_html__( 'Recalculating scores for posts %1$s - %2$s... ', 'rank-math' ),\n\t\t];\n\n\t\tif ( false === $this->is_success() ) {\n\t\t\t$hash = [\n\t\t\t\t'settings'     => esc_html__( 'Settings import failed.', 'rank-math' ),\n\t\t\t\t'postmeta'     => esc_html__( 'Posts meta import failed.', 'rank-math' ),\n\t\t\t\t'termmeta'     => esc_html__( 'Term meta import failed.', 'rank-math' ),\n\t\t\t\t'usermeta'     => esc_html__( 'User meta import failed.', 'rank-math' ),\n\t\t\t\t'redirections' => esc_html__( 'There are no redirection to import.', 'rank-math' ),\n\t\t\t\t'blocks'       => esc_html__( 'Blocks import failed.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\treturn isset( $hash[ $this->get_action() ] ) ? $hash[ $this->get_action() ] : '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-plugin-importer.php","ext":"php","size":15273,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The abstract class for plugins import to inherit from\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse Exception;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Meta;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Attachment;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Plugin_Importer class.\n *\/\nabstract class Plugin_Importer {\n\n\tuse Hooker;\n\tuse Ajax;\n\tuse Meta;\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name;\n\n\t\/**\n\t * The plugin file.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_file;\n\n\t\/**\n\t * Plugin options meta key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_key;\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys;\n\n\t\/**\n\t * Table names to drop while cleaning.\n\t *\n\t * @var array\n\t *\/\n\tprotected $table_names;\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices;\n\n\t\/**\n\t * Number of items to parse per page.\n\t *\n\t * @var int\n\t *\/\n\tprotected $items_per_page = 100;\n\n\t\/**\n\t * Pagination arguments.\n\t *\n\t * @var array\n\t *\/\n\tprotected $pagination_args = [];\n\n\t\/**\n\t * General settings.\n\t *\n\t * @var array\n\t *\/\n\tprotected $settings;\n\n\t\/**\n\t * Titles settings.\n\t *\n\t * @var array\n\t *\/\n\tprotected $titles;\n\n\t\/**\n\t * Sitemap settings.\n\t *\n\t * @var array\n\t *\/\n\tprotected $sitemap;\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param string $plugin_file Plugins file.\n\t *\/\n\tpublic function __construct( $plugin_file ) {\n\t\t$this->plugin_file = $plugin_file;\n\t}\n\n\t\/**\n\t * Get the name of the plugin we're importing from.\n\t *\n\t * @return string Plugin name.\n\t *\/\n\tpublic function get_plugin_name() {\n\t\treturn $this->plugin_name;\n\t}\n\n\t\/**\n\t * Get the plugin file of the plugin we're importing from.\n\t *\n\t * @return string Plugin file\n\t *\/\n\tpublic function get_plugin_file() {\n\t\treturn $this->plugin_file;\n\t}\n\n\t\/**\n\t * Get the actions which can be performed for the plugin.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_choices() {\n\t\tif ( empty( $this->choices ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn array_intersect_key(\n\t\t\t[\n\t\t\t\t'settings'     => esc_html__( 'Import Settings', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import plugin settings, global meta, sitemap settings, etc.', 'rank-math' ) ),\n\t\t\t\t'postmeta'     => esc_html__( 'Import Post Meta', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import meta information of your posts\/pages like the focus keyword, titles, descriptions, robots meta, OpenGraph info, etc.', 'rank-math' ) ),\n\t\t\t\t'termmeta'     => esc_html__( 'Import Term Meta', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import data like category, tag, and CPT meta data from SEO.', 'rank-math' ) ),\n\t\t\t\t'usermeta'     => esc_html__( 'Import Author Meta', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import meta information like titles, descriptions, focus keyword, robots meta, etc., of your author archive pages.', 'rank-math' ) ),\n\t\t\t\t'redirections' => esc_html__( 'Import Redirections', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import all the redirections you have already set up in Yoast Premium.', 'rank-math' ) ),\n\t\t\t\t'blocks'       => esc_html__( 'Import Blocks', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import and convert all compatible blocks in post contents.', 'rank-math' ) ),\n\t\t\t\t'locations'    => esc_html__( 'Import Locations', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import Locations Settings from Yoast plugin.', 'rank-math' ) ),\n\t\t\t\t'news'         => esc_html__( 'Import News Settings', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import News Settings from Yoast News Add-on.', 'rank-math' ) ),\n\t\t\t\t'video'        => esc_html__( 'Import Video Sitemap Settings', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import Video Sitemap Settings from Yoast Video Add-on.', 'rank-math' ) ),\n\t\t\t],\n\t\t\tarray_combine(\n\t\t\t\t$this->choices,\n\t\t\t\t$this->choices\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Check if import is needed from this plugin.\n\t *\n\t * @return bool Whether there is something to import.\n\t *\/\n\tpublic function run_detect() {\n\t\treturn true === $this->has_options() ? true : $this->has_postmeta();\n\t}\n\n\t\/**\n\t * Delete all plugin data from the database.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function run_cleanup() {\n\t\tif ( ! $this->run_detect() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$result = $this->drop_custom_tables();\n\t\t$result = $this->clean_meta_table();\n\t\t$result = $this->clean_options();\n\n\t\treturn $result;\n\t}\n\n\t\/**\n\t * Run importer.\n\t *\n\t * @throws Exception Throws error if no perform function founds.\n\t *\n\t * @param string $perform The action to perform when running import action.\n\t *\/\n\tpublic function run_import( $perform ) {\n\t\tif ( ! method_exists( $this, $perform ) ) {\n\t\t\tthrow new Exception( esc_html__( 'Unable to perform action this time.', 'rank-math' ) );\n\t\t}\n\n\t\t\/**\n\t\t * Number of items to import per run.\n\t\t *\n\t\t * @param int $items_per_page Default 100.\n\t\t *\/\n\t\t$this->items_per_page = absint( $this->do_filter( 'importers\/items_per_page', 100 ) );\n\n\t\t$status     = new Status();\n\t\t$result     = $this->$perform();\n\t\t$is_success = is_array( $result ) || true === $result;\n\n\t\t$status->set_action( $perform );\n\t\t$status->set_status( $is_success );\n\t\t$message = $this->format_message( $result, $perform, $status->get_message() );\n\t\tif ( is_scalar( $result ) ) {\n\t\t\t$result = [];\n\t\t}\n\n\t\tif ( $is_success ) {\n\t\t\t$result['message'] = $message;\n\t\t\t$this->success( $result );\n\t\t}\n\n\t\t$result['error'] = $message;\n\t\t$this->error( $result );\n\t}\n\n\t\/**\n\t * Get success message.\n\t *\n\t * @param array  $result  Array of result.\n\t * @param string $action  Action performed.\n\t * @param string $message Message to format.\n\t *\n\t * @return mixed\n\t *\/\n\tprivate function format_message( $result, $action, $message ) {\n\t\tif ( 'blocks' === $action || 'recalculate' === $action ) {\n\t\t\treturn is_array( $result ) ? sprintf( $message, $result['start'], $result['end'], $result['total_items'] ) : $result;\n\t\t}\n\n\t\tif ( 'postmeta' === $action || 'usermeta' === $action ) {\n\t\t\treturn sprintf( $message, $result['start'], $result['end'], $result['total_items'] );\n\t\t}\n\n\t\tif ( 'termmeta' === $action || 'redirections' === $action ) {\n\t\t\treturn sprintf( $message, $result['count'] );\n\t\t}\n\n\t\treturn $message;\n\t}\n\n\t\/**\n\t * Deactivate plugin action.\n\t *\/\n\tprotected function deactivate() {\n\t\tif ( is_plugin_active( $this->get_plugin_file() ) ) {\n\t\t\tdeactivate_plugins( $this->get_plugin_file() );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Replace settings based on key\/value hash.\n\t *\n\t * @param array $hash        Array of hash for search and replace.\n\t * @param array $source      Array for source where to search.\n\t * @param array $destination Array for destination where to save.\n\t * @param bool  $convert     (Optional) Conversion type. Default: false.\n\t *\/\n\tprotected function replace( $hash, $source, &$destination, $convert = false ) {\n\t\tforeach ( $hash as $search => $replace ) {\n\t\t\tif ( ! isset( $source[ $search ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$destination[ $replace ] = false === $convert ? $source[ $search ] : $this->$convert( $source[ $search ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Replace meta based on key\/value hash.\n\t *\n\t * @param array  $hash        Array of hash for search and replace.\n\t * @param array  $source      Array for source where to search.\n\t * @param int    $object_id   Object id for destination where to save.\n\t * @param string $object_type Object type for destination where to save.\n\t * @param bool   $convert     (Optional) Conversion type. Default: false.\n\t *\/\n\tprotected function replace_meta( $hash, $source, $object_id, $object_type, $convert = false ) {\n\t\tforeach ( $hash as $search => $replace ) {\n\t\t\t$value = ! empty( $source[ $search ] ) ? $source[ $search ] : $this->get_meta( $object_type, $object_id, $search );\n\t\t\tif ( empty( $value ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->update_meta(\n\t\t\t\t$object_type,\n\t\t\t\t$object_id,\n\t\t\t\t$replace,\n\t\t\t\tfalse !== $convert ? $this->$convert( $value ) : $value\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Replace an image to its URL and ID.\n\t *\n\t * @param string         $source      Source image url.\n\t * @param array|callable $destination Destination array.\n\t * @param string         $image       Image field key to save url.\n\t * @param string         $image_id    Image id field key to save id.\n\t * @param int            $object_id   Object ID either post ID, term ID or user ID.\n\t *\/\n\tprotected function replace_image( $source, $destination, $image, $image_id, $object_id = null ) {\n\t\tif ( empty( $source ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$attachment_id = Attachment::get_by_url( $source );\n\t\tif ( 1 > $attachment_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_null( $object_id ) ) {\n\t\t\t$destination[ $image ]    = $source;\n\t\t\t$destination[ $image_id ] = $attachment_id;\n\t\t\treturn;\n\t\t}\n\n\t\t$this->update_meta( $destination, $object_id, $image, $source );\n\t\t$this->update_meta( $destination, $object_id, $image_id, $attachment_id );\n\t}\n\n\t\/**\n\t * Convert bool value to switch.\n\t *\n\t * @param mixed $value Value to convert.\n\t * @return string\n\t *\/\n\tprotected function convert_bool( $value ) {\n\t\tif ( true === boolval( $value ) ) {\n\t\t\treturn 'on';\n\t\t}\n\n\t\tif ( false === boolval( $value ) ) {\n\t\t\treturn 'off';\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Set variable that twitter is using facebook data or not.\n\t *\n\t * @param string $object_type Object type for destination where to save.\n\t * @param int    $object_id   Object id for destination where to save.\n\t *\/\n\tprotected function is_twitter_using_facebook( $object_type, $object_id ) {\n\t\t$keys = [\n\t\t\t'rank_math_twitter_title',\n\t\t\t'rank_math_twitter_description',\n\t\t\t'rank_math_twitter_image',\n\t\t];\n\n\t\tforeach ( $keys as $key ) {\n\t\t\tif ( ! empty( $this->get_meta( $object_type, $object_id, $key, true ) ) ) {\n\t\t\t\t$this->update_meta( $object_type, $object_id, 'rank_math_twitter_use_facebook', 'off' );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Convert Yoast \/ AIO SEO variables if needed.\n\t *\n\t * @param string $value Value to convert.\n\t * @return string\n\t *\/\n\tprotected function convert_variables( $value ) {\n\t\treturn str_replace( '%%', '%', $value );\n\t}\n\n\t\/**\n\t * Set pagination arguments.\n\t *\n\t * @param int $total_items Number of total items to set pagination.\n\t *\/\n\tprotected function set_pagination( $total_items = 0 ) {\n\t\t$args = [\n\t\t\t'total_pages' => 0,\n\t\t\t'total_items' => $total_items,\n\t\t\t'per_page'    => $this->items_per_page,\n\t\t];\n\n\t\t\/\/ Total Pages.\n\t\tif ( ! $args['total_pages'] && $args['per_page'] > 0 ) {\n\t\t\t$args['total_pages'] = ceil( $args['total_items'] \/ $args['per_page'] );\n\t\t}\n\n\t\t\/\/ Current Page.\n\t\t$pagenum = Param::request( 'paged', 0, FILTER_VALIDATE_INT );\n\t\tif ( isset( $args['total_pages'] ) && $pagenum > $args['total_pages'] ) {\n\t\t\t$pagenum = $args['total_pages'];\n\t\t}\n\t\t$args['page'] = max( 1, $pagenum );\n\n\t\t\/\/ Start n End.\n\t\t$args['start'] = ( ( $args['page'] - 1 ) * $this->items_per_page ) + 1;\n\t\t$args['end']   = min( $args['page'] * $this->items_per_page, $total_items );\n\n\t\t$this->pagination_args = $args;\n\t}\n\n\t\/**\n\t * Get pagination arguments.\n\t *\n\t * @param bool $key If any specific data is required from arguments.\n\t * @return mixed\n\t *\/\n\tprotected function get_pagination_arg( $key = false ) {\n\t\tif ( false === $key ) {\n\t\t\treturn $this->pagination_args;\n\t\t}\n\n\t\treturn isset( $this->pagination_args[ $key ] ) ? $this->pagination_args[ $key ] : false;\n\t}\n\n\t\/**\n\t * Get all post IDs of all allowed post types only.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprotected function get_post_ids( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB_Helper::query_builder( 'posts' )->whereIn( 'post_type', Helper::get_accessible_post_types() );\n\n\t\treturn $count ? absint( $table->selectCount( 'ID', 'total' )->getVar() ) :\n\t\t\t$table->select( 'ID' )->page( $paged - 1, $this->items_per_page )->get();\n\t}\n\n\t\/**\n\t * Get all user IDs.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprotected function get_user_ids( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB_Helper::query_builder( 'users' );\n\n\t\treturn $count ? absint( $table->selectCount( 'ID', 'total' )->getVar() ) :\n\t\t\t$table->select( 'ID' )->page( $paged - 1, $this->items_per_page )->get();\n\t}\n\n\t\/**\n\t * Get system settings.\n\t *\/\n\tprotected function get_settings() {\n\t\t$all_opts       = rank_math()->settings->all_raw();\n\t\t$this->settings = $all_opts['general'];\n\t\t$this->titles   = $all_opts['titles'];\n\t\t$this->sitemap  = $all_opts['sitemap'];\n\t}\n\n\t\/**\n\t * Update system settings.\n\t *\/\n\tprotected function update_settings() {\n\t\tHelper::update_all_settings(\n\t\t\t$this->settings,\n\t\t\t$this->titles,\n\t\t\t$this->sitemap\n\t\t);\n\t}\n\n\t\/**\n\t * Clean meta table for post, term and user.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function clean_meta_table() {\n\t\tif ( empty( $this->meta_key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$result = false;\n\t\t$result = DB_Helper::query_builder( 'usermeta' )->whereLike( 'meta_key', $this->meta_key )->delete();\n\t\t$result = DB_Helper::query_builder( 'termmeta' )->whereLike( 'meta_key', $this->meta_key )->delete();\n\t\t$result = DB_Helper::query_builder( 'postmeta' )->whereLike( 'meta_key', $this->meta_key )->delete();\n\n\t\treturn $result;\n\t}\n\n\t\/**\n\t * Clean options table.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function clean_options() {\n\t\tif ( empty( $this->option_keys ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$table = DB_Helper::query_builder( 'options' );\n\t\tforeach ( $this->option_keys as $option_key ) {\n\t\t\t$table->orWhereLike( 'option_name', $option_key );\n\t\t}\n\n\t\treturn $table->delete();\n\t}\n\n\t\/**\n\t * Drop custom tables for plugins.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function drop_custom_tables() {\n\t\tglobal $wpdb;\n\t\tif ( empty( $this->table_names ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( $this->table_names as $table ) {\n\t\t\tDB_Helper::query( \"DROP TABLE IF EXISTS {$wpdb->prefix}{$table}\" );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Check if plugin has options.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function has_options() {\n\t\tif ( empty( $this->option_keys ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$table = DB_Helper::query_builder( 'options' )->select( 'option_id' );\n\t\tforeach ( $this->option_keys as $option_key ) {\n\t\t\tif ( '%' === substr( $option_key, -1 ) ) {\n\t\t\t\t$table->orWhereLike( 'option_name', substr( $option_key, 0, -1 ), '' );\n\t\t\t} else {\n\t\t\t\t$table->orWhere( 'option_name', $option_key );\n\t\t\t}\n\t\t}\n\n\t\treturn absint( $table->getVar() ) > 0 ? true : false;\n\t}\n\n\t\/**\n\t * Check if plugin has postmeta.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function has_postmeta() {\n\t\tif ( empty( $this->meta_key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$result = DB_Helper::query_builder( 'postmeta' )->select( 'meta_id' )->whereLike( 'meta_key', $this->meta_key, '' )->getVar();\n\t\treturn absint( $result ) > 0 ? true : false;\n\t}\n\n\t\/**\n\t * Recalculate SEO scores.\n\t *\/\n\tprivate function recalculate() {\n\t\t$this->set_pagination( \\RankMath\\Tools\\Update_Score::get()->find( false ) );\n\n\t\t$return = $this->get_pagination_arg();\n\t\t$data   = \\RankMath\\Tools\\Update_Score::get()->update_seo_score();\n\n\t\t$return['data'] = $data;\n\n\t\treturn $return;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-wp-schema-pro.php","ext":"php","size":22870,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WP Schema Pro Import Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WP_Schema_Pro class.\n *\/\nclass WP_Schema_Pro extends Plugin_Importer {\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name = 'WP Schema Pro';\n\n\t\/**\n\t * Plugin options meta key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_key = 'bsf-aiosrs';\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys = [ 'wp-schema-pro-general-settings', 'wp-schema-pro-social-profiles', 'wp-schema-pro-global-schemas' ];\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices = [ 'settings', 'postmeta' ];\n\n\t\/**\n\t * Convert Schema Pro variables if needed.\n\t *\n\t * @param string $value Value to convert.\n\t *\n\t * @return string\n\t *\/\n\tpublic function convert_variables( $value ) {\n\t\t$value = str_replace( 'blogname', '%sitename%', $value );\n\t\t$value = str_replace( 'blogdescription', '%sitedesc%', $value );\n\t\t$value = str_replace( 'site_url', get_bloginfo( 'url' ), $value );\n\t\t$value = str_replace( 'site_logo', get_theme_mod( 'custom_logo' ), $value );\n\t\t$value = str_replace( 'featured_image', '', $value );\n\t\t$value = str_replace( 'featured_img', '', $value );\n\t\t$value = str_replace( 'post_title', '%seo_title%', $value );\n\t\t$value = str_replace( 'post_excerpt', '%seo_description%', $value );\n\t\t$value = str_replace( 'post_content', '%seo_description%', $value );\n\t\t$value = str_replace( 'post_date', '%date%', $value );\n\t\t$value = str_replace( 'post_modified', '%modified%', $value );\n\t\t$value = str_replace( 'post_permalink', '', $value );\n\t\t$value = str_replace( 'author_name', '%name%', $value );\n\t\t$value = str_replace( 'author_first_name', '%name%', $value );\n\t\t$value = str_replace( 'author_last_name', '%name%', $value );\n\t\t$value = str_replace( 'author_image', '', $value );\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Import settings of plugin.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function settings() {\n\t\t$this->get_settings();\n\n\t\t$schema_general = get_option( 'wp-schema-pro-general-settings' );\n\t\t$schema_social  = get_option( 'wp-schema-pro-social-profiles' );\n\t\t$schema_global  = get_option( 'wp-schema-pro-global-schemas' );\n\n\t\t\/\/ Knowledge Graph Logo.\n\t\tif ( isset( $schema_general['site-logo-custom'] ) ) {\n\t\t\t$this->replace_image( $schema_general['site-logo-custom'], $this->titles, 'knowledgegraph_logo', 'knowledgegraph_logo_id' );\n\t\t}\n\n\t\t\/\/ General.\n\t\t$hash = [ 'site-represent' => 'knowledgegraph_type' ];\n\n\t\t$has_key          = 'person' === $schema_general['site-represent'] ? 'person-name' : 'site-name';\n\t\t$hash[ $has_key ] = 'knowledgegraph_name';\n\t\t$this->replace( $hash, $schema_general, $this->titles );\n\n\t\t$this->titles['local_seo'] = isset( $schema_general['site-represent'] ) && ! empty( $yoast_titles['site-represent'] ) ? 'on' : 'off';\n\n\t\t\/\/ Social.\n\t\t$hash = [\n\t\t\t'facebook' => 'social_url_facebook',\n\t\t\t'twitter'  => 'twitter_author_names',\n\t\t];\n\t\t$this->replace( $hash, $schema_social, $this->titles );\n\n\t\t\/\/ About & Contact Page.\n\t\t$hash = [\n\t\t\t'about-page'   => 'local_seo_about_page',\n\t\t\t'contact-page' => 'local_seo_contact_page',\n\t\t];\n\t\t$this->replace( $hash, $schema_global, $this->titles );\n\n\t\t$this->update_settings();\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Import post meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function postmeta() {\n\t\t$this->set_pagination( $this->get_post_ids( true ) );\n\n\t\tforeach ( $this->get_post_ids() as $snippet_post ) {\n\t\t\t$post_id = $snippet_post->ID;\n\t\t\t$snippet = $this->get_snippet_details( $post_id );\n\t\t\tif ( ! $snippet ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->update_postmeta( $post_id, $snippet );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Update post meta.\n\t *\n\t * @param int   $post_id Post ID.\n\t * @param array $snippet Snippet data.\n\t *\/\n\tprivate function update_postmeta( $post_id, $snippet ) {\n\t\t$type = $snippet['type'];\n\t\t$hash = $this->get_schema_types();\n\t\tif ( ! isset( $hash[ $type ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$details = $snippet['details'];\n\t\t$methods = [\n\t\t\t'work-example' => 'get_book_editions',\n\t\t\t'steps'        => 'get_howto_steps',\n\t\t\t'tool'         => 'get_howto_tools',\n\t\t\t'supply'       => 'get_howto_supplies',\n\t\t\t'rating'       => 'get_rating',\n\t\t];\n\n\t\t$data = [];\n\t\tforeach ( $hash[ $type ] as $snippet_key => $snippet_value ) {\n\t\t\t$method = isset( $methods[ $snippet_key ] ) ? $methods[ $snippet_key ] : 'get_schema_meta';\n\t\t\t$value  = $this->$method( $details, $snippet_key, $post_id, $snippet, $snippet_value );\n\n\t\t\t$this->validate_schema_data( $data, $value, $snippet_value, $snippet_key );\n\t\t}\n\n\t\tif ( ! empty( $data ) ) {\n\t\t\tif ( isset( $data['schema-type'] ) ) {\n\t\t\t\t$type = $data['schema-type'];\n\t\t\t\tunset( $data['schema-type'] );\n\t\t\t}\n\n\t\t\t$type             = $this->sanitize_schema_type( $type );\n\t\t\t$data['@type']    = $type;\n\t\t\t$data['metadata'] = [\n\t\t\t\t'title'     => Helper::sanitize_schema_title( $type ),\n\t\t\t\t'type'      => 'template',\n\t\t\t\t'isPrimary' => 1,\n\t\t\t\t'shortcode' => uniqid( 's-' ),\n\t\t\t];\n\n\t\t\t$type = in_array( $type, [ 'BlogPosting', 'NewsArticle' ], true ) ? 'Article' : $type;\n\t\t\tupdate_post_meta( $post_id, 'rank_math_schema_' . $type, $data );\n\t\t}\n\t}\n\n\t\/**\n\t * Validate schema data.\n\t *\n\t * @param array  $data        Schema entity data.\n\t * @param string $value       Entity value.\n\t * @param string $key         Entity key.\n\t * @param string $snippet_key Snippet key.\n\t *\/\n\tprivate function validate_schema_data( &$data, $value, $key, $snippet_key ) {\n\t\tif ( 'question-answer' === $snippet_key && ! empty( $value ) ) {\n\t\t\tforeach ( $value as $question ) {\n\t\t\t\t$data[ $key ][] = [\n\t\t\t\t\t'@type'          => 'Question',\n\t\t\t\t\t'name'           => $question['question'],\n\t\t\t\t\t'acceptedAnswer' => [\n\t\t\t\t\t\t'@type' => 'Answer',\n\t\t\t\t\t\t'text'  => $question['answer'],\n\t\t\t\t\t],\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Str::contains( '.', $key ) ) {\n\t\t\t$data[ $key ] = $value;\n\t\t\treturn;\n\t\t}\n\n\t\t$element = explode( '.', $key );\n\t\tif ( 2 === count( $element ) ) {\n\t\t\t$this->add_type( $data[ $element[0] ], $element[0] );\n\t\t\t$data[ $element[0] ][ $element[1] ] = $value;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( count( $element ) > 2 ) {\n\t\t\t$this->add_type( $data[ $element[0] ], $element[0] );\n\t\t\t$this->add_type( $data[ $element[0] ][ $element[1] ], $element[1] );\n\t\t\t$data[ $element[0] ][ $element[1] ][ $element[2] ] = $value;\n\t\t}\n\t}\n\n\t\/**\n\t * Add property type.\n\t *\n\t * @param array  $data Schema entity data.\n\t * @param string $key  Entity key.\n\t *\/\n\tprivate function add_type( &$data, $key ) {\n\t\tif ( 'location' === $key || 'jobLocation' === $key ) {\n\t\t\t$data['@type'] = 'Place';\n\t\t}\n\n\t\tif ( 'address' === $key ) {\n\t\t\t$data['@type'] = 'PostalAddress';\n\t\t}\n\n\t\tif ( 'offers' === $key ) {\n\t\t\t$data['@type'] = 'Offer';\n\t\t}\n\n\t\tif ( 'brand' === $key ) {\n\t\t\t$data['@type'] = 'Brand';\n\t\t}\n\n\t\tif ( 'review' === $key ) {\n\t\t\t$data['@type'] = 'Review';\n\t\t}\n\n\t\tif ( 'reviewRating' === $key ) {\n\t\t\t$data['@type'] = 'Rating';\n\t\t}\n\n\t\tif ( 'nutrition' === $key ) {\n\t\t\t$data['@type'] = 'NutritionInformation';\n\t\t}\n\n\t\tif ( 'baseSalary' === $key ) {\n\t\t\t$data['@type'] = 'MonetaryAmount';\n\t\t}\n\n\t\tif ( 'value' === $key ) {\n\t\t\t$data['@type'] = 'QuantitativeValue';\n\t\t}\n\n\t\tif ( 'performer' === $key ) {\n\t\t\t$data['@type'] = 'Person';\n\t\t}\n\n\t\tif ( 'provider' === $key || 'hiringOrganization' === $key ) {\n\t\t\t$data['@type'] = 'Organization';\n\t\t}\n\t}\n\n\t\/**\n\t * Get ratings value.\n\t *\n\t * @param  array  $details       Array of details.\n\t * @param  string $snippet_key   Snippet key.\n\t * @param  string $post_id       Post ID.\n\t * @param  array  $snippet       Snippet data.\n\t * @param  string $snippet_value Snippet value.\n\t * @return string\n\t *\/\n\tprivate function get_rating( $details, $snippet_key, $post_id, $snippet, $snippet_value ) {\n\t\treturn get_post_meta( $post_id, 'bsf-schema-pro-rating-' . $snippet['id'], true );\n\t}\n\n\t\/**\n\t * Get post meta for schema plugin\n\t *\n\t * @param  array  $details       Array of details.\n\t * @param  string $snippet_key   Snippet key.\n\t * @param  string $post_id       Post ID.\n\t * @param  array  $snippet       Snippet data.\n\t * @param  string $snippet_value Snippet value.\n\t * @return string\n\t *\/\n\tprivate function get_schema_meta( $details, $snippet_key, $post_id, $snippet, $snippet_value ) {\n\t\t$value = isset( $details[ $snippet_key ] ) ? $details[ $snippet_key ] : '';\n\t\tif ( 'custom-text' === $value ) {\n\t\t\t$value = isset( $details[ $snippet_key . '-custom-text' ] ) ? $details[ $snippet_key . '-custom-text' ] : '';\n\t\t}\n\n\t\tif ( 'create-field' === $value ) {\n\t\t\t$value = get_post_meta( $post_id, $snippet['type'] . '-' . $snippet['id'] . '-' . $snippet_key, true );\n\t\t}\n\n\t\tif ( 'specific-field' === $value ) {\n\t\t\t$key   = isset( $details[ $snippet_key . '-specific-field' ] ) ? $details[ $snippet_key . '-specific-field' ] : '';\n\t\t\t$value = get_post_meta( $post_id, $key, true );\n\t\t}\n\n\t\treturn $this->convert_variables( $value );\n\t}\n\n\t\/**\n\t * Get Book Editions.\n\t *\n\t * @param  array  $details       Array of details.\n\t * @param  string $snippet_key   Snippet key.\n\t * @param  string $post_id       Post ID.\n\t * @param  array  $snippet       Snippet data.\n\t * @param  string $snippet_value Snippet value.\n\t * @return string\n\t *\/\n\tprivate function get_howto_steps( $details, $snippet_key, $post_id, $snippet, $snippet_value ) {\n\t\t$steps = get_post_meta( $post_id, \"how-to-{$snippet['id']}-steps\", true );\n\t\tif ( empty( $steps ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$data = [];\n\t\tforeach ( $steps as $step ) {\n\t\t\t$entity = [\n\t\t\t\t'@type' => 'HowToStep',\n\t\t\t\t'name'  => $step['name'],\n\t\t\t\t'url'   => $step['url'],\n\t\t\t];\n\n\t\t\tif ( ! empty( $step['description'] ) ) {\n\t\t\t\t$entity['itemListElement'] = [\n\t\t\t\t\t'@type' => 'HowToDirection',\n\t\t\t\t\t'text'  => $step['description'],\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( ! empty( $step['image'] ) ) {\n\t\t\t\t$entity['image'] = [\n\t\t\t\t\t'@type' => 'ImageObject',\n\t\t\t\t\t'text'  => wp_get_attachment_url( $step['image'] ),\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$data[] = $entity;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get Book Editions.\n\t *\n\t * @param  array  $details       Array of details.\n\t * @param  string $snippet_key   Snippet key.\n\t * @param  string $post_id       Post ID.\n\t * @param  array  $snippet       Snippet data.\n\t * @param  string $snippet_value Snippet value.\n\t * @return string\n\t *\/\n\tprivate function get_howto_tools( $details, $snippet_key, $post_id, $snippet, $snippet_value ) {\n\t\t$tools = get_post_meta( $post_id, \"how-to-{$snippet['id']}-tool\", true );\n\t\tif ( empty( $tools ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$data = [];\n\t\tforeach ( $tools as $tool ) {\n\t\t\t$data[] = [\n\t\t\t\t'@type' => 'HowToTool',\n\t\t\t\t'name'  => $tool['name'],\n\t\t\t];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get Book Editions.\n\t *\n\t * @param  array  $details       Array of details.\n\t * @param  string $snippet_key   Snippet key.\n\t * @param  string $post_id       Post ID.\n\t * @param  array  $snippet       Snippet data.\n\t * @param  string $snippet_value Snippet value.\n\t * @return string\n\t *\/\n\tprivate function get_howto_supplies( $details, $snippet_key, $post_id, $snippet, $snippet_value ) {\n\t\t$supplies = get_post_meta( $post_id, \"how-to-{$snippet['id']}-supply\", true );\n\t\tif ( empty( $supplies ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$data = [];\n\t\tforeach ( $supplies as $supply ) {\n\t\t\t$data[] = [\n\t\t\t\t'@type' => 'HowToSupply',\n\t\t\t\t'name'  => $supply['name'],\n\t\t\t];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get Book Editions.\n\t *\n\t * @param  array  $details       Array of details.\n\t * @param  string $snippet_key   Snippet key.\n\t * @param  string $post_id       Post ID.\n\t * @param  array  $snippet       Snippet data.\n\t * @param  string $snippet_value Snippet value.\n\t * @return string\n\t *\/\n\tprivate function get_book_editions( $details, $snippet_key, $post_id, $snippet, $snippet_value ) {\n\t\tif ( empty( $details[ $snippet_key ] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$editions = [];\n\t\t$data     = [\n\t\t\t'details'       => $details,\n\t\t\t'snippet_key'   => $snippet_key,\n\t\t\t'post_id'       => $post_id,\n\t\t\t'snippet'       => $snippet,\n\t\t\t'snippet_value' => $snippet_value,\n\t\t];\n\n\t\tforeach ( $details[ $snippet_key ] as $key => $edition ) {\n\t\t\t$editions[] = [\n\t\t\t\t'book_edition' => $this->normalize_edition( $key . '-book-edition', $edition['book-edition'], $data ),\n\t\t\t\t'isbn'         => $this->normalize_edition( $key . '-serial-number', $edition['serial-number'], $data ),\n\t\t\t\t'url'          => $this->normalize_edition( $key . '-url-template', $edition['url-template'], $data ),\n\t\t\t\t'book_format'  => $this->normalize_edition( $key . '-book-format', $edition['book-format'], $data ),\n\t\t\t];\n\t\t}\n\n\t\treturn $editions;\n\t}\n\n\t\/**\n\t * Normalize Book Edition.\n\t *\n\t * @param  string $key   Custom field key.\n\t * @param  string $value Custom field value.\n\t * @param  array  $data  Snippet data.\n\t * @return string\n\t *\/\n\tprivate function normalize_edition( $key, $value, $data ) {\n\t\tif ( ! $value ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$hash = [\n\t\t\t'custom-text'    => 'get_custom_text',\n\t\t\t'create-field'   => 'get_created_field',\n\t\t\t'specific-field' => 'get_specific_field',\n\t\t];\n\t\tif ( isset( $hash[ $value ] ) ) {\n\t\t\t$method = $hash[ $value ];\n\t\t\t$value  = $this->$method( $key, $value, $data );\n\t\t}\n\n\t\treturn $this->convert_variables( $value );\n\t}\n\n\t\/**\n\t * Get Custom Text added in the Settings.\n\t *\n\t * @param  string $key   Custom field key.\n\t * @param  string $value Custom field value.\n\t * @param  array  $data  Snippet data.\n\t * @return string\n\t *\/\n\tprivate function get_custom_text( $key, $value, $data ) {\n\t\t$key = $data['snippet_key'] . '-custom-text';\n\t\treturn isset( $data['details'][ $key ] ) ? $data['details'][ $key ] : '';\n\t}\n\n\t\/**\n\t * Get Created field value added in the post metabox.\n\t *\n\t * @param  string $key   Custom field key.\n\t * @param  string $value Custom field value.\n\t * @param  array  $data  Snippet data.\n\t * @return string\n\t *\/\n\tprivate function get_created_field( $key, $value, $data ) {\n\t\t$meta_key = $data['snippet']['type'] . '-' . $data['snippet']['id'] . '-' . $data['snippet_key'] . '-' . $key;\n\t\treturn get_post_meta( $data['post_id'], $meta_key, true );\n\t}\n\n\t\/**\n\t * Get Specific Custom field value.\n\t *\n\t * @param  string $key   Custom field key.\n\t * @param  string $value Custom field value.\n\t * @param  array  $data  Snippet data.\n\t * @return string\n\t *\/\n\tprivate function get_specific_field( $key, $value, $data ) {\n\t\t$key = isset( $data['details'][ $data[ $key . '-specific-field' ] ] ) ? $data['details'][ $data[ $key . '-specific-field' ] ] : '';\n\t\treturn get_post_meta( $data['post_id'], $key, true );\n\t}\n\n\t\/**\n\t * Sanitize schema type before saving\n\t *\n\t * @param  string $type Schema type to sanitize.\n\t * @return string\n\t *\/\n\tprivate function sanitize_schema_type( $type ) {\n\t\t$hash = [\n\t\t\t'job-posting'          => 'JobPosting',\n\t\t\t'video-object'         => 'VideoObject',\n\t\t\t'software-application' => 'SoftwareApplication',\n\t\t\t'faq'                  => 'FAQPage',\n\t\t\t'how-to'               => 'HowTo',\n\t\t];\n\n\t\t$type = in_array( $type, [ 'AdvertiserContentArticle', 'Report', 'SatiricalArticle', 'ScholarlyArticle', 'TechArticle' ], true )\n\t\t\t\t? 'Article'\n\t\t\t\t: $type;\n\n\t\treturn isset( $hash[ $type ] ) ? $hash[ $type ] : ucfirst( $type );\n\t}\n\n\t\/**\n\t * Get Snippet Details stored in aiosrs-schema posts\n\t *\n\t * @param int $post_id Post ID.\n\t * @return array\n\t *\/\n\tprivate function get_snippet_details( $post_id ) {\n\t\tglobal $wpdb;\n\n\t\t$post_type = addcslashes( get_post_type( $post_id ), '_' );\n\t\t$query     = \"SELECT p.ID, pm.meta_value FROM {$wpdb->postmeta} as pm\n\t\tINNER JOIN {$wpdb->posts} as p ON pm.post_id = p.ID\n\t\tWHERE pm.meta_key = 'bsf-aiosrs-schema-location'\n\t\tAND p.post_type = 'aiosrs-schema'\n\t\tAND p.post_status = 'publish'\";\n\n\t\t$orderby    = ' ORDER BY p.post_date DESC LIMIT 1';\n\t\t$meta_args  = \"pm.meta_value LIKE '%\\\"basic-global\\\"%'\";\n\t\t$meta_args .= \" OR pm.meta_value LIKE '%\\\"basic-singulars\\\"%'\";\n\t\t$meta_args .= \" OR pm.meta_value LIKE '%\\\"{$post_type}|all\\\"%'\";\n\t\t$meta_args .= \" OR pm.meta_value LIKE '%\\\"post-{$post_id}\\\"%'\";\n\n\t\t$local_posts = DB_Helper::get_col( $query . ' AND (' . $meta_args . ')' . $orderby );\n\t\tif ( empty( $local_posts ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$current_page_data = [];\n\t\tforeach ( $local_posts as $local_post ) {\n\t\t\t$snippet_type = get_post_meta( $local_post, 'bsf-aiosrs-schema-type', true );\n\n\t\t\treturn [\n\t\t\t\t'id'      => $local_post,\n\t\t\t\t'type'    => $snippet_type,\n\t\t\t\t'details' => get_post_meta( $local_post, 'bsf-aiosrs-' . $snippet_type, true ),\n\t\t\t];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get the actions which can be performed for the plugin.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_choices() {\n\t\treturn [\n\t\t\t'settings' => esc_html__( 'Import Settings', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Plugin settings and site-wide meta data.', 'rank-math' ) ),\n\t\t\t'postmeta' => esc_html__( 'Import Schemas', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import all Schema data for Posts, Pages, and custom post types.', 'rank-math' ) ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get schema types\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_schema_types() {\n\t\treturn [\n\t\t\t'event'                => $this->get_event_fields(),\n\t\t\t'job-posting'          => $this->get_job_posting_fields(),\n\t\t\t'product'              => $this->get_product_fields(),\n\t\t\t'recipe'               => $this->get_recipe_fields(),\n\t\t\t'software-application' => $this->get_software_fields(),\n\t\t\t'video-object'         => $this->get_video_fields(),\n\t\t\t'article'              => [\n\t\t\t\t'name'        => 'headline',\n\t\t\t\t'description' => 'description',\n\t\t\t\t'schema-type' => 'schema-type',\n\t\t\t],\n\t\t\t'book'                 => [\n\t\t\t\t'name'         => 'name',\n\t\t\t\t'url'          => 'url',\n\t\t\t\t'author'       => 'author.name',\n\t\t\t\t'work-example' => 'book_editions',\n\t\t\t\t'rating'       => 'review.reviewRating.ratingValue',\n\t\t\t],\n\t\t\t'course'               => [\n\t\t\t\t'name'             => 'name',\n\t\t\t\t'description'      => 'description',\n\t\t\t\t'orgnization-name' => 'provider.name',\n\t\t\t\t'same-as'          => 'provider.sameAs',\n\t\t\t\t'rating'           => 'review.reviewRating.ratingValue',\n\t\t\t],\n\t\t\t'person'               => [\n\t\t\t\t'name'      => 'name',\n\t\t\t\t'email'     => 'email',\n\t\t\t\t'gender'    => 'gender',\n\t\t\t\t'job-title' => 'jobTitle',\n\t\t\t\t'street'    => 'address.streetAddress',\n\t\t\t\t'locality'  => 'address.addressLocality',\n\t\t\t\t'region'    => 'address.addressRegion',\n\t\t\t\t'postal'    => 'address.postalCode',\n\t\t\t\t'country'   => 'address.addressCountry',\n\t\t\t],\n\t\t\t'service'              => [\n\t\t\t\t'name'        => 'name',\n\t\t\t\t'description' => 'description',\n\t\t\t\t'type'        => 'serviceType',\n\t\t\t\t'price-range' => 'offers.price',\n\t\t\t],\n\t\t\t'faq'                  => [\n\t\t\t\t'question-answer' => 'mainEntity',\n\t\t\t],\n\t\t\t'how-to'               => [\n\t\t\t\t'name'        => 'name',\n\t\t\t\t'description' => 'description',\n\t\t\t\t'total-time'  => 'totalTime',\n\t\t\t\t'steps'       => 'step',\n\t\t\t\t'supply'      => 'supply',\n\t\t\t\t'tool'        => 'tool',\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Get event fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_event_fields() {\n\t\treturn [\n\t\t\t'name'                  => 'name',\n\t\t\t'description'           => 'description',\n\t\t\t'schema-type'           => 'schema-type',\n\t\t\t'event-status'          => 'eventStatus',\n\t\t\t'event-attendance-mode' => 'eventAttendanceMode',\n\t\t\t'start-date'            => 'startDate',\n\t\t\t'end-date'              => 'endDate',\n\t\t\t'location'              => 'location.name',\n\t\t\t'location-street'       => 'location.address.streetAddress',\n\t\t\t'location-locality'     => 'location.address.addressLocality',\n\t\t\t'location-region'       => 'location.address.addressRegion',\n\t\t\t'location-postal'       => 'location.address.postalCode',\n\t\t\t'location-country'      => 'location.address.addressCountry',\n\t\t\t'ticket-buy-url'        => 'offers.url',\n\t\t\t'price'                 => 'offers.price',\n\t\t\t'currency'              => 'offers.priceCurrency',\n\t\t\t'avail'                 => 'offers.availability',\n\t\t\t'performer'             => 'performer.name',\n\t\t\t'rating'                => 'review.reviewRating.ratingValue',\n\t\t];\n\t}\n\n\t\/**\n\t * Get job_posting fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_job_posting_fields() {\n\t\treturn [\n\t\t\t'title'             => 'title',\n\t\t\t'description'       => 'description',\n\t\t\t'job-type'          => 'employmentType',\n\t\t\t'start-date'        => 'datePosted',\n\t\t\t'expiry-date'       => 'validThrough',\n\t\t\t'orgnization-name'  => 'hiringOrganization.name',\n\t\t\t'same-as'           => 'hiringOrganization.sameAs',\n\t\t\t'organization-logo' => 'hiringOrganization.logo',\n\t\t\t'location-street'   => 'jobLocation.address.streetAddress',\n\t\t\t'location-locality' => 'jobLocation.address.addressLocality',\n\t\t\t'location-region'   => 'jobLocation.address.addressRegion',\n\t\t\t'location-postal'   => 'jobLocation.address.postalCode',\n\t\t\t'location-country'  => 'jobLocation.address.addressCountry',\n\t\t\t'salary'            => 'baseSalary.value.value',\n\t\t\t'salary-currency'   => 'baseSalary.currency',\n\t\t\t'salary-unit'       => 'baseSalary.value.unitText',\n\t\t];\n\t}\n\n\t\/**\n\t * Get product fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_product_fields() {\n\t\treturn [\n\t\t\t'name'              => 'name',\n\t\t\t'description'       => 'description',\n\t\t\t'sku'               => 'sku',\n\t\t\t'brand-name'        => 'brand.name',\n\t\t\t'price'             => 'offers.price',\n\t\t\t'currency'          => 'offers.priceCurrency',\n\t\t\t'avail'             => 'offers.availability',\n\t\t\t'price-valid-until' => 'offers.priceValidUntil',\n\t\t\t'rating'            => 'review.reviewRating.ratingValue',\n\t\t];\n\t}\n\n\t\/**\n\t * Get recipe fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_recipe_fields() {\n\t\treturn [\n\t\t\t'name'             => 'name',\n\t\t\t'description'      => 'description',\n\t\t\t'recipe-category'  => 'recipeCategory',\n\t\t\t'recipe-cuisine'   => 'recipeCuisine',\n\t\t\t'recipe-yield'     => 'recipeYield',\n\t\t\t'recipe-keywords'  => 'keywords',\n\t\t\t'nutrition'        => 'nutrition.calories',\n\t\t\t'preperation-time' => 'prepTime',\n\t\t\t'cook-time'        => 'cookTime',\n\t\t\t'ingredients'      => 'recipeIngredient',\n\t\t\t'rating'           => 'review.reviewRating.ratingValue',\n\t\t];\n\t}\n\n\t\/**\n\t * Get software fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_software_fields() {\n\t\treturn [\n\t\t\t'name'             => 'name',\n\t\t\t'rating'           => 'review.reviewRating.ratingValue',\n\t\t\t'price'            => 'offers.price',\n\t\t\t'currency'         => 'offers.priceCurrency',\n\t\t\t'operating-system' => 'operatingSystem',\n\t\t\t'category'         => 'applicationCategory',\n\t\t];\n\t}\n\n\t\/**\n\t * Get video fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_video_fields() {\n\t\treturn [\n\t\t\t'name'        => 'name',\n\t\t\t'description' => 'description',\n\t\t\t'content-url' => 'contentUrl',\n\t\t\t'embed-url'   => 'embedUrl',\n\t\t\t'duration'    => 'duration',\n\t\t\t'rating'      => 'review.reviewRating.ratingValue',\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-aio-rich-snippet.php","ext":"php","size":8373,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The AIO Schema Rich Snippets Import Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\DB;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Import_AIO_Rich_Snippet class.\n *\/\nclass AIO_Rich_Snippet extends Plugin_Importer {\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name = 'AIO Schema Rich Snippet';\n\n\t\/**\n\t * Plugin options meta key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_key = '_bsf_post_type';\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys = [ 'bsf_', 'bsf_%' ];\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices = [ 'postmeta' ];\n\n\t\/**\n\t * Import post meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function postmeta() {\n\t\t$this->set_pagination( $this->get_post_ids( true ) );\n\n\t\t\/\/ Set Converter.\n\t\tforeach ( $this->get_post_ids() as $snippet_post ) {\n\t\t\t$type      = $this->is_allowed_type( $snippet_post->meta_value );\n\t\t\t$meta_keys = $this->get_metakeys( $type );\n\t\t\tif ( false === $type || false === $meta_keys ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->set_postmeta( $snippet_post->post_id, $type, $meta_keys );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Set snippet meta.\n\t *\n\t * @param int    $post_id   Post ID.\n\t * @param string $type      Type to get keys for.\n\t * @param array  $meta_keys Array of meta keys to save.\n\t *\/\n\tprivate function set_postmeta( $post_id, $type, $meta_keys ) {\n\t\t$data = [];\n\t\tforeach ( $meta_keys as $snippet_key => $snippet_value ) {\n\t\t\t$value = get_post_meta( $post_id, '_bsf_' . $snippet_key, true );\n\t\t\t$this->validate_schema_data( $data, $value, $snippet_value );\n\t\t}\n\n\t\tif ( empty( $data ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Convert post now.\n\t\t$data['@type']    = $this->validate_type( $type );\n\t\t$data['metadata'] = [\n\t\t\t'title'     => Helper::sanitize_schema_title( $data['@type'] ),\n\t\t\t'type'      => 'template',\n\t\t\t'isPrimary' => 1,\n\t\t\t'shortcode' => uniqid( 's-' ),\n\t\t];\n\n\t\tupdate_post_meta( $post_id, 'rank_math_schema_' . $data['@type'], $data );\n\t}\n\n\t\/**\n\t * Validate schema type.\n\t *\n\t * @param string $type Schema Type.\n\t *\/\n\tprivate function validate_type( $type ) {\n\t\tif ( 'software' === $type ) {\n\t\t\treturn 'SoftwareApplication';\n\t\t}\n\n\t\tif ( 'video' === $type ) {\n\t\t\treturn 'VideoObject';\n\t\t}\n\n\t\treturn ucfirst( $type );\n\t}\n\n\t\/**\n\t * Validate schema data.\n\t *\n\t * @param array  $data  Schema entity data.\n\t * @param string $value Entity value.\n\t * @param string $key   Entity key.\n\t *\/\n\tprivate function validate_schema_data( &$data, $value, $key ) {\n\t\tif ( ! Str::contains( '.', $key ) ) {\n\t\t\t$data[ $key ] = $value;\n\t\t\treturn;\n\t\t}\n\n\t\t$element = explode( '.', $key );\n\t\tif ( 2 === count( $element ) ) {\n\t\t\t$this->add_type( $data[ $element[0] ], $element[0] );\n\t\t\t$data[ $element[0] ][ $element[1] ] = $value;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( count( $element ) > 2 ) {\n\t\t\t$this->add_type( $data[ $element[0] ], $element[0] );\n\t\t\t$this->add_type( $data[ $element[0] ][ $element[1] ], $element[1] );\n\t\t\t$data[ $element[0] ][ $element[1] ][ $element[2] ] = $value;\n\t\t}\n\t}\n\n\t\/**\n\t * Add property type.\n\t *\n\t * @param array  $data Schema entity data.\n\t * @param string $key  Entity key.\n\t *\/\n\tprivate function add_type( &$data, $key ) {\n\t\tif ( 'location' === $key ) {\n\t\t\t$data['@type'] = 'Place';\n\t\t}\n\n\t\tif ( 'address' === $key ) {\n\t\t\t$data['@type'] = 'PostalAddress';\n\t\t}\n\n\t\tif ( 'offers' === $key ) {\n\t\t\t$data['@type'] = 'Offer';\n\t\t}\n\n\t\tif ( 'brand' === $key ) {\n\t\t\t$data['@type'] = 'Brand';\n\t\t}\n\n\t\tif ( 'review' === $key ) {\n\t\t\t$data['@type'] = 'Review';\n\t\t}\n\n\t\tif ( 'reviewRating' === $key ) {\n\t\t\t$data['@type'] = 'Rating';\n\t\t}\n\n\t\tif ( 'nutrition' === $key ) {\n\t\t\t$data['@type'] = 'NutritionInformation';\n\t\t}\n\t}\n\n\t\/**\n\t * Get the actions which can be performed for the plugin.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_choices() {\n\t\treturn [\n\t\t\t'postmeta' => esc_html__( 'Import Schemas', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import all Schema data for Posts, Pages, and custom post types.', 'rank-math' ) ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get all post IDs of all allowed post types only.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprotected function get_post_ids( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB::query_builder( 'postmeta' )->where( 'meta_key', '_bsf_post_type' );\n\n\t\treturn $count ? absint( $table->selectCount( 'meta_id' )->getVar() ) :\n\t\t\t$table->page( $paged - 1, $this->items_per_page )->get();\n\t}\n\n\t\/**\n\t * Get snippet types.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_types() {\n\t\treturn [\n\t\t\t'2'  => 'event',\n\t\t\t'5'  => 'person',\n\t\t\t'6'  => 'product',\n\t\t\t'7'  => 'recipe',\n\t\t\t'8'  => 'software',\n\t\t\t'9'  => 'video',\n\t\t\t'10' => 'article',\n\t\t\t'11' => 'service',\n\t\t];\n\t}\n\n\t\/**\n\t * Is snippet type allowed.\n\t *\n\t * @param string $type Type to check.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_allowed_type( $type ) {\n\t\t$types = $this->get_types();\n\t\treturn isset( $types[ $type ] ) ? $types[ $type ] : false;\n\t}\n\n\t\/**\n\t * Get meta keys hash to import.\n\t *\n\t * @param string $type Type to get keys for.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_metakeys( $type ) {\n\t\t$hash = [\n\t\t\t'event'    => $this->get_event_fields(),\n\t\t\t'product'  => $this->get_product_fields(),\n\t\t\t'recipe'   => $this->get_recipe_fields(),\n\t\t\t'software' => $this->get_software_fields(),\n\t\t\t'video'    => $this->get_video_fields(),\n\t\t\t'article'  => [\n\t\t\t\t'article_name' => 'headline',\n\t\t\t\t'article_desc' => 'description',\n\t\t\t],\n\t\t\t'person'   => [\n\t\t\t\t'people_fn'        => 'name',\n\t\t\t\t'people_nickname'  => 'description',\n\t\t\t\t'people_job_title' => 'jobTitle',\n\t\t\t\t'people_street'    => 'address.streetAddress',\n\t\t\t\t'people_local'     => 'address.addressLocality',\n\t\t\t\t'people_region'    => 'address.addressRegion',\n\t\t\t\t'people_postal'    => 'address.postalCode',\n\t\t\t],\n\t\t\t'service'  => [\n\t\t\t\t'service_type' => 'serviceType',\n\t\t\t\t'service_desc' => 'description',\n\t\t\t],\n\t\t];\n\n\t\treturn isset( $hash[ $type ] ) ? $hash[ $type ] : false;\n\t}\n\n\t\/**\n\t * Get event fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_event_fields() {\n\t\treturn [\n\t\t\t'event_title'        => 'name',\n\t\t\t'event_desc'         => 'description',\n\t\t\t'event_organization' => 'location.name',\n\t\t\t'event_street'       => 'location.address.streetAddress',\n\t\t\t'event_local'        => 'location.address.addressLocality',\n\t\t\t'event_region'       => 'location.address.addressRegion',\n\t\t\t'event_postal_code'  => 'location.address.postalCode',\n\t\t\t'event_start_date'   => 'startDate',\n\t\t\t'event_end_date'     => 'endDate',\n\t\t\t'event_price'        => 'offers.price',\n\t\t\t'event_cur'          => 'offers.priceCurrency',\n\t\t\t'event_ticket_url'   => 'offers.url',\n\t\t];\n\t}\n\n\t\/**\n\t * Get product fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_product_fields() {\n\t\treturn [\n\t\t\t'product_brand'  => 'brand.name',\n\t\t\t'product_name'   => 'name',\n\t\t\t'product_price'  => 'offers.price',\n\t\t\t'product_cur'    => 'offers.priceCurrency',\n\t\t\t'product_status' => 'offers.availability',\n\t\t];\n\t}\n\n\t\/**\n\t * Get recipe fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_recipe_fields() {\n\t\treturn [\n\t\t\t'recipes_name'       => 'name',\n\t\t\t'recipes_desc'       => 'description',\n\t\t\t'recipes_preptime'   => 'prepTime',\n\t\t\t'recipes_cooktime'   => 'cookTime',\n\t\t\t'recipes_totaltime'  => 'totalTime',\n\t\t\t'recipes_ingredient' => 'recipeIngredient',\n\t\t\t'recipes_nutrition'  => 'nutrition.calories',\n\t\t];\n\t}\n\n\t\/**\n\t * Get software fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_software_fields() {\n\t\treturn [\n\t\t\t'software_rating' => 'review.reviewRating.ratingValue',\n\t\t\t'software_price'  => 'offers.price',\n\t\t\t'software_cur'    => 'offers.priceCurrency',\n\t\t\t'software_name'   => 'name',\n\t\t\t'software_os'     => 'operatingSystem',\n\t\t\t'software_cat'    => 'applicationCategory',\n\t\t];\n\t}\n\n\t\/**\n\t * Get video fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_video_fields() {\n\t\treturn [\n\t\t\t'video_title'    => 'name',\n\t\t\t'video_desc'     => 'description',\n\t\t\t'video_thumb'    => 'thumbnailUrl',\n\t\t\t'video_url'      => 'contentUrl',\n\t\t\t'video_emb_url'  => 'embedUrl',\n\t\t\t'video_duration' => 'duration',\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-detector.php","ext":"php","size":5220,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The functionality to detect whether we should import from another SEO plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Detector class.\n *\/\nclass Detector {\n\n\tuse Hooker;\n\n\t\/**\n\t * Plugins we can import from.\n\t *\n\t * @var array\n\t *\/\n\tpublic static $plugins = null;\n\n\t\/**\n\t * Detects whether we can import anything or not.\n\t *\n\t * @return array List of plugins we can import from.\n\t *\/\n\tpublic function detect() {\n\t\t$this->requirements();\n\t\tif ( ! is_null( self::$plugins ) ) {\n\t\t\treturn self::$plugins;\n\t\t}\n\t\tself::$plugins = [];\n\n\t\t$plugins = $this->get();\n\t\tforeach ( $plugins as $slug => $plugin ) {\n\t\t\tif ( ! $this->is_detectable( $plugin, $plugins ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->can_import( $slug, $plugin );\n\t\t}\n\n\t\treturn self::$plugins;\n\t}\n\n\t\/**\n\t * Run import class.\n\t *\n\t * @param Plugin_Importer $importer The importer that needs to perform this action.\n\t * @param string          $action   The action to perform.\n\t * @param string          $perform  The action to perform when running import action.\n\t *\/\n\tpublic function run( $importer, $action = 'detect', $perform = '' ) {\n\t\tif ( 'cleanup' === $action ) {\n\t\t\treturn $importer->run_cleanup();\n\t\t} elseif ( 'import' === $action ) {\n\t\t\treturn $importer->run_import( $perform );\n\t\t}\n\n\t\treturn $importer->run_detect();\n\t}\n\n\t\/**\n\t * Run action by slug.\n\t *\n\t * @param string $slug    The importer slug that needs to perform this action.\n\t * @param string $action  The action to perform.\n\t * @param string $perform The action to perform when running import action.\n\t *\/\n\tpublic static function run_by_slug( $slug, $action, $perform = '' ) {\n\t\t$detector  = new self();\n\t\t$importers = $detector->get();\n\t\tif ( ! isset( $importers[ $slug ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$importer = $importers[ $slug ];\n\t\t$importer = new $importer['class']( $importer['file'] );\n\t\t$status   = $detector->run( $importer, $action, $perform );\n\n\t\treturn \\compact( 'importer', 'status' );\n\t}\n\n\t\/**\n\t * Deactivate all plugins.\n\t *\/\n\tpublic static function deactivate_all() {\n\t\t$detector = new Detector();\n\t\t$plugins  = $detector->get();\n\t\tforeach ( $plugins as $plugin ) {\n\t\t\tdeactivate_plugins( $plugin['file'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the list of available importers.\n\t *\n\t * @return array Available importers.\n\t *\/\n\tpublic function get() {\n\t\treturn $this->do_filter(\n\t\t\t'importers\/detect_plugins',\n\t\t\t[\n\t\t\t\t'yoast'                   => [\n\t\t\t\t\t'class'   => '\\\\RankMath\\\\Admin\\\\Importers\\\\Yoast',\n\t\t\t\t\t'file'    => 'wordpress-seo\/wp-seo.php',\n\t\t\t\t\t'premium' => 'yoast-premium',\n\t\t\t\t],\n\t\t\t\t'seopress'                => [\n\t\t\t\t\t'class' => '\\\\RankMath\\\\Admin\\\\Importers\\\\SEOPress',\n\t\t\t\t\t'file'  => 'wp-seopress\/seopress.php',\n\t\t\t\t],\n\t\t\t\t'aioseo'                  => [\n\t\t\t\t\t'class'   => '\\\\RankMath\\\\Admin\\\\Importers\\\\AIOSEO',\n\t\t\t\t\t'file'    => 'all-in-one-seo-pack\/all_in_one_seo_pack.php',\n\t\t\t\t\t'premium' => 'all-in-one-seo-pack-pro',\n\t\t\t\t],\n\t\t\t\t'all-in-one-seo-pack-pro' => [\n\t\t\t\t\t'class'  => '\\\\RankMath\\\\Admin\\\\Importers\\\\AIOSEO',\n\t\t\t\t\t'file'   => 'all-in-one-seo-pack-pro\/all_in_one_seo_pack.php',\n\t\t\t\t\t'parent' => 'aioseo',\n\t\t\t\t],\n\t\t\t\t'yoast-premium'           => [\n\t\t\t\t\t'class'  => '\\\\RankMath\\\\Admin\\\\Importers\\\\Yoast',\n\t\t\t\t\t'file'   => 'wordpress-seo-premium\/wp-seo-premium.php',\n\t\t\t\t\t'parent' => 'yoast',\n\t\t\t\t],\n\t\t\t\t'aio-rich-snippet'        => [\n\t\t\t\t\t'class' => '\\\\RankMath\\\\Admin\\\\Importers\\\\AIO_Rich_Snippet',\n\t\t\t\t\t'file'  => 'all-in-one-schemaorg-rich-snippets\/index.php',\n\t\t\t\t],\n\t\t\t\t'wp-schema-pro'           => [\n\t\t\t\t\t'class' => '\\\\RankMath\\\\Admin\\\\Importers\\\\WP_Schema_Pro',\n\t\t\t\t\t'file'  => 'wp-schema-pro\/wp-schema-pro.php',\n\t\t\t\t],\n\t\t\t\t'redirections'            => [\n\t\t\t\t\t'class' => '\\\\RankMath\\\\Admin\\\\Importers\\\\Redirections',\n\t\t\t\t\t'file'  => 'redirection\/redirection.php',\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Check requirements.\n\t *\/\n\tprivate function requirements() {\n\t\tif ( ! function_exists( 'is_plugin_active' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/plugin.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\t}\n\n\t\/**\n\t * Can import plugin data.\n\t *\n\t * @param string $slug   Plugin slug.\n\t * @param array  $plugin Plugin data.\n\t *\/\n\tprivate function can_import( $slug, $plugin ) {\n\t\t$importer = new $plugin['class']( $plugin['file'] );\n\t\tif ( $importer->run_detect() ) {\n\t\t\tself::$plugins[ $slug ] = [\n\t\t\t\t'name'     => $importer->get_plugin_name(),\n\t\t\t\t'file'     => $importer->get_plugin_file(),\n\t\t\t\t'choices'  => $importer->get_choices(),\n\t\t\t\t'isActive' => is_plugin_active( $importer->get_plugin_file() ),\n\t\t\t];\n\t\t}\n\t}\n\n\t\/**\n\t * Check if plugin is detectable.\n\t *\n\t * @param array $check   Plugin to check.\n\t * @param array $plugins Plugins data.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_detectable( $check, $plugins ) {\n\t\t\/\/ Check if parent is set.\n\t\tif ( isset( $check['parent'] ) && isset( self::$plugins[ $check['parent'] ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Check if plugin has premium and it is active.\n\t\tif ( isset( $check['premium'] ) && is_plugin_active( $plugins[ $check['premium'] ]['file'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-aioseo.php","ext":"php","size":43284,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The AIO SEO Import Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Redirections\\Redirection;\nuse RankMath\\Helpers\\DB;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * AIOSEO class.\n *\/\nclass AIOSEO extends Plugin_Importer {\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name = 'All In One SEO Pack';\n\n\t\/**\n\t * Plugin options meta key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_key = '_aioseop_';\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys = [ 'aioseo_options' ];\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices = [ 'settings', 'postmeta', 'termmeta', 'usermeta', 'redirections', 'locations' ];\n\n\t\/**\n\t * AIOSEO settings.\n\t *\n\t * @var array\n\t *\/\n\tprivate $aio_settings = [];\n\n\t\/**\n\t * Get the actions which can be performed for the plugin.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_choices() {\n\t\t$choices = [\n\t\t\t'settings' => esc_html__( 'Import Settings', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import AIO SEO plugin settings, global meta, sitemap settings, etc.', 'rank-math' ) ),\n\t\t\t'postmeta' => esc_html__( 'Import Post Meta', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import meta information of your posts\/pages like the titles, descriptions, robots meta, OpenGraph info, etc.', 'rank-math' ) ),\n\t\t\t'usermeta' => esc_html__( 'Import Author Meta', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import Social URLs of your author archive pages.', 'rank-math' ) ),\n\t\t];\n\n\t\tif ( DB::check_table_exists( 'aioseo_terms' ) ) {\n\t\t\t$choices['termmeta'] = esc_html__( 'Import Term Meta', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import meta information of your terms like the titles, descriptions, robots meta, OpenGraph info, etc.', 'rank-math' ) );\n\t\t}\n\n\t\tif ( DB::check_table_exists( 'aioseo_redirects' ) ) {\n\t\t\t$choices['redirections'] = esc_html__( 'Import Redirections', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import all the redirections you have already set up in AIO SEO Premium.', 'rank-math' ) );\n\t\t}\n\n\t\tif ( ! empty( $this->get_location_ids( true ) ) ) {\n\t\t\t$choices['locations'] = esc_html__( 'Import Locations', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Import Locations Settings.', 'rank-math' ) );\n\t\t}\n\n\t\treturn $choices;\n\t}\n\n\t\/**\n\t * Convert Yoast \/ AIO SEO variables if needed.\n\t *\n\t * @param string $value Value to convert.\n\t * @return string\n\t *\/\n\tpublic function convert_variables( $value ) {\n\t\t$value = str_replace( '#site_title', '%sitename%', $value );\n\t\t$value = str_replace( '#tagline', '%sitedesc%', $value );\n\t\t$value = str_replace( '#separator_sa', '%sep%', $value );\n\t\t$value = str_replace( '#post_title', '%title%', $value );\n\t\t$value = str_replace( '#post_excerpt', '%excerpt%', $value );\n\t\t$value = str_replace( '#post_content', '%excerpt%', $value );\n\t\t$value = str_replace( '#taxonomy_description', '%term_description%', $value );\n\t\t$value = str_replace( '#category_description', '%term_description%', $value );\n\t\t$value = str_replace( '#taxonomy_title', '%term%', $value );\n\t\t$value = str_replace( '#category', '%term%', $value );\n\t\t$value = str_replace( '#author_first_name #author_last_name', '%name%', $value );\n\t\t$value = str_replace( '#current_year', '%currentyear%', $value );\n\t\t$value = str_replace( '#current_date', '%currentdate%', $value );\n\t\t$value = str_replace( '#current_day', '%currentday%', $value );\n\t\t$value = str_replace( '#current_month', '%currentmonth%', $value );\n\t\t$value = str_replace( '#post_date', '%date%', $value );\n\t\t$value = str_replace( '#search_term', '%search_query%', $value );\n\t\t$value = str_replace( '#author_link', '%AUTHORLINK%', $value );\n\t\t$value = str_replace( '#post_link', '%POSTLINK%', $value );\n\t\t$value = str_replace( '#site_link', '%BLOGLINK%', $value );\n\t\t$value = str_replace( '#author_name', '%name%', $value );\n\t\t$value = str_replace( '#author_bio', '%user_description%', $value );\n\t\t$value = str_replace( '#archive_date', '%date%', $value );\n\t\t$value = str_replace( '#breadcrumb_archive_post_type_name', '%s', $value );\n\t\t$value = str_replace( '#breadcrumb_search_string', '%s', $value );\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Import settings of plugin.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function settings() {\n\t\t$this->get_settings();\n\t\t$this->aio_settings = json_decode( get_option( 'aioseo_options' ), true );\n\n\t\t$this->general_settings();\n\t\t$this->sitemap_settings();\n\t\t$this->titles_settings();\n\t\t$this->pro_settings();\n\t\t$this->update_settings();\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Imports redirections data.\n\t *\n\t * @return array\n\t *\/\n\tprotected function redirections() {\n\t\t$count        = 0;\n\t\t$table        = DB::query_builder( 'aioseo_redirects' );\n\t\t$redirections = $table->select( '*' )->get();\n\n\t\tif ( empty( $redirections ) ) {\n\t\t\treturn compact( 'count' );\n\t\t}\n\n\t\tHelper::update_modules( [ 'redirections' => 'on' ] );\n\t\tforeach ( $redirections as $redirection ) {\n\t\t\tif ( false !== $this->save_redirection( (array) $redirection ) ) {\n\t\t\t\t++$count;\n\t\t\t}\n\t\t}\n\n\t\treturn compact( 'count' );\n\t}\n\n\t\/**\n\t * Save redirection.\n\t *\n\t * @param array $redirection Redirection object.\n\t *\n\t * @return mixed\n\t *\/\n\tprivate function save_redirection( $redirection ) {\n\t\tif (\n\t\t\tempty( $redirection['source_url'] ) ||\n\t\t\tempty( $redirection['type'] ) ||\n\t\t\t! in_array( $redirection['type'], [ '301', '302', '307', '410', '451' ], true )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$item = Redirection::from(\n\t\t\t[\n\t\t\t\t'sources'     => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'ignore'     => ! empty( $redirection['ignore_case'] ) ? 'case' : '',\n\t\t\t\t\t\t'pattern'    => $redirection['source_url'],\n\t\t\t\t\t\t'comparison' => isset( $redirection['source_url_match'] ) && 'regex' === $redirection['source_url_match'] ? 'regex' : 'exact',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'url_to'      => isset( $redirection['target_url'] ) ? $redirection['target_url'] : '',\n\t\t\t\t'header_code' => isset( $redirection['type'] ) ? $redirection['type'] : '301',\n\t\t\t\t'status'      => empty( $redirection['enabled'] ) ? 'inactive' : 'active',\n\t\t\t]\n\t\t);\n\n\t\treturn $item->save();\n\t}\n\n\t\/**\n\t * Import General Settings.\n\t *\/\n\tprivate function general_settings() {\n\t\tif ( ! empty( $this->aio_settings['rssContent'] ) ) {\n\t\t\t$hash = [\n\t\t\t\t'before' => 'rss_before_content',\n\t\t\t\t'after'  => 'rss_after_content',\n\t\t\t];\n\t\t\t$this->replace( $hash, $this->aio_settings['rssContent'], $this->settings, 'convert_variables' );\n\t\t}\n\n\t\tif ( ! empty( $this->aio_settings['breadcrumbs'] ) ) {\n\t\t\t$hash = [\n\t\t\t\t'enable'             => 'breadcrumbs',\n\t\t\t\t'separator'          => 'breadcrumbs_separator',\n\t\t\t\t'homepageLabel'      => 'breadcrumbs_home_label',\n\t\t\t\t'breadcrumbPrefix'   => 'breadcrumbs_prefix',\n\t\t\t\t'archiveFormat'      => 'breadcrumbs_archive_format',\n\t\t\t\t'searchResultFormat' => 'breadcrumbs_search_format',\n\t\t\t\t'errorFormat404'     => 'breadcrumbs_404_label',\n\t\t\t\t'showCurrentItem'    => 'breadcrumbs_remove_post_title',\n\t\t\t];\n\t\t\t$this->replace( $hash, $this->aio_settings['breadcrumbs'], $this->settings, 'convert_variables' );\n\t\t\t$this->replace( [ 'homepageLink' => 'breadcrumbs_home' ], $this->aio_settings['breadcrumbs'], $this->settings, 'convert_bool' );\n\t\t}\n\n\t\tif ( ! empty( $this->aio_settings['webmasterTools'] ) ) {\n\t\t\t$hash = [\n\t\t\t\t'google'    => 'google_verify',\n\t\t\t\t'bing'      => 'bing_verify',\n\t\t\t\t'baidu'     => 'baidu_verify',\n\t\t\t\t'yandex'    => 'yandex_verify',\n\t\t\t\t'pinterest' => 'pinterest_verify',\n\t\t\t];\n\t\t\t$this->replace( $hash, $this->aio_settings['webmasterTools'], $this->settings );\n\t\t}\n\t}\n\n\t\/**\n\t * Sitemap settings.\n\t *\/\n\tprivate function sitemap_settings() {\n\t\tif ( empty( $this->aio_settings['sitemap'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$sitemap_settings = $this->aio_settings['sitemap'];\n\t\t$general          = ! empty( $sitemap_settings['general'] ) ? $sitemap_settings['general'] : [];\n\t\tif ( empty( $general ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Sitemap.\n\t\tif ( isset( $general['enable'] ) ) {\n\t\t\tHelper::update_modules( [ 'sitemap' => 'on' ] );\n\t\t}\n\n\t\t$this->sitemap['items_per_page'] = $general['linksPerIndex'];\n\n\t\t$all = ! empty( $general['postTypes']['all'] );\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\t$this->sitemap[ \"pt_{$post_type}_sitemap\" ] = $all || in_array( $post_type, $general['postTypes']['included'], true ) ? 'on' : 'off';\n\t\t}\n\n\t\t$all = ! empty( $general['taxonomies']['all'] );\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy => $object ) {\n\t\t\t$this->sitemap[ \"tax_{$taxonomy}_sitemap\" ] = $all || in_array( $taxonomy, $general['taxonomies']['included'], true ) ? 'on' : 'off';\n\t\t}\n\n\t\tif ( ! empty( $general['advancedSettings'] ) ) {\n\t\t\t$this->sitemap_advanced_settings( $general['advancedSettings'] );\n\t\t}\n\n\t\t\/\/ HTML Sitemap.\n\t\tif ( isset( $sitemap_settings['html'] ) ) {\n\t\t\t$this->html_sitemap_settings( $sitemap_settings['html'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Import Pro Settings.\n\t *\/\n\tprivate function pro_settings() {\n\t\t$settings = get_option( 'aioseo_options_pro' );\n\t\tif ( empty( $settings ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$settings = json_decode( $settings, true );\n\t\t$this->news_sitemap_settings( $settings );\n\t\t$this->video_sitemap_settings( $settings );\n\t\t$this->image_seo_settings( $settings );\n\t\t$this->local_seo_settings( $settings );\n\t}\n\n\t\/**\n\t * Import Local SEO Settings.\n\t *\n\t * @param array $settings Pro Settings.\n\t *\/\n\tprivate function local_seo_settings( $settings ) {\n\t\tif ( empty( $settings['localBusiness'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::update_modules( [ 'local-seo' => 'on' ] );\n\t\t$local_settings = $settings['localBusiness'];\n\t\t$business       = $local_settings['locations']['business'];\n\n\t\t$hash = [\n\t\t\t'name'         => 'knowledgegraph_name',\n\t\t\t'image'        => 'knowledgegraph_logo',\n\t\t\t'businessType' => 'local_business_type',\n\t\t];\n\t\t$this->replace( $hash, $business, $this->titles );\n\t\t$this->titles['url'] = $business['urls']['website'];\n\n\t\t\/\/ Street Address.\n\t\t$address = [];\n\t\t$hash    = [\n\t\t\t'streetLine1' => 'streetAddress',\n\t\t\t'city'        => 'addressLocality',\n\t\t\t'state'       => 'addressRegion',\n\t\t\t'zipCode'     => 'postalCode',\n\t\t\t'country'     => 'addressCountry',\n\t\t];\n\t\t$this->replace( $hash, $business['address'], $address );\n\t\tif ( ! empty( $business['address']['streetLine2'] ) ) {\n\t\t\t$address['streetAddress'] = $address['streetAddress'] . ', ' . $business['address']['streetLine2'];\n\t\t}\n\t\t$this->titles['local_address'] = $address;\n\n\t\tif ( ! empty( $business['contact'] ) ) {\n\t\t\t$this->titles['email'] = $business['contact']['email'];\n\n\t\t\t$this->titles['phone_numbers'][] = [\n\t\t\t\t'type'   => 'customer support',\n\t\t\t\t'number' => $business['contact']['phone'],\n\t\t\t];\n\t\t}\n\n\t\tif ( ! empty( $business['payment'] ) ) {\n\t\t\t$this->titles['price_range'] = $business['payment']['priceRange'];\n\t\t}\n\n\t\tif ( ! empty( $local_settings['openingHours'] ) ) {\n\t\t\t$this->add_opening_hours( $local_settings['openingHours'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Import Opening Hours Settings.\n\t *\n\t * @param array $opening_hours Opening Hours.\n\t *\/\n\tprivate function add_opening_hours( $opening_hours ) {\n\t\t$data = [];\n\t\tforeach ( $opening_hours['days'] as $day => $opening_hour ) {\n\t\t\tif ( ! empty( $opening_hour['closed'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data[] = [\n\t\t\t\t'day'  => ucfirst( $day ),\n\t\t\t\t'time' => $opening_hour['openTime'] . '-' . $opening_hour['closeTime'],\n\t\t\t];\n\t\t}\n\n\t\t$this->titles['opening_hours'] = $data;\n\t}\n\n\t\/**\n\t * Import Image SEO Settings.\n\t *\n\t * @param array $settings Pro Settings.\n\t *\/\n\tprivate function image_seo_settings( $settings ) {\n\t\tif ( empty( $settings['image']['format'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::update_modules( [ 'image-seo' => 'on' ] );\n\t\t$format = $settings['image']['format'];\n\t\tif ( ! empty( $format['title'] ) ) {\n\t\t\t$this->settings['add_img_title'] = $this->convert_variables( $format['title'] );\n\t\t}\n\n\t\tif ( ! empty( $format['altTag'] ) ) {\n\t\t\t$this->settings['add_img_title'] = $this->convert_variables( $format['altTag'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Import Video Sitemap Settings.\n\t *\n\t * @param array $settings Pro Settings.\n\t *\/\n\tprivate function video_sitemap_settings( $settings ) {\n\t\tif ( empty( $settings['sitemap']['video'] ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$video_settings = $settings['sitemap']['video'];\n\t\tif ( ! empty( $video_settings['enable'] ) ) {\n\t\t\tHelper::update_modules( [ 'video-sitemap' => 'on' ] );\n\t\t}\n\n\t\t$this->sitemap['video_sitemap_post_type'] = $video_settings['postTypes']['all'] ? array_keys( Helper::get_accessible_post_types() ) : $video_settings['postTypes']['included'];\n\t}\n\n\t\/**\n\t * Import News Sitemap Settings.\n\t *\n\t * @param array $settings Pro Settings.\n\t *\/\n\tprivate function news_sitemap_settings( $settings ) {\n\t\tif ( empty( $settings['sitemap']['news'] ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$news_settings = $settings['sitemap']['news'];\n\t\tif ( ! empty( $news_settings['enable'] ) ) {\n\t\t\tHelper::update_modules( [ 'news-sitemap' => 'on' ] );\n\t\t}\n\n\t\t$this->sitemap['news_sitemap_publication_name'] = ! empty( $news_settings['publicationName'] ) ? $news_settings['publicationName'] : '';\n\t\t$this->sitemap['news_sitemap_post_type']        = $news_settings['postTypes']['all'] ? array_keys( Helper::get_accessible_post_types() ) : $news_settings['postTypes']['included'];\n\t}\n\n\t\/**\n\t * Import Sitemap Advanced Settings.\n\t *\n\t * @param array $settings Sitemap Settings.\n\t *\/\n\tprivate function sitemap_advanced_settings( $settings ) {\n\t\tif ( ! empty( $settings['excludePosts'] ) ) {\n\t\t\t$exclude_posts = [];\n\t\t\tforeach ( $settings['excludePosts'] as $exclude_post ) {\n\t\t\t\t$exclude_post    = json_decode( $exclude_post, true );\n\t\t\t\t$exclude_posts[] = ! empty( $exclude_post['value'] ) ? $exclude_post['value'] : '';\n\t\t\t}\n\n\t\t\t$this->sitemap['exclude_posts'] = implode( ', ', $exclude_posts );\n\t\t}\n\n\t\tif ( ! empty( $settings['excludeTerms'] ) ) {\n\t\t\t$exclude_terms = [];\n\t\t\tforeach ( $settings['excludeTerms'] as $exclude_term ) {\n\t\t\t\t$exclude_term    = json_decode( $exclude_term, true );\n\t\t\t\t$exclude_terms[] = ! empty( $exclude_term['value'] ) ? $exclude_term['value'] : '';\n\t\t\t}\n\n\t\t\t$this->sitemap['exclude_terms'] = $exclude_terms;\n\t\t}\n\n\t\t$this->sitemap['include_images'] = ! empty( $settings['excludeImages'] ) ? 'off' : 'on';\n\t}\n\n\t\/**\n\t * Import HTML Sitemap Settings.\n\t *\n\t * @param array $settings HTML Settings.\n\t *\/\n\tprivate function html_sitemap_settings( $settings ) {\n\t\tif ( empty( $settings ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->sitemap['html_sitemap']         = $settings['enable'] ? 'on' : 'off';\n\t\t$this->sitemap['html_sitemap_display'] = empty( $settings['pageUrl'] ) ? 'shortcode' : 'page';\n\t\tif ( ! empty( $settings['pageUrl'] ) ) {\n\t\t\t$page = get_page_by_path( basename( $settings['pageUrl'] ) );\n\t\t\tif ( ! empty( $page ) ) {\n\t\t\t\t$this->sitemap['html_sitemap_page'] = $page->ID;\n\t\t\t} else {\n\t\t\t\t\/\/ Create a new page with the sitemap page url.\n\t\t\t\t$this->sitemap['html_sitemap_page'] = wp_insert_post(\n\t\t\t\t\t[\n\t\t\t\t\t\t'post_title'   => __( 'HTML Sitemap', 'rank-math' ),\n\t\t\t\t\t\t'post_content' => '',\n\t\t\t\t\t\t'post_status'  => 'publish',\n\t\t\t\t\t\t'post_type'    => 'page',\n\t\t\t\t\t\t'post_name'    => basename( $settings['pageUrl'] ),\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $settings['postTypes']['all'] ) ) {\n\t\t\t$post_types = Helper::get_accessible_post_types();\n\t\t\t$post_types = array_keys( $post_types );\n\t\t\tforeach ( $post_types as $post_type ) {\n\t\t\t\t$this->sitemap[ 'pt_' . $post_type . '_html_sitemap' ] = in_array( $post_type, $settings['postTypes']['included'], true ) ? 'on' : 'off';\n\t\t\t}\n\t\t} else {\n\t\t\tforeach ( $settings['postTypes']['included'] as $post_type ) {\n\t\t\t\t$this->sitemap[ 'pt_' . $post_type . '_html_sitemap' ] = 'on';\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $settings['taxonomies']['all'] ) ) {\n\t\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\t\t$taxonomies = array_keys( $taxonomies );\n\t\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\t\t$this->sitemap[ 'tax_' . $taxonomy . '_html_sitemap' ] = in_array( $taxonomy, $settings['taxonomies']['included'], true ) ? 'on' : 'off';\n\t\t\t}\n\t\t} else {\n\t\t\tforeach ( $settings['taxonomies']['included'] as $taxonomy ) {\n\t\t\t\t$this->sitemap[ 'tax_' . $taxonomy . '_html_sitemap' ] = 'on';\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Import Titles & Meta Settings.\n\t *\/\n\tprivate function titles_settings() {\n\t\t$settings = $this->aio_settings['searchAppearance'];\n\t\t$hash     = [\n\t\t\t'separator'       => 'title_separator',\n\t\t\t'siteTitle'       => 'homepage_title',\n\t\t\t'metaDescription' => 'homepage_description',\n\t\t];\n\n\t\t$this->replace( $hash, $settings['global'], $this->titles, 'convert_variables' );\n\n\t\t$this->titles['noindex_empty_taxonomies'] = $settings['advanced']['noIndexEmptyCat'];\n\t\t$this->titles['knowledgegraph_type']      = 'organization' === $settings['global']['schema']['siteRepresents'] ? 'company' : 'person';\n\t\t$this->titles['knowledgegraph_name']      = $settings['global']['schema']['organizationName'];\n\t\t$this->titles['knowledgegraph_logo']      = $settings['global']['schema']['organizationLogo'];\n\n\t\t$robots = $this->get_robots_data( $settings['advanced']['globalRobotsMeta'] );\n\n\t\t$this->titles['robots_global']          = $robots['robots'];\n\t\t$this->titles['advanced_robots_global'] = $robots['advanced_robots'];\n\n\t\t$this->social_settings();\n\t\t$this->archive_settings();\n\t\t$this->post_types_settings();\n\t\t$this->taxonomies_settings();\n\t}\n\n\t\/**\n\t * Import Social Settings.\n\t *\/\n\tprivate function social_settings() {\n\t\tif ( empty( $this->aio_settings['social'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hash = [\n\t\t\t'adminId'   => 'facebook_admin_id',\n\t\t\t'appId'     => 'facebook_app_id',\n\t\t\t'authorUrl' => 'facebook_author_urls',\n\t\t];\n\t\t$this->replace( $hash, $this->aio_settings['social']['facebook']['advanced'], $this->titles );\n\n\t\t$hash = [\n\t\t\t'title'       => 'homepage_facebook_title',\n\t\t\t'description' => 'homepage_facebook_description',\n\t\t\t'image'       => 'homepage_facebook_image',\n\t\t];\n\t\t$this->replace( $hash, $this->aio_settings['social']['facebook']['homePage'], $this->titles );\n\n\t\t$profiles        = $this->aio_settings['social']['profiles'];\n\t\t$profile_urls    = $profiles['urls'];\n\t\t$fb_url          = $profile_urls['facebookPageUrl'];\n\t\t$tw_url          = $profile_urls['twitterUrl'];\n\t\t$additional_urls = $profiles['additionalUrls'];\n\n\t\t$profile_urls = array_map(\n\t\t\tfunction ( $url ) use ( $fb_url, $tw_url ) {\n\t\t\t\treturn $url !== $fb_url && $url !== $tw_url ? $url : false;\n\t\t\t},\n\t\t\t$profile_urls\n\t\t);\n\n\t\t$urls = array_filter( array_values( $profile_urls ) );\n\t\tarray_merge( $urls, explode( \"\\n\", $additional_urls ) );\n\n\t\t$this->titles['social_additional_profiles'] = implode( PHP_EOL, $urls );\n\t\t$this->titles['social_url_facebook']        = $fb_url;\n\t\t$this->titles['twitter_author_names']       = str_replace( 'https:\/\/twitter.com\/', '', $tw_url );\n\t}\n\n\t\/**\n\t * Archive settings.\n\t *\/\n\tprivate function archive_settings() {\n\t\t$settings = $this->aio_settings['searchAppearance']['archives'];\n\t\t$author   = $settings['author'];\n\t\t$hash     = [\n\t\t\t'title'           => 'author_archive_title',\n\t\t\t'metaDescription' => 'author_archive_description',\n\t\t];\n\t\t$this->replace( $hash, $author, $this->titles, 'convert_variables' );\n\t\t$this->titles['disable_author_archives'] = $author['show'] ? 'off' : 'on';\n\t\t$this->titles['author_add_meta_box']     = $author['advanced']['showMetaBox'];\n\t\t$this->titles['author_custom_robots']    = ! $author['advanced']['robotsMeta']['default'];\n\t\t$robots                                  = $this->get_robots_data( $author['advanced']['robotsMeta'] );\n\t\t$this->titles['author_robots']           = $robots['robots'];\n\t\t$this->titles['author_advanced_robots']  = $robots['advanced_robots'];\n\n\t\t$date = $settings['date'];\n\t\t$hash = [\n\t\t\t'title'           => 'date_archive_title',\n\t\t\t'metaDescription' => 'date_archive_description',\n\t\t];\n\t\t$this->replace( $hash, $date, $this->titles, 'convert_variables' );\n\t\t$this->titles['disable_date_archives'] = $date['show'] ? 'off' : 'on';\n\t\t$robots                                = $this->get_robots_data( $date['advanced']['robotsMeta'] );\n\t\t$this->titles['date_archive_robots']   = $robots['robots'];\n\t\t$this->titles['date_advanced_robots']  = $robots['advanced_robots'];\n\n\t\t$this->titles['search_title'] = $this->convert_variables( $settings['search']['title'] );\n\t}\n\n\t\/**\n\t * Post Types settings.\n\t *\/\n\tprivate function post_types_settings() {\n\t\t$settings = $this->aio_settings['searchAppearance']['dynamic']['postTypes'];\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\tif ( empty( $settings[ $post_type ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$hash = [\n\t\t\t\t'title'           => \"pt_{$post_type}_title\",\n\t\t\t\t'metaDescription' => \"pt_{$post_type}_description\",\n\t\t\t\t'customFields'    => \"pt_{$post_type}_analyze_fields\",\n\t\t\t];\n\t\t\t$this->replace( $hash, $settings[ $post_type ], $this->titles, 'convert_variables' );\n\n\t\t\tif ( ! empty( $settings[ $post_type ]['schemaType'] ) ) {\n\t\t\t\t$schema_type = strtolower( $settings[ $post_type ]['schemaType'] );\n\t\t\t\tif ( in_array( $schema_type, [ 'article', 'book', 'course', 'dataset', 'event', 'jobposting', 'movie', 'music', 'person', 'product', 'recipe', 'restaurant', 'service', 'software', 'video' ], true ) ) {\n\t\t\t\t\t$this->titles[ \"pt_{$post_type}_default_rich_snippet\" ] = $schema_type;\n\t\t\t\t\t$this->titles[ \"pt_{$post_type}_default_article_type\" ] = $settings[ $post_type ]['articleType'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$robots = $settings[ $post_type ]['advanced']['robotsMeta'];\n\t\t\tif ( ! empty( $robots['default'] ) ) {\n\t\t\t\t$this->titles[ \"pt_{$post_type}_custom_robots\" ] = 'off';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$robots = $this->get_robots_data( $robots );\n\t\t\t$this->titles[ \"pt_{$post_type}_custom_robots\" ]   = 'on';\n\t\t\t$this->titles[ \"pt_{$post_type}_robots\" ]          = $robots['robots'];\n\t\t\t$this->titles[ \"pt_{$post_type}_advanced_robots\" ] = $robots['advanced_robots'];\n\t\t}\n\t}\n\n\t\/**\n\t * Taxonomies settings.\n\t *\/\n\tprivate function taxonomies_settings() {\n\t\tif ( ! isset( $this->aio_settings['searchAppearance']['dynamic']['taxonomies'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$settings = $this->aio_settings['searchAppearance']['dynamic']['taxonomies'];\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy => $tax_obj ) {\n\t\t\tif ( empty( $settings[ $taxonomy ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$hash = [\n\t\t\t\t'title'           => \"tax_{$taxonomy}_title\",\n\t\t\t\t'metaDescription' => \"tax_{$taxonomy}_description\",\n\t\t\t];\n\t\t\t$this->replace( $hash, $settings[ $taxonomy ], $this->titles, 'convert_variables' );\n\n\t\t\t$robots                                   = $this->get_robots_data( $settings[ $taxonomy ]['advanced']['robotsMeta'] );\n\t\t\t$this->titles[ \"tax_{$taxonomy}_robots\" ] = $robots['robots'];\n\t\t\t$this->titles[ \"tax_{$taxonomy}_advanced_robots\" ] = $robots['advanced_robots'];\n\t\t\t$this->titles[ \"tax_{$taxonomy}_add_meta_box\" ]    = ! empty( $settings[ $taxonomy ]['show'] ) ? 'on' : '';\n\t\t}\n\t}\n\n\t\/**\n\t * Function to get Robots data.\n\t *\n\t * @param  array $aioseo_robots AIOSEO robots.\n\t * @return array Robots data.\n\t *\/\n\tprivate function get_robots_data( $aioseo_robots ) {\n\t\t$robots          = [];\n\t\t$advanced_robots = [];\n\t\t$keys            = [\n\t\t\t'maxSnippet'      => 'max-snippet',\n\t\t\t'maxVideoPreview' => 'max-video-preview',\n\t\t\t'maxImagePreview' => 'max-image-preview',\n\t\t];\n\t\tforeach ( $aioseo_robots as $key => $value ) {\n\t\t\tif ( in_array( $key, [ 'noindex', 'nofollow', 'noarchive', 'noimageindex', 'nosnippet' ], true ) && $value ) {\n\t\t\t\t$robots[] = $key;\n\t\t\t}\n\n\t\t\tif ( in_array( $key, [ 'maxSnippet', 'maxVideoPreview', 'maxImagePreview' ], true ) && $value ) {\n\t\t\t\t$advanced_robots[ $keys[ $key ] ] = $value;\n\t\t\t}\n\t\t}\n\t\t$robots[] = ! in_array( 'noindex', $robots, true ) ? 'index' : '';\n\n\t\treturn [\n\t\t\t'robots'          => $robots,\n\t\t\t'advanced_robots' => $advanced_robots,\n\t\t];\n\t}\n\n\t\/**\n\t * Import post meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function postmeta() {\n\t\t$this->set_pagination( $this->get_posts( true ) );\n\t\t$posts = $this->get_posts();\n\n\t\tforeach ( $posts as $post ) {\n\t\t\t$post_id = (int) $post->post_id;\n\t\t\t$post    = (array) $post;\n\t\t\t$hash    = [\n\t\t\t\t'title'                    => 'rank_math_title',\n\t\t\t\t'description'              => 'rank_math_description',\n\t\t\t\t'canonical_url'            => 'rank_math_canonical_url',\n\t\t\t\t'og_title'                 => 'rank_math_facebook_title',\n\t\t\t\t'og_description'           => 'rank_math_facebook_description',\n\t\t\t\t'og_image_custom_url'      => 'rank_math_facebook_image',\n\t\t\t\t'twitter_title'            => 'rank_math_twitter_title',\n\t\t\t\t'twitter_description'      => 'rank_math_twitter_description',\n\t\t\t\t'twitter_image_custom_url' => 'rank_math_twitter_image',\n\t\t\t];\n\t\t\t$this->replace_meta( $hash, $post, $post_id, 'post', 'convert_variables' );\n\t\t\t$this->replace_meta( [ 'twitter_use_og' => 'rank_math_twitter_use_facebook' ], $post, $post_id, 'post', 'convert_bool' );\n\t\t\t$this->set_object_robots( $post_id, $post, 'post' );\n\t\t\t$this->set_keywords( $post_id, $post, 'post' );\n\t\t\t$this->add_schema_data( $post_id, $post );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Import term meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function termmeta() {\n\t\t$this->set_pagination( $this->get_terms( true ) );\n\t\t$terms = $this->get_terms();\n\n\t\tforeach ( $terms as $term ) {\n\t\t\t$term_id = $term->term_id;\n\t\t\t$term    = (array) $term;\n\t\t\t$hash    = [\n\t\t\t\t'title'                    => 'rank_math_title',\n\t\t\t\t'description'              => 'rank_math_description',\n\t\t\t\t'canonical_url'            => 'rank_math_canonical_url',\n\t\t\t\t'og_title'                 => 'rank_math_facebook_title',\n\t\t\t\t'og_description'           => 'rank_math_facebook_description',\n\t\t\t\t'og_image_custom_url'      => 'rank_math_facebook_image',\n\t\t\t\t'twitter_title'            => 'rank_math_twitter_title',\n\t\t\t\t'twitter_description'      => 'rank_math_twitter_description',\n\t\t\t\t'twitter_image_custom_url' => 'rank_math_twitter_image',\n\t\t\t];\n\t\t\t$this->replace_meta( $hash, $term, $term_id, 'term', 'convert_variables' );\n\t\t\t$this->replace_meta( [ 'twitter_use_og' => 'rank_math_twitter_use_facebook' ], $term, $term_id, 'term', 'convert_bool' );\n\t\t\t$this->set_object_robots( $term_id, $term, 'term' );\n\t\t\t$this->set_keywords( $term_id, $term, 'term' );\n\t\t}\n\n\t\treturn [ 'count' => count( $terms ) ];\n\t}\n\n\t\/**\n\t * Import user meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function usermeta() {\n\t\t$this->set_pagination( $this->get_user_ids( true ) );\n\t\t$user_ids = $this->get_user_ids();\n\n\t\t$hash = [\n\t\t\t'wpseo_title'    => 'rank_math_title',\n\t\t\t'wpseo_desc'     => 'rank_math_description',\n\t\t\t'wpseo_metadesc' => 'rank_math_description',\n\t\t];\n\n\t\tforeach ( $user_ids as $user ) {\n\t\t\t$userid = $user->ID;\n\n\t\t\t$facebook_url = get_user_meta( $userid, 'aioseo_facebook_page_url', true );\n\t\t\tif ( $facebook_url ) {\n\t\t\t\tupdate_user_meta( $userid, 'facebook', $facebook_url );\n\t\t\t}\n\n\t\t\t$twitter_url = get_user_meta( $userid, 'aioseo_twitter_url', true );\n\t\t\tif ( $twitter_url ) {\n\t\t\t\tupdate_user_meta( $userid, 'twitter', str_replace( 'https:\/\/twitter.com\/', '', $twitter_url ) );\n\t\t\t}\n\n\t\t\t$social_urls = [];\n\t\t\tforeach ( [ 'aioseo_instagram_url', 'aioseo_pinterest_url', 'aioseo_youtube_url', 'aioseo_linkedin_url', 'aioseo_tumblr_url', 'aioseo_yelp_page_url', 'aioseo_sound_cloud_url', 'aioseo_wikipedia_url', 'aioseo_myspace_url' ] as $key ) {\n\t\t\t\t$social_urls[] = get_user_meta( $userid, $key, true );\n\t\t\t}\n\n\t\t\t$additional_urls = get_user_meta( 4, 'aioseo_profiles_additional_urls', true );\n\t\t\tif ( $additional_urls ) {\n\t\t\t\t$social_urls = array_merge( $social_urls, explode( \"\\n\", $additional_urls ) );\n\t\t\t}\n\n\t\t\tif ( ! empty( $social_urls ) ) {\n\t\t\t\tupdate_user_meta( $userid, 'additional_profile_urls', implode( ' ', array_filter( $social_urls ) ) );\n\t\t\t}\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Deactivate plugin action.\n\t *\/\n\tprotected function deactivate() {\n\t\tif ( is_plugin_active( $this->get_plugin_file() ) ) {\n\t\t\tdeactivate_plugins( $this->get_plugin_file() );\n\t\t\tdeactivate_plugins( 'aioseo-image-seo\/aioseo-image-seo.php' );\n\t\t\tdeactivate_plugins( 'aioseo-local-business\/aioseo-local-business.php' );\n\t\t\tdeactivate_plugins( 'aioseo-news-sitemap\/aioseo-news-sitemap.php' );\n\t\t\tdeactivate_plugins( 'aioseo-video-sitemap\/aioseo-video-sitemap.php' );\n\t\t\tdeactivate_plugins( 'aioseo-local-business\/aioseo-local-business.php' );\n\t\t\tdeactivate_plugins( 'aioseo-redirects\/aioseo-redirects.php' );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get all post IDs of all allowed post types only.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprivate function get_posts( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB::query_builder( 'aioseo_posts' );\n\n\t\treturn $count ? absint( $table->selectCount( 'ID', 'total' )->getVar() ) :\n\t\t\t$table->select( '*' )->page( $paged - 1, $this->items_per_page )->get();\n\t}\n\n\t\/**\n\t * Get all post IDs of all allowed post types only.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprivate function get_terms( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB::query_builder( 'aioseo_terms' );\n\n\t\treturn $count ? absint( $table->selectCount( 'ID', 'total' )->getVar() ) :\n\t\t\t$table->select( '*' )->page( $paged - 1, $this->items_per_page )->get();\n\t}\n\n\t\/**\n\t * Import Schema Data.\n\t *\n\t * @param int   $post_id Post ID.\n\t * @param array $post    Post data.\n\t *\/\n\tprivate function add_schema_data( $post_id, $post ) {\n\t\tif ( empty( $post['schema_type'] ) || ! in_array( $post['schema_type'], [ 'SoftwareApplication', 'Product', 'Recipe', 'Course' ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$type   = strtolower( $post['schema_type'] );\n\t\t$type   = 'softwareapplication' === $type ? 'software' : $type;\n\t\t$schema = json_decode( $post['schema_type_options'], true );\n\t\t$data   = $this->$type( $schema[ $type ] );\n\t\t$schema = [\n\t\t\t'metadata' => [\n\t\t\t\t'title'                   => $data['@type'],\n\t\t\t\t'isPrimary'               => true,\n\t\t\t\t'type'                    => 'template',\n\t\t\t\t'reviewLocation'          => 'custom',\n\t\t\t\t'reviewLocationShortcode' => '[rank_math_rich_snippet]',\n\t\t\t],\n\t\t] + $data;\n\n\t\tupdate_post_meta( $post_id, 'rank_math_schema_' . $schema['@type'], $schema );\n\t}\n\n\t\/**\n\t * Import Software Schema Data.\n\t *\n\t * @param array $data Software schema data.\n\t *\/\n\tprivate function software( $data ) {\n\t\t$schema = [\n\t\t\t'@type'               => 'SoftwareApplication',\n\t\t\t'name'                => ! empty( $data['name'] ) ? $data['name'] : '%seo_title%',\n\t\t\t'applicationCategory' => $data['category'],\n\t\t\t'offers'              => [\n\t\t\t\t'@type'         => 'Offer',\n\t\t\t\t'price'         => $data['price'],\n\t\t\t\t'priceCurrency' => $data['currency'],\n\t\t\t],\n\t\t];\n\n\t\tif ( ! empty( $data['operatingSystems'] ) ) {\n\t\t\t$operating_system = array_map(\n\t\t\t\tfunction ( $system ) {\n\t\t\t\t\treturn $system['value'];\n\t\t\t\t},\n\t\t\t\tjson_decode( $data['operatingSystems'], true )\n\t\t\t);\n\n\t\t\t$schema['operatingSystem'] = implode( ', ', $operating_system );\n\t\t}\n\n\t\tif ( ! empty( $data['reviews'] ) ) {\n\t\t\t$reviews          = json_decode( $data['reviews'][0], true );\n\t\t\t$schema['review'] = [\n\t\t\t\t'@type'         => 'Review',\n\t\t\t\t'datePublished' => '%date(Y-m-dTH:i:sP)%',\n\t\t\t\t'dateModified'  => '%modified(Y-m-dTH:i:sP)%',\n\t\t\t\t'author'        => [\n\t\t\t\t\t'@type' => 'Person',\n\t\t\t\t\t'name'  => '%name%',\n\t\t\t\t],\n\t\t\t\t'reviewRating'  => [\n\t\t\t\t\t'@type'       => 'Rating',\n\t\t\t\t\t'ratingValue' => ! empty( $reviews['rating'] ) ? $reviews['rating'] : '',\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\t\/**\n\t * Import Product Schema Data.\n\t *\n\t * @param array $data Product schema data.\n\t *\/\n\tprivate function product( $data ) {\n\t\treturn [\n\t\t\t'@type'       => 'Product',\n\t\t\t'name'        => ! empty( $data['name'] ) ? $data['name'] : '%seo_title%',\n\t\t\t'description' => ! empty( $data['description'] ) ? $data['description'] : '%seo_description%',\n\t\t\t'gtin8'       => $data['identifier'],\n\t\t\t'brand'       => [\n\t\t\t\t'@type' => 'Brand',\n\t\t\t\t'name'  => $data['brand'],\n\t\t\t],\n\t\t\t'offers'      => [\n\t\t\t\t'@type'           => 'Offer',\n\t\t\t\t'price'           => $data['price'],\n\t\t\t\t'priceCurrency'   => $data['currency'],\n\t\t\t\t'priceValidUntil' => $data['priceValidUntil'],\n\t\t\t\t'availability'    => str_replace( 'https:\/\/schema.org\/', '', $data['availability'] ),\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Import Course Schema Data.\n\t *\n\t * @param array $data Course schema data.\n\t *\/\n\tprivate function course( $data ) {\n\t\treturn [\n\t\t\t'@type'       => 'Course',\n\t\t\t'name'        => $data['name'],\n\t\t\t'description' => $data['description'],\n\t\t\t'provider'    => [\n\t\t\t\t'@type' => 'Organization',\n\t\t\t\t'name'  => $data['provider'],\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Import Recipe Schema Data.\n\t *\n\t * @param array $data Recipe schema data.\n\t *\/\n\tprivate function recipe( $data ) {\n\t\t$schema = [\n\t\t\t'@type'          => 'Recipe',\n\t\t\t'name'           => $data['name'],\n\t\t\t'recipeCategory' => $data['dishType'],\n\t\t\t'recipeCuisine'  => $data['cuisineType'],\n\t\t\t'prepTime'       => \"PT{$data['preparationTime']}M\",\n\t\t\t'cookTime'       => \"PT{$data['cookingTime']}M\",\n\t\t\t'recipeYield'    => \"PT{$data['servings']}M\",\n\t\t\t'nutrition'      => [\n\t\t\t\t'@type'    => 'NutritionInformation',\n\t\t\t\t'calories' => $data['calories'],\n\t\t\t],\n\t\t];\n\n\t\tif ( ! empty( $data['keywords'] ) ) {\n\t\t\t$keywords = array_map(\n\t\t\t\tfunction ( $keyword ) {\n\t\t\t\t\treturn $keyword['value'];\n\t\t\t\t},\n\t\t\t\tjson_decode( $data['keywords'], true )\n\t\t\t);\n\n\t\t\t$schema['keywords'] = implode( ', ', $keywords );\n\t\t}\n\n\t\tif ( ! empty( $data['ingredients'] ) ) {\n\t\t\t$schema['recipeIngredient'] = array_map(\n\t\t\t\tfunction ( $ingredient ) {\n\t\t\t\t\treturn $ingredient['value'];\n\t\t\t\t},\n\t\t\t\tjson_decode( $data['ingredients'], true )\n\t\t\t);\n\t\t}\n\n\t\tif ( ! empty( $data['instructions'] ) ) {\n\t\t\t$schema['recipeInstructions'] = [\n\t\t\t\t'@type'           => 'HowToSection',\n\t\t\t\t'itemListElement' => [],\n\t\t\t];\n\n\t\t\tforeach ( $data['instructions'] as $instruction ) {\n\t\t\t\t$instruction_data = json_decode( $instruction, true );\n\n\t\t\t\t$schema['recipeInstructions']['itemListElement'][] = [\n\t\t\t\t\t'@type' => 'HowtoStep',\n\t\t\t\t\t'text'  => $instruction_data['content'],\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\t\/**\n\t * Set Keywords.\n\t *\n\t * @param int    $object_id   Object ID.\n\t * @param array  $data        Object data.\n\t * @param string $object_type Current Object type.\n\t *\/\n\tprivate function set_keywords( $object_id, $data, $object_type ) {\n\t\t$keywords   = [];\n\t\t$keyphrases = json_decode( $data['keyphrases'], true );\n\n\t\tif ( ! empty( $keyphrases['focus']['keyphrase'] ) ) {\n\t\t\t$keywords[] = $keyphrases['focus']['keyphrase'];\n\t\t}\n\n\t\tif ( ! empty( $keyphrases['additional'] ) ) {\n\t\t\tforeach ( $keyphrases['additional'] as $keyword ) {\n\t\t\t\t$keywords[] = $keyword['keyphrase'];\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $keywords ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->update_meta( $object_type, $object_id, 'rank_math_focus_keyword', implode( ',', $keywords ) );\n\t}\n\n\t\/**\n\t * Set object robots meta.\n\t *\n\t * @param int    $object_id   Object ID.\n\t * @param array  $data        Object data.\n\t * @param string $object_type Current Object type.\n\t *\/\n\tprivate function set_object_robots( $object_id, $data, $object_type ) {\n\t\t\/\/ Early bail if robots data is set in Rank Math plugin.\n\t\tif ( ! empty( $this->get_meta( $object_type, $object_id, 'rank_math_robots' ) ) || ! empty( $data['robots_default'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ ROBOTS.\n\t\t$robots = [];\n\t\tforeach ( [ 'robots_noindex', 'robots_noarchive', 'robots_nosnippet', 'robots_nofollow', 'robots_noimageindex' ] as $key ) {\n\t\t\tif ( empty( $data[ $key ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$robots[] = str_replace( 'robots_', '', $key );\n\t\t}\n\n\t\tif ( ! in_array( 'noindex', $robots, true ) ) {\n\t\t\t$robots[] = 'index';\n\t\t}\n\t\t$this->update_meta( $object_type, $object_id, 'rank_math_robots', array_unique( $robots ) );\n\n\t\t$advanced_robots = [];\n\t\t$keys            = [\n\t\t\t'robots_max_snippet'      => 'max-snippet',\n\t\t\t'robots_max_videopreview' => 'max-video-preview',\n\t\t\t'robots_max_imagepreview' => 'max-image-preview',\n\t\t];\n\t\tforeach ( [ 'robots_max_snippet', 'robots_max_videopreview', 'robots_max_imagepreview' ] as $key ) {\n\t\t\tif ( empty( $data[ $key ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$advanced_robots[ $keys[ $key ] ] = $data[ $key ];\n\t\t}\n\n\t\t$this->update_meta( $object_type, $object_id, 'rank_math_advanced_robots', array_unique( $advanced_robots ) );\n\t}\n\n\t\/**\n\t * Replace meta based on key\/value hash.\n\t *\n\t * @param array  $hash        Array of hash for search and replace.\n\t * @param array  $source      Array for source where to search.\n\t * @param int    $object_id   Object id for destination where to save.\n\t * @param string $object_type Object type for destination where to save.\n\t * @param bool   $convert     (Optional) Conversion type. Default: false.\n\t *\/\n\tprotected function replace_meta( $hash, $source, $object_id, $object_type, $convert = false ) {\n\t\tforeach ( $hash as $search => $replace ) {\n\t\t\t$value = isset( $source[ $search ] ) ? $source[ $search ] : $this->get_meta( $object_type, $object_id, $search );\n\t\t\tif ( ! isset( $value ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->update_meta(\n\t\t\t\t$object_type,\n\t\t\t\t$object_id,\n\t\t\t\t$replace,\n\t\t\t\tfalse !== $convert ? $this->$convert( $value ) : $value\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Import Locations data from Yoast Local plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function locations() {\n\t\t$this->import_locations_terms();\n\t\t$this->set_pagination( $this->get_location_ids( true ) );\n\t\t$locations = $this->get_location_ids();\n\t\tforeach ( $locations as $location ) {\n\t\t\t$args = (array) $location;\n\t\t\tunset( $args['ID'] );\n\t\t\t$args['post_type'] = 'rank_math_locations';\n\n\t\t\t$post_id = wp_insert_post( $args );\n\t\t\tif ( $post_id === 0 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$post_terms = wp_get_object_terms( $location->ID, 'aioseo-location-category', [ 'fields' => 'slugs' ] );\n\t\t\tif ( ! empty( $post_terms ) && ! is_wp_error( $post_terms ) ) {\n\t\t\t\twp_set_object_terms( $post_id, $post_terms, 'rank_math_location_category', false );\n\t\t\t}\n\n\t\t\t$this->locations_meta( $location->ID, $post_id );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Import Locations terms.\n\t *\/\n\tprivate function import_locations_terms() {\n\t\t$terms = get_terms( 'aioseo-location-category' );\n\t\tif ( empty( $terms ) || is_wp_error( $terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $terms as $term ) {\n\t\t\twp_insert_term( $term->name, 'rank_math_location_category', $term );\n\t\t}\n\t}\n\n\t\/**\n\t * Import Locations metadata.\n\t *\n\t * @param int $old_post_id Yoast's location id.\n\t * @param int $new_post_id Newly created location id.\n\t *\/\n\tprivate function locations_meta( $old_post_id, $new_post_id ) {\n\t\t$metas = DB::query_builder( 'aioseo_posts' )->where( 'post_id', $old_post_id )->select()->one();\n\t\tif ( empty( $metas->local_seo ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$locations_data = json_decode( $metas->local_seo, true );\n\t\t$locations_meta = ! empty( $locations_data['locations'] ) ? $locations_data['locations']['business'] : [];\n\t\t$opening_hours  = ! empty( $locations_data['openingHours'] ) ? $locations_data['openingHours'] : [];\n\n\t\t$schema = [\n\t\t\t'metadata'   => [\n\t\t\t\t'type'           => 'template',\n\t\t\t\t'shortcode'      => uniqid( 's-' ),\n\t\t\t\t'isPrimary'      => true,\n\t\t\t\t'title'          => 'Local Business',\n\t\t\t\t'use_24h_format' => ! empty( $opening_hours['use24hFormat'] ),\n\t\t\t\t'open247'        => ! empty( $opening_hours['alwaysOpen'] ),\n\t\t\t\t'timeZone'       => ! empty( $opening_hours['timezone'] ),\n\t\t\t],\n\t\t\t'@type'      => $locations_meta['businessType'],\n\t\t\t'name'       => ! empty( $locations_meta['name'] ) ? $locations_meta['name'] : '%seo_title%',\n\t\t\t'url'        => ! empty( $locations_meta['urls'] ) ? $locations_meta['urls']['website'] : '%url%',\n\t\t\t'address'    => ! empty( $locations_meta['address'] ) ? $this->replace_address( $locations_meta['address'] ) : '',\n\t\t\t'areaServed' => ! empty( $locations_meta['areaServed'] ) ? $locations_meta['areaServed'] : '',\n\t\t];\n\n\t\tif ( ! empty( $locations_meta['contact'] ) ) {\n\t\t\t$contact             = $locations_meta['contact'];\n\t\t\t$schema['email']     = ! empty( $contact['email'] ) ? $contact['email'] : '';\n\t\t\t$schema['telephone'] = ! empty( $contact['phone'] ) ? $contact['phone'] : '';\n\t\t\t$schema['faxNumber'] = ! empty( $contact['fax'] ) ? $contact['fax'] : '';\n\t\t}\n\n\t\tif ( ! empty( $locations_meta['ids'] ) ) {\n\t\t\t$ids             = $locations_meta['ids'];\n\t\t\t$schema['vatID'] = ! empty( $ids['vat'] ) ? $ids['vat'] : '';\n\t\t\t$schema['taxID'] = ! empty( $ids['tax'] ) ? $ids['tax'] : '';\n\t\t}\n\n\t\tif ( ! empty( $locations_meta['payment'] ) ) {\n\t\t\t$payment                   = $locations_meta['payment'];\n\t\t\t$schema['priceRange']      = ! empty( $payment['priceRange'] ) ? $payment['priceRange'] : '';\n\t\t\t$schema['paymentAccepted'] = ! empty( $payment['methods'] ) ? $payment['methods'] : '';\n\n\t\t\tif ( ! empty( $payment['currenciesAccepted'] ) ) {\n\t\t\t\t$schema['currenciesAccepted'] = implode(\n\t\t\t\t\t', ',\n\t\t\t\t\tarray_map(\n\t\t\t\t\t\tfunction ( $value ) {\n\t\t\t\t\t\t\treturn $value['value'];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tjson_decode( $payment['currenciesAccepted'], true )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $locations_meta['image'] ) ) {\n\t\t\t$schema['logo'] = [\n\t\t\t\t'@type' => 'ImageObject',\n\t\t\t\t'url'   => $locations_meta['image'],\n\t\t\t];\n\t\t}\n\n\t\t$schema['openingHoursSpecification'] = $this->replace_opening_hours( $opening_hours['days'] );\n\n\t\tupdate_post_meta( $new_post_id, 'rank_math_schema_' . $schema['@type'], $schema );\n\t}\n\n\t\/**\n\t * Replace Opening Hours data.\n\t *\n\t * @param array $opening_hours Opening Hours data.\n\t * @return array Processed data.\n\t *\/\n\tprivate function replace_opening_hours( $opening_hours ) {\n\t\t$data = [];\n\t\t$days = [ 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday' ];\n\t\tforeach ( $days as $day ) {\n\t\t\tif ( ! empty( $opening_hours[ $day ]['closed'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! empty( $opening_hours[ $day ]['open24h'] ) ) {\n\t\t\t\t$opens  = '00:00';\n\t\t\t\t$closes = '23:59';\n\t\t\t} else {\n\t\t\t\t$opens  = ! empty( $opening_hours[ $day ]['openTime'] ) ? $opening_hours[ $day ]['openTime'] : '';\n\t\t\t\t$closes = ! empty( $opening_hours[ $day ]['closeTime'] ) ? $opening_hours[ $day ]['closeTime'] : '';\n\t\t\t}\n\n\t\t\tif ( ! $opens ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data[ $day ] = [\n\t\t\t\t'@type'     => 'OpeningHoursSpecification',\n\t\t\t\t'dayOfWeek' => ucfirst( $day ),\n\t\t\t\t'opens'     => $opens,\n\t\t\t\t'closes'    => $closes,\n\t\t\t];\n\t\t}\n\n\t\treturn array_values( $data );\n\t}\n\n\t\/**\n\t * Replace Address data.\n\t *\n\t * @param array $address Address data.\n\t * @return array Processed data.\n\t *\/\n\tprivate function replace_address( $address ) {\n\t\t$data = [\n\t\t\t'@type' => 'PostalAddress',\n\t\t];\n\t\t$hash = [\n\t\t\t'streetLine1' => 'streetAddress',\n\t\t\t'streetLine2' => 'addressLocality',\n\t\t\t'state'       => 'addressRegion',\n\t\t\t'zipCode'     => 'postalCode',\n\t\t\t'country'     => 'addressCountry',\n\t\t];\n\n\t\tforeach ( $hash as $key => $value ) {\n\t\t\t$data[ $value ] = isset( $address[ $key ] ) ? $address[ $key ] : '';\n\t\t}\n\n\t\tif ( ! empty( $address['city'] ) ) {\n\t\t\t$data['addressLocality'] = $data['addressLocality'] . ', ' . $address['city'];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get all location IDs.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprivate function get_location_ids( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB::query_builder( 'posts' )->where( 'post_type', 'aioseo-location' );\n\n\t\treturn $count ? absint( $table->selectCount( 'ID', 'total' )->getVar() ) :\n\t\t\t$table->select()->page( $paged - 1, $this->items_per_page )->get();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-seopress.php","ext":"php","size":30149,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The SEOPress Import Class\n *\n * @since      1.0.24\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Redirections\\Redirection;\nuse RankMath\\Schema\\JsonLD;\nuse RankMath\\Schema\\Singular;\nuse RankMath\\Helpers\\DB;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * SEOPress class.\n *\/\nclass SEOPress extends Plugin_Importer {\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name = 'SEOPress';\n\n\t\/**\n\t * Plugin options meta key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_key = 'seopress';\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys = [ 'seopress', 'seopress_%' ];\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices = [ 'settings', 'postmeta', 'termmeta', 'redirections' ];\n\n\t\/**\n\t * JsonLD.\n\t *\n\t * @var JsonLD\n\t *\/\n\tprivate $json_ld;\n\n\t\/**\n\t * Singular.\n\t *\n\t * @var Singular\n\t *\/\n\tprivate $single;\n\n\t\/**\n\t * Convert SEOPress variables if needed.\n\t *\n\t * @param string $variable Value to convert.\n\t *\n\t * @return string\n\t *\/\n\tpublic function convert_variables( $variable ) {\n\t\t$variable = str_replace( '%%sitetitle%%', '%sitename%', $variable );\n\t\t$variable = str_replace( '%%tagline%%', '%sitedesc%', $variable );\n\t\t$variable = str_replace( '%%post_title%%', '%title%', $variable );\n\t\t$variable = str_replace( '%%post_excerpt%%', '%excerpt%', $variable );\n\t\t$variable = str_replace( '%%post_date%%', '%date%', $variable );\n\t\t$variable = str_replace( '%%post_modified_date%%', '%modified%', $variable );\n\t\t$variable = str_replace( '%post_author%%', '%name%', $variable );\n\t\t$variable = str_replace( '%%post_category%%', '%category%', $variable );\n\t\t$variable = str_replace( '%%post_tag%%', '%tag%', $variable );\n\t\t$variable = str_replace( '%%_category_title%%', '%term%', $variable );\n\t\t$variable = str_replace( '%%_category_description%%', '%term_description%', $variable );\n\t\t$variable = str_replace( '%%tag_title%%', '%term%', $variable );\n\t\t$variable = str_replace( '%%tag_description%%', '%term_description%', $variable );\n\t\t$variable = str_replace( '%%term_title%%', '%term%', $variable );\n\t\t$variable = str_replace( '%%term_description%%', '%term_description%', $variable );\n\t\t$variable = str_replace( '%%search_keywords%%', '%search_query%', $variable );\n\t\t$variable = str_replace( '%%current_pagination%%', '%page%', $variable );\n\t\t$variable = str_replace( '%%cpt_plural%%', '%pt_plural%', $variable );\n\t\t$variable = str_replace( '%%archive_title%%', '%title%', $variable );\n\t\t$variable = str_replace( '%%archive_date%%', '%currentdate%', $variable );\n\t\t$variable = str_replace( '%%archive_date_day%%', '%currentday%', $variable );\n\t\t$variable = str_replace( '%%archive_date_month%%', '%currentmonth%', $variable );\n\t\t$variable = str_replace( '%%archive_date_year%%', '%year%', $variable );\n\t\t$variable = str_replace( '%%currentdate%%', '%currentdate%', $variable );\n\t\t$variable = str_replace( '%%currentday%%', '%currentday%', $variable );\n\t\t$variable = str_replace( '%%currentmonth%%', '%currentmonth%', $variable );\n\t\t$variable = str_replace( '%%currentyear%%', '%currentyear%', $variable );\n\t\t$variable = str_replace( '%%currenttime%%', '%time%', $variable );\n\t\t$variable = str_replace( '%%author_bio%%', '%user_description%', $variable );\n\t\t$variable = str_replace( '%%wc_single_cat%%', '%term%', $variable );\n\t\t$variable = str_replace( '%%wc_single_tag%%', '%term%', $variable );\n\t\t$variable = str_replace( '%%wc_single_short_desc%%', '%wc_shortdesc%', $variable );\n\t\t$variable = str_replace( '%%wc_single_price%%', '%wc_price%', $variable );\n\n\t\treturn str_replace( '%%', '%', $variable );\n\t}\n\n\t\/**\n\t * Deactivate plugin action.\n\t *\/\n\tprotected function deactivate() {\n\t\tif ( is_plugin_active( $this->get_plugin_file() ) ) {\n\t\t\tdeactivate_plugins( $this->get_plugin_file() );\n\t\t\tdeactivate_plugins( 'wp-seopress-pro\/seopress-pro.php' );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Import settings of plugin.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function settings() {\n\t\t$this->get_settings();\n\n\t\t$seopress_titles  = get_option( 'seopress_titles_option_name' );\n\t\t$seopress_sitemap = get_option( 'seopress_xml_sitemap_option_name' );\n\t\t$seopress_local   = get_option( 'seopress_pro_option_name' );\n\n\t\t\/\/ Titles & Descriptions.\n\t\t$hash = [\n\t\t\t'seopress_titles_archives_author_disable' => 'disable_author_archives',\n\t\t\t'seopress_titles_archives_date_disable'   => 'disable_date_archives',\n\t\t\t'seopress_titles_home_site_title'         => 'homepage_title',\n\t\t\t'seopress_titles_home_site_desc'          => 'homepage_description',\n\t\t\t'seopress_titles_archives_author_title'   => 'author_archive_title',\n\t\t\t'seopress_titles_archives_author_desc'    => 'author_archive_description',\n\t\t\t'seopress_titles_archives_date_title'     => 'date_archive_title',\n\t\t\t'seopress_titles_archives_date_desc'      => 'date_archive_description',\n\t\t\t'seopress_titles_archives_search_title'   => 'search_title',\n\t\t\t'seopress_titles_archives_404_title'      => '404_title',\n\t\t];\n\n\t\t$this->replace( $hash, $seopress_titles, $this->titles, 'convert_variables' );\n\t\t$this->replace( $hash, $seopress_titles, $this->titles, 'convert_bool' );\n\t\t$this->titles['title_separator'] = \\RankMath\\CMB2::sanitize_htmlentities( $seopress_titles['seopress_titles_sep'] );\n\n\t\t$this->titles['date_archive_robots'] = ! empty( $seopress_titles['seopress_titles_archives_date_noindex'] ) ? [ 'noindex' ] : [];\n\t\t$this->set_robots( 'author', ! empty( $seopress_titles['seopress_titles_archives_author_noindex'] ), '' );\n\n\t\t$this->update_modules( $seopress_local, $seopress_sitemap );\n\t\t$this->social_settings();\n\t\t$this->advanced_settings();\n\t\t$this->post_type_settings( $seopress_titles, $seopress_sitemap );\n\t\t$this->taxonomies_settings( $seopress_titles, $seopress_sitemap );\n\t\t$this->local_seo_settings( $seopress_local );\n\t\t$this->update_settings();\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Import post meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function postmeta() {\n\t\t$this->set_pagination( $this->get_post_ids( true ) );\n\n\t\t$post_ids = $this->get_post_ids();\n\n\t\t$this->set_primary_term( $post_ids );\n\n\t\t$hash = [\n\t\t\t'_seopress_titles_title'         => 'rank_math_title',\n\t\t\t'_seopress_titles_desc'          => 'rank_math_description',\n\t\t\t'_seopress_analysis_target_kw'   => 'rank_math_focus_keyword',\n\t\t\t'_seopress_robots_canonical'     => 'rank_math_canonical_url',\n\t\t\t'_seopress_social_fb_title'      => 'rank_math_facebook_title',\n\t\t\t'_seopress_social_fb_desc'       => 'rank_math_facebook_description',\n\t\t\t'_seopress_social_fb_img'        => 'rank_math_facebook_image',\n\t\t\t'_seopress_social_twitter_title' => 'rank_math_twitter_title',\n\t\t\t'_seopress_social_twitter_desc'  => 'rank_math_twitter_description',\n\t\t\t'_seopress_social_twitter_img'   => 'rank_math_twitter_image',\n\t\t\t'_seopress_robots_breadcrumbs'   => 'rank_math_breadcrumb_title',\n\t\t];\n\n\t\t\/\/ Set Converter.\n\t\t$this->json_ld = new JsonLD();\n\t\t$this->single  = new Singular();\n\n\t\tforeach ( $post_ids as $post ) {\n\t\t\t$post_id = $post->ID;\n\t\t\t$this->replace_meta( $hash, null, $post_id, 'post', 'convert_variables' );\n\t\t\tdelete_post_meta( $post_id, 'rank_math_permalink' );\n\n\t\t\t$this->replace_image( get_post_meta( $post_id, '_seopress_social_fb_img', true ), 'post', 'rank_math_facebook_image', 'rank_math_facebook_image_id', $post_id );\n\t\t\t$this->replace_image( get_post_meta( $post_id, '_seopress_social_twitter_img', true ), 'post', 'rank_math_twitter_image', 'rank_math_twitter_image_id', $post_id );\n\n\t\t\t$this->is_twitter_using_facebook( 'post', $post_id );\n\t\t\t$this->set_object_robots( $post_id, 'post' );\n\t\t\t$this->set_schema_data( $post_id );\n\t\t\t$this->set_object_redirection( $post_id, 'post' );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Import term meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function termmeta() {\n\t\t$count = 0;\n\t\t$terms = new \\WP_Term_Query(\n\t\t\t[\n\t\t\t\t'meta_key'   => '_seopress_titles_title',\n\t\t\t\t'fields'     => 'ids',\n\t\t\t\t'hide_empty' => false,\n\t\t\t\t'get'        => 'all',\n\t\t\t]\n\t\t);\n\n\t\tif ( empty( $terms ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$hash = [\n\t\t\t'_seopress_titles_title'         => 'rank_math_title',\n\t\t\t'_seopress_titles_desc'          => 'rank_math_description',\n\t\t\t'_seopress_robots_canonical'     => 'rank_math_canonical_url',\n\t\t\t'_seopress_social_fb_title'      => 'rank_math_facebook_title',\n\t\t\t'_seopress_social_fb_desc'       => 'rank_math_facebook_description',\n\t\t\t'_seopress_social_fb_img'        => 'rank_math_facebook_image',\n\t\t\t'_seopress_social_twitter_title' => 'rank_math_twitter_title',\n\t\t\t'_seopress_social_twitter_desc'  => 'rank_math_twitter_description',\n\t\t\t'_seopress_social_twitter_img'   => 'rank_math_twitter_image',\n\t\t];\n\n\t\tforeach ( $terms->get_terms() as $term_id ) {\n\t\t\t++$count;\n\n\t\t\t$this->replace_meta( $hash, [], $term_id, 'term', 'convert_variables' );\n\t\t\tdelete_term_meta( $term_id, 'rank_math_permalink' );\n\t\t\t$this->is_twitter_using_facebook( 'term', $term_id );\n\t\t\t$this->set_object_robots( $term_id, 'term' );\n\t\t\t$this->set_object_redirection( $term_id, 'term' );\n\t\t}\n\n\t\treturn compact( 'count' );\n\t}\n\n\t\/**\n\t * Imports redirections data.\n\t *\n\t * @return array\n\t *\/\n\tprotected function redirections() {\n\t\t$redirections = get_posts(\n\t\t\t[\n\t\t\t\t'posts_per_page' => -1,\n\t\t\t\t'post_type'      => 'seopress_404',\n\t\t\t]\n\t\t);\n\n\t\tif ( empty( $redirections ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$count = 0;\n\t\tforeach ( $redirections as $redirection ) {\n\n\t\t\t$data = [\n\t\t\t\t'source'      => $redirection->post_title,\n\t\t\t\t'destination' => get_post_meta( $redirection->ID, '_seopress_redirections_value', true ),\n\t\t\t\t'code'        => get_post_meta( $redirection->ID, '_seopress_redirections_type', true ),\n\t\t\t\t'status'      => 'publish' === $redirection->post_status ? true : false,\n\t\t\t];\n\t\t\tif ( false !== $this->save_redirection( $data ) ) {\n\t\t\t\t++$count;\n\t\t\t}\n\t\t}\n\n\t\treturn compact( 'count' );\n\t}\n\n\t\/**\n\t * Update Modules.\n\t *\n\t * @param array $seopress_local   Local SEO Settings.\n\t * @param array $seopress_sitemap Sitemap Settings.\n\t *\/\n\tprivate function update_modules( $seopress_local, $seopress_sitemap ) {\n\t\t$seopress_toggle = get_option( 'seopress_toggle' );\n\n\t\t\/\/ Enable\/Disable Modules.\n\t\t$modules = [\n\t\t\t'local-seo'    => ! empty( $seopress_toggle['toggle-local-business'] ) ? 'on' : 'off',\n\t\t\t'sitemap'      => ! empty( $seopress_toggle['toggle-xml-sitemap'] ) && ! empty( $seopress_sitemap['seopress_xml_sitemap_general_enable'] ) ? 'on' : 'off',\n\t\t\t'rich-snippet' => ! empty( $seopress_toggle['toggle-rich-snippets'] ) ? 'on' : 'off',\n\t\t\t'404-monitor'  => ! empty( $seopress_toggle['toggle-404'] ) && ! empty( $seopress_local['seopress_404_enable'] ) ? 'on' : 'off',\n\t\t];\n\t\tforeach ( $modules as $key => $value ) {\n\t\t\tHelper::update_modules( [ $key => $value ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Save redirection.\n\t *\n\t * @param WP_Post $redirection Redirection object.\n\t *\n\t * @return mixed\n\t *\/\n\tprivate function save_redirection( $redirection ) {\n\t\tif ( empty( $redirection['source'] ) || empty( $redirection['destination'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$item = Redirection::from(\n\t\t\t[\n\t\t\t\t'sources'     => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'pattern'    => $redirection['source'],\n\t\t\t\t\t\t'comparison' => 'exact',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'url_to'      => $redirection['destination'],\n\t\t\t\t'header_code' => $redirection['code'],\n\t\t\t\t'status'      => $redirection['status'] ? 'active' : 'inactive',\n\t\t\t]\n\t\t);\n\n\t\treturn $item->save();\n\t}\n\n\t\/**\n\t * Social settings.\n\t *\/\n\tprivate function social_settings() {\n\t\t$social = get_option( 'seopress_social_option_name' );\n\t\t$hash   = [\n\t\t\t'seopress_social_accounts_facebook'          => 'social_url_facebook',\n\t\t\t'seopress_social_facebook_link_ownership_id' => 'facebook_author_urls',\n\t\t\t'seopress_social_facebook_img'               => 'open_graph_image',\n\t\t\t'seopress_social_facebook_admin_id'          => 'facebook_admin_id',\n\t\t\t'seopress_social_facebook_app_id'            => 'facebook_app_id',\n\t\t\t'seopress_social_accounts_twitter'           => 'twitter_author_names',\n\t\t\t'seopress_social_knowledge_name'             => 'knowledgegraph_name',\n\t\t\t'seopress_social_knowledge_img'              => 'knowledgegraph_logo',\n\t\t];\n\t\t$this->replace( $hash, $social, $this->titles );\n\n\t\t$additional_urls = [];\n\t\tforeach ( [ 'pinterest', 'instagram', 'youtube', 'linkedin' ] as $service ) {\n\t\t\tif ( ! empty( $social[ \"seopress_social_accounts_{$service}\" ] ) ) {\n\t\t\t\t$additional_urls[] = $social[ \"seopress_social_accounts_{$service}\" ];\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $additional_urls ) ) {\n\t\t\t$this->titles['social_additional_profiles'] = implode( PHP_EOL, $additional_urls );\n\t\t}\n\n\t\t\/\/ OpenGraph.\n\t\tif ( isset( $social['og_default_image'] ) ) {\n\t\t\t$this->replace_image( $social['og_default_image'], $this->titles, 'open_graph_image', 'open_graph_image_id' );\n\t\t}\n\n\t\tif ( isset( $social['og_frontpage_image'] ) ) {\n\t\t\t$this->replace_image( $social['og_frontpage_image'], $this->titles, 'homepage_facebook_image', 'homepage_facebook_image_id' );\n\t\t}\n\n\t\t\/\/ Phone Numbers.\n\t\tif ( ! empty( $social['seopress_social_knowledge_phone'] ) ) {\n\t\t\t$this->titles['phone_numbers'] = [\n\t\t\t\t[\n\t\t\t\t\t'type'   => $social['seopress_social_knowledge_contact_type'],\n\t\t\t\t\t'number' => $social['seopress_social_knowledge_phone'],\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\t\t$this->titles['knowledgegraph_type'] = isset( $social['seopress_social_knowledge_type'] ) && 'organization' === strtolower( $social['seopress_social_knowledge_type'] ) ? 'company' : 'person';\n\t}\n\n\t\/**\n\t * Post type settings.\n\t *\n\t * @param array $seopress_titles  Titles & Meta Settings.\n\t * @param array $seopress_sitemap Sitemap Settings.\n\t *\/\n\tprivate function post_type_settings( $seopress_titles, $seopress_sitemap ) {\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\t$this->titles[ \"pt_{$post_type}_title\" ]       = isset( $seopress_titles['seopress_titles_single_titles'][ $post_type ] ) ? $this->convert_variables( $seopress_titles['seopress_titles_single_titles'][ $post_type ]['title'] ) : '';\n\t\t\t$this->titles[ \"pt_{$post_type}_description\" ] = isset( $seopress_titles['seopress_titles_single_titles'][ $post_type ] ) ? $this->convert_variables( $seopress_titles['seopress_titles_single_titles'][ $post_type ]['description'] ) : '';\n\n\t\t\t$this->set_robots(\n\t\t\t\t\"pt_{$post_type}\",\n\t\t\t\t! empty( $seopress_titles['seopress_titles_single_titles'][ $post_type ]['noindex'] ),\n\t\t\t\t! empty( $seopress_titles['seopress_titles_single_titles'][ $post_type ]['nofollow'] )\n\t\t\t);\n\n\t\t\t$enable_sitemap                             = $this->enable_sitemap( 'post_types', $post_type, $seopress_sitemap );\n\t\t\t$this->sitemap[ \"pt_{$post_type}_sitemap\" ] = $enable_sitemap ? 'on' : 'off';\n\n\t\t\tif ( 'attachment' === $post_type && $enable_sitemap ) {\n\t\t\t\t$this->settings['attachment_redirect_urls'] = 'off';\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Taxonomies settings.\n\t *\n\t * @param array $seopress_titles Titles & Meta Settings.\n\t * @param array $seopress_sitemap Sitemap Settings.\n\t *\/\n\tprivate function taxonomies_settings( $seopress_titles, $seopress_sitemap ) {\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy => $object ) {\n\t\t\t$this->titles[ \"tax_{$taxonomy}_title\" ]       = ! empty( $seopress_titles['seopress_titles_tax_titles'][ $taxonomy ]['title'] ) ? $this->convert_variables( $seopress_titles['seopress_titles_tax_titles'][ $taxonomy ]['title'] ) : '';\n\t\t\t$this->titles[ \"tax_{$taxonomy}_description\" ] = ! empty( $seopress_titles['seopress_titles_tax_titles'][ $taxonomy ]['description'] ) ? $this->convert_variables( $seopress_titles['seopress_titles_tax_titles'][ $taxonomy ]['description'] ) : '';\n\n\t\t\t$this->set_robots(\n\t\t\t\t\"tax_{$taxonomy}\",\n\t\t\t\t! empty( $seopress_titles['seopress_titles_tax_titles'][ $taxonomy ]['noindex'] ),\n\t\t\t\t! empty( $seopress_titles['seopress_titles_tax_titles'][ $taxonomy ]['nofollow'] )\n\t\t\t);\n\n\t\t\t$this->sitemap[ \"tax_{$taxonomy}_sitemap\" ] = $this->enable_sitemap( 'taxonomies', $taxonomy, $seopress_sitemap ) ? 'on' : 'off';\n\t\t}\n\t}\n\n\t\/**\n\t * Whether to enable sitemap.\n\t *\n\t * @param string $object_prefix    post_types\/taxonomies.\n\t * @param string $object_type      Current object type.\n\t * @param string $seopress_sitemap Sitemap settings.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function enable_sitemap( $object_prefix, $object_type, $seopress_sitemap ) {\n\t\treturn ! empty( $seopress_sitemap[ \"seopress_xml_sitemap_{$object_prefix}_list\" ][ $object_type ]['include'] );\n\t}\n\n\t\/**\n\t * Set robots settings.\n\t *\n\t * @param string $prefix   Setting key prefix.\n\t * @param bool   $noindex  Is noindex.\n\t * @param bool   $nofollow Is nofollow.\n\t *\/\n\tprivate function set_robots( $prefix, $noindex, $nofollow ) {\n\t\tif ( $noindex || $nofollow ) {\n\t\t\t$robots = \"{$prefix}_robots\";\n\t\t\t$custom = \"{$prefix}_custom_robots\";\n\n\t\t\t\/\/ Settings.\n\t\t\t$this->titles[ $custom ]   = 'on';\n\t\t\t$this->titles[ $robots ][] = $noindex ? 'noindex' : '';\n\t\t\t$this->titles[ $robots ][] = $nofollow ? 'nofollow' : '';\n\t\t\t$this->titles[ $robots ]   = array_unique( $this->titles[ $robots ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Set Advanced settings.\n\t *\/\n\tprivate function advanced_settings() {\n\t\t$seopress_advanced = get_option( 'seopress_advanced_option_name' );\n\n\t\t$hash = [\n\t\t\t'seopress_advanced_advanced_google'    => 'google_verify',\n\t\t\t'seopress_advanced_advanced_bing'      => 'bing_verify',\n\t\t\t'seopress_advanced_advanced_yandex'    => 'yandex_verify',\n\t\t\t'seopress_advanced_advanced_pinterest' => 'pinterest_verify',\n\t\t];\n\t\t$this->replace( $hash, $seopress_advanced, $this->settings );\n\t\t$this->replace( $hash, $seopress_advanced, $this->settings, 'convert_bool' );\n\n\t\t$this->settings['attachment_redirect_urls'] = ! empty( $seopress_advanced['seopress_advanced_advanced_attachments'] ) ? 'on' : 'off';\n\t\t$this->settings['strip_category_base']      = ! empty( $seopress_advanced['seopress_advanced_advanced_category_url'] ) ? 'on' : 'off';\n\n\t\t$set_alt   = ! empty( $seopress_advanced['seopress_advanced_advanced_image_auto_alt_editor'] ) ? 'on' : 'off';\n\t\t$set_title = ! empty( $seopress_advanced['seopress_advanced_advanced_image_auto_title_editor'] ) ? 'on' : 'off';\n\n\t\t$this->settings['add_img_alt']      = $set_alt;\n\t\t$this->settings['add_img_title']    = $set_title;\n\t\t$this->settings['img_alt_format']   = 'on' === $set_alt ? ' %filename%' : '';\n\t\t$this->settings['img_title_format'] = 'on' === $set_title ? ' %filename%' : '';\n\t}\n\n\t\/**\n\t * Local SEO settings.\n\t *\n\t * @param array $seopress_local Local SEOPress data.\n\t *\/\n\tprivate function local_seo_settings( $seopress_local ) {\n\t\tif ( empty( $seopress_local ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Breadcrumbs.\n\t\t$hash = [\n\t\t\t'seopress_breadcrumbs_i18n_home'   => 'breadcrumbs_home_label',\n\t\t\t'seopress_breadcrumbs_i18n_search' => 'breadcrumbs_search_format',\n\t\t\t'seopress_breadcrumbs_i18n_404'    => 'breadcrumbs_404_label',\n\t\t\t'seopress_breadcrumbs_enable'      => 'breadcrumbs',\n\t\t];\n\t\t$this->replace( $hash, $seopress_local, $this->settings );\n\t\t$this->replace( $hash, $seopress_local, $this->settings, 'convert_bool' );\n\t\t$this->settings['breadcrumbs_separator'] = \\RankMath\\CMB2::sanitize_htmlentities( $seopress_local['seopress_breadcrumbs_separator'] );\n\n\t\t$hash = [\n\t\t\t'seopress_local_business_type'        => 'local_business_type',\n\t\t\t'seopress_local_business_price_range' => 'price_range',\n\t\t\t'seopress_local_business_url'         => 'url',\n\t\t];\n\t\t$this->replace( $hash, $seopress_local, $this->titles, 'convert_variables' );\n\n\t\t\/\/ Street Address.\n\t\t$address = [];\n\t\t$hash    = [\n\t\t\t'seopress_local_business_street_address'   => 'streetAddress',\n\t\t\t'seopress_local_business_address_locality' => 'addressLocality',\n\t\t\t'seopress_local_business_address_region'   => 'addressRegion',\n\t\t\t'seopress_local_business_postal_code'      => 'postalCode',\n\t\t\t'seopress_local_business_address_country'  => 'addressCountry',\n\t\t];\n\t\t$this->replace( $hash, $seopress_local, $address );\n\t\t$this->titles['local_address'] = $address;\n\n\t\t\/\/ Coordinates.\n\t\tif ( ! empty( $seopress_local['seopress_local_business_lat'] ) && ! empty( $seopress_local['seopress_local_business_lon'] ) ) {\n\t\t\t$this->titles['geo'] = $seopress_local['seopress_local_business_lat'] . ', ' . $seopress_local['seopress_local_business_lon'];\n\t\t}\n\n\t\t$this->seopress_pro_settings( $seopress_local );\n\t\t$this->seopress_set_opening_hours( $seopress_local );\n\t}\n\n\t\/**\n\t * 404 settings.\n\t *\n\t * @param array $seopress_local SEOPress Pro Settings.\n\t *\/\n\tprivate function seopress_pro_settings( $seopress_local ) {\n\t\tHelper::update_modules( [ 'redirections' => 'on' ] );\n\t\t$hash = [\n\t\t\t'seopress_rss_before_html'          => 'rss_before_content',\n\t\t\t'seopress_rss_after_html'           => 'rss_after_content',\n\t\t\t'seopress_404_redirect_custom_url'  => 'redirections_custom_url',\n\t\t\t'seopress_404_redirect_status_code' => 'redirections_header_code',\n\t\t];\n\t\t$this->replace( $hash, $seopress_local, $this->settings );\n\t\t$this->settings['redirections_fallback'] = 'none' === $seopress_local['seopress_404_redirect_home'] ? 'default' : ( 'home' === $seopress_local['seopress_404_redirect_home'] ? 'homepage' : 'custom' );\n\t}\n\n\t\/**\n\t * Set Opening Hours.\n\t *\n\t * @param array $seopress_local SEOPress Pro Settings.\n\t *\/\n\tprivate function seopress_set_opening_hours( $seopress_local ) {\n\t\t$hash = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ];\n\t\t$data = [];\n\t\tforeach ( $seopress_local['seopress_local_business_opening_hours'] as $key => $opening_hour ) {\n\t\t\tif ( isset( $opening_hour['open'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$data[] = [\n\t\t\t\t'day'  => $hash[ $key ],\n\t\t\t\t'time' => $opening_hour['start']['hours'] . ':' . $opening_hour['start']['mins'] . '-' . $opening_hour['end']['hours'] . ':' . $opening_hour['end']['mins'],\n\t\t\t];\n\t\t}\n\t\t$this->titles['opening_hours'] = $data;\n\t}\n\n\n\t\/**\n\t * Set schema data.\n\t *\n\t * @param int $post_id Post ID.\n\t *\/\n\tprivate function set_schema_data( $post_id ) {\n\t\tif ( ! $type = get_post_meta( $post_id, '_seopress_pro_rich_snippets_type', true ) ) { \/\/ phpcs:ignore\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $meta_keys = $this->get_schema_metakeys( $type ) ) { \/\/ phpcs:ignore\n\t\t\t$schema_type = 's' === substr( $type, -1 ) ? substr( $type, 0, -1 ) : $type;\n\t\t\tupdate_post_meta( $post_id, 'rank_math_rich_snippet', $schema_type );\n\n\t\t\tforeach ( $meta_keys as $meta_key => $data ) {\n\t\t\t\t$value = $this->get_snippet_value( $post_id, $meta_key );\n\t\t\t\tif ( $value && 'events_location_address' === $meta_key ) {\n\t\t\t\t\t$value = [ 'streetAddress' => $value ];\n\t\t\t\t}\n\n\t\t\t\tupdate_post_meta( $post_id, \"rank_math_snippet_{$data}\", $value );\n\t\t\t}\n\n\t\t\t\/\/ Convert post now.\n\t\t\t$data = $this->json_ld->get_old_schema( $post_id, $this->single );\n\t\t\tif ( isset( $data['richSnippet'] ) ) {\n\t\t\t\t$data             = $data['richSnippet'];\n\t\t\t\t$type             = $data['@type'];\n\t\t\t\t$data['metadata'] = [\n\t\t\t\t\t'title' => $type,\n\t\t\t\t\t'type'  => 'template',\n\t\t\t\t];\n\t\t\t\tupdate_post_meta( $post_id, 'rank_math_schema_' . $type, $data );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Set object redirection.\n\t *\n\t * @param int    $object_id   Object id for destination.\n\t * @param string $object_type Object type for destination.\n\t *\/\n\tprivate function set_object_redirection( $object_id, $object_type ) {\n\t\t$source_url = 'term' === $object_type ? get_term_link( $object_id ) : get_permalink( $object_id );\n\t\tif ( is_wp_error( $source_url ) ) { \/\/ phpcs:ignore\n\t\t\treturn;\n\t\t}\n\n\t\t$hash = [\n\t\t\t'_seopress_redirections_type'  => 'redirection_header_code',\n\t\t\t'_seopress_redirections_value' => 'redirection_url_to',\n\t\t];\n\t\t$this->replace_meta( $hash, null, $object_id, $object_type, 'convert_variables' );\n\n\t\t$redirection = [\n\t\t\t'source'      => trim( wp_parse_url( $source_url, PHP_URL_PATH ), '\/' ),\n\t\t\t'destination' => $this->get_meta( $object_type, $object_id, '_seopress_redirections_value' ),\n\t\t\t'code'        => $this->get_meta( $object_type, $object_id, '_seopress_redirections_type' ),\n\t\t\t'status'      => $this->get_meta( $object_type, $object_id, '_seopress_redirections_enabled' ),\n\t\t];\n\n\t\t$this->save_redirection( $redirection );\n\t}\n\n\t\/**\n\t * Get snippet value.\n\t *\n\t * @param int $post_id  Post ID.\n\t * @param int $meta_key Meta key.\n\t *\n\t * @return string $value Snippet value\n\t *\/\n\tprivate function get_snippet_value( $post_id, $meta_key ) {\n\t\t$prefix = in_array( $meta_key, [ 'events_offers_valid_from_date', 'events_offers_valid_from_time' ], true ) ? '_seopress_rich_snippets_' : '_seopress_pro_rich_snippets_';\n\t\t$value  = get_post_meta( $post_id, $prefix . $meta_key, true );\n\n\t\tif ( in_array( $meta_key, [ 'recipes_prep_time', 'recipes_cook_time', 'videos_duration' ], true ) ) {\n\t\t\t$value .= 'M';\n\t\t}\n\n\t\t$hash = [\n\t\t\t'events_start_date'             => 'events_start_time',\n\t\t\t'events_end_date'               => 'events_end_time',\n\t\t\t'events_offers_valid_from_date' => 'events_offers_valid_from_time',\n\t\t];\n\n\t\tif ( isset( $hash[ $meta_key ] ) ) {\n\t\t\t$time  = get_post_meta( $post_id, $prefix . $hash[ $meta_key ], true );\n\t\t\t$value = strtotime( $value . ' ' . $time );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Get schema meta keys.\n\t *\n\t * @param string $type Type of snippet.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_schema_metakeys( $type ) {\n\t\t$hash = [\n\t\t\t'articles' => [\n\t\t\t\t'article_type'  => 'article_type',\n\t\t\t\t'article_title' => 'name',\n\t\t\t],\n\t\t\t'recipes'  => [\n\t\t\t\t'recipes_name'       => 'name',\n\t\t\t\t'recipes_desc'       => 'desc',\n\t\t\t\t'recipes_cat'        => 'recipe_type',\n\t\t\t\t'recipes_prep_time'  => 'recipe_preptime',\n\t\t\t\t'recipes_cook_time'  => 'recipe_cooktime',\n\t\t\t\t'recipes_calories'   => 'recipe_calories',\n\t\t\t\t'recipes_yield'      => 'recipe_yield',\n\t\t\t\t'recipes_ingredient' => 'recipe_ingredients',\n\t\t\t],\n\t\t\t'courses'  => [\n\t\t\t\t'courses_title'   => 'name',\n\t\t\t\t'courses_desc'    => 'desc',\n\t\t\t\t'courses_school'  => 'course_provider',\n\t\t\t\t'courses_website' => 'course_provider_url',\n\t\t\t],\n\t\t\t'videos'   => [\n\t\t\t\t'videos_name'        => 'name',\n\t\t\t\t'videos_description' => 'desc',\n\t\t\t\t'videos_img'         => 'rank_math_twitter_title',\n\t\t\t\t'videos_url'         => 'video_url',\n\t\t\t\t'videos_duration'    => 'video_duration',\n\t\t\t],\n\t\t\t'events'   => [\n\t\t\t\t'events_type'                   => 'event_type',\n\t\t\t\t'events_name'                   => 'name',\n\t\t\t\t'events_desc'                   => 'desc',\n\t\t\t\t'events_location_address'       => 'event_address',\n\t\t\t\t'events_location_name'          => 'event_venue',\n\t\t\t\t'events_location_url'           => 'event_venue_url',\n\t\t\t\t'events_start_date'             => 'event_startdate',\n\t\t\t\t'events_end_date'               => 'event_enddate',\n\t\t\t\t'events_offers_price'           => 'event_price',\n\t\t\t\t'events_offers_price_currency'  => 'event_currency',\n\t\t\t\t'events_offers_url'             => 'event_ticketurl',\n\t\t\t\t'events_offers_availability'    => 'event_availability',\n\t\t\t\t'events_offers_valid_from_date' => 'event_availability_starts',\n\t\t\t\t'events_performer'              => 'event_performer',\n\t\t\t],\n\t\t\t'products' => [\n\t\t\t\t'product_description'    => 'desc',\n\t\t\t\t'product_name'           => 'name',\n\t\t\t\t'product_price_currency' => 'product_currency',\n\t\t\t\t'product_price'          => 'product_price',\n\t\t\t],\n\t\t\t'review'   => [\n\t\t\t\t'review_item'   => 'name',\n\t\t\t\t'item_name'     => 'desc',\n\t\t\t\t'review_rating' => 'review_rating_value',\n\t\t\t],\n\t\t];\n\n\t\treturn isset( $hash[ $type ] ) ? $hash[ $type ] : false;\n\t}\n\n\t\/**\n\t * Set primary term for post\n\t *\n\t * @param int[] $post_ids Post IDs.\n\t *\/\n\tprivate function set_primary_term( $post_ids ) {\n\t\t$post_ids = wp_list_pluck( $post_ids, 'ID' );\n\t\t$table    = DB::query_builder( 'postmeta' );\n\t\t$results  = $table->whereLike( 'meta_key', '_seopress_robots_primary_cat' )->whereIn( 'post_id', $post_ids )->get();\n\n\t\tforeach ( $results as $result ) {\n\t\t\tif ( 'none' !== $result->meta_value ) {\n\t\t\t\tupdate_post_meta( $result->post_id, 'rank_math_primary_category', $result->meta_value );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Set post\/term robots.\n\t *\n\t * @param int    $object_id   Object id.\n\t * @param string $object_type Object type.\n\t *\/\n\tprivate function set_object_robots( $object_id, $object_type ) {\n\t\t\/\/ Early bail if robots data is set in Rank Math plugin.\n\t\tif ( ! empty( $this->get_meta( $object_type, $object_id, 'rank_math_robots' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$current     = $this->get_robots_by_hash( $object_id, $object_type );\n\t\t$is_noindex  = in_array( 'noindex', $current, true );\n\t\t$is_nofollow = in_array( 'nofollow', $current, true );\n\n\t\tif ( ! $is_noindex || ! $is_nofollow ) {\n\t\t\t$robots    = $this->get_default_robots( $object_id, $object_type );\n\t\t\t$current[] = ! $is_nofollow && ! empty( $robots['nofollow'] ) ? 'nofollow' : '';\n\n\t\t\t\/\/ Keep global no index status.\n\t\t\tif ( ! empty( $robots['noindex'] ) ) {\n\t\t\t\tunset( $current['index'] );\n\t\t\t\t$current[] = 'noindex';\n\t\t\t}\n\t\t}\n\n\t\t$this->update_meta( $object_type, $object_id, 'rank_math_robots', array_unique( $current ) );\n\t}\n\n\t\/**\n\t * Get by meta hash.\n\t *\n\t * @param int    $object_id   Object id.\n\t * @param string $object_type Object type.\n\t *\n\t * @return array Array of robots data.\n\t *\/\n\tprivate function get_robots_by_hash( $object_id, $object_type ) {\n\t\t$current = [];\n\t\t$hash    = [\n\t\t\t'_seopress_robots_index'      => 'noindex',\n\t\t\t'_seopress_robots_follow'     => 'nofollow',\n\t\t\t'_seopress_robots_imageindex' => 'noimageindex',\n\t\t\t'_seopress_robots_archive'    => 'noarchive',\n\t\t\t'_seopress_robots_snippet'    => 'nosnippet',\n\t\t];\n\n\t\tforeach ( $hash as $source => $value ) {\n\t\t\tif ( ! empty( $this->get_meta( $object_type, $object_id, $source ) ) ) {\n\t\t\t\t$current[] = $value;\n\t\t\t}\n\t\t}\n\n\t\treturn $current;\n\t}\n\n\t\/**\n\t * Get default robots data from settings.\n\t *\n\t * @param int    $object_id   Object id.\n\t * @param string $object_type Object type.\n\t *\n\t * @return array Array of robots data.\n\t *\/\n\tprivate function get_default_robots( $object_id, $object_type ) {\n\t\t$seopress_titles = get_option( 'seopress_titles_option_name' );\n\t\tif ( 'post' === $object_type ) {\n\t\t\t$post_type = get_post_type( $object_id );\n\t\t\treturn isset( $seopress_titles['seopress_titles_single_titles'][ $post_type ] ) ? $seopress_titles['seopress_titles_single_titles'][ $post_type ] : [];\n\t\t}\n\n\t\t$term = get_term( $object_id );\n\t\treturn isset( $seopress_titles['seopress_titles_tax_titles'][ $term->taxonomy ] ) ? $seopress_titles['seopress_titles_tax_titles'][ $term->taxonomy ] : [];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/importers\/class-yoast.php","ext":"php","size":41567,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Yoast SEO Import Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Importers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Importers;\n\nuse RankMath\\Helper;\nuse RankMath\\Redirections\\Redirection;\nuse RankMath\\Tools\\Yoast_Blocks;\nuse RankMath\\Helpers\\DB;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Yoast class.\n *\/\nclass Yoast extends Plugin_Importer {\n\n\t\/**\n\t * The plugin name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $plugin_name = 'Yoast SEO';\n\n\t\/**\n\t * Plugin options meta key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_key = '_yoast_wpseo_';\n\n\t\/**\n\t * Option keys to import and clean.\n\t *\n\t * @var array\n\t *\/\n\tprotected $option_keys = [ 'wpseo', 'wpseo_%' ];\n\n\t\/**\n\t * Choices keys to import.\n\t *\n\t * @var array\n\t *\/\n\tprotected $choices = [ 'settings', 'locations', 'news', 'video', 'postmeta', 'termmeta', 'usermeta', 'redirections', 'blocks' ];\n\n\t\/**\n\t * Table names to drop while cleaning.\n\t *\n\t * @var array\n\t *\/\n\tprotected $table_names = [ 'yoast_seo_links', 'yoast_seo_meta' ];\n\n\t\/**\n\t * Convert Yoast \/ AIO SEO variables if needed.\n\t *\n\t * @param string $value Value to convert.\n\t *\n\t * @return string\n\t *\/\n\tpublic function convert_variables( $value ) {\n\t\t$value = str_replace( '%%term_title%%', '%term%', $value );\n\t\t$value = str_replace( '%%category_description%%', '%term_description%', $value );\n\t\t$value = str_replace( '%%searchphrase%%', '%search_query%', $value );\n\t\t$value = preg_replace( '\/%%cf_([^%]+)%%\/i', '%customfield($1)%', $value );\n\t\t$value = preg_replace( '\/%%ct_([^%]+)%%\/i', '%customterm($1)%', $value );\n\t\t$value = preg_replace( '\/%%ct_desc_([^%]+)%%\/i', '%customterm($1)%', $value );\n\n\t\treturn str_replace( '%%', '%', $value );\n\t}\n\n\t\/**\n\t * Import settings of plugin.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function settings() {\n\t\t$this->get_settings();\n\n\t\t$yoast_main          = get_option( 'wpseo' );\n\t\t$yoast_social        = get_option( 'wpseo_social' );\n\t\t$yoast_titles        = get_option( 'wpseo_titles' );\n\t\t$yoast_internallinks = get_option( 'wpseo_internallinks' );\n\t\t$yoast_sitemap       = get_option( 'wpseo_xml' );\n\n\t\t\/\/ Features.\n\t\t$modules  = [];\n\t\t$features = [\n\t\t\t'keyword_analysis_active' => 'seo-analysis',\n\t\t\t'enable_xml_sitemap'      => 'sitemap',\n\t\t];\n\t\tforeach ( $features as $feature => $module ) {\n\t\t\t$modules[ $module ] = 1 === intval( $yoast_main[ $feature ] ) ? 'on' : 'off';\n\t\t}\n\t\tHelper::update_modules( $modules );\n\n\t\t$this->titles['local_seo'] = isset( $yoast_titles['company_or_person'] ) && ! empty( $yoast_titles['company_or_person'] ) ? 'on' : 'off';\n\n\t\t\/\/ Titles & Descriptions.\n\t\t$hash = [\n\t\t\t'title-home-wpseo'       => 'homepage_title',\n\t\t\t'metadesc-home-wpseo'    => 'homepage_description',\n\t\t\t'title-author-wpseo'     => 'author_archive_title',\n\t\t\t'metadesc-author-wpseo'  => 'author_archive_description',\n\t\t\t'title-archive-wpseo'    => 'date_archive_title',\n\t\t\t'metadesc-archive-wpseo' => 'date_archive_description',\n\t\t\t'title-search-wpseo'     => 'search_title',\n\t\t\t'title-404-wpseo'        => '404_title',\n\t\t\t'org-description'        => 'organization_description',\n\t\t];\n\t\t$this->replace( $hash, $yoast_titles, $this->titles, 'convert_variables' );\n\n\t\t$this->local_seo_settings();\n\t\t$this->set_additional_organization_details( $yoast_titles );\n\t\t$this->set_separator( $yoast_titles );\n\t\t$this->set_post_types( $yoast_titles );\n\t\t$this->set_taxonomies( $yoast_titles, $yoast_sitemap );\n\t\t$this->sitemap_settings( $yoast_main, $yoast_sitemap, $yoast_titles );\n\t\t$this->social_webmaster_settings( $yoast_main, $yoast_social );\n\t\t$this->breadcrumb_settings( $yoast_titles, $yoast_internallinks );\n\t\t$this->misc_settings( $yoast_titles, $yoast_social );\n\t\t$this->slack_settings( $yoast_main );\n\t\t$this->update_settings();\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Set post type settings.\n\t *\n\t * @param array $yoast_titles Settings.\n\t *\/\n\tprivate function set_post_types( $yoast_titles ) {\n\t\t$hash = [];\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\t$this->set_robots( \"pt_{$post_type}\", $post_type, $yoast_titles );\n\n\t\t\t$hash[ \"title-{$post_type}\" ]              = \"pt_{$post_type}_title\";\n\t\t\t$hash[ \"metadesc-{$post_type}\" ]           = \"pt_{$post_type}_description\";\n\t\t\t$hash[ \"post_types-{$post_type}-maintax\" ] = \"pt_{$post_type}_primary_taxonomy\";\n\n\t\t\t\/\/ Has Archive.\n\t\t\t$hash[ \"title-ptarchive-{$post_type}\" ]    = \"pt_{$post_type}_archive_title\";\n\t\t\t$hash[ \"metadesc-ptarchive-{$post_type}\" ] = \"pt_{$post_type}_archive_description\";\n\n\t\t\t\/\/ NOINDEX and Sitemap.\n\t\t\t$this->sitemap[ \"pt_{$post_type}_sitemap\" ] = isset( $yoast_titles[ \"noindex-{$post_type}\" ] ) && $yoast_titles[ \"noindex-{$post_type}\" ] ? 'off' : 'on';\n\n\t\t\t\/\/ Show\/Hide Metabox.\n\t\t\tif ( isset( $yoast_titles[ \"display-metabox-pt-{$post_type}\" ] ) ) {\n\t\t\t\t$show = $yoast_titles[ \"display-metabox-pt-{$post_type}\" ]; \/\/ phpcs:ignore\n\t\t\t\t$this->titles[ \"pt_{$post_type}_add_meta_box\" ] = ( ! $show || 'off' === $show ) ? 'off' : 'on';\n\t\t\t}\n\t\t}\n\n\t\t$this->replace( $hash, $yoast_titles, $this->titles, 'convert_variables' );\n\t}\n\n\t\/**\n\t * Set taxonomies settings.\n\t *\n\t * @param array $yoast_titles  Titles & Meta Settings.\n\t * @param array $yoast_sitemap Sitemap Settings.\n\t *\/\n\tprivate function set_taxonomies( $yoast_titles, $yoast_sitemap ) {\n\t\t$hash = [];\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy => $object ) {\n\t\t\t$this->set_robots( \"tax_{$taxonomy}\", \"tax-{$taxonomy}\", $yoast_titles );\n\n\t\t\t$hash[ \"title-tax-{$taxonomy}\" ]    = \"tax_{$taxonomy}_title\";\n\t\t\t$hash[ \"metadesc-tax-{$taxonomy}\" ] = \"tax_{$taxonomy}_description\";\n\n\t\t\t\/\/ Show\/Hide Metabox.\n\t\t\t$this->titles[ \"tax_{$taxonomy}_add_meta_box\" ] = isset( $yoast_titles[ \"display-metabox-tax-{$taxonomy}\" ] ) && $yoast_titles[ \"display-metabox-tax-{$taxonomy}\" ] ? 'on' : 'off';\n\n\t\t\t\/\/ Sitemap.\n\t\t\t$key   = \"taxonomies-{$taxonomy}-not_in_sitemap\";\n\t\t\t$value = isset( $yoast_sitemap[ $key ] ) ? ! $yoast_sitemap[ $key ] : false;\n\n\t\t\t$this->sitemap[ \"tax_{$taxonomy}_sitemap\" ] = $value ? 'on' : 'off';\n\t\t}\n\t\t$this->replace( $hash, $yoast_titles, $this->titles, 'convert_variables' );\n\t}\n\n\t\/**\n\t * Set robots settings.\n\t *\n\t * @param string $prefix       Setting prefix.\n\t * @param string $yoast_prefix Setting prefix.\n\t * @param array  $yoast_titles Settings.\n\t *\/\n\tprivate function set_robots( $prefix, $yoast_prefix, $yoast_titles ) {\n\t\tif ( isset( $yoast_titles[ \"noindex-{$yoast_prefix}\" ] ) ) {\n\t\t\t$this->titles[ \"{$prefix}_custom_robots\" ] = 'on';\n\t\t\t$this->titles[ \"{$prefix}_robots\" ]        = [];\n\t\t\tif ( $yoast_titles[ \"noindex-{$yoast_prefix}\" ] ) {\n\t\t\t\t$this->titles[ \"{$prefix}_robots\" ][] = 'noindex';\n\t\t\t\t$this->titles[ \"{$prefix}_robots\" ]   = array_unique( $this->titles[ \"{$prefix}_robots\" ] );\n\t\t\t}\n\t\t}\n\n\t\t$this->titles[ \"{$prefix}_add_meta_box\" ] = isset( $yoast_titles[ \"hideeditbox-{$yoast_prefix}\" ] ) && $yoast_titles[ \"hideeditbox-{$yoast_prefix}\" ] ? 'off' : 'on';\n\t}\n\n\t\/**\n\t * Import post meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function postmeta() {\n\t\t$this->set_pagination( $this->get_post_ids( true ) );\n\n\t\t$post_ids = $this->get_post_ids();\n\n\t\t$this->set_primary_term( $post_ids );\n\n\t\t$hash = [\n\t\t\t'_yoast_wpseo_title'                 => 'rank_math_title',\n\t\t\t'_yoast_wpseo_metadesc'              => 'rank_math_description',\n\t\t\t'_yoast_wpseo_focuskw'               => 'rank_math_focus_keyword',\n\t\t\t'_yoast_wpseo_canonical'             => 'rank_math_canonical_url',\n\t\t\t'_yoast_wpseo_opengraph-title'       => 'rank_math_facebook_title',\n\t\t\t'_yoast_wpseo_opengraph-description' => 'rank_math_facebook_description',\n\t\t\t'_yoast_wpseo_twitter-title'         => 'rank_math_twitter_title',\n\t\t\t'_yoast_wpseo_twitter-description'   => 'rank_math_twitter_description',\n\t\t\t'_yoast_wpseo_bctitle'               => 'rank_math_breadcrumb_title',\n\t\t\t'_yoast_wpseo_newssitemap-exclude'   => 'rank_math_news_sitemap_exclude',\n\t\t];\n\n\t\tforeach ( $post_ids as $post ) {\n\t\t\t$post_id = $post->ID;\n\t\t\t$this->replace_meta( $hash, null, $post_id, 'post', 'convert_variables' );\n\t\t\tdelete_post_meta( $post_id, 'rank_math_permalink' );\n\n\t\t\t\/\/ Cornerstone Content.\n\t\t\t$cornerstone = get_post_meta( $post_id, '_yoast_wpseo_is_cornerstone', true );\n\t\t\tif ( ! empty( $cornerstone ) ) {\n\t\t\t\tupdate_post_meta( $post_id, 'rank_math_pillar_content', 'on' );\n\t\t\t}\n\n\t\t\t$news_robots = get_post_meta( $post_id, '_yoast_wpseo_newssitemap-robots-index', true );\n\t\t\t$news_robots = ! empty( $news_robots ) ? 'noindex' : 'index';\n\t\t\tupdate_post_meta( $post_id, 'rank_math_news_sitemap_robots', $news_robots );\n\n\t\t\t$this->set_post_robots( $post_id );\n\t\t\t$this->replace_image( get_post_meta( $post_id, '_yoast_wpseo_opengraph-image', true ), 'post', 'rank_math_facebook_image', 'rank_math_facebook_image_id', $post_id );\n\t\t\t$this->replace_image( get_post_meta( $post_id, '_yoast_wpseo_twitter-image', true ), 'post', 'rank_math_twitter_image', 'rank_math_twitter_image_id', $post_id );\n\t\t\t$this->set_post_focus_keyword( $post_id );\n\t\t\t$this->is_twitter_using_facebook( 'post', $post_id );\n\t\t\t$this->add_schema_data( $post_id );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Import Locations data from Yoast Local plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function locations() {\n\t\t$this->import_locations_terms();\n\t\t$this->set_pagination( $this->get_location_ids( true ) );\n\t\t$locations = $this->get_location_ids();\n\n\t\tforeach ( $locations as $location ) {\n\t\t\t$args = (array) $location;\n\t\t\tunset( $args['ID'] );\n\t\t\t$args['post_type'] = 'rank_math_locations';\n\n\t\t\t$post_id = wp_insert_post( $args );\n\t\t\tif ( $post_id === 0 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$post_terms = wp_get_object_terms( $location->ID, 'wpseo_locations_category', [ 'fields' => 'slugs' ] );\n\t\t\twp_set_object_terms( $post_id, $post_terms, 'rank_math_location_category', false );\n\n\t\t\t$this->locations_meta( $location->ID, $post_id );\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Import Schema Data.\n\t *\n\t * @param int $post_id Post ID.\n\t *\/\n\tprivate function add_schema_data( $post_id ) {\n\t\t$type = get_post_meta( $post_id, '_yoast_wpseo_schema_article_type', true );\n\t\tif ( empty( $type ) || ! in_array( $type, [ 'Article', 'BlogPosting', 'NewsArticle' ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$data['@type']    = $type;\n\t\t$data['metadata'] = [\n\t\t\t'title'     => Helper::sanitize_schema_title( $type ),\n\t\t\t'type'      => 'template',\n\t\t\t'isPrimary' => 1,\n\t\t\t'shortcode' => uniqid( 's-' ),\n\t\t];\n\n\t\tupdate_post_meta( $post_id, 'rank_math_schema_' . $type, $data );\n\t}\n\n\t\/**\n\t * Import Locations terms.\n\t *\/\n\tprivate function import_locations_terms() {\n\t\t$terms = get_terms( 'wpseo_locations_category' );\n\t\tif ( empty( $terms ) || is_wp_error( $terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $terms as $term ) {\n\t\t\twp_insert_term( $term->name, 'rank_math_location_category', $term );\n\t\t}\n\t}\n\n\t\/**\n\t * Import Locations metadata.\n\t *\n\t * @param int $old_post_id Yoast's location id.\n\t * @param int $new_post_id Newly created location id.\n\t *\/\n\tprivate function locations_meta( $old_post_id, $new_post_id ) {\n\t\t$metas = DB::query_builder( 'postmeta' )->where( 'post_id', $old_post_id )->select()->get();\n\t\tif ( empty( $metas ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hash = [\n\t\t\t'_wpseo_business_type'                => '@type',\n\t\t\t'_wpseo_business_email'               => 'email',\n\t\t\t'_wpseo_business_url'                 => 'url',\n\t\t\t'_wpseo_business_address'             => 'address',\n\t\t\t'_wpseo_business_address_2'           => 'address',\n\t\t\t'_wpseo_business_city'                => 'address',\n\t\t\t'_wpseo_business_state'               => 'address',\n\t\t\t'_wpseo_business_zipcode'             => 'address',\n\t\t\t'_wpseo_business_country'             => 'address',\n\t\t\t'_wpseo_business_phone'               => 'telephone',\n\t\t\t'_wpseo_business_fax'                 => 'faxNumber',\n\t\t\t'_wpseo_business_location_logo'       => 'image',\n\t\t\t'_wpseo_business_vat_id'              => 'vatID',\n\t\t\t'_wpseo_business_tax_id'              => 'taxID',\n\t\t\t'_wpseo_business_price_range'         => 'priceRange',\n\t\t\t'_wpseo_business_currencies_accepted' => 'currenciesAccepted',\n\t\t\t'_wpseo_business_payment_accepted'    => 'paymentAccepted',\n\t\t\t'_wpseo_business_area_served'         => 'areaServed',\n\t\t\t'_wpseo_coordinates_lat'              => 'latitude',\n\t\t\t'_wpseo_coordinates_long'             => 'longitude',\n\t\t\t'_wpseo_business_phone_2nd'           => 'secondary_number',\n\t\t\t'_wpseo_business_coc_id'              => 'coc_id',\n\t\t];\n\n\t\t$schema        = [\n\t\t\t'name'     => '%seo_title%',\n\t\t\t'metadata' => [\n\t\t\t\t'type'  => 'template',\n\t\t\t\t'title' => 'LocalBusiness',\n\t\t\t],\n\t\t\t'geo'      => [\n\t\t\t\t'@type' => 'GeoCoordinates',\n\t\t\t],\n\t\t];\n\t\t$address       = [];\n\t\t$opening_hours = [];\n\n\t\tforeach ( $metas as $meta ) {\n\t\t\tif ( ! Str::starts_with( '_wpseo_', $meta->meta_key ) ) {\n\t\t\t\tupdate_post_meta( $new_post_id, $meta->meta_key, $meta->meta_value );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( Str::starts_with( '_wpseo_opening_hours_', $meta->meta_key ) ) {\n\t\t\t\t$opening_hours[ $meta->meta_key ] = $meta->meta_value;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! isset( $hash[ $meta->meta_key ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( in_array( $hash[ $meta->meta_key ], [ 'secondary_number', 'coc_id' ], true ) ) {\n\t\t\t\t$schema['metadata'][ $hash[ $meta->meta_key ] ] = $meta->meta_value;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( 'address' === $hash[ $meta->meta_key ] ) {\n\t\t\t\t$address[ $meta->meta_key ] = $meta->meta_value;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( in_array( $hash[ $meta->meta_key ], [ 'latitude', 'longitude' ], true ) ) {\n\t\t\t\t$schema['geo'][ $hash[ $meta->meta_key ] ] = $meta->meta_value;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$schema[ $hash[ $meta->meta_key ] ] = $meta->meta_value;\n\t\t}\n\n\t\tif ( ! empty( $address ) ) {\n\t\t\t$schema['address'] = $this->replace_address( $address );\n\t\t}\n\n\t\tif ( ! empty( $opening_hours ) ) {\n\t\t\t$schema['openingHoursSpecification'] = $this->replace_opening_hours( $opening_hours );\n\t\t}\n\n\t\t$schema['@type'] = 'LocalBusiness';\n\n\t\tif ( ! empty( $schema['image'] ) ) {\n\t\t\t$schema['image'] = [\n\t\t\t\t'@type' => 'ImageObject',\n\t\t\t\t'url'   => $schema['image'],\n\t\t\t];\n\t\t}\n\n\t\tif ( isset( $schema['geo']['latitude'] ) && isset( $schema['geo']['longitude'] ) ) {\n\t\t\tupdate_post_meta( $new_post_id, 'rank_math_local_business_latitide', $schema['geo']['latitude'] );\n\t\t\tupdate_post_meta( $new_post_id, 'rank_math_local_business_longitude', $schema['geo']['longitude'] );\n\t\t}\n\n\t\tupdate_post_meta( $new_post_id, 'rank_math_schema_' . $schema['@type'], $schema );\n\t}\n\n\t\/**\n\t * Replace Opening Hours data.\n\t *\n\t * @param array $opening_hours Opening Hours data.\n\t * @return array Processed data.\n\t *\/\n\tprivate function replace_opening_hours( $opening_hours ) {\n\t\t$data = [];\n\t\t$days = [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday' ];\n\t\tforeach ( $days as $day ) {\n\t\t\t$opens  = ! empty( $opening_hours[ '_wpseo_opening_hours_' . strtolower( $day ) . '_from' ] ) ? $opening_hours[ '_wpseo_opening_hours_' . strtolower( $day ) . '_from' ] : 'closed';\n\t\t\t$closes = ! empty( $opening_hours[ '_wpseo_opening_hours_' . strtolower( $day ) . '_to' ] ) ? $opening_hours[ '_wpseo_opening_hours_' . strtolower( $day ) . '_to' ] : 'closed';\n\n\t\t\tif ( 'closed' === $opens ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data[ $day ] = [\n\t\t\t\t'@type'     => 'OpeningHoursSpecification',\n\t\t\t\t'dayOfWeek' => $day,\n\t\t\t\t'opens'     => $opens,\n\t\t\t\t'closes'    => $closes,\n\t\t\t];\n\t\t}\n\n\t\treturn array_values( $data );\n\t}\n\n\t\/**\n\t * Replace Address data.\n\t *\n\t * @param array $address Address data.\n\t * @return array Processed data.\n\t *\/\n\tprivate function replace_address( $address ) {\n\t\t$data = [\n\t\t\t'@type' => 'PostalAddress',\n\t\t];\n\t\t$hash = [\n\t\t\t'_wpseo_business_address'   => 'streetAddress',\n\t\t\t'_wpseo_business_address_2' => 'addressLocality',\n\t\t\t'_wpseo_business_state'     => 'addressRegion',\n\t\t\t'_wpseo_business_zipcode'   => 'postalCode',\n\t\t\t'_wpseo_business_country'   => 'addressCountry',\n\t\t];\n\n\t\tforeach ( $hash as $key => $value ) {\n\t\t\t$data[ $value ] = isset( $address[ $key ] ) ? $address[ $key ] : '';\n\t\t}\n\n\t\tif ( ! empty( $address['_wpseo_business_city'] ) ) {\n\t\t\t$data['addressLocality'] = $data['addressLocality'] . ', ' . $address['_wpseo_business_city'];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get all location IDs.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprivate function get_location_ids( $count = false ) {\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$table = DB::query_builder( 'posts' )->where( 'post_type', 'wpseo_locations' );\n\n\t\treturn $count ? absint( $table->selectCount( 'ID', 'total' )->getVar() ) :\n\t\t\t$table->select()->page( $paged - 1, $this->items_per_page )->get();\n\t}\n\n\t\/**\n\t * Get all location IDs.\n\t *\n\t * @param bool $count If we need count only for pagination purposes.\n\t * @return int|array\n\t *\/\n\tprivate function get_video_posts( $count = false ) {\n\t\tglobal $wpdb;\n\t\t$paged = $this->get_pagination_arg( 'page' );\n\t\t$posts = get_posts(\n\t\t\t[\n\t\t\t\t'numberposts' => -1,\n\t\t\t\t'post_type'   => 'any',\n\t\t\t\t'post_status' => 'any',\n\t\t\t\t'fields'      => 'ids',\n\t\t\t\t'meta_query'  => [ \/\/ phpcs:ignore -- Using meta_query here is acceptable as it is specifically for importing data from Yoast and runs exclusively in the background.\n\t\t\t\t\t'relation' => 'AND',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => '_yoast_wpseo_video_meta',\n\t\t\t\t\t\t'compare' => 'EXISTS',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => '_yoast_wpseo_videositemap-disable',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\treturn $count ? count( $posts ) : $posts;\n\t}\n\n\t\/**\n\t * Set post robots.\n\t *\n\t * @param int $post_id Post ID.\n\t *\/\n\tprivate function set_post_robots( $post_id ) {\n\t\t\/\/ Early bail if robots data is set in Rank Math plugin.\n\t\tif ( ! empty( $this->get_meta( 'post', $post_id, 'rank_math_robots' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$robots_nofollow = get_post_meta( $post_id, '_yoast_wpseo_meta-robots-nofollow', true );\n\t\t$robots_noindex  = (int) get_post_meta( $post_id, '_yoast_wpseo_meta-robots-noindex', true );\n\t\t$robots_advanced = (array) get_post_meta( $post_id, '_yoast_wpseo_meta-robots-adv', true );\n\n\t\t\/\/ If all are empty, then keep default robots.\n\t\tif ( empty( $robots_nofollow ) && empty( $robots_noindex ) && empty( $robots_advanced ) ) {\n\t\t\tupdate_post_meta( $post_id, 'rank_math_robots', [] );\n\t\t\treturn;\n\t\t}\n\n\t\t$robots = [ $this->set_robots_index( $post_id, $robots_noindex ) ];\n\t\tif ( $robots_nofollow ) {\n\t\t\t$robots[] = 'nofollow';\n\t\t}\n\n\t\t$robots_advanced = explode( ',', $robots_advanced[0] );\n\t\tif ( $robots_advanced ) {\n\t\t\t$robots = array_merge( $robots, $robots_advanced );\n\t\t}\n\n\t\tupdate_post_meta( $post_id, 'rank_math_robots', array_filter( array_unique( $robots ) ) );\n\t}\n\n\t\/**\n\t * Set post robots based on the Settings.\n\t *\n\t * @param int $post_id        Post ID.\n\t * @param int $robots_noindex Whether or not the post is indexed.\n\t *\n\t * @return string\n\t *\/\n\tprivate function set_robots_index( $post_id, $robots_noindex ) {\n\t\tif ( 0 === $robots_noindex ) {\n\t\t\t$yoast_titles = get_option( 'wpseo_titles' );\n\t\t\treturn empty( $yoast_titles[ 'noindex-' . get_post_type( $post_id ) ] ) ? 'index' : 'noindex';\n\t\t}\n\n\t\treturn 1 === $robots_noindex ? 'noindex' : 'index';\n\t}\n\n\t\/**\n\t * Set Focus Keyword.\n\t *\n\t * @param int $post_id Post ID.\n\t *\/\n\tprivate function set_post_focus_keyword( $post_id ) {\n\t\t$extra_fks = get_post_meta( $post_id, '_yoast_wpseo_focuskeywords', true );\n\t\t$extra_fks = json_decode( $extra_fks, true );\n\t\tif ( empty( $extra_fks ) || ! is_array( $extra_fks ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$extra_fks = implode( ', ', array_column( $extra_fks, 'keyword' ) );\n\t\t$main_fk   = get_post_meta( $post_id, 'rank_math_focus_keyword', true );\n\t\tupdate_post_meta( $post_id, 'rank_math_focus_keyword', $main_fk . ', ' . $extra_fks );\n\t}\n\n\t\/**\n\t * Set primary term for the posts.\n\t *\n\t * @param int[] $post_ids Post IDs.\n\t *\/\n\tprivate function set_primary_term( $post_ids ) {\n\t\t$post_ids = wp_list_pluck( $post_ids, 'ID' );\n\t\t$table    = DB::query_builder( 'postmeta' );\n\t\t$results  = $table->whereLike( 'meta_key', 'wpseo_primary' )->whereIn( 'post_id', $post_ids )->get();\n\n\t\tforeach ( $results as $result ) {\n\t\t\t$key = str_replace( '_yoast_wpseo', 'rank_math', $result->meta_key );\n\t\t\tupdate_post_meta( $result->post_id, $key, $result->meta_value );\n\t\t}\n\t}\n\n\t\/**\n\t * Import term meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function termmeta() {\n\t\t$count         = 0;\n\t\t$taxonomy_meta = get_option( 'wpseo_taxonomy_meta' );\n\n\t\tif ( empty( $taxonomy_meta ) ) {\n\t\t\treturn compact( 'count' );\n\t\t}\n\n\t\t$hash = [\n\t\t\t'wpseo_title'                 => 'rank_math_title',\n\t\t\t'wpseo_desc'                  => 'rank_math_description',\n\t\t\t'wpseo_metadesc'              => 'rank_math_description',\n\t\t\t'wpseo_focuskw'               => 'rank_math_focus_keyword',\n\t\t\t'wpseo_canonical'             => 'rank_math_canonical_url',\n\t\t\t'wpseo_opengraph-title'       => 'rank_math_facebook_title',\n\t\t\t'wpseo_opengraph-description' => 'rank_math_facebook_description',\n\t\t\t'wpseo_twitter-title'         => 'rank_math_twitter_title',\n\t\t\t'wpseo_twitter-description'   => 'rank_math_twitter_description',\n\t\t\t'wpseo_bctitle'               => 'rank_math_breadcrumb_title',\n\t\t];\n\t\tforeach ( $taxonomy_meta as $terms ) {\n\t\t\tforeach ( $terms as $term_id => $data ) {\n\t\t\t\t++$count;\n\t\t\t\tdelete_term_meta( $term_id, 'rank_math_permalink' );\n\t\t\t\t$this->replace_meta( $hash, $data, $term_id, 'term', 'convert_variables' );\n\n\t\t\t\t$this->set_term_robots( $term_id, $data );\n\t\t\t\t$this->set_term_social_media( $term_id, $data );\n\t\t\t\t$this->is_twitter_using_facebook( 'term', $term_id );\n\t\t\t}\n\t\t}\n\n\t\treturn compact( 'count' );\n\t}\n\n\t\/**\n\t * Set term robots.\n\t *\n\t * @param int   $term_id Term ID.\n\t * @param array $data    Term data.\n\t *\/\n\tprivate function set_term_robots( $term_id, $data ) {\n\t\t\/\/ Early bail if robots data is set in Rank Math plugin.\n\t\tif ( ! empty( $this->get_meta( 'term', $term_id, 'rank_math_robots' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! empty( $data['wpseo_noindex'] ) && 'default' !== $data['wpseo_noindex'] ) {\n\t\t\t$robots = 'noindex' === $data['wpseo_noindex'] ? 'noindex' : 'index';\n\t\t\tupdate_term_meta( $term_id, 'rank_math_robots', [ $robots ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Set term social media.\n\t *\n\t * @param int   $term_id Term ID.\n\t * @param array $data    Term data.\n\t *\/\n\tprivate function set_term_social_media( $term_id, $data ) {\n\t\tif ( ! empty( $data['wpseo_opengraph-image'] ) ) {\n\t\t\t$this->replace_image( $data['wpseo_opengraph-image'], 'term', 'rank_math_facebook_image', 'rank_math_facebook_image_id', $term_id );\n\t\t}\n\n\t\tif ( ! empty( $data['wpseo_twitter-image'] ) ) {\n\t\t\t$this->replace_image( $data['wpseo_twitter-image'], 'term', 'rank_math_twitter_image', 'rank_math_twitter_image_id', $term_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Import user meta of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function usermeta() {\n\t\t$this->set_pagination( $this->get_user_ids( true ) );\n\t\t$user_ids = $this->get_user_ids();\n\n\t\t$hash = [\n\t\t\t'wpseo_title'    => 'rank_math_title',\n\t\t\t'wpseo_desc'     => 'rank_math_description',\n\t\t\t'wpseo_metadesc' => 'rank_math_description',\n\t\t];\n\n\t\tforeach ( $user_ids as $user ) {\n\t\t\t$userid = $user->ID;\n\t\t\t$this->replace_meta( $hash, null, $userid, 'user', 'convert_variables' );\n\n\t\t\t\/\/ Early bail if robots data is set in Rank Math plugin.\n\t\t\tif ( empty( $this->get_meta( 'user', $userid, 'rank_math_robots' ) ) && get_user_meta( $userid, 'wpseo_noindex_author', true ) ) {\n\t\t\t\tupdate_user_meta( $userid, 'rank_math_robots', [ 'noindex' ] );\n\t\t\t}\n\n\t\t\t$social_urls = [];\n\t\t\tforeach ( [ 'linkedin', 'myspace', 'pinterest', 'instagram', 'soundcloud', 'tumblr', 'youtube', 'wikipedia' ] as $key ) {\n\t\t\t\t$social_urls[] = get_user_meta( $userid, $key, true );\n\t\t\t}\n\n\t\t\tif ( ! empty( $social_urls ) ) {\n\t\t\t\tupdate_user_meta( $userid, 'additional_profile_urls', implode( ' ', array_filter( $social_urls ) ) );\n\t\t\t}\n\t\t}\n\n\t\treturn $this->get_pagination_arg();\n\t}\n\n\t\/**\n\t * Imports redirections data.\n\t *\n\t * @return array\n\t *\/\n\tprotected function redirections() {\n\t\t$count        = 0;\n\t\t$redirections = get_option( 'wpseo-premium-redirects-base' );\n\n\t\tif ( ! $redirections ) {\n\t\t\treturn compact( 'count' );\n\t\t}\n\n\t\tHelper::update_modules( [ 'redirections' => 'on' ] );\n\t\tforeach ( $redirections as $redirection ) {\n\t\t\tif ( false !== $this->save_redirection( $redirection ) ) {\n\t\t\t\t++$count;\n\t\t\t}\n\t\t}\n\n\t\treturn compact( 'count' );\n\t}\n\n\t\/**\n\t * Save redirection.\n\t *\n\t * @param array $redirection Redirection object.\n\t *\n\t * @return mixed\n\t *\/\n\tprivate function save_redirection( $redirection ) {\n\t\tif ( ! isset( $redirection['origin'] ) || empty( $redirection['origin'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$item = Redirection::from(\n\t\t\t[\n\t\t\t\t'sources'     => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'pattern'    => $redirection['origin'],\n\t\t\t\t\t\t'comparison' => isset( $redirection['format'] ) && 'regex' === $redirection['format'] ? 'regex' : 'exact',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'url_to'      => isset( $redirection['url'] ) ? $redirection['url'] : '',\n\t\t\t\t'header_code' => isset( $redirection['type'] ) ? $redirection['type'] : '301',\n\t\t\t]\n\t\t);\n\n\t\treturn $item->save();\n\t}\n\n\t\/**\n\t * Set additional Organization details.\n\t *\n\t * @param array $yoast_titles Settings.\n\t *\/\n\tprivate function set_additional_organization_details( $yoast_titles ) {\n\t\t$additional_details = [];\n\t\t$properties         = [\n\t\t\t'org-legal-name'       => 'legalName',\n\t\t\t'org-founding-date'    => 'foundingDate',\n\t\t\t'org-number-employees' => 'numberOfEmployees',\n\t\t\t'org-vat-id'           => 'vatID',\n\t\t\t'org-tax-id'           => 'taxID',\n\t\t\t'org-iso'              => 'iso6523Code',\n\t\t\t'org-duns'             => 'duns',\n\t\t\t'org-leicode'          => 'leiCode',\n\t\t\t'org-naics'            => 'naics',\n\t\t];\n\n\t\tforeach ( $properties as $key => $property ) {\n\t\t\tif ( empty( $yoast_titles[ $key ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$additional_details[] = [\n\t\t\t\t'type'  => $property,\n\t\t\t\t'value' => $yoast_titles[ $key ],\n\t\t\t];\n\t\t}\n\n\t\tif ( ! empty( $additional_details ) ) {\n\t\t\t$this->titles['additional_info'] = $additional_details;\n\t\t}\n\t}\n\n\t\/**\n\t * Set separator.\n\t *\n\t * @param array $yoast_titles    Settings.\n\t *\/\n\tprivate function set_separator( $yoast_titles ) {\n\t\tif ( ! isset( $yoast_titles['separator'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$separator_options = [\n\t\t\t'sc-dash'   => '-',\n\t\t\t'sc-ndash'  => '&ndash;',\n\t\t\t'sc-mdash'  => '&mdash;',\n\t\t\t'sc-middot' => '&middot;',\n\t\t\t'sc-bull'   => '&bull;',\n\t\t\t'sc-star'   => '*',\n\t\t\t'sc-smstar' => '&#8902;',\n\t\t\t'sc-pipe'   => '|',\n\t\t\t'sc-tilde'  => '~',\n\t\t\t'sc-laquo'  => '&laquo;',\n\t\t\t'sc-raquo'  => '&raquo;',\n\t\t\t'sc-lt'     => '&lt;',\n\t\t\t'sc-gt'     => '&gt;',\n\t\t];\n\n\t\tif ( isset( $separator_options[ $yoast_titles['separator'] ] ) ) {\n\t\t\t$this->titles['title_separator'] = $separator_options[ $yoast_titles['separator'] ];\n\t\t}\n\t}\n\n\t\/**\n\t * Misc settings.\n\t *\n\t * @param array $yoast_titles Settings.\n\t * @param array $yoast_social Settings.\n\t *\/\n\tprivate function misc_settings( $yoast_titles, $yoast_social ) {\n\t\t$knowledgegraph_type = ! empty( $yoast_titles['company_or_person'] ) ? $yoast_titles['company_or_person'] : '';\n\n\t\t$logo_key = 'company' === $knowledgegraph_type ? 'company_logo' : 'person_logo';\n\t\t$logo_id  = 'company' === $knowledgegraph_type ? 'company_logo_id' : 'person_logo_id';\n\n\t\t$hash = [\n\t\t\t'company_name'           => 'knowledgegraph_name',\n\t\t\t'website_name'           => 'website_name',\n\t\t\t'alternate_website_name' => 'website_alternate_name',\n\t\t\t'company_or_person'      => 'knowledgegraph_type',\n\t\t\t$logo_key                => 'knowledgegraph_logo',\n\t\t\t$logo_id                 => 'knowledgegraph_logo_id',\n\t\t];\n\t\t$this->replace( $hash, $yoast_titles, $this->titles );\n\n\t\t$this->replace( [ 'stripcategorybase' => 'strip_category_base' ], $yoast_titles, $this->settings, 'convert_bool' );\n\t\t$this->replace( [ 'disable-attachment' => 'attachment_redirect_urls' ], $yoast_titles, $this->settings, 'convert_bool' );\n\t\t$this->replace( [ 'disable-author' => 'disable_author_archives' ], $yoast_titles, $this->titles, 'convert_bool' );\n\t\t$this->replace( [ 'disable-date' => 'disable_date_archives' ], $yoast_titles, $this->titles, 'convert_bool' );\/\/ Links.\n\n\t\t\/\/ NOINDEX.\n\t\t$hash = [\n\t\t\t'noindex-subpages-wpseo' => 'noindex_archive_subpages',\n\t\t];\n\t\t$this->replace( $hash, $yoast_titles, $this->titles, 'convert_bool' );\n\n\t\t\/\/ OpenGraph.\n\t\tif ( isset( $yoast_social['og_default_image'] ) ) {\n\t\t\t$this->replace_image( $yoast_social['og_default_image'], $this->titles, 'open_graph_image', 'open_graph_image_id' );\n\t\t}\n\n\t\tif ( isset( $yoast_social['og_frontpage_image'] ) ) {\n\t\t\t$this->replace_image( $yoast_social['og_frontpage_image'], $this->titles, 'homepage_facebook_image', 'homepage_facebook_image_id' );\n\t\t}\n\n\t\t$hash = [\n\t\t\t'og_frontpage_title' => 'homepage_facebook_title',\n\t\t\t'og_frontpage_desc'  => 'homepage_facebook_description',\n\t\t];\n\t\t$this->replace( $hash, $yoast_social, $this->titles, 'convert_variables' );\n\n\t\tif ( ! empty( $yoast_titles['noindex-author-wpseo'] ) ) {\n\t\t\t$this->titles['author_custom_robots'] = 'on';\n\t\t\t$this->titles['author_robots'][]      = 'noindex';\n\t\t}\n\n\t\tif ( ! empty( $yoast_titles['disable-attachment'] ) ) {\n\t\t\t$this->titles['pt_attachment_robots'][] = 'noindex';\n\t\t}\n\t}\n\n\t\/**\n\t * Slack enhanced sharing.\n\t *\n\t * @param array $yoast_main Settings.\n\t *\/\n\tprivate function slack_settings( $yoast_main ) {\n\t\t$slack_enhanced_sharing = 'off';\n\t\tif ( ! empty( $yoast_main['enable_enhanced_slack_sharing'] ) ) {\n\t\t\t$slack_enhanced_sharing = 'on';\n\t\t}\n\t\t$this->titles['pt_post_slack_enhanced_sharing']     = $slack_enhanced_sharing;\n\t\t$this->titles['pt_page_slack_enhanced_sharing']     = $slack_enhanced_sharing;\n\t\t$this->titles['pt_product_slack_enhanced_sharing']  = $slack_enhanced_sharing;\n\t\t$this->titles['pt_download_slack_enhanced_sharing'] = $slack_enhanced_sharing;\n\t\t$this->titles['author_slack_enhanced_sharing']      = $slack_enhanced_sharing;\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy => $object ) {\n\t\t\t$this->titles[ 'tax_' . $taxonomy . '_slack_enhanced_sharing' ] = $slack_enhanced_sharing;\n\t\t}\n\t}\n\n\t\/**\n\t * Sitemap settings.\n\t *\n\t * @param array $yoast_main    Settings.\n\t * @param array $yoast_sitemap Settings.\n\t * @param array $yoast_titles  Settings.\n\t *\/\n\tprivate function sitemap_settings( $yoast_main, $yoast_sitemap, $yoast_titles ) {\n\t\tif ( ! isset( $yoast_main['enable_xml_sitemap'] ) && isset( $yoast_sitemap['enablexmlsitemap'] ) ) {\n\t\t\tHelper::update_modules( [ 'sitemap' => 'on' ] );\n\t\t}\n\n\t\t$hash = [\n\t\t\t'entries-per-page' => 'items_per_page',\n\t\t\t'excluded-posts'   => 'exclude_posts',\n\t\t];\n\t\t$this->replace( $hash, $yoast_sitemap, $this->sitemap );\n\n\t\tif ( empty( $yoast_sitemap['excluded-posts'] ) ) {\n\t\t\t$this->sitemap['exclude_posts'] = '';\n\t\t}\n\n\t\t$this->sitemap['include_authors_without_posts'] = isset( $yoast_titles['noindex-author-noposts-wpseo'] ) && ! $yoast_titles['noindex-author-noposts-wpseo'] ? 'on' : 'off';\n\n\t\t$this->sitemap_exclude_roles( $yoast_sitemap );\n\t}\n\n\t\/**\n\t * Import News Settings from Yoast News plugin.\n\t *\/\n\tprotected function news() {\n\t\t$yoast_news = get_option( 'wpseo_news' );\n\t\tif ( empty( $yoast_news ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tHelper::update_modules( [ 'news-sitemap' => 'on' ] );\n\n\t\t$this->get_settings();\n\t\t$this->sitemap['news_sitemap_publication_name'] = ! empty( $yoast_news['news_sitemap_name'] ) ? $yoast_news['news_sitemap_name'] : '';\n\t\tif ( ! empty( $yoast_news['news_sitemap_include_post_types'] ) ) {\n\t\t\t$this->sitemap['news_sitemap_post_type'] = array_keys( $yoast_news['news_sitemap_include_post_types'] );\n\t\t\t$this->add_excluded_news_terms( $yoast_news );\n\t\t}\n\t\t$this->update_settings();\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Import News Settings from Yoast News plugin.\n\t *\/\n\tprotected function video() {\n\t\t$yoast_video = get_option( 'wpseo_video' );\n\t\tif ( empty( $yoast_video ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tHelper::update_modules( [ 'video-sitemap' => 'on' ] );\n\n\t\t$this->get_settings();\n\t\t$this->sitemap['hide_video_sitemap']          = ! empty( $yoast_video['video_cloak_sitemap'] ) ? 'on' : '';\n\t\t$this->sitemap['video_sitemap_post_type']     = ! empty( $yoast_video['videositemap_posttypes'] ) ? array_keys( $yoast_video['videositemap_posttypes'] ) : [];\n\t\t$this->sitemap['video_sitemap_taxonomies']    = ! empty( $yoast_video['videositemap_taxonomies'] ) ? array_keys( $yoast_video['videositemap_taxonomies'] ) : [];\n\t\t$this->sitemap['video_sitemap_custom_fields'] = ! empty( $yoast_video['video_custom_fields'] ) ? $yoast_video['video_custom_fields'] : '';\n\t\t$this->settings['disable_media_rss']          = ! empty( $yoast_video['video_disable_rss'] ) ? $yoast_video['video_disable_rss'] : '';\n\t\t$this->update_settings();\n\n\t\t$this->set_pagination( $this->get_video_posts( true ) );\n\t\t$videos = $this->get_video_posts();\n\t\t$schema = [\n\t\t\t'@type'    => 'VideoObject',\n\t\t\t'metadata' => [\n\t\t\t\t'type'      => 'template',\n\t\t\t\t'isPrimary' => false,\n\t\t\t\t'title'     => 'Video',\n\t\t\t\t'shortcode' => uniqid( 's-' ),\n\t\t\t],\n\t\t];\n\n\t\t$meta = [\n\t\t\t'category' => '_yoast_wpseo_videositemap-category',\n\t\t\t'tags'     => '_yoast_wpseo_videositemap-tags',\n\t\t\t'rating'   => '_yoast_wpseo_videositemap-rating',\n\t\t];\n\t\tforeach ( $videos as $video ) {\n\t\t\t$yoast_video = get_post_meta( $video, '_yoast_wpseo_video_meta', true );\n\t\t\t$duration    = get_post_meta( $video, '_yoast_wpseo_videositemap-duration', true );\n\t\t\t$thumbnail   = get_post_meta( $video, '_yoast_wpseo_videositemap-thumbnail', true );\n\t\t\t$entity      = [\n\t\t\t\t'name'             => '%seo_title%',\n\t\t\t\t'description'      => '%seo_description%',\n\t\t\t\t'thumbnailUrl'     => $thumbnail ? $thumbnail : '%post_thumbnail%',\n\t\t\t\t'contentUrl'       => ! empty( $yoast_video['content_loc'] ) ? $yoast_video['content_loc'] : '',\n\t\t\t\t'embedUrl'         => ! empty( $yoast_video['player_loc'] ) ? $yoast_video['player_loc'] : '',\n\t\t\t\t'width'            => ! empty( $yoast_video['width'] ) ? $yoast_video['width'] : '',\n\t\t\t\t'height'           => ! empty( $yoast_video['height'] ) ? $yoast_video['height'] : '',\n\t\t\t\t'isFamilyFriendly' => ! get_post_meta( $video, '_yoast_wpseo_videositemap-not-family-friendly', true ),\n\t\t\t\t'duration'         => $duration ? $duration . 'S' : '',\n\t\t\t\t'uploadDate'       => '%date(Y-m-d\\TH:i:sP)%',\n\t\t\t];\n\n\t\t\tforeach ( $meta as $key => $yoast_key ) {\n\t\t\t\t$schema['metadata'][ $key ] = get_post_meta( $video, $yoast_key, true );\n\t\t\t}\n\n\t\t\t$schema = array_merge( $schema, $entity );\n\n\t\t\tupdate_post_meta( $video, 'rank_math_schema_VideoObject', array_merge( $schema, $entity ) );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Deactivate plugin action.\n\t *\/\n\tprotected function deactivate() {\n\t\tif ( is_plugin_active( $this->get_plugin_file() ) ) {\n\t\t\tdeactivate_plugins( $this->get_plugin_file() );\n\t\t\tdeactivate_plugins( 'wpseo-news\/wpseo-news.php' );\n\t\t\tdeactivate_plugins( 'wpseo-video\/video-seo.php' );\n\t\t\tdeactivate_plugins( 'wpseo-local\/local-seo.php' );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Import Excluded News terms.\n\t *\n\t * @param array $yoast_news News Sitemap Settings.\n\t *\/\n\tprivate function add_excluded_news_terms( $yoast_news ) {\n\t\t$exclude_terms = $yoast_news['news_sitemap_exclude_terms'];\n\t\tif ( empty( $exclude_terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$post_types = array_keys( $yoast_news['news_sitemap_include_post_types'] );\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$taxonomies   = get_object_taxonomies( $post_type, 'objects' );\n\t\t\t$exclude_data = [];\n\t\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\t\tif ( ! $taxonomy->show_ui ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$terms = get_terms(\n\t\t\t\t\t[\n\t\t\t\t\t\t'taxonomy'   => $taxonomy->name,\n\t\t\t\t\t\t'hide_empty' => false,\n\t\t\t\t\t\t'fields'     => 'id=>slug',\n\t\t\t\t\t]\n\t\t\t\t);\n\n\t\t\t\tif ( empty( $terms ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tforeach ( $terms as $term_id => $term ) {\n\t\t\t\t\t$field = \"{$taxonomy->name}_{$term}_for_{$post_type}\";\n\t\t\t\t\t$key   = \"news_sitemap_exclude_{$post_type}_terms\";\n\t\t\t\t\tif ( isset( $exclude_terms[ $field ] ) && 'on' === $exclude_terms[ $field ] ) {\n\t\t\t\t\t\t$exclude_data[ $taxonomy->name ][] = $term_id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $exclude_data ) ) {\n\t\t\t\t$this->sitemap[ \"news_sitemap_exclude_{$post_type}_terms\" ] = [ $exclude_data ];\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Sitemap exclude roles.\n\t *\n\t * @param array $yoast_sitemap Settings.\n\t *\/\n\tprivate function sitemap_exclude_roles( $yoast_sitemap ) {\n\t\tforeach ( Helper::get_roles() as $role => $label ) {\n\t\t\t$key = \"user_role-{$role}-not_in_sitemap\";\n\t\t\tif ( isset( $yoast_sitemap[ $key ] ) && $yoast_sitemap[ $key ] ) {\n\t\t\t\t$this->sitemap['exclude_roles'][] = $role;\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $this->sitemap['exclude_roles'] ) ) {\n\t\t\t$this->sitemap['exclude_roles'] = array_unique( $this->sitemap['exclude_roles'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Local SEO settings.\n\t *\/\n\tprivate function local_seo_settings() {\n\t\t$yoast_local = get_option( 'wpseo_local', false );\n\t\tif ( ! is_array( $yoast_local ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->titles['local_seo'] = 'on';\n\t\t$this->local_address_settings( $yoast_local );\n\t\t$this->local_phones_settings( $yoast_local );\n\n\t\tif ( ! empty( $yoast_local['location_address_2'] ) ) {\n\t\t\t$this->titles['local_address']['streetAddress'] .= ' ' . $yoast_local['location_address_2'];\n\t\t}\n\n\t\t\/\/ Coordinates.\n\t\tif ( ! empty( $yoast_local['location_coords_lat'] ) && ! empty( $yoast_local['location_coords_long'] ) ) {\n\t\t\t$this->titles['geo'] = $yoast_local['location_coords_lat'] . ' ' . $yoast_local['location_coords_long'];\n\t\t}\n\n\t\t\/\/ Opening Hours.\n\t\tif ( ! empty( $yoast_local['opening_hours_24h'] ) ) {\n\t\t\t$this->titles['opening_hours_format'] = isset( $yoast_local['opening_hours_24h'] ) && 'on' === $yoast_local['opening_hours_24h'] ? 'off' : 'on';\n\t\t}\n\t}\n\n\t\/**\n\t * Local phones settings.\n\t *\n\t * @param array $yoast_local Array of yoast local SEO settings.\n\t *\/\n\tprivate function local_phones_settings( $yoast_local ) {\n\t\tif ( empty( $yoast_local['location_phone'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->titles['phone_numbers'][] = [\n\t\t\t'type'   => 'customer support',\n\t\t\t'number' => $yoast_local['location_phone'],\n\t\t];\n\n\t\tif ( ! empty( $yoast_local['location_phone_2nd'] ) ) {\n\t\t\t$this->titles['phone_numbers'][] = [\n\t\t\t\t'type'   => 'customer support',\n\t\t\t\t'number' => $yoast_local['location_phone_2nd'],\n\t\t\t];\n\t\t}\n\t}\n\n\t\/**\n\t * Local address settings.\n\t *\n\t * @param array $yoast_local Array of yoast local SEO settings.\n\t *\/\n\tprivate function local_address_settings( $yoast_local ) {\n\t\t\/\/ Address Format.\n\t\t$address_format_hash = [\n\t\t\t'address-state-postal'       => '{address} {locality}, {region} {postalcode}',\n\t\t\t'address-state-postal-comma' => '{address} {locality}, {region}, {postalcode}',\n\t\t\t'address-postal-city-state'  => '{address} {postalcode} {locality}, {region}',\n\t\t\t'address-postal'             => '{address} {locality} {postalcode}',\n\t\t\t'address-postal-comma'       => '{address} {locality}, {postalcode}',\n\t\t\t'address-city'               => '{address} {locality}',\n\t\t\t'postal-address'             => '{postalcode} {region} {locality} {address}',\n\t\t];\n\n\t\t$this->titles['local_address_format'] = $address_format_hash[ $yoast_local['address_format'] ];\n\n\t\t\/\/ Street Address.\n\t\t$address = [];\n\t\t$hash    = [\n\t\t\t'location_address' => 'streetAddress',\n\t\t\t'location_city'    => 'addressLocality',\n\t\t\t'location_state'   => 'addressRegion',\n\t\t\t'location_zipcode' => 'postalCode',\n\t\t\t'location_country' => 'addressCountry',\n\t\t];\n\t\t$this->replace( $hash, $yoast_local, $address );\n\n\t\t$this->titles['local_address'] = $address;\n\t}\n\n\t\/**\n\t * Social and Webmaster settings.\n\t *\n\t * @param array $yoast_main   Settings.\n\t * @param array $yoast_social Settings.\n\t *\/\n\tprivate function social_webmaster_settings( $yoast_main, $yoast_social ) {\n\t\t$hash = [\n\t\t\t'baiduverify'     => 'baidu_verify',\n\t\t\t'googleverify'    => 'google_verify',\n\t\t\t'msverify'        => 'bing_verify',\n\t\t\t'pinterestverify' => 'pinterest_verify',\n\t\t\t'yandexverify'    => 'yandex_verify',\n\t\t];\n\t\t$this->replace( $hash, $yoast_main, $this->settings );\n\n\t\t$hash = [\n\t\t\t'facebook_site' => 'social_url_facebook',\n\t\t\t'twitter_site'  => 'twitter_author_names',\n\t\t\t'fbadminapp'    => 'facebook_app_id',\n\t\t];\n\n\t\tif ( ! empty( $yoast_social['other_social_urls'] ) ) {\n\t\t\t$this->titles['social_additional_profiles'] = implode( PHP_EOL, $yoast_social['other_social_urls'] );\n\t\t}\n\t\t$this->replace( $hash, $yoast_social, $this->titles );\n\t}\n\n\t\/**\n\t * Breadcrumb settings.\n\t *\n\t * @param array $yoast_titles        Settings.\n\t * @param array $yoast_internallinks Settings.\n\t *\/\n\tprivate function breadcrumb_settings( $yoast_titles, $yoast_internallinks ) {\n\t\t$hash = [\n\t\t\t'breadcrumbs-sep'           => 'breadcrumbs_separator',\n\t\t\t'breadcrumbs-home'          => 'breadcrumbs_home_label',\n\t\t\t'breadcrumbs-prefix'        => 'breadcrumbs_prefix',\n\t\t\t'breadcrumbs-archiveprefix' => 'breadcrumbs_archive_format',\n\t\t\t'breadcrumbs-searchprefix'  => 'breadcrumbs_search_format',\n\t\t\t'breadcrumbs-404crumb'      => 'breadcrumbs_404_label',\n\t\t];\n\t\t$this->replace( $hash, $yoast_titles, $this->settings );\n\t\t$this->replace( $hash, $yoast_internallinks, $this->settings );\n\n\t\t$hash = [ 'breadcrumbs-enable' => 'breadcrumbs' ];\n\t\t$this->replace( $hash, $yoast_titles, $this->settings, 'convert_bool' );\n\t\t$this->replace( $hash, $yoast_internallinks, $this->settings, 'convert_bool' );\n\n\t\t\/\/ RSS.\n\t\t$hash = [\n\t\t\t'rssbefore' => 'rss_before_content',\n\t\t\t'rssafter'  => 'rss_after_content',\n\t\t];\n\t\t$this->replace( $hash, $yoast_titles, $this->settings, 'convert_variables' );\n\t}\n\n\t\/**\n\t * Import\/convert blocks of plugin.\n\t *\n\t * @return array\n\t *\/\n\tprotected function blocks() {\n\t\t$posts = Yoast_Blocks::get()->find_posts();\n\t\tif ( empty( $posts['posts'] ) ) {\n\t\t\treturn __( 'No post found.', 'rank-math' );\n\t\t}\n\n\t\t$this->set_pagination( $posts['count'] );\n\n\t\tYoast_Blocks::get()->wizard( array_slice( $posts['posts'], ( $this->items_per_page * ( $this->get_pagination_arg( 'page' ) - 1 ) ), $this->items_per_page ) );\n\n\t\treturn $this->get_pagination_arg();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-notices.php","ext":"php","size":7337,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin notices.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Runner;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Sitepress;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Notices class.\n *\/\nclass Notices implements Runner {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'admin_init', 'notices' );\n\t\t$this->action( 'wp_helpers_notification_dismissed', 'notice_dismissible' );\n\t}\n\n\t\/**\n\t * Run all notices routine.\n\t *\/\n\tpublic function notices() {\n\t\t$this->is_plugin_configured();\n\t\t$this->new_post_type();\n\t\t$this->convert_wpml_settings();\n\t\t$this->permalink_changes_warning();\n\t}\n\n\t\/**\n\t * Set known post type after notice dismissal.\n\t *\n\t * @param string $notification_id Notification id.\n\t *\/\n\tpublic function notice_dismissible( $notification_id ) {\n\t\tif ( 'new_post_type' === $notification_id ) {\n\t\t\t$current = get_post_types( [ 'public' => true ] );\n\t\t\tupdate_option( 'rank_math_known_post_types', $current );\n\n\t\t\tif ( Helper::is_module_active( 'sitemap' ) ) {\n\t\t\t\t\\RankMath\\Sitemap\\Cache::invalidate_storage();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'convert_wpml_settings' === $notification_id ) {\n\t\t\tupdate_option( 'rank_math_wpml_notice_dismissed', true );\n\t\t}\n\n\t\tif ( 'rank-math-site-url-mismatch' === $notification_id ) {\n\t\t\tupdate_option( 'rank_math_siteurl_mismatch_notice_dismissed', true );\n\t\t}\n\t}\n\n\t\/**\n\t * If plugin configuration not done.\n\t *\/\n\tprivate function is_plugin_configured() {\n\t\tif ( 'mts-install-plugins' === Param::get( 'page' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( rank_math()->notification->get_notification_by_id( 'plugin_not_setup' ) && ! Helper::is_configured() ) {\n\t\t\t$message = sprintf(\n\t\t\t\t'<b>Warning!<\/b> You didn\\'t set up your Rank Math SEO plugin yet, which means you\\'re missing out on essential settings and tweaks! <a href=\"%s\">Complete your setup by clicking here.<\/a>',\n\t\t\t\tHelper::get_admin_url( 'wizard' )\n\t\t\t);\n\t\t\tHelper::add_notification(\n\t\t\t\t$message,\n\t\t\t\t[\n\t\t\t\t\t'type' => 'warning',\n\t\t\t\t\t'id'   => 'plugin_not_setup',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Add notification if a new post type is detected.\n\t *\/\n\tprivate function new_post_type() {\n\t\t$known   = get_option( 'rank_math_known_post_types', [] );\n\t\t$current = Helper::get_accessible_post_types();\n\t\t$new     = array_diff( $current, $known );\n\n\t\tif ( empty( $new ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$list = '<code>' . implode( '<\/code>, <code>', $new ) . '<\/code>';\n\t\t\/* Translators: placeholder is the post type name. *\/\n\t\t$message = __( 'Rank Math has detected a new post type: %1$s. You may want to check the settings of the <a href=\"%2$s\">Titles &amp; Meta page<\/a>.', 'rank-math' );\n\t\t$count   = count( $new );\n\t\tif ( $count > 1 ) {\n\t\t\t\/* Translators: placeholder is the post type names separated with commas. *\/\n\t\t\t$message = __( 'Rank Math has detected new post types: %1$s. You may want to check the settings of the <a href=\"%2$s\">Titles &amp; Meta page<\/a>.', 'rank-math' );\n\t\t}\n\n\t\t$message = $this->do_filter( 'admin\/notice\/new_post_type', $message, $count );\n\t\t$message = sprintf( wp_kses_post( $message ), $list, Helper::get_settings_url( 'titles', 'post-type-' . key( $new ) ), Helper::get_settings_url( 'sitemap', 'post-type-' . key( $new ) ) );\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type' => 'info',\n\t\t\t\t'id'   => 'new_post_type',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Function to show Show String Translation plugin notice and convert the settings.\n\t *\/\n\tprivate function convert_wpml_settings() {\n\t\tif ( ! Sitepress::get()->is_active() || get_option( 'rank_math_wpml_data_converted' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! function_exists( 'icl_add_string_translation' ) ) {\n\t\t\tif ( ! get_option( 'rank_math_wpml_notice_dismissed' ) ) {\n\t\t\t\tHelper::add_notification(\n\t\t\t\t\t__( 'Please activate the WPML String Translation plugin to convert Rank Math Setting values in different languages.', 'rank-math' ),\n\t\t\t\t\t[\n\t\t\t\t\t\t'type' => 'error',\n\t\t\t\t\t\t'id'   => 'convert_wpml_settings',\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t$languages = icl_get_languages(); \/\/ @phpstan-ignore-line\n\t\tforeach ( $languages as $lang_code => $language ) {\n\n\t\t\tforeach ( [ 'general', 'titles' ] as $option ) {\n\t\t\t\t$data = get_option( \"rank-math-options-{$option}_$lang_code\" );\n\t\t\t\tif ( empty( $data ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$common_data = array_intersect( array_keys( $data ), $this->get_translatable_options() );\n\t\t\t\tif ( empty( $common_data ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tforeach ( $common_data as $option_key ) {\n\t\t\t\t\t$string_id = icl_get_string_id( Helper::get_settings( \"$option.$option_key\" ), \"admin_texts_rank-math-options-$option\" ); \/\/ @phpstan-ignore-line\n\t\t\t\t\ticl_add_string_translation( $string_id, $lang_code, $data[ $option_key ], 10 ); \/\/ @phpstan-ignore-line\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate_option( 'rank_math_wpml_data_converted', true );\n\t}\n\n\t\/**\n\t * Get Translatable option keys.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_translatable_options() {\n\t\t$options = [\n\t\t\t'img_alt_format',\n\t\t\t'img_title_format',\n\t\t\t'breadcrumbs_separator',\n\t\t\t'breadcrumbs_prefix',\n\t\t\t'breadcrumbs_home_link',\n\t\t\t'breadcrumbs_home_label',\n\t\t\t'breadcrumbs_archive_format',\n\t\t\t'breadcrumbs_search_format',\n\t\t\t'breadcrumbs_404_label',\n\t\t\t'rss_before_content',\n\t\t\t'rss_after_content',\n\n\t\t\t'title_separator',\n\t\t\t'homepage_title',\n\t\t\t'homepage_description',\n\t\t\t'homepage_facebook_title',\n\t\t\t'homepage_facebook_description',\n\t\t\t'author_archive_title',\n\t\t\t'author_archive_description',\n\t\t\t'date_archive_title',\n\t\t\t'date_archive_description',\n\t\t\t'search_title',\n\t\t\t'404_title',\n\t\t];\n\n\t\t$post_types = Helper::get_accessible_post_types();\n\t\tforeach ( $post_types as $post_type => $data ) {\n\t\t\t$options = array_merge(\n\t\t\t\t$options,\n\t\t\t\t[\n\t\t\t\t\t\"pt_{$post_type}_title\",\n\t\t\t\t\t\"pt_{$post_type}_description\",\n\t\t\t\t\t\"pt_{$post_type}_archive_title\",\n\t\t\t\t\t\"pt_{$post_type}_archive_description\",\n\t\t\t\t\t\"pt_{$post_type}_default_snippet_name\",\n\t\t\t\t\t\"pt_{$post_type}_default_snippet_desc\",\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\tforeach ( $taxonomies as $taxonomy => $data ) {\n\t\t\t$options = array_merge(\n\t\t\t\t$options,\n\t\t\t\t[\n\t\t\t\t\t\"tax_{$taxonomy}_title\",\n\t\t\t\t\t\"tax_{$taxonomy}_description\",\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\t\/**\n\t * Maybe add notice on Permalinks page about the risks of changing the permalinks on a live site.\n\t *\n\t * @return void\n\t *\/\n\tpublic function permalink_changes_warning() {\n\t\tglobal $pagenow;\n\t\tif ( 'options-permalink.php' !== $pagenow ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'admin_enqueue_scripts', 'add_permalink_changes_warning', 12 );\n\t}\n\n\t\/**\n\t * Add the notice for the Permalinks page.\n\t *\n\t * @return void\n\t *\/\n\tpublic function add_permalink_changes_warning() {\n\t\twp_enqueue_script( 'rank-math-core-permalink-settings' );\n\t\t$message = __( '<b>Rank Math Warning:<\/b> Changing the permalinks on a live, indexed site may result in serious loss of traffic if done incorrectly. Consider adding a new redirection from the old URL format to the new one.', 'rank-math' );\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type'    => 'warning',\n\t\t\t\t'screen'  => 'options-permalink',\n\t\t\t\t'classes' => 'hidden rank-math-notice-permalinks-warning is-dismissible',\n\t\t\t]\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-import-export.php","ext":"php","size":2707,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Import Export Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse WP_REST_Response;\nuse RankMath\\Helper;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Status\\Backup;\nuse RankMath\\Admin\\Importers\\Detector;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Import_Export class.\n *\/\nclass Import_Export implements Runner {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->ajax( 'clean_plugin', 'clean_plugin' );\n\t\t$this->ajax( 'import_plugin', 'import_plugin' );\n\t}\n\n\t\/**\n\t * Get localized JSON data to be used on the Import & Export tab of the Status & Tools page.\n\t *\/\n\tpublic static function get_json_data() {\n\t\t$detector           = new Detector();\n\t\t$importable_plugins = $detector->detect();\n\n\t\treturn [\n\t\t\t'backups'           => Backup::get_backups(),\n\t\t\t'importablePlugins' => $importable_plugins,\n\t\t];\n\t}\n\n\t\/**\n\t * Handles AJAX run plugin clean.\n\t *\/\n\tpublic function clean_plugin() {\n\t\t$this->verify_nonce( 'rank-math-ajax-nonce' );\n\t\t$this->has_cap_ajax( 'general' );\n\n\t\t$result = Detector::run_by_slug( Param::post( 'pluginSlug' ), 'cleanup' );\n\n\t\tif ( $result['status'] ) {\n\t\t\t\/* translators: Plugin name *\/\n\t\t\t$this->success( sprintf( esc_html__( 'Cleanup of %s data successfully done.', 'rank-math' ), $result['importer']->get_plugin_name() ) );\n\t\t}\n\n\t\t\/* translators: Plugin name *\/\n\t\t$this->error( sprintf( esc_html__( 'Cleanup of %s data failed.', 'rank-math' ), $result['importer']->get_plugin_name() ) );\n\t}\n\n\t\/**\n\t * Handles AJAX run plugin import.\n\t *\/\n\tpublic function import_plugin() {\n\t\t$this->verify_nonce( 'rank-math-ajax-nonce' );\n\t\t$this->has_cap_ajax( 'general' );\n\n\t\t$perform = Param::post( 'perform', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\tif ( ! $this->is_action_allowed( $perform ) ) {\n\t\t\t$this->error( esc_html__( 'Action not allowed.', 'rank-math' ) );\n\t\t}\n\n\t\ttry {\n\t\t\t$result = Detector::run_by_slug( Param::post( 'pluginSlug' ), 'import', $perform );\n\t\t\t$this->success( $result );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->error( $e->getMessage() );\n\t\t}\n\t}\n\n\t\/**\n\t * Check if given action is in the list of allowed actions.\n\t *\n\t * @param string $perform Action to check.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_action_allowed( $perform ) {\n\t\t$allowed = [ 'settings', 'postmeta', 'termmeta', 'usermeta', 'redirections', 'blocks', 'deactivate', 'locations', 'news', 'video', 'recalculate' ];\n\t\treturn $perform && in_array( $perform, $allowed, true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/watcher\/class-watcher.php","ext":"php","size":8427,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The conflicting plugin watcher.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helper as GlobalHelper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Watcher class.\n *\/\nclass Watcher implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'init', 'maybe_deactivate_plugins' );\n\t\t$this->action( 'activated_plugin', 'check_activated_plugin' );\n\t\t$this->action( 'deactivated_plugin', 'check_deactivated_plugin' );\n\n\t\t$this->filter( 'wp_helpers_notifications_render', 'deactivate_plugins_link', 10, 3 );\n\t\t$this->action( 'update_option_blog_public', 'check_search_engine_visibility' );\n\t}\n\n\t\/**\n\t * Set\/Deactivate conflicting SEO or Sitemap plugins.\n\t *\/\n\tpublic function maybe_deactivate_plugins() {\n\t\tif ( ! Param::get( 'rank_math_deactivate_plugins' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! current_user_can( 'deactivate_plugins' ) ) {\n\t\t\twp_die( esc_html__( 'Sorry, you are not allowed to deactivate plugins for this site.', 'rank-math' ) );\n\t\t}\n\n\t\tcheck_admin_referer( 'rank_math_deactivate_plugins' );\n\n\t\t$type    = Param::get( 'plugin_type', 'seo', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\t$allowed = [ 'seo', 'sitemap' ];\n\t\tif ( ! in_array( $type, $allowed, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->deactivate_conflicting_plugins( $type );\n\t}\n\n\t\/**\n\t * Function to run when new plugin is activated.\n\t *\/\n\tpublic static function check_activated_plugin() {\n\t\t$set     = [];\n\t\t$plugins = get_option( 'active_plugins', [] );\n\n\t\tforeach ( self::get_conflicting_plugins() as $plugin => $type ) {\n\t\t\tif ( ! isset( $set[ $type ] ) && in_array( $plugin, $plugins, true ) ) {\n\t\t\t\t$set[ $type ] = true;\n\t\t\t\tself::set_notification( $type );\n\t\t\t}\n\t\t}\n\n\t\tif ( in_array( 'wpml-string-translation\/plugin.php', $plugins, true ) ) {\n\t\t\tGlobalHelper::remove_notification( 'convert_wpml_settings' );\n\t\t}\n\t}\n\n\t\/**\n\t * Function to run when plugin is deactivated.\n\t *\n\t * @param string $plugin Deactivated plugin path.\n\t *\/\n\tpublic function check_deactivated_plugin( $plugin ) {\n\t\t$plugins = self::get_conflicting_plugins();\n\t\tif ( ! isset( $plugins[ $plugin ] ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$this->remove_notification( $plugins[ $plugin ], $plugin );\n\t}\n\n\t\/**\n\t * Function to run when Module is enabled\/disabled.\n\t *\n\t * @param string $module Module.\n\t * @param string $state  Module state.\n\t *\/\n\tpublic static function module_changed( $module, $state ) {\n\t\tif ( ! in_array( $module, [ 'sitemap', 'redirections', 'rich-snippet' ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'off' === $state ) {\n\t\t\t$type = 'sitemap' === $module ? 'sitemap' : 'seo';\n\t\t\tGlobalHelper::remove_notification( \"conflicting_{$type}_plugins\" );\n\t\t}\n\n\t\tself::check_activated_plugin();\n\t}\n\n\t\/**\n\t * Deactivate conflicting plugins.\n\t *\n\t * @param string $type Plugin type.\n\t *\/\n\tprivate function deactivate_conflicting_plugins( $type ) {\n\t\tforeach ( self::get_conflicting_plugins() as $plugin => $plugin_type ) {\n\t\t\tif ( $type === $plugin_type && is_plugin_active( $plugin ) ) {\n\t\t\t\tif ( ! current_user_can( 'deactivate_plugin', $plugin ) ) {\n\t\t\t\t\t$message = sprintf(\n\t\t\t\t\t\t\/* translators: plugin name *\/\n\t\t\t\t\t\tesc_html__( 'You are not allowed to deactivate this plugin: %s.', 'rank-math' ),\n\t\t\t\t\t\tesc_html( $plugin )\n\t\t\t\t\t);\n\t\t\t\t\tGlobalHelper::add_notification(\n\t\t\t\t\t\t$message,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'type'    => 'error',\n\t\t\t\t\t\t\t'classes' => 'is-dismissible',\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdeactivate_plugins( $plugin );\n\t\t\t}\n\t\t}\n\n\t\tGlobalHelper::redirect( Security::remove_query_arg_raw( [ 'rank_math_deactivate_plugins', 'plugin_type', '_wpnonce' ] ) );\n\t}\n\n\t\/**\n\t * Function to set conflict plugin notification.\n\t *\n\t * @param string $type Plugin type.\n\t *\/\n\tprivate static function set_notification( $type ) {\n\t\t$message = sprintf(\n\t\t\t\/* translators: deactivation link *\/\n\t\t\tesc_html__( 'Please keep only one SEO plugin active, otherwise, you might lose your rankings and traffic. %s.', 'rank-math' ),\n\t\t\t'<a href=\"###DEACTIVATE_SEO_PLUGINS###\">' . __( 'Click here to Deactivate', 'rank-math' ) . '<\/a>'\n\t\t);\n\n\t\tif ( 'sitemap' === $type ) {\n\t\t\t$message = sprintf(\n\t\t\t\t\/* translators: deactivation link *\/\n\t\t\t\tesc_html__( 'Please keep only one Sitemap plugin active, otherwise, you might lose your rankings and traffic. %s.', 'rank-math' ),\n\t\t\t\t'<a href=\"###DEACTIVATE_SITEMAP_PLUGINS###\">' . __( 'Click here to Deactivate', 'rank-math' ) . '<\/a>'\n\t\t\t);\n\t\t}\n\n\t\tGlobalHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'id'      => \"conflicting_{$type}_plugins\",\n\t\t\t\t'type'    => 'error',\n\t\t\t\t'classes' => 'is-dismissible',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Function to remove conflict plugin notification.\n\t *\n\t * @param string $type   Plugin type.\n\t * @param string $plugin Plugin name.\n\t *\/\n\tprivate function remove_notification( $type, $plugin ) {\n\t\tforeach ( self::get_conflicting_plugins() as $file => $plugin_type ) {\n\t\t\tif ( $plugin !== $file && $type === $plugin_type && is_plugin_active( $file ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tGlobalHelper::remove_notification( \"conflicting_{$type}_plugins\" );\n\t}\n\n\t\/**\n\t * Function to get all conflicting plugins.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_conflicting_plugins() {\n\t\t$plugins = [\n\t\t\t'wordpress-seo\/wp-seo.php'                    => 'seo',\n\t\t\t'wordpress-seo-premium\/wp-seo-premium.php'    => 'seo',\n\t\t\t'wpseo-local\/local-seo.php'                   => 'seo',\n\t\t\t'wpseo-news\/wpseo-news.php'                   => 'seo',\n\t\t\t'wpseo-video\/video-seo.php'                   => 'seo',\n\t\t\t'all-in-one-seo-pack\/all_in_one_seo_pack.php' => 'seo',\n\t\t\t'all-in-one-seo-pack-pro\/all_in_one_seo_pack.php' => 'seo',\n\t\t\t'wp-seopress\/seopress.php'                    => 'seo',\n\t\t\t'wp-seopress-pro\/seopress-pro.php'            => 'seo',\n\t\t];\n\n\t\tif ( GlobalHelper::is_module_active( 'redirections' ) ) {\n\t\t\t$plugins['redirection\/redirection.php'] = 'seo';\n\t\t}\n\t\tif ( GlobalHelper::is_module_active( 'sitemap' ) ) {\n\t\t\t$plugins['google-sitemap-generator\/sitemap.php'] = 'sitemap';\n\t\t\t$plugins['xml-sitemap-feed\/xml-sitemap.php']     = 'sitemap';\n\t\t}\n\t\tif ( GlobalHelper::is_module_active( 'rich-snippet' ) ) {\n\t\t\t$plugins['wp-schema-pro\/wp-schema-pro.php']              = 'seo';\n\t\t\t$plugins['all-in-one-schemaorg-rich-snippets\/index.php'] = 'seo';\n\t\t}\n\t\treturn $plugins;\n\t}\n\n\t\/**\n\t * Replace link inside notice dynamically to avoid issues with the nonce.\n\t *\n\t * @param string $output  Notice output.\n\t * @param string $message Notice message.\n\t * @param array  $options Notice options.\n\t *\n\t * @return string\n\t *\/\n\tpublic function deactivate_plugins_link( $output, $message, $options ) {\n\t\tif ( ! isset( $options['id'] ) || ! preg_match( '\/conflicting_.*_plugins\/', $options['id'] ) ) {\n\t\t\treturn $output;\n\t\t}\n\n\t\t$deactivate_url = Security::add_query_arg(\n\t\t\t[\n\t\t\t\t'rank_math_deactivate_plugins' => '1',\n\t\t\t\t'plugin_type'                  => 'seo',\n\t\t\t\t'_wpnonce'                     => wp_create_nonce( 'rank_math_deactivate_plugins' ),\n\t\t\t],\n\t\t\tadmin_url( 'plugins.php' )\n\t\t);\n\n\t\t$output = str_replace( '###DEACTIVATE_SEO_PLUGINS###', $deactivate_url, $output );\n\n\t\t$deactivate_sitemap_plugins_url = Security::add_query_arg(\n\t\t\t[\n\t\t\t\t'rank_math_deactivate_plugins' => '1',\n\t\t\t\t'plugin_type'                  => 'sitemap',\n\t\t\t\t'_wpnonce'                     => wp_create_nonce( 'rank_math_deactivate_plugins' ),\n\t\t\t],\n\t\t\tadmin_url( 'plugins.php' )\n\t\t);\n\n\t\t$output = str_replace( '###DEACTIVATE_SITEMAP_PLUGINS###', $deactivate_sitemap_plugins_url, $output );\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Check search visibility\n\t *\n\t * @param integer $value Setting value.\n\t *\/\n\tpublic function check_search_engine_visibility( $value ) {\n\n\t\tif ( ! $value ) {\n\t\t\tGlobalHelper::remove_notification( 'search_engine_visibility' );\n\t\t\treturn;\n\t\t}\n\n\t\tGlobalHelper::add_notification(\n\t\t\tsprintf(\n\t\t\t\t\/\/ translators: %1$s: general reading settings URL.\n\t\t\t\t__( '<strong>SEO Notice<\/strong>: Your site is set to No Index and will not appear in search engines. You can change the Search engine visibility <a href=\"%1$s\">from here<\/a>.', 'rank-math' ),\n\t\t\t\tadmin_url( 'options-reading.php' )\n\t\t\t),\n\t\t\t[\n\t\t\t\t'type'    => 'warning',\n\t\t\t\t'id'      => 'search_engine_visibility',\n\t\t\t\t'classes' => 'is-dismissible',\n\t\t\t]\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-list-table.php","ext":"php","size":1577,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The List Table Base CLass.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse WP_List_Table;\nuse RankMath\\Helpers\\Param;\n\n\/**\n * List_Table class.\n *\/\nclass List_Table extends WP_List_Table {\n\t\/**\n\t * Message to be displayed when there are no items.\n\t *\/\n\tpublic function no_items() {\n\t\techo isset( $this->_args['no_items'] ) ? wp_kses_post( $this->_args['no_items'] ) : esc_html__( 'No items found.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Get order setting.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_order() {\n\t\t$order = Param::request( 'order', 'desc' );\n\t\treturn in_array( $order, [ 'desc', 'asc' ], true ) ? strtoupper( $order ) : 'DESC';\n\t}\n\n\t\/**\n\t * Get orderby setting.\n\t *\n\t * @param string $default_value (Optional) Extract order by from request.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_orderby( $default_value = 'create_date' ) {\n\t\treturn Param::get( 'orderby', $default_value, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t}\n\n\t\/**\n\t * Get search query variable.\n\t *\n\t * @return bool|string\n\t *\/\n\tprotected function get_search() {\n\t\treturn Param::request( 's', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK );\n\t}\n\n\t\/**\n\t * Set column headers.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tprotected function set_column_headers() {\n\t\t$this->_column_headers = [\n\t\t\t$this->get_columns(),\n\t\t\t[],\n\t\t\t$this->get_sortable_columns(),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-options.php","ext":"php","size":7103,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The option page functionality of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse WP_Http;\nuse RankMath\\KB;\nuse RankMath\\CMB2;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Robots_Txt;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Admin\\Page;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Options class.\n *\/\nclass Options {\n\n\tuse Hooker;\n\n\t\/**\n\t * Page title.\n\t *\n\t * @var string\n\t *\/\n\tpublic $title = 'Settings';\n\n\t\/**\n\t * Menu title.\n\t *\n\t * @var string\n\t *\/\n\tpublic $menu_title = 'Settings';\n\n\t\/**\n\t * Hold tabs for page.\n\t *\n\t * @var array\n\t *\/\n\tpublic $tabs = [];\n\n\t\/**\n\t * Hold folder name for tab files.\n\t *\n\t * @var string\n\t *\/\n\tpublic $folder = '';\n\n\t\/**\n\t * Menu Position.\n\t *\n\t * @var int\n\t *\/\n\tpublic $position = 10;\n\n\t\/**\n\t * The capability required for this menu to be displayed to the user.\n\t *\n\t * @var string\n\t *\/\n\tpublic $capability = 'manage_options';\n\n\t\/**\n\t * CMB2 option page id.\n\t *\n\t * @var string\n\t *\/\n\tprivate $cmb_id = null;\n\n\t\/**\n\t * Options key.\n\t *\n\t * @var string\n\t *\/\n\tpublic $key = '';\n\n\t\/**\n\t * The Constructor\n\t *\n\t * @param array $config Array of configuration.\n\t *\/\n\tpublic function __construct( $config ) {\n\t\t$this->config( $config );\n\t\t$this->cmb_id = $this->key . '_options';\n\n\t\t$this->action( 'admin_post_' . $this->key, 'reset_options', 2 );\n\t}\n\n\t\/**\n\t * Create option object and add settings.\n\t *\/\n\tpublic function register_option_page() {\n\t\t$current_page = str_replace( 'rank-math-options-', '', $this->key );\n\n\t\tnew Page(\n\t\t\t$this->key,\n\t\t\t$this->title,\n\t\t\t[\n\t\t\t\t'position'   => $this->position,\n\t\t\t\t'priority'   => 9999,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t'capability' => $this->capability,\n\t\t\t\t'menu_title' => $this->menu_title,\n\t\t\t\t'render'     => [ $this, 'display' ],\n\t\t\t\t'classes'    => $this->get_body_class(),\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'select2-rm'        => '',\n\t\t\t\t\t\t'rank-math-common'  => '',\n\t\t\t\t\t\t'rank-math-cmb2'    => '',\n\t\t\t\t\t\t'wp-components'     => '',\n\t\t\t\t\t\t'rank-math-options' => rank_math()->plugin_url() . 'assets\/admin\/css\/option-panel.css',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'media-editor'         => '',\n\t\t\t\t\t\t'underscore'           => '',\n\t\t\t\t\t\t'select2-rm'           => '',\n\t\t\t\t\t\t'lodash'               => '',\n\t\t\t\t\t\t'rank-math-common'     => '',\n\t\t\t\t\t\t'wp-api-fetch'         => '',\n\t\t\t\t\t\t'wp-data'              => '',\n\t\t\t\t\t\t'rank-math-components' => '',\n\t\t\t\t\t\t'rank-math-options'    => rank_math()->plugin_url() . 'assets\/admin\/js\/settings.js',\n\t\t\t\t\t],\n\t\t\t\t\t'json'    => $this->get_json_data( $current_page ),\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Set the default values if not set.\n\t *\n\t * @param CMB2 $cmb The CMB2 object to hookup.\n\t *\/\n\tpublic function set_defaults( $cmb ) {\n\t\tforeach ( $cmb->prop( 'fields' ) as $id => $field_args ) {\n\t\t\t$field = $cmb->get_field( $id );\n\t\t\tif ( isset( $field_args['default'] ) || isset( $field_args['default_cb'] ) ) {\n\t\t\t\t$defaults[ $id ] = $field->get_default();\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Save Defaults if any.\n\t\tif ( ! empty( $defaults ) ) {\n\t\t\tadd_option( $this->key, $defaults );\n\t\t}\n\t}\n\n\t\/**\n\t * Reset options.\n\t *\/\n\tpublic function reset_options() {\n\n\t\tif ( ! check_admin_referer( 'rank-math-reset-options' ) || ! current_user_can( 'manage_options' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$url = wp_get_referer();\n\t\tif ( ! $url ) {\n\t\t\t$url = admin_url();\n\t\t}\n\n\t\tif ( filter_has_var( INPUT_POST, 'reset-cmb' ) && Param::post( 'action' ) === $this->key ) {\n\t\t\tdelete_option( $this->key );\n\t\t\tHelper::redirect( esc_url_raw( $url ), WP_Http::SEE_OTHER );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Add classes to <body> of WordPress admin.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_body_class() {\n\t\t$mode = Helper::is_advanced_mode() ? 'advanced' : 'basic';\n\t\treturn [\n\t\t\t'rank-math-page ',\n\t\t\t'rank-math-mode-' . $mode,\n\t\t];\n\t}\n\n\t\/**\n\t * Display Setting on a page.\n\t *\/\n\tpublic function display() {\n\t\t?>\n\t\t\t<div id=\"rank-math-options\" class=\"<?php echo esc_attr( $this->cmb_id ); ?>\"><\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get setting tabs.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_tabs() {\n\n\t\t$filter = str_replace( '-', '_', str_replace( 'rank-math-', '', $this->key ) );\n\t\t\/**\n\t\t * Allow developers to add new tabs into option panel.\n\t\t *\n\t\t * The dynamic part of hook is, page name without 'rank-math-' prefix.\n\t\t *\n\t\t * @param array $tabs\n\t\t *\/\n\t\treturn $this->do_filter( \"admin\/options\/{$filter}_tabs\", $this->tabs );\n\t}\n\n\t\/**\n\t * Get localized data for the current settings page.\n\t *\n\t * @param string $current_page Current Settings page.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_json_data( $current_page ) {\n\t\tif ( is_admin() ) {\n\t\t\trank_math()->variables->setup();\n\t\t\trank_math()->variables->setup_json();\n\t\t}\n\n\t\t$tabs = $this->get_tabs();\n\t\t$data = $this->do_filter(\n\t\t\t\"admin\/options\/{$current_page}_data\",\n\t\t\t[\n\t\t\t\t'isPro'           => defined( 'RANK_MATH_PRO_FILE' ),\n\t\t\t\t'tabs'            => array_keys( $tabs ),\n\t\t\t\t'optionPage'      => $current_page,\n\t\t\t\t'homeUrl'         => get_home_url(),\n\t\t\t\t'data'            => $current_page === 'instant-indexing' ? get_option( 'rank-math-options-instant-indexing' ) : Helper::get_settings( $current_page ),\n\t\t\t\t'isSiteConnected' => Helper::is_site_connected(),\n\t\t\t\t'choices'         => [\n\t\t\t\t\t'postTypes'            => Helper::choices_post_types(),\n\t\t\t\t\t'accessiblePostTypes'  => Helper::get_accessible_post_types(),\n\t\t\t\t\t'accessibleTaxonomies' => Helper::get_accessible_taxonomies(),\n\t\t\t\t\t'choicesPostTypeIcons' => Helper::choices_post_type_icons(),\n\t\t\t\t\t'choicesTaxonomyIcons' => Helper::choices_taxonomy_icons(),\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t\tforeach ( $tabs as $tab ) {\n\t\t\tif ( empty( $tab['json'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data = array_merge( $data, $tab['json'] );\n\t\t}\n\n\t\t$method = \"get_{$current_page}_data\";\n\t\tif ( ! method_exists( $this, $method ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\treturn array_merge( $data, $this->$method() );\n\t}\n\n\t\/**\n\t * Get General Settings page data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_general_data() {\n\t\treturn [\n\t\t\t'activateUrl'          => Admin_Helper::get_activate_url( admin_url( 'admin.php??page=rank-math-options-general&tab=content-ai' ) ),\n\t\t\t'hasBreadcrumbSupport' => current_theme_supports( 'rank-math-breadcrumbs' ),\n\t\t\t'showBlogPage'         => 'page' === get_option( 'show_on_front' ) && get_option( 'page_for_posts' ) > 0,\n\t\t\t'isEditAllowed'        => Helper::is_edit_allowed(),\n\t\t\t'defaultLanguage'      => Helper::content_ai_default_language(),\n\t\t];\n\t}\n\n\t\/**\n\t * Get General Settings page data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_titles_data() {\n\t\t$data = [\n\t\t\t'choicesRobots'         => Helper::choices_robots(),\n\t\t\t'supportsTitleTag'      => current_theme_supports( 'title-tag' ) || wp_is_block_theme(),\n\t\t\t'schemaTypes'           => Helper::choices_rich_snippet_types( esc_html__( 'None (Click here to set one)', 'rank-math' ) ),\n\t\t\t'isRedirectAttachments' => Helper::get_settings( 'general.attachment_redirect_urls' ),\n\t\t];\n\t\treturn $data;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-page.php","ext":"php","size":7364,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin-page functionality.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helper;\n\n\/**\n * Page class.\n *\/\nclass Page {\n\n\t\/**\n\t * Unique ID used for menu_slug.\n\t *\n\t * @var string\n\t *\/\n\tpublic $id = null;\n\n\t\/**\n\t * The text to be displayed in the title tags of the page.\n\t *\n\t * @var string\n\t *\/\n\tpublic $title = null;\n\n\t\/**\n\t * The slug name for the parent menu.\n\t *\n\t * @var string\n\t *\/\n\tpublic $parent = null;\n\n\t\/**\n\t * The The on-screen name text for the menu.\n\t *\n\t * @var string\n\t *\/\n\tpublic $menu_title = null;\n\n\t\/**\n\t * The capability required for this menu to be displayed to the user.\n\t *\n\t * @var string\n\t *\/\n\tpublic $capability = 'manage_options';\n\n\t\/**\n\t * The icon for this menu.\n\t *\n\t * @var string\n\t *\/\n\tpublic $icon = 'dashicons-art';\n\n\t\/**\n\t * The position in the menu order this menu should appear.\n\t *\n\t * @var int\n\t *\/\n\tpublic $position = -1;\n\n\t\/**\n\t * The init hook priority.\n\t *\n\t * @var int\n\t *\/\n\tpublic $priority = 25;\n\n\t\/**\n\t * The function\/file that displays the page content for the menu page.\n\t *\n\t * @var string|callable\n\t *\/\n\tpublic $render = null;\n\n\t\/**\n\t * The function that run on page POST to save data.\n\t *\n\t * @var callable\n\t *\/\n\tpublic $onsave = null;\n\n\t\/**\n\t * Hold contextual help tabs.\n\t *\n\t * @var array\n\t *\/\n\tpublic $help = null;\n\n\t\/**\n\t * Hold scripts and styles.\n\t *\n\t * @var array\n\t *\/\n\tpublic $assets = null;\n\n\t\/**\n\t * Check if plugin is network active.\n\t *\n\t * @var array\n\t *\/\n\tpublic $is_network = false;\n\n\t\/**\n\t * Hold classes for body tag.\n\t *\n\t * @var array\n\t *\/\n\tpublic $classes = null;\n\n\t\/**\n\t * Hold localized data.\n\t *\n\t * @var array\n\t *\/\n\tpublic $json = null;\n\n\t\/**\n\t * The Constructor.\n\t *\n\t * @param string $id     Admin page unique id.\n\t * @param string $title  Title of the admin page.\n\t * @param array  $config Optional. Override page settings.\n\t *\/\n\tpublic function __construct( $id, $title, $config = [] ) {\n\n\t\t\/\/ Early bail!\n\t\tif ( ! $id ) {\n\t\t\twp_die( esc_html__( '$id variable required', 'rank-math' ), esc_html__( 'Variable Required', 'rank-math' ) );\n\t\t}\n\n\t\tif ( ! $title ) {\n\t\t\twp_die( esc_html__( '$title variable required', 'rank-math' ), esc_html__( 'Variable Required', 'rank-math' ) );\n\t\t}\n\n\t\t$this->id    = $id;\n\t\t$this->title = $title;\n\t\tforeach ( $config as $key => $value ) {\n\t\t\t$this->$key = $value;\n\t\t}\n\n\t\tif ( ! $this->menu_title ) {\n\t\t\t$this->menu_title = $title;\n\t\t}\n\n\t\tadd_action( 'init', [ $this, 'init' ], $this->priority ?? 25 );\n\t}\n\n\t\/**\n\t * Init admin page when WordPress Initialises.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\t$priority = $this->parent ? intval( $this->position ) : -1;\n\t\tadd_action( $this->is_network ? 'network_admin_menu' : 'admin_menu', [ $this, 'register_menu' ], $priority );\n\n\t\t\/\/ If not the page is not this page stop here.\n\t\tif ( ! $this->is_current_page() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hooks = [\n\t\t\t'admin_init'            => [\n\t\t\t\t'callback'  => 'save',\n\t\t\t\t'condition' => ! is_null( $this->onsave ) && is_callable( $this->onsave ),\n\t\t\t],\n\t\t\t'admin_enqueue_scripts' => [\n\t\t\t\t'callback'  => 'enqueue',\n\t\t\t\t'condition' => ! empty( $this->assets ),\n\t\t\t],\n\t\t\t'admin_head'            => [\n\t\t\t\t'callback'  => 'contextual_help',\n\t\t\t\t'condition' => ! empty( $this->help ),\n\t\t\t],\n\t\t\t'admin_body_class'      => [\n\t\t\t\t'callback'  => 'body_class',\n\t\t\t\t'condition' => ! empty( $this->classes ),\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $hooks as $hook => $data ) {\n\t\t\tif ( true === $data['condition'] ) {\n\t\t\t\tadd_action( $hook, [ $this, $data['callback'] ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Register Admin Menu.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function register_menu() {\n\t\tif ( ! $this->parent ) {\n\t\t\tadd_menu_page( $this->title, $this->menu_title, $this->capability, $this->id, [ $this, 'display' ], $this->icon, $this->position );\n\t\t\treturn;\n\t\t}\n\n\t\tadd_submenu_page( $this->parent, $this->title, $this->menu_title, $this->capability, $this->id, [ $this, 'display' ] );\n\t}\n\n\t\/**\n\t * Enqueue styles and scripts.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function enqueue() {\n\t\t$this->enqueue_styles();\n\t\t$this->enqueue_scripts();\n\t\t$this->add_localized_data();\n\t}\n\n\t\/**\n\t * Add classes to <body> of WordPress admin.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $classes Space-separated list of CSS classes.\n\t *\n\t * @return string\n\t *\/\n\tpublic function body_class( $classes = '' ) {\n\t\treturn $classes . ' ' . join( ' ', $this->classes );\n\t}\n\n\t\/**\n\t * Save anything you want using onsave function.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function save() {\n\t\tcall_user_func( $this->onsave, $this );\n\t}\n\n\t\/**\n\t * Contextual Help.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function contextual_help() {\n\t\t$screen = get_current_screen();\n\n\t\tforeach ( $this->help as $tab_id => $tab ) {\n\t\t\t$tab['id']      = $tab_id;\n\t\t\t$tab['content'] = $this->get_help_content( $tab );\n\t\t\t$screen->add_help_tab( $tab );\n\t\t}\n\t}\n\n\t\/**\n\t * Render admin page content using render function you passed in config.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function display() {\n\t\tif ( is_null( $this->render ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'settings' === $this->render ) {\n\t\t\treturn $this->display_settings();\n\t\t}\n\n\t\tif ( is_callable( $this->render ) ) {\n\t\t\tcall_user_func( $this->render, $this );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_string( $this->render ) ) {\n\t\t\tinclude_once $this->render;\n\t\t}\n\t}\n\n\t\/**\n\t * Is the page is currrent page.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_current_page() {\n\t\treturn Param::get( 'page' ) === $this->id;\n\t}\n\n\t\/**\n\t * Enqueue styles\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tprivate function enqueue_styles() {\n\t\tif ( ! isset( $this->assets['styles'] ) || empty( $this->assets['styles'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->assets['styles'] as $handle => $src ) {\n\t\t\twp_enqueue_style( $handle, $src, null, rank_math()->version );\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue scripts.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tprivate function enqueue_scripts() {\n\t\tif ( ! isset( $this->assets['scripts'] ) || empty( $this->assets['scripts'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->assets['scripts'] as $handle => $src ) {\n\t\t\tif ( $handle === 'media-editor' ) {\n\t\t\t\twp_enqueue_media();\n\t\t\t}\n\t\t\twp_enqueue_script( $handle, $src, null, rank_math()->version, true );\n\t\t}\n\t}\n\n\t\/**\n\t * Get tab content\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param array $tab Tab to get content for.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_help_content( $tab ) {\n\t\tob_start();\n\n\t\t\/\/ If it is a function.\n\t\tif ( isset( $tab['content'] ) && is_callable( $tab['content'] ) ) {\n\t\t\tcall_user_func( $tab['content'] );\n\t\t}\n\n\t\t\/\/ If it is a file.\n\t\tif ( isset( $tab['view'] ) && $tab['view'] ) {\n\t\t\trequire $tab['view'];\n\t\t}\n\n\t\treturn ob_get_clean();\n\t}\n\n\t\/**\n\t * Localized data.\n\t *\/\n\tprivate function add_localized_data() {\n\t\tif ( empty( $this->assets['json'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->assets['json'] as $key => $value ) {\n\t\t\tHelper::add_json( $key, $value );\n\t\t}\n\n\t\tHelper::add_json(\n\t\t\t'settings',\n\t\t\t[\n\t\t\t\t'general' => Helper::get_settings( 'general' ),\n\t\t\t\t'titles'  => Helper::get_settings( 'titles' ),\n\t\t\t\t'sitemap' => Helper::get_settings( 'sitemap' ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Display settings.\n\t *\/\n\tprivate function display_settings() {\n\t\techo '<div id=\"rank-math-settings\" class=\"' . esc_attr( $this->id ) . '\"><\/div>';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-post-columns.php","ext":"php","size":13644,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin post columns functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post_Columns class.\n *\/\nclass Post_Columns implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * SEO data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $data = [];\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'admin_init', 'init' );\n\t}\n\n\t\/**\n\t * Intialize.\n\t *\/\n\tpublic function init() {\n\t\tif ( ! Helper::has_cap( 'onpage_general' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->register_post_columns();\n\t\t$this->register_media_columns();\n\n\t\t\/\/ Column Content.\n\t\t$this->filter( 'rank_math_title', 'get_column_title', 5 );\n\t\t$this->filter( 'rank_math_description', 'get_column_description', 5 );\n\t\t$this->filter( 'rank_math_seo_details', 'get_column_seo_details', 5 );\n\t}\n\n\t\/**\n\t * Register post column hooks.\n\t *\/\n\tprivate function register_post_columns() {\n\t\t$post_types = Helper::get_allowed_post_types();\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$this->filter( 'edd_download_columns', 'add_columns', 11 );\n\t\t\t$this->filter( \"manage_{$post_type}_posts_columns\", 'add_columns', 11 );\n\t\t\t$this->action( \"manage_{$post_type}_posts_custom_column\", 'columns_contents', 11, 2 );\n\t\t\t$this->filter( \"manage_edit-{$post_type}_sortable_columns\", 'sortable_columns', 11 );\n\n\t\t\t\/\/ Also make them hidden by default.\n\t\t\t$user_id        = get_current_user_id();\n\t\t\t$columns_hidden = (array) get_user_meta( $user_id, \"manageedit-{$post_type}columnshidden\", true );\n\t\t\t$maybe_hidden   = get_user_meta( $user_id, \"manageedit-{$post_type}columnshidden_default\", true );\n\n\t\t\t\/\/ Continue if default is already set.\n\t\t\tif ( $maybe_hidden ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Set it to hidden by default.\n\t\t\t$columns_hidden = array_unique( array_merge( $columns_hidden, [ 'rank_math_title', 'rank_math_description' ] ) );\n\t\t\tupdate_user_meta( $user_id, \"manageedit-{$post_type}columnshidden\", $columns_hidden );\n\t\t\tupdate_user_meta( $user_id, \"manageedit-{$post_type}columnshidden_default\", '1' );\n\t\t}\n\t}\n\n\t\/**\n\t * Register media column hooks.\n\t *\/\n\tprivate function register_media_columns() {\n\t\tif ( ! Helper::get_settings( 'titles.pt_attachment_bulk_editing' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->filter( 'manage_media_columns', 'add_media_columns', 11 );\n\t\t$this->action( 'manage_media_custom_column', 'media_contents', 11, 2 );\n\t}\n\n\t\/**\n\t * Add new columns for SEO title, description and focus keywords.\n\t *\n\t * @param array $columns Array of column names.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_columns( $columns ) {\n\t\tglobal $post_type;\n\t\t$current_pt = $post_type;\n\t\tif ( ! $post_type && 'inline-save' === Param::post( 'action' ) ) {\n\t\t\t$post_id    = Param::post( 'post_ID', 0, FILTER_VALIDATE_INT );\n\t\t\t$current_pt = get_post_type( $post_id );\n\t\t}\n\t\t$columns['rank_math_seo_details'] = esc_html__( 'SEO Details', 'rank-math' );\n\n\t\tif ( Helper::get_settings( 'titles.pt_' . $current_pt . '_bulk_editing', true ) ) {\n\t\t\t$columns['rank_math_title']       = esc_html__( 'SEO Title', 'rank-math' );\n\t\t\t$columns['rank_math_description'] = esc_html__( 'SEO Desc', 'rank-math' );\n\t\t}\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Make the SEO Score column sortable.\n\t *\n\t * @param array $columns Array of column names.\n\t *\n\t * @return array\n\t *\/\n\tpublic function sortable_columns( $columns ) {\n\t\t$columns['rank_math_seo_details'] = 'rank_math_seo_score';\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Add new columns for Media Alt & Title.\n\t *\n\t * @param array $columns Array of column names.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_media_columns( $columns ) {\n\t\t$columns['rank_math_image_title'] = esc_html__( 'Title', 'rank-math' );\n\t\t$columns['rank_math_image_alt']   = esc_html__( 'Alternative Text', 'rank-math' );\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Add content for custom column.\n\t *\n\t * @param string $column_name The name of the column to display.\n\t * @param int    $post_id     The current post ID.\n\t *\/\n\tpublic function columns_contents( $column_name, $post_id ) {\n\t\tif ( Str::starts_with( 'rank_math', $column_name ) ) {\n\t\t\tdo_action( $column_name, $post_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Add content for title column.\n\t *\n\t * @param int $post_id The current post ID.\n\t *\/\n\tpublic function get_column_title( $post_id ) {\n\t\t$title = ! empty( $this->data[ $post_id ]['rank_math_title'] ) ? $this->data[ $post_id ]['rank_math_title'] : '';\n\t\tif ( ! $title ) {\n\t\t\t$post_type = get_post_type( $post_id );\n\t\t\t$title     = Helper::get_settings( \"titles.pt_{$post_type}_title\" );\n\t\t}\n\t\t?>\n\t\t<span class=\"rank-math-column-display\"><?php echo esc_html( $title ); ?><\/span>\n\t\t<textarea class=\"rank-math-column-value\" data-field=\"title\" tabindex=\"11\"><?php echo esc_attr( $title ); ?><\/textarea>\n\t\t<div class=\"rank-math-column-edit\">\n\t\t\t<a href=\"#\" class=\"rank-math-column-save\"><?php esc_html_e( 'Save', 'rank-math' ); ?><\/a>\n\t\t\t<a href=\"#\" class=\"button-link-delete rank-math-column-cancel\"><?php esc_html_e( 'Cancel', 'rank-math' ); ?><\/a>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add content for title column.\n\t *\n\t * @param int $post_id The current post ID.\n\t *\/\n\tpublic function get_column_description( $post_id ) {\n\t\t$description = ! empty( $this->data[ $post_id ]['rank_math_description'] ) ? $this->data[ $post_id ]['rank_math_description'] : '';\n\t\tif ( ! $description ) {\n\t\t\t$post_type   = get_post_type( $post_id );\n\t\t\t$description = has_excerpt( $post_id ) ? '%excerpt%' : Helper::get_settings( \"titles.pt_{$post_type}_description\" );\n\t\t}\n\t\t?>\n\t\t<span class=\"rank-math-column-display\"><?php echo esc_html( $description ); ?><\/span>\n\t\t<textarea class=\"rank-math-column-value\" data-field=\"description\" tabindex=\"11\"><?php echo esc_attr( $description ); ?><\/textarea>\n\t\t<div class=\"rank-math-column-edit\">\n\t\t\t<a href=\"#\" class=\"rank-math-column-save\"><?php esc_html_e( 'Save', 'rank-math' ); ?><\/a>\n\t\t\t<a href=\"#\" class=\"button-link-delete rank-math-column-cancel\"><?php esc_html_e( 'Cancel', 'rank-math' ); ?><\/a>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add content for title column.\n\t *\n\t * @param int $post_id The current post ID.\n\t *\/\n\tpublic function get_column_seo_details( $post_id ) {\n\t\tif ( empty( $this->data ) ) {\n\t\t\t$this->get_seo_data();\n\t\t}\n\n\t\t$data = isset( $this->data[ $post_id ] ) ? $this->data[ $post_id ] : [];\n\t\tif ( ! self::is_post_indexable( $post_id ) ) {\n\t\t\techo '<span class=\"rank-math-column-display seo-score no-score \"><strong>N\/A<\/strong><\/span>';\n\t\t\techo '<strong>' . esc_html__( 'No Index', 'rank-math' ) . '<\/strong>';\n\t\t\t$this->do_action( 'post\/column\/seo_details', $post_id, $data, $this->data );\n\t\t\treturn;\n\t\t}\n\n\t\t$keyword   = ! empty( $data['rank_math_focus_keyword'] ) ? $data['rank_math_focus_keyword'] : '';\n\t\t$keyword   = explode( ',', $keyword )[0];\n\t\t$is_pillar = ! empty( $data['rank_math_pillar_content'] ) && 'on' === $data['rank_math_pillar_content'] ? true : false;\n\n\t\t$score = empty( $keyword ) ? false : $this->get_seo_score( $data );\n\t\t$class = ! $score ? 'no-score' : $this->get_seo_score_class( $score );\n\t\t$score = $score ? $score . ' \/ 100' : 'N\/A';\n\n\t\t?>\n\t\t<span class=\"rank-math-column-display seo-score <?php echo esc_attr( $class ); ?> <?php echo ! $score ? 'disabled' : ''; ?>\">\n\t\t\t<strong><?php echo esc_html( $score ); ?><\/strong>\n\t\t\t<?php if ( $is_pillar ) { ?>\n\t\t\t\t<img class=\"is-pillar\" src=\"<?php echo esc_url( rank_math()->plugin_url() . 'assets\/admin\/img\/pillar.svg' ); ?>\" alt=\"<?php esc_html_e( 'Is Pillar', 'rank-math' ); ?>\" title=\"<?php esc_html_e( 'Is Pillar', 'rank-math' ); ?>\" width=\"25\" \/>\n\t\t\t<?php } ?>\n\t\t<\/span>\n\n\t\t\t<label><?php esc_html_e( 'Focus Keyword', 'rank-math' ); ?>:<\/label>\n\t\t\t<span class=\"rank-math-column-display\">\n\t\t\t\t<strong title=\"Focus Keyword\"><?php esc_html_e( 'Keyword', 'rank-math' ); ?>:<\/strong>\n\t\t\t\t<span>\n\t\t\t\t\t<?php\n\t\t\t\t\t\techo $keyword ? wp_kses_post( $this->do_filter( 'post\/column\/seo_details\/focus_keyword', $keyword ) ) : esc_html__( 'Not Set', 'rank-math' );\n\t\t\t\t\t?>\n\t\t\t\t<\/span>\n\t\t\t<\/span>\n\n\t\t\t<input class=\"rank-math-column-value\" data-field=\"focus_keyword\" tabindex=\"11\" value=\"<?php echo esc_attr( $keyword ); ?>\" \/>\n\n\t\t\t<?php $this->do_action( 'post\/column\/seo_details', $post_id, $data, $this->data ); ?>\n\n\t\t\t<div class=\"rank-math-column-edit\">\n\t\t\t\t<a href=\"#\" class=\"rank-math-column-save\"><?php esc_html_e( 'Save', 'rank-math' ); ?><\/a>\n\t\t\t\t<a href=\"#\" class=\"button-link-delete rank-math-column-cancel\"><?php esc_html_e( 'Cancel', 'rank-math' ); ?><\/a>\n\t\t\t<\/div>\n\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add content for custom media column.\n\t *\n\t * @param string $column_name The name of the column to display.\n\t * @param int    $post_id     The current post ID.\n\t *\/\n\tpublic function media_contents( $column_name, $post_id ) {\n\t\tif ( 'rank_math_image_title' === $column_name ) {\n\t\t\t$title = get_the_title( $post_id );\n\t\t\t?>\n\t\t\t<span class=\"rank-math-column-display\"><?php echo esc_html( $title ); ?><\/span>\n\t\t\t<input class=\"rank-math-column-value\" data-field=\"image_title\" tabindex=\"11\" value=\"<?php echo esc_attr( $title ); ?>\" \/>\n\t\t\t<div class=\"rank-math-column-edit\">\n\t\t\t\t<a href=\"#\" class=\"rank-math-column-save\"><?php esc_html_e( 'Save', 'rank-math' ); ?><\/a>\n\t\t\t\t<a href=\"#\" class=\"button-link-delete rank-math-column-cancel\"><?php esc_html_e( 'Cancel', 'rank-math' ); ?><\/a>\n\t\t\t<\/div>\n\t\t\t<?php\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'rank_math_image_alt' === $column_name ) {\n\t\t\t$alt = get_post_meta( $post_id, '_wp_attachment_image_alt', true );\n\t\t\t?>\n\t\t\t<span class=\"rank-math-column-display\"><?php echo esc_html( $alt ); ?><\/span>\n\t\t\t<input class=\"rank-math-column-value\" data-field=\"image_alt\" tabindex=\"11\" value=\"<?php echo esc_attr( $alt ); ?>\" \/>\n\t\t\t<div class=\"rank-math-column-edit\">\n\t\t\t\t<a href=\"#\" class=\"rank-math-column-save\"><?php esc_html_e( 'Save', 'rank-math' ); ?><\/a>\n\t\t\t\t<a href=\"#\" class=\"button-link-delete rank-math-column-cancel\"><?php esc_html_e( 'Cancel', 'rank-math' ); ?><\/a>\n\t\t\t<\/div>\n\t\t\t<?php\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Get SEO data.\n\t *\/\n\tprivate function get_seo_data() {\n\t\t$post_ids = [];\n\n\t\t$post_ids = array_filter( $this->get_post_ids() );\n\t\t$post_id  = (int) Param::post( 'post_ID' );\n\t\tif ( $post_id ) {\n\t\t\t$post_ids[] = $post_id;\n\t\t}\n\n\t\tif ( empty( $post_ids ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$results = Database::table( 'postmeta' )->select( [ 'post_id', 'meta_key', 'meta_value' ] )->whereIn( 'post_id', $post_ids )->whereLike( 'meta_key', 'rank_math' )->get( ARRAY_A );\n\t\tif ( empty( $results ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( $results as $result ) {\n\t\t\t$this->data[ $result['post_id'] ][ $result['meta_key'] ] = $result['meta_value'];\n\t\t}\n\t}\n\n\t\/**\n\t * Get Post IDs dispalyed on the Post lists page.\n\t *\/\n\tprivate function get_post_ids() {\n\t\tglobal $wp_query, $per_page;\n\t\tif ( empty( $wp_query->posts ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$pages = $wp_query->posts;\n\t\tif (\n\t\t\t! is_post_type_hierarchical( Param::get( 'post_type' ) ) ||\n\t\t\t'menu_order title' !== $wp_query->query['orderby']\n\t\t) {\n\t\t\treturn array_map(\n\t\t\t\tfunction ( $post ) {\n\t\t\t\t\treturn isset( $post->ID ) ? $post->ID : '';\n\t\t\t\t},\n\t\t\t\t$pages\n\t\t\t);\n\t\t}\n\n\t\t$children_pages = [];\n\t\tif ( empty( Param::request( 's' ) ) ) {\n\t\t\t$top_level_pages = [];\n\n\t\t\tforeach ( $pages as $page ) {\n\t\t\t\tif ( $page->post_parent > 0 ) {\n\t\t\t\t\t$children_pages[ $page->post_parent ][] = $page;\n\t\t\t\t} else {\n\t\t\t\t\t$top_level_pages[] = $page;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$pages = &$top_level_pages;\n\t\t}\n\n\t\t$pagenum = max( 1, Param::request( 'paged', 0 ) );\n\t\t$count   = 0;\n\t\t$start   = ( $pagenum - 1 ) * $per_page;\n\t\t$end     = $start + $per_page;\n\t\t$ids     = [];\n\n\t\tforeach ( $pages as $page ) {\n\t\t\tif ( $count >= $end ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( $count >= $start ) {\n\t\t\t\t$ids[] = $page->ID;\n\t\t\t}\n\n\t\t\t++$count;\n\n\t\t\t$this->add_child_page_ids( $children_pages, $page->ID, $ids, $count );\n\t\t}\n\n\t\treturn $ids;\n\t}\n\n\t\/**\n\t * Add the child page IDs to the list of IDs to be processed.\n\t *\n\t * @param array $children_pages Child Pages.\n\t * @param int   $id             Current page ID.\n\t * @param array $ids            IDs to be processed.\n\t * @param int   $count          Counter.\n\t *\/\n\tprivate function add_child_page_ids( $children_pages, $id, &$ids, &$count ) {\n\t\tif ( empty( $children_pages ) || empty( $children_pages[ $id ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $children_pages[ $id ] as $child_page ) {\n\t\t\t$id    = $child_page->ID;\n\t\t\t$ids[] = $child_page->ID;\n\t\t\t++$count;\n\n\t\t\t$this->add_child_page_ids( $children_pages, $id, $ids, $count );\n\t\t}\n\t}\n\n\t\/**\n\t * Get SEO score.\n\t *\n\t * @param array $data SEO data of current post.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_seo_score( $data ) {\n\t\tif ( ! isset( $data['rank_math_seo_score'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! Helper::is_score_enabled() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $data['rank_math_seo_score'] ? $data['rank_math_seo_score'] : 0;\n\t}\n\n\t\/**\n\t * Get SEO score rating string: great\/good\/bad.\n\t *\n\t * @param int $score Score.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_seo_score_class( $score ) {\n\t\tif ( $score > 80 ) {\n\t\t\treturn 'great';\n\t\t}\n\n\t\tif ( $score > 50 && $score < 81 ) {\n\t\t\treturn 'good';\n\t\t}\n\n\t\treturn 'bad';\n\t}\n\n\t\/**\n\t * Check post indexable status.\n\t *\n\t * @param int $post_id Post ID.\n\t *\/\n\tpublic static function is_post_indexable( $post_id ) {\n\t\t$robots = Param::post( 'rank_math_robots', false, FILTER_DEFAULT, FILTER_REQUIRE_ARRAY );\n\n\t\t$robots = apply_filters( 'rank_math\/admin\/robots', $robots, $post_id );\n\t\tif ( ! empty( $robots ) ) {\n\t\t\treturn in_array( 'index', $robots, true ) ? true : false;\n\t\t}\n\n\t\treturn Helper::is_post_indexable( $post_id );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-registration.php","ext":"php","size":8040,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Setup Wizard - configure the SEO settings in just a few steps.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Google\\Authentication;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Registration class.\n *\/\nclass Registration {\n\n\tuse Hooker;\n\n\t\/**\n\t * Page slug.\n\t *\n\t * @var string\n\t *\/\n\tprivate $slug = 'rank-math-registration';\n\n\t\/**\n\t * Hold current step.\n\t *\n\t * @var string\n\t *\/\n\tprotected $step = '';\n\n\t\/**\n\t * Current step slug.\n\t *\n\t * @var string\n\t *\/\n\tprotected $step_slug = '';\n\n\t\/**\n\t * Is registration invalid.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $invalid = false;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->step      = 'register';\n\t\t$this->step_slug = 'register';\n\t\t$this->invalid   = Helper::is_invalid_registration();\n\n\t\tif ( $this->invalid ) {\n\t\t\t$this->action( 'admin_menu', 'admin_menu' );\n\t\t\t$this->action( 'admin_init', 'redirect_to_welcome' );\n\t\t\t$this->action( 'admin_post_rank_math_save_registration', 'save_registration' );\n\t\t\t$this->action( 'admin_post_rank_math_skip_wizard', 'skip_wizard' );\n\t\t\t$this->action( 'admin_init', 'render_page', 30 );\n\t\t}\n\n\t\t$this->action( 'admin_init', 'handle_registration' );\n\t\t$this->filter( 'allowed_redirect_hosts', 'allowed_redirect_hosts' );\n\t}\n\n\t\/**\n\t * Add allowed redirect hosts.\n\t *\n\t * @param  array $hosts Allowed hosts.\n\t * @return array\n\t *\/\n\tpublic function allowed_redirect_hosts( $hosts ) {\n\t\t$hosts[] = 'rankmath.com';\n\t\treturn $hosts;\n\t}\n\n\t\/**\n\t * Check for activation.\n\t *\/\n\tpublic function handle_registration() {\n\n\t\t\/\/ Bail if already connected.\n\t\tif ( Helper::is_site_connected() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$nonce = Param::get( 'nonce' );\n\t\tif ( ! $nonce || ! wp_verify_nonce( $nonce, 'rank_math_register_product' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$status = Param::get( 'rankmath_connect' );\n\t\tif ( $status && $redirect_to = $this->get_registration_url( $status ) ) { \/\/phpcs:ignore\n\t\t\tHelper::redirect( $redirect_to );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Handle activation.\n\t *\n\t * @param  string $status Status parameter.\n\t *\/\n\tprivate function get_registration_url( $status ) {\n\t\tif ( 'cancel' === $status ) {\n\t\t\t\/\/ User canceled activation.\n\t\t\tHelper::add_notification( __( 'Rank Math plugin could not be connected.', 'rank-math' ), [ 'type' => 'error' ] );\n\t\t\treturn Security::remove_query_arg_raw( [ 'rankmath_connect', 'rankmath_auth' ] );\n\t\t}\n\n\t\tif ( 'banned' === $status ) {\n\t\t\t\/\/ User or site banned.\n\t\t\tHelper::add_notification( __( 'Unable to connect Rank Math.', 'rank-math' ), [ 'type' => 'error' ] );\n\t\t\treturn Security::remove_query_arg_raw( [ 'rankmath_connect', 'rankmath_auth' ] );\n\t\t}\n\n\t\tif ( 'ok' === $status && $auth_data = $this->get_registration_params() ) { \/\/ phpcs:ignore\n\t\t\tAdmin_Helper::get_registration_data(\n\t\t\t\t[\n\t\t\t\t\t'username'  => $auth_data['username'],\n\t\t\t\t\t'email'     => $auth_data['email'],\n\t\t\t\t\t'api_key'   => $auth_data['api_key'],\n\t\t\t\t\t'plan'      => $auth_data['plan'],\n\t\t\t\t\t'connected' => true,\n\t\t\t\t\t'site_url'  => Helper::get_home_url(),\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tif ( 1 === absint( Param::get( 'analytics' ) ) ) {\n\t\t\t\twp_redirect( Authentication::get_auth_url() ); \/\/phpcs:ignore -- This is used to redirect to the external url.\n\t\t\t\texit;\n\t\t\t}\n\n\t\t\t\/\/ Redirect to the wizard is registration successful.\n\t\t\tif ( Param::get( 'page' ) === 'rank-math-registration' ) {\n\t\t\t\treturn Helper::get_admin_url( 'wizard' );\n\t\t\t}\n\n\t\t\treturn Security::remove_query_arg_raw( [ 'rankmath_connect', 'rankmath_auth', 'nonce' ] );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if 'rankmath_auth' contains all the data we need, in the\n\t * correct format.\n\t *\n\t * @return bool|array Whether the input is valid.\n\t *\/\n\tprivate function get_registration_params() {\n\t\t$params = Param::get( 'rankmath_auth' );\n\t\tif ( false === $params ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$params = json_decode( base64_decode( $params ), true ); \/\/ phpcs:ignore -- Verified as safe usage.\n\t\tif (\n\t\t\t! is_array( $params ) ||\n\t\t\t! isset( $params['username'] ) ||\n\t\t\t! isset( $params['email'] ) ||\n\t\t\t! isset( $params['api_key'] )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $params;\n\t}\n\n\t\/**\n\t * Redirect to welcome page.\n\t *\n\t * Redirect the user to the welcome page after plugin activation.\n\t *\/\n\tpublic function redirect_to_welcome() {\n\t\tif ( ! $this->can_redirect() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$url = '';\n\t\tif ( $this->invalid ) {\n\t\t\t$url = 'registration';\n\t\t} elseif ( ! get_option( 'rank_math_wizard_completed' ) ) {\n\t\t\t$url = 'wizard';\n\t\t}\n\n\t\tHelper::redirect( Helper::get_admin_url( $url ) );\n\t\texit;\n\t}\n\n\t\/**\n\t * Add menu items.\n\t *\/\n\tpublic function admin_menu() {\n\t\tadd_menu_page(\n\t\t\tesc_html__( 'Rank Math', 'rank-math' ),\n\t\t\tesc_html__( 'Rank Math SEO', 'rank-math' ),\n\t\t\t'manage_options',\n\t\t\t$this->slug,\n\t\t\t[ $this, 'render_page' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Output the admin page.\n\t *\/\n\tpublic function render_page() {\n\n\t\t\/\/ Early bail if we're not on the right page.\n\t\tif ( Param::get( 'page' ) !== $this->slug ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ob_get_length() ) {\n\t\t\tob_end_clean();\n\t\t}\n\n\t\t$assets = new Assets();\n\t\t$assets->register();\n\n\t\twp_styles()->done  = [];\n\t\twp_scripts()->done = [];\n\n\t\t\/\/ Wizard.\n\t\twp_enqueue_media();\n\t\twp_enqueue_style( 'rank-math-wizard', rank_math()->plugin_url() . 'assets\/admin\/css\/setup-wizard.css', [ 'wp-admin', 'buttons', 'wp-components', 'rank-math-common', 'rank-math-cmb2' ], rank_math()->version );\n\t\twp_enqueue_script( 'rank-math-registration', rank_math()->plugin_url() . 'assets\/admin\/js\/registration.js', [ 'lodash', 'react', 'react-dom', 'wp-element', 'wp-data', 'rank-math-components' ], rank_math()->version, true );\n\t\tHelper::add_json( 'logo', esc_url( rank_math()->plugin_url() . 'assets\/admin\/img\/logo.svg' ) );\n\t\tHelper::add_json( 'registerNonce', wp_create_nonce( 'rank-math-wizard' ) );\n\t\tHelper::add_json( 'adminUrl', esc_url( admin_url( 'admin-post.php' ) ) );\n\t\tHelper::add_json( 'isSiteUrlValid', Admin_Helper::is_site_url_valid() );\n\t\tHelper::add_json( 'optionsPage', esc_url( admin_url( 'options-general.php' ) ) );\n\n\t\tob_start();\n\n\t\t\/**\n\t\t * Start the actual page content.\n\t\t *\/\n\t\tinclude_once rank_math()->admin_dir() . 'wizard\/views\/content.php';\n\t\texit;\n\t}\n\n\t\/**\n\t * Execute save handler for current step.\n\t *\/\n\tpublic function save_registration() {\n\t\t\/\/ If no form submission, bail.\n\t\t$referer = Param::post( '_wp_http_referer', get_dashboard_url() );\n\t\tif ( Param::post( 'step' ) !== 'register' ) {\n\t\t\treturn Helper::redirect( $referer );\n\t\t}\n\n\t\tcheck_admin_referer( 'rank-math-wizard', 'security' );\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn Helper::redirect( $referer );\n\t\t}\n\n\t\t$this->redirect_to_connect( $_POST );\n\t}\n\n\t\/**\n\t * Skip wizard handler.\n\t *\/\n\tpublic function skip_wizard() {\n\t\tcheck_admin_referer( 'rank-math-wizard', 'security' );\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\texit;\n\t\t}\n\t\tadd_option( 'rank_math_registration_skip', true );\n\t\tHelper::redirect( Helper::get_admin_url( 'wizard' ) );\n\t\texit;\n\t}\n\n\t\/**\n\t * Authenticate registration.\n\t *\n\t * @param array $values Array of values for the step to process.\n\t *\/\n\tprivate function redirect_to_connect( $values ) {\n\t\tif ( ! isset( $values['rank_math_activate'] ) ) {\n\t\t\tAdmin_Helper::deregister_user();\n\t\t\treturn;\n\t\t}\n\n\t\t$url = Admin_Helper::get_activate_url( Helper::get_admin_url( 'registration' ) );\n\t\twp_safe_redirect( $url );\n\t\tdie();\n\t}\n\n\t\/**\n\t * Can redirect to setup\/registration page after install.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_redirect() {\n\t\tif ( ! get_transient( '_rank_math_activation_redirect' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdelete_transient( '_rank_math_activation_redirect' );\n\n\t\tif ( ( ! empty( $_GET['page'] ) && in_array( $_GET['page'], [ 'rank-math-registration', 'rank-math-wizard' ], true ) ) || ! current_user_can( 'manage_options' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-pro-notice.php","ext":"php","size":9110,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Inform the user about Rank Math PRO after 20 days of usage.\n *\n * @since      1.0.69\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Pro_Notice class.\n *\/\nclass Pro_Notice {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Now.\n\t *\n\t * @var string\n\t *\/\n\tpublic $current_time = '';\n\n\t\/**\n\t * Rank Math plugin install date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $install_date = '';\n\n\t\/**\n\t * Date of release of version 1.0.69. Turned into a timestamp in the constructor.\n\t *\n\t * @var string\n\t *\/\n\tpublic $record_date = '2021-07-30 13:00';\n\n\t\/**\n\t * Constructor method.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->current_time = Helper::get_current_time();\n\t\t$this->record_date  = strtotime( $this->record_date );\n\t\t$this->install_date = get_option( 'rank_math_install_date' );\n\t\tif ( false === $this->install_date ) {\n\t\t\t$this->install_date = $this->current_time;\n\t\t}\n\t}\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->ajax( 'dismiss_pro_notice', 'dismiss' );\n\n\t\t\/\/ Admin notice.\n\t\t$notice_date = $this->get_notice_date();\n\t\tif ( $this->current_time > $notice_date ) {\n\t\t\tif ( get_option( 'rank_math_pro_notice_added' ) === false && ! Helper::has_notification( 'rank_math_review_plugin_notice' ) ) {\n\t\t\t\t$this->add_notice( (int) get_option( 'rank_math_pro_notice_delayed' ) );\n\t\t\t}\n\n\t\t\t\/\/ Make dismiss button work like the \"Maybe later\" link.\n\t\t\t$this->action( 'wp_helpers_notification_dismissed', 'pro_notice_after_dismiss' );\n\n\t\t\t$this->action( 'admin_footer', 'pro_notice_js', 15 );\n\t\t}\n\t}\n\n\t\/**\n\t * Add inline JS & CSS related to the Pro notice.\n\t *\n\t * @return void\n\t *\/\n\tpublic function pro_notice_js() {\n\t\tif ( ! Helper::has_notification( 'rank_math_pro_notice' ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<script>\n\t\t\t(function( $ ) {\n\t\t\t\t$( function() {\n\t\t\t\t\t$('.rank-math-dismiss-pro-notice').on( 'click', function(e) {\n\t\t\t\t\t\tvar $this = $(this);\n\n\t\t\t\t\t\tif ( ! $this.hasClass( 'rank-math-upgrade-action' ) ) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $this.hasClass( 'rank-math-maybe-later-action' ) ) {\n\t\t\t\t\t\t\t$('#rank_math_pro_notice').find( '.notice-dismiss' ).trigger('click');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjQuery.ajax( {\n\t\t\t\t\t\t\turl: rankMath.ajaxurl,\n\t\t\t\t\t\t\tdata: { action: 'rank_math_already_upgraded', security: rankMath.security,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t$('#rank_math_pro_notice').find( '.notice-dismiss' ).trigger('click');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})(jQuery);\n\t\t<\/script>\n\t\t<style>\n\t\t\t#rank_math_pro_notice.is-dismissible {\n\t\t\t\tbackground: #253142;\n\t\t\t\tcolor: #e4e5e7;\n\t\t\t\tborder-width: 3px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #161e28;\n\t\t\t\tpadding: 0.25rem 1rem 1rem;\n\t\t\t\tborder-radius: 5px;\n\t\t\t}\n\t\t\t#rank_math_pro_notice.is-dismissible p {\n\t\t\t\tfont-size: 1.25rem;\n\t\t\t\tcolor: #f7d070;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t\t#rank_math_pro_notice.is-dismissible ul {\n\t\t\t\tline-height: 1;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\ttext-align: left;\n\t\t\t\topacity: 0.8;\n\t\t\t\tfont-size: 15px;\n\t\t\t\tmax-width: 530px;\n\t\t\t}\n\t\t\t#rank_math_pro_notice.is-dismissible li {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 49%;\n\t\t\t\tmargin-bottom: 0.5rem;\n\t\t\t}\n\t\t\t#rank_math_pro_notice ul li:before {\n\t\t\t\tfont-family: dashicons;\n\t\t\t\tfont-size: 20px;\n\t\t\t\twidth: 20px;\n\t\t\t\theight: 20px;\n\t\t\t\tmargin-right: 5px;\n\t\t\t\tcontent: '\\f147';\n\t\t\t\ttext-align: center;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcolor: #161e28;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tbackground: #9ce2b6;\n\t\t\t}\n\t\t\t#rank_math_pro_notice .button {\n\t\t\t\tborder-color: #f7d070;\n\t\t\t\tbackground: #f7d070;\n\t\t\t\tcolor: #5a4000;\n\t\t\t\tfont-size: 15px;\n\t\t\t\tmargin-right: 12px;\n\t\t\t}\n\t\t\tdiv#rank_math_pro_notice .rank-math-maybe-later-action,\n\t\t\tdiv#rank_math_pro_notice .rank-math-already-upgraded-action {\n\t\t\t\tcolor: #f7d070;\n\t\t\t\topacity: 0.7;\n\t\t\t\tmargin: 0 12px;\n\t\t\t\tfont-size: 13px;\n\t\t\t}\n\n\t\t\t.toplevel_page_rank-math #rank_math_pro_notice,\n\t\t\tbody[class*=\"rank-math_page_rank-math-options-\"] div#rank_math_pro_notice {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t<\/style>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add admin notice.\n\t *\n\t * @param int $variant Notice variant.\n\t * @return void\n\t *\/\n\tpublic function add_notice( $variant = 0 ) {\n\t\t$message = $this->get_notice_text( $variant );\n\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type'       => 'info',\n\t\t\t\t'id'         => 'rank_math_pro_notice',\n\t\t\t\t'capability' => 'install_plugins',\n\t\t\t]\n\t\t);\n\n\t\tupdate_option( 'rank_math_pro_notice_added', '1', false );\n\t}\n\n\t\/**\n\t * Get notice texts.\n\t *\n\t * @param integer $variant Message variant.\n\t * @return string\n\t *\/\n\tpublic function get_notice_text( $variant = 0 ) {\n\t\t$message = '';\n\t\tswitch ( (int) $variant ) {\n\t\t\tcase 1:\n\t\t\t\t$message = '<p><strong>';\n\n\t\t\t\t$message .= esc_html__( 'Rank Your Content With the Power of PRO & A.I.', 'rank-math' );\n\t\t\t\t$message .= '<\/strong><\/p>';\n\t\t\t\t$message .= '<ul>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Unlimited Websites', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Content A.I. (Artificial Intelligence)', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Keyword Rank Tracker', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Powerful Schema Generator', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( '24x7 Premium Support', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'SEO Email Reports', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'and Many More\u2026', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t<\/ul>';\n\t\t\t\t$message .= '<p>\n\t\t\t\t\t\t\t\t<a href=\"' . KB::get( 'pro', 'Upgrade Notice 2 New Yes' ) . '\" class=\"button rank-math-dismiss-pro-notice rank-math-upgrade-action\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>' . esc_html__( 'Yes, I want to learn more', 'rank-math' ) . '<\/strong><\/a><a href=\"#\" class=\"rank-math-dismiss-pro-notice rank-math-already-upgraded-action\">' . esc_html__( 'No, I don\\'t want it', 'rank-math' ) . '<\/a><a href=\"#\" class=\"rank-math-dismiss-pro-notice rank-math-already-upgraded-action\">' . esc_html__( 'I already upgraded', 'rank-math' ) . '<\/a>\n\t\t\t\t\t\t\t<\/p>';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$message = '<p><strong>';\n\n\t\t\t\t$message .= esc_html__( 'Rank Your Content With the Power of PRO & A.I.', 'rank-math' );\n\t\t\t\t$message .= '<\/strong><\/p><p>';\n\t\t\t\t$message .= '<ul>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Unlimited Websites', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Content A.I. (Artificial Intelligence)', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Keyword Rank Tracker', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'Powerful Schema Generator', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( '24x7 Premium Support', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'SEO Email Reports', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t\t<li>' . esc_html__( 'and Many More\u2026', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t<\/ul>';\n\t\t\t\t$message .= '<p>\n\t\t\t\t\t\t<a href=\"' . KB::get( 'pro', 'Upgrade Notice 1 New Yes' ) . '\" class=\"button rank-math-dismiss-pro-notice rank-math-upgrade-action\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>' . esc_html__( 'Yes, I want better SEO', 'rank-math' ) . '<\/strong><\/a><a href=\"#\" class=\"rank-math-dismiss-pro-notice rank-math-maybe-later-action\">' . esc_html__( 'No, maybe later', 'rank-math' ) . '<\/a><a href=\"#\" class=\"rank-math-dismiss-pro-notice rank-math-already-upgraded-action\">' . esc_html__( 'I already purchased', 'rank-math' ) . '<\/a>\n\t\t\t\t\t<\/p>';\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $message;\n\t}\n\n\t\/**\n\t * Set \"delayed\" flag after the user dismisses the notice.\n\t *\n\t * @param string $notification_id Dismissed notice ID.\n\t * @return void\n\t *\/\n\tpublic function pro_notice_after_dismiss( $notification_id ) {\n\t\tif ( 'rank_math_pro_notice' !== $notification_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If it has already been delayed once then dismiss it forever.\n\t\tif ( get_option( 'rank_math_pro_notice_delayed' ) ) {\n\t\t\tupdate_option( 'rank_math_already_upgraded', Helper::get_current_time() );\n\t\t\treturn;\n\t\t}\n\n\t\tdelete_option( 'rank_math_pro_notice_date' );\n\t\tdelete_option( 'rank_math_pro_notice_added' );\n\t\tupdate_option( 'rank_math_pro_notice_delayed', 1, false );\n\t}\n\n\t\/**\n\t * Get stored notice start date.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_notice_date() {\n\t\t$notice_date = get_option( 'rank_math_pro_notice_date' );\n\t\tif ( false !== $notice_date ) {\n\t\t\treturn $notice_date;\n\t\t}\n\n\t\t$delay_days = 10;\n\t\tif ( $this->install_date < $this->record_date && ! get_option( 'rank_math_pro_notice_delayed' ) ) {\n\t\t\t$delay_days = wp_rand( 7, 30 );\n\t\t}\n\n\t\t$notice_date = $this->current_time + ( $delay_days * DAY_IN_SECONDS );\n\t\tupdate_option( 'rank_math_pro_notice_date', $notice_date, false );\n\n\t\treturn $notice_date;\n\t}\n\n\t\/**\n\t * Set the \"already upgraded\" flag.\n\t * This also sets the \"already reviewed\" flag, so the review notice will not show up anymore either.\n\t *\/\n\tpublic function dismiss() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'onpage_general' );\n\n\t\tupdate_option( 'rank_math_already_upgraded', Helper::get_current_time() );\n\t\tupdate_option( 'rank_math_already_reviewed', Helper::get_current_time() );\n\n\t\t$this->success( 'success' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin.php","ext":"php","size":18631,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin-specific functionality of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Runner;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\n * @codeCoverageIgnore\n *\/\nclass Admin implements Runner {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'init', 'flush', 999 );\n\t\t$this->filter( 'user_contactmethods', 'update_user_contactmethods' );\n\t\t$this->action( 'profile_update', 'profile_update', 10, 3 );\n\t\t$this->action( 'admin_footer', 'convert_additional_profile_url_to_textarea' );\n\t\t$this->action( 'save_post', 'canonical_check_notice' );\n\t\t$this->action( 'cmb2_save_options-page_fields', 'update_is_configured_value', 10, 2 );\n\t\t$this->filter( 'action_scheduler_pastdue_actions_check_pre', 'as_exclude_pastdue_actions' );\n\t\t$this->filter( 'rank_math\/pro_badge', 'offer_icon' );\n\t\t$this->filter( 'load_script_translation_file', 'load_script_translation_file', 10, 3 );\n\n\t\t\/\/ Use woocommerce textdomain for the Actiion scheduler strings.\n\t\t$this->filter( 'gettext', 'remap_action_scheduler_translation', 10, 3 );\n\t\t$this->filter( 'gettext_with_context', 'remap_action_scheduler_translation_with_context', 10, 4 );\n\n\t\t\/\/ AJAX.\n\t\t$this->ajax( 'search_pages', 'search_pages' );\n\t\t$this->ajax( 'is_keyword_new', 'is_keyword_new' );\n\t\t$this->ajax( 'save_checklist_layout', 'save_checklist_layout' );\n\t\t$this->ajax( 'deactivate_plugins', 'deactivate_plugins' );\n\t}\n\n\t\/**\n\t * Update user profile.\n\t *\n\t * @param int   $user_id      The user ID.\n\t * @param array $old_user_data Old user data.\n\t * @param array $userdata      User data.\n\t *\/\n\tpublic function profile_update( $user_id, $old_user_data, $userdata ) {\n\t\tif ( ! current_user_can( 'edit_user', $user_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$nonce = Param::post( '_wpnonce', '', FILTER_SANITIZE_SPECIAL_CHARS );\n\t\tif ( ! wp_verify_nonce( $nonce, 'update-user_' . $user_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$twitter                 = Param::post( 'twitter', '', FILTER_SANITIZE_URL );\n\t\t$facebook                = Param::post( 'facebook', '', FILTER_SANITIZE_URL );\n\t\t$additional_profile_urls = Param::post( 'additional_profile_urls', '' );\n\n\t\tif ( $additional_profile_urls ) {\n\t\t\t$additional_profile_urls = array_map( 'sanitize_url', explode( PHP_EOL, $additional_profile_urls ) );\n\t\t\t$additional_profile_urls = implode( ' ', $additional_profile_urls );\n\t\t}\n\n\t\tupdate_user_meta( $user_id, 'twitter', $twitter );\n\t\tupdate_user_meta( $user_id, 'facebook', $facebook );\n\t\tupdate_user_meta( $user_id, 'additional_profile_urls', $additional_profile_urls );\n\t}\n\n\t\/**\n\t * Flush the rewrite rules once if the rank_math_flush_rewrite option is set.\n\t *\/\n\tpublic function flush() {\n\t\tif ( get_option( 'rank_math_flush_rewrite' ) ) {\n\t\t\tflush_rewrite_rules();\n\t\t\tdelete_option( 'rank_math_flush_rewrite' );\n\t\t}\n\n\t\tif ( 'rank-math' === Param::get( 'page' ) && get_option( 'rank_math_view_modules' ) ) {\n\t\t\tdelete_option( 'rank_math_view_modules' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add Facebook and Twitter as user contact methods.\n\t *\n\t * @param array $contactmethods Current contact methods.\n\t * @return array New contact methods with extra items.\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\/\n\tpublic function update_user_contactmethods( $contactmethods ) {\n\t\t$contactmethods['twitter']                 = esc_html__( 'Twitter username (without @)', 'rank-math' );\n\t\t$contactmethods['facebook']                = esc_html__( 'Facebook profile URL', 'rank-math' );\n\t\t$contactmethods['additional_profile_urls'] = esc_html__( 'Additional profile URLs', 'rank-math' );\n\n\t\treturn $contactmethods;\n\t}\n\n\t\/**\n\t * Display admin header.\n\t *\n\t * @param bool $show_breadcrumbs Determines whether to show breadcrumbs or not.\n\t *\/\n\tpublic function display_admin_header( $show_breadcrumbs = true ) {\n\t\t$nav_tabs = new Admin_Header();\n\t\t$nav_tabs->display( $show_breadcrumbs );\n\t}\n\n\t\/**\n\t * Display admin breadcrumbs.\n\t *\/\n\tpublic function display_admin_breadcrumbs() {\n\t\t$nav_tabs = new Admin_Breadcrumbs();\n\t\t$nav_tabs->display();\n\t}\n\n\t\/**\n\t * Display dashboard tabs.\n\t *\/\n\tpublic function display_dashboard_nav() {\n\t\t$nav_tabs = new Admin_Dashboard_Nav();\n\t\t$nav_tabs->display();\n\t}\n\n\t\/**\n\t * Show notice when canonical URL is not a valid URL.\n\t *\n\t * @param int $post_id The post ID.\n\t *\/\n\tpublic function canonical_check_notice( $post_id ) {\n\t\t$post_type  = get_post_type( $post_id );\n\t\t$is_allowed = in_array( $post_type, Helper::get_allowed_post_types(), true );\n\n\t\tif ( ! $is_allowed || Helper::is_autosave() || Helper::is_ajax() || isset( $_REQUEST['bulk_edit'] ) ) { \/\/ phpcs:ignore\n\t\t\treturn $post_id;\n\t\t}\n\n\t\tif ( ! empty( $_POST['rank_math_canonical_url'] ) && false === Param::post( 'rank_math_canonical_url', false, FILTER_VALIDATE_URL ) ) { \/\/ phpcs:ignore\n\t\t\t$message = esc_html__( 'The canonical URL you entered does not seem to be a valid URL. Please double check it in the SEO meta box &raquo; Advanced tab.', 'rank-math' );\n\t\t\tHelper::add_notification( $message, [ 'type' => 'error' ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Save checklist layout.\n\t *\/\n\tpublic function save_checklist_layout() {\n\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'onpage_general' );\n\n\t\tif ( empty( $_POST['layout'] ) || ! is_array( $_POST['layout'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$layout  = Param::post( 'layout', [], FILTER_DEFAULT, FILTER_REQUIRE_ARRAY );\n\t\t$allowed = [\n\t\t\t'basic'               => 1,\n\t\t\t'advanced'            => 1,\n\t\t\t'title-readability'   => 1,\n\t\t\t'content-readability' => 1,\n\t\t];\n\t\t$layout  = array_intersect_key( $layout, $allowed );\n\n\t\tupdate_user_meta( get_current_user_id(), 'rank_math_metabox_checklist_layout', $layout );\n\t\texit;\n\t}\n\n\t\/**\n\t * Ajax handler to search pages based on the searched string. Used in the Local SEO Settings.\n\t *\/\n\tpublic function search_pages() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'general' );\n\n\t\t$term = Param::get( 'term' );\n\t\tif ( empty( $term ) ) {\n\t\t\texit;\n\t\t}\n\n\t\tglobal $wpdb;\n\t\t$pages = DB_Helper::get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT ID, post_title FROM {$wpdb->prefix}posts WHERE post_type = 'page' AND post_status = 'publish' AND post_title LIKE %s\",\n\t\t\t\t\"%{$wpdb->esc_like( $term )}%\"\n\t\t\t),\n\t\t\tARRAY_A\n\t\t);\n\n\t\t$data = [];\n\t\tforeach ( $pages as $page ) {\n\t\t\t$data[] = [\n\t\t\t\t'id'   => $page['ID'],\n\t\t\t\t'text' => $page['post_title'],\n\t\t\t\t'url'  => get_permalink( $page['ID'] ),\n\t\t\t];\n\t\t}\n\n\t\twp_send_json( [ 'results' => $data ] );\n\t}\n\n\t\/**\n\t * Check if the keyword has been used before for another post.\n\t *\/\n\tpublic function is_keyword_new() {\n\t\tglobal $wpdb;\n\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'onpage_general' );\n\n\t\t$result = [ 'isNew' => true ];\n\t\tif ( empty( $_GET['keyword'] ) ) {\n\t\t\t$this->success( $result );\n\t\t}\n\n\t\t$keyword     = Param::get( 'keyword', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK );\n\t\t$object_id   = Param::get( 'objectID', 0, FILTER_VALIDATE_INT );\n\t\t$object_type = Param::get( 'objectType', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\t$column_ids  = [\n\t\t\t'post' => 'ID',\n\t\t\t'term' => 'term_id',\n\t\t\t'user' => 'ID',\n\t\t];\n\t\tif ( ! in_array( $object_type, [ 'post', 'term', 'user' ], true ) ) {\n\t\t\t$object_type = 'post';\n\t\t}\n\n\t\t$main = $wpdb->{$object_type . 's'};\n\t\t$meta = $wpdb->{$object_type . 'meta'};\n\n\t\t$query = sprintf( 'select %2$s.%1$s from %2$s inner join %3$s on %2$s.%1$s = %3$s.%4$s_id where ', $column_ids[ $object_type ], $main, $meta, $object_type );\n\t\tif ( 'post' === $object_type ) {\n\t\t\t$query .= sprintf( '%s.post_status = \\'publish\\' and ', $main );\n\t\t}\n\t\t$query .= sprintf( '%1$s.meta_key = \\'rank_math_focus_keyword\\' and ( %1$s.meta_value = %2$s OR %1$s.meta_value like %3$s ) and %1$s.%4$s_id != %5$d', $meta, '%s', '%s', $object_type, $object_id );\n\n\t\t$data = DB_Helper::get_row( $wpdb->prepare( $query, $keyword, $wpdb->esc_like( $keyword ) . ',%' ) );\n\n\t\t$result['isNew'] = empty( $data );\n\n\t\t$this->success( $result );\n\t}\n\n\t\/**\n\t * Get link suggestions for the current post.\n\t *\n\t * @param  int|WP_Post $post Current post.\n\t * @return array\n\t *\/\n\tpublic function get_link_suggestions( $post ) {\n\t\tglobal $pagenow;\n\n\t\tif ( 'post-new.php' === $pagenow ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$output = [];\n\t\t$post   = get_post( $post );\n\t\t$args   = [\n\t\t\t'post_type'      => $post->post_type,\n\t\t\t'post__not_in'   => [ $post->ID ],\n\t\t\t'posts_per_page' => 5,\n\t\t\t'meta_key'       => 'rank_math_pillar_content',\n\t\t\t'meta_value'     => 'on',\n\t\t\t'tax_query'      => [ 'relation' => 'OR' ],\n\t\t];\n\n\t\t$taxonomies = Helper::get_object_taxonomies( $post, 'names' );\n\t\t$taxonomies = array_filter( $taxonomies, [ $this, 'is_taxonomy_allowed' ] );\n\n\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\t$this->set_term_query( $args, $post->ID, $taxonomy );\n\t\t}\n\n\t\t$posts = get_posts( $args );\n\t\tforeach ( $posts as $related_post ) {\n\t\t\t$item = [\n\t\t\t\t'title'          => get_the_title( $related_post->ID ),\n\t\t\t\t'url'            => get_permalink( $related_post->ID ),\n\t\t\t\t'post_id'        => $related_post->ID,\n\t\t\t\t'focus_keywords' => get_post_meta( $related_post->ID, 'rank_math_focus_keyword', true ),\n\t\t\t];\n\n\t\t\t$item['focus_keywords'] = empty( $item['focus_keywords'] ) ? [] : explode( ',', $item['focus_keywords'] );\n\n\t\t\t$output[] = $item;\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Is taxonomy allowed\n\t *\n\t * @param string $taxonomy Taxonomy to check.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_taxonomy_allowed( $taxonomy ) {\n\t\t$exclude_taxonomies = [ 'post_format', 'product_shipping_class' ];\n\t\tif ( Str::starts_with( 'pa_', $taxonomy ) || in_array( $taxonomy, $exclude_taxonomies, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Remap Action Scheduler translation to use WooCommerce's text domain (no context).\n\t *\n\t * @param string $translated Translated text.\n\t * @param string $text       Original text.\n\t * @param string $domain     Text domain.\n\t * @return string Modified translated text.\n\t *\/\n\tpublic function remap_action_scheduler_translation( $translated, $text, $domain ) {\n\t\t\/\/ phpcs:ignore -- Use WooCommerce text domain for Action Scheduler strings.\n\t\treturn $domain === 'action-scheduler' && Helper::is_woocommerce_active() ? __( $text, 'woocommerce' ) : $translated;\n\t}\n\n\t\/**\n\t * Remap Action Scheduler translation to use WooCommerce's text domain (with context).\n\t *\n\t * @param string $translated Translated text.\n\t * @param string $text       Original text.\n\t * @param string $context    Context information for translators.\n\t * @param string $domain     Text domain.\n\t * @return string Modified translated text.\n\t *\/\n\tpublic function remap_action_scheduler_translation_with_context( $translated, $text, $context, $domain ) {\n\t\t\/\/ phpcs:ignore -- Use WooCommerce text domain for Action Scheduler strings.\n\t\treturn $domain === 'action-scheduler' && Helper::is_woocommerce_active() ? _x( $text, $context, 'woocommerce' ) : $translated;\n\t}\n\n\t\/**\n\t * Set term query.\n\t *\n\t * @param array  $query    Array of query.\n\t * @param int    $post_id  Post ID to get terms from.\n\t * @param string $taxonomy Taxonomy to get terms for.\n\t *\/\n\tprivate function set_term_query( &$query, $post_id, $taxonomy ) {\n\t\t$terms = wp_get_post_terms( $post_id, $taxonomy, [ 'fields' => 'ids' ] );\n\t\tif ( empty( $terms ) || is_wp_error( $terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$query['tax_query'][] = [\n\t\t\t'taxonomy' => $taxonomy,\n\t\t\t'field'    => 'term_id',\n\t\t\t'terms'    => $terms,\n\t\t];\n\t}\n\n\t\/**\n\t * Output link suggestions.\n\t *\n\t * @param  array $suggestions Link items.\n\t * @return string\n\t *\/\n\tpublic function get_link_suggestions_html( $suggestions ) {\n\t\t$output = '<div class=\"rank-math-link-suggestions-content\" data-count=\"' . count( $suggestions ) . '\">';\n\n\t\t$is_use_fk = 'focus_keywords' === Helper::get_settings( 'titles.pt_' . get_post_type() . '_ls_use_fk' );\n\t\tforeach ( $suggestions as $suggestion ) {\n\t\t\t$label = $suggestion['title'];\n\t\t\tif ( $is_use_fk && ! empty( $suggestion['focus_keywords'] ) ) {\n\t\t\t\t$label = $suggestion['focus_keywords'][0];\n\t\t\t}\n\n\t\t\t$output .= sprintf(\n\t\t\t\t'<div class=\"suggestion-item\">\n\t\t\t\t\t<div class=\"suggestion-actions\">\n\t\t\t\t\t\t<button class=\"dashicons dashicons-clipboard suggestion-copy\" title=\"%5$s\" data-clipboard-text=\"%2$s\"><\/button>\n\t\t\t\t\t\t<button class=\"dashicons dashicons-admin-links suggestion-insert\" title=\"%6$s\" data-url=\"%2$s\" data-text=\"%7$s\"><\/button>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<span class=\"suggestion-title\" data-fk=\\'%1$s\\'><a target=\"_blank\" href=\"%2$s\" title=\"%3$s\">%4$s<\/a><\/span>\n\t\t\t\t<\/div>',\n\t\t\t\tesc_attr( wp_json_encode( $suggestion['focus_keywords'] ) ),\n\t\t\t\t$suggestion['url'],\n\t\t\t\t$suggestion['title'],\n\t\t\t\t$label,\n\t\t\t\tesc_attr__( 'Copy Link URL to Clipboard', 'rank-math' ),\n\t\t\t\tesc_attr__( 'Insert Link in Content', 'rank-math' ),\n\t\t\t\tesc_attr( $label )\n\t\t\t);\n\t\t}\n\n\t\t$output .= '<\/div>';\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Updates the is_configured value.\n\t *\n\t * @param int    $object_id The ID of the current object.\n\t * @param string $cmb_id    The current box ID.\n\t *\/\n\tpublic function update_is_configured_value( $object_id, $cmb_id ) {\n\t\tif ( 0 !== strpos( $cmb_id, 'rank_math' ) && 0 !== strpos( $cmb_id, 'rank-math' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::is_configured( true );\n\t}\n\n\t\/**\n\t * Deactivate plugin.\n\t *\/\n\tpublic function deactivate_plugins() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\tif ( ! current_user_can( 'activate_plugins' ) ) {\n\t\t\t$this->error( esc_html__( 'You are not authorized to perform this action.', 'rank-math' ) );\n\t\t}\n\t\t$plugin = Param::post( 'plugin', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\tif ( 'all' !== $plugin ) {\n\t\t\tdeactivate_plugins( $plugin );\n\t\t\tdie( '1' );\n\t\t}\n\n\t\tImporters\\Detector::deactivate_all();\n\t\tdie( '1' );\n\t}\n\n\t\/**\n\t * Action Scheduler: exclude our actions from the past-due checker.\n\t * Since this is a *_pre hook, it replaces the original checker.\n\t *\n\t * We first do the same check as what ActionScheduler_AdminView->check_pastdue_actions() does,\n\t * but then we also count how many of those past-due actions are ours.\n\t *\n\t * @param null $value Null value.\n\t *\/\n\tpublic function as_exclude_pastdue_actions( $value ) {\n\t\t$query_args = [\n\t\t\t'date'     => as_get_datetime_object( time() - DAY_IN_SECONDS ),\n\t\t\t'status'   => \\ActionScheduler_Store::STATUS_PENDING,\n\t\t\t'per_page' => 1,\n\t\t];\n\n\t\t$store               = \\ActionScheduler_Store::instance();\n\t\t$num_pastdue_actions = (int) $store->query_actions( $query_args, 'count' );\n\n\t\tif ( 0 !== $num_pastdue_actions ) {\n\t\t\t$query_args['group']    = 'rank-math';\n\t\t\t$num_pastdue_rm_actions = (int) $store->query_actions( $query_args, 'count' );\n\n\t\t\t$num_pastdue_actions -= $num_pastdue_rm_actions;\n\t\t}\n\n\t\t$threshold_seconds = (int) apply_filters( 'action_scheduler_pastdue_actions_seconds', DAY_IN_SECONDS );\n\t\t$threshhold_min    = (int) apply_filters( 'action_scheduler_pastdue_actions_min', 1 );\n\n\t\t$check = ( $num_pastdue_actions >= $threshhold_min );\n\t\treturn (bool) apply_filters( 'action_scheduler_pastdue_actions_check', $check, $num_pastdue_actions, $threshold_seconds, $threshhold_min );\n\t}\n\n\t\/**\n\t * Check and print the Anniversary icon in the header of Rank Math's setting pages.\n\t *\/\n\tpublic static function offer_icon() {\n\t\tif ( ! current_user_can( 'manage_options' ) || defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Holiday Season related variables.\n\t\t$time                   = time();\n\t\t$current_year           = 2022;\n\t\t$anniversary_start_time = gmmktime( 17, 00, 00, 10, 30, $current_year ); \/\/ 30 Oct.\n\t\t$anniversary_end_time   = gmmktime( 17, 00, 00, 11, 30, $current_year ); \/\/ 30 Nov.\n\t\t$holiday_start_time     = gmmktime( 17, 00, 00, 12, 20, $current_year ); \/\/ 20 Dec.\n\t\t$holiday_end_time       = gmmktime( 17, 00, 00, 01, 07, 2023 ); \/\/ 07 Jan.\n\n\t\tob_start();\n\t\tif (\n\t\t\t( $time > $anniversary_start_time && $time < $anniversary_end_time ) ||\n\t\t\t( $time > $holiday_start_time && $time < $holiday_end_time )\n\t\t) { ?>\n\t\t\t<a href=\"https:\/\/rankmath.com\/pricing\/?utm_source=Plugin&utm_medium=Header+Offer+Icon&utm_campaign=WP\" target=\"_blank\" class=\"rank-math-tooltip bottom\" style=\"margin-left:5px;\">\n\t\t\t\t\ud83c\udf89\n\t\t\t\t<span><?php esc_attr_e( 'Exclusive Offer!', 'rank-math' ); ?><\/span>\n\t\t\t<\/a>\n\t\t\t<?php\n\t\t}\n\n\t\treturn ob_get_clean();\n\t}\n\n\t\/**\n\t * Code to convert Addiontal Profile URLs from input type text to textarea.\n\t *\/\n\tpublic function convert_additional_profile_url_to_textarea() {\n\t\tif ( ! Admin_Helper::is_user_edit() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$field_description = __( 'Additional Profiles to add in the <code>sameAs<\/code> Schema property.', 'rank-math' );\n\t\t?>\n\t\t<script type=\"text\/javascript\">\n\t\t\t( function( $ ) {\n\t\t\t\t$( function() {\n\t\t\t\t\tconst twitterWrapper = $( '.user-twitter-wrap' );\n\t\t\t\t\ttwitterWrapper.before( '<tr><th><h2 style=\"margin: 0;\">Rank Math SEO<\/h2><\/th><td><\/td><\/tr>' );\n\n\t\t\t\t\tconst additionalProfileField = $( '#additional_profile_urls' );\n\t\t\t\t\tif ( ! additionalProfileField.length ) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $txtarea = $( '<textarea \/>' );\n\t\t\t\t\t$txtarea.attr( 'id', additionalProfileField[0].id );\n\t\t\t\t\t$txtarea.attr( 'name', additionalProfileField[0].name );\n\t\t\t\t\t$txtarea.attr( 'rows', 5 );\n\t\t\t\t\t$txtarea.val( additionalProfileField[0].value.replaceAll( \" \", \"\\n\" ) );\n\t\t\t\t\tadditionalProfileField.replaceWith( $txtarea );\n\n\t\t\t\t\t$( '<p class=\"description\"><?php echo wp_kses_post( $field_description ); ?><\/p>' ).insertAfter( $txtarea );\n\t\t\t\t} );\n\t\t\t})(jQuery);\n\t\t<\/script>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Function to replace domain with seo-by-rank-math in translation file.\n\t *\n\t * @param string|false $file   Path to the translation file to load. False if there isn't one.\n\t * @param string       $handle Name of the script to register a translation domain to.\n\t * @param string       $domain The text domain.\n\t *\/\n\tpublic function load_script_translation_file( $file, $handle, $domain ) {\n\t\tif ( 'rank-math' !== $domain ) {\n\t\t\treturn $file;\n\t\t}\n\n\t\t$data                       = explode( '\/', $file );\n\t\t$data[ count( $data ) - 1 ] = preg_replace( '\/rank-math\/', 'seo-by-rank-math', $data[ count( $data ) - 1 ], 1 );\n\t\treturn implode( '\/', $data );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-setup-wizard.php","ext":"php","size":4912,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Setup Wizard - configure the SEO settings in just a few steps.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Traits\\Wizard;\nuse RankMath\\Admin\\Importers\\Detector;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Setup_Wizard class.\n *\/\nclass Setup_Wizard {\n\n\tuse Hooker;\n\tuse Wizard;\n\n\t\/**\n\t * Top level admin page.\n\t *\n\t * @var string\n\t *\/\n\tprotected $slug = 'rank-math-wizard';\n\n\t\/**\n\t * Hook suffix.\n\t *\n\t * @var string\n\t *\/\n\tpublic $hook_suffix = '';\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'admin_menu', 'add_admin_menu' );\n\n\t\t\/\/ If the page is not this page stop here.\n\t\tif ( ! $this->is_current_page() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'admin_init', 'admin_page', 30 );\n\t\t$this->filter( 'user_has_cap', 'filter_user_has_cap' );\n\t}\n\n\t\/**\n\t * Add the admin menu item, under Appearance.\n\t *\/\n\tpublic function add_admin_menu() {\n\t\tif ( Param::get( 'page' ) !== $this->slug ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->hook_suffix = add_submenu_page(\n\t\t\t'',\n\t\t\tesc_html__( 'Setup Wizard', 'rank-math' ),\n\t\t\tesc_html__( 'Setup Wizard', 'rank-math' ),\n\t\t\t'manage_options',\n\t\t\t$this->slug,\n\t\t\t[ $this, 'admin_page' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Output the admin page.\n\t *\/\n\tpublic function admin_page() {\n\n\t\t\/\/ Do not proceed if we're not on the right page.\n\t\tif ( Param::get( 'page' ) !== $this->slug ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ob_get_length() ) {\n\t\t\tob_end_clean();\n\t\t}\n\n\t\t\/\/ Enqueue styles.\n\t\trank_math()->admin_assets->register();\n\t\twp_enqueue_style( 'rank-math-wizard', rank_math()->plugin_url() . 'assets\/admin\/css\/setup-wizard.css', [ 'wp-admin', 'buttons', 'select2-rm', 'rank-math-common', 'rank-math-cmb2', 'wp-components' ], rank_math()->version );\n\n\t\t\/\/ Enqueue scripts for the SEO Score Updater tool.\n\t\t\\RankMath\\Tools\\Update_Score::get()->enqueue();\n\n\t\t\/\/ Enqueue javascript.\n\t\twp_enqueue_media();\n\t\twp_enqueue_script( 'rank-math-wizard', rank_math()->plugin_url() . 'assets\/admin\/js\/wizard.js', [ 'media-editor', 'select2-rm', 'lodash', 'rank-math-common', 'rank-math-components' ], rank_math()->version, true );\n\t\twp_set_script_translations( 'rank-math-wizard', 'rank-math' );\n\n\t\tHelper::add_json( 'logo', esc_url( rank_math()->plugin_url() . 'assets\/admin\/img\/logo.svg' ) );\n\n\t\tob_start();\n\n\t\t\/**\n\t\t * Start the actual page content.\n\t\t *\/\n\t\tinclude_once $this->get_view( 'content' );\n\t\texit;\n\t}\n\n\t\/**\n\t * Get view file to display.\n\t *\n\t * @param string $view View to display.\n\t * @return string\n\t *\/\n\tpublic function get_view( $view ) {\n\t\treturn rank_math()->admin_dir() . \"wizard\/views\/{$view}.php\";\n\t}\n\n\t\/**\n\t * Get Localized data for the given step.\n\t *\n\t * @param string $step Current Setup Wizard step.\n\t *\/\n\tpublic static function get_localized_data( $step ) {\n\t\t$steps = self::get_steps();\n\t\tif ( ! isset( $steps[ $step ] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$data = [\n\t\t\t'isWhitelabel' => Helper::is_whitelabel(),\n\t\t\t'isConfigured' => Helper::is_configured(),\n\t\t\t'setup_mode'   => Helper::get_settings( 'general.setup_mode', 'advanced' ),\n\t\t\t'addImport'    => ! self::maybe_remove_import(),\n\t\t];\n\n\t\treturn apply_filters(\n\t\t\t\"rank_math\/setup_wizard\/$step\/localized_data\",\n\t\t\tarray_merge(\n\t\t\t\t$data,\n\t\t\t\t$steps[ $step ]::get_localized_data()\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Get Localized data for the given step.\n\t *\n\t * @param string $step   Current Setup Wizard step.\n\t * @param array  $values Values to update.\n\t *\/\n\tpublic static function save_data( $step, $values ) {\n\t\t$steps = self::get_steps();\n\t\tif ( ! isset( $steps[ $step ] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tdo_action( \"rank_math\/setup_wizard\/$step\/save_data\", $values );\n\n\t\treturn $steps[ $step ]::save( $values );\n\t}\n\n\t\/**\n\t * Get Setup Wizard step class.\n\t *\/\n\tprivate static function get_steps() {\n\t\treturn [\n\t\t\t'compatibility' => '\\\\RankMath\\\\Wizard\\\\Compatibility',\n\t\t\t'import'        => '\\\\RankMath\\\\Wizard\\\\Import',\n\t\t\t'yoursite'      => '\\\\RankMath\\\\Wizard\\\\Your_Site',\n\t\t\t'analytics'     => '\\\\RankMath\\\\Wizard\\\\Search_Console',\n\t\t\t'sitemaps'      => '\\\\RankMath\\\\Wizard\\\\Sitemap',\n\t\t\t'optimization'  => '\\\\RankMath\\\\Wizard\\\\Optimization',\n\t\t\t'ready'         => '\\\\RankMath\\\\Wizard\\\\Ready',\n\t\t\t'role'          => '\\\\RankMath\\\\Wizard\\\\Role',\n\t\t\t'redirection'   => '\\\\RankMath\\\\Wizard\\\\Monitor_Redirection',\n\t\t\t'schema-markup' => '\\\\RankMath\\\\Wizard\\\\Schema_Markup',\n\t\t];\n\t}\n\n\t\/**\n\t * Maybe remove import step.\n\t *\n\t * @return bool\n\t *\/\n\tprivate static function maybe_remove_import() {\n\t\t$pre = apply_filters( 'rank_math\/wizard\/pre_remove_import_step', null );\n\t\tif ( ! is_null( $pre ) ) {\n\t\t\treturn $pre;\n\t\t}\n\n\t\tif ( false === get_option( 'rank_math_is_configured' ) ) {\n\t\t\t$detector = new Detector();\n\t\t\t$plugins  = $detector->detect();\n\t\t\tif ( ! empty( $plugins ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-assets.php","ext":"php","size":10740,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Register all the necessary CSS and JS.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Google\\Console;\nuse RankMath\\Google\\Analytics;\nuse RankMath\\Analytics\\Url_Inspection;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Assets class.\n *\n * @codeCoverageIgnore\n *\/\nclass Assets implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t *  Prefix for the enqueue handles.\n\t *\/\n\tconst PREFIX = 'rank-math-';\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'admin_enqueue_scripts', 'register' );\n\t\t$this->action( 'admin_enqueue_scripts', 'enqueue' );\n\t\t$this->action( 'admin_enqueue_scripts', 'overwrite_wplink', 99 );\n\n\t\tif ( 'elementor' === \\RankMath\\Helpers\\Param::get( 'action' ) ) {\n\t\t\t$this->action( 'elementor\/editor\/before_enqueue_scripts', 'register' );\n\t\t\t$this->action( 'elementor\/editor\/before_enqueue_scripts', 'enqueue' );\n\t\t\t$this->action( 'elementor\/editor\/before_enqueue_scripts', 'overwrite_wplink', 99 );\n\t\t}\n\t}\n\n\t\/**\n\t * Register styles and scripts.\n\t *\/\n\tpublic function register() {\n\t\t$js     = rank_math()->plugin_url() . 'assets\/admin\/js\/';\n\t\t$css    = rank_math()->plugin_url() . 'assets\/admin\/css\/';\n\t\t$vendor = rank_math()->plugin_url() . 'assets\/vendor\/';\n\n\t\t\/\/ Styles.\n\t\twp_register_style( self::PREFIX . 'common', $css . 'common.css', null, rank_math()->version );\n\t\twp_register_style( self::PREFIX . 'cmb2', $css . 'cmb2.css', null, rank_math()->version );\n\t\twp_register_style( self::PREFIX . 'dashboard', $css . 'dashboard.css', [ 'rank-math-common', 'wp-components' ], rank_math()->version );\n\t\twp_register_style( self::PREFIX . 'dashboard-widget', $css . 'dashboard-widget.css', null, rank_math()->version );\n\n\t\t\/\/ Scripts.\n\t\twp_register_script( self::PREFIX . 'common', $js . 'common.js', [ 'jquery', 'wp-i18n', 'lodash' ], rank_math()->version, true );\n\t\twp_register_script( self::PREFIX . 'dashboard', $js . 'dashboard.js', [ 'jquery', 'clipboard', 'lodash', 'wp-components', 'wp-element', 'rank-math-components' ], rank_math()->version, true );\n\t\twp_register_script( self::PREFIX . 'components', $js . 'components.js', [ 'lodash', 'wp-components', 'wp-element', 'wp-api-fetch' ], rank_math()->version, true );\n\n\t\t\/\/ Select2.\n\t\twp_register_style( 'select2-rm', $vendor . 'select2\/select2.min.css', null, '4.0.6-rc.1' );\n\t\twp_register_script( 'select2-rm', $vendor . 'select2\/select2.min.js', null, '4.0.6-rc.1', true );\n\n\t\t\/\/ Inline script for core admin page Settings > Permalinks.\n\t\twp_register_script( self::PREFIX . 'core-permalink-settings', '' ); \/\/ phpcs:ignore\n\t\twp_add_inline_script( self::PREFIX . 'core-permalink-settings', $this->get_permalinks_inline_script() );\n\n\t\tif ( ! wp_script_is( 'wp-hooks', 'registered' ) ) {\n\t\t\twp_register_script( 'wp-hooks', rank_math()->plugin_url() . 'assets\/vendor\/hooks.js', [], rank_math()->version, true );\n\t\t}\n\n\t\tif ( ! wp_script_is( 'wp-wordcount', 'registered' ) ) {\n\t\t\twp_register_script( 'wp-wordcount', rank_math()->plugin_url() . 'assets\/vendor\/wordcount.js', [], rank_math()->version, true );\n\t\t}\n\n\t\tif ( ! wp_script_is( 'wp-autop', 'registered' ) ) {\n\t\t\twp_register_script( 'wp-autop', rank_math()->plugin_url() . 'assets\/vendor\/autop.js', [], rank_math()->version, true );\n\t\t}\n\n\t\tif ( ! wp_script_is( 'wp-url', 'registered' ) ) {\n\t\t\twp_register_script( 'wp-url', rank_math()->plugin_url() . 'assets\/vendor\/url.js', [], rank_math()->version, true );\n\t\t}\n\n\t\tif ( ! wp_script_is( 'wp-i18n', 'registered' ) ) {\n\t\t\twp_register_script( 'wp-i18n', rank_math()->plugin_url() . 'assets\/vendor\/i18n.js', [], rank_math()->version, true );\n\t\t}\n\n\t\tif ( ! wp_script_is( 'clipboard', 'registered' ) ) {\n\t\t\twp_register_script( 'clipboard', rank_math()->plugin_url() . 'assets\/vendor\/clipboard.min.js', [], rank_math()->version, true );\n\t\t}\n\n\t\tif ( ! wp_script_is( 'lodash', 'registered' ) ) {\n\t\t\twp_register_script( 'lodash', rank_math()->plugin_url() . 'assets\/vendor\/lodash.js', [], rank_math()->version, [] );\n\t\t\twp_add_inline_script( 'lodash', 'window.lodash = _.noConflict();' );\n\t\t}\n\n\t\tHelper::add_json(\n\t\t\t'api',\n\t\t\t[\n\t\t\t\t'root'  => esc_url_raw( get_rest_url() ),\n\t\t\t\t'nonce' => ( wp_installing() && ! is_multisite() ) ? '' : wp_create_nonce( 'wp_rest' ),\n\t\t\t]\n\t\t);\n\n\t\tHelper::add_json(\n\t\t\t'keywordsApi',\n\t\t\t[\n\t\t\t\t'url' => 'https:\/\/api.rankmath.com\/ltkw\/v1\/',\n\t\t\t]\n\t\t);\n\n\t\tHelper::add_json(\n\t\t\t'links',\n\t\t\tKB::get_links()\n\t\t);\n\n\t\tHelper::add_json(\n\t\t\t'validationl10n',\n\t\t\t[\n\t\t\t\t'regexErrorDefault'    => __( 'Please use the correct format.', 'rank-math' ),\n\t\t\t\t'requiredErrorDefault' => __( 'This field is required.', 'rank-math' ),\n\t\t\t\t'emailErrorDefault'    => __( 'Please enter a valid email address.', 'rank-math' ),\n\t\t\t\t'urlErrorDefault'      => __( 'Please enter a valid URL.', 'rank-math' ),\n\t\t\t]\n\t\t);\n\n\t\tHelper::add_json( 'capitalizeTitle', Helper::get_settings( 'titles.capitalize_titles' ) );\n\n\t\tHelper::add_json( 'isConsoleConnected', Console::is_console_connected() );\n\t\tHelper::add_json( 'isAnalyticsConnected', Analytics::is_analytics_connected() );\n\t\tHelper::add_json( 'isUrlInspectionEnabled', Url_Inspection::is_enabled() );\n\n\t\t\/**\n\t\t * Allow other plugins to register\/deregister admin styles or scripts after plugin assets.\n\t\t *\/\n\t\t$this->do_action( 'admin\/register_scripts' );\n\t}\n\n\t\/**\n\t * Enqueue styles and scripts.\n\t *\/\n\tpublic function enqueue() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( 'dashboard' === $screen->id ) {\n\t\t\twp_enqueue_style( self::PREFIX . 'dashboard-widget' );\n\t\t\twp_enqueue_script( self::PREFIX . 'dashboard' );\n\t\t}\n\n\t\tif ( in_array( $screen->id, [ 'toplevel_page_rank-math', 'rank-math_page_rank-math-content-ai-page', 'rank-math_page_rank-math-analytics', 'rank-math_page_rank-math-role-manager', 'rank-math_page_rank-math-seo-analysis', 'rank-math_page_rank-math-status' ], true ) ||\n\t\t\tStr::starts_with( 'rank-math_page_rank-math-options-', $screen->id )\n\t\t) {\n\t\t\tHelper::add_json(\n\t\t\t\t'dashboardHeader',\n\t\t\t\t[\n\t\t\t\t\t'dashboardUrl' => esc_url( Helper::get_admin_url() ),\n\t\t\t\t\t'proBadge'     => $this->do_filter( 'pro_badge', '' ),\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t\/\/ Our screens only.\n\t\tif ( ! in_array( $screen->taxonomy, Helper::get_allowed_taxonomies(), true ) && ! in_array( $screen->id, $this->get_admin_screen_ids(), true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Add thank you.\n\t\t$this->filter( 'admin_footer_text', 'admin_footer_text' );\n\n\t\t\/**\n\t\t * Allow other plugins to enqueue\/dequeue admin styles or scripts after plugin assets.\n\t\t *\/\n\t\t$this->do_action( 'admin\/enqueue_scripts' );\n\t}\n\n\t\/**\n\t * Add footer credit on admin pages.\n\t *\n\t * @param string $text Default text for admin footer.\n\t * @return string\n\t *\/\n\tpublic function admin_footer_text( $text ) {\n\t\t\/* translators: plugin url *\/\n\t\treturn Helper::is_whitelabel() ? $text : sprintf( wp_kses_post( __( 'Thank you for using <a href=\"%s\" target=\"_blank\">Rank Math<\/a>', 'rank-math' ) ), KB::get( 'seo-suite', 'Admin Footer Text' ) );\n\t}\n\n\t\/**\n\t * Overwrite wplink script file.\n\t * Rank Math adds new options in the link popup when editing a post.\n\t *\/\n\tpublic function overwrite_wplink() {\n\n\t\twp_deregister_script( 'wplink' );\n\t\twp_register_script( 'wplink', rank_math()->plugin_url() . 'assets\/admin\/js\/wplink.js', [ 'jquery', 'wp-a11y' ], rank_math()->version, true );\n\n\t\twp_localize_script(\n\t\t\t'wplink',\n\t\t\t'wpLinkL10n',\n\t\t\t[\n\t\t\t\t'title'             => esc_html__( 'Insert\/edit link', 'rank-math' ),\n\t\t\t\t'update'            => esc_html__( 'Update', 'rank-math' ),\n\t\t\t\t'save'              => esc_html__( 'Add Link', 'rank-math' ),\n\t\t\t\t'noTitle'           => esc_html__( '(no title)', 'rank-math' ),\n\t\t\t\t'noMatchesFound'    => esc_html__( 'No matches found.', 'rank-math' ),\n\t\t\t\t'linkSelected'      => esc_html__( 'Link selected.', 'rank-math' ),\n\t\t\t\t'linkInserted'      => esc_html__( 'Link inserted.', 'rank-math' ),\n\t\t\t\t'relCheckbox'       => __( 'Add <code>rel=\"nofollow\"<\/code>', 'rank-math' ),\n\t\t\t\t'sponsoredCheckbox' => __( 'Add <code>rel=\"sponsored\"<\/code>', 'rank-math' ),\n\t\t\t\t'linkTitle'         => esc_html__( 'Link Title', 'rank-math' ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Enqueues styles.\n\t *\n\t * @param string $style Name of the style.\n\t *\/\n\tpublic function enqueue_style( $style ) {\n\t\twp_enqueue_style( self::PREFIX . $style );\n\t}\n\n\t\/**\n\t * Enqueues scripts.\n\t *\n\t * @param string $script Name of the script.\n\t *\/\n\tpublic function enqueue_script( $script ) {\n\t\twp_enqueue_script( self::PREFIX . $script );\n\t}\n\n\t\/**\n\t * Get admin screen ids.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_admin_screen_ids() {\n\t\t$pages = [\n\t\t\t'toplevel_page_rank-math',\n\t\t\t'rank-math_page_rank-math-role-manager',\n\t\t\t'rank-math_page_rank-math-seo-analysis',\n\t\t\t'rank-math_page_rank-math-404-monitor',\n\t\t\t'rank-math_page_rank-math-redirections',\n\t\t\t'rank-math_page_rank-math-link-builder',\n\t\t\t'rank-math_page_rank-math-analytics',\n\t\t\t'rank-math_page_rank-math-import-export',\n\t\t\t'rank-math_page_rank-math-help',\n\t\t\t'user-edit',\n\t\t\t'profile',\n\t\t\t'rank_math_schema',\n\t\t];\n\n\t\treturn array_merge( $pages, Helper::get_allowed_post_types() );\n\t}\n\n\t\/**\n\t * Inline script to warn the user about the risks of changing the permalinks on a live site.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_permalinks_inline_script() {\n\t\t\/\/ Don't add the script if site is set to noindex.\n\t\tif ( ! get_option( 'blog_public' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn \"jQuery( window ).load( function() {\n\t\t\tvar noticeShown = false;\n\t\t\tvar showNotice = function() {\n\t\t\t\tif ( noticeShown ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tjQuery( '.rank-math-notice-permalinks-warning' ).removeClass( 'hidden' ).insertBefore( 'p.submit' );\n\t\t\t\tnoticeShown = true;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tjQuery( '.available-structure-tags button' ).on( 'click', showNotice );\n\t\t\tjQuery( 'input[type=text], input[type=radio]' ).on( 'focus change', showNotice );\n\t\t} );\";\n\t}\n\n\t\/**\n\t * Check if there is an Anniversary offer.\n\t *\/\n\tprivate function has_offer() {\n\t\tif ( ! current_user_can( 'manage_options' ) || defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Holiday Season related variables.\n\t\t$time                   = time();\n\t\t$current_year           = 2022;\n\t\t$anniversary_start_time = gmmktime( 17, 00, 00, 05, 05, $current_year ); \/\/ 30 Oct.\n\t\t$anniversary_end_time   = gmmktime( 17, 00, 00, 11, 30, $current_year ); \/\/ 30 Nov.\n\t\t$holiday_start_time     = gmmktime( 17, 00, 00, 12, 20, $current_year ); \/\/ 20 Dec.\n\t\t$holiday_end_time       = gmmktime( 17, 00, 00, 01, 07, 2023 ); \/\/ 07 Jan.\n\n\t\treturn ( $time > $anniversary_start_time && $time < $anniversary_end_time ) ||\n\t\t\t( $time > $holiday_start_time && $time < $holiday_end_time );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-post-filters.php","ext":"php","size":8988,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin post filters functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse WP_Meta_Query;\nuse RankMath\\Helper;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post_Filters class.\n *\/\nclass Post_Filters implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'admin_init', 'init' );\n\t}\n\n\t\/**\n\t * Intialize.\n\t *\/\n\tpublic function init() {\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->filter( 'pre_get_posts', 'posts_by_seo_filters' );\n\t\t$this->filter( 'parse_query', 'posts_by_focus_keywords' );\n\t\t$this->filter( 'restrict_manage_posts', 'add_seo_filters', 11 );\n\n\t\tforeach ( Helper::get_allowed_post_types() as $post_type ) {\n\t\t\t$this->filter( \"views_edit-$post_type\", 'add_pillar_content_filter_link' );\n\t\t}\n\t}\n\n\t\/**\n\t * Filter posts in admin by Rank Math's Filter value.\n\t *\n\t * @param \\WP_Query $query The wp_query instance.\n\t *\/\n\tpublic function posts_by_seo_filters( $query ) {\n\t\tif ( ! $this->can_seo_filters() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'rank_math_seo_score' === $query->get( 'orderby' ) ) {\n\t\t\t$query->set( 'orderby', 'meta_value' );\n\t\t\t$query->set( 'meta_key', 'rank_math_seo_score' );\n\t\t\t$query->set( 'meta_type', 'numeric' );\n\t\t}\n\n\t\tif ( empty( $_GET['pillar_content'] ) && empty( $_GET['seo-filter'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$meta_query = [];\n\n\t\t\/\/ Check for Pillar Content filter.\n\t\tif ( ! empty( $_GET['pillar_content'] ) ) {\n\t\t\t$meta_query[] = [\n\t\t\t\t'key'   => 'rank_math_pillar_content',\n\t\t\t\t'value' => 'on',\n\t\t\t];\n\t\t}\n\n\t\t$this->set_seo_filters( $meta_query );\n\t\t$query->set( 'meta_query', $meta_query );\n\t}\n\n\t\/**\n\t * Filter post in admin by Pillar Content.\n\t *\n\t * @param \\WP_Query $query The wp_query instance.\n\t *\/\n\tpublic function posts_by_focus_keywords( $query ) {\n\t\tif ( ! $this->can_fk_filter() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $ids = $this->posts_had_reviews() ) { \/\/ phpcs:ignore\n\t\t\t$query->set( 'post_type', 'any' );\n\t\t\t$query->set( 'post__in', $ids );\n\t\t\treturn;\n\t\t}\n\n\t\t$query->set( 'post_status', 'publish' );\n\t\tif ( $ids = $this->has_fk_in_title() ) { \/\/ phpcs:ignore\n\t\t\t$query->set( 'post__in', $ids );\n\t\t\treturn;\n\t\t}\n\n\t\t$focus_keyword = Param::get( 'focus_keyword', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK );\n\t\tif ( 1 === absint( $focus_keyword ) ) {\n\t\t\t$query->set(\n\t\t\t\t'meta_query',\n\t\t\t\t[\n\t\t\t\t\t'relation' => 'AND',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t]\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t$query->set( 'post_type', 'any' );\n\t\t$query->set(\n\t\t\t'meta_query',\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t\t\t'value'   => $focus_keyword . ',',\n\t\t\t\t\t\t'compare' => 'LIKE',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t\t\t'value'   => $focus_keyword,\n\t\t\t\t\t\t'compare' => 'LIKE',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add SEO filters.\n\t *\/\n\tpublic function add_seo_filters() {\n\t\tglobal $post_type;\n\n\t\tif ( 'attachment' === $post_type || ! in_array( $post_type, Helper::get_allowed_post_types(), true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$options = [\n\t\t\t''          => esc_html__( 'Rank Math', 'rank-math' ),\n\t\t\t'great-seo' => esc_html__( 'SEO Score: Good', 'rank-math' ),\n\t\t\t'good-seo'  => esc_html__( 'SEO Score: Ok', 'rank-math' ),\n\t\t\t'bad-seo'   => esc_html__( 'SEO Score: Bad', 'rank-math' ),\n\t\t\t'empty-fk'  => esc_html__( 'Focus Keyword Not Set', 'rank-math' ),\n\t\t\t'noindexed' => esc_html__( 'Articles noindexed', 'rank-math' ),\n\t\t];\n\n\t\t$options = $this->do_filter( 'manage_posts\/seo_filter_options', $options, $post_type );\n\t\tif ( empty( $options ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$selected = Param::get( 'seo-filter' );\n\t\t?>\n\t\t<select name=\"seo-filter\" id=\"rank-math-seo-filter\">\n\t\t\t<?php foreach ( $options as $val => $option ) : ?>\n\t\t\t\t<option value=\"<?php echo esc_attr( $val ); ?>\" <?php selected( $selected, $val, true ); ?>><?php echo esc_html( $option ); ?><\/option>\n\t\t\t<?php endforeach; ?>\n\t\t<\/select>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add view to filter list for Pillar Content.\n\t *\n\t * @param array $views An array of available list table views.\n\t *\/\n\tpublic function add_pillar_content_filter_link( $views ) {\n\t\tglobal $typenow;\n\n\t\t$current = empty( $_GET['pillar_content'] ) ? '' : ' class=\"current\" aria-current=\"page\"';\n\t\t$pillars = get_posts(\n\t\t\t[\n\t\t\t\t'post_type'      => $typenow,\n\t\t\t\t'fields'         => 'ids',\n\t\t\t\t'posts_per_page' => -1,\n\t\t\t\t'meta_key'       => 'rank_math_pillar_content',\n\t\t\t\t'meta_value'     => 'on',\n\t\t\t]\n\t\t);\n\n\t\t$views['pillar_content'] = sprintf(\n\t\t\t'<a href=\"%1$s\"%2$s>%3$s <span class=\"count\">(%4$s)<\/span><\/a>',\n\t\t\tSecurity::add_query_arg(\n\t\t\t\t[\n\t\t\t\t\t'post_type'      => $typenow,\n\t\t\t\t\t'pillar_content' => 1,\n\t\t\t\t]\n\t\t\t),\n\t\t\t$current,\n\t\t\tesc_html__( 'Pillar Content', 'rank-math' ),\n\t\t\tnumber_format_i18n( count( $pillars ) )\n\t\t);\n\n\t\treturn $views;\n\t}\n\n\t\/**\n\t * Can apply SEO filters.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_seo_filters() {\n\t\t$screen = get_current_screen();\n\t\tif ( is_null( $screen ) || ! in_array( $screen->post_type, Helper::get_allowed_post_types(), true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Set SEO filters meta query.\n\t *\n\t * @param array $query Meta query.\n\t *\/\n\tprivate function set_seo_filters( &$query ) {\n\t\t$filter = Param::get( 'seo-filter' );\n\t\tif ( false === $filter ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hash = [\n\t\t\t'empty-fk'  => [\n\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t],\n\t\t\t'bad-seo'   => [\n\t\t\t\t'key'     => 'rank_math_seo_score',\n\t\t\t\t'value'   => 50,\n\t\t\t\t'compare' => '<=',\n\t\t\t\t'type'    => 'numeric',\n\t\t\t],\n\t\t\t'good-seo'  => [\n\t\t\t\t'key'     => 'rank_math_seo_score',\n\t\t\t\t'value'   => [ 51, 80 ],\n\t\t\t\t'compare' => 'BETWEEN',\n\t\t\t\t'type'    => 'numeric',\n\t\t\t],\n\t\t\t'great-seo' => [\n\t\t\t\t'key'     => 'rank_math_seo_score',\n\t\t\t\t'value'   => 80,\n\t\t\t\t'compare' => '>',\n\t\t\t\t'type'    => 'numeric',\n\t\t\t],\n\t\t\t'noindexed' => [\n\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t'value'   => 'noindex',\n\t\t\t\t'compare' => 'LIKE',\n\t\t\t],\n\t\t];\n\n\t\t\/\/ Extra conditions for \"SEO Score\" filters.\n\t\t$seo_score_filters = [ 'bad-seo', 'good-seo', 'great-seo' ];\n\t\tif ( in_array( $filter, $seo_score_filters, true ) ) {\n\t\t\t$query['relation'] = 'AND';\n\t\t\t$query[]           = [\n\t\t\t\t'relation' => 'OR',\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t],\n\t\t\t];\n\t\t\t$query[]           = [\n\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t'compare' => 'EXISTS',\n\t\t\t];\n\t\t\t$query[]           = [\n\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t'value'   => '',\n\t\t\t\t'compare' => '!=',\n\t\t\t];\n\t\t}\n\n\t\tif ( isset( $hash[ $filter ] ) ) {\n\t\t\t$query[] = $hash[ $filter ];\n\t\t}\n\t}\n\n\t\/**\n\t * Can apply Focus Keyword filter.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_fk_filter() {\n\t\t$screen = get_current_screen();\n\t\tif (\n\t\t\tis_null( $screen ) ||\n\t\t\t'edit' !== $screen->base ||\n\t\t\t(\n\t\t\t\t! isset( $_GET['focus_keyword'] ) &&\n\t\t\t\t! isset( $_GET['fk_in_title'] ) &&\n\t\t\t\t! isset( $_GET['review_posts'] )\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Check if Focus Keyword appears in the title.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function has_fk_in_title() {\n\t\tglobal $wpdb;\n\n\t\tif ( ! Param::get( 'fk_in_title' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$screen     = get_current_screen();\n\t\t$meta_query = new WP_Meta_Query(\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t\t'compare' => 'EXISTS',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t$meta_query = $meta_query->get_sql( 'post', $wpdb->posts, 'ID' );\n\t\treturn DB_Helper::get_col( \"SELECT {$wpdb->posts}.ID FROM $wpdb->posts {$meta_query['join']} WHERE 1=1 {$meta_query['where']} AND {$wpdb->posts}.post_type = '$screen->post_type' AND ({$wpdb->posts}.post_status = 'publish') AND REPLACE({$wpdb->posts}.post_title, '&amp;', '&') NOT LIKE CONCAT( '%', SUBSTRING_INDEX( {$wpdb->postmeta}.meta_value, ',', 1 ), '%' )\" );\n\t}\n\n\t\/**\n\t * Check if any posts had Review schema.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function posts_had_reviews() {\n\t\tglobal $wpdb;\n\n\t\t$review_posts = Param::get( 'review_posts' );\n\t\tif ( ! $review_posts ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ! get_option( 'rank_math_review_posts_converted', false );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-optimization.php","ext":"php","size":1710,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Optimization wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Optimization implements Wizard_Step {\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\treturn [\n\t\t\t'noindex_empty_taxonomies'  => Helper::get_settings( 'titles.noindex_empty_taxonomies' ),\n\t\t\t'nofollow_external_links'   => Helper::get_settings( 'general.nofollow_external_links' ),\n\t\t\t'new_window_external_links' => Helper::get_settings( 'general.new_window_external_links' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\t$settings = rank_math()->settings->all_raw();\n\n\t\t$settings['titles']['noindex_empty_taxonomies'] = $values['noindex_empty_taxonomies'] ? 'on' : 'off';\n\n\t\tif ( isset( $values['attachment_redirect_urls'] ) && 'on' === $values['attachment_redirect_urls'] ) {\n\t\t\t$settings['general']['attachment_redirect_urls']    = 'on';\n\t\t\t$settings['general']['attachment_redirect_default'] = sanitize_url( $values['attachment_redirect_default'] );\n\t\t}\n\n\t\t$settings['general']['nofollow_external_links']   = ! empty( $values['nofollow_external_links'] ) ? 'on' : 'off';\n\t\t$settings['general']['new_window_external_links'] = $values['new_window_external_links'] ? 'on' : 'off';\n\n\t\tHelper::update_all_settings( $settings['general'], $settings['titles'], null );\n\t\tHelper::schedule_flush_rewrite();\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-monitor-redirection.php","ext":"php","size":956,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Monitor Redirection wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Monitor_Redirection implements Wizard_Step {\n\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\treturn [\n\t\t\t'404-monitor'  => Helper::is_module_active( '404-monitor' ),\n\t\t\t'redirections' => Helper::is_module_active( 'redirections' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\tHelper::update_modules(\n\t\t\t[\n\t\t\t\t'404-monitor'  => $values['404-monitor'] ? 'on' : 'off',\n\t\t\t\t'redirections' => $values['redirections'] ? 'on' : 'off',\n\t\t\t]\n\t\t);\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-schema-markup.php","ext":"php","size":3067,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Schema_Markup wizard step\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Schema_Markup implements Wizard_Step {\n\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\treturn array_merge(\n\t\t\tself::get_default_values(),\n\t\t\t[\n\t\t\t\t'rich_snippet'        => Helper::is_module_active( 'rich-snippet' ),\n\t\t\t\t'accessiblePostTypes' => Helper::get_accessible_post_types(),\n\t\t\t\t'knowledgegraph_type' => Helper::get_settings( 'titles.knowledgegraph_type' ),\n\t\t\t\t'schemaTypes'         => Helper::choices_rich_snippet_types( esc_html__( 'None (Click here to set one)', 'rank-math' ) ),\n\t\t\t\t'reviewPosts'         => Helper::get_review_posts(),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\t$settings = rank_math()->settings->all_raw();\n\t\tHelper::update_modules( [ 'rich-snippet' => $values['rich_snippet'] ? 'on' : 'off' ] );\n\n\t\t\/\/ Schema.\n\t\tif ( $values['rich_snippet'] ) {\n\t\t\tself::save_rich_snippet( $settings, $values );\n\t\t}\n\t\tHelper::update_all_settings( $settings['general'], $settings['titles'], null );\n\n\t\treturn Helper::get_admin_url();\n\t}\n\n\t\/**\n\t * Save rich snippet values for post type.\n\t *\n\t * @param array $settings Array of setting.\n\t * @param array $values   Values to save.\n\t *\/\n\tprivate static function save_rich_snippet( &$settings, $values ) {\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\tif ( 'attachment' === $post_type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$id           = 'pt_' . $post_type . '_default_rich_snippet';\n\t\t\t$article_type = 'pt_' . $post_type . '_default_article_type';\n\n\t\t\t$settings['titles'][ $id ]           = sanitize_text_field( $values[ $id ] );\n\t\t\t$settings['titles'][ $article_type ] = sanitize_text_field( $values[ $article_type ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Get Default values for the schemas used for Post types.\n\t *\/\n\tprivate static function get_default_values() {\n\t\t$richsnp_default = [\n\t\t\t'post'    => 'article',\n\t\t\t'product' => 'product',\n\t\t];\n\n\t\t$data = [];\n\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\tif ( 'attachment' === $post_type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$field_id = 'pt_' . $post_type . '_default_rich_snippet';\n\t\t\t$default  = $post_type === 'product' ? 'product' : 'off';\n\t\t\t$value    = Helper::get_settings( 'titles.pt_' . $post_type . '_default_rich_snippet', ( isset( $richsnp_default[ $post_type ] ) ? $richsnp_default[ $post_type ] : $default ) );\n\n\t\t\t$data[ $field_id ] = $value ? $value : 'off';\n\n\t\t\tif ( $post_type === 'product' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data[ 'pt_' . $post_type . '_default_article_type' ] = Helper::get_settings( 'titles.pt_' . $post_type . '_default_article_type', 'post' === $post_type ? 'BlogPosting' : 'Article' );\n\t\t}\n\n\t\treturn $data;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-role.php","ext":"php","size":1126,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Role wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\nuse RankMath\\Role_Manager\\Capability_Manager;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Role implements Wizard_Step {\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\tHelper::is_configured( true );\n\n\t\treturn array_merge(\n\t\t\tHelper::get_roles_capabilities(),\n\t\t\t[\n\t\t\t\t'role_manager' => Helper::is_module_active( 'role-manager' ),\n\t\t\t\t'roles'        => Helper::get_roles(),\n\t\t\t\t'capabilities' => Capability_Manager::get()->get_capabilities(),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\tif ( empty( $values ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tHelper::update_modules( [ 'role-manager' => $values['role_manager'] ? 'on' : 'off' ] );\n\t\tHelper::set_capabilities( $values );\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-compatibility.php","ext":"php","size":8420,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Compatibility wizard step.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Compatibility implements Wizard_Step {\n\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\t$php_version = phpversion();\n\t\treturn [\n\t\t\t'conflictingPlugins'    => self::get_conflicting_plugins(),\n\t\t\t'phpVersion'            => phpversion(),\n\t\t\t'phpVersionOk'          => version_compare( $php_version, rank_math()->php_version, '>' ),\n\t\t\t'phpVersionRecommended' => version_compare( $php_version, '7.4', '<' ),\n\t\t\t'extensions'            => [\n\t\t\t\t'dom'        => extension_loaded( 'dom' ),\n\t\t\t\t'simpleXml'  => extension_loaded( 'SimpleXML' ),\n\t\t\t\t'image'      => extension_loaded( 'gd' ) || extension_loaded( 'imagick' ),\n\t\t\t\t'mbString'   => extension_loaded( 'mbstring' ),\n\t\t\t\t'openSsl'    => extension_loaded( 'openssl' ),\n\t\t\t\t'base64Func' => function_exists( 'base64_encode' ) && function_exists( 'base64_decode' ) && (bool) base64_decode( base64_encode( '1' ) ),  \/\/ phpcs:ignore -- Verified as safe usage.\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\t$settings = wp_parse_args(\n\t\t\trank_math()->settings->all_raw(),\n\t\t\t[ 'general' => '' ]\n\t\t);\n\n\t\t$settings['general']['setup_mode'] = ! empty( $values['setup_mode'] ) ? sanitize_text_field( $values['setup_mode'] ) : 'easy';\n\n\t\tif ( 'custom' === $settings['general']['setup_mode'] ) {\n\t\t\t\/\/ Don't change, use custom imported value.\n\t\t\treturn true;\n\t\t}\n\n\t\tHelper::update_all_settings( $settings['general'], null, null );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get conflicting plugins.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_conflicting_plugins() {\n\t\t$plugins_found       = [];\n\t\t$active_plugins      = get_option( 'active_plugins' );\n\t\t$conflicting_plugins = self::get_conflicting_plugins_list();\n\t\tforeach ( $conflicting_plugins as $plugin_slug => $plugin_name ) {\n\t\t\tif ( in_array( $plugin_slug, $active_plugins, true ) !== false ) {\n\t\t\t\t$plugins_found[ $plugin_slug ] = $plugin_name;\n\t\t\t}\n\t\t}\n\n\t\treturn $plugins_found;\n\t}\n\n\t\/**\n\t * Return list of conflicting plugins.\n\t *\n\t * @return array List of plugins in path => name format.\n\t *\/\n\tprivate static function get_conflicting_plugins_list() {\n\n\t\t$plugins = [\n\t\t\t'2-click-socialmedia-buttons\/2-click-socialmedia-buttons.php' => '2 Click Social Media Buttons.',\n\t\t\t'add-link-to-facebook\/add-link-to-facebook.php' => 'Add Link to Facebook.',\n\t\t\t'extended-wp-reset\/extended-wp-reset.php'      => 'Extended WP Reset.',\n\t\t\t'add-meta-tags\/add-meta-tags.php'              => 'Add Meta Tags.',\n\t\t\t'all-in-one-seo-pack\/all_in_one_seo_pack.php'  => 'All In One SEO Pack',\n\t\t\t'easy-facebook-share-thumbnails\/esft.php'      => 'Easy Facebook Share Thumbnail.',\n\t\t\t'facebook\/facebook.php'                        => 'Facebook (official plugin).',\n\t\t\t'facebook-awd\/AWD_facebook.php'                => 'Facebook AWD All in one.',\n\t\t\t'facebook-featured-image-and-open-graph-meta-tags\/fb-featured-image.php' => 'Facebook Featured Image & OG Meta Tags.',\n\t\t\t'facebook-meta-tags\/facebook-metatags.php'     => 'Facebook Meta Tags.',\n\t\t\t'wonderm00ns-simple-facebook-open-graph-tags\/wonderm00n-open-graph.php' => 'Facebook Open Graph Meta Tags for WordPress.',\n\t\t\t'facebook-revised-open-graph-meta-tag\/index.php' => 'Facebook Revised Open Graph Meta Tag.',\n\t\t\t'facebook-thumb-fixer\/_facebook-thumb-fixer.php' => 'Facebook Thumb Fixer.',\n\t\t\t'facebook-and-digg-thumbnail-generator\/facebook-and-digg-thumbnail-generator.php' => 'Fedmich\\'s Facebook Open Graph Meta.',\n\t\t\t'network-publisher\/networkpub.php'             => 'Network Publisher.',\n\t\t\t'nextgen-facebook\/nextgen-facebook.php'        => 'NextGEN Facebook OG.',\n\t\t\t'opengraph\/opengraph.php'                      => 'Open Graph.',\n\t\t\t'open-graph-protocol-framework\/open-graph-protocol-framework.php' => 'Open Graph Protocol Framework.',\n\t\t\t'seo-facebook-comments\/seofacebook.php'        => 'SEO Facebook Comments.',\n\t\t\t'seo-ultimate\/seo-ultimate.php'                => 'SEO Ultimate.',\n\t\t\t'sexybookmarks\/sexy-bookmarks.php'             => 'Shareaholic.',\n\t\t\t'shareaholic\/sexy-bookmarks.php'               => 'Shareaholic.',\n\t\t\t'sharepress\/sharepress.php'                    => 'SharePress.',\n\t\t\t'simple-facebook-connect\/sfc.php'              => 'Simple Facebook Connect.',\n\t\t\t'social-discussions\/social-discussions.php'    => 'Social Discussions.',\n\t\t\t'social-sharing-toolkit\/social_sharing_toolkit.php' => 'Social Sharing Toolkit.',\n\t\t\t'socialize\/socialize.php'                      => 'Socialize.',\n\t\t\t'only-tweet-like-share-and-google-1\/tweet-like-plusone.php' => 'Tweet, Like, Google +1 and Share.',\n\t\t\t'wordbooker\/wordbooker.php'                    => 'Wordbooker.',\n\t\t\t'wordpress-seo\/wp-seo.php'                     => 'Yoast SEO',\n\t\t\t'wordpress-seo-premium\/wp-seo-premium.php'     => 'Yoast SEO Premium',\n\t\t\t'wp-seopress\/seopress.php'                     => 'SEOPress',\n\t\t\t'wp-seopress-pro\/seopress-pro.php'             => 'SEOPress Pro',\n\t\t\t'wpsso\/wpsso.php'                              => 'WordPress Social Sharing Optimization.',\n\t\t\t'wp-caregiver\/wp-caregiver.php'                => 'WP Caregiver.',\n\t\t\t'wp-facebook-like-send-open-graph-meta\/wp-facebook-like-send-open-graph-meta.php' => 'WP Facebook Like Send & Open Graph Meta.',\n\t\t\t'wp-facebook-open-graph-protocol\/wp-facebook-ogp.php' => 'WP Facebook Open Graph protocol.',\n\t\t\t'wp-ogp\/wp-ogp.php'                            => 'WP-OGP.',\n\t\t\t'zoltonorg-social-plugin\/zosp.php'             => 'Zolton.org Social Plugin.',\n\t\t\t'all-in-one-schemaorg-rich-snippets\/index.php' => 'All In One Schema Rich Snippets.',\n\t\t\t'wp-schema-pro\/wp-schema-pro.php'              => 'Schema Pro',\n\t\t\t'no-category-base-wpml\/no-category-base-wpml.php' => 'No Category Base (WPML)',\n\t\t\t'all-404-redirect-to-homepage\/all-404-redirect-to-homepage.php' => 'All 404 Redirect to Homepage',\n\t\t\t'remove-category-url\/remove-category-url.php'  => 'Remove Category URL',\n\t\t];\n\n\t\t$plugins = Helper::is_module_active( 'redirections' ) ? array_merge( $plugins, self::get_redirection_conflicting_plugins() ) : $plugins;\n\t\t$plugins = Helper::is_module_active( 'sitemap' ) ? array_merge( $plugins, self::get_sitemap_conflicting_plugins() ) : $plugins;\n\n\t\treturn $plugins;\n\t}\n\n\t\/**\n\t * Redirection: conflicting plugins.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_redirection_conflicting_plugins() {\n\t\treturn [\n\t\t\t'redirection\/redirection.php' => 'Redirection',\n\t\t];\n\t}\n\n\t\/**\n\t * Sitemap: conflicting plugins.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_sitemap_conflicting_plugins() {\n\t\treturn [\n\t\t\t'google-sitemap-plugin\/google-sitemap-plugin.php' => 'Google Sitemap (BestWebSoft).',\n\t\t\t'xml-sitemaps\/xml-sitemaps.php'                => 'XML Sitemaps (Denis de Bernardy and Mike Koepke).',\n\t\t\t'bwp-google-xml-sitemaps\/bwp-simple-gxs.php'   => 'Better WordPress Google XML Sitemaps (Khang Minh).',\n\t\t\t'google-sitemap-generator\/sitemap.php'         => 'Google XML Sitemaps (Arne Brachhold).',\n\t\t\t'xml-sitemap-feed\/xml-sitemap.php'             => 'XML Sitemap & Google News feeds (RavanH).',\n\t\t\t'google-monthly-xml-sitemap\/monthly-xml-sitemap.php' => 'Google Monthly XML Sitemap (Andrea Pernici).',\n\t\t\t'simple-google-sitemap-xml\/simple-google-sitemap-xml.php' => 'Simple Google Sitemap XML (iTx Technologies).',\n\t\t\t'another-simple-xml-sitemap\/another-simple-xml-sitemap.php' => 'Another Simple XML Sitemap.',\n\t\t\t'xml-maps\/google-sitemap.php'                  => 'Xml Sitemap (Jason Martens).',\n\t\t\t'google-xml-sitemap-generator-by-anton-dachauer\/adachauer-google-xml-sitemap.php' => 'Google XML Sitemap Generator by Anton Dachauer (Anton Dachauer).',\n\t\t\t'wp-xml-sitemap\/wp-xml-sitemap.php'            => 'WP XML Sitemap (Team Vivacity).',\n\t\t\t'sitemap-generator-for-webmasters\/sitemap.php' => 'Sitemap Generator for Webmasters (iwebslogtech).',\n\t\t\t'xml-sitemap-xml-sitemapcouk\/xmls.php'         => 'XML Sitemap - XML-Sitemap.co.uk (Simon Hancox).',\n\t\t\t'sewn-in-xml-sitemap\/sewn-xml-sitemap.php'     => 'Sewn In XML Sitemap (jcow).',\n\t\t\t'rps-sitemap-generator\/rps-sitemap-generator.php' => 'RPS Sitemap Generator (redpixelstudios).',\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/interface-wizard-step.php","ext":"php","size":555,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The wizard step contract.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Wizard step contract.\n *\/\ninterface Wizard_Step {\n\t\/**\n\t * Localized data to be used in the step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data();\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/views\/search-console-ui.php","ext":"php","size":19890,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Search console UI.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Wizard\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Google\\Permissions;\nuse RankMath\\Analytics\\Url_Inspection;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Google\\Analytics;\nuse RankMath\\Google\\Console;\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( ! Helper::is_site_connected() ) {\n\trequire_once 'rank-math-connect.php';\n\treturn;\n}\n\n$is_authorized = Authentication::is_authorized();\nif ( ! $is_authorized ) {\n\trequire_once 'google-connect.php';\n\treturn;\n}\n\n$profile   = wp_parse_args(\n\tget_option( 'rank_math_google_analytic_profile' ),\n\t[\n\t\t'profile' => '',\n\t\t'country' => 'all',\n\t]\n);\n$analytics = wp_parse_args(\n\tget_option( 'rank_math_google_analytic_options' ),\n\t[\n\t\t'adsense_id'       => '',\n\t\t'account_id'       => '',\n\t\t'property_id'      => '',\n\t\t'view_id'          => '',\n\t\t'measurement_id'   => '',\n\t\t'stream_name'      => '',\n\t\t'country'          => 'all',\n\t\t'install_code'     => false,\n\t\t'anonymize_ip'     => false,\n\t\t'local_ga_js'      => false,\n\t\t'exclude_loggedin' => false,\n\t]\n);\n\n$is_profile_connected    = Console::is_console_connected();\n$is_adsense_connected    = ! empty( $analytics['adsense_id'] );\n$is_analytics_connected  = Analytics::is_analytics_connected();\n$is_index_status_enabled = Url_Inspection::is_enabled() || ! $is_profile_connected;\n$all_services            = get_option(\n\t'rank_math_analytics_all_services',\n\t[\n\t\t'isVerified'           => '',\n\t\t'inSearchConsole'      => '',\n\t\t'hasSitemap'           => '',\n\t\t'hasAnalytics'         => '',\n\t\t'hasAnalyticsProperty' => '',\n\t\t'homeUrl'              => '',\n\t\t'sites'                => '',\n\t\t'accounts'             => [],\n\t\t'adsenseAccounts'      => [],\n\t]\n);\n$is_pro_active           = defined( 'RANK_MATH_PRO_FILE' );\n?>\n<input type=\"hidden\" class=\"cmb2-id-check-all-services\" value=\"<?php echo $is_profile_connected && $is_analytics_connected ? '1' : '0'; ?>\" \/>\n\n<?php\n$connections = [\n\t'reconnect'  => [\n\t\t'link'  => wp_nonce_url( admin_url( 'admin.php?reconnect=google' ), 'rank_math_reconnect_google' ),\n\t\t'class' => 'rank-math-reconnect-google',\n\t\t'text'  => esc_html__( 'Reconnect', 'rank-math' ),\n\t],\n\t'disconnect' => [\n\t\t'link'  => '#',\n\t\t'class' => 'rank-math-disconnect-google',\n\t\t'text'  => esc_html__( 'Disconnect', 'rank-math' ),\n\t],\n];\n\nif ( Helper::is_advanced_mode() && ( $is_profile_connected || $is_adsense_connected || $is_analytics_connected ) ) {\n\t$connections['test-connections'] = [\n\t\t'link'  => '#',\n\t\t'class' => 'rank-math-test-connection-google',\n\t\t'text'  => esc_html__( 'Test Connections', 'rank-math' ),\n\t];\n}\n\n$connections = apply_filters( 'rank_math\/analytics\/connect_actions', $connections );\n?>\n<div class=\"connect-actions\">\n\t<?php foreach ( $connections as $connection ) { ?>\n\t\t<a href=\"<?php echo esc_attr( $connection['link'] ); ?>\" class=\"button button-link <?php echo esc_attr( $connection['class'] ); ?>\"><?php echo esc_html( $connection['text'] ); ?><\/a>\n\t<?php } ?>\n<\/div>\n\n<?php\n$console_classes        = Helper::classnames(\n\t'rank-math-box no-padding rank-math-accordion rank-math-connect-search-console',\n\t[\n\t\t'connected'    => $is_profile_connected,\n\t\t'disconnected' => ! $is_profile_connected,\n\t\t'disabled'     => ! Permissions::has_console(),\n\t]\n);\n$console_status_classes = Helper::classnames(\n\t'rank-math-connection-status',\n\t[\n\t\t'rank-math-connection-status-success' => Console::is_valid_connection(),\n\t\t'rank-math-connection-status-error'   => ! Console::is_valid_connection(),\n\t]\n);\n\n$console_status = $is_profile_connected ? 'Connected' : 'Not Connected';\n\n?>\n<div class=\"<?php echo esc_attr( $console_classes ); ?>\" tabindex=\"0\">\n\t<header>\n\t\t<h3><span class=\"rank-math-connection-status-wrap\"><span class=\"<?php echo esc_attr( $console_status_classes ); ?>\" title=\"<?php echo esc_attr( $console_status ); ?>\"><\/span><\/span> <?php esc_html_e( 'Search Console', 'rank-math' ); ?><\/h3>\n\t<\/header>\n\t<div class=\"rank-math-accordion-content\">\n\t\t<?php\n\t\tif ( ! Permissions::has_console() ) {\n\t\t\tPermissions::print_warning();\n\t\t}\n\t\t?>\n\n\t\t<div class=\"cmb-row cmb-type-select\">\n\t\t\t<div class=\"cmb-row-col\">\n\t\t\t\t<label for=\"site-console-profile\"><?php esc_html_e( 'Site', 'rank-math' ); ?><\/label>\n\t\t\t\t<select class=\"cmb2_select site-console-profile notrack\" name=\"site-console-profile\" id=\"site-console-profile\" data-selected=\"<?php echo esc_attr( $profile['profile'] ); ?>\" disabled=\"disabled\">\n\t\t\t\t\t<?php if ( $is_profile_connected ) : ?>\n\t\t\t\t\t<option value=\"<?php echo esc_attr( $profile['profile'] ); ?>\"><?php echo esc_attr( $profile['profile'] ); ?><\/option>\n\t\t\t\t\t<?php endif; ?>\n\t\t\t\t<\/select>\n\t\t\t<\/div>\n\t\t\t<?php do_action( 'rank_math\/analytics\/options\/console' ); ?>\n\t\t<\/div>\n\n\t\t<div class=\"cmb-row cmb-type-toggle\">\n\t\t\t<div class=\"cmb-td\">\n\t\t\t\t<label class=\"cmb2-toggle\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"regular-text notrack\" name=\"enable-index-status\" id=\"enable-index-status\" value=\"on\" <?php checked( $is_index_status_enabled ); ?> <?php disabled( ! $is_profile_connected ); ?>>\n\t\t\t\t\t<span class=\"cmb2-slider\">\n\t\t\t\t\t\t<svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg>\n\t\t\t\t\t\t<svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<label for=\"enable-index-status\"><?php esc_html_e( 'Enable the Index Status tab', 'rank-math' ); ?><\/label>\n\t\t\t\t<div class=\"cmb2-metabox-description\"><?php esc_html_e( 'Enable this option to show the Index Status tab in the Analytics module.', 'rank-math' ); ?> <a href=\"<?php echo KB::get( 'url-inspection-api', 'SW Analytics Index Status Option' ); \/\/ phpcs:ignore ?>\" target=\"_blank\" rel=\"noopener noreferrer\"><?php esc_html_e( 'Learn more.', 'rank-math' ); ?><\/a><\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<?php if ( ! Console::is_valid_connection() ) : ?>\n\t\t\t<div class=\"rank-math-notice rank-math-notice--error\">\n\t\t\t\t<p><?php esc_html_e( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ); ?><\/p>\n\t\t\t<\/div>\n\t\t<?php endif; ?>\n\t<\/div>\n<\/div>\n\n<?php\n$analytic_classes        = Helper::classnames(\n\t'rank-math-box no-padding rank-math-accordion rank-math-connect-analytics',\n\t[\n\t\t'connected'    => $is_analytics_connected,\n\t\t'disconnected' => ! $is_analytics_connected,\n\t\t'disabled'     => ! Permissions::has_analytics(),\n\t]\n);\n$analytic_status_classes = Helper::classnames(\n\t'rank-math-connection-status',\n\t[\n\t\t'rank-math-connection-status-success' => Analytics::is_valid_connection(),\n\t\t'rank-math-connection-status-error'   => ! Analytics::is_valid_connection(),\n\t]\n);\n$analytic_status         = $is_analytics_connected ? 'Connected' : 'Not Connected';\n?>\n<div class=\"<?php echo esc_attr( $analytic_classes ); ?>\" tabindex=\"0\">\n\t<header>\n\t\t<h3><span class=\"rank-math-connection-status-wrap\"><span class=\"<?php echo esc_attr( $analytic_status_classes ); ?>\" title=\"<?php echo esc_attr( $analytic_status ); ?>\"><\/span><\/span><?php esc_html_e( 'Analytics', 'rank-math' ); ?><\/h3>\n\t<\/header>\n\t<div class=\"rank-math-accordion-content rank-math-analytics-content\">\n\n\t\t<?php\n\t\tif ( ! Permissions::has_analytics() ) {\n\t\t\tPermissions::print_warning();\n\t\t}\n\t\t?>\n\n\t\t<p class=\"warning yellow\">\n\t\t\t<strong class=\"note\"><?php echo esc_html__( 'Note', 'rank-math' ); ?><\/strong>\n\t\t\t<?php\n\t\t\tprintf(\n\t\t\t\t\/* translators: %s: Link to KB article *\/\n\t\t\t\tesc_html__( 'Ready to switch to Google Analytics 4? %s', 'rank-math' ),\n\t\t\t\t'<a href=\"' . KB::get( 'using-ga4', 'Analytics GA4 KB' ) . '\" target=\"_blank\">' . esc_html__( 'Click here to know how', 'rank-math' ) . '<\/a>.' \/\/ phpcs:ignore\n\t\t\t);\n\t\t\t?>\n\t\t<\/p>\n\n\t\t<div class=\"cmb-row cmb-type-select\">\n\t\t\t<div class=\"cmb-row-col\">\n\t\t\t\t<label for=\"site-analytics-account\"><?php esc_html_e( 'Account', 'rank-math' ); ?><\/label>\n\t\t\t\t<select class=\"cmb2_select site-analytics-account notrack\" name=\"site-analytics-account\" id=\"site-analytics-account\" data-selected=\"<?php echo esc_attr( $analytics['account_id'] ); ?>\" disabled=\"disabled\">\n\t\t\t\t\t<?php\n\t\t\t\t\tif ( $is_analytics_connected ) :\n\t\t\t\t\t\t$analytic_account = $all_services['accounts'][ $analytics['account_id'] ]['name'] ?? '';\n\t\t\t\t\t\t?>\n\t\t\t\t\t<option value=\"<?php echo esc_attr( $analytics['account_id'] ); ?>\"><?php echo esc_attr( $analytic_account ); ?><\/option>\n\t\t\t\t\t<?php endif; ?>\n\t\t\t\t<\/select>\n\t\t\t<\/div>\n\t\t\t<div class=\"cmb-row-col\">\n\t\t\t\t<label for=\"site-analytics-property\"><?php esc_html_e( 'Property', 'rank-math' ); ?><\/label>\n\t\t\t\t<select class=\"cmb2_select site-analytics-property notrack\" name=\"site-analytics-property\" id=\"site-analytics-property\" data-selected=\"<?php echo esc_attr( $analytics['property_id'] ); ?>\" disabled=\"disabled\">\n\t\t\t\t\t<?php\n\t\t\t\t\tif ( $is_analytics_connected ) :\n\t\t\t\t\t\t$analytic_property = $all_services['accounts'][ $analytics['account_id'] ]['properties'][ $analytics['property_id'] ]['name'] ?? '';\n\t\t\t\t\t\t?>\n\t\t\t\t\t<option value=\"<?php echo esc_attr( $analytics['property_id'] ); ?>\"><?php echo esc_html( $analytic_property ); ?><\/option>\n\t\t\t\t\t<?php endif; ?>\n\t\t\t\t<\/select>\n\t\t\t<\/div>\n\t\t\t<div class=\"cmb-row-col\">\n\t\t\t\t<label for=\"site-analytics-view\">\n\t\t\t\t<?php echo esc_html__( 'Data Stream', 'rank-math' ); ?>\n\t\t\t\t<\/label>\n\t\t\t\t<select class=\"cmb2_select site-analytics-view notrack\" name=\"site-analytics-view\" id=\"site-analytics-view\" data-selected=\"<?php echo esc_attr( $analytics['view_id'] ); ?>\" disabled=\"disabled\">\n\t\t\t\t\t<?php\n\t\t\t\t\tif ( $is_analytics_connected ) :\n\t\t\t\t\t\t$analytic_view = $analytics['stream_name'] ? $analytics['stream_name'] : 'Website';\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<option value=\"<?php echo esc_attr( $analytics['view_id'] ); ?>\"><?php echo esc_attr( $analytic_view ); ?><\/option>\n\t\t\t\t\t\t<?php\n\t\t\t\t\tendif;\n\t\t\t\t\t?>\n\t\t\t\t<\/select>\n\t\t\t<\/div>\n\t\t\t<input type=\"hidden\" id=\"rank-math-analytics-measurement-id\" name=\"measurementID\" value=\"<?php echo esc_attr( $analytics['measurement_id'] ); ?>\" \/>\n\t\t\t<input type=\"hidden\" id=\"rank-math-analytics-stream-name\" name=\"streamName\" value=\"<?php echo esc_attr( $analytics['stream_name'] ); ?>\" \/>\n\t\t\t<?php do_action( 'rank_math\/analytics\/options\/analytics' ); ?>\n\t\t<\/div>\n\n\t\t<div class=\"cmb-row cmb-type-toggle\">\n\t\t\t<div class=\"cmb-td\">\n\t\t\t\t<label class=\"cmb2-toggle\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"regular-text notrack\" name=\"install-code\" id=\"install-code\" value=\"on\"<?php checked( $analytics['install_code'] ); ?>>\n\t\t\t\t\t<span class=\"cmb2-slider\">\n\t\t\t\t\t\t<svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg>\n\t\t\t\t\t\t<svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<label for=\"install-code\"><?php esc_html_e( 'Install analytics code', 'rank-math' ); ?><\/label>\n\t\t\t\t<div class=\"cmb2-metabox-description\"><?php esc_html_e( 'Enable this option only if you are not using any other plugin\/theme to install Google Analytics code.', 'rank-math' ); ?><\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div class=\"cmb-row cmb-type-toggle <?php echo ! $is_pro_active ? 'cmb-redirector-element' : ''; ?>\" <?php echo ! $is_pro_active ? 'data-url=\"' . KB::the( 'free-vs-pro', 'Anonymize IP' ) . '\"' : ''; \/\/ phpcs:ignore ?>>\n\t\t\t<div class=\"cmb-td\">\n\t\t\t\t<label class=\"cmb2-toggle\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"regular-text notrack\" name=\"anonymize-ip\" id=\"anonymize-ip\" value=\"on\"<?php checked( $analytics['anonymize_ip'] ); ?><?php disabled( ! $is_pro_active ); ?>>\n\t\t\t\t\t<span class=\"cmb2-slider<?php echo ! $is_pro_active ? ' disabled' : ''; ?> \">\n\t\t\t\t\t\t<svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg>\n\t\t\t\t\t\t<svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<label for=\"anonymize-ip\">\n\t\t\t\t\t<?php esc_html_e( 'Anonymize IP addresses', 'rank-math' ); ?>\n\t\t\t\t\t<?php if ( ! $is_pro_active ) : ?>\n\t\t\t\t\t<span class=\"rank-math-pro-badge\">\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'pro', 'Anonymize IP' ); ?>\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<?php esc_html_e( 'PRO', 'rank-math' ); ?>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/span>\n\t\t\t\t\t<?php endif; ?>\n\t\t\t\t<\/label>\n\t\t\t\t<div class=\"rank-math-cmb-dependency hidden\" data-relation=\"or\">\n\t\t\t\t\t<span class=\"hidden\" data-field=\"install-code\" data-comparison=\"=\" data-value=\"on\"><\/span>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div class=\"cmb-row cmb-type-toggle <?php echo ! $is_pro_active ? 'cmb-redirector-element' : ''; ?>\" <?php echo ! $is_pro_active ? 'data-url=\"' . KB::the( 'pro', 'Localjs IP' ) . '\"' : ''; \/\/ phpcs:ignore ?>>\n\t\t\t<div class=\"cmb-td\">\n\t\t\t\t<label class=\"cmb2-toggle\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"regular-text notrack\" name=\"local-ga-js\" id=\"local-ga-js\" value=\"on\"<?php checked( $analytics['local_ga_js'] ); ?><?php disabled( ! $is_pro_active ); ?>>\n\t\t\t\t\t<span class=\"cmb2-slider<?php echo ! $is_pro_active ? ' disabled' : ''; ?> \">\n\t\t\t\t\t\t<svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg>\n\t\t\t\t\t\t<svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<label for=\"local-ga-js\">\n\t\t\t\t\t<?php esc_html_e( 'Self-Hosted Analytics JS File', 'rank-math' ); ?>\n\t\t\t\t\t<?php if ( ! $is_pro_active ) : ?>\n\t\t\t\t\t<span class=\"rank-math-pro-badge\">\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'pro', 'Localjs IP' ); ?>\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<?php esc_html_e( 'PRO', 'rank-math' ); ?>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/span>\n\t\t\t\t\t<?php endif; ?>\n\t\t\t\t<\/label>\n\t\t\t\t<div class=\"rank-math-cmb-dependency hidden\" data-relation=\"or\">\n\t\t\t\t\t<span class=\"hidden\" data-field=\"install-code\" data-comparison=\"=\" data-value=\"on\"><\/span>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<div class=\"cmb-row cmb-type-toggle\">\n\t\t\t<div class=\"cmb-td\">\n\t\t\t\t<label class=\"cmb2-toggle\">\n\t\t\t\t\t<input type=\"checkbox\" class=\"regular-text notrack\" name=\"exclude-loggedin\" id=\"exclude-loggedin\" value=\"on\"<?php checked( $analytics['exclude_loggedin'] ); ?>>\n\t\t\t\t\t<span class=\"cmb2-slider\">\n\t\t\t\t\t\t<svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg>\n\t\t\t\t\t\t<svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg>\n\t\t\t\t\t<\/span>\n\t\t\t\t<\/label>\n\t\t\t\t<label for=\"exclude-loggedin\"><?php esc_html_e( 'Exclude Logged-in users', 'rank-math' ); ?><\/label>\n\t\t\t\t<div class=\"rank-math-cmb-dependency hidden\" data-relation=\"or\">\n\t\t\t\t\t<span class=\"hidden\" data-field=\"install-code\" data-comparison=\"=\" data-value=\"on\"><\/span>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<?php if ( ! Analytics::is_valid_connection() ) : ?>\n\t\t\t<div class=\"rank-math-notice rank-math-notice--error\">\n\t\t\t\t<p><?php esc_html_e( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ); ?><\/p>\n\t\t\t<\/div>\n\t\t<?php endif; ?>\n\t<\/div>\n<\/div>\n\n<?php ob_start(); ?>\n<div class=\"rank-math-box no-padding rank-math-accordion rank-math-connect-adsense disconnected\" tabindex=\"0\">\n\t<header>\n\t\t<h3>\n\t\t\t<span class=\"rank-math-connection-status-wrap\">\n\t\t\t\t<span class=\"rank-math-connection-status rank-math-connection-status-error\" title=\"Not Connected\"><\/span>\n\t\t\t<\/span><?php esc_html_e( 'AdSense', 'rank-math' ); ?>\n\t\t<\/h3>\n\t<\/header>\n\t<div class=\"rank-math-accordion-content\">\n\t\t<div class=\"cmb-row cmb-type-select\">\n\t\t\t<div class=\"cmb-row-col\">\n\t\t\t\t<label for=\"site-adsense-account\"><?php esc_html_e( 'Account', 'rank-math' ); ?><\/label>\n\t\t\t\t<select class=\"cmb2_select site-adsense-account notrack\" name=\"site-adsense-account\" id=\"site-adsense-account\" data-selected=\"\" disabled=\"disabled\">\n\t\t\t\t\t<option value=\"\"><?php esc_html_e( 'Select Account', 'rank-math' ); ?><\/option>\n\t\t\t\t<\/select>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div id=\"rank-math-pro-cta\" class=\"no-margin\">\n\t\t\t<div class=\"rank-math-cta-text\">\n\t\t\t\t<span class=\"rank-math-pro-badge\">\n\t\t\t\t\t<a href=\"<?php KB::the( 'pro', 'AdSense Toggle' ); ?>\" target=\"_blank\" rel=\"noopener noreferrer\"><?php esc_html_e( 'PRO', 'rank-math' ); ?><\/a><\/span> <?php esc_html_e( \"Google AdSense support is only available in Rank Math Pro's Advanced Analytics module.\", 'rank-math' ); ?>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n<?php echo apply_filters( 'rank_math\/analytics\/adsense', ob_get_clean(), $analytics, $all_services ); \/\/ phpcs:ignore ?>\n\n<div id=\"rank-math-pro-cta\" class=\"rank-math-privacy-box width-100\">\n\t<div class=\"rank-math-cta-table\">\n\t\t<div class=\"rank-math-cta-body less-padding\">\n\t\t\t<i class=\"dashicons dashicons-lock\"><\/i>\n\t\t\t<p>\n\t\t\t<?php\n\t\t\t\/* translators: %s: Link to KB article *\/\n\t\t\tprintf( esc_html__( 'We do not store any of the data from your Google account on our servers, everything is processed & stored on your server. We take your privacy extremely seriously and ensure it is never misused. %s', 'rank-math' ), '<a href=\"' . KB::get( 'usage-policy', 'Analytics Privacy Notice' ) . '\" target=\"_blank\" rel=\"noopener noreferrer\">' . esc_html__( 'Learn more.', 'rank-math' ) . '<\/a>' ); \/\/ phpcs:ignore\n\t\t\t?>\n\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n<?php\n\/\/ phpcs:enable\n\nif ( Helper::is_wizard() && ! RankMath\\Analytics\\Email_Reports::are_fields_hidden() ) {\n\t?>\n\t<div class=\"cmb-row email-reports-header text-center\" style=\"border-top:0;\">\n\t\t<h1><?php esc_html_e( 'Email Reports', 'rank-math' ); ?><\/h1>\n\t\t<div class=\"email-reports-desc text-center\"><?php esc_html_e( 'Receive Analytics reports periodically in email.', 'rank-math' ); ?> <a href=\"#\" target=\"_blank\"><?php esc_html_e( 'Learn more about Email Reports.', 'rank-math' ); ?><\/a><\/div>\n\t<\/div>\n\t<div class=\"cmb-row cmb-type-toggle cmb2-id-console-email-reports\" data-fieldtype=\"toggle\">\n\t\t<div class=\"cmb-th\">\n\t\t\t<label for=\"console_email_reports\"><?php esc_html_e( 'Email Reports', 'rank-math' ); ?><\/label>\n\t\t<\/div>\n\t\t<div class=\"cmb-td\">\n\t\t\t<label class=\"cmb2-toggle\"><input type=\"checkbox\" class=\"regular-text\" name=\"console_email_reports\" id=\"console_email_reports\" value=\"on\" <?php checked( Helper::get_settings( 'general.console_email_reports' ) ); ?> data-hash=\"7e0rimtbvig0\"><span class=\"cmb2-slider\"><svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg><svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg><\/span><\/label>\n\t\t<\/div>\n\t<\/div>\n\t<?php\n\tdo_action( 'rank_math\/analytics\/options\/wizard_after_email_report' );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/views\/google-connect.php","ext":"php","size":2353,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Search console ui.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Wizard\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Google\\Authentication;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/\/ phpcs:disable\n$is_authorized = Authentication::is_authorized();\n$authorize   = ! $is_authorized ? ( '<div class=\"connect-wrap\" style=\"margin-top: 30px;\"><a href=\"' . esc_url( Authentication::get_auth_url() ) . '\" class=\"button button-primary button-animated rank-math-authorize-account\">' . esc_html__( 'Connect Google Services', 'rank-math' ) . '<\/a><\/div>' ) : '';\n$deauthorize = $is_authorized ? '<button class=\"button button-primary rank-math-deauthorize-account\">' . esc_html__( 'Disconnect Account', 'rank-math' ) . '<\/button>' : '';\n\necho $authorize . $deauthorize;\n?>\n<div id=\"rank-math-pro-cta\" class=\"analytics\">\n\t<div class=\"rank-math-cta-box width-100 no-shadow no-padding no-border\">\n\t\t<h3><?php echo esc_attr__( 'Benefits of Connecting Google Account', 'rank-math' ); ?><\/h3>\n\t\t<ul>\n\t\t\t<li><?php echo esc_attr__( 'Verify site ownership on Google Search Console in a single click', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Track page and keyword rankings with the Advanced Analytics module', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Easily set up Google Analytics without using another 3rd party plugin', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Automatically submit sitemaps to the Google Search Console', 'rank-math' ); ?><\/li>\n\t\t\t<li><a href=\"<?php echo KB::get( 'help-analytics', 'SW Analytics Step Benefits' ); ?>\" target=\"_blank\"><?php echo esc_html__( 'Learn more about the benefits of connecting your account here.', 'rank-math' ); ?><\/a><\/li>\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n<div id=\"rank-math-pro-cta\" class=\"rank-math-privacy-box\">\n\t<div class=\"rank-math-cta-table\">\n\t\t<div class=\"rank-math-cta-body less-padding\">\n\t\t\t<i class=\"dashicons dashicons-lock\"><\/i>\n\t\t\t<p><?php printf( esc_html__( 'We do not store any of the data from your Google account on our servers, everything is processed & stored on your server. We take your privacy extremely seriously and ensure it is never misused. %s', 'rank-math' ), '<a href=\"' . KB::get( 'usage-policy', 'Analytics Privacy Notice' ) . '\" target=\"_blank\" rel=\"noopener noreferrer\">' . esc_html__( 'Learn more.', 'rank-math' ) . '<\/a>' ); ?><\/p>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/views\/content.php","ext":"php","size":835,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Setup wizard content template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Wizard\n *\/\n\nuse RankMath\\KB;\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n\t<head>\n\t\t<meta name=\"viewport\" content=\"width=device-width\"\/>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\"\/>\n\t\t<title><?php esc_html_e( 'Setup Wizard - Rank Math', 'rank-math' ); ?><\/title>\n\t\t<?php wp_print_head_scripts(); ?>\n\t\t<?php wp_print_styles( 'rank-math-wizard' ); ?>\n\t<\/head>\n\t<body class=\"rank-math-wizard rank-math-page <?php echo is_rtl() ? ' rtl' : ''; ?>\">\n\t\t<div id=\"rank-math-wizard-wrapper\"><\/div>\n\t<\/body>\n\t<?php\n\trank_math()->json->output();\n\tif ( function_exists( 'wp_print_media_templates' ) ) {\n\t\twp_print_media_templates();\n\t}\n\twp_print_footer_scripts();\n\t?>\n<\/html>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/views\/rank-math-connect.php","ext":"php","size":3046,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Search console ui.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Wizard\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$sw_page = Param::get( 'page', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n$sw_page = in_array( $sw_page, [ 'rank-math-options-general', 'rank-math-analytics' ], true ) ? 'rank-math-options-general' : 'rank-math-wizard&step=analytics';\n$url     = Admin_Helper::get_activate_url( admin_url( 'admin.php?analytics=1&page=' . $sw_page ) );\n\n$site_url_valid = Admin_Helper::is_site_url_valid();\n$button_class   = 'button button-primary button-connect' . ( $site_url_valid ? ' button-animated' : ' disabled' );\n?>\n<?php Admin_Helper::maybe_show_invalid_siteurl_notice(); ?>\n\n<div class=\"wp-core-ui rank-math-ui connect-wrap\" style=\"margin-top: 30px;\">\n\t<a href=\"<?php echo esc_url( $url ); ?>\" class=\"<?php echo esc_attr( $button_class ); ?>\" name=\"rank_math_activate\"><?php echo esc_attr__( 'Connect Your Rank Math Account', 'rank-math' ); ?><\/a>\n<\/div>\n<div id=\"rank-math-pro-cta\" class=\"analytics\">\n\t<div class=\"rank-math-cta-box width-100 no-shadow no-padding no-border\">\n\t\t<h3><?php echo esc_attr__( 'Benefits of Connecting Rank Math Account', 'rank-math' ); ?><\/h3>\n\t\t<ul>\n\t\t\t<li><?php echo esc_attr__( 'Verify site ownership on Google Search Console in a single click', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Track page and keyword rankings with the Advanced Analytics module', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Easily set up Google Analytics without using another 3rd party plugin', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Automatically submit sitemaps to the Google Search Console', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Free keyword suggestions when entering a focus keyword', 'rank-math' ); ?><\/li>\n\t\t\t<li><?php echo esc_attr__( 'Use our revolutionary SEO Analyzer to scan your website for SEO errors', 'rank-math' ); ?><\/li>\n\t\t\t<li><a href=\"<?php echo esc_url( KB::get( 'free-account-benefits', 'SW Analytics Step' ) ); ?>\" target=\"_blank\"><?php echo esc_html__( 'Learn more about the benefits of connecting your account here.', 'rank-math' ); ?><\/a><\/li>\n\t\t<\/ul>\n\t<\/div>\n<\/div>\n<div id=\"rank-math-pro-cta\" class=\"rank-math-privacy-box\">\n\t<div class=\"rank-math-cta-table\">\n\t\t<div class=\"rank-math-cta-body less-padding\">\n\t\t\t<i class=\"dashicons dashicons-lock\"><\/i>\n\t\t\t<p>\n\t\t\t\t<?php\n\t\t\t\t\t\/\/ Translators: placeholder is the KB link.\n\t\t\t\t\tprintf( esc_html__( 'We do not store any of the data from your Google account on our servers, everything is processed & stored on your server. We take your privacy extremely seriously and ensure it is never misused. %s', 'rank-math' ), '<a href=\"' . esc_url( KB::get( 'usage-policy', 'Analytics Privacy Notice' ) ) . '\" target=\"_blank\" rel=\"noopener noreferrer\">' . esc_html__( 'Learn more.', 'rank-math' ) . '<\/a>' );\n\t\t\t\t?>\n\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-import.php","ext":"php","size":2533,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Import wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\KB;\nuse RankMath\\Admin\\Importers\\Detector;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Import implements Wizard_Step {\n\n\t\/**\n\t * Get Localized data to be used in the Analytics step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\t$detector = new Detector();\n\t\t$plugins  = $detector->detect();\n\t\t$plugins  = self::set_priority( $plugins );\n\t\treturn [\n\t\t\t'importablePlugins' => $plugins,\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\tdelete_option( 'rank_math_yoast_block_posts' );\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Set plugins priority.\n\t *\n\t * @param array $plugins Array of detected plugins.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function set_priority( $plugins ) {\n\t\t$checked  = false;\n\t\t$priority = array_intersect( [ 'seopress', 'yoast', 'yoast-premium', 'aioseo' ], array_keys( $plugins ) );\n\n\t\tforeach ( $priority as $slug ) {\n\t\t\tif ( ! $checked ) {\n\t\t\t\t$checked                     = true;\n\t\t\t\t$plugins[ $slug ]['checked'] = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$plugins[ $slug ]['checked'] = false;\n\t\t}\n\n\t\treturn $plugins;\n\t}\n\n\t\/**\n\t * Get description for choice field.\n\t *\n\t * @param string  $slug      Plugin slug.\n\t * @param array   $plugin    Plugin info array.\n\t * @param boolean $is_active Is plugin active.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_choice_description( $slug, $plugin, $is_active ) {\n\t\t\/* translators: 1 is plugin name *\/\n\t\t$desc = 'aio-rich-snippet' === $slug ? esc_html__( 'Import meta data from the %1$s plugin.', 'rank-math' ) : esc_html__( 'Import settings and meta data from the %1$s plugin.', 'rank-math' );\n\n\t\t\/* translators: 2 is link to Knowledge Base article *\/\n\t\t$desc .= ' ' . __( 'The process may take a few minutes if you have a large number of posts or pages <a href=\"%2$s\" target=\"_blank\">Learn more about the import process here.<\/a>', 'rank-math' );\n\n\t\tif ( $is_active ) {\n\t\t\t\/* translators: 1 is plugin name *\/\n\t\t\t$desc .= '<br>' . __( ' %1$s plugin will be disabled automatically moving forward to avoid conflicts. <strong>It is thus recommended to import the data you need now.<\/strong>', 'rank-math' );\n\t\t}\n\n\t\treturn sprintf( wp_kses_post( $desc ), $plugin['name'], KB::get( 'seo-import', 'SW Import Step' ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-your-site.php","ext":"php","size":8065,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Your Site wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Your_Site implements Wizard_Step {\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\t$displayname = self::get_site_display_name();\n\t\t$data        = [\n\t\t\t'site_type'              => self::get_default_site_type(),\n\t\t\t'businessTypesChoices'   => Helper::choices_business_types(),\n\t\t\t'business_type'          => Helper::get_settings( 'titles.local_business_type' ),\n\t\t\t'website_name'           => Helper::get_settings( 'titles.website_name', $displayname ),\n\t\t\t'website_alternate_name' => Helper::get_settings( 'titles.website_alternate_name', '' ),\n\t\t\t'company_name'           => Helper::get_settings( 'titles.knowledgegraph_name', $displayname ),\n\t\t\t'open_graph_image'       => Helper::get_settings( 'titles.open_graph_image' ),\n\t\t];\n\n\t\t$company_logo = self::get_default_logo();\n\t\tif ( $company_logo ) {\n\t\t\t$data['company_logo']    = $company_logo;\n\t\t\t$data['company_logo_id'] = attachment_url_to_postid( $company_logo );\n\t\t}\n\n\t\t$open_graph_image = Helper::get_settings( 'titles.open_graph_image' );\n\t\tif ( $open_graph_image ) {\n\t\t\t$data['open_graph_image']    = $open_graph_image;\n\t\t\t$data['open_graph_image_id'] = attachment_url_to_postid( $open_graph_image );\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\t$settings = wp_parse_args(\n\t\t\trank_math()->settings->all_raw(),\n\t\t\t[\n\t\t\t\t'titles'  => '',\n\t\t\t\t'sitemap' => '',\n\t\t\t]\n\t\t);\n\t\t$values   = wp_parse_args(\n\t\t\t$values,\n\t\t\t[\n\t\t\t\t'company_name'        => '',\n\t\t\t\t'company_logo'        => '',\n\t\t\t\t'company_logo_id'     => '',\n\t\t\t\t'open_graph_image'    => '',\n\t\t\t\t'open_graph_image_id' => '',\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Save these settings.\n\t\t$functions = [ 'save_local_seo', 'save_open_graph', 'save_post_types', 'save_taxonomies' ];\n\t\tforeach ( $functions as $function ) {\n\t\t\t$settings = self::$function( $settings, $values );\n\t\t}\n\n\t\t$business_type = [ 'news', 'business', 'webshop', 'otherbusiness' ];\n\t\t$modules       = [ 'local-seo' => in_array( $values['site_type'], $business_type, true ) ? 'on' : 'off' ];\n\t\t$users         = get_users( [ 'role__in' => [ 'administrator', 'editor', 'author', 'contributor' ] ] );\n\n\t\tif ( count( $users ) > 1 && ! is_plugin_active( 'members\/members.php' ) ) {\n\t\t\t$modules['role-manager'] = 'on';\n\t\t}\n\n\t\tset_transient( '_rank_math_site_type', sanitize_text_field( $values['site_type'] ) );\n\t\tHelper::update_modules( $modules );\n\t\tHelper::update_all_settings( null, $settings['titles'], null );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Save Local Seo\n\t *\n\t * @param array $settings Array of all settings.\n\t * @param array $values   Array of posted values.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function save_local_seo( $settings, $values ) {\n\t\tswitch ( $values['site_type'] ) {\n\t\t\tcase 'blog':\n\t\t\tcase 'portfolio':\n\t\t\t\t$settings['titles']['knowledgegraph_type']    = 'person';\n\t\t\t\t$settings['titles']['knowledgegraph_name']    = sanitize_text_field( $values['company_name'] );\n\t\t\t\t$settings['titles']['knowledgegraph_logo']    = sanitize_url( $values['company_logo'] );\n\t\t\t\t$settings['titles']['knowledgegraph_logo_id'] = absint( $values['company_logo_id'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'news':\n\t\t\tcase 'webshop':\n\t\t\tcase 'business':\n\t\t\tcase 'otherbusiness':\n\t\t\t\t$settings['titles']['knowledgegraph_type']    = 'company';\n\t\t\t\t$settings['titles']['knowledgegraph_name']    = sanitize_text_field( $values['company_name'] );\n\t\t\t\t$settings['titles']['knowledgegraph_logo']    = sanitize_url( $values['company_logo'] );\n\t\t\t\t$settings['titles']['local_business_type']    = sanitize_text_field( $values['business_type'] );\n\t\t\t\t$settings['titles']['knowledgegraph_logo_id'] = absint( $values['company_logo_id'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'otherpersonal':\n\t\t\t\t$settings['titles']['knowledgegraph_type'] = 'person';\n\t\t\t\t$settings['titles']['knowledgegraph_name'] = sanitize_text_field( $values['company_name'] );\n\t\t\t\tbreak;\n\t\t}\n\n\t\tforeach ( [ 'website_name', 'website_alternate_name' ] as $key ) {\n\t\t\tif ( empty( $values[ $key ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$settings['titles'][ $key ] = sanitize_text_field( $values[ $key ] );\n\t\t}\n\n\t\treturn $settings;\n\t}\n\n\t\/**\n\t * Save Open Graph\n\t *\n\t * @param array $settings Array of all settings.\n\t * @param array $values   Array of posted values.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function save_open_graph( $settings, $values ) {\n\t\tif ( ! empty( $values['open_graph_image_id'] ) ) {\n\t\t\t$settings['titles']['open_graph_image']    = sanitize_url( $values['open_graph_image'] );\n\t\t\t$settings['titles']['open_graph_image_id'] = absint( $values['open_graph_image_id'] );\n\t\t}\n\n\t\tif ( empty( $values['company_logo_id'] ) ) {\n\t\t\tunset( $settings['titles']['knowledgegraph_logo'] );\n\t\t\tunset( $settings['titles']['knowledgegraph_logo_id'] );\n\t\t}\n\n\t\treturn $settings;\n\t}\n\n\t\/**\n\t * Save Post Types\n\t *\n\t * @param array $settings Array of all settings.\n\t * @param array $values   Array of posted values.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function save_post_types( $settings, $values ) {\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type => $label ) {\n\t\t\tif ( 'attachment' === $post_type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$settings['titles'][ \"pt_{$post_type}_add_meta_box\" ] = 'on';\n\t\t}\n\n\t\treturn $settings;\n\t}\n\n\t\/**\n\t * Save Taxonomies\n\t *\n\t * @param array $settings Array of all settings.\n\t * @param array $values   Array of posted values.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function save_taxonomies( $settings, $values ) {\n\t\t$taxonomies = Admin_Helper::get_taxonomies_options();\n\t\tarray_shift( $taxonomies );\n\t\tforeach ( $taxonomies as $taxonomy => $label ) {\n\t\t\t$settings['titles'][ \"tax_{$taxonomy}_add_meta_box\" ] = 'on';\n\t\t}\n\n\t\treturn $settings;\n\t}\n\n\t\/**\n\t * Get site display name.\n\t *\n\t * @return string\n\t *\/\n\tprotected static function get_site_display_name() {\n\t\t$siteurl  = get_bloginfo( 'url' );\n\t\t$sitename = get_bloginfo( 'title' );\n\n\t\treturn $sitename ? $sitename : $siteurl;\n\t}\n\n\t\/**\n\t * Get default logo.\n\t *\n\t * @return string\n\t *\/\n\tprivate static function get_default_logo() {\n\t\tif ( defined( 'MTS_THEME_NAME' ) && MTS_THEME_NAME ) {\n\t\t\t$theme_options = get_option( MTS_THEME_NAME );\n\t\t\tif ( isset( $theme_options['mts_logo'] ) ) {\n\t\t\t\treturn wp_get_attachment_url( $theme_options['mts_logo'] );\n\t\t\t}\n\t\t}\n\n\t\tif ( current_theme_supports( 'custom-logo' ) && ! empty( get_theme_mod( 'custom_logo' ) ) ) {\n\t\t\treturn wp_get_attachment_url( get_theme_mod( 'custom_logo' ) );\n\t\t}\n\n\t\treturn Helper::get_settings( 'titles.knowledgegraph_logo' );\n\t}\n\n\t\/**\n\t * Get default site type.\n\t *\n\t * @return string\n\t *\/\n\tprivate static function get_default_site_type() {\n\t\t$default_type = get_transient( '_rank_math_site_type' );\n\t\treturn $default_type ? $default_type : ( class_exists( 'Easy_Digital_Downloads' ) || class_exists( 'WooCommerce' ) ? 'webshop' : 'blog' );\n\t}\n\n\t\/**\n\t * Get type dependecy.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_type_dependency() {\n\t\treturn [\n\t\t\t[ 'site_type', 'news' ],\n\t\t\t[ 'site_type', 'business' ],\n\t\t\t[ 'site_type', 'webshop' ],\n\t\t\t[ 'site_type', 'otherbusiness' ],\n\t\t];\n\t}\n\n\t\/**\n\t * Get type choices.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_type_choices() {\n\t\treturn [\n\t\t\t'blog'          => esc_html__( 'Personal Blog', 'rank-math' ),\n\t\t\t'news'          => esc_html__( 'Community Blog\/News Site', 'rank-math' ),\n\t\t\t'portfolio'     => esc_html__( 'Personal Portfolio', 'rank-math' ),\n\t\t\t'business'      => esc_html__( 'Small Business Site', 'rank-math' ),\n\t\t\t'webshop'       => esc_html__( 'Webshop', 'rank-math' ),\n\t\t\t'otherpersonal' => esc_html__( 'Other Personal Website', 'rank-math' ),\n\t\t\t'otherbusiness' => esc_html__( 'Other Business Website', 'rank-math' ),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-sitemap.php","ext":"php","size":3897,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Sitemap wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Sitemap implements Wizard_Step {\n\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\t$post_types = self::get_post_types();\n\t\t$taxonomies = self::get_taxonomies();\n\t\treturn [\n\t\t\t'sitemap'            => Helper::is_module_active( 'sitemap' ),\n\t\t\t'include_images'     => Helper::get_settings( 'sitemap.include_images' ),\n\t\t\t'postTypes'          => $post_types['post_types'],\n\t\t\t'sitemap_post_types' => $post_types['defaults'],\n\t\t\t'taxonomies'         => $taxonomies['taxonomies'],\n\t\t\t'sitemap_taxonomies' => $taxonomies['defaults'],\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\t$settings = rank_math()->settings->all_raw();\n\t\tHelper::update_modules( [ 'sitemap' => $values['sitemap'] ? 'on' : 'off' ] );\n\n\t\tif ( $values['sitemap'] ) {\n\t\t\t$settings['sitemap']['include_images'] = $values['include_images'] ? 'on' : 'off';\n\n\t\t\t$settings = self::save_post_types( $settings, $values );\n\t\t\t$settings = self::save_taxonomies( $settings, $values );\n\t\t\tHelper::update_all_settings( null, null, $settings['sitemap'] );\n\t\t}\n\n\t\tHelper::schedule_flush_rewrite();\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get post type data.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_post_types() {\n\t\t$p_defaults = [];\n\t\t$post_types = Helper::choices_post_types();\n\t\tif ( Helper::get_settings( 'general.attachment_redirect_urls', true ) ) {\n\t\t\tunset( $post_types['attachment'] );\n\t\t}\n\n\t\tforeach ( $post_types as $post_type => $object ) {\n\t\t\tif ( true === Helper::get_settings( \"sitemap.pt_{$post_type}_sitemap\" ) ) {\n\t\t\t\t$p_defaults[] = $post_type;\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\t'defaults'   => $p_defaults,\n\t\t\t'post_types' => $post_types,\n\t\t];\n\t}\n\n\t\/**\n\t * Get taxonomies data.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_taxonomies() {\n\t\t$t_defaults = [];\n\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\tunset( $taxonomies['post_tag'], $taxonomies['post_format'], $taxonomies['product_tag'] );\n\t\t$taxonomies = wp_list_pluck( $taxonomies, 'label', 'name' );\n\t\tforeach ( $taxonomies as $taxonomy => $label ) {\n\t\t\tif ( true === Helper::get_settings( \"sitemap.tax_{$taxonomy}_sitemap\" ) ) {\n\t\t\t\t$t_defaults[] = $taxonomy;\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\t'defaults'   => $t_defaults,\n\t\t\t'taxonomies' => $taxonomies,\n\t\t];\n\t}\n\n\t\/**\n\t * Save Post Types\n\t *\n\t * @param array $settings Array of all settings.\n\t * @param array $values   Array of posted values.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function save_post_types( $settings, $values ) {\n\t\t$post_types = Helper::choices_post_types();\n\t\tif ( ! isset( $values['sitemap_post_types'] ) ) {\n\t\t\t$values['sitemap_post_types'] = [];\n\t\t}\n\n\t\tforeach ( $post_types as $post_type => $object ) {\n\t\t\t$settings['sitemap'][ \"pt_{$post_type}_sitemap\" ] = in_array( $post_type, $values['sitemap_post_types'], true ) ? 'on' : 'off';\n\t\t}\n\n\t\treturn $settings;\n\t}\n\n\t\/**\n\t * Save Taxonomies\n\t *\n\t * @param array $settings Array of all settings.\n\t * @param array $values   Array of posted values.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function save_taxonomies( $settings, $values ) {\n\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\t$taxonomies = wp_list_pluck( $taxonomies, 'label', 'name' );\n\t\tif ( ! isset( $values['sitemap_taxonomies'] ) ) {\n\t\t\t$values['sitemap_taxonomies'] = [];\n\t\t}\n\n\t\tforeach ( $taxonomies as $taxonomy => $label ) {\n\t\t\t$settings['sitemap'][ \"tax_{$taxonomy}_sitemap\" ] = in_array( $taxonomy, $values['sitemap_taxonomies'], true ) ? 'on' : 'off';\n\t\t}\n\n\t\treturn $settings;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-ready.php","ext":"php","size":1011,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Ready wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Ready implements Wizard_Step {\n\t\/**\n\t * Get Localized data to be used in the Compatibility step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\tHelper::is_configured( true );\n\t\treturn [\n\t\t\t'scoreImg'           => esc_url( rank_math()->plugin_url() . 'assets\/admin\/img\/score-100.png' ),\n\t\t\t'dashboardUrl'       => Helper::get_dashboard_url(),\n\t\t\t'enable_auto_update' => boolval( Helper::get_auto_update_setting() ),\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\t$value = ! empty( $values['enable_auto_update'] ) ? 'on' : 'off';\n\t\tHelper::toggle_auto_update_setting( $value );\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/wizard\/class-search-console.php","ext":"php","size":5532,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Search Console wizard step\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Wizard\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Wizard;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Google\\Permissions;\nuse RankMath\\Analytics\\Email_Reports;\nuse RankMath\\Analytics\\Workflow\\Objects;\nuse RankMath\\Analytics\\Workflow\\Console;\nuse RankMath\\Analytics\\Workflow\\Inspections;\n\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Step class.\n *\/\nclass Search_Console implements Wizard_Step {\n\n\t\/**\n\t * Get Localized data to be used in the Analytics step.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_localized_data() {\n\t\t$all_services = get_option(\n\t\t\t'rank_math_analytics_all_services',\n\t\t\t[\n\t\t\t\t'isVerified'           => '',\n\t\t\t\t'inSearchConsole'      => '',\n\t\t\t\t'hasSitemap'           => '',\n\t\t\t\t'hasAnalytics'         => '',\n\t\t\t\t'hasAnalyticsProperty' => '',\n\t\t\t\t'homeUrl'              => '',\n\t\t\t\t'sites'                => '',\n\t\t\t\t'accounts'             => [],\n\t\t\t\t'adsenseAccounts'      => [],\n\t\t\t]\n\t\t);\n\t\t$analytics    = wp_parse_args(\n\t\t\tget_option( 'rank_math_google_analytic_options' ),\n\t\t\t[\n\t\t\t\t'adsense_id'       => '',\n\t\t\t\t'account_id'       => '',\n\t\t\t\t'property_id'      => '',\n\t\t\t\t'view_id'          => '',\n\t\t\t\t'measurement_id'   => '',\n\t\t\t\t'stream_name'      => '',\n\t\t\t\t'country'          => 'all',\n\t\t\t\t'install_code'     => false,\n\t\t\t\t'anonymize_ip'     => false,\n\t\t\t\t'local_ga_js'      => false,\n\t\t\t\t'exclude_loggedin' => false,\n\t\t\t]\n\t\t);\n\n\t\t$page         = Param::get( 'page', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\t$page         = in_array( $page, [ 'rank-math-options-general', 'rank-math-analytics' ], true ) ? 'rank-math-options-general' : 'rank-math-wizard&step=analytics';\n\t\t$activate_url = Admin_Helper::get_activate_url( admin_url( 'admin.php?analytics=1&page=' . $page ) );\n\n\t\t$profile = wp_parse_args(\n\t\t\tget_option( 'rank_math_google_analytic_profile' ),\n\t\t\t[\n\t\t\t\t'profile'             => '',\n\t\t\t\t'country'             => 'all',\n\t\t\t\t'enable_index_status' => true,\n\t\t\t\t'sites'               => $all_services['sites'],\n\t\t\t]\n\t\t);\n\n\t\treturn [\n\t\t\t'isSiteConnected'        => Helper::is_site_connected(),\n\t\t\t'isAuthorized'           => Authentication::is_authorized(),\n\t\t\t'isSiteUrlValid'         => Admin_Helper::is_site_url_valid(),\n\t\t\t'hasConsolePermission'   => Permissions::has_console(),\n\t\t\t'hasAnalyticsPermission' => Permissions::has_analytics(),\n\t\t\t'hasAdsensePermission'   => Permissions::has_adsense(),\n\t\t\t'activateUrl'            => $activate_url,\n\t\t\t'authUrl'                => Authentication::get_auth_url(),\n\t\t\t'reconnectGoogleUrl'     => wp_nonce_url( admin_url( 'admin.php?reconnect=google' ), 'rank_math_reconnect_google' ),\n\t\t\t'showEmailReports'       => ! Email_Reports::are_fields_hidden(),\n\t\t\t'searchConsole'          => $profile,\n\t\t\t'console_email_reports'  => Helper::get_settings( 'general.console_email_reports' ),\n\t\t\t'analyticsData'          => $analytics,\n\t\t\t'allServices'            => $all_services,\n\t\t];\n\t}\n\n\t\/**\n\t * Save handler for step.\n\t *\n\t * @param array $values Values to save.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function save( $values ) {\n\t\tif ( isset( $values['console_email_reports'] ) ) {\n\t\t\t$settings                                     = rank_math()->settings->all_raw();\n\t\t\t$settings['general']['console_email_reports'] = $values['console_email_reports'] ? 'on' : 'off';\n\t\t\tHelper::update_all_settings( $settings['general'], null, null );\n\t\t}\n\n\t\t\/\/ For Search console.\n\t\tif ( isset( $values['searchConsole'] ) && ! empty( $values['searchConsole'] ) ) {\n\t\t\t$search_console_data = $values['searchConsole'];\n\t\t\t$value               = [\n\t\t\t\t'country'             => sanitize_text_field( $search_console_data['country'] ),\n\t\t\t\t'profile'             => sanitize_text_field( $search_console_data['profile'] ),\n\t\t\t\t'enable_index_status' => sanitize_text_field( $search_console_data['enable_index_status'] ),\n\t\t\t];\n\t\t\tupdate_option( 'rank_math_google_analytic_profile', $value );\n\t\t}\n\n\t\t\/\/ For Analytics.\n\t\tif ( isset( $values['analyticsData'] ) && ! empty( $values['analyticsData'] ) ) {\n\t\t\t$analytics_data = $values['analyticsData'];\n\t\t\t$analytic_value = [\n\t\t\t\t'adsense_id'       => sanitize_text_field( $analytics_data['adsense_id'] ),\n\t\t\t\t'account_id'       => sanitize_text_field( $analytics_data['account_id'] ),\n\t\t\t\t'property_id'      => sanitize_text_field( $analytics_data['property_id'] ),\n\t\t\t\t'view_id'          => sanitize_text_field( $analytics_data['view_id'] ),\n\t\t\t\t'measurement_id'   => sanitize_text_field( $analytics_data['measurement_id'] ),\n\t\t\t\t'stream_name'      => sanitize_text_field( $analytics_data['stream_name'] ),\n\t\t\t\t'country'          => sanitize_text_field( $analytics_data['country'] ),\n\t\t\t\t'install_code'     => sanitize_text_field( $analytics_data['install_code'] ),\n\t\t\t\t'anonymize_ip'     => sanitize_text_field( $analytics_data['anonymize_ip'] ),\n\t\t\t\t'local_ga_js'      => sanitize_text_field( $analytics_data['local_ga_js'] ),\n\t\t\t\t'exclude_loggedin' => sanitize_text_field( $analytics_data['exclude_loggedin'] ),\n\t\t\t];\n\t\t\tupdate_option( 'rank_math_google_analytic_options', $analytic_value );\n\t\t}\n\n\t\t$page = isset( $_GET['page'] ) ? sanitize_text_field( wp_unslash( $_GET['page'] ) ) : '';\n\t\tif ( 'rank-math-wizard' === $page ) {\n\t\t\tnew Objects();\n\t\t\tnew Console();\n\t\t\tnew Inspections();\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-bar-menu.php","ext":"php","size":13021,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Admin bar menu.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Meta;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin_Bar_Menu class.\n *\/\nclass Admin_Bar_Menu {\n\n\tuse Hooker;\n\tuse Ajax;\n\tuse Meta;\n\n\t\/**\n\t * The unique identifier used for the menu.\n\t *\n\t * @var string\n\t *\/\n\tconst MENU_IDENTIFIER = 'rank-math';\n\n\t\/**\n\t * Hold menu items.\n\t *\n\t * @var array\n\t *\/\n\tprivate $items = [];\n\n\t\/**\n\t * Constructor method.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->ajax( 'mark_page_as', 'mark_page_as' );\n\t\t$this->action( 'admin_bar_menu', 'add_menu', 100 );\n\t}\n\n\t\/**\n\t * AJAX function to mark page as Pillar Content\/Noindex\/Nofollow.\n\t *\/\n\tpublic function mark_page_as() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'onpage_general' );\n\n\t\t$what        = Param::post( 'what', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\t$object_id   = Param::post( 'objectID', 0, FILTER_VALIDATE_INT );\n\t\t$object_type = Param::post( 'objectType', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\n\t\tif ( ! $what || ! $object_id || ! $object_type ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( 'pillar_content' === $what ) {\n\t\t\t$current = $this->get_meta( $object_type, $object_id, 'rank_math_pillar_content' );\n\t\t\t$updated = 'on' === $current ? 'off' : 'on';\n\t\t\t$this->update_meta( $object_type, $object_id, 'rank_math_pillar_content', $updated );\n\t\t\tdie( '1' );\n\t\t}\n\n\t\tif ( 'noindex' === $what || 'nofollow' === $what ) {\n\t\t\t$robots = (array) $this->get_meta( $object_type, $object_id, 'rank_math_robots' );\n\t\t\t$robots = array_filter( $robots );\n\n\t\t\tArr::add_delete_value( $robots, $what );\n\t\t\t$robots = $this->normalize_robots( $what, array_unique( $robots ) );\n\n\t\t\t$this->update_meta( $object_type, $object_id, 'rank_math_robots', $robots );\n\n\t\t\tif ( 'noindex' === $what ) {\n\t\t\t\t$this->do_action( 'sitemap\/invalidate_object_type', $object_type, $object_id );\n\t\t\t}\n\n\t\t\tdie( '1' );\n\t\t}\n\n\t\tdie();\n\t}\n\n\t\/**\n\t * Add SEO item to admin bar with context-specific submenu items.\n\t *\n\t * @param WP_Admin_Bar $wp_admin_bar Admin bar instance to add the menu to.\n\t *\/\n\tpublic function add_menu( $wp_admin_bar ) {\n\t\tif ( ! $this->can_add_menu() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->add_root_menu();\n\n\t\tif ( Helper::has_cap( 'titles' ) ) {\n\t\t\t$this->add_page_menu();\n\t\t}\n\n\t\tif ( $this->is_front() ) {\n\t\t\t$this->add_seo_tools();\n\t\t}\n\n\t\tif ( $this->can_add_mark_menu() ) {\n\t\t\t$this->add_mark_page_menu();\n\t\t}\n\n\t\t\/**\n\t\t * Add item to rank math admin bar node.\n\t\t *\n\t\t * @param Admin_Bar_Menu $this Class instance.\n\t\t *\/\n\t\t$this->do_action( 'admin_bar\/items', $this );\n\n\t\t$this->add_order();\n\t\tuasort( $this->items, [ $this, 'sort_by_priority' ] );\n\t\tarray_walk( $this->items, [ $wp_admin_bar, 'add_node' ] );\n\t}\n\n\t\/**\n\t * Normalize robots.\n\t *\n\t * @param string $what   Current admin menu process.\n\t * @param array  $robots Array to normalize.\n\t *\n\t * @return array\n\t *\/\n\tprivate function normalize_robots( $what, $robots ) {\n\t\tif ( 'noindex' !== $what ) {\n\t\t\treturn $robots;\n\t\t}\n\n\t\tif ( ! in_array( 'noindex', $robots, true ) ) {\n\t\t\t$robots[] = ! in_array( 'index', $robots, true ) ? 'index' : '';\n\t\t\treturn $robots;\n\t\t}\n\n\t\tif ( false !== ( $key = array_search( 'index', $robots ) ) ) { \/\/ @codingStandardsIgnoreLine\n\t\t\tunset( $robots[ $key ] );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Keep original order when uasort() deals with equal \"priority\" values.\n\t *\/\n\tprivate function add_order() {\n\t\t$order = 0;\n\t\tforeach ( $this->items as &$item ) {\n\t\t\t$item['order'] = $order++;\n\t\t}\n\t}\n\n\t\/**\n\t * Add root menu.\n\t *\/\n\tprivate function add_root_menu() {\n\t\t$first_menu = get_transient( 'rank_math_first_submenu_id' );\n\t\t$first_menu = $first_menu && 'rank-math' !== $first_menu ? str_replace( 'rank-math-', '', $first_menu ) : '';\n\n\t\t$this->items['main'] = [\n\t\t\t'id'       => self::MENU_IDENTIFIER,\n\t\t\t'title'    => '<span class=\"rank-math-icon\">' . $this->get_icon() . '<\/span><span class=\"rank-math-text\">' . esc_html__( 'Rank Math SEO', 'rank-math' ) . '<\/span>',\n\t\t\t'href'     => Helper::get_admin_url( $first_menu ),\n\t\t\t'meta'     => [ 'title' => esc_html__( 'Rank Math Dashboard', 'rank-math' ) ],\n\t\t\t'priority' => 10,\n\t\t];\n\n\t\tif ( current_user_can( 'manage_options' ) ) {\n\t\t\t$this->add_sub_menu(\n\t\t\t\t'dashboard',\n\t\t\t\t[\n\t\t\t\t\t'title'    => esc_html__( 'Dashboard', 'rank-math' ),\n\t\t\t\t\t'href'     => $this->items['main']['href'],\n\t\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Dashboard', 'rank-math' ) ],\n\t\t\t\t\t'priority' => 20,\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Add page menu.\n\t *\/\n\tprivate function add_page_menu() {\n\t\t$hash = [\n\t\t\t'add_home_menu'      => is_front_page(),\n\t\t\t'add_post_type_menu' => is_singular( Helper::get_accessible_post_types() ) || is_home(),\n\t\t\t'add_date_menu'      => is_date(),\n\t\t\t'add_taxonomy_menu'  => is_archive() && ! is_post_type_archive() && ! is_author(),\n\t\t\t'add_search_menu'    => is_search(),\n\t\t];\n\n\t\tforeach ( $hash as $func => $can_run ) {\n\t\t\tif ( true === $can_run ) {\n\t\t\t\t$this->$func();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t\/**\n\t * Add homepage menu\n\t *\/\n\tprivate function add_home_menu() {\n\t\t$this->add_sub_menu(\n\t\t\t'home',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'Homepage SEO', 'rank-math' ),\n\t\t\t\t'href'     => Helper::get_settings_url( 'titles', 'homepage' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Edit Homepage SEO Settings', 'rank-math' ) ],\n\t\t\t\t'priority' => 35,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add post_type menu\n\t *\/\n\tprivate function add_post_type_menu() {\n\t\t$post_type = get_post_type();\n\t\tif ( ! $post_type ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$name = get_post_type_object( $post_type )->labels->name;\n\n\t\tif ( is_home() ) {\n\t\t\t$post_type = 'page';\n\t\t\t$name      = esc_html__( 'Pages', 'rank-math' );\n\t\t}\n\n\t\t$this->add_sub_menu(\n\t\t\t'posttype',\n\t\t\t[\n\t\t\t\t\/* translators: Post Type Singular Name *\/\n\t\t\t\t'title'    => sprintf( esc_html__( 'SEO Settings for %s', 'rank-math' ), $name ),\n\t\t\t\t'href'     => Helper::get_settings_url( 'titles', 'post-type-' . $post_type ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Edit default SEO settings for this post type', 'rank-math' ) ],\n\t\t\t\t'priority' => 35,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add taxonomy menu\n\t *\/\n\tprivate function add_taxonomy_menu() {\n\t\t$term = get_queried_object();\n\n\t\tif ( empty( $term ) || ! ( $term instanceof \\WP_Term ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$labels = get_taxonomy_labels( get_taxonomy( $term->taxonomy ) );\n\t\t$this->add_sub_menu(\n\t\t\t'tax',\n\t\t\t[\n\t\t\t\t\/* translators: Taxonomy Singular Name *\/\n\t\t\t\t'title'    => sprintf( esc_html__( 'SEO Settings for %s', 'rank-math' ), $labels->name ),\n\t\t\t\t'href'     => Helper::get_settings_url( 'titles', 'taxonomy-' . $term->taxonomy ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Edit SEO settings for this archive page', 'rank-math' ) ],\n\t\t\t\t'priority' => 35,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add date archive menu\n\t *\/\n\tprivate function add_date_menu() {\n\t\t$this->add_sub_menu(\n\t\t\t'date',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'SEO Settings for Date Archives', 'rank-math' ),\n\t\t\t\t'href'     => Helper::get_settings_url( 'titles', 'global' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Edit SEO settings for this archive page', 'rank-math' ) ],\n\t\t\t\t'priority' => 35,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add search result menu\n\t *\/\n\tprivate function add_search_menu() {\n\t\t$this->add_sub_menu(\n\t\t\t'search',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'SEO Settings for Search Page', 'rank-math' ),\n\t\t\t\t'href'     => Helper::get_settings_url( 'titles', 'global' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Edit SEO settings for the search results page', 'rank-math' ) ],\n\t\t\t\t'priority' => 35,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add mark page menu.\n\t *\/\n\tprivate function add_mark_page_menu() {\n\t\t$this->add_sub_menu(\n\t\t\t'mark-me',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'Mark this page', 'rank-math' ),\n\t\t\t\t'href'     => '#',\n\t\t\t\t'priority' => 100,\n\t\t\t]\n\t\t);\n\n\t\t$is_pillar_content = '';\n\t\t$dashicon_format   = '<span class=\"dashicons dashicons-%s rm-mark-page-icon\"><\/span>';\n\n\t\tif ( is_singular( Helper::get_accessible_post_types() ) ) {\n\t\t\tif ( get_post_meta( get_the_ID(), 'rank_math_pillar_content', true ) === 'on' ) {\n\t\t\t\t$is_pillar_content = sprintf( $dashicon_format, 'yes' );\n\t\t\t}\n\n\t\t\t$this->add_sub_menu(\n\t\t\t\t'pillar-content',\n\t\t\t\t[\n\t\t\t\t\t'title' => $is_pillar_content . esc_html__( 'As Pillar Content', 'rank-math' ),\n\t\t\t\t\t'href'  => '#pillar_content',\n\t\t\t\t\t'meta'  => [ 'class' => 'mark-page-as' ],\n\t\t\t\t],\n\t\t\t\t'mark-me'\n\t\t\t);\n\t\t}\n\n\t\tif ( Paper::get() ) {\n\t\t\t$robots        = Paper::get()->get_robots();\n\t\t\t$noindex_check = in_array( 'noindex', $robots, true ) ? sprintf( $dashicon_format, 'yes' ) : '';\n\t\t\t$this->add_sub_menu(\n\t\t\t\t'no-index',\n\t\t\t\t[\n\t\t\t\t\t'title' => $noindex_check . esc_html__( 'As NoIndex', 'rank-math' ),\n\t\t\t\t\t'href'  => '#noindex',\n\t\t\t\t\t'meta'  => [ 'class' => 'mark-page-as' ],\n\t\t\t\t],\n\t\t\t\t'mark-me'\n\t\t\t);\n\n\t\t\t$nofollow_check = in_array( 'nofollow', $robots, true ) ? sprintf( $dashicon_format, 'yes' ) : '';\n\t\t\t$this->add_sub_menu(\n\t\t\t\t'no-follow',\n\t\t\t\t[\n\t\t\t\t\t'title' => $nofollow_check . esc_html__( 'As NoFollow', 'rank-math' ),\n\t\t\t\t\t'href'  => '#nofollow',\n\t\t\t\t\t'meta'  => [ 'class' => 'mark-page-as' ],\n\t\t\t\t],\n\t\t\t\t'mark-me'\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Third party SEO Tools, like the Google Structured Data Testing Tool.\n\t *\/\n\tprivate function add_seo_tools() {\n\t\t$this->add_sub_menu(\n\t\t\t'third-party',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'External Tools', 'rank-math' ),\n\t\t\t\t'href'     => '#',\n\t\t\t\t'priority' => 200,\n\t\t\t]\n\t\t);\n\n\t\t$url   = rawurlencode( Url::get_current_url() );\n\t\t$items = [\n\t\t\t'google-pagespeed'           => [\n\t\t\t\t'title' => esc_html__( 'Google PageSpeed', 'rank-math' ),\n\t\t\t\t'href'  => 'https:\/\/developers.google.com\/speed\/pagespeed\/insights\/?url=' . $url,\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Google PageSpeed Insights', 'rank-math' ) ],\n\t\t\t],\n\n\t\t\t'google-richresults-mobile'  => [\n\t\t\t\t'title' => esc_html__( 'Google Rich Results (Mobile)', 'rank-math' ),\n\t\t\t\t'href'  => 'https:\/\/search.google.com\/test\/rich-results?url=' . $url . '&user_agent=1',\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Google Rich Results Test - Googlebot Smartphone', 'rank-math' ) ],\n\t\t\t],\n\n\t\t\t'google-richresults-desktop' => [\n\t\t\t\t'title' => esc_html__( 'Google Rich Results (Desktop)', 'rank-math' ),\n\t\t\t\t'href'  => 'https:\/\/search.google.com\/test\/rich-results?url=' . $url . '&user_agent=2',\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Google Rich Results Test - Googlebot Desktop', 'rank-math' ) ],\n\t\t\t],\n\n\t\t\t'fb-debugger'                => [\n\t\t\t\t'title' => esc_html__( 'Facebook Debugger', 'rank-math' ),\n\t\t\t\t'href'  => 'https:\/\/developers.facebook.com\/tools\/debug\/sharing\/?q=' . $url,\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Facebook Sharing Debugger', 'rank-math' ) ],\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $items as $id => $args ) {\n\t\t\t$args['meta']['target'] = '_blank';\n\t\t\t$this->add_sub_menu( $id, $args, 'third-party' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add sub menu item\n\t *\n\t * @param string $id          Unique ID for the node.\n\t * @param array  $args        Arguments for adding a node.\n\t * @param string $parent_node Node parent.\n\t *\/\n\tpublic function add_sub_menu( $id, $args, $parent_node = '' ) {\n\t\t$args['priority']   = isset( $args['priority'] ) ? $args['priority'] : 999;\n\t\t$args['id']         = 'rank-math-' . $id;\n\t\t$args['parent']     = '' !== $parent_node ? 'rank-math-' . $parent_node : self::MENU_IDENTIFIER;\n\t\t$this->items[ $id ] = $args;\n\t}\n\n\t\/**\n\t * Can current user has capability for admin menu.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_add_menu() {\n\t\treturn Helper::has_cap( 'admin_bar' );\n\t}\n\n\t\/**\n\t * Can add mark me menu.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_add_mark_menu() {\n\t\treturn $this->is_front() && Helper::has_cap( 'onpage_general' );\n\t}\n\n\t\/**\n\t * Is frontend.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_front() {\n\t\treturn ! is_admin() && ! is_preview();\n\t}\n\n\t\/**\n\t * Sort admin bar items callback.\n\t *\n\t * @param array $item1 Item A to compare.\n\t * @param array $item2 Item B to compare.\n\t *\n\t * @return integer\n\t *\/\n\tprivate function sort_by_priority( $item1, $item2 ) {\n\t\tif ( $item1['priority'] === $item2['priority'] ) {\n\t\t\treturn $item1['order'] < $item2['order'] ? -1 : 1;\n\t\t}\n\n\t\treturn $item1['priority'] < $item2['priority'] ? -1 : 1;\n\t}\n\n\t\/**\n\t * Get Rank Math icon.\n\t *\n\t * @param integer $width Width of the icon.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_icon( $width = 20 ) {\n\t\treturn '<svg viewBox=\"0 0 462.03 462.03\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"' . $width . '\"><g><path d=\"m462 234.84-76.17 3.43 13.43 21-127 81.18-126-52.93-146.26 60.97 10.14 24.34 136.1-56.71 128.57 54 138.69-88.61 13.43 21z\"\/><path d=\"m54.1 312.78 92.18-38.41 4.49 1.89v-54.58h-96.67zm210.9-223.57v235.05l7.26 3 89.43-57.05v-181zm-105.44 190.79 96.67 40.62v-165.19h-96.67z\"\/><\/g><\/svg>';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-breadcrumbs.php","ext":"php","size":1200,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Breadcrumbs for the Rank Math pages.\n *\n * @since      1.0.44\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Google\\Console;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin Header class.\n *\n * @codeCoverageIgnore\n *\/\nclass Admin_Breadcrumbs {\n\n\t\/**\n\t * Display Header.\n\t *\/\n\tpublic function display() {\n\t\t?>\n\t\t<div class=\"rank-math-breadcrumbs-wrap\">\n\t\t\t<div class=\"rank-math-breadcrumbs\">\n\t\t\t\t<span><?php echo esc_html__( 'Dashboard', 'rank-math' ); ?><\/span>\n\t\t\t\t<span class=\"divider\">\/<\/span>\n\t\t\t\t<span class=\"active\"><?php echo esc_html( $this->get_page_title() ); ?><\/span>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get Current Admin Page Title.\n\t *\/\n\tprivate function get_page_title() {\n\t\t$base = __( 'Modules', 'rank-math' );\n\t\tif ( is_network_admin() ) {\n\t\t\t$base = __( 'Help', 'rank-math' );\n\t\t}\n\t\t$default = 'rank-math' === Param::get( 'page' ) ? $base : get_admin_page_title();\n\t\treturn str_replace( '_', ' ', Param::get( 'view', $default, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-cmb2-options.php","ext":"php","size":12934,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The option page functionality of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse WP_Http;\nuse RankMath\\KB;\nuse RankMath\\CMB2;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * CMB2_Options class.\n *\/\nclass CMB2_Options {\n\n\tuse Hooker;\n\n\t\/**\n\t * Page title.\n\t *\n\t * @var string\n\t *\/\n\tpublic $title = 'Settings';\n\n\t\/**\n\t * Menu title.\n\t *\n\t * @var string\n\t *\/\n\tpublic $menu_title = 'Settings';\n\n\t\/**\n\t * Hold tabs for page.\n\t *\n\t * @var array\n\t *\/\n\tpublic $tabs = [];\n\n\t\/**\n\t * Hold folder name for tab files.\n\t *\n\t * @var string\n\t *\/\n\tpublic $folder = '';\n\n\t\/**\n\t * Menu Position.\n\t *\n\t * @var int\n\t *\/\n\tpublic $position = 10;\n\n\t\/**\n\t * The capability required for this menu to be displayed to the user.\n\t *\n\t * @var string\n\t *\/\n\tpublic $capability = 'manage_options';\n\n\t\/**\n\t * CMB2 option page id.\n\t *\n\t * @var string\n\t *\/\n\tprivate $cmb_id = null;\n\n\t\/**\n\t * Options key.\n\t *\n\t * @var string\n\t *\/\n\tpublic $key = '';\n\n\t\/**\n\t * The Constructor\n\t *\n\t * @param array $config Array of configuration.\n\t *\/\n\tpublic function __construct( $config ) {\n\n\t\t$this->config( $config );\n\t\t$this->cmb_id = $this->key . '_options';\n\n\t\t$this->action( 'cmb2_admin_init', 'register_option_page', $this->position );\n\t\t$this->action( 'admin_post_' . $this->key, 'reset_options', 2 );\n\n\t\tif ( true === empty( get_option( $this->key ) ) ) {\n\t\t\t$this->action( 'cmb2_init_hookup_' . $this->cmb_id, 'set_defaults', 11 );\n\t\t}\n\n\t\tif ( ! $this->is_current_page() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'admin_enqueue_scripts', 'enqueue' );\n\t\t$this->action( 'admin_body_class', 'body_class' );\n\n\t\t\/\/ Check for fields and act accordingly.\n\t\t$this->action( 'cmb2_save_options-page_fields_rank-math-options-general_options', 'check_updated_fields', 25, 2 );\n\t\t$this->action( 'cmb2_save_options-page_fields_rank-math-options-titles_options', 'check_updated_fields', 25, 2 );\n\t}\n\n\t\/**\n\t * Create cmb2 box.\n\t *\n\t * @return CMB2\n\t *\/\n\tprivate function create_cmb2() {\n\t\treturn new_cmb2_box(\n\t\t\t[\n\t\t\t\t'id'           => $this->cmb_id,\n\t\t\t\t'title'        => $this->title,\n\t\t\t\t'menu_title'   => $this->menu_title,\n\t\t\t\t'capability'   => $this->capability,\n\t\t\t\t'object_types' => [ 'options-page' ],\n\t\t\t\t'option_key'   => $this->key,\n\t\t\t\t'parent_slug'  => 'rank-math',\n\t\t\t\t'cmb_styles'   => false,\n\t\t\t\t'display_cb'   => [ $this, 'display' ],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Create option object and add settings.\n\t *\/\n\tpublic function register_option_page() {\n\t\t$cmb  = $this->create_cmb2();\n\t\t$tabs = $this->get_tabs();\n\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'      => 'setting-panel-container-' . $this->cmb_id,\n\t\t\t\t'type'    => 'tab_container_open',\n\t\t\t\t'classes' => 'before-header',\n\t\t\t\t'tabs'    => $tabs,\n\t\t\t]\n\t\t);\n\n\t\tforeach ( $tabs as $id => $tab ) {\n\t\t\t$located = $this->locate_file( $id, $tab );\n\t\t\tif ( false === $located ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$cmb->add_field(\n\t\t\t\t[\n\t\t\t\t\t'name'    => esc_html__( 'Panel', 'rank-math' ),\n\t\t\t\t\t'id'      => 'setting-panel-' . $id,\n\t\t\t\t\t'type'    => 'tab',\n\t\t\t\t\t'open'    => true,\n\t\t\t\t\t'classes' => isset( $tab['classes'] ) ? $tab['classes'] : '',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t$cmb->add_field(\n\t\t\t\t[\n\t\t\t\t\t'id'        => $id . '_section_title',\n\t\t\t\t\t'type'      => 'title',\n\t\t\t\t\t'name'      => isset( $tab['page_title'] ) ? $tab['page_title'] : ( isset( $tab['title'] ) ? $tab['title'] : '' ),\n\t\t\t\t\t'desc'      => isset( $tab['desc'] ) ? $tab['desc'] : '',\n\t\t\t\t\t'after'     => isset( $tab['after'] ) ? $tab['after'] : '',\n\t\t\t\t\t'classes'   => 'tab-header',\n\t\t\t\t\t'after_row' => isset( $tab['after_row'] ) ? $tab['after_row'] : '',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tinclude $located;\n\n\t\t\t$this->do_action( \"admin\/settings\/{$id}\", $cmb, $tab );\n\n\t\t\t$cmb->add_field(\n\t\t\t\t[\n\t\t\t\t\t'id'   => 'setting-panel-' . $id . '-close',\n\t\t\t\t\t'type' => 'tab',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'   => 'setting-panel-container-close-' . $this->cmb_id,\n\t\t\t\t'type' => 'tab_container_close',\n\t\t\t]\n\t\t);\n\n\t\tCMB2::pre_init( $cmb );\n\t}\n\n\t\/**\n\t * Set the default values if not set.\n\t *\n\t * @param CMB2 $cmb The CMB2 object to hookup.\n\t *\/\n\tpublic function set_defaults( $cmb ) {\n\t\tforeach ( $cmb->prop( 'fields' ) as $id => $field_args ) {\n\t\t\t$field = $cmb->get_field( $id );\n\t\t\tif ( isset( $field_args['default'] ) || isset( $field_args['default_cb'] ) ) {\n\t\t\t\t$defaults[ $id ] = $field->get_default();\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Save Defaults if any.\n\t\tif ( ! empty( $defaults ) ) {\n\t\t\tadd_option( $this->key, $defaults );\n\t\t}\n\t}\n\n\t\/**\n\t * Reset options.\n\t *\/\n\tpublic function reset_options() {\n\n\t\tif ( ! check_admin_referer( 'rank-math-reset-options' ) || ! current_user_can( 'manage_options' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$url = wp_get_referer();\n\t\tif ( ! $url ) {\n\t\t\t$url = admin_url();\n\t\t}\n\n\t\tif ( filter_has_var( INPUT_POST, 'reset-cmb' ) && Param::post( 'action' ) === $this->key ) {\n\t\t\tdelete_option( $this->key );\n\t\t\tHelper::redirect( esc_url_raw( $url ), WP_Http::SEE_OTHER );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue styles and scripts.\n\t *\/\n\tpublic function enqueue() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( ! Str::contains( $this->key, $screen->id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\\CMB2_Hookup::enqueue_cmb_css();\n\t\trank_math()->variables->setup_json();\n\t\twp_enqueue_style( 'rank-math-options', rank_math()->plugin_url() . 'assets\/admin\/css\/option-panel.css', [ 'select2-rm', 'rank-math-common', 'rank-math-cmb2' ], rank_math()->version );\n\t\twp_enqueue_script( 'rank-math-options', rank_math()->plugin_url() . 'assets\/admin\/js\/option-panel.js', [ 'underscore', 'select2-rm', 'lodash', 'rank-math-common', 'wp-api-fetch' ], rank_math()->version, true );\n\n\t\t\/\/ Add thank you.\n\t\tHelper::add_json( 'indexUrl', rank_math()->plugin_url() . 'assets\/admin\/js\/search-index\/' );\n\t\tHelper::add_json( 'optionPage', str_replace( 'rank-math-options-', '', $this->key ) );\n\t}\n\n\t\/**\n\t * Add classes to <body> of WordPress admin.\n\t *\n\t * @param string $classes List of CSS classes.\n\t * @return string\n\t *\/\n\tpublic function body_class( $classes = '' ) {\n\t\t$mode = Helper::is_advanced_mode() ? 'advanced' : 'basic';\n\t\treturn $classes . ' rank-math-page rank-math-mode-' . $mode;\n\t}\n\n\t\/**\n\t * Display Setting on a page.\n\t *\n\t * @param CMB2_Options $machine Current CMB2 box object.\n\t *\/\n\tpublic function display( $machine ) {\n\t\t$cmb = $machine->cmb;\n\n\t\t\/\/ Header.\n\t\trank_math()->admin->display_admin_header();\n\t\t?>\n\n\t\t<?php if ( ! defined( 'RANK_MATH_PRO_FILE' ) ) : ?>\n\t\t\t<div class=\"rank-math-unlock-pro-notice\" id=\"rank-math-unlock-pro-notice\">\n\t\t\t\t<a href=\"<?php KB::the( 'pro', 'Unlock PRO Options Panel Notice' ); ?>\" target=\"_blank\" class=\"pro-link\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<?php esc_html_e( 'Take your SEO to the Next Level!', 'rank-math' ); ?>\n\t\t\t\t\t\t<strong><?php esc_html_e( 'Get Rank Math PRO!', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t<span><?php esc_html_e( 'Click here to see all the exciting features.', 'rank-math' ); ?><\/span>\n\t\t\t\t\t<\/p>\n\t\t\t\t\t<div class=\"close-notice\">\n\t\t\t\t\t\t<span class=\"dashicons dashicons-dismiss\"><\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/a>\n\t\t\t<\/div>\n\t\t<?php endif; ?>\n\n\t\t<div class=\"wrap rank-math-wrap rank-math-wrap-settings\">\n\n\t\t\t<span class=\"wp-header-end\"><\/span>\n\n\t\t\t<form class=\"cmb-form\" action=\"<?php echo esc_url( admin_url( 'admin-post.php' ) ); ?>\" method=\"POST\" id=\"<?php echo esc_attr( $cmb->cmb_id ); ?>\" enctype=\"multipart\/form-data\" encoding=\"multipart\/form-data\">\n\n\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo esc_attr( $machine->option_key ); ?>\">\n\t\t\t\t<?php $machine->options_page_metabox(); ?>\n\n\t\t\t\t<footer class=\"form-footer rank-math-ui settings-footer wp-clearfix\">\n\t\t\t\t\t<?php wp_nonce_field( 'rank-math-reset-options' ); ?>\n\t\t\t\t\t<input type=\"submit\" name=\"submit-cmb\" id=\"submit-cmb\" title=\"<?php echo esc_html__( 'Ctrl\/Cmd + Enter', 'rank-math' ); ?>\" class=\"button button-primary save-options\" value=\"<?php esc_attr_e( 'Save Changes', 'rank-math' ); ?>\">\n\t\t\t\t\t<input type=\"submit\" name=\"reset-cmb\" id=\"rank-math-reset-cmb\" value=\"<?php esc_attr_e( 'Reset Options', 'rank-math' ); ?>\" class=\"button button-secondary reset-options alignleft\">\n\t\t\t\t<\/footer>\n\n\t\t\t<\/form>\n\n\t\t<\/div>\n\n\t\t<?php\n\t}\n\n\t\/**\n\t * Check if we are on the correct page.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_current_page() {\n\t\treturn Param::request( 'page' ) === $this->key || Param::request( 'action' ) === $this->key;\n\t}\n\n\t\/**\n\t * Check if certain fields got updated.\n\t *\n\t * @param int   $object_id The ID of the current object.\n\t * @param array $updated   Array of field ids that were updated.\n\t *                         Will only include field ids that had values change.\n\t *\/\n\tpublic function check_updated_fields( $object_id, $updated ) {\n\n\t\t\/**\n\t\t * Filter: Allow developers to add option fields which will flush the rewrite rules when updated.\n\t\t *\n\t\t * @param array $flush_fields Array of field IDs for which we need to flush.\n\t\t *\/\n\t\t$flush_fields = $this->do_filter(\n\t\t\t'flush_fields',\n\t\t\t[\n\t\t\t\t'strip_category_base',\n\t\t\t\t'disable_author_archives',\n\t\t\t\t'url_author_base',\n\t\t\t\t'attachment_redirect_urls',\n\t\t\t\t'attachment_redirect_default',\n\t\t\t\t'nofollow_external_links',\n\t\t\t\t'nofollow_image_links',\n\t\t\t\t'nofollow_domains',\n\t\t\t\t'nofollow_exclude_domains',\n\t\t\t\t'new_window_external_links',\n\t\t\t\t'redirections_header_code',\n\t\t\t\t'redirections_post_redirect',\n\t\t\t\t'redirections_debug',\n\t\t\t]\n\t\t);\n\n\t\tforeach ( $flush_fields as $field_id ) {\n\t\t\tif ( in_array( $field_id, $updated, true ) ) {\n\t\t\t\tHelper::schedule_flush_rewrite();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$this->maybe_update_htaccess();\n\t}\n\n\t\/**\n\t * Update .htaccess.\n\t *\/\n\tprivate function maybe_update_htaccess() {\n\t\tif ( empty( Param::post( 'htaccess_accept_changes' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! is_super_admin() || ! Helper::has_cap( 'general' ) || ! Helper::has_cap( 'edit_htaccess' ) ) {\n\t\t\tHelper::add_notification(\n\t\t\t\tesc_html__( 'You do not have permission to edit the .htaccess file.', 'rank-math' ),\n\t\t\t\t[ 'type' => 'error' ]\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::is_edit_allowed() ) {\n\t\t\tHelper::add_notification(\n\t\t\t\tesc_html__( 'You do not have permission to edit the .htaccess file.', 'rank-math' ),\n\t\t\t\t[ 'type' => 'error' ]\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ phpcs:ignore= WordPress.Security.ValidatedSanitizedInput, WordPress.Security.NonceVerification -- Writing to .htaccess file and escaping for HTML will break functionality & CMB2 package handles the nonce verification\n\t\t$content = isset( $_POST['htaccess_content'] ) ? wp_unslash( $_POST['htaccess_content'] ) : '';\n\t\tif ( empty( $content ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! $this->do_htaccess_backup() ) {\n\t\t\tHelper::add_notification(\n\t\t\t\tesc_html__( 'Failed to backup .htaccess file. Please check file permissions.', 'rank-math' ),\n\t\t\t\t[ 'type' => 'error' ]\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tif ( ! $this->do_htaccess_update( $content ) ) {\n\t\t\tHelper::add_notification(\n\t\t\t\tesc_html__( 'Failed to update .htaccess file. Please check file permissions.', 'rank-math' ),\n\t\t\t\t[ 'type' => 'error' ]\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::add_notification( esc_html__( '.htaccess file updated successfully.', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Create htaccess backup.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function do_htaccess_backup() {\n\t\tif ( ! Helper::is_filesystem_direct() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\n\t\t$path = get_home_path();\n\t\t$file = $path . '.htaccess';\n\t\tif ( ! $wp_filesystem->is_writable( $path ) || ! $wp_filesystem->exists( $file ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$backup = $path . uniqid( '.htaccess_back_' );\n\t\treturn $wp_filesystem->copy( $file, $backup, true );\n\t}\n\n\t\/**\n\t * Update htaccess file.\n\t *\n\t * @param string $content Htaccess content.\n\t * @return string|bool\n\t *\/\n\tprivate function do_htaccess_update( $content ) {\n\t\tif ( empty( $content ) || ! Helper::is_filesystem_direct() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\t\t$htaccess_file = get_home_path() . '.htaccess';\n\n\t\treturn ! $wp_filesystem->is_writable( $htaccess_file ) ? false : $wp_filesystem->put_contents( $htaccess_file, $content );\n\t}\n\n\n\t\/**\n\t * Get setting tabs.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_tabs() {\n\n\t\t$filter = str_replace( '-', '_', str_replace( 'rank-math-', '', $this->key ) );\n\t\t\/**\n\t\t * Allow developers to add new tabs into option panel.\n\t\t *\n\t\t * The dynamic part of hook is, page name without 'rank-math-' prefix.\n\t\t *\n\t\t * @param array $tabs\n\t\t *\/\n\t\treturn $this->do_filter( \"admin\/options\/{$filter}_tabs\", $this->tabs );\n\t}\n\n\t\/**\n\t * Locate tab options file.\n\t *\n\t * @param  string $id  Tab id.\n\t * @param  array  $tab Tab options.\n\t * @return string|boolean\n\t *\/\n\tprivate function locate_file( $id, $tab ) {\n\t\tif ( isset( $tab['type'] ) && 'seprator' === $tab['type'] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$file = isset( $tab['file'] ) && ! empty( $tab['file'] ) ? $tab['file'] : rank_math()->includes_dir() . \"settings\/{$this->folder}\/{$id}.php\";\n\n\t\treturn file_exists( $file ) ? $file : false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/metabox\/class-screen.php","ext":"php","size":12844,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Metabox localization methods.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Metabox\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Metabox;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Meta;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Locale;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Screen.\n *\/\nclass Screen implements IScreen {\n\n\tuse Meta;\n\tuse Hooker;\n\n\t\/**\n\t * Current screen object.\n\t *\n\t * @var IScreen\n\t *\/\n\tprivate $screen = null;\n\n\t\/**\n\t * Class construct\n\t *\/\n\tpublic function __construct() {\n\t\t$this->load_screen();\n\t}\n\n\t\/**\n\t * Is creen loaded.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_loaded() {\n\t\treturn ! is_null( $this->screen );\n\t}\n\n\t\/**\n\t * Get object id\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_object_id() {\n\t\treturn $this->screen->get_object_id();\n\t}\n\n\t\/**\n\t * Get object type\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_object_type() {\n\t\treturn $this->screen->get_object_type();\n\t}\n\n\t\/**\n\t * Get object types to register metabox to\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_types() {\n\t\treturn $this->screen->get_object_types();\n\t}\n\n\t\/**\n\t * Enqueue Styles and Scripts required for screen.\n\t *\/\n\tpublic function enqueue() {\n\t\t$this->screen->enqueue();\n\t}\n\n\t\/**\n\t * Get analysis to run.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_analysis() {\n\t\t$analyses = $this->do_filter(\n\t\t\t'researches\/tests',\n\t\t\t$this->screen->get_analysis(),\n\t\t\t$this->screen->get_object_type()\n\t\t);\n\n\t\treturn array_keys( $analyses );\n\t}\n\n\t\/**\n\t * Get values for localize.\n\t *\/\n\tpublic function localize() {\n\t\t$values = $this->get_values();\n\t\tif ( empty( $values ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $values as $key => $value ) {\n\t\t\tHelper::add_json( $key, $value );\n\t\t}\n\t}\n\n\t\/**\n\t * Get common values.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_values() {\n\t\t$editor      = Helper::get_current_editor();\n\t\t$trends_link = KB::get( 'pro', 'CE General Tab Trends' );\n\t\tif ( 'gutenberg' === $editor ) {\n\t\t\t$trends_link = KB::get( 'pro', 'Gutenberg General Tab Trends' );\n\t\t} elseif ( 'elementor' === $editor ) {\n\t\t\t$trends_link = KB::get( 'pro', 'Elementor General Tab Trends' );\n\t\t}\n\n\t\t$values = array_merge_recursive(\n\t\t\t$this->screen->get_values(),\n\t\t\t[\n\t\t\t\t'homeUrl'             => home_url(),\n\t\t\t\t'objectID'            => $this->get_object_id(),\n\t\t\t\t'objectType'          => $this->get_object_type(),\n\t\t\t\t'locale'              => Locale::get_site_language(),\n\t\t\t\t'localeFull'          => get_locale(),\n\t\t\t\t'overlayImages'       => Helper::choices_overlay_images(),\n\t\t\t\t'defautOgImage'       => Helper::get_settings( 'titles.open_graph_image', rank_math()->plugin_url() . 'assets\/admin\/img\/social-placeholder.jpg' ),\n\t\t\t\t'customPermalinks'    => (bool) get_option( 'permalink_structure', false ),\n\t\t\t\t'isUserRegistered'    => Helper::is_site_connected(),\n\t\t\t\t'autoSuggestKeywords' => Helper::is_site_connected(),\n\t\t\t\t'connectSiteUrl'      => Admin_Helper::get_activate_url( Url::get_current_url() ),\n\t\t\t\t'maxTags'             => $this->do_filter( 'focus_keyword\/maxtags', 5 ),\n\t\t\t\t'trendsIcon'          => Admin_Helper::get_trends_icon_svg(),\n\t\t\t\t'showScore'           => Helper::is_score_enabled(),\n\t\t\t\t'siteFavIcon'         => $this->get_site_icon(),\n\t\t\t\t'canUser'             => [\n\t\t\t\t\t'general'    => Helper::has_cap( 'onpage_general' ),\n\t\t\t\t\t'advanced'   => Helper::has_cap( 'onpage_advanced' ) && Helper::is_advanced_mode(),\n\t\t\t\t\t'snippet'    => Helper::has_cap( 'onpage_snippet' ),\n\t\t\t\t\t'social'     => Helper::has_cap( 'onpage_social' ),\n\t\t\t\t\t'analysis'   => Helper::has_cap( 'onpage_analysis' ),\n\t\t\t\t\t'analytics'  => Helper::has_cap( 'analytics' ),\n\t\t\t\t\t'content_ai' => Helper::has_cap( 'content_ai' ),\n\t\t\t\t],\n\t\t\t\t'showKeywordIntent'   => Helper::should_determine_search_intent(),\n\t\t\t\t'assessor'            => [\n\t\t\t\t\t'serpData'        => $this->get_object_values(),\n\t\t\t\t\t'powerWords'      => $this->power_words(),\n\t\t\t\t\t'diacritics'      => $this->diacritics(),\n\t\t\t\t\t'researchesTests' => $this->get_analysis(),\n\t\t\t\t\t'hasRedirection'  => Helper::is_module_active( 'redirections' ),\n\t\t\t\t\t'hasBreadcrumb'   => Helper::is_breadcrumbs_enabled(),\n\t\t\t\t],\n\t\t\t\t'isPro'               => defined( 'RANK_MATH_PRO_FILE' ),\n\t\t\t\t'is_front_page'       => Admin_Helper::is_home_page(),\n\t\t\t\t'trendsUpgradeLink'   => esc_url_raw( $trends_link ),\n\t\t\t\t'trendsUpgradeLabel'  => esc_html__( 'Upgrade', 'rank-math' ),\n\t\t\t\t'trendsPreviewImage'  => esc_url( rank_math()->plugin_url() . 'assets\/admin\/img\/trends-preview.jpg' ),\n\t\t\t\t'currentEditor'       => $editor,\n\t\t\t\t'homepageData'        => [\n\t\t\t\t\t'assessor' => [\n\t\t\t\t\t\t'powerWords'      => $this->power_words(),\n\t\t\t\t\t\t'diacritics'      => $this->diacritics(),\n\t\t\t\t\t\t'researchesTests' => $this->get_analysis(),\n\t\t\t\t\t\t'hasBreadcrumb'   => Helper::is_breadcrumbs_enabled(),\n\t\t\t\t\t\t'serpData'        => [\n\t\t\t\t\t\t\t'title'               => Helper::get_settings( 'titles.homepage_title' ),\n\t\t\t\t\t\t\t'description'         => Helper::get_settings( 'titles.homepage_description', '' ),\n\t\t\t\t\t\t\t'titleTemplate'       => '%sitename% %page% %sep% %sitedesc%',\n\t\t\t\t\t\t\t'descriptionTemplate' => '',\n\t\t\t\t\t\t\t'focusKeywords'       => '',\n\t\t\t\t\t\t\t'breadcrumbTitle'     => Helper::get_settings( 'general.breadcrumbs_home_label' ),\n\t\t\t\t\t\t\t'robots'              => $this->normalize_robots( Helper::get_settings( 'titles.homepage_robots' ) ),\n\t\t\t\t\t\t\t'advancedRobots'      => $this->normalize_advanced_robots( Helper::get_settings( 'titles.homepage_advanced_robots' ) ),\n\n\t\t\t\t\t\t\t\/\/ Facebook.\n\t\t\t\t\t\t\t'facebookTitle'       => Helper::get_settings( 'titles.homepage_facebook_title', '' ),\n\t\t\t\t\t\t\t'facebookDescription' => Helper::get_settings( 'titles.homepage_facebook_description', '' ),\n\t\t\t\t\t\t\t'facebookImage'       => Helper::get_settings( 'titles.homepage_facebook_image', '' ),\n\t\t\t\t\t\t\t'facebookImageID'     => Helper::get_settings( 'titles.homepage_facebook_image_id', '' ),\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t$values = $this->do_filter( 'metabox\/values', $values, $this );\n\t\treturn $this->do_filter( 'metabox\/' . $this->get_object_type() . '\/values', $values, $this );\n\t}\n\n\t\/**\n\t * Get object values for localize\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_values() {\n\t\t$keys = $this->do_filter(\n\t\t\t'metabox\/' . $this->get_object_type() . '\/meta_keys',\n\t\t\t[\n\t\t\t\t'title'                    => 'title',\n\t\t\t\t'description'              => 'description',\n\t\t\t\t'focusKeywords'            => 'focus_keyword',\n\t\t\t\t'pillarContent'            => 'pillar_content',\n\t\t\t\t'canonicalUrl'             => 'canonical_url',\n\t\t\t\t'breadcrumbTitle'          => 'breadcrumb_title',\n\t\t\t\t'advancedRobots'           => 'advanced_robots',\n\n\t\t\t\t\/\/ Facebook.\n\t\t\t\t'facebookTitle'            => 'facebook_title',\n\t\t\t\t'facebookDescription'      => 'facebook_description',\n\t\t\t\t'facebookImage'            => 'facebook_image',\n\t\t\t\t'facebookImageID'          => 'facebook_image_id',\n\t\t\t\t'facebookHasOverlay'       => 'facebook_enable_image_overlay',\n\t\t\t\t'facebookImageOverlay'     => 'facebook_image_overlay',\n\t\t\t\t'facebookAuthor'           => 'facebook_author',\n\n\t\t\t\t\/\/ Twitter.\n\t\t\t\t'twitterCardType'          => 'twitter_card_type',\n\t\t\t\t'twitterUseFacebook'       => 'twitter_use_facebook',\n\t\t\t\t'twitterTitle'             => 'twitter_title',\n\t\t\t\t'twitterDescription'       => 'twitter_description',\n\t\t\t\t'twitterImage'             => 'twitter_image',\n\t\t\t\t'twitterImageID'           => 'twitter_image_id',\n\t\t\t\t'twitterHasOverlay'        => 'twitter_enable_image_overlay',\n\t\t\t\t'twitterImageOverlay'      => 'twitter_image_overlay',\n\n\t\t\t\t\/\/ Player.\n\t\t\t\t'twitterPlayerUrl'         => 'twitter_player_url',\n\t\t\t\t'twitterPlayerSize'        => 'twitter_player_size',\n\t\t\t\t'twitterPlayerStream'      => 'twitter_player_stream',\n\t\t\t\t'twitterPlayerStreamCtype' => 'twitter_player_stream_ctype',\n\n\t\t\t\t\/\/ App.\n\t\t\t\t'twitterAppDescription'    => 'twitter_app_description',\n\t\t\t\t'twitterAppIphoneName'     => 'twitter_app_iphone_name',\n\t\t\t\t'twitterAppIphoneID'       => 'twitter_app_iphone_id',\n\t\t\t\t'twitterAppIphoneUrl'      => 'twitter_app_iphone_url',\n\t\t\t\t'twitterAppIpadName'       => 'twitter_app_ipad_name',\n\t\t\t\t'twitterAppIpadID'         => 'twitter_app_ipad_id',\n\t\t\t\t'twitterAppIpadUrl'        => 'twitter_app_ipad_url',\n\t\t\t\t'twitterAppGoogleplayName' => 'twitter_app_googleplay_name',\n\t\t\t\t'twitterAppGoogleplayID'   => 'twitter_app_googleplay_id',\n\t\t\t\t'twitterAppGoogleplayUrl'  => 'twitter_app_googleplay_url',\n\t\t\t\t'twitterAppCountry'        => 'twitter_app_country',\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Generate data.\n\t\t$data        = [];\n\t\t$object_id   = $this->get_object_id();\n\t\t$object_type = $this->get_object_type();\n\t\tforeach ( $keys as $id => $key ) {\n\t\t\t$data[ $id ] = $this->get_meta( $object_type, $object_id, 'rank_math_' . $key );\n\t\t}\n\n\t\t\/\/ Robots.\n\t\t$data['robots'] = $this->normalize_robots( $this->get_meta( $object_type, $object_id, 'rank_math_robots' ) );\n\n\t\t\/\/ Advanced Robots.\n\t\t$data['advancedRobots'] = $this->normalize_advanced_robots( $this->get_meta( $object_type, $object_id, 'rank_math_advanced_robots' ) );\n\n\t\t$data['pillarContent'] = 'on' === $data['pillarContent'];\n\n\t\t\/\/ Username, avatar & Name.\n\t\t$twitter_username           = Helper::get_settings( 'titles.twitter_author_names' );\n\t\t$data['twitterAuthor']      = $twitter_username ? $twitter_username : esc_html__( 'username', 'rank-math' );\n\t\t$data['twitterUseFacebook'] = 'off' === $data['twitterUseFacebook'] ? false : true;\n\t\t$data['facebookHasOverlay'] = empty( $data['facebookHasOverlay'] ) || 'off' === $data['facebookHasOverlay'] ? false : true;\n\t\t$data['twitterHasOverlay']  = empty( $data['twitterHasOverlay'] ) || 'off' === $data['twitterHasOverlay'] ? false : true;\n\n\t\treturn wp_parse_args( $this->screen->get_object_values(), $data );\n\t}\n\n\t\/**\n\t * Get site fav icon.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_site_icon() {\n\t\t$favicon = get_site_icon_url( 16 );\n\n\t\treturn ! empty( $favicon ) ? $favicon : 'data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8\/9hAAABs0lEQVR4AWL4\/\/8\/RRjO8Iucx+noO0MWUDo16FYABMGP6ZfUcRnWtm27jVPbtm3bttuH2t3eFPcY9pLz7NxiLjCyVd87pKnHyqXyxtCs8APd0rnyxiu4qSeA3QEDrAwBDrT1s1Rc\/OrjLZwqVmOSu6+Lamcpp2KKMA9PH1BYXMe1mUP5qotvXTywsOEEYHXxrY+3cqk6TMkYpNr2FeoY3KIr0RPtn9wQ2unlA+GMkRw6+9TFw4YTwDUzx\/JVvARj9KaedXRO8P5B1Du2S32smzqUrcKGEyA+uAgQjKX7zf0boWHGfn71jIKj2689gxp7OAGShNcBUmLMPVjZuiKcA2vuWHHDCQxMCz629kXAIU4ApY15QwggAFbfOP9DhgBJ+nWVJ1AZAfICAj1pAlY6hCADZnveQf7bQIwzVONGJonhLIlS9gr5mFg44Xd+4S3XHoGNPdJl1INIwKyEgHckEhgTe1bGiFY9GSFBYUwLh1IkiJUbY407E7syBSFxKTszEoiE\/YdrgCEayDmtaJwCI9uu8TKMuZSVfSa4BpGgzvomBR\/INhLGzrqDotp01ZR8pn\/1L0JN9d9XNyx0AAAAAElFTkSuQmCC';\n\t}\n\n\t\/**\n\t * Normalize robots.\n\t *\n\t * @param array $robots Array to normalize.\n\t *\n\t * @return array\n\t *\/\n\tprivate function normalize_robots( $robots ) {\n\t\tif ( ! is_array( $robots ) || empty( $robots ) ) {\n\t\t\t$robots = Helper::get_robots_defaults();\n\t\t}\n\n\t\treturn array_fill_keys( $robots, true );\n\t}\n\n\t\/**\n\t * Normalize advanced robots.\n\t *\n\t * @param array $advanced_robots Array to normalize.\n\t *\n\t * @return array\n\t *\/\n\tprivate function normalize_advanced_robots( $advanced_robots ) {\n\t\tif ( ! empty( $advanced_robots ) ) {\n\t\t\treturn $advanced_robots;\n\t\t}\n\n\t\treturn Helper::get_advanced_robots_defaults();\n\t}\n\n\t\/**\n\t * Return power words.\n\t *\n\t * @return array\n\t *\/\n\tprivate function power_words() {\n\t\tstatic $words;\n\t\t$locale = Locale::get_site_language();\n\t\t$file   = rank_math()->plugin_dir() . 'assets\/vendor\/powerwords\/' . $locale . '.php';\n\t\tif ( ! file_exists( $file ) ) {\n\t\t\treturn $this->do_filter( 'metabox\/power_words', [], $locale );\n\t\t}\n\n\t\t$words = $words ? $words : include $file;\n\t\treturn $this->do_filter( 'metabox\/power_words', array_map( 'strtolower', $words ), $locale );\n\t}\n\n\t\/**\n\t * Get diacritics (accents).\n\t *\n\t * @return array\n\t *\/\n\tprivate function diacritics() {\n\t\t$locale = Locale::get_site_language();\n\t\t$locale = in_array( $locale, [ 'en', 'de', 'ru' ], true ) ? $locale : 'en';\n\t\t$file   = rank_math()->plugin_dir() . 'assets\/vendor\/diacritics\/' . $locale . '.php';\n\t\tif ( ! file_exists( $file ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$diacritics = include_once $file;\n\t\treturn $this->do_filter( 'metabox\/diacritics', $diacritics, $locale );\n\t}\n\n\t\/**\n\t * Load required screen.\n\t *\n\t * @param string $manual To load any screen manually.\n\t *\/\n\tpublic function load_screen( $manual = '' ) {\n\t\tif ( Admin_Helper::is_post_edit() || 'post' === $manual || Helper::is_site_editor() ) {\n\t\t\t$this->screen = new Post_Screen();\n\t\t\treturn;\n\t\t}\n\n\t\t$doing_quick_edit = Param::request( 'action' ) === 'inline-save-tax';\n\t\tif ( Admin_Helper::is_term_edit() || 'term' === $manual || $doing_quick_edit ) {\n\t\t\t$this->screen = new Taxonomy_Screen();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( User_Screen::is_enable() || 'user' === $manual ) {\n\t\t\t$this->screen = new User_Screen();\n\t\t\treturn;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/metabox\/class-post-screen.php","ext":"php","size":12256,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The post metabox screen.\n *\n * @since      1.0.25\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Metabox\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Metabox;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Editor;\nuse RankMath\\Frontend_SEO_Score;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post metabox class.\n *\/\nclass Post_Screen implements IScreen {\n\n\tuse Hooker;\n\n\t\/**\n\t * Hold primary taxonomy\n\t *\n\t * @var object\n\t *\/\n\tprivate $primary_taxonomy = null;\n\n\t\/**\n\t * Class construct\n\t *\/\n\tpublic function __construct() {\n\t\t$this->filter( 'rank_math\/researches\/tests', 'remove_tests', 10, 2 );\n\t}\n\n\t\/**\n\t * Get object id\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_object_id() {\n\t\tglobal $post;\n\n\t\treturn ! empty( $post->ID ) ? $post->ID : '';\n\t}\n\n\t\/**\n\t * Get object type\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_object_type() {\n\t\treturn 'post';\n\t}\n\n\t\/**\n\t * Get object types to register metabox to\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_types() {\n\t\treturn Helper::get_allowed_post_types();\n\t}\n\n\t\/**\n\t * Enqueue Styles and Scripts required for screen.\n\t *\/\n\tpublic function enqueue() {\n\t\t$is_elementor    = Helper::is_elementor_editor();\n\t\t$is_block_editor = Helper::is_block_editor() && \\rank_math_is_gutenberg();\n\n\t\tHelper::add_json( 'postType', get_post_type() );\n\n\t\tif ( ! $is_elementor ) {\n\t\t\t$this->enqueue_custom_fields();\n\t\t}\n\n\t\twp_register_script(\n\t\t\t'rank-math-formats',\n\t\t\trank_math()->plugin_url() . 'assets\/admin\/js\/gutenberg-formats.js',\n\t\t\t[],\n\t\t\trank_math()->version,\n\t\t\ttrue\n\t\t);\n\n\t\tif ( $is_block_editor || $is_elementor ) {\n\t\t\t$this->enqueue_commons();\n\t\t}\n\n\t\tif ( $is_block_editor && ! $is_elementor && Editor::can_add_editor() ) {\n\t\t\t$this->enqueue_for_gutenberg();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $is_elementor ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Classic.\n\t\tif ( Helper::is_block_editor() ) {\n\t\t\twp_enqueue_script( 'rank-math-formats' );\n\t\t}\n\n\t\tif ( $is_block_editor ) {\n\t\t\twp_enqueue_script( 'rank-math-primary-term', rank_math()->plugin_url() . 'assets\/admin\/js\/gutenberg-primary-term.js', [], rank_math()->version, true );\n\t\t}\n\t}\n\n\t\/**\n\t * Get values for localize.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_values() {\n\t\t$post_type = $this->get_current_post_type();\n\n\t\treturn [\n\t\t\t'parentDomain'           => Url::get_domain( home_url() ),\n\t\t\t'noFollowDomains'        => Str::to_arr_no_empty( Helper::get_settings( 'general.nofollow_domains' ) ),\n\t\t\t'noFollowExcludeDomains' => Str::to_arr_no_empty( Helper::get_settings( 'general.nofollow_exclude_domains' ) ),\n\t\t\t'noFollowExternalLinks'  => Helper::get_settings( 'general.nofollow_external_links' ),\n\t\t\t'featuredImageNotice'    => esc_html__( 'The featured image should be at least 200 by 200 pixels to be picked up by Facebook and other social media sites.', 'rank-math' ),\n\t\t\t'pluginReviewed'         => $this->plugin_reviewed(),\n\t\t\t'postSettings'           => [\n\t\t\t\t'linkSuggestions' => Helper::get_settings( 'titles.pt_' . $post_type . '_link_suggestions' ),\n\t\t\t\t'useFocusKeyword' => 'focus_keywords' === Helper::get_settings( 'titles.pt_' . $post_type . '_ls_use_fk' ),\n\t\t\t],\n\t\t\t'frontEndScore'          => Frontend_SEO_Score::show_on(),\n\t\t\t'postName'               => get_post_field( 'post_name', get_post() ),\n\t\t\t'permalinkFormat'        => $this->get_permalink_format(),\n\t\t\t'showLockModifiedDate'   => Editor::can_add_lock_modified_date(),\n\t\t\t'assessor'               => [\n\t\t\t\t'focusKeywordLink' => admin_url( 'edit.php?focus_keyword=%focus_keyword%&post_type=%post_type%' ),\n\t\t\t\t'hasTOCPlugin'     => $this->has_toc_plugin(),\n\t\t\t\t'primaryTaxonomy'  => $this->get_primary_taxonomy(),\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Get object values for localize\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_values() {\n\t\tglobal $post;\n\t\tif ( empty( $post ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn [\n\t\t\t'primaryTerm'         => $this->get_primary_term_id(),\n\t\t\t'authorName'          => get_the_author_meta( 'display_name', $post->post_author ),\n\t\t\t'titleTemplate'       => Helper::get_settings( \"titles.pt_{$post->post_type}_title\", '%title% %sep% %sitename%' ),\n\t\t\t'descriptionTemplate' => Helper::get_settings( \"titles.pt_{$post->post_type}_description\", '' ),\n\t\t\t'showScoreFrontend'   => ! Helper::get_post_meta( 'dont_show_seo_score', $this->get_object_id() ),\n\t\t\t'lockModifiedDate'    => ! empty( Helper::get_post_meta( 'lock_modified_date', $this->get_object_id() ) ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get analysis to run.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_analysis() {\n\t\t$tests = [\n\t\t\t'contentHasTOC'             => true,\n\t\t\t'contentHasShortParagraphs' => true,\n\t\t\t'contentHasAssets'          => true,\n\t\t\t'keywordInTitle'            => true,\n\t\t\t'keywordInMetaDescription'  => true,\n\t\t\t'keywordInPermalink'        => true,\n\t\t\t'keywordIn10Percent'        => true,\n\t\t\t'keywordInContent'          => true,\n\t\t\t'keywordInSubheadings'      => true,\n\t\t\t'keywordInImageAlt'         => true,\n\t\t\t'keywordDensity'            => true,\n\t\t\t'keywordNotUsed'            => true,\n\t\t\t'lengthContent'             => true,\n\t\t\t'lengthPermalink'           => true,\n\t\t\t'linksHasInternal'          => true,\n\t\t\t'linksHasExternals'         => true,\n\t\t\t'linksNotAllExternals'      => true,\n\t\t\t'titleStartWithKeyword'     => true,\n\t\t\t'titleSentiment'            => true,\n\t\t\t'titleHasPowerWords'        => true,\n\t\t\t'titleHasNumber'            => true,\n\t\t\t'hasContentAI'              => true,\n\t\t];\n\n\t\treturn $tests;\n\t}\n\n\t\/**\n\t * Remove few tests on static Homepage.\n\t *\n\t * @since 1.0.42\n\t *\n\t * @param array  $tests Array of tests with score.\n\t * @param string $type  Object type. Can be post, user or term.\n\t *\/\n\tpublic function remove_tests( $tests, $type ) {\n\t\tif ( ! Admin_Helper::is_home_page() && ! Admin_Helper::is_posts_page() ) {\n\t\t\treturn $tests;\n\t\t}\n\n\t\treturn array_diff_assoc( $tests, $this->exclude_tests() );\n\t}\n\n\t\/**\n\t * Function to get the permalink format.\n\t *\n\t * @since 1.0.69.2\n\t *\/\n\tprivate function get_permalink_format() {\n\t\t$post_id = $this->get_object_id();\n\t\t$post    = get_post( $post_id );\n\n\t\tif ( empty( $post ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'attachment' === $post->post_type ) {\n\t\t\treturn str_replace( $post->post_name, '%postname%', get_permalink( $post ) );\n\t\t}\n\n\t\tif ( ( 'auto-draft' !== $post->post_status || 'post' !== $post->post_type ) && function_exists( 'get_sample_permalink' ) ) {\n\t\t\t$sample_permalink = \\get_sample_permalink( $post_id, null, null );\n\t\t\treturn isset( $sample_permalink[0] ) ? $sample_permalink[0] : home_url();\n\t\t}\n\n\t\t$post_temp              = $post;\n\t\t$post_temp->post_status = 'publish';\n\t\treturn get_permalink( $post_temp, true );\n\t}\n\n\t\/**\n\t * Tests to exclude on Homepage and Blog page.\n\t *\n\t * @since 1.0.43\n\t *\n\t * @return array Array of excluded tests.\n\t *\/\n\tprivate function exclude_tests() {\n\t\tif ( Admin_Helper::is_home_page() ) {\n\t\t\treturn [\n\t\t\t\t'contentHasTOC'        => true,\n\t\t\t\t'keywordInPermalink'   => true,\n\t\t\t\t'lengthPermalink'      => true,\n\t\t\t\t'linksHasExternals'    => true,\n\t\t\t\t'linksNotAllExternals' => true,\n\t\t\t\t'titleSentiment'       => true,\n\t\t\t\t'titleHasPowerWords'   => true,\n\t\t\t\t'titleHasNumber'       => true,\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\t'contentHasTOC'             => true,\n\t\t\t'contentHasShortParagraphs' => true,\n\t\t\t'keywordIn10Percent'        => true,\n\t\t\t'keywordInContent'          => true,\n\t\t\t'keywordInSubheadings'      => true,\n\t\t\t'keywordDensity'            => true,\n\t\t\t'lengthContent'             => true,\n\t\t\t'linksHasInternal'          => true,\n\t\t\t'linksHasExternals'         => true,\n\t\t\t'linksNotAllExternals'      => true,\n\t\t];\n\t}\n\n\t\/**\n\t * Enqueque scripts common for all builders.\n\t *\/\n\tprivate function enqueue_commons() {\n\t\twp_register_style( 'rank-math-editor', rank_math()->plugin_url() . 'assets\/admin\/css\/gutenberg.css', [], rank_math()->version );\n\t}\n\n\t\/**\n\t * Enqueue script to analyze custom fields data.\n\t *\/\n\tprivate function enqueue_custom_fields() {\n\t\tglobal $post;\n\t\tif ( empty( $post ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$custom_fields = Str::to_arr_no_empty( Helper::get_settings( 'titles.pt_' . $post->post_type . '_analyze_fields' ) );\n\t\tif ( empty( $custom_fields ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$file = Helper::is_block_editor() ? 'glue-custom-fields.js' : 'custom-fields.js';\n\n\t\twp_enqueue_script( 'rank-math-custom-fields', rank_math()->plugin_url() . 'assets\/admin\/js\/' . $file, [ 'wp-hooks', 'rank-math-analyzer' ], rank_math()->version, true );\n\t\tHelper::add_json( 'analyzeFields', $custom_fields );\n\t}\n\n\t\/**\n\t * Enqueue scripts for gutenberg screen.\n\t *\/\n\tprivate function enqueue_for_gutenberg() {\n\t\twp_enqueue_style( 'rank-math-editor' );\n\t\twp_enqueue_script( 'rank-math-formats' );\n\t\twp_enqueue_script(\n\t\t\t'rank-math-editor',\n\t\t\trank_math()->plugin_url() . 'assets\/admin\/js\/gutenberg.js',\n\t\t\t[\n\t\t\t\t'clipboard',\n\t\t\t\t'wp-autop',\n\t\t\t\t'wp-blocks',\n\t\t\t\t'wp-components',\n\t\t\t\t'wp-editor',\n\t\t\t\t'wp-edit-post',\n\t\t\t\t'wp-element',\n\t\t\t\t'wp-i18n',\n\t\t\t\t'wp-plugins',\n\t\t\t\t'wp-wordcount',\n\t\t\t\t'rank-math-analyzer',\n\t\t\t\t'rank-math-app',\n\t\t\t],\n\t\t\trank_math()->version,\n\t\t\ttrue\n\t\t);\n\t}\n\n\t\/**\n\t * Get current post type.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_current_post_type() {\n\t\t$post_type = get_post_type();\n\t\tif ( function_exists( 'get_current_screen' ) ) {\n\t\t\t$screen    = get_current_screen();\n\t\t\t$post_type = isset( $screen->post_type ) ? $screen->post_type : $post_type;\n\t\t}\n\n\t\treturn $post_type;\n\t}\n\n\t\/**\n\t * Check if any TOC plugin detected\n\t *\n\t * @return bool\n\t *\/\n\tprivate function has_toc_plugin() {\n\t\tif ( \\defined( 'ELEMENTOR_PRO_VERSION' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$plugins_found  = [];\n\t\t$active_plugins = get_option( 'active_plugins' );\n\t\t$active_plugins = is_multisite() ? array_merge( $active_plugins, array_keys( get_site_option( 'active_sitewide_plugins', [] ) ) ) : $active_plugins;\n\n\t\t\/**\n\t\t * Allow developers to add plugins to the TOC list.\n\t\t *\n\t\t * @param array TOC plugins.\n\t\t *\/\n\t\t$toc_plugins = $this->do_filter(\n\t\t\t'researches\/toc_plugins',\n\t\t\t[\n\t\t\t\t'wp-shortcode\/wp-shortcode.php'         => 'WP Shortcode by RankMath',\n\t\t\t\t'wp-shortcode-pro\/wp-shortcode-pro.php' => 'WP Shortcode Pro by RankMath',\n\t\t\t]\n\t\t);\n\n\t\tforeach ( $toc_plugins as $plugin_slug => $plugin_name ) {\n\t\t\tif ( in_array( $plugin_slug, $active_plugins, true ) !== false ) {\n\t\t\t\t$plugins_found[ $plugin_slug ] = $plugin_name;\n\t\t\t}\n\t\t}\n\n\t\treturn empty( $plugins_found ) ? false : $plugins_found;\n\t}\n\n\t\/**\n\t * Plugin already reviewed.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function plugin_reviewed() {\n\t\treturn get_option( 'rank_math_already_reviewed' ) || Helper::get_current_time() < get_option( 'rank_math_install_date' ) + ( 2 * WEEK_IN_SECONDS );\n\t}\n\n\t\/**\n\t * Get primary taxonomy.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function get_primary_taxonomy() {\n\t\tif ( ! is_null( $this->primary_taxonomy ) ) {\n\t\t\treturn $this->primary_taxonomy;\n\t\t}\n\n\t\t$taxonomy  = false;\n\t\t$post_type = $this->get_current_post_type();\n\n\t\t\/**\n\t\t * Filter: Allow disabling the primary term feature.\n\t\t * 'rank_math\/primary_term' is deprecated,\n\t\t * use 'rank_math\/admin\/disable_primary_term' instead.\n\t\t *\n\t\t * @param bool $return True to disable.\n\t\t *\/\n\t\tif ( false === apply_filters_deprecated( 'rank_math\/primary_term', [ false ], '1.0.43', 'rank_math\/admin\/disable_primary_term' )\n\t\t\t&& false === $this->do_filter( 'admin\/disable_primary_term', false ) ) {\n\t\t\t$taxonomy = Helper::get_settings( 'titles.pt_' . $post_type . '_primary_taxonomy', false );\n\t\t}\n\n\t\tif ( ! $taxonomy ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$taxonomy = get_taxonomy( $taxonomy );\n\t\tif ( empty( $taxonomy ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->primary_taxonomy = [\n\t\t\t'title'         => $taxonomy->labels->singular_name,\n\t\t\t'name'          => $taxonomy->name,\n\t\t\t'singularLabel' => $taxonomy->labels->singular_name,\n\t\t\t'restBase'      => ( $taxonomy->rest_base ) ? $taxonomy->rest_base : $taxonomy->name,\n\t\t];\n\n\t\treturn $this->primary_taxonomy;\n\t}\n\n\t\/**\n\t * Get primary term ID.\n\t *\n\t * @return int\n\t *\/\n\tprivate function get_primary_term_id() {\n\t\t$taxonomy = $this->get_primary_taxonomy();\n\t\tif ( ! $taxonomy ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$id = Helper::get_post_meta( 'primary_' . $taxonomy['name'], $this->get_object_id() );\n\n\t\treturn $id ? absint( $id ) : 0;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/metabox\/interface-screen.php","ext":"php","size":971,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * An interface for getting values for screen.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Metabox\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Metabox;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Screen.\n *\/\ninterface IScreen {\n\n\t\/**\n\t * Get object ID.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_object_id();\n\n\t\/**\n\t * Get object type\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_object_type();\n\n\t\/**\n\t * Get object types to register metabox to\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_types();\n\n\t\/**\n\t * Enqueue Styles and Scripts required for screen\n\t *\/\n\tpublic function enqueue();\n\n\t\/**\n\t * Get values for localize\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_values();\n\n\t\/**\n\t * Get object values for localize\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_values();\n\n\t\/**\n\t * Get analysis to run.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_analysis();\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/metabox\/class-metabox.php","ext":"php","size":10110,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The metabox functionality of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Metabox\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Metabox;\n\nuse RankMath\\CMB2;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Metabox class.\n *\/\nclass Metabox implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * Metabox id.\n\t *\n\t * @var string\n\t *\/\n\tprivate $metabox_id = 'rank_math_metabox';\n\n\t\/**\n\t * Screen object.\n\t *\n\t * @var Screen\n\t *\/\n\tprivate $screen;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\tif ( $this->dont_load() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->screen = new Screen();\n\t\tif ( $this->screen->is_loaded() ) {\n\t\t\t$this->action( 'cmb2_admin_init', 'add_main_metabox', 30 );\n\t\t\t$this->action( 'rank_math\/admin\/enqueue_scripts', 'enqueue' );\n\n\t\t\tif ( Helper::is_site_editor() ) {\n\t\t\t\t$this->action( 'enqueue_block_editor_assets', 'enqueue' );\n\t\t\t}\n\n\t\t\tif ( Helper::has_cap( 'link_builder' ) ) {\n\t\t\t\t$this->action( 'cmb2_admin_init', 'add_link_suggestion_metabox', 30 );\n\t\t\t}\n\t\t}\n\n\t\t$this->action( 'cmb2_' . CMB2::current_object_type() . '_process_fields_' . $this->metabox_id, 'save_meta' );\n\t\t$this->action( 'cmb2_save_field', 'invalidate_facebook_object_cache', 10, 4 );\n\t}\n\n\t\/**\n\t * Enqueue styles and scripts for the metabox.\n\t *\/\n\tpublic function enqueue() {\n\t\t\/**\n\t\t * Allow other plugins to enqueue\/dequeue admin styles or scripts before plugin assets.\n\t\t *\/\n\t\t$this->do_action( 'admin\/before_editor_scripts' );\n\n\t\t$screen = get_current_screen();\n\t\t$js     = rank_math()->plugin_url() . 'assets\/admin\/js\/';\n\n\t\t$this->enqueue_commons();\n\t\t$this->screen->enqueue();\n\t\t$this->screen->localize();\n\t\t$this->enqueue_translation();\n\t\trank_math()->variables->setup();\n\t\trank_math()->variables->setup_json();\n\n\t\t$is_gutenberg = Helper::is_block_editor() && \\rank_math_is_gutenberg();\n\t\t$is_elementor = 'elementor' === Param::get( 'action' );\n\t\tHelper::add_json( 'knowledgegraphType', Helper::get_settings( 'titles.knowledgegraph_type' ) );\n\t\tif (\n\t\t\t! $is_gutenberg &&\n\t\t\t! $is_elementor &&\n\t\t\t'rank_math_schema' !== $screen->post_type &&\n\t\t\t'edit-tags' !== $screen->base\n\t\t) {\n\t\t\t\\CMB2_Hookup::enqueue_cmb_css();\n\t\t\twp_enqueue_style(\n\t\t\t\t'rank-math-metabox',\n\t\t\t\trank_math()->plugin_url() . 'assets\/admin\/css\/metabox.css',\n\t\t\t\t[\n\t\t\t\t\t'rank-math-common',\n\t\t\t\t\t'rank-math-cmb2',\n\t\t\t\t\t'rank-math-editor',\n\t\t\t\t\t'wp-components',\n\t\t\t\t],\n\t\t\t\trank_math()->version\n\t\t\t);\n\n\t\t\twp_enqueue_media();\n\t\t\twp_enqueue_script(\n\t\t\t\t'rank-math-editor',\n\t\t\t\trank_math()->plugin_url() . 'assets\/admin\/js\/classic.js',\n\t\t\t\t[\n\t\t\t\t\t'clipboard',\n\t\t\t\t\t'wp-hooks',\n\t\t\t\t\t'moment',\n\t\t\t\t\t'wp-date',\n\t\t\t\t\t'wp-data',\n\t\t\t\t\t'wp-api-fetch',\n\t\t\t\t\t'wp-components',\n\t\t\t\t\t'wp-element',\n\t\t\t\t\t'wp-i18n',\n\t\t\t\t\t'wp-url',\n\t\t\t\t\t'wp-media-utils',\n\t\t\t\t\t'rank-math-common',\n\t\t\t\t\t'rank-math-analyzer',\n\t\t\t\t\t'wp-block-editor',\n\t\t\t\t\t'rank-math-app',\n\t\t\t\t],\n\t\t\t\trank_math()->version,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\n\t\t$this->do_action( 'enqueue_scripts\/assessor' );\n\n\t\t\/**\n\t\t * Allow other plugins to enqueue\/dequeue admin styles or scripts after plugin assets.\n\t\t *\/\n\t\t$this->do_action( 'admin\/editor_scripts', $this->screen );\n\t}\n\n\t\/**\n\t * Enqueque scripts common for all builders.\n\t *\/\n\tprivate function enqueue_commons() {\n\t\twp_register_style( 'rank-math-editor', rank_math()->plugin_url() . 'assets\/admin\/css\/gutenberg.css', [ 'rank-math-common' ], rank_math()->version );\n\t\twp_register_script( 'rank-math-analyzer', rank_math()->plugin_url() . 'assets\/admin\/js\/analyzer.js', [ 'lodash', 'wp-autop', 'wp-wordcount' ], rank_math()->version, true );\n\t}\n\n\t\/**\n\t * Enqueue translation.\n\t *\/\n\tprivate function enqueue_translation() {\n\t\tif ( function_exists( 'wp_set_script_translations' ) ) {\n\t\t\twp_set_script_translations( 'rank-math-analyzer', 'rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\t\twp_set_script_translations( 'rank-math-app', 'rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add main metabox.\n\t *\/\n\tpublic function add_main_metabox() {\n\t\tif ( $this->can_add_metabox() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$cmb = $this->create_metabox();\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'   => 'setting-panel-container-' . $this->metabox_id,\n\t\t\t\t'type' => 'meta_tab_container_open',\n\t\t\t\t'tabs' => [],\n\t\t\t]\n\t\t);\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'         => 'rank_math_metabox_wrapper',\n\t\t\t\t'type'       => 'raw',\n\t\t\t\t'content'    => '<div id=\"rank-math-metabox-wrapper\"><\/div>',\n\t\t\t\t'save_field' => false,\n\t\t\t]\n\t\t);\n\n\t\t\/**\n\t\t * Allow disabling the primary term feature.\n\t\t *\n\t\t * @param bool $return True to disable.\n\t\t *\/\n\t\tif ( false === apply_filters_deprecated( 'rank_math\/primary_term', [ false ], '1.0.43', 'rank_math\/admin\/disable_primary_term' )\n\t\t&& false === $this->do_filter( 'admin\/disable_primary_term', false ) ) {\n\t\t\t$taxonomies = Helper::get_object_taxonomies( Helper::get_post_type(), 'objects' );\n\t\t\t$taxonomies = wp_filter_object_list( $taxonomies, [ 'hierarchical' => true ], 'and', 'name' );\n\t\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\t\t$cmb->add_field(\n\t\t\t\t\t[\n\t\t\t\t\t\t'id'         => 'rank_math_primary_' . $taxonomy,\n\t\t\t\t\t\t'type'       => 'hidden',\n\t\t\t\t\t\t'default'    => 0,\n\t\t\t\t\t\t'attributes' => [\n\t\t\t\t\t\t\t'data-primary-term' => $taxonomy,\n\t\t\t\t\t\t],\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'   => 'setting-panel-container-close-' . $this->metabox_id,\n\t\t\t\t'type' => 'tab_container_close',\n\t\t\t]\n\t\t);\n\n\t\tCMB2::pre_init( $cmb );\n\t}\n\n\t\/**\n\t * Add link suggestion metabox.\n\t *\/\n\tpublic function add_link_suggestion_metabox() {\n\t\t$allowed_post_types = [];\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\tif ( false === Helper::get_settings( 'titles.pt_' . $post_type . '_link_suggestions' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$allowed_post_types[] = $post_type;\n\t\t}\n\n\t\t\/\/ Early bail.\n\t\tif ( empty( $allowed_post_types ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$cmb = new_cmb2_box(\n\t\t\t[\n\t\t\t\t'id'           => $this->metabox_id . '_link_suggestions',\n\t\t\t\t'title'        => esc_html__( 'Link Suggestions', 'rank-math' ),\n\t\t\t\t'object_types' => $allowed_post_types,\n\t\t\t\t'context'      => 'side',\n\t\t\t\t'priority'     => 'default',\n\t\t\t]\n\t\t);\n\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'      => $this->metabox_id . '_link_suggestions_tooltip',\n\t\t\t\t'type'    => 'raw',\n\t\t\t\t'content' => '<div id=\"rank-math-link-suggestions-tooltip\" class=\"hidden\">' . Admin_Helper::get_tooltip( esc_html__( 'Click on the button to copy URL or insert link in content. You can also drag and drop links in the post content.', 'rank-math' ) ) . '<\/div>',\n\t\t\t]\n\t\t);\n\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'        => 'rank_math_social_tabs',\n\t\t\t\t'type'      => 'raw',\n\t\t\t\t'file'      => rank_math()->includes_dir() . 'metaboxes\/link-suggestions.php',\n\t\t\t\t'not_found' => '<em><small>' . esc_html__( 'We can\\'t show any link suggestions for this post. Try selecting categories and tags for this post, and mark other posts as Pillar Content to make them show up here.', 'rank-math' ) . '<\/small><\/em>',\n\t\t\t]\n\t\t);\n\n\t\tCMB2::pre_init( $cmb );\n\t}\n\n\t\/**\n\t * Save post meta handler.\n\t *\n\t * @param  CMB2 $cmb CMB2 metabox object.\n\t *\/\n\tpublic function save_meta( $cmb ) {\n\t\t\/**\n\t\t * Hook into save handler for main metabox.\n\t\t *\n\t\t * @param CMB2 $cmb CMB2 object.\n\t\t *\/\n\t\t$this->do_action( 'metabox\/process_fields', $cmb );\n\t}\n\n\t\/**\n\t * Invalidate facebook object cache for the post.\n\t *\n\t * @param string     $field_id The current field id paramater.\n\t * @param bool       $updated  Whether the metadata update action occurred.\n\t * @param string     $action   Action performed. Could be \"repeatable\", \"updated\", or \"removed\".\n\t * @param CMB2_Field $field    This field object.\n\t *\/\n\tpublic function invalidate_facebook_object_cache( $field_id, $updated, $action, $field ) {\n\t\t\/\/ Early Bail!\n\t\tif ( ! in_array( $field_id, [ 'rank_math_facebook_title', 'rank_math_facebook_image', 'rank_math_facebook_description' ], true ) || ! $updated ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$app_id = Helper::get_settings( 'titles.facebook_app_id' );\n\t\t$secret = Helper::get_settings( 'titles.facebook_secret' );\n\n\t\t\/\/ Early bail!\n\t\tif ( ! $app_id || ! $secret ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_remote_post(\n\t\t\t'https:\/\/graph.facebook.com\/',\n\t\t\t[\n\t\t\t\t'body' => [\n\t\t\t\t\t'id'           => get_permalink( $field->object_id() ),\n\t\t\t\t\t'scrape'       => true,\n\t\t\t\t\t'access_token' => $app_id . '|' . $secret,\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Create metabox\n\t *\n\t * @return CMB2\n\t *\/\n\tprivate function create_metabox() {\n\t\treturn new_cmb2_box(\n\t\t\t[\n\t\t\t\t'id'               => $this->metabox_id,\n\t\t\t\t'title'            => esc_html__( 'Rank Math SEO', 'rank-math' ),\n\t\t\t\t'object_types'     => $this->screen->get_object_types(),\n\t\t\t\t'taxonomies'       => Helper::get_allowed_taxonomies(),\n\t\t\t\t'new_term_section' => false,\n\t\t\t\t'new_user_section' => 'add-existing-user',\n\t\t\t\t'context'          => 'normal',\n\t\t\t\t'priority'         => $this->get_priority(),\n\t\t\t\t'cmb_styles'       => false,\n\t\t\t\t'classes'          => 'rank-math-metabox-wrap' . ( Admin_Helper::is_term_profile_page() ? ' rank-math-metabox-frame postbox' : '' ),\n\t\t\t\t'mb_callback_args' => [ '__back_compat_meta_box' => \\rank_math_is_gutenberg() ],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get metabox priority\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_priority() {\n\t\t$post_type = Param::get( 'post_type' );\n\t\tif ( ! $post_type ) {\n\t\t\t$post_type = get_post_type( Param::get( 'post', 0, FILTER_VALIDATE_INT ) );\n\t\t}\n\n\t\t$priority = 'product' === $post_type ? 'default' : 'high';\n\n\t\t\/**\n\t\t * Filter: Change metabox priority.\n\t\t *\/\n\t\treturn $this->do_filter( 'metabox\/priority', $priority );\n\t}\n\n\t\/**\n\t * Can add metabox\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_add_metabox() {\n\t\treturn ! Helper::has_cap( 'onpage_general' ) &&\n\t\t\t! Helper::has_cap( 'onpage_advanced' ) &&\n\t\t\t! Helper::has_cap( 'onpage_snippet' ) &&\n\t\t\t! Helper::has_cap( 'onpage_social' );\n\t}\n\n\t\/**\n\t * Can load metabox.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function dont_load() {\n\t\treturn Helper::is_heartbeat() || Helper::is_ajax() ||\n\t\t\t( class_exists( 'Vc_Manager' ) && Param::get( 'vc_action' ) ) ||\n\t\t\tis_network_admin();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/metabox\/class-user-screen.php","ext":"php","size":2179,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The metabox functionality of the plugin.\n *\n * @since      1.0.25\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Metabox\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Metabox;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * User metabox class.\n *\/\nclass User_Screen implements IScreen {\n\n\tuse Hooker;\n\n\t\/**\n\t * Class construct\n\t *\/\n\tpublic function __construct() {}\n\n\t\/**\n\t * Get object ID.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_object_id() {\n\t\tglobal $user_id;\n\n\t\treturn $user_id;\n\t}\n\n\t\/**\n\t * Get object type\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_object_type() {\n\t\treturn 'user';\n\t}\n\n\t\/**\n\t * Get object types to register metabox to\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_types() {\n\t\treturn [ 'user' ];\n\t}\n\n\t\/**\n\t * Enqueue Styles and Scripts required for screen.\n\t *\/\n\tpublic function enqueue() {\n\t\twp_enqueue_media();\n\t}\n\n\t\/**\n\t * Get analysis to run.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_analysis() {\n\t\treturn [\n\t\t\t'keywordInTitle'           => true,\n\t\t\t'keywordInMetaDescription' => true,\n\t\t\t'keywordInPermalink'       => true,\n\t\t\t'keywordNotUsed'           => true,\n\t\t\t'titleStartWithKeyword'    => true,\n\t\t];\n\t}\n\n\t\/**\n\t * Get values for localize.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_values() {\n\t\tglobal $wp_rewrite;\n\t\treturn [\n\t\t\t'permalinkFormat' => ! empty( $wp_rewrite->author_structure ) ? home_url( $wp_rewrite->author_structure ) : home_url(),\n\t\t];\n\t}\n\n\t\/**\n\t * Get object values for localize\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_values() {\n\t\treturn [\n\t\t\t'titleTemplate'       => Helper::get_settings( 'titles.author_archive_title', '%name% %sep% %sitename% %page%' ),\n\t\t\t'descriptionTemplate' => Helper::get_settings( 'titles.author_archive_description', '%user_description%' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Is user metabox enabled.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_enable() {\n\t\treturn false === Helper::get_settings( 'titles.disable_author_archives' ) &&\n\t\t\tHelper::get_settings( 'titles.author_add_meta_box' ) &&\n\t\t\tAdmin_Helper::is_user_edit();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/metabox\/class-taxonomy-screen.php","ext":"php","size":4392,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The metabox functionality of the plugin.\n *\n * @since      1.0.25\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Metabox\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Metabox;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Taxonomy metabox class.\n *\/\nclass Taxonomy_Screen implements IScreen {\n\n\tuse Hooker;\n\n\t\/**\n\t * Class construct\n\t *\/\n\tpublic function __construct() {\n\t\tadd_action( 'init', [ $this, 'allow_tags' ], 15 );\n\t}\n\n\t\/**\n\t * Allow tags in term description.\n\t *\/\n\tpublic function allow_tags() {\n\t\t$taxonomies = Helper::get_allowed_taxonomies();\n\t\tif ( is_array( $taxonomies ) && ! empty( $taxonomies ) ) {\n\t\t\tremove_filter( 'pre_term_description', 'wp_filter_kses' );\n\t\t\tremove_filter( 'term_description', 'wp_kses_data' );\n\t\t\tadd_filter( 'pre_term_description', 'wp_kses_post' );\n\t\t\tadd_filter( 'term_description', 'wp_kses_post' );\n\t\t}\n\t}\n\n\t\/**\n\t * Get object ID.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_object_id() {\n\t\treturn Param::request( 'tag_ID', 0, FILTER_VALIDATE_INT );\n\t}\n\n\t\/**\n\t * Get object type\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_object_type() {\n\t\treturn 'term';\n\t}\n\n\t\/**\n\t * Get object types to register metabox to\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_types() {\n\t\t$object_types = [];\n\t\t$taxonomies   = Helper::get_allowed_taxonomies();\n\n\t\tif ( is_array( $taxonomies ) && ! empty( $taxonomies ) ) {\n\t\t\t$object_types[] = 'term';\n\t\t\t$this->description_field_editor();\n\t\t}\n\n\t\treturn $object_types;\n\t}\n\n\t\/**\n\t * Enqueue Styles and Scripts required for screen.\n\t *\/\n\tpublic function enqueue() {}\n\n\t\/**\n\t * Get analysis to run.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_analysis() {\n\t\treturn [\n\t\t\t'keywordInTitle'           => true,\n\t\t\t'keywordInMetaDescription' => true,\n\t\t\t'keywordInPermalink'       => true,\n\t\t\t'keywordNotUsed'           => true,\n\t\t\t'titleStartWithKeyword'    => true,\n\t\t];\n\t}\n\n\t\/**\n\t * Get values for localize.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_values() {\n\t\t$url = '';\n\t\tif ( $this->get_object_id() ) {\n\t\t\t$url  = get_term_link( $this->get_object_id() );\n\t\t\t$data = array_filter( explode( '\/', $url ) );\n\t\t\t$url  = ! empty( $data ) ? str_replace( array_pop( $data ), '%term%', $url ) : '';\n\t\t}\n\n\t\treturn [\n\t\t\t'permalinkFormat' => $url ? $url : home_url(),\n\t\t];\n\t}\n\n\t\/**\n\t * Get object values for localize\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_object_values() {\n\t\t$taxonomy = $this->get_taxonomy();\n\t\treturn [\n\t\t\t'titleTemplate'       => Helper::get_settings( \"titles.tax_{$taxonomy}_title\", '%term% %sep% %sitename%' ),\n\t\t\t'descriptionTemplate' => Helper::get_settings( \"titles.tax_{$taxonomy}_description\", '%term_description%' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Output the WordPress editor.\n\t *\n\t * @param object $term Current taxonomy term object.\n\t *\/\n\tpublic function category_description_editor( $term ) {\n\t\t?>\n\t\t<tr class=\"form-field term-description-wrap rank-math-term-description-wrap\">\n\t\t\t<th scope=\"row\"><label for=\"description\"><?php esc_html_e( 'Description', 'rank-math' ); ?><\/label><\/th>\n\t\t\t<td>\n\t\t\t\t<?php\n\t\t\t\twp_editor(\n\t\t\t\t\thtml_entity_decode( $term->description, ENT_QUOTES, 'UTF-8' ),\n\t\t\t\t\t'rank_math_description_editor',\n\t\t\t\t\t[\n\t\t\t\t\t\t'textarea_name' => 'description',\n\t\t\t\t\t\t'textarea_rows' => 5,\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t\t?>\n\t\t\t<\/td>\n\t\t\t<script>\n\t\t\t\t\/\/ Remove the non-html field\n\t\t\t\tjQuery('textarea#description').closest('.form-field').remove();\n\t\t\t<\/script>\n\t\t<\/tr>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add the description field to the edit taxonomy screen if the metabox is\n\t * enabled for the current taxonomy.\n\t *\n\t * @return void\n\t *\/\n\tprivate function description_field_editor() {\n\t\t$taxonomy = $this->get_taxonomy();\n\t\tif (\n\t\t\t! Helper::get_settings( 'titles.tax_' . $taxonomy . '_add_meta_box' ) ||\n\t\t\t$this->do_filter( 'admin\/disable_rich_editor', false, $taxonomy )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( \"{$taxonomy}_edit_form_fields\", 'category_description_editor', 1 );\n\t}\n\n\t\/**\n\t * Get current taxonomy.\n\t *\n\t * @return {string} Taxonomy slug.\n\t *\/\n\tprivate function get_taxonomy() {\n\t\t$taxonomy        = filter_input( INPUT_GET, 'taxonomy', FILTER_DEFAULT, [ 'options' => [ 'default' => '' ] ] );\n\t\t$taxonomy_object = get_taxonomy( $taxonomy );\n\t\tif ( empty( $taxonomy_object ) || empty( $taxonomy_object->public ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn $taxonomy;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-lock-modified-date.php","ext":"php","size":3233,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin-specific functionality of the plugin.\n *\n * @since      1.0.223\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Editor;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Lock_Modified_Date class.\n *\n * @codeCoverageIgnore\n *\/\nclass Lock_Modified_Date {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rest_api_init', 'init_rest_api' );\n\t\t$this->action( 'wp_insert_post_data', 'update_modified_date', 999, 3 );\n\t}\n\n\t\/**\n\t * Add REST filter to modify the post object.\n\t *\/\n\tpublic function init_rest_api() {\n\t\t$post_types = Helper::get_allowed_post_types();\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$this->filter( \"rest_pre_insert_{$post_type}\", 'update_last_modified_parameter', 99, 2 );\n\t\t}\n\t}\n\n\t\/**\n\t * Add last_modified parameter to a post when a post is updated from Block Editor.\n\t *\n\t * @param WP_POST         $prepared_post Post object.\n\t * @param WP_REST_Request $request       Request object.\n\t *\/\n\tpublic function update_last_modified_parameter( $prepared_post, $request ) {\n\t\t$params = $request->get_params();\n\t\tif ( isset( $params['meta']['rank_math_lock_modified_date'] ) ) {\n\t\t\t$prepared_post->lock_modified_date = ! empty( $params['meta']['rank_math_lock_modified_date'] );\n\t\t}\n\n\t\treturn $prepared_post;\n\t}\n\n\t\/**\n\t * Lock Modified date by overwriting the old value.\n\t *\n\t * @param array $data    An array of slashed, sanitized, and processed post data.\n\t * @param array $postarr An array of sanitized (and slashed) but otherwise unmodified post data.\n\t *\/\n\tpublic function update_modified_date( $data, $postarr ) {\n\t\t$post_id = ! empty( $postarr['ID'] ) ? $postarr['ID'] : 0;\n\t\tif (\n\t\t\t! $post_id ||\n\t\t\t! isset( $postarr['post_modified'], $postarr['post_modified_gmt'] ) ||\n\t\t\t! $this->lock_modified_date( $postarr, $post_id )\n\t\t) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$data['post_modified']     = $postarr['post_modified'];\n\t\t$data['post_modified_gmt'] = $postarr['post_modified_gmt'];\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Whether to lock modified date.\n\t *\n\t * @param array $data    An array of sanitized (and slashed) but otherwise unmodified post data.\n\t * @param int   $post_id Post ID.\n\t *\/\n\tprivate function lock_modified_date( $data, $post_id ) {\n\t\tif ( ! Editor::can_add_lock_modified_date() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( Param::request( 'action' ) === 'et_fb_ajax_save' ) {\n\t\t\tif (\n\t\t\t\tempty( $_REQUEST['et_fb_save_nonce'] ) ||\n\t\t\t\t! wp_verify_nonce( Param::request( 'et_fb_save_nonce' ), 'et_fb_save_nonce' )\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$options = ! empty( $_REQUEST['options'] ) ? $_REQUEST['options'] : []; \/\/phpcs:ignore\n\t\t\treturn ! empty( $options['conditional_tags'] ) && ! empty( $options['conditional_tags']['lock_modified_date'] );\n\t\t}\n\n\t\tif ( Param::request( 'action' ) === 'elementor_ajax' ) {\n\t\t\treturn wp_verify_nonce( Param::request( '_nonce' ), 'elementor_ajax' ) && ! empty( $_REQUEST['lock_modified_date'] );\n\t\t}\n\n\t\treturn isset( $data['lock_modified_date'] ) ? $data['lock_modified_date'] : Helper::get_post_meta( 'lock_modified_date', $post_id );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-menu.php","ext":"php","size":9612,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin pages of the plugin.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Admin\\Page;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin_Menu class.\n *\n * @codeCoverageIgnore\n *\/\nclass Admin_Menu implements Runner {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'init', 'register_pages' );\n\t\t$this->action( 'admin_menu', 'fix_admin_menu', 999 );\n\t\t$this->action( 'admin_head', 'icon_css' );\n\t\t$this->ajax( 'remove_offer_page', 'remove_offer_page' );\n\t}\n\n\t\/**\n\t * Register admin pages for plugin.\n\t *\/\n\tpublic function register_pages() {\n\t\t$this->maybe_deregister();\n\n\t\tif ( Helper::is_invalid_registration() && ! is_network_admin() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$current_user = wp_get_current_user();\n\t\t$capabilities = array_keys( Helper::get_roles_capabilities() );\n\n\t\tif ( empty( array_intersect( $current_user->roles, $capabilities ) ) && ! current_user_can( 'setup_network' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$modules = rank_math()->manager->modules;\n\t\t$data    = [];\n\t\tforeach ( $modules as $id => $module ) {\n\t\t\t$data[ $id ] = array_merge(\n\t\t\t\t[\n\t\t\t\t\t'id'       => $module->get_id(),\n\t\t\t\t\t'isActive' => $module->is_active(),\n\t\t\t\t\t'isHidden' => $module->is_hidden(),\n\t\t\t\t\t'isPro'    => $module->is_pro_module(),\n\t\t\t\t],\n\t\t\t\t$module->get_args()\n\t\t\t);\n\t\t}\n\n\t\t\/\/ Dashboard \/ Welcome \/ About.\n\t\tnew Page(\n\t\t\t'rank-math',\n\t\t\tesc_html__( 'Rank Math', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'position'   => 50,\n\t\t\t\t'menu_title' => 'Rank Math',\n\t\t\t\t'capability' => 'level_1',\n\t\t\t\t'icon'       => 'data:image\/svg+xml;base64,' . \\base64_encode( '<svg viewBox=\"0 0 462.03 462.03\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"20\"><g fill=\"#fff\"><path d=\"m462 234.84-76.17 3.43 13.43 21-127 81.18-126-52.93-146.26 60.97 10.14 24.34 136.1-56.71 128.57 54 138.69-88.61 13.43 21z\"\/><path d=\"m54.1 312.78 92.18-38.41 4.49 1.89v-54.58h-96.67zm210.9-223.57v235.05l7.26 3 89.43-57.05v-181zm-105.44 190.79 96.67 40.62v-165.19h-96.67z\"\/><\/g><\/svg>' ), \/\/ phpcs:ignore -- This should not cause any issue as we only pass a static svg code.\n\t\t\t\t'render'     => Admin_Helper::get_view( 'dashboard' ),\n\t\t\t\t'classes'    => [ 'rank-math-page' ],\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [ 'rank-math-dashboard' => '' ],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'lodash'               => '',\n\t\t\t\t\t\t'rank-math-components' => '',\n\t\t\t\t\t\t'rank-math-dashboard'  => '',\n\t\t\t\t\t\t'rank-math-modules'    => rank_math()->plugin_url() . 'assets\/admin\/js\/modules.js',\n\t\t\t\t\t],\n\t\t\t\t\t'json'    => [\n\t\t\t\t\t\t'isPro'                    => defined( 'RANK_MATH_PRO_FILE' ),\n\t\t\t\t\t\t'isSiteConnected'          => Helper::is_site_connected(),\n\t\t\t\t\t\t'registerProductNonce'     => wp_create_nonce( 'rank_math_register_product' ),\n\t\t\t\t\t\t'activateUrl'              => Admin_Helper::get_activate_url(),\n\t\t\t\t\t\t'isSiteUrlValid'           => Admin_Helper::is_site_url_valid(),\n\t\t\t\t\t\t'isAdvancedMode'           => Helper::is_advanced_mode(),\n\t\t\t\t\t\t'contentAiPlan'            => Helper::get_content_ai_plan(),\n\t\t\t\t\t\t'data'                     => $data,\n\t\t\t\t\t\t'isPluginActiveForNetwork' => Helper::is_plugin_active_for_network(),\n\t\t\t\t\t\t'isNetworkAdmin'           => is_network_admin(),\n\t\t\t\t\t\t'canUser'                  => [\n\t\t\t\t\t\t\t'manageOptions'  => current_user_can( 'manage_options' ),\n\t\t\t\t\t\t\t'setupNetwork'   => current_user_can( 'setup_network' ),\n\t\t\t\t\t\t\t'installPlugins' => current_user_can( 'install_plugins' ),\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'is_network' => is_network_admin() && Helper::is_plugin_active_for_network(),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Fix menu names.\n\t *\/\n\tpublic function fix_admin_menu() {\n\n\t\t\/\/ Replace the main menu name \"Rank Math\" with \"Rank Math SEO\".\n\t\tglobal $menu;\n\t\tforeach ( $menu as $key => $item ) {\n\t\t\tif ( 'Rank Math' === $item[0] ) {\n\t\t\t\t$menu[ $key ][0] = esc_html__( 'Rank Math SEO', 'rank-math' ); \/\/ phpcs:ignore -- This is required to change the menu name without changing its slug `rank-math`\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Replace the first submenu name \"Rank Math\" with \"Dashboard\".\n\t\tglobal $submenu;\n\t\tif ( ! isset( $submenu['rank-math'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'Rank Math' === $submenu['rank-math'][0][0] ) {\n\t\t\tif ( current_user_can( 'manage_options' ) ) {\n\t\t\t\t$plan         = Helper::get_content_ai_plan();\n\t\t\t\t$notification = ( empty( $plan ) || 'free' === $plan ) && get_option( 'rank_math_view_modules' ) ? ' <span class=\"awaiting-mod count-1\"><span class=\"pending-count\" aria-hidden=\"true\">1<\/span><\/span>' : '';\n\n\t\t\t\t$submenu['rank-math'][0][0] = esc_html__( 'Dashboard', 'rank-math' ) . $notification; \/\/ phpcs:ignore -- This is required to change the menu name when the plugin is not configured.\n\t\t\t} else {\n\t\t\t\tunset( $submenu['rank-math'][0] );\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $submenu['rank-math'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$submenu['rank-math'][] = [ esc_html__( 'Help &amp; Support', 'rank-math' ) . '<i class=\"dashicons dashicons-external\" style=\"font-size:12px;vertical-align:-2px;height:10px;\"><\/i>', 'level_1', KB::get( 'knowledgebase', 'Sidebar Help Link' ) ]; \/\/ phpcs:ignore -- A custom link to our KB article.\n\t\t$this->add_offer_link( $submenu );\n\n\t\t\/\/ Store ID of first_menu item so we can use it in the Admin menu item.\n\t\tset_transient( 'rank_math_first_submenu_id', array_values( $submenu['rank-math'] )[0][2] );\n\t}\n\n\t\/**\n\t * Print icon CSS for admin menu bar.\n\t *\/\n\tpublic function icon_css() {\n\t\t?>\n\t\t<script type=\"text\/javascript\">\n\t\t\t\/\/ Open RM KB menu link in the new tab.\n\t\t\tjQuery( document ).ready( function( $ ) {\n\t\t\t\t$( \"ul#adminmenu a[href$='<?php KB::the( 'knowledgebase', 'Sidebar Help Link' ); ?>']\" ).attr( 'target', '_blank' );\n\t\t\t\t$( \"ul#adminmenu a[href$='<?php KB::the( 'offer', 'Offer Menu Item' ); ?>']\" ).attr( 'target', '_blank' ).on( 'click', function() {\n\t\t\t\t\t$( this ).remove()\n\t\t\t\t\t$.ajax( {\n\t\t\t\t\t\turl: window.ajaxurl,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'rank_math_remove_offer_page',\n\t\t\t\t\t\t\tsecurity: rankMath.security,\n\t\t\t\t\t\t},\n\t\t\t\t\t} )\n\t\t\t\t} );\n\t\t\t} );\n\t\t<\/script>\n\t\t<style>\n\t\t\t#wp-admin-bar-rank-math .rank-math-icon {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\ttop: 6px;\n\t\t\t\tposition: relative;\n\t\t\t\tpadding-right: 10px;\n\t\t\t\tmax-width: 20px;\n\t\t\t}\n\t\t\t#wp-admin-bar-rank-math .rank-math-icon svg {\n\t\t\t\tfill-rule: evenodd;\n\t\t\t\tfill: #dedede;\n\t\t\t}\n\t\t\t#wp-admin-bar-rank-math:hover .rank-math-icon svg {\n\t\t\t\tfill-rule: evenodd;\n\t\t\t\tfill: #00b9eb;\n\t\t\t}\n\t\t\t#toplevel_page_rank-math:not(.wp-has-submenu) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.multisite.network-admin #toplevel_page_rank-math {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\t#toplevel_page_rank-math a[href$='<?php KB::the( 'offer', 'Offer Menu Item' ); ?>'],\n\t\t\t#toplevel_page_rank-math a[href$='<?php KB::the( 'offer', 'Offer Menu Item' ); ?>']:hover,\n\t\t\t#toplevel_page_rank-math a[href$='<?php KB::the( 'offer', 'Offer Menu Item' ); ?>']:focus {\n\t\t\t\tbackground-color: #10AC84;\n\t\t\t\tcolor: #fff;\n\t\t\t}\n\t\t<\/style>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Check for deactivation.\n\t *\/\n\tprivate function maybe_deregister() {\n\t\tif ( ! Helper::has_cap( 'general' ) || 'deregister' !== Param::post( 'registration-action' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$nonce = Param::post( '_wpnonce' );\n\t\tif ( ! $nonce || ! wp_verify_nonce( $nonce, 'rank_math_register_product' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tAdmin_Helper::deregister_user();\n\t}\n\n\t\/**\n\t * Function to add Offer link based on the date range.\n\t *\n\t * @param array $submenu Submenu items.\n\t *\/\n\tprivate function add_offer_link( &$submenu ) {\n\t\t$offer = $this->get_active_offer();\n\t\tif ( ! $offer ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$submenu['rank-math'][] = [ current( $offer ) . '&nbsp;', 'level_1', KB::get( 'offer', 'Offer Menu Item' ) ];\n\t}\n\n\t\/**\n\t * Ajax handler callback to store active offer so it doesn't show up again on the site.\n\t *\/\n\tpublic function remove_offer_page() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$offer = $this->get_active_offer();\n\t\tset_site_transient( 'rank_math_active_offer', key( $offer ) );\n\t}\n\n\t\/**\n\t * Function to get active offer\n\t *\/\n\tprivate function get_active_offer() {\n\t\t\/\/ Early Bail if PRO plugin is active.\n\t\tif ( defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$timezone     = new \\DateTimeZone( 'Asia\/Kolkata' );\n\t\t$current_date = new \\DateTime( 'now', $timezone );\n\t\t$dates        = [\n\t\t\t'christmas'    => [\n\t\t\t\t'start' => '2023-12-17',\n\t\t\t\t'end'   => '2023-12-26',\n\t\t\t\t'text'  => esc_html__( 'Christmas Sale', 'rank-math' ),\n\t\t\t],\n\t\t\t'new-year'     => [\n\t\t\t\t'start' => '2023-12-31',\n\t\t\t\t'end'   => '2024-01-05',\n\t\t\t\t'text'  => esc_html__( 'New Year Sale', 'rank-math' ),\n\t\t\t],\n\t\t\t'anniversary'  => [\n\t\t\t\t'start' => '2024-11-06',\n\t\t\t\t'end'   => '2024-11-13',\n\t\t\t\t'text'  => esc_html__( 'Anniversary Sale', 'rank-math' ),\n\t\t\t],\n\t\t\t'black-friday' => [\n\t\t\t\t'start' => '2024-11-27',\n\t\t\t\t'end'   => '2024-12-01',\n\t\t\t\t'text'  => esc_html__( 'Black Friday Sale', 'rank-math' ),\n\t\t\t],\n\t\t\t'cyber-monday' => [\n\t\t\t\t'start' => '2024-12-02',\n\t\t\t\t'end'   => '2024-12-04',\n\t\t\t\t'text'  => esc_html__( 'Cyber Monday Sale', 'rank-math' ),\n\t\t\t],\n\t\t];\n\n\t\t$stored_offer = get_site_transient( 'rank_math_active_offer' );\n\t\t$active_offer = '';\n\t\tforeach ( $dates as $key => $date ) {\n\t\t\t$start_date = new \\DateTime( $date['start'] . ' 16:00:00', $timezone );\n\t\t\t$end_date   = new \\DateTime( $date['end'] . ' 16:00:00', $timezone );\n\n\t\t\tif ( $stored_offer !== $key && $current_date >= $start_date && $current_date <= $end_date ) {\n\t\t\t\t$active_offer = [ $key => $date['text'] ];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $active_offer;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-option-center.php","ext":"php","size":25217,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The option center of the plugin.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\KB;\nuse RankMath\\CMB2;\nuse RankMath\\Helper;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Wizard\\Search_Console;\nuse RankMath\\Admin\\Sanitize_Settings;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Option_Center class.\n *\/\nclass Option_Center implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'init', 'register_general_settings', 125 );\n\t\t$this->action( 'init', 'register_title_settings', 125 );\n\t\t$this->filter( 'rank_math\/settings\/title', 'title_post_type_settings', 1 );\n\t\t$this->filter( 'rank_math\/settings\/title', 'title_taxonomy_settings', 1 );\n\t\t$this->filter( 'rank_math\/settings\/general', 'remove_unwanted_general_tabs', 1 );\n\t\t$this->action( 'admin_enqueue_scripts', 'enqueue_settings_translations', 11 );\n\t}\n\n\t\/**\n\t * General Settings.\n\t *\/\n\tpublic function register_general_settings() {\n\t\t$tabs = [\n\t\t\t'links'       => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-link',\n\t\t\t\t'title' => esc_html__( 'Links', 'rank-math' ),\n\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Change how some of the links open and operate on your website. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'link-settings', 'Options Panel Links Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn More', 'rank-math' ) . '<\/a>' ),\n\t\t\t],\n\t\t\t'breadcrumbs' => [\n\t\t\t\t'icon'      => 'rm-icon rm-icon-direction',\n\t\t\t\t'title'     => esc_html__( 'Breadcrumbs', 'rank-math' ),\n\t\t\t\t'classes'   => 'rank-math-advanced-option',\n\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t'desc'      => sprintf( esc_html__( 'Here you can set up the breadcrumbs function. %s', 'rank-math' ), '<a href=\"' . KB::get( 'breadcrumbs', 'Options Panel Breadcrumbs Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>. <br\/>' ),\n\t\t\t\t'after_row' => current_theme_supports( 'rank-math-breadcrumbs' ) ? '' : '<div class=\"notice notice-alt notice-warning warning inline rank-math-notice\"><p>' . esc_html__( 'Use the following code in your theme template files to display breadcrumbs.', 'rank-math' ) . ' <a href=\"' . KB::get( 'breadcrumbs-install', 'Options Panel Breadcrumbs Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn More', 'rank-math' ) . '<\/a><br \/><code>&lt;?php if (function_exists(\\'rank_math_the_breadcrumbs\\')) rank_math_the_breadcrumbs(); ?&gt;<\/code> OR <code>[rank_math_breadcrumb]<\/code><\/p><\/div>',\n\t\t\t],\n\t\t\t'webmaster'   => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-toolbox',\n\t\t\t\t'title' => esc_html__( 'Webmaster Tools', 'rank-math' ),\n\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Enter verification codes for third-party webmaster tools. %s', 'rank-math' ), '<a href=\"' . KB::get( 'webmaster-tools', 'Options Panel Webmaster Tools Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.<br \/>' ),\n\t\t\t],\n\t\t\t'others'      => [\n\t\t\t\t'icon'    => 'rm-icon rm-icon-misc',\n\t\t\t\t'title'   => esc_html__( 'Others', 'rank-math' ),\n\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t'desc'    => sprintf( esc_html__( 'Change some uncommon but essential settings here. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'other-settings', 'Options Panel Others Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'classes' => 'rank-math-advanced-option',\n\t\t\t],\n\t\t];\n\n\t\tif ( is_super_admin() && 'rank-math-options-general' === Param::get( 'page' ) ) {\n\t\t\tArr::insert(\n\t\t\t\t$tabs,\n\t\t\t\t[\n\t\t\t\t\t'htaccess' => [\n\t\t\t\t\t\t'icon'    => 'rm-icon rm-icon-htaccess',\n\t\t\t\t\t\t'title'   => esc_html__( 'Edit .htaccess', 'rank-math' ),\n\t\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t\t'desc'    => sprintf( esc_html__( 'Edit the contents of your .htaccess file easily. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'edit-htaccess', 'Options Panel htaccess Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t\t'classes' => 'rank-math-advanced-option',\n\t\t\t\t\t\t'json'    => [\n\t\t\t\t\t\t\t'htaccessData' => Admin_Helper::get_htaccess_data(),\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t5\n\t\t\t);\n\t\t}\n\n\t\t\/**\n\t\t * Allow developers to add new sections in the General Settings.\n\t\t *\n\t\t * @param array $tabs\n\t\t *\/\n\t\t$tabs = $this->do_filter( 'settings\/general', $tabs );\n\n\t\tnew Register_Options_Page(\n\t\t\t[\n\t\t\t\t'key'        => 'rank-math-options-general',\n\t\t\t\t'title'      => esc_html__( 'SEO Settings', 'rank-math' ),\n\t\t\t\t'menu_title' => esc_html__( 'General Settings', 'rank-math' ),\n\t\t\t\t'capability' => 'rank_math_general',\n\t\t\t\t'folder'     => 'general',\n\t\t\t\t'tabs'       => $tabs,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Remove unneeded tabs from the General Settings.\n\t *\n\t * @param  array $tabs Hold tabs for optional panel.\n\t * @return array\n\t *\/\n\tpublic function remove_unwanted_general_tabs( $tabs ) {\n\t\tif ( is_multisite() ) {\n\t\t\tunset( $tabs['robots'] );\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'edit_htaccess' ) && is_multisite() ) {\n\t\t\tunset( $tabs['htaccess'] );\n\t\t}\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Register SEO Titles & Meta Settings.\n\t *\/\n\tpublic function register_title_settings() {\n\t\t$homepage_notice = '';\n\t\tif ( 'page' === get_option( 'show_on_front' ) ) {\n\t\t\t$home_page_id = get_option( 'page_on_front' );\n\t\t\tif ( ! $home_page_id ) {\n\t\t\t\t$home_page_id = get_option( 'page_for_posts' );\n\t\t\t}\n\n\t\t\t$homepage_notice = '<a href=\"' . admin_url( 'post.php?post=' . $home_page_id . '&action=edit' ) . '\">' . esc_html__( 'Edit Page: ', 'rank-math' ) . get_the_title( $home_page_id ) . '<\/a>';\n\t\t}\n\t\t$tabs = [\n\t\t\t'global'   => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-settings',\n\t\t\t\t'title' => esc_html__( 'Global Meta', 'rank-math' ),\n\t\t\t\t\/* translators: Link to KB article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Change Global meta settings that take effect across your website. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'titles-meta', 'Options Panel Meta Global Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'json'  => [\n\t\t\t\t\t'overlayImages' => array_merge( [ '' => __( 'Off', 'rank-math' ) ], Helper::choices_overlay_images( 'names' ) ),\n\t\t\t\t],\n\t\t\t],\n\t\t\t'local'    => [\n\t\t\t\t'icon'      => 'rm-icon rm-icon-local-seo',\n\t\t\t\t'title'     => esc_html__( 'Local SEO', 'rank-math' ),\n\t\t\t\t\/* translators: Redirection page url *\/\n\t\t\t\t'desc'      => sprintf( wp_kses_post( __( 'Optimize for local searches and Knowledge Graph using these settings. %s.', 'rank-math' ) ), '<a href=\"' . KB::get( 'local-seo-settings', 'Options Panel Meta Local Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'after_row' => '<div class=\"notice notice-alt notice-info info inline rank-math-notice\"><p>' . __( 'Use the <code>[rank_math_contact_info]<\/code> shortcode to display contact information in a nicely formatted way. You should also claim your business on Google if you have not already.', 'rank-math' ) . '<\/p><\/div>',\n\t\t\t],\n\t\t\t'social'   => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-social',\n\t\t\t\t'title' => esc_html__( 'Social Meta', 'rank-math' ),\n\t\t\t\t\/* translators: Link to social setting KB article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( \"Add social account information to your website's Schema and Open Graph. %s.\", 'rank-math' ), '<a href=\"' . KB::get( 'social-meta-settings', 'Options Panel Meta Social Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn More', 'rank-math' ) . '<\/a>' ),\n\t\t\t],\n\t\t\t'homepage' => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-home',\n\t\t\t\t'title' => esc_html__( 'Homepage', 'rank-math' ),\n\t\t\t\t'desc'  => sprintf(\n\t\t\t\t\t\/* translators: Link to KB article *\/\n\t\t\t\t\tesc_html__( 'Add SEO meta and OpenGraph details to your homepage. %s.', 'rank-math' ),\n\t\t\t\t\t'<a href=\"' . KB::get( 'homepage-settings', 'Options Panel Meta Home Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>'\n\t\t\t\t),\n\t\t\t\t'json'  => [\n\t\t\t\t\t'staticHomePageNotice' => $homepage_notice,\n\t\t\t\t],\n\t\t\t],\n\t\t\t'author'   => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-users',\n\t\t\t\t'title' => esc_html__( 'Authors', 'rank-math' ),\n\t\t\t\t\/* translators: Link to KB article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Change SEO options related to the author archives. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'author-settings', 'Options Panel Meta Author Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'json'  => [\n\t\t\t\t\t'disableAutorArchive' => $this->do_filter( 'settings\/titles\/disable_author_archives', 'off' ),\n\t\t\t\t],\n\t\t\t],\n\t\t\t'misc'     => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-misc',\n\t\t\t\t'title' => esc_html__( 'Misc Pages', 'rank-math' ),\n\t\t\t\t\/* translators: Link to KB article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Customize SEO meta settings of pages like search results, 404s, etc. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'misc-settings', 'Options Panel Meta Misc Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t],\n\t\t];\n\n\t\t\/**\n\t\t * Allow developers to add new section in the Title Settings.\n\t\t *\n\t\t * @param array $tabs\n\t\t *\/\n\t\t$tabs = $this->do_filter( 'settings\/title', $tabs );\n\n\t\tnew Register_Options_Page(\n\t\t\t[\n\t\t\t\t'key'        => 'rank-math-options-titles',\n\t\t\t\t'title'      => esc_html__( 'SEO Titles &amp; Meta', 'rank-math' ),\n\t\t\t\t'menu_title' => esc_html__( 'Titles &amp; Meta', 'rank-math' ),\n\t\t\t\t'capability' => 'rank_math_titles',\n\t\t\t\t'folder'     => 'titles',\n\t\t\t\t'tabs'       => $tabs,\n\t\t\t]\n\t\t);\n\n\t\tif ( is_admin() ) {\n\t\t\tHelper::add_json( 'postTitle', 'Post Title' );\n\t\t\tHelper::add_json( 'postUri', home_url( '\/post-title' ) );\n\t\t\tHelper::add_json( 'blogName', get_bloginfo( 'name' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Add post type tabs in the Title Settings panel.\n\t *\n\t * @param  array $tabs Holds the tabs of the options panel.\n\t * @return array\n\t *\/\n\tpublic function title_post_type_settings( $tabs ) {\n\t\t$icons = Helper::choices_post_type_icons();\n\t\t$links = [\n\t\t\t'post'       => '<a href=\"' . KB::get( 'post-settings', 'Options Panel Meta Posts Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t\t'page'       => '<a href=\"' . KB::get( 'page-settings', 'Options Panel Meta Pages Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t\t'product'    => '<a href=\"' . KB::get( 'product-settings', 'Options Panel Meta Products Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t\t'attachment' => '<a href=\"' . KB::get( 'media-settings', 'Options Panel Meta Attachments Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t];\n\n\t\t$names = [\n\t\t\t'post'       => 'single %s',\n\t\t\t'page'       => 'single %s',\n\t\t\t'product'    => 'product pages',\n\t\t\t'attachment' => 'media %s',\n\t\t];\n\n\t\t$tabs['p_types'] = [\n\t\t\t'title' => esc_html__( 'Post Types:', 'rank-math' ),\n\t\t\t'type'  => 'seprator',\n\t\t\t'name'  => 'p_types_separator',\n\t\t];\n\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\t$obj             = get_post_type_object( $post_type );\n\t\t\t$link            = isset( $links[ $obj->name ] ) ? $links[ $obj->name ] : '';\n\t\t\t$obj_name        = isset( $names[ $obj->name ] ) ? sprintf( $names[ $obj->name ], $obj->name ) : $obj->name;\n\t\t\t$is_attachment   = $post_type === 'attachment';\n\t\t\t$richsnp_default = 'off';\n\t\t\tif ( ( class_exists( 'WooCommerce' ) && 'product' === $post_type ) || ( class_exists( 'Easy_Digital_Downloads' ) && 'download' === $post_type ) ) {\n\t\t\t\t$richsnp_default = 'product';\n\t\t\t}\n\t\t\tif ( $post_type === 'post' ) {\n\t\t\t\t$richsnp_default = 'article';\n\t\t\t}\n\n\t\t\t$primary_taxonomy_hash = [\n\t\t\t\t'post'    => 'category',\n\t\t\t\t'product' => 'product_cat',\n\t\t\t];\n\n\t\t\t$tabs[ 'post-type-' . $obj->name ] = [\n\t\t\t\t'title'     => $is_attachment ? esc_html__( 'Attachments', 'rank-math' ) : $obj->label,\n\t\t\t\t'icon'      => isset( $icons[ $obj->name ] ) ? $icons[ $obj->name ] : $icons['default'],\n\t\t\t\t\/* translators: 1. post type name 2. link *\/\n\t\t\t\t'desc'      => sprintf( esc_html__( 'Change Global SEO, Schema, and other settings for %1$s. %2$s', 'rank-math' ), $obj_name, $link ),\n\t\t\t\t'post_type' => $obj->name,\n\t\t\t\t'file'      => rank_math()->includes_dir() . 'settings\/titles\/post-types.php',\n\t\t\t\t'classes'   => 'attachment' === $post_type ? 'rank-math-advanced-option' : '',\n\t\t\t\t'json'      => [\n\t\t\t\t\t'isWooCommerceActive' => class_exists( 'WooCommerce' ),\n\t\t\t\t\t'isEddActive'         => class_exists( 'Easy_Digital_Downloads' ),\n\t\t\t\t\t'isWebStoriesActive'  => defined( 'WEBSTORIES_VERSION' ),\n\t\t\t\t\t$post_type            => [\n\t\t\t\t\t\t'title'                => $is_attachment ? esc_html__( 'Attachments', 'rank-math' ) : $obj->label,\n\t\t\t\t\t\t'name'                 => $is_attachment ? esc_html__( 'Media', 'rank-math' ) : $obj->labels->singular_name,\n\t\t\t\t\t\t'schemaTypes'          => Helper::choices_rich_snippet_types( esc_html__( 'None (Click here to set one)', 'rank-math' ), $post_type ),\n\t\t\t\t\t\t'taxonomies'           => Helper::get_object_taxonomies( $post_type ),\n\t\t\t\t\t\t'hasArchive'           => $obj->has_archive,\n\t\t\t\t\t\t'customRobots'         => false,\n\t\t\t\t\t\t'schemaDefault'        => $this->do_filter( 'settings\/snippet\/type', $richsnp_default, $post_type ),\n\t\t\t\t\t\t'articleType'          => $this->do_filter( 'settings\/snippet\/article_type', 'post' === $post_type ? 'BlogPosting' : 'Article', $post_type ),\n\t\t\t\t\t\t'enableLinkSuggestion' => $this->do_filter( 'settings\/titles\/link_suggestions', true, $post_type ),\n\t\t\t\t\t\t'primaryTaxonomy'      => isset( $primary_taxonomy_hash[ $post_type ] ) ? $primary_taxonomy_hash[ $post_type ] : 'off',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Add taxonomy tabs in the Title Settings panel.\n\t *\n\t * @param  array $tabs Holds the tabs of the options panel.\n\t * @return array\n\t *\/\n\tpublic function title_taxonomy_settings( $tabs ) {\n\t\t$icons = Helper::choices_taxonomy_icons();\n\n\t\t$hash_name = [\n\t\t\t'category'    => 'category archive pages',\n\t\t\t'product_cat' => 'Product category pages',\n\t\t\t'product_tag' => 'Product tag pages',\n\t\t];\n\n\t\t$hash_link = [\n\t\t\t'category'    => '<a href=\"' . KB::get( 'category-settings', 'Options Panel Meta Categories Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t\t'post_tag'    => '<a href=\"' . KB::get( 'tag-settings', 'Options Panel Meta Tags Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t\t'product_cat' => '<a href=\"' . KB::get( 'product-categories-settings', 'Options Panel Meta Product Categories Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t\t'product_tag' => '<a href=\"' . KB::get( 'product-tags-settings', 'Options Panel Meta Product Tags Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>.',\n\t\t];\n\n\t\t$taxonomies_data = [];\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy ) {\n\t\t\t$attached = implode( ' + ', $taxonomy->object_type );\n\n\t\t\t$taxonomies_data[ $attached ][ $taxonomy->name ] = $taxonomy;\n\t\t}\n\n\t\tforeach ( $taxonomies_data as $attached => $taxonomies ) {\n\t\t\t\/\/ Seprator.\n\t\t\t$tabs[ $attached ] = [\n\t\t\t\t'title' => ucwords( $attached ) . ':',\n\t\t\t\t'type'  => 'seprator',\n\t\t\t\t'name'  => 'taxonomy_separator',\n\t\t\t];\n\n\t\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\t\t$link          = isset( $hash_link[ $taxonomy->name ] ) ? $hash_link[ $taxonomy->name ] : '';\n\t\t\t\t$taxonomy_name = isset( $hash_name[ $taxonomy->name ] ) ? $hash_name[ $taxonomy->name ] : $taxonomy->label;\n\n\t\t\t\t$tabs[ 'taxonomy-' . $taxonomy->name ] = [\n\t\t\t\t\t'icon'     => isset( $icons[ $taxonomy->name ] ) ? $icons[ $taxonomy->name ] : $icons['default'],\n\t\t\t\t\t'title'    => $taxonomy->label,\n\t\t\t\t\t\/* translators: 1. taxonomy name 2. link *\/\n\t\t\t\t\t'desc'     => sprintf( esc_html__( 'Change Global SEO, Schema, and other settings for %1$s. %2$s', 'rank-math' ), $taxonomy_name, $link ),\n\t\t\t\t\t'taxonomy' => $taxonomy->name,\n\t\t\t\t\t'file'     => rank_math()->includes_dir() . 'settings\/titles\/taxonomies.php',\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $tabs['taxonomy-post_format'] ) ) {\n\t\t\t$tab = $tabs['taxonomy-post_format'];\n\t\t\tunset( $tabs['taxonomy-post_format'] );\n\t\t\t$tab['title']      = esc_html__( 'Post Formats', 'rank-math' );\n\t\t\t$tab['page_title'] = esc_html__( 'Post Formats Archive', 'rank-math' );\n\t\t\tArr::insert( $tabs, [ 'taxonomy-post_format' => $tab ], 5 );\n\t\t}\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Save Settings data. Called from the `updateSettings` endpoint.\n\t *\n\t * @param string $type        Settings type.\n\t * @param array  $settings    Settings data.\n\t * @param array  $field_types Field ids with types use to sanitize the value.\n\t * @param array  $updated     Array of field ids that were updated.\n\t * @param bool   $is_reset    Whether the request is to reset the data.\n\t * @return array\n\t *\/\n\tpublic static function save_settings( $type, $settings, $field_types, $updated, $is_reset ) {\n\t\t$notifications = [];\n\n\t\t$update_htaccess = self::maybe_update_htaccess( $settings );\n\t\tif ( ! empty( $update_htaccess ) ) {\n\t\t\t$notifications[] = $update_htaccess;\n\t\t}\n\n\t\t$update_analytics = self::maybe_update_analytics( $settings, $updated );\n\t\tif ( ! empty( $update_analytics ) ) {\n\t\t\t$notifications[] = $update_analytics;\n\t\t}\n\n\t\tdo_action( 'rank_math\/settings\/before_save', $type, $settings );\n\t\tforeach (\n\t\t\t[\n\t\t\t\t'htaccess_allow_editing',\n\t\t\t\t'htaccess_content',\n\t\t\t\t'searchConsole',\n\t\t\t\t'analyticsData',\n\t\t\t\t'analytics',\n\t\t\t\t'usage_tracking',\n\t\t\t] as $key\n\t\t) {\n\t\t\tif ( isset( $settings[ $key ] ) ) {\n\t\t\t\tunset( $settings[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\t$settings = Sanitize_Settings::sanitize( $settings, $field_types );\n\t\tself::check_updated_fields( $updated, $is_reset );\n\n\t\t\/\/ Get current settings to compare with new settings.\n\t\t$current_settings = Helper::get_settings( $type );\n\n\t\t\/\/ Only update fields that have actually changed.\n\t\t$changed_settings = self::get_changed_settings( $current_settings, $settings );\n\n\t\t\/\/ If no settings have changed, return early.\n\t\tif ( empty( $changed_settings ) ) {\n\t\t\treturn [\n\t\t\t\t'notifications' => $notifications,\n\t\t\t\t'settings'      => $current_settings,\n\t\t\t];\n\t\t}\n\n\t\t$map = [\n\t\t\t'general' => [ $changed_settings, null, null ],\n\t\t\t'titles'  => [ null, $changed_settings, null ],\n\t\t\t'sitemap' => [ null, null, $changed_settings ],\n\t\t];\n\n\t\tHelper::update_all_settings( ...$map[ $type ] );\n\t\trank_math()->settings->reset();\n\n\t\tdo_action( 'rank_math\/settings\/after_save', $type, $changed_settings );\n\n\t\treturn [\n\t\t\t'notifications' => $notifications,\n\t\t\t'settings'      => apply_filters( 'rank_math\/settings\/saved_data', Helper::get_settings( $type ), $type ),\n\t\t];\n\t}\n\n\t\/**\n\t * Update Analytics data.\n\t *\n\t * @param array  $settings Settings data.\n\t * @param string $updated  View that was updated.\n\t *\/\n\tpublic static function maybe_update_analytics( $settings, $updated ) {\n\t\tif ( empty( $updated ) || ( ! in_array( 'searchConsole', $updated, true ) && ! in_array( 'analyticsData', $updated, true ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tSearch_Console::save( $settings );\n\n\t\t$days = $settings['console_caching_control'] ?? 90;\n\n\t\t$search_console = $settings['searchConsole'] ?? [];\n\t\tif ( in_array( 'searchConsole', $updated, true ) && ! empty( $search_console ) ) {\n\t\t\t$search_console['days'] = $days;\n\n\t\t\t$response = \\RankMath\\Analytics\\AJAX::get()->do_save_analytic_profile( $search_console );\n\t\t\tif ( is_wp_error( $response ) ) {\n\t\t\t\treturn [\n\t\t\t\t\t'error' => $response->get_error_message(),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\t$google_analytics = $settings['analyticsData'] ?? [];\n\t\tif ( in_array( 'analyticsData', $updated, true ) && ! empty( $google_analytics ) ) {\n\t\t\t$google_analytics['days'] = $days;\n\n\t\t\t$response = \\RankMath\\Analytics\\AJAX::get()->do_save_analytic_options( $google_analytics );\n\t\t\tif ( is_wp_error( $response ) ) {\n\t\t\t\treturn [\n\t\t\t\t\t'error' => $response->get_error_message(),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue settings translations when React UI is enabled as the settings pages are loaded in chunks.\n\t *\/\n\tpublic function enqueue_settings_translations() {\n\t\tif ( ! Helper::is_react_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$page = str_replace( 'rank-math-options-', '', Param::get( 'page', '' ) );\n\t\t$hash = [\n\t\t\t'general'          => 'generalSettings',\n\t\t\t'titles'           => 'titleSettings',\n\t\t\t'sitemap'          => 'sitemapSettings',\n\t\t\t'instant-indexing' => 'instantIndexingSettings',\n\t\t];\n\n\t\tif ( ! isset( $hash[ $page ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$chunk = $hash[ $page ];\n\t\twp_enqueue_script( 'rank-math-settings-chunk', rank_math()->plugin_url() . \"assets\/admin\/js\/$chunk.js\", [ 'rank-math-options' ], rank_math()->version, true );\n\t\twp_set_script_translations( 'rank-math-settings-chunk', 'rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\twp_set_script_translations( 'rank-math-options', 'rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t\twp_set_script_translations( 'rank-math-components', 'rank-math', rank_math()->plugin_dir() . 'languages\/' );\n\t}\n\n\t\/**\n\t * Check if certain fields got updated.\n\t *\n\t * @param array $updated  Updated fields id.\n\t * @param bool  $is_reset Whether to reset the settings.\n\t *\/\n\tprivate static function check_updated_fields( $updated, $is_reset ) {\n\t\tif ( $is_reset ) {\n\t\t\tHelper::schedule_flush_rewrite();\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Filter: Allow developers to add option fields which will flush the rewrite rules when updated.\n\t\t *\n\t\t * @param array $flush_fields Array of field IDs for which we need to flush.\n\t\t *\/\n\t\t$flush_fields = apply_filters(\n\t\t\t'rank_math\/flush_fields',\n\t\t\t[\n\t\t\t\t'strip_category_base',\n\t\t\t\t'disable_author_archives',\n\t\t\t\t'url_author_base',\n\t\t\t\t'attachment_redirect_urls',\n\t\t\t\t'attachment_redirect_default',\n\t\t\t\t'nofollow_external_links',\n\t\t\t\t'nofollow_image_links',\n\t\t\t\t'nofollow_domains',\n\t\t\t\t'nofollow_exclude_domains',\n\t\t\t\t'new_window_external_links',\n\t\t\t\t'redirections_header_code',\n\t\t\t\t'redirections_post_redirect',\n\t\t\t\t'redirections_debug',\n\t\t\t]\n\t\t);\n\n\t\tforeach ( $flush_fields as $field_id ) {\n\t\t\tif ( in_array( $field_id, $updated, true ) ) {\n\t\t\t\tHelper::schedule_flush_rewrite();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Get only the settings that have changed.\n\t *\n\t * @param array $current_settings Current settings from database.\n\t * @param array $new_settings     New settings to be saved.\n\t * @return array\n\t *\/\n\tprivate static function get_changed_settings( $current_settings, $new_settings ) {\n\t\t\/\/ Filter out invalid keys from both arrays.\n\t\t$new_settings     = array_filter( $new_settings, [ __CLASS__, 'is_valid_key' ], ARRAY_FILTER_USE_KEY );\n\t\t$current_settings = array_filter( $current_settings, [ __CLASS__, 'is_valid_key' ], ARRAY_FILTER_USE_KEY );\n\n\t\t\/\/ Merge current settings with new settings, new settings take precedence.\n\t\treturn array_merge( $current_settings, $new_settings );\n\t}\n\n\t\/**\n\t * Check if a key is valid for settings.\n\t *\n\t * @param mixed $key The key to validate.\n\t * @return bool\n\t *\/\n\tprivate static function is_valid_key( $key ) {\n\t\treturn is_string( $key ) && ! empty( $key );\n\t}\n\n\t\/**\n\t * Update .htaccess.\n\t *\n\t * @param array { $settings } Settings data.\n\t *\/\n\tprivate static function maybe_update_htaccess( $settings ) {\n\t\tif ( empty( $settings['htaccess_allow_editing'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! is_super_admin() || ! Helper::has_cap( 'general' ) || ! Helper::has_cap( 'edit_htaccess' ) ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'You do not have permission to edit the .htaccess file.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( ! Helper::is_edit_allowed() ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'You do not have permission to edit the .htaccess file.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t\/\/ phpcs:ignore= WordPress.Security.ValidatedSanitizedInput -- Writing to .htaccess file and escaping for HTML will break functionality.\n\t\t$content = isset( $settings['htaccess_content'] ) ? $settings['htaccess_content'] : '';\n\t\tif ( empty( $content ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! self::do_htaccess_backup() ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'Failed to backup .htaccess file. Please check file permissions.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\t\tif ( ! self::do_htaccess_update( $content ) ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'Failed to update .htaccess file. Please check file permissions.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\t'success' => esc_html__( '.htaccess file updated successfully.', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Create htaccess backup.\n\t *\n\t * @return bool\n\t *\/\n\tprivate static function do_htaccess_backup() {\n\t\tif ( ! Helper::is_filesystem_direct() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\n\t\t$path = get_home_path();\n\t\t$file = $path . '.htaccess';\n\t\tif ( ! $wp_filesystem->is_writable( $path ) || ! $wp_filesystem->exists( $file ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$backup = $path . uniqid( '.htaccess_back_' );\n\t\treturn $wp_filesystem->copy( $file, $backup, true );\n\t}\n\n\t\/**\n\t * Update htaccess file.\n\t *\n\t * @param string $content Htaccess content.\n\t * @return string|bool\n\t *\/\n\tprivate static function do_htaccess_update( $content ) {\n\t\tif ( empty( $content ) || ! Helper::is_filesystem_direct() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\t\t$htaccess_file = get_home_path() . '.htaccess';\n\n\t\treturn ! $wp_filesystem->is_writable( $htaccess_file ) ? false : $wp_filesystem->put_contents( $htaccess_file, $content );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-helper.php","ext":"php","size":13098,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Admin helper Functions.\n *\n * This file contains functions needed on the admin screens.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Data_Encryption;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin_Helper class.\n *\/\nclass Admin_Helper {\n\n\t\/**\n\t * Get .htaccess related data.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_htaccess_data() {\n\t\tif ( ! Helper::is_filesystem_direct() ) {\n\t\t\treturn [\n\t\t\t\t'content'  => '',\n\t\t\t\t'writable' => false,\n\t\t\t];\n\t\t}\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\t\tif ( empty( $wp_filesystem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$htaccess_file = get_home_path() . '.htaccess';\n\t\treturn ! $wp_filesystem->exists( $htaccess_file ) ? false : [\n\t\t\t'content'  => $wp_filesystem->get_contents( $htaccess_file ),\n\t\t\t'writable' => $wp_filesystem->is_writable( $htaccess_file ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get tooltip HTML.\n\t *\n\t * @param string $message Message to show in tooltip.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_tooltip( $message ) {\n\t\treturn '<span class=\"rank-math-tooltip\"><em class=\"dashicons-before dashicons-editor-help\"><\/em><span>' . $message . '<\/span><\/span>';\n\t}\n\n\t\/**\n\t * Get admin view file.\n\t *\n\t * @param string $view View filename.\n\t *\n\t * @return string Complete path to view\n\t *\/\n\tpublic static function get_view( $view ) {\n\t\t$view = sanitize_key( $view );\n\t\t$view = rank_math()->admin_dir() . \"views\/{$view}.php\";\n\n\t\tif ( ! file_exists( $view ) ) {\n\t\t\tHelper::redirect( Helper::get_admin_url() );\n\t\t\texit;\n\t\t}\n\n\t\treturn $view;\n\t}\n\n\t\/**\n\t * Get taxonomies as choices.\n\t *\n\t * @param array $args (Optional) Arguments passed to filter list.\n\t *\n\t * @return array|bool\n\t *\/\n\tpublic static function get_taxonomies_options( $args = [] ) {\n\t\tglobal $wp_taxonomies;\n\n\t\t$args       = wp_parse_args( $args, [ 'public' => true ] );\n\t\t$taxonomies = wp_filter_object_list( $wp_taxonomies, $args, 'and', 'label' );\n\n\t\treturn empty( $taxonomies ) ? false : [ 'off' => esc_html__( 'None', 'rank-math' ) ] + $taxonomies;\n\t}\n\n\t\/**\n\t * Registration data get\/update.\n\t *\n\t * @param array|bool|null $data Array of data to save.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_registration_data( $data = null ) {\n\t\t$row  = 'rank_math_connect_data';\n\t\t$keys = [\n\t\t\t'username',\n\t\t\t'email',\n\t\t\t'api_key',\n\t\t\t'plan',\n\t\t];\n\n\t\t\/\/ Setter.\n\t\tif ( ! is_null( $data ) ) {\n\t\t\tif ( false === $data ) {\n\t\t\t\tupdate_option( 'rank_math_registration_skip', 1 );\n\t\t\t\treturn delete_option( $row );\n\t\t\t}\n\n\t\t\tforeach ( $keys as $key ) {\n\t\t\t\tif ( isset( $data[ $key ] ) ) {\n\t\t\t\t\t$data[ $key ] = Data_Encryption::encrypt( $data[ $key ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tHelper::remove_notification( 'rank-math-site-url-mismatch' );\n\t\t\tupdate_option( 'rank_math_registration_skip', 1 );\n\t\t\t$connected = update_option( $row, $data );\n\n\t\t\tdo_action( 'rank_math\/connect\/account_connected', $data );\n\t\t\treturn $connected;\n\t\t}\n\n\t\t\/\/ Getter.\n\t\t$options = Helper::is_plugin_active_for_network() ? get_blog_option( get_main_site_id(), $row, false ) : get_option( $row, false );\n\t\tif ( empty( $options ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( $keys as $key ) {\n\t\t\tif ( isset( $options[ $key ] ) ) {\n\t\t\t\t$options[ $key ] = Data_Encryption::decrypt( $options[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! self::is_valid_registration( $options ) ) {\n\t\t\t\/\/ Delete invalid registration data.\n\t\t\tdelete_option( $row );\n\n\t\t\t\/\/ Ask the user to reconnect.\n\t\t\tHelper::add_notification(\n\t\t\t\t__( 'Unable to validate Rank Math SEO registration data.', 'rank-math' ) .\n\t\t\t\t' <a href=\"' . esc_url( self::get_activate_url() ) . '\">' . __( 'Please try reconnecting.', 'rank-math' ) . '<\/a> ' .\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: KB Link *\/\n\t\t\t\t\t__( 'If the issue persists, please try the solution described in our Knowledge Base article: %s', 'rank-math' ),\n\t\t\t\t\t'<a href=\"' . KB::get( 'unable-to-encrypt', 'Registration Data' ) . '\" target=\"_blank\">' . __( '[3. Unable to Encrypt]', 'rank-math' ) . '<\/a>'\n\t\t\t\t),\n\t\t\t\t[ 'type' => 'error' ]\n\t\t\t);\n\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter whether we need to check for URL mismatch or not.\n\t\t *\/\n\t\t$do_url_check = apply_filters( 'rank_math\/registration\/do_url_check', ! get_option( 'rank_math_siteurl_mismatch_notice_dismissed' ) );\n\t\tif ( $do_url_check && isset( $options['site_url'] ) && Helper::get_home_url() !== $options['site_url'] ) {\n\t\t\t$message = esc_html__( 'Seems like your site URL has changed since you connected to Rank Math.', 'rank-math' ) . ' <a href=\"' . self::get_activate_url() . '\">' . esc_html__( 'Click here to reconnect.', 'rank-math' ) . '<\/a>';\n\t\t\tHelper::add_notification(\n\t\t\t\t$message,\n\t\t\t\t[\n\t\t\t\t\t'type' => 'warning',\n\t\t\t\t\t'id'   => 'rank-math-site-url-mismatch',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t\/**\n\t\t * Ensure the site_url is returned if it is absent, as it is required for the Content AI.\n\t\t *\/\n\t\tif ( empty( $options['site_url'] ) ) {\n\t\t\t$options['site_url'] = Helper::get_home_url();\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\t\/**\n\t * Check if registration data is valid.\n\t *\n\t * @param array $data Registration data.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_valid_registration( $data ) {\n\t\tif ( empty( $data['username'] ) || empty( $data['email'] ) || empty( $data['api_key'] ) || empty( $data['plan'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! filter_var( $data['email'], FILTER_VALIDATE_EMAIL ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( strlen( $data['plan'] ) > 32 ) { \/\/ This can happen when the decryption fails for some reason.\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get user plan.\n\t *\/\n\tpublic static function get_user_plan() {\n\t\t$data = self::get_registration_data();\n\n\t\treturn $data['plan'];\n\t}\n\n\t\/**\n\t * Is user plan expired.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_plan_expired() {\n\t\t$data = self::get_registration_data();\n\t\tif ( ! isset( $data['plan'] ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn 'free' === $data['plan'];\n\t}\n\n\t\/**\n\t * Remove registration data and disconnect from RankMath.com.\n\t *\/\n\tpublic static function deregister_user() {\n\t\t$registered = self::get_registration_data();\n\t\tif ( $registered && isset( $registered['username'] ) && isset( $registered['api_key'] ) ) {\n\t\t\tApi::get()->deactivate_site( $registered['username'], $registered['api_key'] );\n\t\t\tself::get_registration_data( false );\n\n\t\t\tdo_action( 'rank_math\/deregister_site' );\n\t\t}\n\t}\n\n\t\/**\n\t * Check if current page is media list page.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_media_library() {\n\t\tglobal $pagenow;\n\n\t\treturn 'upload.php' === $pagenow;\n\t}\n\n\t\/**\n\t * Check if current page is post list page.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_post_list() {\n\t\tglobal $pagenow;\n\n\t\treturn 'edit.php' === $pagenow;\n\t}\n\n\t\/**\n\t * Check if current page is post create\/edit screen.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_post_edit() {\n\t\tglobal $pagenow;\n\t\treturn ! Helper::is_ux_builder() && ( 'post.php' === $pagenow || 'post-new.php' === $pagenow );\n\t}\n\n\t\/**\n\t * Check if current page is term create\/edit screen.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_term_edit() {\n\t\tglobal $pagenow;\n\n\t\treturn 'term.php' === $pagenow || 'edit-tags.php' === $pagenow;\n\t}\n\n\t\/**\n\t * Check if current page is user create\/edit screen.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_user_edit() {\n\t\tglobal $pagenow;\n\n\t\treturn 'profile.php' === $pagenow || 'user-edit.php' === $pagenow;\n\t}\n\n\t\/**\n\t * Check if current page is user or term create\/edit screen.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_term_profile_page() {\n\t\tglobal $pagenow;\n\n\t\treturn self::is_term_edit() || self::is_user_edit();\n\t}\n\n\t\/**\n\t * Get Social Share buttons.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function get_social_share() {\n\t\tif ( Helper::is_whitelabel() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$tw_link = KB::get( 'logo', 'Setup Wizard Tweet Button' );\n\t\t$fb_link = rawurlencode( KB::get( 'logo', 'Facebook' ) );\n\t\t\/* translators: sitename *\/\n\t\t$tw_message = rawurlencode( sprintf( esc_html__( 'I just installed @RankMathSEO #WordPress Plugin. It looks great! %s', 'rank-math' ), $tw_link ) );\n\t\t\/* translators: sitename *\/\n\t\t$fb_message = rawurlencode( esc_html__( 'I just installed Rank Math SEO WordPress Plugin. It looks promising!', 'rank-math' ) );\n\n\t\t$tweet_url = Security::add_query_arg(\n\t\t\t[\n\t\t\t\t'text'     => $tw_message,\n\t\t\t\t'hashtags' => 'SEO',\n\t\t\t],\n\t\t\t'https:\/\/twitter.com\/intent\/tweet'\n\t\t);\n\n\t\t$fb_share_url = Security::add_query_arg(\n\t\t\t[\n\t\t\t\t'u'       => $fb_link,\n\t\t\t\t'quote'   => $fb_message,\n\t\t\t\t'caption' => esc_html__( 'SEO by Rank Math', 'rank-math' ),\n\t\t\t],\n\t\t\t'https:\/\/www.facebook.com\/sharer\/sharer.php'\n\t\t);\n\t\t?>\n\t\t<span class=\"wizard-share\">\n\t\t\t<a href=\"#\" onclick=\"window.open('<?php echo esc_url( $tweet_url ); ?>', 'sharewindow', 'resizable,width=600,height=300'); return false;\" class=\"share-twitter\">\n\t\t\t\t<span class=\"dashicons dashicons-twitter\"><\/span> <?php esc_html_e( 'Tweet', 'rank-math' ); ?>\n\t\t\t<\/a>\n\t\t\t<a href=\"#\" onclick=\"window.open('<?php echo esc_url( $fb_share_url ); ?>', 'sharewindow', 'resizable,width=600,height=300'); return false;\" class=\"share-facebook\">\n\t\t\t\t<span class=\"dashicons dashicons-facebook-alt\"><\/span> <?php esc_html_e( 'Share', 'rank-math' ); ?>\n\t\t\t<\/a>\n\t\t<\/span>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get product activation URL.\n\t *\n\t * @param string $redirect_to Redirecto url.\n\t *\n\t * @return string Activate URL.\n\t *\/\n\tpublic static function get_activate_url( $redirect_to = null ) {\n\t\tif ( empty( $redirect_to ) ) {\n\t\t\t$redirect_to = Security::add_query_arg_raw(\n\t\t\t\t[\n\t\t\t\t\t'page'  => 'rank-math',\n\t\t\t\t\t'view'  => 'help',\n\t\t\t\t\t'nonce' => wp_create_nonce( 'rank_math_register_product' ),\n\t\t\t\t],\n\t\t\t\t( is_multisite() && is_plugin_active_for_network( plugin_basename( RANK_MATH_FILE ) ) ) ? network_admin_url( 'admin.php' ) : admin_url( 'admin.php' )\n\t\t\t);\n\t\t} else {\n\t\t\t$redirect_to = Security::add_query_arg_raw(\n\t\t\t\t[\n\t\t\t\t\t'nonce' => wp_create_nonce( 'rank_math_register_product' ),\n\t\t\t\t],\n\t\t\t\t$redirect_to\n\t\t\t);\n\t\t}\n\n\t\t$args = [\n\t\t\t'site' => rawurlencode( home_url() ),\n\t\t\t'r'    => rawurlencode( $redirect_to ),\n\t\t];\n\n\t\treturn apply_filters(\n\t\t\t'rank_math\/license\/activate_url',\n\t\t\tSecurity::add_query_arg_raw( $args, RANK_MATH_SITE_URL . '\/auth' ),\n\t\t\t$args\n\t\t);\n\t}\n\n\t\/**\n\t * Check if page is set as Homepage.\n\t *\n\t * @since 1.0.42\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_home_page() {\n\t\t$front_page = (int) get_option( 'page_on_front' );\n\n\t\tif ( Helper::is_divi_frontend_editor() ) {\n\t\t\t$p = get_post();\n\t\t\treturn ! empty( $p->ID ) && $p->ID === $front_page;\n\t\t}\n\n\t\treturn $front_page && self::is_post_edit() && (int) Param::get( 'post' ) === $front_page;\n\t}\n\n\t\/**\n\t * Check if page is set as Posts Page.\n\t *\n\t * @since 1.0.43\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_posts_page() {\n\t\t$posts_page = (int) get_option( 'page_for_posts' );\n\n\t\treturn $posts_page && self::is_post_edit() && (int) Param::get( 'post' ) === $posts_page;\n\t}\n\n\t\/**\n\t * Get Trends icon <svg> element.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_trends_icon_svg() {\n\t\treturn '<svg viewBox=\"0 0 610 610\"><path d=\"M18.85,446,174.32,290.48l58.08,58.08L76.93,504a14.54,14.54,0,0,1-20.55,0L18.83,466.48a14.54,14.54,0,0,1,0-20.55Z\" style=\"fill:#4285f4\"\/><path d=\"M242.65,242.66,377.59,377.6l-47.75,47.75a14.54,14.54,0,0,1-20.55,0L174.37,290.43l47.75-47.75A14.52,14.52,0,0,1,242.65,242.66Z\" style=\"fill:#ea4335\"\/><polygon points=\"319.53 319.53 479.26 159.8 537.34 217.88 377.61 377.62 319.53 319.53\" style=\"fill:#fabb05\"\/><path d=\"M594.26,262.73V118.61h0a16.94,16.94,0,0,0-16.94-16.94H433.2a16.94,16.94,0,0,0-12,28.92L565.34,274.71h0a16.94,16.94,0,0,0,28.92-12Z\" style=\"fill:#34a853\"\/><rect width=\"610\" height=\"610\" style=\"fill:none\"\/><\/svg>';\n\t}\n\n\t\/**\n\t * Check if siteurl & home options are both valid URLs.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_site_url_valid() {\n\t\treturn (bool) filter_var( get_option( 'siteurl' ), FILTER_VALIDATE_URL ) && (bool) filter_var( get_option( 'home' ), FILTER_VALIDATE_URL );\n\t}\n\n\t\/**\n\t * Maybe show notice about invalid siteurl.\n\t *\/\n\tpublic static function maybe_show_invalid_siteurl_notice() {\n\t\tif ( ! self::is_site_url_valid() ) {\n\t\t\t?>\n\t\t\t<p class=\"notice notice-warning notice-alt notice-connect-disabled\">\n\t\t\t\t<?php\n\t\t\t\tprintf(\n\t\t\t\t\t\/\/ Translators: 1 is \"WordPress Address (URL)\", 2 is \"Site Address (URL)\", 3 is a link to the General Settings, with \"WordPress General Settings\" as anchor text.\n\t\t\t\t\tesc_html__( 'Rank Math cannot be connected because your site URL doesn\\'t appear to be a valid URL. If the domain name contains special characters, please make sure to use the encoded version in the %1$s &amp; %2$s fields on the %3$s page.', 'rank-math' ),\n\t\t\t\t\t'<strong>' . esc_html__( 'WordPress Address (URL)', 'rank-math' ) . '<\/strong>',\n\t\t\t\t\t'<strong>' . esc_html__( 'Site Address (URL)', 'rank-math' ) . '<\/strong>',\n\t\t\t\t\t'<a href=\"' . esc_url( admin_url( 'options-general.php' ) ) . '\">' . esc_html__( 'WordPress General Settings', 'rank-math' ) . '<\/a>'\n\t\t\t\t);\n\t\t\t\t?>\n\t\t\t<\/p>\n\t\t\t<?php\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/views\/dashboard.php","ext":"php","size":175,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Dashboard page template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n?>\n<div id=\"rank-math-dashboard-page\"><\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/views\/dashboard-help.php","ext":"php","size":3595,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Dashboard help tab template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( ! current_user_can( 'manage_options' ) ) {\n\treturn;\n}\n\nif ( Helper::has_cap( 'general' ) ) {\n\tinclude_once 'plugin-activation.php';\n}\n\nrequire_once 'plugin-activation.php'; ?>\n\n\t<div class=\"two-col rank-math-box-help\">\n\n\t\t<div class=\"col rank-math-box\">\n\n\t\t\t<header>\n\t\t\t\t<h3><?php esc_html_e( 'Next steps&hellip;', 'rank-math' ); ?><\/h3>\n\t\t\t<\/header>\n\n\t\t\t<div class=\"rank-math-box-content\">\n\n\t\t\t\t<ul class=\"rank-math-list-icon\">\n\n\t\t\t\t\t<li>\n\t\t\t\t\t<?php if ( ! defined( 'RANK_MATH_PRO_FILE' ) ) { ?>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'pro', 'Help Tab PRO Link' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-star-filled\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Upgrade to PRO', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'Advanced Schema, Analytics and much more...', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'how-to-setup', 'Help Tab Setup KB' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-settings\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Setup Rank Math', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'How to Properly Setup Rank Math', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t\t<\/li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'seo-import', 'Help Tab Import Data' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-import\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Import Data', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'How to Import Data from Your Previous SEO Plugin', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'score-100', 'Help Tab Score KB' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-post\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Improve SEO Score', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'How to Make Your Posts Pass All the Tests', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\n\t\t<\/div>\n\n\t\t<div class=\"col rank-math-box\">\n\n\t\t\t<header>\n\t\t\t\t<h3><?php esc_html_e( 'Product Support', 'rank-math' ); ?><\/h3>\n\t\t\t<\/header>\n\n\t\t\t<div class=\"rank-math-box-content\">\n\n\t\t\t\t<ul class=\"rank-math-list-icon\">\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'kb-seo-suite', 'Help Tab KB Link' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-help\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Online Documentation', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'Understand all the capabilities of Rank Math', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'support', 'Help Tab Ticket' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-support\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Ticket Support', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'Direct help from our qualified support team', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"<?php KB::the( 'help-affiliate', 'Help Tab Aff Link' ); ?>\" target=\"_blank\">\n\t\t\t\t\t\t\t<i class=\"rm-icon rm-icon-sitemap\"><\/i>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong><?php esc_html_e( 'Affiliate Program', 'rank-math' ); ?><\/strong>\n\t\t\t\t\t\t\t\t<p><?php esc_html_e( 'Earn flat 30% on every sale!', 'rank-math' ); ?><\/p>\n\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\n\t\t\t\t<\/ul>\n\n\t\t\t<\/div>\n\n\t\t<\/div>\n\n\t<\/div><!--.two-col-->\n\n<\/div><!--.dashboard-wrapper-->\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/views\/plugin-activation.php","ext":"php","size":2557,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Plugin activation template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$is_registered  = Helper::is_site_connected();\n$class          = $is_registered ? 'status-green' : 'status-red';\n$activate_url   = Admin_Helper::get_activate_url();\n$site_url_valid = Admin_Helper::is_site_url_valid();\n$button_class   = 'button button-primary button-connect' . ( $site_url_valid ? ' button-animated' : ' disabled' );\n?>\n<div class=\"rank-math-ui dashboard-wrapper container help\">\n\t<div class=\"rank-math-box <?php echo esc_attr( $class ); ?>\">\n\n\t\t<header>\n\n\t\t\t<h3><?php esc_html_e( 'Account', 'rank-math' ); ?><\/h3>\n\n\t\t\t<span class=\"button button-large <?php echo esc_attr( $class ); ?>\"><?php echo $is_registered ? '<i class=\"rm-icon rm-icon-tick\"><\/i>' . esc_html__( 'Connected', 'rank-math' ) : '<i class=\"rm-icon rm-icon-cross\"><\/i>' . esc_html__( 'Not Connected', 'rank-math' ); ?><\/span>\n\n\t\t<\/header>\n\n\t\t<div class=\"rank-math-box-content rank-math-ui\">\n\n\t\t\t<form method=\"post\" action=\"\">\n\n\t\t\t\t<input type=\"hidden\" name=\"registration-action\" value=\"<?php echo $is_registered ? 'deregister' : 'register'; ?>\">\n\t\t\t\t<?php wp_nonce_field( 'rank_math_register_product' ); ?>\n\n\t\t\t\t<?php if ( ! $is_registered ) : ?>\n\t\t\t\t\t<?php \/\/ translators: variables used to wrap the text in the strong tag. ?>\n\t\t\t\t\t<p><?php printf( wp_kses_post( __( 'The plugin is currently not connected with your Rank Math account. Click on the button below to login or register for FREE using your %1$sGoogle account, Facebook account%2$s or %1$syour email account%2$s.', 'rank-math' ) ), '<strong>', '<\/strong>' ); ?><\/p>\n\t\t\t\t\t<?php Admin_Helper::maybe_show_invalid_siteurl_notice(); ?>\n\t\t\t\t\t<a href=\"<?php echo esc_url( $activate_url ); ?>\" class=\"<?php echo esc_attr( $button_class ); ?>\" ><?php esc_html_e( 'Connect Now', 'rank-math' ); ?><\/a>\n\t\t\t\t<?php else : ?>\n\t\t\t\t\t<?php \/\/ translators: variables used to wrap the text in the strong tag. ?>\n\t\t\t\t\t<p><?php printf( wp_kses_post( __( 'You have successfully activated Rank Math. If you find the plugin useful, %1$s feel free to recommend it to your friends or colleagues %2$s.', 'rank-math' ) ), '<strong>', '<\/strong>' ); ?><?php Admin_Helper::get_social_share(); ?><\/p>\n\t\t\t\t\t<div class=\"frm-submit\">\n\t\t\t\t\t\t<button type=\"submit\" class=\"button button-link-delete button-xlarge\" name=\"button\"><?php echo esc_html__( 'Disconnect Account', 'rank-math' ); ?><\/button>\n\t\t\t\t\t<\/div>\n\t\t\t\t<?php endif; ?>\n\t\t\t<\/form>\n\n\t\t<\/div>\n\n\t<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/notifications\/class-notification-center.php","ext":"php","size":8300,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Notification center handles notifications storage and display.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Notifications;\n\n\/**\n * Notification_Center class.\n *\/\nclass Notification_Center {\n\n\t\/**\n\t * Option name to store notifications in.\n\t *\n\t * @var string\n\t *\/\n\tprivate $storage_key = '';\n\n\t\/**\n\t * Notifications.\n\t *\n\t * @var array\n\t *\/\n\tprivate $notifications = [];\n\n\t\/**\n\t * Stores whether we need to clear storage or not.\n\t *\n\t * @var array\n\t *\/\n\tprivate $should_clear_storage = true;\n\n\t\/**\n\t * Stores already displayed notice texts to avoid duplication.\n\t *\n\t * @var array\n\t *\/\n\tprivate $displayed_notifications = [];\n\n\t\/**\n\t * Internal flag for whether notifications have been retrieved from storage.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $retrieved = false;\n\n\t\/**\n\t * Construct\n\t *\n\t * @param string $storage_key Option name to store notification in.\n\t *\/\n\tpublic function __construct( $storage_key = 'mythemeshop_notifications' ) {\n\t\t$this->storage_key = $storage_key;\n\t\tadd_action( 'plugins_loaded', [ $this, 'get_from_storage' ], 5 );\n\t\tadd_action( 'all_admin_notices', [ $this, 'display' ] );\n\t\tadd_action( 'shutdown', [ $this, 'update_storage' ] );\n\t\tadd_action( 'admin_footer', [ $this, 'print_javascript' ] );\n\n\t\tadd_action( 'wp_ajax_wp_helpers_notice_dismissible', [ $this, 'notice_dismissible' ] );\n\t}\n\n\t\/**\n\t * Retrieve the notifications from storage\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return void\n\t *\/\n\tpublic function get_from_storage() {\n\t\tif ( $this->retrieved ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->retrieved = true;\n\t\t$notifications   = get_option( $this->storage_key );\n\n\t\t\/\/ Check if notifications are stored.\n\t\tif ( empty( $notifications ) ) {\n\t\t\t$this->should_clear_storage = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_array( $notifications ) ) {\n\t\t\tforeach ( $notifications as $notification ) {\n\t\t\t\t$this->notifications[] = new Notification(\n\t\t\t\t\t$notification['message'],\n\t\t\t\t\t$notification['options']\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Display the notifications.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function display() {\n\n\t\t\/\/ Never display notifications for network admin.\n\t\tif ( $this->is_network_admin() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$notifications = $this->get_sorted_notifications();\n\t\tif ( empty( $notifications ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $notifications as $notification ) {\n\t\t\tif ( $notification->can_display() && ! in_array( (string) $notification, $this->displayed_notifications, true ) ) {\n\t\t\t\techo wp_kses_post( $notification );\n\t\t\t\t$this->displayed_notifications[] = (string) $notification;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Print JS for dismissile.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function print_javascript() {\n\t\t?>\n\t\t<script>\n\t\t\t;(function($) {\n\t\t\t\t$( '.wp-helpers-notice.is-dismissible' ).on( 'click', '.notice-dismiss', function() {\n\t\t\t\t\tvar notice = $( this ).parent()\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'wp_helpers_notice_dismissible',\n\t\t\t\t\t\t\tsecurity: notice.data( 'security' ),\n\t\t\t\t\t\t\tnotificationId: notice.attr( 'id' )\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})(jQuery);\n\t\t<\/script>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Save persistent or transactional notifications to storage.\n\t *\n\t * We need to be able to retrieve these so they can be dismissed at any time during the execution.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function update_storage() {\n\t\t$notifications = $this->get_notifications();\n\t\t$notifications = array_filter( $notifications, [ $this, 'remove_notification' ] );\n\n\t\t\/**\n\t\t * Filter: 'wp_helpers_notifications_before_storage' - Allows developer to filter notifications before saving them.\n\t\t *\n\t\t * @param Notification[] $notifications\n\t\t *\/\n\t\t$notifications = apply_filters( 'wp_helpers_notifications_before_storage', $notifications );\n\n\t\t\/\/ No notifications to store, clear storage.\n\t\tif ( empty( $notifications ) && $this->should_clear_storage ) {\n\t\t\tdelete_option( $this->storage_key );\n\t\t\treturn;\n\t\t}\n\n\t\t$notifications = array_map( [ $this, 'notification_to_array' ], $notifications );\n\n\t\t\/\/ Save the notifications to the storage.\n\t\tupdate_option( $this->storage_key, $notifications );\n\t}\n\n\t\/**\n\t * Dismiss persistent notice.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function notice_dismissible() {\n\t\t$notification_id = filter_input( INPUT_POST, 'notificationId' );\n\t\tcheck_ajax_referer( $notification_id, 'security' );\n\n\t\t$notification = $this->remove_by_id( $notification_id );\n\n\t\t\/**\n\t\t * Filter: 'wp_helpers_notification_dismissed' - Allows developer to perform action after dismissed.\n\t\t *\n\t\t * @param string  $notification_id\n\t\t * @param Notification $notifications\n\t\t *\/\n\t\tdo_action( 'wp_helpers_notification_dismissed', $notification_id, $notification );\n\t}\n\n\t\/**\n\t * Add notification\n\t *\n\t * @param string $message Message string.\n\t * @param array  $options Set of options.\n\t *\/\n\tpublic function add( $message, $options = [] ) {\n\t\tif ( isset( $options['id'] ) && ! is_null( $this->get_notification_by_id( $options['id'] ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->notifications[] = new Notification(\n\t\t\t$message,\n\t\t\t$options\n\t\t);\n\t}\n\n\t\/**\n\t * Provide a way to verify present notifications\n\t *\n\t * @return array|Notification[] Registered notifications.\n\t *\/\n\tpublic function get_notifications() {\n\t\treturn $this->notifications;\n\t}\n\n\t\/**\n\t * Get the notification by ID\n\t *\n\t * @param  string $notification_id The ID of the notification to search for.\n\t * @return null|Notification\n\t *\/\n\tpublic function get_notification_by_id( $notification_id ) {\n\t\tforeach ( $this->notifications as $notification ) {\n\t\t\tif ( $notification_id === $notification->args( 'id' ) ) {\n\t\t\t\treturn $notification;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Remove the notification by ID\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $notification_id The ID of the notification to search for.\n\t * @return Notification Instance of delete notification.\n\t *\/\n\tpublic function remove_by_id( $notification_id ) {\n\t\t$notification = $this->get_notification_by_id( $notification_id );\n\t\tif ( ! is_null( $notification ) ) {\n\t\t\t$notification->dismiss();\n\t\t}\n\n\t\treturn $notification;\n\t}\n\n\t\/**\n\t * Remove notification after it has been displayed.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param Notification $notification Notification to remove.\n\t *\/\n\tpublic function remove_notification( Notification $notification ) {\n\t\tif ( ! $notification->is_displayed() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( $notification->is_persistent() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Return the notifications sorted on type and priority\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array|Notification[] Sorted Notifications\n\t *\/\n\tprivate function get_sorted_notifications() {\n\t\t$notifications = $this->get_notifications();\n\t\tif ( empty( $notifications ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t\/\/ Sort by severity, error first.\n\t\tusort( $notifications, [ $this, 'sort_notifications' ] );\n\n\t\treturn $notifications;\n\t}\n\n\t\/**\n\t * Sort on type then priority\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  Notification $first  Compare with B.\n\t * @param  Notification $second Compare with A.\n\t * @return int 1, 0 or -1 for sorting offset.\n\t *\/\n\tprivate function sort_notifications( Notification $first, Notification $second ) {\n\n\t\tif ( 'error' === $first->args( 'type' ) ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif ( 'error' === $second->args( 'type' ) ) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Convert Notification to array representation\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  Notification $notification Notification to convert.\n\t * @return array\n\t *\/\n\tprivate function notification_to_array( Notification $notification ) {\n\t\treturn $notification->to_array();\n\t}\n\n\t\/**\n\t * Check if is network admin.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_network_admin() {\n\t\treturn function_exists( 'is_network_admin' ) && is_network_admin();\n\t}\n\n\t\/**\n\t * Check if a notification with the given ID exists.\n\t *\n\t * @param string $id Notification ID.\n\t * @return boolean\n\t *\/\n\tpublic function has_notification( $id ) {\n\t\t$notifications = $this->get_notifications();\n\t\tforeach ( $notifications as $notification ) {\n\t\t\tif ( isset( $notification->options['id'] ) && $notification->options['id'] === $id ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/notifications\/class-notification.php","ext":"php","size":4834,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Notification\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Notifications;\n\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\HTML;\n\n\/**\n * Notification class.\n *\/\nclass Notification {\n\n\t\/**\n\t * Notification type.\n\t *\n\t * @var string\n\t *\/\n\tconst ERROR = 'error';\n\n\t\/**\n\t * Notification type.\n\t *\n\t * @var string\n\t *\/\n\tconst SUCCESS = 'success';\n\n\t\/**\n\t * Notification type.\n\t *\n\t * @var string\n\t *\/\n\tconst INFO = 'info';\n\n\t\/**\n\t * Notification type.\n\t *\n\t * @var string\n\t *\/\n\tconst WARNING = 'warning';\n\n\t\/**\n\t * Screen check.\n\t *\n\t * @var string\n\t *\/\n\tconst SCREEN_ANY = 'any';\n\n\t\/**\n\t * User capability check.\n\t *\n\t * @var string\n\t *\/\n\tconst CAPABILITY_ANY = '';\n\n\t\/**\n\t * The notification message.\n\t *\n\t * @var string\n\t *\/\n\tpublic $message = '';\n\n\t\/**\n\t * Contains optional arguments:\n\t *\n\t * -             type: The notification type, i.e. 'updated' or 'error'\n\t * -               id: The ID of the notification\n\t * -    dismissal_key: Option name to save dismissal information in, ID will be used if not supplied.\n\t * -           screen: Only display on plugin page or on every page.\n\t *\n\t * @var array Options of this Notification.\n\t *\/\n\tpublic $options = [];\n\n\t\/**\n\t * Internal flag for whether notifications has been displayed.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $displayed = false;\n\n\t\/**\n\t * Notification class constructor.\n\t *\n\t * @param string $message Message string.\n\t * @param array  $options Set of options.\n\t *\/\n\tpublic function __construct( $message, $options = [] ) {\n\t\t$this->message = $message;\n\t\t$this->options = wp_parse_args(\n\t\t\t$options,\n\t\t\t[\n\t\t\t\t'id'         => '',\n\t\t\t\t'classes'    => '',\n\t\t\t\t'type'       => self::SUCCESS,\n\t\t\t\t'screen'     => self::SCREEN_ANY,\n\t\t\t\t'capability' => self::CAPABILITY_ANY,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Adds string (view) behaviour to the Notification.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string\n\t *\/\n\tpublic function __toString() {\n\t\treturn $this->render();\n\t}\n\n\t\/**\n\t * Return data from options.\n\t *\n\t * @param  string $id Data to get.\n\t * @return mixed\n\t *\/\n\tpublic function args( $id ) {\n\t\treturn $this->options[ $id ];\n\t}\n\n\t\/**\n\t * Is this Notification persistent.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool True if persistent, False if fire and forget.\n\t *\/\n\tpublic function is_persistent() {\n\t\treturn ! empty( $this->args( 'id' ) );\n\t}\n\n\t\/**\n\t * Is this notification displayed.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_displayed() {\n\t\treturn $this->displayed;\n\t}\n\n\t\/**\n\t * Can display on current screen.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t *\/\n\tpublic function can_display() {\n\t\t\/\/ Removed.\n\t\tif ( $this->displayed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$screen = get_current_screen();\n\t\tif ( self::SCREEN_ANY === $this->args( 'screen' ) || Str::contains( $this->args( 'screen' ), $screen->id ) ) {\n\t\t\t$this->displayed = true;\n\t\t}\n\n\t\tif ( self::CAPABILITY_ANY !== $this->args( 'capability' ) && ! current_user_can( $this->args( 'capability' ) ) ) {\n\t\t\t$this->displayed = false;\n\t\t}\n\n\t\treturn $this->displayed;\n\t}\n\n\t\/**\n\t * Dismiss persisten notification.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function dismiss() {\n\t\t$this->displayed     = true;\n\t\t$this->options['id'] = '';\n\t}\n\n\t\/**\n\t * Return the object properties as an array.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic function to_array() {\n\t\treturn [\n\t\t\t'message' => $this->message,\n\t\t\t'options' => $this->options,\n\t\t];\n\t}\n\n\t\/**\n\t * Renders the notification as a string.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string The rendered notification.\n\t *\/\n\tpublic function render() {\n\t\t$attributes = [];\n\n\t\t\/\/ Default notification classes.\n\t\t$classes = [\n\t\t\t'notice',\n\t\t\t'notice-' . $this->args( 'type' ),\n\t\t\t$this->args( 'classes' ),\n\t\t];\n\n\t\t\/\/ Maintain WordPress visualisation of alerts when they are not persistent.\n\t\tif ( $this->is_persistent() ) {\n\t\t\t$classes[]                   = 'is-dismissible';\n\t\t\t$classes[]                   = 'wp-helpers-notice';\n\t\t\t$attributes['id']            = $this->args( 'id' );\n\t\t\t$attributes['data-security'] = wp_create_nonce( $this->args( 'id' ) );\n\t\t}\n\n\t\tif ( ! empty( $classes ) ) {\n\t\t\t$attributes['class'] = implode( ' ', array_filter( $classes ) );\n\t\t}\n\n\t\t\/\/ Build the output DIV.\n\t\t$output = '<div' . HTML::attributes_to_string( $attributes ) . '>' . wpautop( $this->message ) . '<\/div>' . PHP_EOL;\n\n\t\t\/**\n\t\t * Filter: 'wp_helpers_notifications_render' - Allows developer to filter notifications before the output is finalized.\n\t\t *\n\t\t * @param string $output  HTML output.\n\t\t * @param string $message Notice message.\n\t\t * @param array  $options Notice args.\n\t\t *\/\n\t\t$output = apply_filters( 'wp_helpers_notifications_render', $output, $this->message, $this->options );\n\n\t\treturn $output;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-bulk-actions.php","ext":"php","size":6028,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin post columns functionality.\n *\n * @since      1.0.212\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post_Columns class.\n *\/\nclass Bulk_Actions implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * SEO data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $data = [];\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'current_screen', 'init' );\n\t}\n\n\t\/**\n\t * Intialize.\n\t *\/\n\tpublic function init() {\n\t\tif ( ! Helper::has_cap( 'onpage_general' ) || ! $this->can_add() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->register_post_columns();\n\t\t$this->action( 'admin_enqueue_scripts', 'enqueue' );\n\t}\n\n\t\/**\n\t * Register post column hooks.\n\t *\/\n\tprivate function register_post_columns() {\n\t\t$post_types = Helper::get_allowed_post_types();\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$this->filter( \"bulk_actions-edit-{$post_type}\", 'post_bulk_actions' );\n\t\t\t$this->filter( \"handle_bulk_actions-edit-{$post_type}\", 'handle_bulk_actions', 10, 3 );\n\t\t}\n\n\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\tunset( $taxonomies['post_format'] );\n\t\t$taxonomies = wp_list_pluck( $taxonomies, 'label', 'name' );\n\t\tforeach ( $taxonomies as $taxonomy => $label ) {\n\t\t\t$this->filter( \"bulk_actions-edit-{$taxonomy}\", 'post_bulk_actions' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add bulk actions for applicable posts, pages, CPTs.\n\t *\n\t * @param  array $actions Actions.\n\t * @return array             New actions.\n\t *\/\n\tpublic function post_bulk_actions( $actions ) {\n\t\t$new_actions = [ 'rank_math_options' => __( '&#8595; Rank Math', 'rank-math' ) ];\n\n\t\tif ( Helper::has_cap( 'onpage_advanced' ) ) {\n\t\t\t$new_actions['rank_math_bulk_robots_noindex']   = __( 'Set to noindex', 'rank-math' );\n\t\t\t$new_actions['rank_math_bulk_robots_index']     = __( 'Set to index', 'rank-math' );\n\t\t\t$new_actions['rank_math_bulk_robots_nofollow']  = __( 'Set to nofollow', 'rank-math' );\n\t\t\t$new_actions['rank_math_bulk_robots_follow']    = __( 'Set to follow', 'rank-math' );\n\t\t\t$new_actions['rank_math_bulk_remove_canonical'] = __( 'Remove custom canonical URL', 'rank-math' );\n\n\t\t\tif ( Helper::is_module_active( 'redirections' ) && Helper::has_cap( 'redirections' ) ) {\n\t\t\t\t$new_actions['rank_math_bulk_redirect']      = __( 'Redirect', 'rank-math' );\n\t\t\t\t$new_actions['rank_math_bulk_stop_redirect'] = __( 'Remove redirection', 'rank-math' );\n\t\t\t}\n\t\t}\n\n\t\tif ( Helper::is_module_active( 'rich-snippet' ) && Helper::has_cap( 'onpage_snippet' ) ) {\n\t\t\t$new_actions['rank_math_bulk_schema_none'] = __( 'Set Schema: None', 'rank-math' );\n\t\t\t$post_type                                 = Param::get( 'post_type', get_post_type() );\n\t\t\t$post_type_default                         = Helper::get_settings( 'titles.pt_' . $post_type . '_default_rich_snippet' );\n\n\t\t\tif ( $post_type_default ) {\n\t\t\t\t\/\/ Translators: placeholder is the default Schema type setting.\n\t\t\t\t$new_actions['rank_math_bulk_schema_default'] = sprintf( __( 'Set Schema: Default (%s)', 'rank-math' ), $post_type_default );\n\t\t\t}\n\t\t}\n\n\t\tif ( Helper::has_cap( 'onpage_general' ) && Helper::should_determine_search_intent() ) {\n\t\t\t$new_actions['rank_math_bulk_determine_search_intent'] = __( 'Determine Search Intent', 'rank-math' );\n\t\t}\n\n\t\tif ( is_array( $actions ) && count( $new_actions ) > 1 ) {\n\t\t\treturn array_merge( $actions, $new_actions );\n\t\t}\n\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Handle bulk actions for applicable posts, pages, CPTs.\n\t *\n\t * @param  string $redirect   Redirect URL.\n\t * @param  string $doaction   Performed action.\n\t * @param  array  $object_ids Post IDs.\n\t *\n\t * @return string New redirect URL.\n\t *\/\n\tpublic function handle_bulk_actions( $redirect, $doaction, $object_ids ) {\n\t\tif (\n\t\t\t$doaction === 'rank_math_bulk_determine_search_intent' &&\n\t\t\t(\n\t\t\t\tdefined( 'RANK_MATH_PRO_VERSION' ) &&\n\t\t\t\tversion_compare( RANK_MATH_PRO_VERSION, '3.0.83-beta', '<' )\n\t\t\t)\n\t\t) {\n\t\t\tHelper::add_notification(\n\t\t\t\tesc_html__( 'Your current plugin version does not support this feature. Please update Rank Math PRO to version 3.0.83 or later to unlock full functionality.', 'rank-math' ),\n\t\t\t\t[\n\t\t\t\t\t'type'    => 'error',\n\t\t\t\t\t'id'      => 'rank_math_search_intent_error',\n\t\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn $redirect;\n\t}\n\n\t\/**\n\t * Enqueue styles and scripts.\n\t *\/\n\tpublic function enqueue() {\n\t\t$screen = get_current_screen();\n\t\twp_enqueue_style( 'rank-math-post-bulk-edit', rank_math()->plugin_url() . 'assets\/admin\/css\/post-list.css', [ 'wp-components' ], rank_math()->version );\n\n\t\t$allow_editing = Helper::get_settings( 'titles.pt_' . $screen->post_type . '_bulk_editing', true );\n\t\tif ( ! $allow_editing || 'readonly' === $allow_editing ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_enqueue_script( 'rank-math-post-bulk-edit', rank_math()->plugin_url() . 'assets\/admin\/js\/post-list.js', [ 'lodash', 'wp-element', 'wp-components' ], rank_math()->version, true );\n\t\tHelper::add_json(\n\t\t\t'contentAI',\n\t\t\t[\n\t\t\t\t'isUserRegistered' => Helper::is_site_connected(),\n\t\t\t\t'credits'          => Helper::get_content_ai_credits(),\n\t\t\t\t'plan'             => Helper::get_content_ai_plan(),\n\t\t\t]\n\t\t);\n\t\tHelper::add_json( 'isProActive', defined( 'RANK_MATH_PRO_FILE' ) );\n\t\tHelper::add_json( 'connectSiteUrl', Admin_Helper::get_activate_url( Url::get_current_url() ) );\n\t}\n\n\t\/**\n\t * Whether to add Bulk actions on the page.\n\t *\/\n\tprivate function can_add() {\n\t\tglobal $pagenow;\n\t\tif ( 'edit-tags.php' === $pagenow ) {\n\t\t\treturn Helper::get_settings( 'titles.tax_' . Param::get( 'taxonomy' ) . '_add_meta_box' );\n\t\t}\n\n\t\tif ( Admin_Helper::is_post_list() || Admin_Helper::is_media_library() ) {\n\t\t\t$screen = get_current_screen();\n\n\t\t\t$allowed_post_types   = Helper::get_allowed_post_types();\n\t\t\t$allowed_post_types[] = 'attachment';\n\n\t\t\treturn in_array( $screen->post_type, $allowed_post_types, true );\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-dashboard-widget.php","ext":"php","size":6368,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Dashboard Widget of the plugin.\n *\n * @since      1.0.81\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Dashboard_Widget class.\n *\n * @codeCoverageIgnore\n *\/\nclass Dashboard_Widget {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'wp_dashboard_setup', 'add_dashboard_widgets' );\n\t\t$this->action( 'rank_math\/dashboard\/widget', 'dashboard_widget_feed', 98 );\n\t\t$this->action( 'rank_math\/dashboard\/widget', 'dashboard_widget_footer', 99 );\n\t}\n\n\t\/**\n\t * Register dashboard widget.\n\t *\/\n\tpublic function add_dashboard_widgets() {\n\t\t\/\/ Early Bail if action is not registered for the dashboard widget hook.\n\t\tif (\n\t\t\t( ! Helper::is_module_active( '404-monitor' ) || ! Helper::has_cap( '404_monitor' ) ) &&\n\t\t\t( ! Helper::is_module_active( 'redirections' ) || ! Helper::has_cap( 'redirections' ) ) &&\n\t\t\t( ! Helper::is_module_active( 'analytics' ) || ! Helper::has_cap( 'analytics' ) )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$icon = '<span class=\"rank-math-icon\"><svg viewBox=\"0 0 462.03 462.03\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"20\"><g><path d=\"m462 234.84-76.17 3.43 13.43 21-127 81.18-126-52.93-146.26 60.97 10.14 24.34 136.1-56.71 128.57 54 138.69-88.61 13.43 21z\"><\/path><path d=\"m54.1 312.78 92.18-38.41 4.49 1.89v-54.58h-96.67zm210.9-223.57v235.05l7.26 3 89.43-57.05v-181zm-105.44 190.79 96.67 40.62v-165.19h-96.67z\"><\/path><\/g><\/svg><\/span>';\n\n\t\twp_add_dashboard_widget(\n\t\t\t'rank_math_dashboard_widget',\n\t\t\t$icon . esc_html__( 'Rank Math Overview', 'rank-math' ),\n\t\t\t[ $this, 'render_dashboard_widget' ],\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t'normal',\n\t\t\t'high'\n\t\t);\n\t}\n\n\t\/**\n\t * Render dashboard widget.\n\t *\/\n\tpublic function render_dashboard_widget() {\n\t\techo '<div id=\"rank-math-dashboard-widget\" class=\"rank-math-loading\"><\/div>';\n\t}\n\n\t\/**\n\t * Add Feed data in the admin dashboard widget.\n\t *\/\n\tpublic function dashboard_widget_feed() {\n\t\t$posts = $this->get_feed();\n\t\t?>\n\t\t<h3 class=\"rank-math-blog-title\"><?php esc_html_e( 'Latest Blog Posts from Rank Math', 'rank-math' ); ?><\/h3>\n\t\t<?php if ( empty( $posts ) ) : ?>\n\t\t\t<p><?php esc_html_e( 'Error: the Rank Math blog feed could not be downloaded.', 'rank-math' ); ?><\/p>\n\t\t\t<?php\n\t\t\treturn;\n\t\tendif;\n\n\t\techo '<ul class=\"rank-math-blog-list\">';\n\n\t\t$posts = $this->filter_posts( $posts );\n\t\t$label = $this->get_item_label( $posts );\n\n\t\tforeach ( $posts as $index => $post ) :\n\t\t\t$link = $this->add_utm_params( $post['link'], $index );\n\t\t\t?>\n\t\t\t<li class=\"rank-math-blog-post\">\n\t\t\t\t<h4>\n\t\t\t\t\t<?php if ( $label ) : ?>\n\t\t\t\t\t\t<span class=\"rank-math-new-badge\"><?php echo esc_html( $label ); ?><\/span>\n\t\t\t\t\t<?php endif; ?>\n\t\t\t\t\t<a target=\"_blank\" href=\"<?php echo esc_url( $link ); ?>\">\n\t\t\t\t\t\t<?php echo esc_html( $post['title']['rendered'] ); ?>\n\t\t\t\t\t<\/a>\n\t\t\t\t<\/h4>\n\t\t\t<\/li>\n\t\t\t<?php\n\t\t\t$label = '';\n\t\tendforeach;\n\t\techo '<\/ul>';\n\t}\n\n\t\/**\n\t * Get label for first post.\n\t *\n\t * @param array $posts Posts.\n\t *\/\n\tprivate function get_item_label( $posts ) {\n\t\t$label = '';\n\t\tif ( ! empty( $posts[0]['custom_label'] ) ) {\n\t\t\t$label = $posts[0]['custom_label'];\n\t\t}\n\n\t\t$is_new = time() - strtotime( $posts[0]['date'] ) < 15 * DAY_IN_SECONDS;\n\t\tif ( $is_new && empty( $label ) ) {\n\t\t\t$label = esc_html__( 'NEW', 'rank-math' );\n\t\t}\n\n\t\treturn $label;\n\t}\n\n\t\/**\n\t * Filter posts by display condition.\n\t *\n\t * @param array $posts Posts.\n\t *\/\n\tprivate function filter_posts( $posts ) {\n\t\t$posts = array_filter(\n\t\t\t$posts,\n\t\t\tfunction ( $post ) {\n\t\t\t\tif ( isset( $post['condition'] ) && 'is_free' === $post['condition'] && defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\n\t\treturn array_slice( $posts, 0, 3 ); \/\/ Max 3 posts.\n\t}\n\n\t\/**\n\t * Add UTM tags to links. Only add if UTM params are not already present.\n\t *\n\t * @param string $link  Link.\n\t * @param int    $index Array index.\n\t *\/\n\tprivate function add_utm_params( $link, $index ) {\n\t\t\/\/ Skip if link has any UTM tags already set.\n\t\tif ( preg_match( '\/[?&]utm_[a-z_]+=\/', $link ) ) {\n\t\t\treturn $link;\n\t\t}\n\n\t\t$utm_params = [\n\t\t\t'utm_source'   => 'Plugin',\n\t\t\t'utm_medium'   => 'Dashboard%20Widget%20Post%20' . ( $index + 1 ),\n\t\t\t'utm_campaign' => 'WP',\n\t\t];\n\n\t\treturn add_query_arg( $utm_params, $link );\n\t}\n\n\t\/**\n\t * Add footer in the admin dashboard widget.\n\t *\/\n\tpublic function dashboard_widget_footer() {\n\t\t?>\n\t\t<div class=\"rank-math-widget-footer\">\n\t\t\t<a target=\"_blank\" href=\"<?php KB::the( 'blog', 'Dashboard Widget Blog' ); ?>\">\n\t\t\t\t<?php esc_html_e( 'Blog', 'rank-math' ); ?>\n\t\t\t\t<span class=\"screen-reader-text\"><?php esc_html_e( '(opens in a new window)', 'rank-math' ); ?><\/span>\n\t\t\t\t<span aria-hidden=\"true\" class=\"dashicons dashicons-external\"><\/span>\n\t\t\t<\/a>\n\t\t\t<a target=\"_blank\" href=\"<?php KB::the( 'knowledgebase', 'Dashboard Widget Help' ); ?>\">\n\t\t\t\t<?php esc_html_e( 'Help', 'rank-math' ); ?>\n\t\t\t\t<span class=\"screen-reader-text\"><?php esc_html_e( '(opens in a new window)', 'rank-math' ); ?><\/span>\n\t\t\t\t<span aria-hidden=\"true\" class=\"dashicons dashicons-external\"><\/span>\n\t\t\t<\/a>\n\t\t\t<?php if ( ! defined( 'RANK_MATH_PRO_FILE' ) ) { ?>\n\t\t\t\t<a target=\"_blank\" href=\"<?php KB::the( 'pro', 'Dashboard Widget PRO' ); ?>\" class=\"rank-math-widget-go-pro\">\n\t\t\t\t\t<?php esc_html_e( 'Go Pro', 'rank-math' ); ?>\n\t\t\t\t\t<span class=\"screen-reader-text\"><?php esc_html_e( '(opens in a new window)', 'rank-math' ); ?><\/span>\n\t\t\t\t\t<span aria-hidden=\"true\" class=\"dashicons dashicons-external\"><\/span>\n\t\t\t\t<\/a>\n\t\t\t<?php } ?>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get posts.\n\t *\/\n\tprivate function get_feed() {\n\t\t$cache_key = 'rank_math_feed_posts_v2';\n\t\t$cache     = get_transient( $cache_key );\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t$response = wp_remote_get( 'https:\/\/rankmath.com\/wp-json\/wp\/v2\/posts?dashboard_widget_feed=1' );\n\n\t\tif ( is_wp_error( $response ) || 200 !== (int) wp_remote_retrieve_response_code( $response ) ) {\n\t\t\tset_transient( $cache_key, [], 2 * HOUR_IN_SECONDS );\n\n\t\t\treturn false;\n\t\t}\n\n\t\t$posts = json_decode( wp_remote_retrieve_body( $response ), true );\n\n\t\tif ( empty( $posts ) || ! is_array( $posts ) ) {\n\t\t\tset_transient( $cache_key, [], 2 * HOUR_IN_SECONDS );\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset_transient( $cache_key, $posts, 12 * HOUR_IN_SECONDS );\n\n\t\treturn $posts;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-dashboard-nav.php","ext":"php","size":2916,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The nav tabs on the Dashboard page.\n *\n * @since      1.0.40\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin Dashboard Nav class.\n *\n * @codeCoverageIgnore\n *\/\nclass Admin_Dashboard_Nav {\n\n\t\/**\n\t * Display dashboard tabs.\n\t *\/\n\tpublic function display() {\n\t\t$nav_links = $this->get_nav_links();\n\t\tif ( empty( $nav_links ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<div class=\"rank-math-tab-nav\" role=\"tablist\" aria-orientation=\"horizontal\">\n\t\t\t<?php\n\t\t\tforeach ( $nav_links as $id => $link ) {\n\t\t\t\t$this->nav_link( $link );\n\t\t\t}\n\t\t\t?>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get URL for dashboard nav links.\n\t *\n\t * @param  array $link Link data.\n\t * @return string      Link URL.\n\t *\/\n\tpublic function get_link_url( $link ) {\n\t\treturn is_network_admin() ?\n\t\t\tSecurity::add_query_arg(\n\t\t\t\t[\n\t\t\t\t\t'page' => 'rank-math',\n\t\t\t\t\t'view' => $link['id'],\n\t\t\t\t],\n\t\t\t\tnetwork_admin_url( 'admin.php' )\n\t\t\t) :\n\t\t\tHelper::get_admin_url( $link['url'], $link['args'] );\n\t}\n\n\t\/**\n\t * Output dashboard nav link.\n\t *\n\t * @param  array $link Link data.\n\t * @return void\n\t *\/\n\tpublic function nav_link( $link ) {\n\t\tif ( isset( $link['cap'] ) && ! current_user_can( $link['cap'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$default_tab = is_network_admin() ? 'help' : 'modules';\n\t\t?>\n\t\t<a\n\t\t\tclass=\"rank-math-tab<?php echo Param::get( 'view', $default_tab ) === sanitize_html_class( $link['id'] ) ? ' is-active' : ''; ?>\"\n\t\t\thref=\"<?php echo esc_url( $this->get_link_url( $link ) ); ?>\"\n\t\t\ttitle=\"<?php echo esc_attr( $link['title'] ); ?>\">\n\t\t\t<?php echo esc_html( $link['title'] ); ?>\n\t\t<\/a>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Get dashbaord navigation links\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_nav_links() {\n\t\t$links = [\n\t\t\t'modules' => [\n\t\t\t\t'id'    => 'modules',\n\t\t\t\t'url'   => '',\n\t\t\t\t'args'  => 'view=modules',\n\t\t\t\t'cap'   => 'manage_options',\n\t\t\t\t'title' => esc_html__( 'Modules', 'rank-math' ),\n\t\t\t],\n\t\t\t'help'    => [\n\t\t\t\t'id'    => 'help',\n\t\t\t\t'url'   => '',\n\t\t\t\t'args'  => 'view=help',\n\t\t\t\t'cap'   => 'manage_options',\n\t\t\t\t'title' => esc_html__( 'Help', 'rank-math' ),\n\t\t\t],\n\t\t\t'wizard'  => [\n\t\t\t\t'id'    => 'wizard',\n\t\t\t\t'url'   => 'wizard',\n\t\t\t\t'args'  => '',\n\t\t\t\t'cap'   => 'manage_options',\n\t\t\t\t'title' => esc_html__( 'Setup Wizard', 'rank-math' ),\n\t\t\t],\n\t\t];\n\n\t\tif ( Helper::is_advanced_mode() ) {\n\t\t\t$links['import-export'] = [\n\t\t\t\t'id'    => 'import-export',\n\t\t\t\t'url'   => 'status',\n\t\t\t\t'args'  => 'view=import_export',\n\t\t\t\t'cap'   => 'install_plugins',\n\t\t\t\t'title' => esc_html__( 'Import &amp; Export', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( Helper::is_plugin_active_for_network() ) {\n\t\t\tunset( $links['help'] );\n\t\t}\n\n\t\tif ( is_network_admin() ) {\n\t\t\t$links = [];\n\t\t}\n\n\t\treturn apply_filters( 'rank_math\/admin\/dashboard_nav_links', $links );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-sanitize-settings.php","ext":"php","size":9652,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The option center of the plugin.\n *\n * @since      1.0.250\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\n\n\/**\n * Settings Sanitizer for React-based settings.\n *\/\nclass Sanitize_Settings {\n\n\t\/**\n\t * Sanitize all settings data using field types.\n\t *\n\t * @param array $settings_data Array of setting data [field_id => value].\n\t * @param array $field_types   Array of field types [field_id => type].\n\t *\n\t * @return array Sanitized settings data.\n\t *\/\n\tpublic static function sanitize( $settings_data, $field_types ) {\n\t\t$sanitized = [];\n\n\t\tforeach ( $settings_data as $field_id => $value ) {\n\t\t\t$type                   = $field_types[ $field_id ] ?? 'text';\n\t\t\t$sanitized[ $field_id ] = self::sanitize_field( $value, $type, $field_id );\n\t\t}\n\n\t\treturn $sanitized;\n\t}\n\n\t\/**\n\t * Sanitize an individual field based on its type.\n\t *\n\t * @param mixed  $value    Field value.\n\t * @param string $type     Field type.\n\t * @param string $field_id Field ID.\n\t *\n\t * @return mixed Sanitized value.\n\t *\/\n\tpublic static function sanitize_field( $value, $type, $field_id ) {\n\t\t\/\/ First: Check field ID-specific logic.\n\t\t$field_specific = apply_filters( 'rank_math\/settings\/sanitize_fields', self::sanitize_by_field_id( $value, $field_id ), $value, $field_id );\n\t\tif ( $field_specific !== null ) {\n\t\t\treturn $field_specific;\n\t\t}\n\n\t\tswitch ( $type ) {\n\t\t\tcase 'text':\n\t\t\t\treturn is_array( $value ) ? array_map( [ __CLASS__, 'sanitize_textfield' ], $value ) : self::sanitize_textfield( $value );\n\n\t\t\tcase 'textarea':\n\t\t\t\treturn is_array( $value ) ? array_map( 'wp_kses_post', $value ) : wp_kses_post( $value );\n\n\t\t\tcase 'toggle':\n\t\t\t\treturn $value ? 'on' : 'off';\n\n\t\t\tcase 'checkbox':\n\t\t\tcase 'checkboxlist':\n\t\t\t\treturn is_array( $value ) ? array_map( 'sanitize_text_field', $value ) : [];\n\n\t\t\tcase 'select':\n\t\t\tcase 'selectSearch':\n\t\t\tcase 'selectVariable':\n\t\t\tcase 'searchPage':\n\t\t\tcase 'toggleGroup':\n\t\t\t\treturn is_array( $value ) ? array_map( [ __CLASS__, 'sanitize_textfield' ], $value ) : self::sanitize_textfield( $value );\n\n\t\t\tcase 'number':\n\t\t\t\treturn is_array( $value ) ? array_map( 'intval', $value ) : intval( $value );\n\n\t\t\tcase 'file':\n\t\t\t\treturn esc_url_raw( $value );\n\n\t\t\tcase 'group':\n\t\t\tcase 'repeatableGroup':\n\t\t\t\treturn self::sanitize_group_value( $value );\n\t\t\tdefault:\n\t\t\t\t\/\/ Fallback.\n\t\t\t\treturn map_deep( $value, [ __CLASS__, 'sanitize_default_value' ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Handles sanitization for default fields. Make sure to not change the boolean to blank text.\n\t *\n\t * @param string $value The unsanitized value from the form.\n\t *\n\t * @return string Sanitized value to be stored.\n\t *\/\n\tpublic static function sanitize_default_value( $value ) {\n\t\treturn is_string( $value ) ? sanitize_text_field( $value ) : $value;\n\t}\n\n\t\/**\n\t * Sanitize an individual field based on its id.\n\t *\n\t * @param mixed  $value    Field value.\n\t * @param string $field_id Field ID.\n\t *\n\t * @return mixed Sanitized value.\n\t *\/\n\tprivate static function sanitize_by_field_id( $value, $field_id ) {\n\t\tswitch ( $field_id ) {\n\t\t\tcase 'robots_txt_content':\n\t\t\t\treturn self::sanitize_robots_text( $value );\n\n\t\t\tcase 'google_verify':\n\t\t\tcase 'bing_verify':\n\t\t\tcase 'baidu_verify':\n\t\t\tcase 'yandex_verify':\n\t\t\tcase 'pinterest_verify':\n\t\t\tcase 'norton_verify':\n\t\t\t\treturn self::sanitize_webmaster_tags( $value );\n\n\t\t\tcase 'custom_webmaster_tags':\n\t\t\t\treturn self::sanitize_custom_webmaster_tags( $value );\n\n\t\t\tcase 'console_caching_control':\n\t\t\t\treturn self::sanitize_cache_control( $value );\n\t\t}\n\n\t\t\/\/ Returning null means no special handling; fall back to type-based logic.\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Handles sanitization for text fields.\n\t *\n\t * @param string $value The unsanitized value from the form.\n\t *\n\t * @return string Sanitized value to be stored.\n\t *\/\n\tprivate static function sanitize_textfield( $value ) {\n\t\tif ( is_object( $value ) || is_array( $value ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$value    = (string) $value;\n\t\t$filtered = wp_check_invalid_utf8( $value );\n\n\t\tif ( strpos( $filtered, '<' ) !== false ) {\n\t\t\t$filtered = wp_pre_kses_less_than( $filtered );\n\n\t\t\t\/\/ Strip extra whitespace.\n\t\t\t$filtered = wp_strip_all_tags( $filtered, false );\n\n\t\t\t\/\/ Use html entities in a special case to make sure no later\n\t\t\t\/\/ newline stripping stage could lead to a functional tag!\n\t\t\t$filtered = str_replace( \"<\\n\", \"&lt;\\n\", $filtered );\n\t\t}\n\t\t$filtered = preg_replace( '\/[\\r\\n\\t ]+\/', ' ', $filtered );\n\t\t$filtered = trim( $filtered );\n\n\t\t$found = false;\n\t\twhile ( preg_match( '\/%[0-9]{2}\/i', $filtered, $match ) ) {\n\t\t\t$filtered = str_replace( $match[0], '', $filtered );\n\t\t\t$found    = true;\n\t\t}\n\n\t\tif ( $found ) {\n\t\t\t\/\/ Strip out the whitespace that may now exist after removing the octets.\n\t\t\t$filtered = trim( preg_replace( '\/ +\/', ' ', $filtered ) );\n\t\t}\n\n\t\treturn apply_filters( 'sanitize_text_field', $filtered, $value );\n\t}\n\n\t\/**\n\t * Handles sanitization of Robots text.\n\t *\n\t * @since 1.0.45\n\t *\n\t * @param mixed $value The unsanitized Robots text.\n\t *\n\t * @return string Sanitized Robots text to be stored.\n\t *\/\n\tprivate static function sanitize_robots_text( $value ) {\n\t\tif ( empty( $value ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn wp_strip_all_tags( $value );\n\t}\n\n\t\/**\n\t * Handles sanitization for webmaster tag and remove <meta> tag.\n\t *\n\t * @param mixed $value The unsanitized value from the form.\n\t *\n\t * @return mixed Sanitized value to be stored.\n\t *\/\n\tprivate static function sanitize_webmaster_tags( $value ) {\n\t\t$value = trim( $value );\n\n\t\tif ( ! empty( $value ) && Str::starts_with( '<meta', trim( $value ) ) ) {\n\t\t\tpreg_match( '\/content=\"([^\"]+)\"\/i', stripslashes( $value ), $matches );\n\t\t\t$value = $matches[1];\n\t\t}\n\n\t\treturn htmlentities( wp_strip_all_tags( $value ) );\n\t}\n\n\t\/**\n\t * Handles sanitization for custom webmaster tags.\n\t * Only <meta> tags are allowed.\n\t *\n\t * @param mixed $value The unsanitized value from the form.\n\t *\/\n\tprivate static function sanitize_custom_webmaster_tags( $value ) {\n\t\t$sanitized = wp_kses(\n\t\t\t$value,\n\t\t\t[\n\t\t\t\t'meta' => [\n\t\t\t\t\t'name'    => [],\n\t\t\t\t\t'content' => [],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\treturn $sanitized;\n\t}\n\n\t\/**\n\t * Handles sanitization for Analytics cache control option.\n\t *\n\t * @param mixed $value The unsanitized value from the form.\n\t *\/\n\tprivate static function sanitize_cache_control( $value ) {\n\t\t$max   = apply_filters( 'rank_math\/analytics\/max_days_allowed', 90 );\n\t\t$value = absint( $value );\n\t\tif ( $value > $max ) {\n\t\t\t$value = $max;\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Do not save if name or image is empty.\n\t *\n\t * @param array $value Field value to save.\n\t * @return array\n\t *\/\n\tprivate function sanitize_overlays( $value ) {\n\t\tif ( ! is_array( $value ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tforeach ( $value as $key => $overlay ) {\n\t\t\tif ( empty( $overlay['image'] ) ) {\n\t\t\t\tunset( $value[ $key ] );\n\t\t\t} elseif ( empty( $overlay['name'] ) ) {\n\t\t\t\tHelper::add_notification( esc_html__( 'A Custom Watermark item could not be saved because the name field is empty.', 'rank-math' ), [ 'type' => 'error' ] );\n\t\t\t\tunset( $value[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Handles sanitization of advanced robots data.\n\t *\n\t * @param array $robots The unsanitized value from the form.\n\t *\n\t * @return array Sanitized value to be stored.\n\t *\/\n\tprivate static function sanitize_advanced_robots( $robots ) {\n\t\tif ( empty( $robots ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$advanced_robots = [];\n\t\tforeach ( $robots as $key => $robot ) {\n\t\t\t$advanced_robots[ $key ] = ! empty( $robot['enable'] ) ? $robot['length'] : false;\n\t\t}\n\n\t\treturn $advanced_robots;\n\t}\n\n\t\/**\n\t * Sanitize a group or repeatable group field.\n\t *\n\t * - For a single group, sanitizes keys and values.\n\t * - For repeatable groups (array of group items), recursively sanitizes each item.\n\t * - Preserves key casing.\n\t *\n\t * @param array $group_value The group or repeatable group value.\n\t * @return array Sanitized group value.\n\t *\/\n\tprivate static function sanitize_group_value( $group_value ) {\n\t\tif ( ! is_array( $group_value ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t\/\/ Check if this is a repeatable group (array of associative arrays).\n\t\t$is_repeatable = array_keys( $group_value ) === range( 0, count( $group_value ) - 1 );\n\n\t\tif ( $is_repeatable ) {\n\t\t\t$sanitized = [];\n\n\t\t\tforeach ( $group_value as $item ) {\n\t\t\t\tif ( is_array( $item ) ) {\n\t\t\t\t\t$sanitized[] = self::sanitize_array_recursive( $item );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $sanitized;\n\t\t}\n\n\t\t\/\/ Single group.\n\t\treturn self::sanitize_array_recursive( $group_value );\n\t}\n\n\t\/**\n\t * Recursively sanitize an array's keys (preserving casing) and values.\n\t *\n\t * Uses sanitize_text_field() for scalar values. Nested arrays are handled recursively.\n\t *\n\t * @param array $data The array to recursively sanitize.\n\t * @return array The sanitized array.\n\t *\/\n\tprivate static function sanitize_array_recursive( $data ) {\n\t\t$sanitized = [];\n\n\t\tforeach ( $data as $key => $val ) {\n\t\t\t$clean_key = self::sanitize_key_preserve_case( $key );\n\n\t\t\tif ( is_array( $val ) ) {\n\t\t\t\t$sanitized[ $clean_key ] = self::sanitize_array_recursive( $val );\n\t\t\t} else {\n\t\t\t\t$sanitized[ $clean_key ] = self::sanitize_textfield( $val );\n\t\t\t}\n\t\t}\n\n\t\treturn $sanitized;\n\t}\n\n\t\/**\n\t * Sanitize a key while preserving original casing.\n\t *\n\t * Removes unsafe characters like spaces, HTML, and control characters,\n\t * but keeps casing and underscores intact.\n\t *\n\t * @param string $key The key to sanitize.\n\t * @return string The sanitized key.\n\t *\/\n\tprivate static function sanitize_key_preserve_case( $key ) {\n\t\t$key = wp_strip_all_tags( $key );\n\t\t$key = preg_replace( '\/[^A-Za-z0-9_\\-]\/', '', $key );\n\t\treturn $key;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-admin-init.php","ext":"php","size":2186,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin bootstrap of the plugin.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Updates;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin_Init class.\n *\n * @codeCoverageIgnore\n *\/\nclass Admin_Init {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\trank_math()->admin        = new Admin();\n\t\trank_math()->admin_assets = new Assets();\n\n\t\t$this->load_review_reminders();\n\t\t$this->load_pro_notice();\n\t\t$this->load_setup_wizard();\n\t\t$this->load_post_columns_and_filters();\n\n\t\t$this->run(\n\t\t\t[\n\t\t\t\trank_math()->admin,\n\t\t\t\trank_math()->admin_assets,\n\t\t\t\tnew Admin_Menu(),\n\t\t\t\tnew Option_Center(),\n\t\t\t\tnew Notices(),\n\t\t\t\tnew CMB2_Fields(),\n\t\t\t\tnew Metabox\\Metabox(),\n\t\t\t\tnew Import_Export(),\n\t\t\t\tnew Updates(),\n\t\t\t\tnew Watcher(),\n\t\t\t]\n\t\t);\n\n\t\t\/**\n\t\t * Fires when admin is loaded.\n\t\t *\/\n\t\t$this->do_action( 'admin\/loaded' );\n\t}\n\n\t\/**\n\t * Load out post list and edit screen class.\n\t *\/\n\tprivate function load_post_columns_and_filters() {\n\t\t$this->run( [ new Bulk_Actions() ] );\n\n\t\tif ( Admin_Helper::is_post_list() || Admin_Helper::is_media_library() || wp_doing_ajax() ) {\n\t\t\t$this->run(\n\t\t\t\t[\n\t\t\t\t\tnew Post_Columns(),\n\t\t\t\t\tnew Post_Filters(),\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Load review tab in metabox & footer notice.\n\t *\/\n\tprivate function load_review_reminders() {\n\t\tif ( get_option( 'rank_math_already_reviewed' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->run( [ new Ask_Review() ] );\n\t}\n\n\t\/**\n\t * Load Pro reminder notice.\n\t *\/\n\tprivate function load_pro_notice() {\n\t\tif ( ! is_main_site() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( defined( 'RANK_MATH_PRO_FILE' ) || get_option( 'rank_math_already_upgraded' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->run( [ new Pro_Notice() ] );\n\t}\n\n\t\/**\n\t * Run all the runners.\n\t *\n\t * @param array $runners Instances of runner classes.\n\t *\/\n\tprivate function run( $runners ) {\n\t\tforeach ( $runners as $runner ) {\n\t\t\t$runner->hooks();\n\t\t}\n\t}\n\n\t\/**\n\t * Load setup wizard.\n\t *\/\n\tprivate function load_setup_wizard() {\n\t\tif ( Helper::is_wizard() ) {\n\t\t\tnew Setup_Wizard();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-select.php","ext":"php","size":2913,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The select functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Select class.\n *\/\ntrait Select {\n\n\t\/**\n\t * Set the selected fields\n\t *\n\t * @param array $fields Fields to select.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function select( $fields = '' ) {\n\t\tif ( empty( $fields ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( is_string( $fields ) ) {\n\t\t\t$this->add_sql_clause( 'select', $fields );\n\t\t\treturn $this;\n\t\t}\n\n\t\tforeach ( $fields as $key => $field ) {\n\t\t\t$this->add_sql_clause( 'select', is_string( $key ) ? \"$key AS $field\" : $field );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Shortcut to add a count function\n\t *\n\t *     ->selectCount('id')\n\t *     ->selectCount('id', 'count')\n\t *\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function selectCount( $field = '*', $alias = null ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->selectFunc( 'count', $field, $alias );\n\t}\n\n\t\/**\n\t * Shortcut to add a sum function\n\t *\n\t *     ->selectSum('id')\n\t *     ->selectSum('id', 'total')\n\t *\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function selectSum( $field, $alias = null ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->selectFunc( 'sum', $field, $alias );\n\t}\n\n\t\/**\n\t * Shortcut to add a avg function\n\t *\n\t *     ->selectAvg('id')\n\t *     ->selectAvg('id', 'average')\n\t *\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function selectAvg( $field, $alias = null ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->selectFunc( 'avg', $field, $alias );\n\t}\n\n\t\/**\n\t * Shortcut to add a function\n\t *\n\t * @param string $func  Function name.\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function selectFunc( $func, $field, $alias = null ) { \/\/ @codingStandardsIgnoreLine\n\t\t$func  = \\strtoupper( $func );\n\t\t$field = \"$func({$field})\";\n\t\tif ( ! is_null( $alias ) ) {\n\t\t\t$field .= \" AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'select', $field );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Distinct select setter\n\t *\n\t * @param bool $distinct Is disticnt.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function distinct( $distinct = true ) {\n\t\t$this->distinct = $distinct;\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * SQL_CALC_FOUND_ROWS select setter\n\t *\n\t * @param bool $found_rows Should get found rows.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function found_rows( $found_rows = true ) {\n\t\t$this->found_rows = $found_rows;\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-where.php","ext":"php","size":10468,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The where functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Where class.\n *\/\ntrait Where {\n\n\t\/**\n\t * Create a where statement\n\t *\n\t *     ->where('name', 'ladina')\n\t *     ->where('age', '>', 18)\n\t *     ->where('name', 'in', ['charles', 'john', 'jeffry'])\n\t *\n\t * @throws \\Exception If $type is not 'AND', 'OR', 'WHERE'.\n\t *\n\t * @param mixed  $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t * @param string $type the where type ( AND, OR ).\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function where( $column, $param1 = null, $param2 = null, $type = 'AND' ) {\n\n\t\t$this->is_valid_type( $type );\n\n\t\t$sub_type = is_null( $param1 ) ? $type : $param1;\n\t\tif ( ! $this->has_sql_clause( 'where' ) ) {\n\t\t\t$type = 'WHERE';\n\t\t}\n\n\t\t\/\/ When column is an array we assume to make a bulk and where.\n\t\tif ( is_array( $column ) ) {\n\t\t\t$this->bulk_where( $column, $type, $sub_type );\n\t\t\treturn $this;\n\t\t}\n\n\t\t$this->add_sql_clause( 'where', $this->generateWhere( $column, $param1, $param2, $type ) );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Create an or where statement\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhere( $column, $param1 = null, $param2 = null ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, $param1, $param2, 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where in statement\n\t *\n\t *     ->whereIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereIn( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IN', $options );\n\t}\n\n\t\/**\n\t * Creates a where in statement\n\t *\n\t *     ->orWhereIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereIn( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IN', $options, 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where not in statement\n\t *\n\t *     ->whereNotIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereNotIn( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT IN', $options );\n\t}\n\n\t\/**\n\t * Creates a where not in statement\n\t *\n\t *     ->orWhereNotIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereNotIn( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT IN', $options, 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where between statement\n\t *\n\t *     ->whereBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereBetween( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'BETWEEN', $options );\n\t}\n\n\t\/**\n\t * Creates a where between statement\n\t *\n\t *     ->orWhereBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereBetween( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'BETWEEN', $options, 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where not between statement\n\t *\n\t *     ->whereNotBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereNotBetween( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT BETWEEN', $options );\n\t}\n\n\t\/**\n\t * Creates a where not between statement\n\t *\n\t *     ->orWhereNotBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereNotBetween( $column, $options ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT BETWEEN', $options, 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where like statement\n\t *\n\t *     ->whereLike('id', 'value')\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param string $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereLike( $column, $value, $start = '%', $end = '%' ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'LIKE', $this->esc_like( $value, $start, $end ) );\n\t}\n\n\t\/**\n\t * Creates a where like statement\n\t *\n\t *     ->orWhereLike('id', 'value')\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param string $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereLike( $column, $value, $start = '%', $end = '%' ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'LIKE', $this->esc_like( $value, $start, $end ), 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where not like statement\n\t *\n\t *     ->whereNotLike('id', 'value' )\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereNotLike( $column, $value, $start = '%', $end = '%' ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT LIKE', $this->esc_like( $value, $start, $end ) );\n\t}\n\n\t\/**\n\t * Creates a where not like statement\n\t *\n\t *     ->orWhereNotLike('id', 'value' )\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereNotLike( $column, $value, $start = '%', $end = '%' ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT LIKE', $this->esc_like( $value, $start, $end ), 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where is null statement\n\t *\n\t *     ->whereNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereNull( $column ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS', 'NULL' );\n\t}\n\n\t\/**\n\t * Creates a where is null statement\n\t *\n\t *     ->orWhereNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereNull( $column ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS', 'NULL', 'OR' );\n\t}\n\n\t\/**\n\t * Creates a where is not null statement\n\t *\n\t *     ->whereNotNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function whereNotNull( $column ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS NOT', 'NULL' );\n\t}\n\n\t\/**\n\t * Creates a where is not null statement\n\t *\n\t *     ->orWhereNotNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orWhereNotNull( $column ) { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS NOT', 'NULL', 'OR' );\n\t}\n\n\t\/**\n\t * Generate Where clause\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t * @param string $type the where type ( AND, or ).\n\t *\n\t * @return string\n\t *\/\n\tprotected function generateWhere( $column, $param1 = null, $param2 = null, $type = 'AND' ) { \/\/ @codingStandardsIgnoreLine\n\n\t\t\/\/ when param2 is null we replace param2 with param one as the\n\t\t\/\/ value holder and make param1 to the = operator.\n\t\tif ( is_null( $param2 ) ) {\n\t\t\t$param2 = $param1;\n\t\t\t$param1 = '=';\n\t\t}\n\n\t\t\/\/ When param2 is an array we probably\n\t\t\/\/ have an \"in\" or \"between\" statement which has no need for duplicates.\n\t\tif ( is_array( $param2 ) ) {\n\t\t\t$param2 = $this->esc_array( array_unique( $param2 ) );\n\t\t\t$param2 = in_array( $param1, [ 'BETWEEN', 'NOT BETWEEN' ], true ) ? join( ' AND ', $param2 ) : '(' . join( ', ', $param2 ) . ')';\n\t\t} elseif ( is_scalar( $param2 ) ) {\n\t\t\t$param2 = $this->esc_value( $param2 );\n\t\t}\n\n\t\treturn join( ' ', [ $type, $column, $param1, $param2 ] );\n\t}\n\n\t\/**\n\t * Check if the where type is valid.\n\t *\n\t * @param string $type Value to check.\n\t *\n\t * @throws \\Exception If not a valid type.\n\t *\/\n\tprivate function is_valid_type( $type ) {\n\t\tif ( ! in_array( $type, [ 'AND', 'OR', 'WHERE' ], true ) ) {\n\t\t\tthrow new \\Exception( 'Invalid where type \"' . esc_html( $type ) . '\"' );\n\t\t}\n\t}\n\n\t\/**\n\t * Create bulk where statement.\n\t *\n\t * @param array  $where    Array of statments.\n\t * @param string $type     Statement type.\n\t * @param string $sub_type Statement sub-type.\n\t *\/\n\tprivate function bulk_where( $where, $type, $sub_type ) {\n\t\t$subquery = [];\n\t\tforeach ( $where as $value ) {\n\t\t\tif ( ! isset( $value[2] ) ) {\n\t\t\t\t$value[2] = $value[1];\n\t\t\t\t$value[1] = '=';\n\t\t\t}\n\t\t\t$subquery[] = $this->generateWhere( $value[0], $value[1], $value[2], empty( $subquery ) ? '' : $sub_type );\n\t\t}\n\n\t\t$this->add_sql_clause( 'where', $type . ' ( ' . trim( join( ' ', $subquery ) ) . ' )' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-joins.php","ext":"php","size":2369,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The joins functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Joins class.\n *\/\ntrait Joins {\n\n\t\/**\n\t * Generate left join clause.\n\t *\n\t * @param string $table    The SQL table.\n\t * @param mixed  $column1  The SQL Column.\n\t * @param mixed  $column2  The SQL Column.\n\t * @param string $operator The Operator.\n\t * @param string $alias    The table alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function leftJoin( $table, $column1, $column2, $operator = '=', $alias = '' ) { \/\/ @codingStandardsIgnoreLine\n\t\tif ( empty( $table ) || empty( $column1 ) || empty( $column2 ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( ! empty( $alias ) ) {\n\t\t\t$table = \"{$table} AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'left_join', \"LEFT JOIN {$table} ON {$column1} {$operator} {$column2}\" );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Generate right join clause.\n\t *\n\t * @param string $table    The SQL table.\n\t * @param mixed  $column1  The SQL Column.\n\t * @param mixed  $column2  The SQL Column.\n\t * @param string $operator The Operator.\n\t * @param string $alias    The table alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function rightJoin( $table, $column1, $column2, $operator = '=', $alias = '' ) { \/\/ @codingStandardsIgnoreLine\n\t\tif ( empty( $table ) || empty( $column1 ) || empty( $column2 ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( ! empty( $alias ) ) {\n\t\t\t$table = \"{$table} AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'right_join', \"RIGHT JOIN {$table} ON {$column1} {$operator} {$column2}\" );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Generate left join clause.\n\t *\n\t * @param string $table    The SQL table.\n\t * @param mixed  $column1  The SQL Column.\n\t * @param mixed  $column2  The SQL Column.\n\t * @param string $operator The Operator.\n\t * @param string $alias    The table alias.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function join( $table, $column1, $column2, $operator = '=', $alias = '' ) { \/\/ @codingStandardsIgnoreLine\n\t\tif ( empty( $table ) || empty( $column1 ) || empty( $column2 ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( ! empty( $alias ) ) {\n\t\t\t$table = \"{$table} AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'join', \"JOIN {$table} ON {$column1} {$operator} {$column2}\" );\n\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-escape.php","ext":"php","size":1247,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The escape functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Escape class.\n *\/\ntrait Escape {\n\n\t\/**\n\t * Escape array values for sql\n\t *\n\t * @param array $arr Array to escape.\n\t *\n\t * @return array\n\t *\/\n\tpublic function esc_array( $arr ) {\n\t\treturn array_map( [ $this, 'esc_value' ], $arr );\n\t}\n\n\t\/**\n\t * Escape value for sql\n\t *\n\t * @param mixed $value Value to escape.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function esc_value( $value ) {\n\t\tglobal $wpdb;\n\n\t\tif ( is_int( $value ) ) {\n\t\t\treturn $wpdb->prepare( '%d', $value );\n\t\t}\n\n\t\tif ( is_float( $value ) ) {\n\t\t\treturn $wpdb->prepare( '%f', $value );\n\t\t}\n\n\t\treturn 'NULL' === $value ? $value : $wpdb->prepare( '%s', $value );\n\t}\n\n\t\/**\n\t * Escape value for like statement\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return string\n\t *\/\n\tpublic function esc_like( $value, $start = '%', $end = '%' ) {\n\t\tglobal $wpdb;\n\t\treturn $start . $wpdb->esc_like( $value ) . $end;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-translate.php","ext":"php","size":3089,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The translate functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Translate class.\n *\/\ntrait Translate {\n\n\t\/**\n\t * Translate the current query to an SQL select statement\n\t *\n\t * @return string\n\t *\/\n\tprivate function translateSelect() { \/\/ @codingStandardsIgnoreLine\n\t\t$query = [ 'SELECT' ];\n\n\t\tif ( $this->found_rows ) {\n\t\t\t$query[] = 'SQL_CALC_FOUND_ROWS';\n\t\t}\n\n\t\tif ( $this->distinct ) {\n\t\t\t$query[] = 'DISTINCT';\n\t\t}\n\n\t\t$query[] = $this->has_sql_clause( 'select' ) ? $this->get_sql_clause( 'select', true ) : '*';\n\t\t$query[] = $this->translateFrom();\n\t\t$query[] = $this->get_sql_clause( 'join', true );\n\t\t$query[] = $this->get_sql_clause( 'where', true );\n\t\t$query[] = $this->translateGroupBy();\n\t\t$query[] = $this->translateOrderBy();\n\t\t$query[] = $this->translateLimit();\n\n\t\treturn join( ' ', array_filter( $query ) );\n\t}\n\n\t\/**\n\t * Translate the current query to an SQL update statement\n\t *\n\t * @return string\n\t *\/\n\tprivate function translateUpdate() { \/\/ @codingStandardsIgnoreLine\n\t\t$query = [ \"UPDATE {$this->table} SET\" ];\n\n\t\t\/\/ Add the values.\n\t\t$values = [];\n\t\tforeach ( $this->sql_clauses['values'] as $key => $value ) {\n\t\t\t$values[] = $key . ' = ' . $this->esc_value( $value );\n\t\t}\n\n\t\tif ( ! empty( $values ) ) {\n\t\t\t$query[] = join( ', ', $values );\n\t\t}\n\n\t\t$query[] = $this->get_sql_clause( 'where', true );\n\t\t$query[] = $this->translateLimit();\n\n\t\treturn join( ' ', array_filter( $query ) );\n\t}\n\n\t\/**\n\t * Translate the current query to an SQL delete statement\n\t *\n\t * @return string\n\t *\/\n\tprivate function translateDelete() { \/\/ @codingStandardsIgnoreLine\n\t\t$query   = [ 'DELETE' ];\n\t\t$query[] = $this->translateFrom();\n\t\t$query[] = $this->get_sql_clause( 'where', true );\n\t\t$query[] = $this->translateLimit();\n\n\t\treturn join( ' ', array_filter( $query ) );\n\t}\n\n\t\/**\n\t * Build the from statement.\n\t *\n\t * @return string\n\t *\/\n\tprivate function translateFrom() { \/\/ @codingStandardsIgnoreLine\n\t\tif ( ! $this->has_sql_clause( 'from' ) ) {\n\t\t\t$this->add_sql_clause( 'from', $this->table );\n\t\t}\n\n\t\treturn 'FROM ' . $this->get_sql_clause( 'from', true );\n\t}\n\n\t\/**\n\t * Build the order by statement\n\t *\n\t * @return string\n\t *\/\n\tprotected function translateOrderBy() { \/\/ @codingStandardsIgnoreLine\n\t\tif ( ! $this->has_sql_clause( 'order_by' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn 'ORDER BY ' . $this->get_sql_clause( 'order_by', true );\n\t}\n\n\t\/**\n\t * Build the group by clauses.\n\t *\n\t * @return string\n\t *\/\n\tprivate function translateGroupBy() { \/\/ @codingStandardsIgnoreLine\n\t\tif ( ! $this->has_sql_clause( 'group_by' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$group_by = 'GROUP BY ' . $this->get_sql_clause( 'group_by', true );\n\n\t\tif ( $this->has_sql_clause( 'having' ) ) {\n\t\t\t$group_by .= ' ' . $this->get_sql_clause( 'having', true );\n\t\t}\n\n\t\treturn $group_by;\n\t}\n\n\t\/**\n\t * Build offset and limit.\n\t *\n\t * @return string\n\t *\/\n\tprivate function translateLimit() { \/\/ @codingStandardsIgnoreLine\n\t\treturn $this->get_sql_clause( 'limit', true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-orderby.php","ext":"php","size":1952,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The orderby functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\nuse RankMath\\Helpers\\Arr;\n\n\/**\n * OrderBy class.\n *\/\ntrait OrderBy {\n\n\t\/**\n\t * Add an order by statement to the current query\n\t *\n\t *     ->orderBy('created_at')\n\t *     ->orderBy('modified_at', 'desc')\n\t *\n\t *     \/\/ multiple order clauses\n\t *     ->orderBy(['firstname', 'lastname'], 'desc')\n\t *\n\t *     \/\/ muliple order clauses with diffrent directions\n\t *     ->orderBy(['firstname' => 'asc', 'lastname' => 'desc'])\n\t *\n\t * @param array|string $columns   Columns.\n\t * @param string       $direction Direction.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function orderBy( $columns, $direction = 'ASC' ) { \/\/ @codingStandardsIgnoreLine\n\t\tif ( is_string( $columns ) ) {\n\t\t\t$columns = $this->argument_to_array( $columns );\n\t\t}\n\n\t\t$direction = $this->sanitize_direction( $direction );\n\n\t\tforeach ( $columns as $key => $column ) {\n\t\t\tif ( is_numeric( $key ) ) {\n\t\t\t\t$this->add_sql_clause( 'order_by', \"{$column}{$direction}\" );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$column = $this->sanitize_direction( $column );\n\t\t\t$this->add_sql_clause( 'order_by', \"{$key}{$column}\" );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Sanitize direction\n\t *\n\t * @param string $direction Value to sanitize.\n\t *\n\t * @return string Sanitized value\n\t *\/\n\tprotected function sanitize_direction( $direction ) {\n\t\tif ( empty( $direction ) || 'ASC' === $direction || 'asc' === $direction ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn ' ' . \\strtoupper( $direction );\n\t}\n\n\t\/**\n\t * Returns an string argument as parsed array if possible\n\t *\n\t * @param string $argument Argument to validate.\n\t *\n\t * @return array\n\t *\/\n\tprotected function argument_to_array( $argument ) {\n\t\tif ( false !== strpos( $argument, ',' ) ) {\n\t\t\treturn Arr::from_string( $argument );\n\t\t}\n\n\t\treturn [ $argument ];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-database.php","ext":"php","size":799,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Database.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Database class.\n *\/\nclass Database {\n\n\t\/**\n\t * Array of all databases objects.\n\t *\n\t * @var array\n\t *\/\n\tprotected static $instances = [];\n\n\t\/**\n\t * Retrieve a Database instance by table name.\n\t *\n\t * @param string $table_name A Database instance id.\n\t *\n\t * @return Database Database object instance.\n\t *\/\n\tpublic static function table( $table_name ) {\n\t\tglobal $wpdb;\n\n\t\tif ( empty( self::$instances ) || empty( self::$instances[ $table_name ] ) ) {\n\t\t\tself::$instances[ $table_name ] = new Query_Builder( $wpdb->prefix . $table_name );\n\t\t}\n\n\t\treturn self::$instances[ $table_name ];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-clauses.php","ext":"php","size":2915,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The clauses functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Clauses class.\n *\/\ntrait Clauses {\n\n\t\/**\n\t * List of SQL clauses.\n\t *\n\t * @var array\n\t *\/\n\tprivate $sql_clauses = [];\n\n\t\/**\n\t * SQL clause merge filters.\n\t *\n\t * @var array\n\t *\/\n\tprivate $sql_filters = [\n\t\t'where' => [\n\t\t\t'where',\n\t\t\t'where_time',\n\t\t],\n\t\t'join'  => [\n\t\t\t'right_join',\n\t\t\t'join',\n\t\t\t'left_join',\n\t\t],\n\t];\n\n\t\/**\n\t * Check has SQL clause.\n\t *\n\t * @param string $type   Clause type.\n\t *\n\t * @return boolean True if set and not empty.\n\t *\/\n\tpublic function has_sql_clause( $type ) {\n\t\treturn isset( $this->sql_clauses[ $type ] ) && ! empty( $this->sql_clauses[ $type ] );\n\t}\n\n\t\/**\n\t * Add a SQL clause to be included when get_data is called.\n\t *\n\t * @param string $type   Clause type.\n\t * @param string $clause SQL clause.\n\t *\/\n\tpublic function add_sql_clause( $type, $clause ) {\n\t\tif ( isset( $this->sql_clauses[ $type ] ) && ! empty( $clause ) ) {\n\t\t\t$this->sql_clauses[ $type ][] = $clause;\n\t\t}\n\t}\n\n\t\/**\n\t * Clear SQL clauses by type.\n\t *\n\t * @param string|array $types Clause type.\n\t *\/\n\tprotected function clear_sql_clause( $types ) {\n\t\tforeach ( (array) $types as $type ) {\n\t\t\tif ( isset( $this->sql_clauses[ $type ] ) ) {\n\t\t\t\t$this->sql_clauses[ $type ] = [];\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Get SQL clause by type.\n\t *\n\t * @param string $type     Clause type.\n\t * @param string $filtered Whether to filter the return value. Default unfiltered.\n\t *\n\t * @return string SQL clause.\n\t *\/\n\tprotected function get_sql_clause( $type, $filtered = false ) {\n\t\tif ( ! isset( $this->sql_clauses[ $type ] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$separator = ' ';\n\t\tif ( in_array( $type, [ 'select', 'order_by', 'group_by' ], true ) ) {\n\t\t\t$separator = ', ';\n\t\t}\n\n\t\t\/**\n\t\t * Default to bypassing filters for clause retrieval internal to data stores.\n\t\t * The filters are applied when the full SQL statement is retrieved.\n\t\t *\/\n\t\tif ( false === $filtered ) {\n\t\t\treturn implode( $separator, $this->sql_clauses[ $type ] );\n\t\t}\n\n\t\tif ( isset( $this->sql_filters[ $type ] ) ) {\n\t\t\t$clauses = [];\n\t\t\tforeach ( $this->sql_filters[ $type ] as $subset ) {\n\t\t\t\t$clauses = array_merge( $clauses, $this->sql_clauses[ $subset ] );\n\t\t\t}\n\t\t} else {\n\t\t\t$clauses = $this->sql_clauses[ $type ];\n\t\t}\n\n\t\t\/**\n\t\t * Filter SQL clauses by type and context.\n\t\t *\n\t\t * @param array  $clauses The original arguments for the request.\n\t\t * @param string $context The data store context.\n\t\t *\/\n\t\t$clauses = apply_filters( \"rank_math_clauses_{$type}\", $clauses, $this->context );\n\t\t\/**\n\t\t * Filter SQL clauses by type and context.\n\t\t *\n\t\t * @param array  $clauses The original arguments for the request.\n\t\t *\/\n\t\t$clauses = apply_filters( \"rank_math_clauses_{$type}_{$this->context}\", $clauses );\n\n\t\treturn implode( $separator, $clauses );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-groupby.php","ext":"php","size":1169,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The groupby functions.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * GroupBy class.\n *\/\ntrait GroupBy {\n\n\t\/**\n\t * Add an group by statement to the current query\n\t *\n\t *     ->groupBy('created_at')\n\t *\n\t * @param array|string $columns Columns.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function groupBy( $columns ) { \/\/ @codingStandardsIgnoreLine\n\t\tif ( is_string( $columns ) ) {\n\t\t\t$columns = $this->argument_to_array( $columns );\n\t\t}\n\n\t\tforeach ( $columns as $column ) {\n\t\t\t$this->add_sql_clause( 'group_by', $column );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Generate Having clause\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function having( $column, $param1 = null, $param2 = null ) {\n\t\t$this->add_sql_clause( 'having', $this->generateWhere( $column, $param1, $param2, 'HAVING' ) );\n\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/database\/class-query-builder.php","ext":"php","size":7484,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Query Builder.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\\Database\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin\\Database;\n\n\/**\n * Query_Builder class.\n *\/\nclass Query_Builder {\n\n\tuse Escape;\n\tuse Select;\n\tuse Where;\n\tuse Joins;\n\tuse GroupBy;\n\tuse OrderBy;\n\tuse Clauses;\n\tuse Translate;\n\n\t\/**\n\t * Table name.\n\t *\n\t * @var string\n\t *\/\n\tpublic $table = '';\n\n\t\/**\n\t * Save last query.\n\t *\n\t * @var string\n\t *\/\n\tpublic $last_query = '';\n\n\t\/**\n\t * Make a distinct selection\n\t *\n\t * @var bool\n\t *\/\n\tprotected $distinct = false;\n\n\t\/**\n\t * Make SQL_CALC_FOUND_ROWS in selection\n\t *\n\t * @var bool\n\t *\/\n\tprotected $found_rows = false;\n\n\t\/**\n\t * Data store context used to pass to filters.\n\t *\n\t * @var string\n\t *\/\n\tprotected $context;\n\n\t\/**\n\t * Constructor\n\t *\n\t * @param string $table   The table name.\n\t * @param string $context Optional context passed to filters. Default empty string.\n\t *\/\n\tpublic function __construct( $table = '', $context = '' ) {\n\t\t$this->table   = $table;\n\t\t$this->context = $context;\n\t\t$this->reset();\n\t}\n\n\t\/**\n\t * Translate the given query object and return the results\n\t *\n\t * @param string $output (Optional) Any of ARRAY_A | ARRAY_N | OBJECT | OBJECT_K constants.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function get( $output = \\OBJECT ) {\n\t\treturn $this->get_results( $this->translateSelect(), $output );\n\t}\n\n\t\/**\n\t * Translate the given query object and return the results\n\t *\n\t * @param string $output (Optional) Any of ARRAY_A | ARRAY_N | OBJECT | OBJECT_K constants.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function one( $output = \\OBJECT ) {\n\t\treturn $this->get_row( $this->translateSelect(), $output );\n\t}\n\n\t\/**\n\t * Translate the given query object and return one variable from the database\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function getVar() { \/\/ @codingStandardsIgnoreLine\n\t\t$row = $this->one( \\ARRAY_A );\n\n\t\treturn is_null( $row ) ? false : current( $row );\n\t}\n\n\t\/**\n\t * Insert a row into a table\n\t *\n\t * @codeCoverageIgnore\n\t * @see wpdb::insert()\n\t *\n\t * @param array $data   Data to insert (in column => value pairs). Both $data columns and $data values should be \"raw\" (neither should be SQL escaped).\n\t * @param array $format (Optional) An array of formats to be mapped to each of the value in $data.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function insert( $data, $format = null ) {\n\t\tglobal $wpdb;\n\n\t\t$wpdb->insert( $this->table, $data, $format );\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t\/**\n\t * Update a row into a table\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function update() {\n\n\t\t$query = $this->translateUpdate();\n\t\t$this->reset();\n\n\t\treturn $this->query( $query );\n\t}\n\n\t\/**\n\t * Delete data from table\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function delete() {\n\n\t\t$query = $this->translateDelete();\n\t\t$this->reset();\n\n\t\treturn $this->query( $query );\n\t}\n\n\t\/**\n\t * Truncate table.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function truncate() {\n\t\treturn $this->query( \"truncate table {$this->table};\" );\n\t}\n\n\t\/**\n\t * Get found rows.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_found_rows() {\n\t\treturn $this->get_var( 'SELECT FOUND_ROWS();' );\n\t}\n\n\t\/**\n\t * Get a single variable from the database.\n\t *\n\t * @param string $query The SQL query to run.\n\t *\/\n\tpublic function get_var( $query ) {\n\t\treturn $this->run(\n\t\t\t[\n\t\t\t\t'type'  => 'var',\n\t\t\t\t'query' => $query,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Perform a MySQL database query, using current database connection.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @see wpdb::query\n\t *\n\t * @param string $query Database query.\n\t *\n\t * @return int|false Number of rows affected|selected or false on error.\n\t *\/\n\tpublic function query( $query ) {\n\t\treturn $this->run(\n\t\t\t[\n\t\t\t\t'type'  => 'query',\n\t\t\t\t'query' => $query,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Set the limit clause.\n\t *\n\t * @param int $limit  Limit size.\n\t * @param int $offset Offeset.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function limit( $limit, $offset = 0 ) {\n\t\tglobal $wpdb;\n\t\t$limit  = \\absint( $limit );\n\t\t$offset = \\absint( $offset );\n\n\t\t$this->clear_sql_clause( 'limit' );\n\t\t$this->add_sql_clause( 'limit', $wpdb->prepare( 'LIMIT %d, %d', $offset, $limit ) );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Create an query limit based on a page and a page size\n\t *\n\t * @param int $page Page number.\n\t * @param int $size Page size.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function page( $page, $size = 25 ) {\n\t\t$size   = \\absint( $size );\n\t\t$offset = $size * \\absint( $page );\n\n\t\t$this->limit( $size, $offset );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Set values for insert\/update\n\t *\n\t * @param string|array $name  Key of pair.\n\t * @param string|array $value Value of pair.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tpublic function set( $name, $value = null ) {\n\t\tif ( is_array( $name ) ) {\n\t\t\t$this->sql_clauses['values'] = $this->sql_clauses['values'] + $name;\n\n\t\t\treturn $this;\n\t\t}\n\n\t\t$this->sql_clauses['values'][ $name ] = $value;\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Reset all vaiables.\n\t *\n\t * @return self The current query builder.\n\t *\/\n\tprivate function reset() {\n\t\t$this->distinct    = false;\n\t\t$this->found_rows  = false;\n\t\t$this->sql_clauses = [\n\t\t\t'select'     => [],\n\t\t\t'from'       => [],\n\t\t\t'left_join'  => [],\n\t\t\t'join'       => [],\n\t\t\t'right_join' => [],\n\t\t\t'where'      => [],\n\t\t\t'where_time' => [],\n\t\t\t'group_by'   => [],\n\t\t\t'having'     => [],\n\t\t\t'limit'      => [],\n\t\t\t'order_by'   => [],\n\t\t\t'values'     => [],\n\t\t];\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Get a single column from the database.\n\t *\n\t * @param string $query The SQL query to run.\n\t * @param int    $index The column index to retrieve.\n\t *\/\n\tpublic function get_col( $query = '', $index = 0 ) {\n\t\treturn $this->run(\n\t\t\t[\n\t\t\t\t'type'  => 'col',\n\t\t\t\t'query' => $query,\n\t\t\t\t'index' => $index,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get a single row from the database.\n\t *\n\t * @param string $query  The SQL query to run.\n\t * @param string $output The output to retrieve.\n\t * @param int    $index  The row index to retrieve.\n\t *\/\n\tpublic function get_row( $query = '', $output = OBJECT, $index = 0 ) {\n\t\treturn $this->run(\n\t\t\t[\n\t\t\t\t'type'   => 'row',\n\t\t\t\t'query'  => $query,\n\t\t\t\t'index'  => $index,\n\t\t\t\t'output' => $output,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get results from the database.\n\t *\n\t * @param string $query  The SQL query to run.\n\t * @param string $output The output format.\n\t *\/\n\tpublic function get_results( $query = '', $output = OBJECT ) {\n\t\treturn $this->run(\n\t\t\t[\n\t\t\t\t'query'  => $query,\n\t\t\t\t'output' => $output,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Run the query and return the results.\n\t *\n\t * @param array $args The query arguments.\n\t *\/\n\tpublic function run( $args = [] ) {\n\t\tglobal $wpdb;\n\n\t\t$output = isset( $args['output'] ) && $args['output'] ? $args['output'] : OBJECT;\n\t\t$type   = $args['type'] ?? '';\n\t\t$query  = $args['query'] ?? '';\n\t\t$index  = $args['index'] ?? '';\n\n\t\t$start_time = microtime( true );\n\n\t\t$this->last_query = $query;\n\t\t$this->reset();\n\n\t\tswitch ( $type ) {\n\t\t\tcase 'row':\n\t\t\t\t$results = $wpdb->get_row( $query, $output, $index );\n\t\t\t\tbreak;\n\t\t\tcase 'col':\n\t\t\t\t$results = $wpdb->get_col( $query, $index );\n\t\t\t\tbreak;\n\t\t\tcase 'query':\n\t\t\t\t$results = $wpdb->query( $query );\n\t\t\t\tbreak;\n\t\t\tcase 'var':\n\t\t\t\t$results = $wpdb->get_var( $query );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$results = $wpdb->get_results( $query, $output );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn apply_filters( 'rank_math\/database\/query\/results', $results, $args, $start_time );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-cmb2-fields.php","ext":"php","size":12881,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The CMB2 fields for the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Runner;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * CMB2_Fields class.\n *\n * @codeCoverageIgnore\n *\/\nclass CMB2_Fields implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\tif ( ! has_action( 'cmb2_render_switch' ) ) {\n\t\t\t$this->action( 'cmb2_render_switch', 'render_switch', 10, 5 );\n\t\t}\n\n\t\tif ( ! has_action( 'cmb2_render_notice' ) ) {\n\t\t\t$this->action( 'cmb2_render_notice', 'render_notice' );\n\t\t}\n\n\t\tif ( ! has_action( 'cmb2_render_address' ) ) {\n\t\t\t$this->action( 'cmb2_render_address', 'render_address', 10, 5 );\n\t\t}\n\n\t\tif ( ! has_action( 'cmb2_render_advanced_robots' ) ) {\n\t\t\t$this->action( 'cmb2_render_advanced_robots', 'render_advanced_robots', 10, 5 );\n\t\t}\n\n\t\tif ( ! has_action( 'cmb2_render_toggle' ) ) {\n\t\t\t$this->action( 'cmb2_render_toggle', 'render_toggle', 10, 5 );\n\t\t}\n\n\t\t$this->filter( 'cmb2_sanitize_toggle', 'sanitize_toggle', 10, 2 );\n\t\t$this->filter( 'cmb2_field_arguments_raw', 'default_value', 10, 2 );\n\t}\n\n\t\/**\n\t * Set a default value in default_cb to prevent the callback function from executing on the site.\n\t *\n\t * @see https:\/\/github.com\/CMB2\/CMB2\/issues\/750\n\t *\n\t * @param array  $args The field arguments.\n\t * @param object $cmb2 The CMB2 object.\n\t *\/\n\tpublic function default_value( $args, $cmb2 ) {\n\t\tif (\n\t\t\t! Str::starts_with( 'rank-math', trim( $cmb2->cmb_id ) ) ||\n\t\t\t! isset( $args['default'] ) ||\n\t\t\t! is_callable( $args['default'] )\n\t\t) {\n\t\t\treturn $args;\n\t\t}\n\n\t\t$args['default_cb'] = function () use ( $args ) {\n\t\t\treturn $args['default'];\n\t\t};\n\n\t\t$args['default'] = null;\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Sanitize toggle field.\n\t *\n\t * @param string $override_value Sanitization override value to return.\n\t * @param string $value          The field value.\n\t *\/\n\tpublic function sanitize_toggle( $override_value, $value ) {\n\t\treturn is_null( $value ) ? 'off' : $value;\n\t}\n\n\t\/**\n\t * Render toggle field.\n\t *\n\t * @param array  $field             The passed in `CMB2_Field` object.\n\t * @param mixed  $escaped_value     The value of this field escaped\n\t *                                  It defaults to `sanitize_text_field`.\n\t *                                  If you need the unescaped value, you can access it\n\t *                                  via `$field->value()`.\n\t * @param int    $object_id         The ID of the current object.\n\t * @param string $object_type       The type of object you are working with.\n\t *                                  Most commonly, `post` (this applies to all post-types),\n\t *                                  but could also be `comment`, `user` or `options-page`.\n\t * @param object $field_type_object This `CMB2_Types` object.\n\t *\/\n\tpublic function render_toggle( $field, $escaped_value, $object_id, $object_type, $field_type_object ) {\n\t\t$field_name    = $field->_name();\n\t\t$active_value  = ! empty( $field->args( 'active_value' ) ) ? $field->args( 'active_value' ) : 'on';\n\t\t$escaped_value = ! empty( $field->args( 'force_enable' ) ) ? 'on' : $escaped_value;\n\n\t\t$args = [\n\t\t\t'type'     => 'checkbox',\n\t\t\t'id'       => $field_name,\n\t\t\t'name'     => $field_name,\n\t\t\t'desc'     => '',\n\t\t\t'value'    => $active_value,\n\t\t\t'disabled' => isset( $field->args['disabled'] ) ? $field->args['disabled'] : false,\n\t\t];\n\n\t\tif ( $escaped_value === $active_value ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\n\t\techo '<label class=\"cmb2-toggle\">';\n\t\techo $field_type_object->input( $args ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t\techo '<span class=\"cmb2-slider\">';\n\t\techo '<svg width=\"3\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 2 6\" class=\"toggle_on\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M0 0h2v6H0z\"><\/path><\/svg>';\n\t\techo '<svg width=\"8\" height=\"8\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 6 6\" class=\"toggle_off\" role=\"img\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M3 1.5c.8 0 1.5.7 1.5 1.5S3.8 4.5 3 4.5 1.5 3.8 1.5 3 2.2 1.5 3 1.5M3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3z\"><\/path><\/svg>';\n\t\techo '<\/span>';\n\t\techo '<\/label>';\n\t\t$field_type_object->_desc( true, true );\n\t}\n\n\t\/**\n\t * Render switch field.\n\t *\n\t * @param array  $field             The passed in `CMB2_Field` object.\n\t * @param mixed  $escaped_value     The value of this field escaped\n\t *                                  It defaults to `sanitize_text_field`.\n\t *                                  If you need the unescaped value, you can access it\n\t *                                  via `$field->value()`.\n\t * @param int    $object_id         The ID of the current object.\n\t * @param string $object_type       The type of object you are working with.\n\t *                                  Most commonly, `post` (this applies to all post-types),\n\t *                                  but could also be `comment`, `user` or `options-page`.\n\t * @param object $field_type_object This `CMB2_Types` object.\n\t *\/\n\tpublic function render_switch( $field, $escaped_value, $object_id, $object_type, $field_type_object ) {\n\n\t\tif ( empty( $field->args['options'] ) ) {\n\t\t\t$field->args['options'] = [\n\t\t\t\t'off' => esc_html( $field->get_string( 'off', __( 'Off', 'rank-math' ) ) ),\n\t\t\t\t'on'  => esc_html( $field->get_string( 'on', __( 'On', 'rank-math' ) ) ),\n\t\t\t];\n\t\t}\n\t\t$field->set_options();\n\n\t\techo $field_type_object->radio_inline(); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t}\n\n\t\/**\n\t * Render notices\n\t *\n\t * @param object $field The passed in `CMB2_Field` object.\n\t *\/\n\tpublic function render_notice( $field ) {\n\t\t$hash = [\n\t\t\t'error'   => 'notice notice-alt notice-error error inline rank-math-notice',\n\t\t\t'info'    => 'notice notice-alt notice-info info inline rank-math-notice',\n\t\t\t'warning' => 'notice notice-alt notice-warning warning inline rank-math-notice',\n\t\t];\n\n\t\techo '<div class=\"' . esc_attr( $hash[ $field->args( 'what' ) ] ) . '\"><p>' . $field->args( 'content' ) . '<\/p><\/div>'; \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t}\n\n\t\/**\n\t * Render address field.\n\t *\n\t * @param object $field             The passed in `CMB2_Field` object.\n\t * @param mixed  $escaped_value     The value of this field escaped\n\t *                                  It defaults to `sanitize_text_field`.\n\t *                                  If you need the unescaped value, you can access it\n\t *                                  via `$field->value()`.\n\t * @param int    $object_id         The ID of the current object.\n\t * @param string $object_type       The type of object you are working with.\n\t *                                  Most commonly, `post` (this applies to all post-types),\n\t *                                  but could also be `comment`, `user` or `options-page`.\n\t * @param object $field_type_object This `CMB2_Types` object.\n\t *\/\n\tpublic function render_address( $field, $escaped_value, $object_id, $object_type, $field_type_object ) {\n\n\t\t\/\/ Make sure we assign each part of the value we need.\n\t\t$value = wp_parse_args(\n\t\t\t$escaped_value,\n\t\t\t[\n\t\t\t\t'streetAddress'   => '',\n\t\t\t\t'addressLocality' => '',\n\t\t\t\t'addressRegion'   => '',\n\t\t\t\t'postalCode'      => '',\n\t\t\t\t'addressCountry'  => '',\n\t\t\t]\n\t\t);\n\n\t\t$strings = [\n\t\t\t'streetAddress'   => 'Street Address',\n\t\t\t'addressLocality' => 'Locality',\n\t\t\t'addressRegion'   => 'Region',\n\t\t\t'postalCode'      => 'Postal Code',\n\t\t\t'addressCountry'  => '2-letter Country Code (ISO 3166-1)',\n\t\t];\n\n\t\tforeach ( array_keys( $value ) as $id ) :\n\t\t\t$field_input = $field_type_object->input(\n\t\t\t\t[\n\t\t\t\t\t'name'        => $field_type_object->_name( '[' . $id . ']' ),\n\t\t\t\t\t'id'          => $field_type_object->_id( '_' . $id ),\n\t\t\t\t\t'value'       => $value[ $id ],\n\t\t\t\t\t'placeholder' => esc_html( $field->get_string( $id . '_text', $strings[ $id ] ) ),\n\t\t\t\t]\n\t\t\t);\n\t\t\techo '<div class=\"cmb-address-field\">' . $field_input . '<\/div>'; \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t\tendforeach;\n\t}\n\n\t\/**\n\t * Render Advanced Robots fields.\n\t *\n\t * @param object $field             The passed in `CMB2_Field` object.\n\t * @param mixed  $escaped_value     The value of this field escaped\n\t *                                  It defaults to `sanitize_text_field`.\n\t *                                  If you need the unescaped value, you can access it\n\t *                                  via `$field->value()`.\n\t * @param int    $object_id         The ID of the current object.\n\t * @param string $object_type       The type of object you are working with.\n\t *                                  Most commonly, `post` (this applies to all post-types),\n\t *                                  but could also be `comment`, `user` or `options-page`.\n\t * @param object $field_type_object This `CMB2_Types` object.\n\t *\/\n\tpublic function render_advanced_robots( $field, $escaped_value, $object_id, $object_type, $field_type_object ) {\n\t\t\/\/ Make sure we assign each part of the value we need.\n\t\t$values = wp_parse_args(\n\t\t\t$escaped_value,\n\t\t\t[\n\t\t\t\t'max-snippet'       => -1,\n\t\t\t\t'max-video-preview' => -1,\n\t\t\t\t'max-image-preview' => 'large',\n\t\t\t]\n\t\t);\n\n\t\t$strings = [\n\t\t\t'max-snippet'       => __( 'Snippet', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Specify a maximum text-length, in characters, of a snippet for your page.', 'rank-math' ) ),\n\t\t\t'max-video-preview' => __( 'Video Preview', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Specify a maximum duration in seconds of an animated video preview.', 'rank-math' ) ),\n\t\t\t'max-image-preview' => __( 'Image Preview', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Specify a maximum size of image preview to be shown for images on this page.', 'rank-math' ) ),\n\t\t];\n\n\t\techo '<ul class=\"cmb-advanced-robots-list no-select-all cmb2-list cmb-rank-math-advanced-robots-field\">';\n\t\tforeach ( $values as $id => $value ) :\n\t\t\t$value = isset( $escaped_value[ $id ] ) ? $escaped_value[ $id ] : $value;\n\n\t\t\techo '<li>';\n\t\t\t\techo '<label for=\"' . esc_attr( $field_type_object->_id( '_' . $id . '_name' ) ) . '\">';\n\t\t\t\t\techo $this->get_advanced_robots_field( 'checkbox', $field_type_object, $id, $value, $escaped_value ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t\t\t\techo wp_kses_post( $field->get_string( $id . '_text', $strings[ $id ] ) ) . '<\/label>';\n\n\t\t\tif ( 'max-image-preview' === $id ) {\n\t\t\t\techo $this->get_advanced_robots_field( 'select', $field_type_object, $id, $value, $escaped_value ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t\t\t}\n\n\t\t\tif ( 'max-image-preview' !== $id ) {\n\t\t\t\techo $this->get_advanced_robots_field( 'input', $field_type_object, $id, $value, $escaped_value ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- CMB2 handles escaping.\n\t\t\t}\n\n\t\t\techo '<\/li>';\n\t\tendforeach;\n\t\techo '<\/ul>';\n\t}\n\n\t\/**\n\t * Get the field markup for the advanced robots field.\n\t *\n\t * @param string $field_type        The type of field.\n\t * @param object $field_type_object The CMB2_Types object.\n\t * @param string $id                The field id.\n\t * @param string $value             The field value.\n\t * @param string $escaped_value     The escaped field value.\n\t *\n\t * @return string The field markup.\n\t *\/\n\tprivate function get_advanced_robots_field( $field_type, $field_type_object, $id, $value, $escaped_value ) {\n\t\t$props = [\n\t\t\t'name' => $field_type_object->_name( \"[{$id}][length]\" ),\n\t\t\t'id'   => $field_type_object->_id( '_' . $id . '_name' ),\n\t\t];\n\n\t\tswitch ( $field_type ) {\n\t\t\tcase 'checkbox':\n\t\t\t\t$props['name']    = $field_type_object->_name( \"[{$id}][enable]\" );\n\t\t\t\t$props['value']   = true;\n\t\t\t\t$props['checked'] = ! empty( $escaped_value[ $id ] ) || empty( $escaped_value ) ? 'checked' : false;\n\t\t\t\tbreak;\n\t\t\tcase 'select':\n\t\t\t\t$props['options'] = $this->get_image_sizes( $value );\n\t\t\t\tbreak;\n\t\t\tcase 'input':\n\t\t\t\t$props['value'] = $value ? $value : -1;\n\t\t\t\t$props['type']  = 'number';\n\t\t\t\t$props['min']   = -1;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $field_type_object->$field_type( $props );\n\t}\n\n\t\/**\n\t * Get Image sizes.\n\t *\n\t * @param  string $size    The selected image size.\n\t * @return string $options The image sizes.\n\t *\/\n\tprivate function get_image_sizes( $size = 'large' ) {\n\t\t$values  = [\n\t\t\t'large'    => __( 'Large', 'rank-math' ),\n\t\t\t'standard' => __( 'Standard', 'rank-math' ),\n\t\t\t'none'     => __( 'None', 'rank-math' ),\n\t\t];\n\t\t$options = '';\n\t\tforeach ( $values as $data => $label ) {\n\t\t\t$options .= '<option value=\"' . $data . '\" ' . selected( $size, $data, false ) . ' >' . $label . '<\/option>';\n\t\t}\n\n\t\treturn $options;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/admin\/class-ask-review.php","ext":"php","size":7258,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Ask user to review Rank Math on wp.org, in the meta box after 2 weeks.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Admin;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Ask_Review class.\n *\/\nclass Ask_Review {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Now.\n\t *\n\t * @var string\n\t *\/\n\tpublic $current_time = '';\n\n\t\/**\n\t * Date of release of version 1.0.57. Turned into a timestamp in the constructor.\n\t *\n\t * @var string\n\t *\/\n\tpublic $record_date = '2021-02-03 13:00';\n\n\t\/**\n\t * Rank Math plugin install date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $install_date = '';\n\n\t\/**\n\t * Constructor method.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->current_time = Helper::get_current_time();\n\t\t$this->record_date  = strtotime( $this->record_date );\n\t\t$this->install_date = get_option( 'rank_math_install_date' );\n\t\tif ( false === $this->install_date ) {\n\t\t\t$this->install_date = $this->current_time;\n\t\t}\n\t}\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->ajax( 'already_reviewed', 'already_reviewed' );\n\n\t\t\/\/ Post editor tab.\n\t\tif ( $this->current_time > $this->install_date + ( 10 * DAY_IN_SECONDS ) ) {\n\t\t\tHelper::add_json( 'showReviewTab', true );\n\t\t}\n\n\t\t\/\/ Admin notice.\n\t\t$review_notice_date = $this->get_review_notice_date();\n\t\tif ( $this->current_time > $review_notice_date ) {\n\t\t\tif ( get_option( 'rank_math_review_notice_added' ) === false && ! Helper::has_notification( 'rank_math_pro_notice' ) ) {\n\t\t\t\t$this->add_notice();\n\t\t\t}\n\n\t\t\t\/\/ Make dismiss button work like the \"Maybe later\" link.\n\t\t\t$this->action( 'wp_helpers_notification_dismissed', 'review_notice_after_dismiss' );\n\t\t}\n\n\t\t$this->action( 'admin_footer', 'review_notice_js', 15 );\n\t}\n\n\t\/**\n\t * Add inline JS related to the review notice.\n\t *\n\t * @return void\n\t *\/\n\tpublic function review_notice_js() {\n\t\tif ( ! Helper::has_notification( 'rank_math_review_plugin_notice' ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<script>\n\t\t\t(function( $ ) {\n\t\t\t\t$( function() {\n\t\t\t\t\t$('.rank-math-dismiss-review-notice').on( 'click', function(e) {\n\t\t\t\t\t\tvar $this = $(this);\n\n\t\t\t\t\t\tif ( ! $this.hasClass( 'rank-math-review-action' ) ) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $this.hasClass( 'rank-math-maybe-later-action' ) ) {\n\t\t\t\t\t\t\t$('#rank_math_review_plugin_notice').find( '.notice-dismiss' ).trigger('click');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjQuery.ajax( {\n\t\t\t\t\t\t\turl: rankMath.ajaxurl,\n\t\t\t\t\t\t\tdata: { action: 'rank_math_already_reviewed', security: rankMath.security,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t$('#rank_math_review_plugin_notice').find( '.notice-dismiss' ).trigger('click');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})(jQuery);\n\t\t<\/script>\n\t\t<style>\n\t\t\t#rank_math_review_plugin_notice .rank-math-notice.is-dismissible a,\n\t\t\t#rank_math_pro_notice .rank-math-notice.is-dismissible a {\n\t\t\t\tcolor: #4f52d4;\n\t\t\t}\n\t\t\t#rank_math_review_plugin_notice.is-dismissible,\n\t\t\t#rank_math_pro_notice.is-dismissible {\n\t\t\t\tborder-width: 0 0 0 4px;\n\t\t\t\tborder-left-color: #6668BD;\n\t\t\t\tbox-shadow: 0 1px 4px rgba(0, 0, 0, 0.15);\n\t\t\t\tpadding: 5px 10px 5px 65px;\n\t\t\t}\n\t\t\t#rank_math_review_plugin_notice.is-dismissible:before,\n\t\t\t#rank_math_pro_notice.is-dismissible:before {\n\t\t\t\tcontent: '';\n\t\t\t\twidth: 50px;\n\t\t\t\theight: 100%;\n\t\t\t\tbackground: rgba(102, 104, 189, 0.09);\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t}\n\t\t\t#rank_math_review_plugin_notice.is-dismissible:after,\n\t\t\t#rank_math_pro_notice.is-dismissible:after {\n\t\t\t\tcontent: url('data:image\/svg+xml;charset=UTF-8, <svg viewBox=\"0 0 462.03 462.03\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"20\"><g fill=\"white\"><path d=\"m462 234.84-76.17 3.43 13.43 21-127 81.18-126-52.93-146.26 60.97 10.14 24.34 136.1-56.71 128.57 54 138.69-88.61 13.43 21z\"><\/path><path d=\"m54.1 312.78 92.18-38.41 4.49 1.89v-54.58h-96.67zm210.9-223.57v235.05l7.26 3 89.43-57.05v-181zm-105.44 190.79 96.67 40.62v-165.19h-96.67z\"><\/path><\/g><\/svg>' );\n\t\t\t\tpadding: 3px;\n\t\t\t\tborder-radius: 3px;\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 12px;\n\t\t\t\ttop: 18px;\n\t\t\t\tbackground: linear-gradient(-135deg, #2488e1, #724bb7);\n\t\t\t\twidth: 23px;\n\t\t\t\theight: 23px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\tline-height: 1;\n\t\t\t\talign-items: center;\n\t\t\t}\n\t\t<\/style>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add admin notice.\n\t *\n\t * @return void\n\t *\/\n\tpublic function add_notice() {\n\t\t$message = '<p>';\n\n\t\t\/\/ Translators: placeholder is the plugin name.\n\t\t$message .= sprintf( esc_html__( 'Hey, we noticed you\\'ve been using %s for more than a week now \u2013 that\\'s awesome!', 'rank-math' ), '<strong>' . _x( 'Rank Math SEO', 'plugin name inside the review notice', 'rank-math' ) . '<\/strong>' );\n\t\t$message .= '<br>';\n\n\t\t$message .= esc_html__( 'Could you please do us a BIG favor and give it a rating on WordPress.org to help us spread the word and boost our motivation?', 'rank-math' ) . '<\/p>\n\t\t\t<p><strong>Bhanu Ahluwalia<\/strong><br>' . esc_html__( 'Co-founder of Rank Math', 'rank-math' ) . '<\/p>\n\t\t\t<p>\n\t\t\t\t<a href=\"https:\/\/wordpress.org\/support\/plugin\/seo-by-rank-math\/reviews\/?filter=5#new-post\" class=\"rank-math-dismiss-review-notice rank-math-review-action rank-math-review-out\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>' . esc_html__( 'Yes, you deserve it', 'rank-math' ) . '<\/strong><\/a><br>\n\t\t\t\t<a href=\"#\" class=\"rank-math-dismiss-review-notice rank-math-maybe-later-action\">' . esc_html__( 'No, maybe later', 'rank-math' ) . '<\/a><br>\n\t\t\t\t<a href=\"#\" class=\"rank-math-dismiss-review-notice rank-math-already-reviewed-action\">' . esc_html__( 'I already did', 'rank-math' ) . '<\/a>\n\t\t\t<\/p>';\n\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type'       => 'info',\n\t\t\t\t'id'         => 'rank_math_review_plugin_notice',\n\t\t\t\t'capability' => 'install_plugins',\n\t\t\t]\n\t\t);\n\n\t\tupdate_option( 'rank_math_review_notice_added', '1', false );\n\t}\n\n\t\/**\n\t * Set \"already reviewed\" flag after the user dismisses the notice.\n\t *\n\t * @param string $notification_id Dismissed notice ID.\n\t * @return void\n\t *\/\n\tpublic function review_notice_after_dismiss( $notification_id ) {\n\t\tif ( 'rank_math_review_plugin_notice' !== $notification_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete_option( 'rank_math_review_notice_date' );\n\t\tdelete_option( 'rank_math_review_notice_added' );\n\t\tupdate_option( 'rank_math_review_notice_delayed', true, false );\n\t}\n\n\t\/**\n\t * Get stored notice start date.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_review_notice_date() {\n\t\t$review_notice_date = get_option( 'rank_math_review_notice_date' );\n\t\tif ( false !== $review_notice_date ) {\n\t\t\treturn $review_notice_date;\n\t\t}\n\n\t\t$delay_days = 14;\n\t\tif ( $this->install_date < $this->record_date && ! get_option( 'rank_math_review_notice_delayed' ) ) {\n\t\t\t$delay_days = wp_rand( 7, 30 );\n\t\t}\n\n\t\t$review_notice_date = $this->current_time + ( $delay_days * DAY_IN_SECONDS );\n\t\tupdate_option( 'rank_math_review_notice_date', $review_notice_date, false );\n\n\t\treturn $review_notice_date;\n\t}\n\n\t\/**\n\t * Set \"already reviewed\" flag.\n\t *\/\n\tpublic function already_reviewed() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'onpage_general' );\n\t\tupdate_option( 'rank_math_already_reviewed', Helper::get_current_time() );\n\t\t$this->success( 'success' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-updates.php","ext":"php","size":2592,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Functions and actions related to updates.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Updates class\n *\/\nclass Updates implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * Updates that need to be run\n\t *\n\t * @var array\n\t *\/\n\tprivate static $updates = [\n\t\t'1.0.84'    => 'updates\/update-1.0.84.php',\n\t\t'1.0.86'    => 'updates\/update-1.0.86.php',\n\t\t'1.0.89'    => 'updates\/update-1.0.89.php',\n\t\t'1.0.98'    => 'updates\/update-1.0.98.php',\n\t\t'1.0.103.1' => 'updates\/update-1.0.103.1.php',\n\t\t'1.0.104'   => 'updates\/update-1.0.104.php',\n\t\t'1.0.107.3' => 'updates\/update-1.0.107.3.php',\n\t\t'1.0.110'   => 'updates\/update-1.0.110.php',\n\t\t'1.0.201'   => 'updates\/update-1.0.201.php',\n\t\t'1.0.201.1' => 'updates\/update-1.0.201.1.php',\n\t\t'1.0.202'   => 'updates\/update-1.0.202.php',\n\t\t'1.0.211'   => 'updates\/update-1.0.211.php',\n\t\t'1.0.232'   => 'updates\/update-1.0.232.php',\n\t\t'1.0.237'   => 'updates\/update-1.0.237.php',\n\t\t'1.0.238'   => 'updates\/update-1.0.238.php',\n\t\t'1.0.239'   => 'updates\/update-1.0.239.php',\n\t\t'1.0.250'   => 'updates\/update-1.0.250.php',\n\t\t'1.0.251'   => 'updates\/update-1.0.251.php',\n\t];\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'admin_init', 'do_updates' );\n\t}\n\n\t\/**\n\t * Check if any update is required.\n\t *\/\n\tpublic function do_updates() {\n\t\t$installed_version = get_option( 'rank_math_version', '1.0.0' );\n\n\t\t\/\/ Maybe it's the first install.\n\t\tif ( ! $installed_version ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( version_compare( $installed_version, rank_math()->version, '<' ) ) {\n\t\t\t$this->perform_updates();\n\t\t}\n\t}\n\n\t\/**\n\t * Perform all updates.\n\t *\/\n\tpublic function perform_updates() {\n\t\t$installed_version = get_option( 'rank_math_version', '1.0.0' );\n\n\t\tforeach ( self::$updates as $version => $path ) {\n\t\t\tif ( version_compare( $installed_version, $version, '<' ) ) {\n\t\t\t\tinclude $path;\n\t\t\t\tupdate_option( 'rank_math_version', $version );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Save install date.\n\t\tif ( false === boolval( get_option( 'rank_math_install_date' ) ) ) {\n\t\t\tupdate_option( 'rank_math_install_date', Helper::get_current_time() );\n\t\t}\n\n\t\t\/\/ Clear rollback option if necessary.\n\t\tif ( rank_math()->version !== get_option( 'rank_math_rollback_version' ) ) {\n\t\t\tdelete_option( 'rank_math_rollback_version' );\n\t\t}\n\n\t\tupdate_option( 'rank_math_version', rank_math()->version, false );\n\t\tupdate_option( 'rank_math_db_version', rank_math()->db_version, false );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/acf\/class-acf.php","ext":"php","size":2671,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The ACF Module\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\ACF\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ACF;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * ACF class.\n *\/\nclass ACF {\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( ! Admin_Helper::is_post_edit() && ! Admin_Helper::is_term_edit() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'rank_math\/admin\/editor_scripts', 'enqueue' );\n\t}\n\n\t\/**\n\t * Enqueue styles and scripts for the metabox on the post editor & term editor screens.\n\t *\/\n\tpublic function enqueue() {\n\t\tif ( Helper::is_elementor_editor() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Admin_Helper::is_post_edit() && ! Admin_Helper::is_term_edit() ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_enqueue_script( 'rank-math-acf-post-analysis', rank_math()->plugin_url() . 'includes\/modules\/acf\/assets\/js\/acf.js', [ 'wp-hooks', 'rank-math-analyzer' ], rank_math()->version, true );\n\n\t\tHelper::add_json( 'acf', $this->get_config() );\n\t}\n\n\t\/**\n\t * Get ACF module config data.\n\t *\n\t * @return array The config data.\n\t *\/\n\tprivate function get_config() {\n\n\t\t\/**\n\t\t * Filter the ACF config data.\n\t\t *\n\t\t * @param array $config Config data array.\n\t\t *\/\n\t\treturn $this->do_filter(\n\t\t\t'acf\/config',\n\t\t\t[\n\t\t\t\t'pluginName'     => 'rank-math-acf',\n\t\t\t\t'headlines'      => [],\n\t\t\t\t'names'          => [],\n\t\t\t\t'refreshRate'    => $this->get_refresh_rate(),\n\t\t\t\t'blacklistTypes' => $this->get_blacklist_type(),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieves the default blacklist - the field types we won't include in the SEO analysis.\n\t *\n\t * @return array The blacklisted field types.\n\t *\/\n\tprivate function get_blacklist_type() {\n\n\t\t\/**\n\t\t * Filter the blacklisted ACF field types.\n\t\t *\n\t\t * @param array $blacklist The blacklisted field types.\n\t\t *\/\n\t\treturn $this->do_filter(\n\t\t\t'acf\/blacklist\/types',\n\t\t\t[\n\t\t\t\t'number',\n\t\t\t\t'password',\n\t\t\t\t'file',\n\t\t\t\t'select',\n\t\t\t\t'checkbox',\n\t\t\t\t'radio',\n\t\t\t\t'true_false',\n\t\t\t\t'post_object',\n\t\t\t\t'page_link',\n\t\t\t\t'relationship',\n\t\t\t\t'user',\n\t\t\t\t'date_picker',\n\t\t\t\t'color_picker',\n\t\t\t\t'message',\n\t\t\t\t'tab',\n\t\t\t\t'repeater',\n\t\t\t\t'flexible_content',\n\t\t\t\t'group',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get refresh rate to be used.\n\t *\n\t * @return int The number of milliseconds between runs.\n\t *\/\n\tprivate function get_refresh_rate() {\n\n\t\t\/**\n\t\t * Filter the refresh rate for changes to ACF fields.\n\t\t *\n\t\t * @param int $refresh_rate Refresh rates in milliseconds.\n\t\t *\/\n\t\t$refresh_rate = $this->do_filter( 'acf\/refresh_rate', 1000 );\n\t\t$refresh_rate = intval( $refresh_rate, 10 );\n\n\t\treturn max( 200, $refresh_rate );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/acf\/assets\/js\/acf.js","ext":"js","size":8917,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var t={n:function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,{a:n}),n},d:function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}},e=jQuery,n=t.n(e),r=lodash,i=function(t){var e=function(t){var e=(0,r.find)(rankMath.acf.headlines,(function(e,n){return t.key===n}));return e&&(e=parseInt(e,10)),(e<1||e>6)&&(e=!1),e}(t);return t.content=e?\"<h\"+e+\">\"+t.content+\"<\/h\"+e+\">\":\"<p>\"+t.content+\"<\/p>\",t},a=function(t){var e=t.$el.find(\"textarea\")[0],n=e.id,r=e.value;return function(t){return\"undefined\"!=typeof tinyMCE&&void 0!==tinyMCE.editors&&0!==tinyMCE.editors.length&&null!==tinyMCE.get(t)&&!tinyMCE.get(t).isHidden()}(n)&&(r=tinyMCE.get(n)&&tinyMCE.get(n).getContent()||\"\"),r};function o(t){return o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},o(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,c(r.key),r)}}function c(t){var e=function(t,e){if(\"object\"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==o(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===o(e)?e:String(e)}var l=new(function(){function t(){var e,n,r;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),e=this,r={},(n=c(n=\"cache\"))in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r}var e,n,i;return e=t,(n=[{key:\"refresh\",value:function(t){var e=this,n=this.getUncached(t);0!==n.length&&window.wp.ajax.post(\"query-attachments\",{query:{post__in:n}}).done((function(t){(0,r.each)(t,(function(t){e.setCache(t.id,t),window.RankMathACFAnalysis.refresh()}))}))}},{key:\"get\",value:function(t){var e=this.getCache(t);if(!e)return!1;var n=window.wp.media.attachment(t);return n.has(\"alt\")&&(e.alt=n.get(\"alt\")),n.has(\"title\")&&(e.title=n.get(\"title\")),e}},{key:\"getAttachmentContent\",value:function(t){var e=\"\";if(l.get(t,\"attachment\")){var n=l.get(t,\"attachment\");e+='<img src=\"'+n.url+'\" alt=\"'+n.alt+'\" title=\"'+n.title+'\">'}return e}},{key:\"setCache\",value:function(t,e){this.cache[t]=e}},{key:\"getCache\",value:function(t){return t in this.cache&&this.cache[t]}},{key:\"getUncached\",value:function(t){var e=this;return(t=(0,r.uniq)(t)).filter((function(t){return!1===e.get(t)}))}}])&&u(e.prototype,n),i&&u(e,i),Object.defineProperty(e,\"prototype\",{writable:!1}),t}());function f(t){return f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},f(t)}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,(i=r.key,a=void 0,a=function(t,e){if(\"object\"!==f(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==f(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(i,\"string\"),\"symbol\"===f(a)?a:String(a)),r)}var i,a}var p={text:function(t){return t=(0,r.map)(t,(function(t){return\"text\"!==t.type?t:(t.content=t.$el.find(\"input[type=text][id^=acf]\").val(),t=i(t))}))},textarea:function(t){return t=(0,r.map)(t,(function(t){return\"textarea\"!==t.type||(t.content=\"<p>\"+t.$el.find(\"textarea[id^=acf]\").val()+\"<\/p>\"),t}))},email:function(t){return t=(0,r.map)(t,(function(t){return\"email\"!==t.type||(t.content=t.$el.find(\"input[type=email][id^=acf]\").val()),t}))},url:function(t){return t=(0,r.map)(t,(function(t){if(\"url\"!==t.type)return t;var e=t.$el.find(\"input[type=url][id^=acf]\").val();return t.content=e?'<a href=\"'+e+'\">'+e+\"<\/a>\":\"\",t}))},link:function(t){return(0,r.map)(t,(function(t){if(\"link\"!==t.type)return t;var e=t.$el.find(\"input[type=hidden].input-title\").val(),n=t.$el.find(\"input[type=hidden].input-url\").val(),r=t.$el.find(\"input[type=hidden].input-target\").val();return t.content='<a href=\"'+n+'\" target=\"'+r+'\">'+e+\"<\/a>\",t}))},wysiwyg:function(t){return t=(0,r.map)(t,(function(t){return\"wysiwyg\"!==t.type||(t.content=a(t)),t}))},image:function(t){var e=[];return t=(0,r.map)(t,(function(t){if(\"image\"!==t.type)return t;t.content=\"\";var n=t.$el.find(\"input[type=hidden]\").val();return e.push(n),t.content+=l.getAttachmentContent(n),t})),l.refresh(e),t},gallery:function(t){var e=[];return t=(0,r.map)(t,(function(t){return\"gallery\"!==t.type||(t.content=\"\",t.$el.find(\".acf-gallery-attachment input[type=hidden]\").each((function(){var r=n()(this).val();e.push(r),t.content+=l.getAttachmentContent(r)}))),t})),l.refresh(e),t},taxonomy:function(t){return t=(0,r.map)(t,(function(t){if(\"taxonomy\"!==t.type)return t;var e=[];if(t.$el.find('.acf-taxonomy-field[data-type=\"multi_select\"]').length>0){var n=acf.select2.version>=4?\"select\":\"input\";e=(0,r.map)(t.$el.find('.acf-taxonomy-field[data-type=\"multi_select\"] '+n).select2(\"data\"),\"text\")}else t.$el.find('.acf-taxonomy-field[data-type=\"checkbox\"]').length>0?e=(0,r.map)(t.$el.find('.acf-taxonomy-field[data-type=\"checkbox\"] input[type=\"checkbox\"]:checked').next(),\"textContent\"):t.$el.find(\"input[type=checkbox]:checked\").length>0?e=(0,r.map)(t.$el.find(\"input[type=checkbox]:checked\").parent(),\"textContent\"):t.$el.find(\"select option:checked\").length>0&&(e=(0,r.map)(t.$el.find(\"select option:checked\"),\"textContent\"));return(e=(0,r.map)(e,(function(t){return t.trim()}))).length>0&&(t.content=\"<ul>\\n<li>\"+e.join(\"<\/li>\\n<li>\")+\"<\/li>\\n<\/ul>\"),t}))}},s=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var e,i,a;return e=t,(i=[{key:\"getFieldContent\",value:function(){var t=this.excludeNames(this.excludeTypes(this.getData())),e=(0,r.uniq)((0,r.map)(t,\"type\"));return n().each(e,(function(e,n){n in p&&(t=p[n](t))})),t}},{key:\"append\",value:function(t){var e=this.getFieldContent();return(0,r.each)(e,(function(e){void 0!==e.content&&\"\"!==e.content&&(t+=\"\\n\"+e.content)})),t}},{key:\"getData\",value:function(){var t=[\"flexible_content\",\"repeater\",\"group\"],e=[],i=[],a=(0,r.map)(acf.get_fields(),(function(r){var a=n().extend(!0,{},acf.get_data(n()(r)));return a.$el=n()(r),a.post_meta_key=a.name,-1===t.indexOf(a.type)?e.push(a):i.push(a),a}));return 0===i.length||(0,r.each)(e,(function(t){(0,r.each)(i,(function(e){n().contains(e.$el[0],t.$el[0])&&(\"flexible_content\"!==e.type&&\"repeater\"!==e.type||(e.children=e.children||[],e.children.push(t),t.parent=e,t.post_meta_key=e.name+\"_\"+(e.children.length-1)+\"_\"+t.name),\"group\"===e.type&&(e.children=[t],t.parent=e,t.post_meta_key=e.name+\"_\"+t.name))}))})),a}},{key:\"excludeTypes\",value:function(t){return(0,r.filter)(t,(function(t){return!(0,r.includes)(rankMath.acf.blacklistTypes,t.type)}))}},{key:\"excludeNames\",value:function(t){return(0,r.filter)(t,(function(t){return!(0,r.includes)(rankMath.acf.names,t.name)}))}}])&&y(e.prototype,i),a&&y(e,a),Object.defineProperty(e,\"prototype\",{writable:!1}),t}()),h=wp.hooks;function d(t){return d=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},d(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,v(r.key),r)}}function v(t){var e=function(t,e){if(\"object\"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==d(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===d(e)?e:String(e)}var b=function(){function t(){var e,i,a,o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),e=this,a=0,(i=v(i=\"analysisTimeout\"))in e?Object.defineProperty(e,i,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[i]=a,this.maybeRefresh=this.maybeRefresh.bind(this),this.refresh=(0,r.debounce)(this.maybeRefresh,rankMath.acf.refreshRate),(0,h.addFilter)(\"rank_math_content\",\"rank-math\",s.append.bind(s),11),n()(\".acf-field\").on(\"change\",(function(){o.refresh()}))}var e,i,a;return e=t,(i=[{key:\"maybeRefresh\",value:function(){rankMathEditor.refresh(\"content\")}}])&&m(e.prototype,i),a&&m(e,a),Object.defineProperty(e,\"prototype\",{writable:!1}),t}();window.RankMathACFAnalysis=new b}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/role-manager\/assets\/js\/role-manager.js","ext":"js","size":32914,"mtime":1757324689,"type":"text","content":"!function(){var t={75:function(){},802:function(){},184:function(t,e){var n;!function(){\"use strict\";var r={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var n=arguments[e];if(n){var i=typeof n;if(\"string\"===i||\"number\"===i)t.push(n);else if(Array.isArray(n)){if(n.length){var a=o.apply(null,n);a&&t.push(a)}}else if(\"object\"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes(\"[native code]\")){t.push(n.toString());continue}for(var u in n)r.call(n,u)&&n[u]&&t.push(u)}}}return t.join(\" \")}t.exports?(o.default=o,t.exports=o):void 0===(n=function(){return o}.apply(e,[]))||(t.exports=n)}()},896:function(t,e,n){\"use strict\";var r=n(81),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,\"\/*!\\n * Plugin:\\tRank Math - Role Manager\\n * URL:\\t\\thttps:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\\n * Name:\\trole-manager.css\\n *\/.rank-math-tab-header{padding:1.875rem 1.875rem 0;margin:-1.875rem -1.875rem 30px;border-radius:6px 6px 0 0;border-bottom:1px solid #b5bfc9;background-color:#f8f9fa;text-align:center}.rank-math-tab-header h2{font-size:30px;font-weight:500;margin:0}.rank-math-tab-header p{font-size:1rem;margin-bottom:2rem}.field-row:first-of-type{padding-top:0}footer.form-footer .rank-math-button:first-of-type{width:90px}footer.form-footer .rank-math-button:last-of-type{width:150px}@media(min-width: 1200px){.field-big-labels .rank-math-checkbox-list li{width:33.33%}}@media(min-width: 641px){.rank-math-button.toggle-all-capabilities{position:absolute;top:56px;left:0;font-weight:600}.field-wrap .field-row:first-of-type .rank-math-button.toggle-all-capabilities{top:32px}}\",\"\"]),e.Z=a},645:function(t){\"use strict\";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=\"\",r=void 0!==e[5];return e[4]&&(n+=\"@supports (\".concat(e[4],\") {\")),e[2]&&(n+=\"@media \".concat(e[2],\" {\")),r&&(n+=\"@layer\".concat(e[5].length>0?\" \".concat(e[5]):\"\",\" {\")),n+=t(e),r&&(n+=\"}\"),e[2]&&(n+=\"}\"),e[4]&&(n+=\"}\"),n})).join(\"\")},e.i=function(t,n,r,o,i){\"string\"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var u=0;u<this.length;u++){var c=this[u][0];null!=c&&(a[c]=!0)}for(var l=0;l<t.length;l++){var s=[].concat(t[l]);r&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]=\"@layer\".concat(s[5].length>0?\" \".concat(s[5]):\"\",\" {\").concat(s[1],\"}\")),s[5]=i),n&&(s[2]?(s[1]=\"@media \".concat(s[2],\" {\").concat(s[1],\"}\"),s[2]=n):s[2]=n),o&&(s[4]?(s[1]=\"@supports (\".concat(s[4],\") {\").concat(s[1],\"}\"),s[4]=o):s[4]=\"\".concat(o)),e.push(s))}},e}},81:function(t){\"use strict\";t.exports=function(t){return t[1]}},379:function(t){\"use strict\";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},a=[],u=0;u<t.length;u++){var c=t[u],l=r.base?c[0]+r.base:c[0],s=i[l]||0,f=\"\".concat(l,\" \").concat(s);i[l]=s+1;var p=n(f),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var m=o(d,r);r.byIndex=u,e.splice(u,0,{identifier:f,updater:m,references:1})}a.push(f)}return a}function o(t,e){var n=e.domAPI(e);n.update(t);return function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var u=n(i[a]);e[u].references--}for(var c=r(t,o),l=0;l<i.length;l++){var s=n(i[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=c}}},569:function(t){\"use strict\";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");r.appendChild(n)}},216:function(t){\"use strict\";t.exports=function(t){var e=document.createElement(\"style\");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:function(t,e,n){\"use strict\";t.exports=function(t){var e=n.nc;e&&t.setAttribute(\"nonce\",e)}},795:function(t){\"use strict\";t.exports=function(t){if(\"undefined\"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r=\"\";n.supports&&(r+=\"@supports (\".concat(n.supports,\") {\")),n.media&&(r+=\"@media \".concat(n.media,\" {\"));var o=void 0!==n.layer;o&&(r+=\"@layer\".concat(n.layer.length>0?\" \".concat(n.layer):\"\",\" {\")),r+=n.css,o&&(r+=\"}\"),n.media&&(r+=\"}\"),n.supports&&(r+=\"}\");var i=n.sourceMap;i&&\"undefined\"!=typeof btoa&&(r+=\"\\n\/*# sourceMappingURL=data:application\/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))),\" *\/\")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:function(t){\"use strict\";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,{a:e}),e},n.d=function(t,e){for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.nc=void 0,function(){\"use strict\";var t={};n.r(t),n.d(t,{resetStore:function(){return y},resetdirtySettings:function(){return m},updateAnalytics:function(){return p},updateData:function(){return f},updateModules:function(){return d}});var e={};n.r(e),n.d(e,{appData:function(){return S},appUi:function(){return E}});var r={};n.r(r),n.d(r,{getAnalytics:function(){return C},getAppData:function(){return x},getData:function(){return A},getModules:function(){return M},getdirtySettings:function(){return T}});var o=jQuery,i=n.n(o),a=lodash,u=wp.element,c=wp.data,l=wp.hooks;function s(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return e=(0,l.applyFilters)(\"rank_math_sanitize_settings\",e,t,n),null!==r&&(r=(0,l.applyFilters)(\"rank_math_sanitize_settings_value\",r,t,n)),r=null===r?e:r,(0,l.doAction)(\"rank_math_settings_changed\",t,e,n),{type:\"RANK_MATH_SETTINGS_DATA\",key:t,value:e,settingsKey:n,settingsValue:r}}function f(t){return s(\"data\",t,\"data\")}function p(t){return s(\"analytics\",t,\"analytics\")}function d(t,e){var n=wp.data.select(\"rank-math-settings\").getData();return n[t].isActive=e,(0,a.forEach)(n,(function(e,r){if((0,a.includes)(e.dep_modules,t)){var o=!1;(0,a.forEach)(e.dep_modules,(function(t){n[t].isActive||(o=!0)})),n[r].isDisabled=o,n[r].disabled=o}})),f(n)}function m(){return s(\"dirtySettings\",{})}function y(){return{type:\"RESET_STORE\"}}n(75);function b(t){return b=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},b(t)}function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function h(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach((function(e){v(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function v(t,e,n){return(e=function(t){var e=function(t,e){if(\"object\"!==b(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==b(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===b(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var w={data:(0,a.get)(rankMath,\"data\",{}),analytics:h(h(h({},rankMath),(0,a.get)(rankMath,\"data\",{})),(0,a.get)(rankMath,\"analytics\",{})),dirtySettings:{}},O=h({},w);function S(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:w,e=arguments.length>1?arguments[1]:void 0,n=h({},t.dirtySettings);return!1!==e.settingsKey&&(n=e.settingsValue),\"RANK_MATH_SETTINGS_DATA\"===e.type?\"dirtySettings\"===e.key?h(h({},t),{},{dirtySettings:e.value}):h(h({},t),{},v(v({},e.key,e.value),\"dirtySettings\",n)):\"RESET_STORE\"===e.type?O:t}function j(t){return j=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},j(t)}function k(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function P(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?k(Object(n),!0).forEach((function(e){_(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):k(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function _(t,e,n){return(e=function(t){var e=function(t,e){if(\"object\"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==j(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===j(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function E(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0;return\"RANK_MATH_APP_UI\"===e.type?P(P({},t),{},_({},e.key,e.value)):t}function x(t){return t.appData}function T(t){return t.appData.dirtySettings}function A(t){return t.appData.data}function C(t){return t.appData.analytics}function M(t){return t.appData.modules}n(802),(0,c.register)((0,c.createReduxStore)(\"rank-math-settings\",{reducer:(0,c.combineReducers)(e),selectors:r,actions:t}));var D=wp.i18n,N=wp.compose;function R(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\",r=rankMath.links[t]||\"\";if(!r)return\"#\";if(!e)return r;var o={utm_source:\"Plugin\",utm_medium:encodeURIComponent(e),utm_campaign:\"WP\"};return r+\"?\"+Object.keys(o).map((function(t){return\"\".concat(t,\"=\").concat(o[t])})).join(\"&\")+n}var I=function(t){var e=t.title,n=t.description,r=t.link,o=t.linkText,i=void 0===o?(0,D.__)(\"Learn more\",\"rank-math\"):o;return wp.element.createElement(\"header\",{className:\"rank-math-tab-header\"},wp.element.createElement(\"h2\",null,e),wp.element.createElement(\"p\",null,n,r&&wp.element.createElement(React.Fragment,null,\" \",wp.element.createElement(\"a\",{href:r,target:\"_blank\",rel:\"noreferrer\"},i),\".\")))},U=wp.apiFetch,B=n.n(U),L=window.rankMathComponents;function F(t,e,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"\",a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];e=e||\"error\",r=r||!1;var u=i()('<div class=\"notice notice-'+e+\" \"+o+' is-dismissible\"><p>'+t+\"<\/p><\/div>\").hide();a||n.siblings(\".notice\").remove(),n.after(u),u.slideDown(),i()(document).trigger(\"wp-updates-notice-added\"),i()(\"html,body\").animate({scrollTop:u.offset().top-50},\"slow\"),r&&setTimeout((function(){u.fadeOut((function(){u.remove()}))}),r)}function G(t){return G=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},G(t)}var H=[\"validate\",\"afterSave\"];function W(){return W=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},W.apply(this,arguments)}function z(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function K(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?z(Object(n),!0).forEach((function(e){Z(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):z(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Z(t,e,n){return(e=function(t){var e=function(t,e){if(\"object\"!==G(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==G(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===G(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function V(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}function $(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return q(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return q(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function q(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var J=function(t,e){return\"resetting\"===e?(0,D.__)(\"Resetting\u2026\",\"rank-math\"):\"resetted\"===e?(0,D.__)(\"Resetted\",\"rank-math\"):t.children},Q=function(t,e){return\"updating\"===e?(0,D.__)(\"Updating\u2026\",\"rank-math\"):\"updated\"===e?(0,D.__)(\"Updated\",\"rank-math\"):t.children},Y=function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};if((0,a.includes)([\"roleCapabilities\",\"redirections\"],t))return{data:e,fields:{},updated:[]};var i={},u=[];return{data:(0,a.isUndefined)(n)?{}:(0,a.reduce)(n,(function(t,n){return(0,a.isArray)(n.fields)&&0!==n.fields.length?\"htaccess\"===n.name?(t.htaccess_allow_editing=e.htaccess_allow_editing,t.htaccess_content=e.htaccess_content,(0,a.isEqual)(e.htaccess_content,o.htaccess_content)||u.push(\"htaccess_content\"),t):((0,a.forEach)(n.fields,(function(n){var c=n.id;if(r)(0,a.has)(n,\"default\")&&(t[c]=n.default,i[c]=n.type);else{var l=(\"\"===e[c]||(0,a.isUndefined)(e[c]))&&(0,a.has)(n,\"default\")?n.default:e[c];t[c]=l,i[c]=n.type,\"file\"!==n.type||(0,a.isUndefined)(e[c+\"_id\"])||(t[c+\"_id\"]=e[c+\"_id\"],i[c]=\"text\"),(0,a.isEqual)(l,o[c])||u.push(c)}})),t):t}),{}),fields:i,updated:u}},X=(0,N.compose)((0,c.withSelect)((function(t){return{settings:t(\"rank-math-settings\").getdirtySettings(),data:t(\"rank-math-settings\").getData()}})),(0,c.withDispatch)((function(t,e){var n=e.type,r=e.settings,o=e.tabs,u=e.footer.applyButton;return{saveSettings:function(e,c){var l=Y(n,r,o,!1,c);e(\"updating\"),B()({method:\"POST\",path:\"\/rankmath\/v1\/updateSettings\",data:{type:n,settings:l.data,fieldTypes:l.fields,updated:l.updated}}).then((function(n){return e(\"updated\"),n?!(0,a.isUndefined)(n.notifications)&&n.notifications.length?((0,a.forEach)(n.notifications,(function(t){var e=!(0,a.isEmpty)(t.error);F(e?t.error:t.success,e?\"error\":\"success\",i()(\".rank-math-breadcrumbs-wrap\"),!1,\"rank-math-settings-notice\",!0)})),void i()(\"html, body\").animate({scrollTop:0},\"fast\")):n.error?(F(n.error,\"error\",i()(\".rank-math-breadcrumbs-wrap\"),!1,\"rank-math-settings-notice\"),void i()(\"html, body\").animate({scrollTop:0},\"fast\")):(t(\"rank-math-settings\").updateData(n.settings?n.settings:K({},l.data)),n.success?(F(n.success,\"success\",i()(\".rank-math-breadcrumbs-wrap\"),!1,\"rank-math-settings-notice\"),void i()(\"html, body\").animate({scrollTop:0},\"fast\")):(n&&!n.error&&u.afterSave&&u.afterSave(),e(\"updated\"),void t(\"rank-math-settings\").resetdirtySettings())):(e(\"\"),void window.alert((0,D.__)(\"Something went wrong! Please try again.\",\"rank-math\")))}))},resetSettings:function(e){var i=Y(n,r,o,!0);e(\"resetting\"),B()({method:\"POST\",path:\"\/rankmath\/v1\/updateSettings\",data:{type:n,settings:i.data,fieldTypes:i.fields,isReset:!0}}).then((function(n){if(!n)return e(\"\"),void window.alert((0,D.__)(\"Something went wrong! Please try again.\",\"rank-math\"));e(\"resetted\"),t(\"rank-math-settings\").updateData(n.settings?n.settings:K({},i.data)),t(\"rank-math-settings\").resetdirtySettings()}))}}})))((function(t){var e=$((0,u.useState)(\"\"),2),n=e[0],r=e[1],o=t.settings,i=t.data,c=t.resetSettings,l=t.saveSettings,s=t.footer,f=s.applyButton,p=f.validate,d=(f.afterSave,V(f,H)),m=(0,u.useRef)(null);return null===m.current&&(m.current=K({},i)),(0,u.useEffect)((function(){(0,a.includes)([\"updated\",\"resetted\"],n)&&setTimeout((function(){return r(\"\")}),1e3)}),[n]),wp.element.createElement(\"footer\",{className:\"form-footer rank-math-ui\"},wp.element.createElement(L.Button,W({onClick:function(){window.confirm((0,D.__)(\"Are you sure? You want to reset settings.\",\"rank-math\"))&&c(r)}},s.discardButton,{children:J(s.discardButton,n)})),wp.element.createElement(L.Button,W({variant:\"primary\",onClick:function(){(!p||p())&&l(r,m.current)},disabled:(0,a.isEmpty)(o)},d,{children:Q(d,n)})))})),tt=n(184),et=n.n(tt);function nt(t){return nt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},nt(t)}var rt=[\"id\",\"type\",\"content\",\"Component\",\"isDisabled\",\"default\"];function ot(){return ot=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},ot.apply(this,arguments)}function it(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function at(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?it(Object(n),!0).forEach((function(e){ut(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):it(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function ut(t,e,n){return(e=function(t){var e=function(t,e){if(\"object\"!==nt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==nt(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===nt(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function ct(t){return function(t){if(Array.isArray(t))return lt(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return lt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return lt(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function lt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function st(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var ft=(0,N.compose)((0,c.withDispatch)((function(t,e){var n=e.settings;return{updateSetting:function(e,r){n[e]=r,t(\"rank-math-settings\").updateData(at({},n))}}})))((function(t){var e=t.field,n=t.settingType,r=t.settings,o=t.value,i=e.id,c=e.type,l=e.content,s=e.Component,f=e.isDisabled,p=e.default,d=st(e,rt);(0,a.isUndefined)(o)&&(o=(0,a.isUndefined)(r)||(0,a.isUndefined)(r[i])?p:r[i]),(0,a.includes)([\"disable_author_archives\",\"opening_hours_format\"],i)&&(0,a.isBoolean)(o)&&t.updateSetting(i,!1===o?\"off\":\"on\"),(0,a.includes)([\"disable_author_archives\"],i)&&\"\"===o&&t.updateSetting(i,p),(0,a.endsWith)(i,\"_bulk_editing\")&&!(0,a.isString)(o)&&(o=String(o)),!(0,a.endsWith)(i,\"_default_rich_snippet\")||\"\"!==o&&!1!==o||(o=\"off\");var m=function(e){if(((0,a.endsWith)(i,\"_robots\")||\"robots_global\"===i)&&(0,a.isArray)(e)&&((0,a.includes)(e,\"index\")||(0,a.includes)(e,\"noindex\")||(0,a.includes)(o||[],\"index\")||(0,a.includes)(o||[],\"noindex\"))){var n=o||[],r=(0,a.includes)(e,\"index\"),u=(0,a.includes)(e,\"noindex\"),l=(0,a.includes)(n,\"index\"),s=(0,a.includes)(n,\"noindex\");if(l&&!r)e=[].concat(ct(e),[\"noindex\"]);else if(s&&!u)e=[].concat(ct(e),[\"index\"]);else if(r&&u){var f=(0,a.last)(e);e=(0,a.filter)(e,(function(t){return\"index\"===f?\"noindex\"!==t:\"index\"!==t}))}}\"file\"===c?(t.updateSetting(i,e.url),t.updateSetting(i+\"_id\",e.id)):t.updateSetting(i,e)},y=function(){var t={toggle:\"checked\",checkbox:\"checked\"}[c]||\"value\",e=(0,a.includes)([\"component\",\"group\"],c);return at(at(at({},d),{},ut(ut({id:i},t,d.value||o),\"onChange\",d.onChange||!f&&m),e&&{settingType:n}),d.attributes)},b={file:window.rankMathComponents.UploadFile,text:window.rankMathComponents.TextControl,select:window.rankMathComponents.SelectControl,toggle:window.rankMathComponents.ToggleControl,select_search:window.rankMathComponents.SelectWithSearch,multicheck:window.rankMathComponents.CheckboxList,multicheck_inline:window.rankMathComponents.CheckboxList,radio_inline:window.rankMathComponents.ToggleGroupControl,repeatable_group:window.rankMathComponents.RepeatableGroup,selectSearch:window.rankMathComponents.SelectWithSearch,searchPage:window.rankMathComponents.SearchPage,checkboxlist:window.rankMathComponents.CheckboxList,toggleGroup:window.rankMathComponents.ToggleGroupControl,repeatableGroup:window.rankMathComponents.RepeatableGroup,group:window.rankMathComponents.Group,checkbox:window.rankMathComponents.CheckboxControl,textarea:window.rankMathComponents.TextareaControl,notice:window.rankMathComponents.Notice,selectVariable:window.rankMathComponents.SelectVariable,button:window.rankMathComponents.Button}[c],g=\"group\"===c?{onChange:t.updateSetting}:{};return b?wp.element.createElement(b,ot({},y(),{settings:r},g)):\"component\"===c?wp.element.createElement(s,y()):\"raw\"===c?wp.element.createElement(u.RawHTML,null,l):null})),pt=[\"relation\",\"compare\"];function dt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return mt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return mt(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function mt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function yt(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}function bt(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return gt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return gt(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function gt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function ht(t){return ht=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},ht(t)}function vt(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function wt(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?vt(Object(n),!0).forEach((function(e){Ot(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):vt(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Ot(t,e,n){return(e=function(t){var e=function(t,e){if(\"object\"!==ht(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==ht(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===ht(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var St=function(t){var e=t.settingType,n=t.fields,r=t.settings,o=void 0===r?null:r;return wp.element.createElement(\"div\",{className:\"field-wrap form-table wp-core-ui rank-math-ui\"},wp.element.createElement(\"div\",{id:\"field-metabox-rank-math-\".concat(e),className:\"field-metabox field-list\"},(0,a.map)(n,(function(t,n){var r=t.id,i=t.type,u=t.name,c=t.desc,l=t.classes,s=t.content,f=t.dep,p=t.disableDep,d=t.afterfield,m=function(t,e){return(0,a.some)(t,(function(t){var n=bt(t,1)[0];return e[n]}))}(p,o);if((!f||function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=t.relation,r=void 0===n?\"or\":n,o=t.compare,i=void 0===o?\"\":o,u=yt(t,pt),c=function(t){var n=dt(t,2),r=n[0],o=n[1],u=e[r];return\"!=\"===i?(0,a.isArray)(o)?!(0,a.includes)(o,u):o!==u:(0,a.isArray)(o)?(0,a.includes)(o,u):o===u};return\"and\"===r?(0,a.every)((0,a.entries)(u),c):(0,a.some)((0,a.entries)(u),c)}(f,o))&&\"hidden\"!==i){if(\"raw\"===i)return s;var y=et()(\"field-row\",l,Ot(Ot({\"field-disabled\":m},\"field-id-\"+r,r),\"field-type-\"+i,i));return wp.element.createElement(\"div\",{key:r||n,className:y},u&&wp.element.createElement(\"div\",{className:\"field-th\"},wp.element.createElement(\"label\",{htmlFor:r},u)),wp.element.createElement(\"div\",{className:\"field-td\"},wp.element.createElement(ft,{settingType:e,field:wt(wt({},t),{},{isDisabled:m}),settings:o}),c&&wp.element.createElement(\"p\",{className:\"field-description\",dangerouslySetInnerHTML:{__html:c}}),d))}}))))},jt=function(t){var e=t.type,n=t.header,r=t.footer,o=t.fields,i=void 0===o?[]:o,u=t.settings,c=void 0===u?null:u,l=t.tabs;return(0,a.isEmpty)(c)?null:wp.element.createElement(React.Fragment,null,n&&wp.element.createElement(I,n),wp.element.createElement(St,{settingType:e,fields:i,settings:c}),r&&wp.element.createElement(X,{type:e,footer:r,tabs:l}))},kt=n(379),Pt=n.n(kt),_t=n(795),Et=n.n(_t),xt=n(569),Tt=n.n(xt),At=n(565),Ct=n.n(At),Mt=n(216),Dt=n.n(Mt),Nt=n(589),Rt=n.n(Nt),It=n(896),Ut={};Ut.styleTagTransform=Rt(),Ut.setAttributes=Ct(),Ut.insert=Tt().bind(null,\"head\"),Ut.domAPI=Et(),Ut.insertStyleElement=Dt();Pt()(It.Z,Ut),It.Z&&It.Z.locals&&It.Z.locals;function Bt(t){return Bt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},Bt(t)}function Lt(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Ft(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Lt(Object(n),!0).forEach((function(e){Gt(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Lt(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Gt(t,e,n){return(e=function(t){var e=function(t,e){if(\"object\"!==Bt(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!==Bt(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===Bt(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var Ht=(0,N.compose)((0,c.withSelect)((function(t){return{settings:t(\"rank-math-settings\").getData()}})))((function(t){var e,n,r,o,i=t.settings;return wp.element.createElement(\"div\",{className:\"wrap rank-math-wrap\"},wp.element.createElement(\"div\",{className:\"rank-math-box container\"},wp.element.createElement(\"span\",{className:\"wp-header-end\"}),wp.element.createElement(jt,{type:\"roleCapabilities\",fields:(e=rankMath,n=e.roles,r=e.capabilities,o=(0,a.map)((0,a.keys)(r),(function(t){return{id:t,label:r[t]}})),(0,a.map)((0,a.keys)(n),(function(t){var e=(0,a.map)(o,(function(e){return Ft(Ft({},e),\"administrator\"===t&&\"rank_math_role_manager\"===e.id?{disabled:!0}:{})}));return{id:t,name:n[t],options:e,type:\"checkboxlist\",classes:\"field-big-labels\",toggleAll:{size:\"small\",className:\"toggle-all-capabilities\",children:(0,D.__)(\"Toggle All\",\"rank-math\")}}}))),settings:i,header:{title:(0,D.__)(\"Role Manager\",\"rank-math\"),link:R(\"role-manager\",\"Role Manager Page\"),description:(0,D.__)(\"Control which user has access to which options of Rank Math.\",\"rank-math\")},footer:{discardButton:{children:(0,D.__)(\"Reset\",\"rank-math\")},applyButton:{children:(0,D.__)(\"Update Capabilities\",\"rank-math\")}}})))}));i()((function(){var t=document.getElementById(\"rank-math-settings\");(0,a.isNull)(t)||(0,u.createRoot)(t).render(wp.element.createElement(Ht,null))}))}()}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/role-manager\/class-role-manager.php","ext":"php","size":1965,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Role Manager Module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Role_Manager\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Role_Manager;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Module\\Base;\nuse RankMath\\Admin\\Page;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Role_Manager class.\n *\/\nclass Role_Manager extends Base {\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'        => 'role-manager',\n\t\t\t\t'directory' => $directory,\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\t\/\/ Members plugin integration.\n\t\tif ( \\function_exists( 'members_plugin' ) ) {\n\t\t\tnew Members();\n\t\t}\n\n\t\t\/\/ User Role Editor plugin integration.\n\t\tif ( defined( 'URE_PLUGIN_URL' ) ) {\n\t\t\tnew User_Role_Editor();\n\t\t}\n\t}\n\n\t\/**\n\t * Register admin page.\n\t *\/\n\tpublic function register_admin_page() {\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\n\t\t$this->page = new Page(\n\t\t\t'rank-math-role-manager',\n\t\t\tesc_html__( 'Role Manager', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'position'   => 20,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t'capability' => 'rank_math_role_manager',\n\t\t\t\t'classes'    => [ 'rank-math-page' ],\n\t\t\t\t'render'     => 'settings',\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'rank-math-common' => '',\n\t\t\t\t\t\t'wp-components'    => '',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'lodash'                 => '',\n\t\t\t\t\t\t'wp-element'             => '',\n\t\t\t\t\t\t'wp-data'                => '',\n\t\t\t\t\t\t'wp-components'          => '',\n\t\t\t\t\t\t'wp-api-fetch'           => '',\n\t\t\t\t\t\t'rank-math-components'   => '',\n\t\t\t\t\t\t'rank-math-role-manager' => $uri . '\/assets\/js\/role-manager.js',\n\t\t\t\t\t],\n\t\t\t\t\t'json'    => [\n\t\t\t\t\t\t'roles'        => Helper::get_roles(),\n\t\t\t\t\t\t'data'         => Helper::get_roles_capabilities(),\n\t\t\t\t\t\t'capabilities' => Capability_Manager::get()->get_capabilities(),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/role-manager\/class-user-role-editor.php","ext":"php","size":1670,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * User Role Editor plugin integration.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Role_Manager\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Role_Manager;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * User_Role_Editor class.\n *\/\nclass User_Role_Editor {\n\n\tuse Hooker;\n\n\t\/**\n\t * Members cap group name.\n\t *\n\t * @var string\n\t *\/\n\tconst GROUP = 'rank_math';\n\n\t\/**\n\t * Hold caps.\n\t *\n\t * @var array\n\t *\/\n\tprivate $caps = [];\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->filter( 'ure_capabilities_groups_tree', 'register_group' );\n\t\t$this->filter( 'ure_custom_capability_groups', 'register_capability_groups', 10, 2 );\n\n\t\t$this->caps = Capability_Manager::get()->get_capabilities();\n\t}\n\n\t\/**\n\t * Adds Rank Math capability group in the User Role Editor plugin.\n\t *\n\t * @param  array $groups Current groups.\n\t * @return array Filtered list of capabilty groups.\n\t *\/\n\tpublic function register_group( $groups = [] ) {\n\t\t$groups = (array) $groups;\n\n\t\t$groups[ self::GROUP ] = [\n\t\t\t'caption' => esc_html__( 'Rank Math', 'rank-math' ),\n\t\t\t'parent'  => 'custom',\n\t\t\t'level'   => 3,\n\t\t];\n\n\t\treturn $groups;\n\t}\n\n\t\/**\n\t * Adds capabilities to the Rank Math group in the User Role Editor plugin.\n\t *\n\t * @param  array  $groups Current capability groups.\n\t * @param  string $cap_id Capability identifier.\n\t * @return array List of filtered groups.\n\t *\/\n\tpublic function register_capability_groups( $groups = [], $cap_id = '' ) {\n\t\tif ( array_key_exists( $cap_id, $this->caps ) ) {\n\t\t\t$groups   = (array) $groups;\n\t\t\t$groups[] = self::GROUP;\n\t\t}\n\n\t\treturn $groups;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/role-manager\/class-members.php","ext":"php","size":1446,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Members plugin integration.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Role_Manager\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Role_Manager;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Members class.\n *\/\nclass Members {\n\n\tuse Hooker;\n\n\t\/**\n\t * Members cap group name.\n\t *\n\t * @var string\n\t *\/\n\tconst GROUP = 'rank_math';\n\n\t\/**\n\t * Class Members constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'members_register_caps', 'register_caps' );\n\t\t$this->action( 'members_register_cap_groups', 'register_cap_groups' );\n\t}\n\n\t\/**\n\t * Registers cap group.\n\t *\/\n\tpublic function register_cap_groups() {\n\t\t\/\/ @phpstan-ignore-next-line\n\t\t\\members_register_cap_group(\n\t\t\tself::GROUP,\n\t\t\t[\n\t\t\t\t'label'    => esc_html__( 'Rank Math', 'rank-math' ),\n\t\t\t\t'caps'     => [],\n\t\t\t\t'icon'     => 'dashicons-chart-area',\n\t\t\t\t'priority' => 30,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Registers caps.\n\t *\/\n\tpublic function register_caps() {\n\t\t$caps = Capability_Manager::get()->get_capabilities();\n\t\tif ( 'administrator' === Param::get( 'role' ) ) {\n\t\t\t$caps['rank_math_edit_htaccess'] = esc_html__( 'Edit .htaccess', 'rank-math' );\n\t\t}\n\n\t\tforeach ( $caps as $key => $value ) {\n\t\t\t\/\/ @phpstan-ignore-next-line\n\t\t\t\\members_register_cap(\n\t\t\t\t$key,\n\t\t\t\t[\n\t\t\t\t\t'label' => html_entity_decode( $value ),\n\t\t\t\t\t'group' => self::GROUP,\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/role-manager\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/role-manager\/class-capability-manager.php","ext":"php","size":4775,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Capability Manager.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Role_Manager\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Role_Manager;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Capability_Manager class.\n *\/\nclass Capability_Manager {\n\n\tuse Hooker;\n\n\t\/**\n\t * Registered capabilities.\n\t *\n\t * @var array\n\t *\/\n\tprotected $capabilities = [];\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Capability_Manager\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Capability_Manager ) ) {\n\t\t\t$instance = new Capability_Manager();\n\t\t\t$instance->set_capabilities();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Set default capabilities.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function set_capabilities() {\n\t\t$this->register( 'rank_math_titles', esc_html__( 'Titles & Meta Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_general', esc_html__( 'General Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_sitemap', esc_html__( 'Sitemap Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_404_monitor', esc_html__( '404 Monitor Log', 'rank-math' ) );\n\t\t$this->register( 'rank_math_link_builder', esc_html__( 'Link Builder', 'rank-math' ) );\n\t\t$this->register( 'rank_math_redirections', esc_html__( 'Redirections', 'rank-math' ) );\n\t\t$this->register( 'rank_math_role_manager', esc_html__( 'Role Manager', 'rank-math' ) );\n\t\t$this->register( 'rank_math_analytics', esc_html__( 'Analytics', 'rank-math' ) );\n\t\t$this->register( 'rank_math_site_analysis', esc_html__( 'Site-Wide Analysis', 'rank-math' ) );\n\t\t$this->register( 'rank_math_onpage_analysis', esc_html__( 'On-Page Analysis', 'rank-math' ) );\n\t\t$this->register( 'rank_math_onpage_general', esc_html__( 'On-Page General Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_onpage_advanced', esc_html__( 'On-Page Advanced Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_onpage_snippet', esc_html__( 'On-Page Schema Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_onpage_social', esc_html__( 'On-Page Social Settings', 'rank-math' ) );\n\t\t$this->register( 'rank_math_content_ai', esc_html__( 'Content AI', 'rank-math' ) );\n\t\t$this->register( 'rank_math_admin_bar', esc_html__( 'Top Admin Bar', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Registers a capability.\n\t *\n\t * @param string $capability Capability to register.\n\t * @param string $title      Capability human title.\n\t *\/\n\tpublic function register( $capability, $title ) {\n\t\t$this->capabilities[ $capability ] = $title;\n\t}\n\n\t\/**\n\t * Get all registered capabilitities.\n\t *\n\t * @param bool $caps Capabilities as keys.\n\t *\n\t * @return string[] Registered capabilities.\n\t *\/\n\tpublic function get_capabilities( $caps = false ) {\n\t\treturn $caps ? array_keys( $this->capabilities ) : $this->capabilities;\n\t}\n\n\t\/**\n\t * Add capabilities on install.\n\t *\/\n\tpublic function create_capabilities() {\n\t\tforeach ( Helper::get_roles() as $slug => $role ) {\n\t\t\t$role = get_role( $slug );\n\t\t\tif ( ! $role ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->loop_capabilities( $this->get_default_capabilities_by_role( $slug ), 'add_cap', $role );\n\t\t}\n\t}\n\n\t\/**\n\t * Remove capabilities on uninstall.\n\t *\/\n\tpublic function remove_capabilities() {\n\t\t$capabilities = $this->get_capabilities( true );\n\t\tforeach ( Helper::get_roles() as $slug => $role ) {\n\t\t\t$role = get_role( $slug );\n\t\t\tif ( ! $role ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->loop_capabilities( $capabilities, 'remove_cap', $role );\n\t\t}\n\t}\n\n\t\/**\n\t * Loop capabilities and perform action.\n\t *\n\t * @param array  $caps    Capabilities.\n\t * @param string $perform Action to perform.\n\t * @param object $role    Role object.\n\t *\/\n\tprivate function loop_capabilities( $caps, $perform, $role ) {\n\t\tforeach ( $caps as $cap ) {\n\t\t\t$role->$perform( $cap );\n\t\t}\n\t}\n\n\t\/**\n\t * Get default capabilities by roles.\n\t *\n\t * @param  string $role Capabilities for this role.\n\t * @return array\n\t *\/\n\tprivate function get_default_capabilities_by_role( $role ) {\n\n\t\tif ( 'administrator' === $role ) {\n\t\t\treturn $this->get_capabilities( true );\n\t\t}\n\n\t\tif ( 'editor' === $role ) {\n\t\t\treturn [\n\t\t\t\t'rank_math_site_analysis',\n\t\t\t\t'rank_math_onpage_analysis',\n\t\t\t\t'rank_math_onpage_general',\n\t\t\t\t'rank_math_onpage_snippet',\n\t\t\t\t'rank_math_onpage_social',\n\t\t\t];\n\t\t}\n\n\t\tif ( 'author' === $role ) {\n\t\t\treturn [\n\t\t\t\t'rank_math_onpage_analysis',\n\t\t\t\t'rank_math_onpage_general',\n\t\t\t\t'rank_math_onpage_snippet',\n\t\t\t\t'rank_math_onpage_social',\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t\/**\n\t * Reset capabilities.\n\t *\n\t * @return void\n\t *\/\n\tpublic function reset_capabilities() {\n\t\t$this->remove_capabilities();\n\t\t$this->create_capabilities();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/links\/class-link.php","ext":"php","size":1503,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The SEO Link class.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Links\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Links;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Link class.\n *\/\nclass Link {\n\n\t\/**\n\t * Link URL.\n\t *\n\t * @var string\n\t *\/\n\tprotected $url;\n\n\t\/**\n\t * Link post ID.\n\t *\n\t * @var int\n\t *\/\n\tprotected $target_post_id;\n\n\t\/**\n\t * Link type.\n\t *\n\t * @var string\n\t *\/\n\tprotected $type;\n\n\t\/**\n\t * Sets the properties for the object.\n\t *\n\t * @param string $url            The URL.\n\t * @param int    $target_post_id ID to the post where the link refers to.\n\t * @param string $type           The URL type: internal or external.\n\t *\/\n\tpublic function __construct( $url, $target_post_id, $type ) {\n\t\t$this->url            = $url;\n\t\t$this->target_post_id = $target_post_id;\n\t\t$this->type           = $type;\n\t}\n\n\t\/**\n\t * Returns the URL.\n\t *\n\t * @return string The URL.\n\t *\/\n\tpublic function get_url() {\n\t\treturn $this->url;\n\t}\n\n\t\/**\n\t * Returns the target post ID.\n\t *\n\t * @return int The target post ID.\n\t *\/\n\tpublic function get_target_post_id() {\n\t\treturn (int) $this->target_post_id;\n\t}\n\n\t\/**\n\t * Return the link type (internal\/external).\n\t *\n\t * @return string The link type.\n\t *\/\n\tpublic function get_type() {\n\t\treturn $this->type;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/links\/class-links.php","ext":"php","size":5966,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Link Counter module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Links\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Links;\n\nuse WP_Post;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Database\\Database;\nuse RankMath\\Admin\\Post_Columns;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Links class.\n *\/\nclass Links {\n\n\tuse Hooker;\n\n\t\/**\n\t * Links data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $links_data = [];\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'save_post', 'save_post', 10, 2 );\n\t\t$this->action( 'delete_post', 'delete_post' );\n\t\t$this->action( 'rank_math\/post\/column\/seo_details', 'post_column_content', 11, 3 );\n\t\t$this->action( 'rank_math\/links\/internal_links', 'cron_job' );\n\t}\n\n\t\/**\n\t * Process and save the links in a post.\n\t *\n\t * @param int     $post_id The post ID to check.\n\t * @param WP_Post $post    The post object.\n\t *\/\n\tpublic function save_post( $post_id, $post ) {\n\t\tif ( ! $post instanceof WP_Post || ! $this->is_processable( $post ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->process( $post_id, $post->post_content );\n\t}\n\n\t\/**\n\t * Remove the links data when the post is deleted.\n\t *\n\t * @param int $post_id The post ID.\n\t *\/\n\tpublic function delete_post( $post_id ) {\n\t\tif ( ! $this->is_processable( get_post( $post_id ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$processor = new ContentProcessor();\n\n\t\t\/\/ Get links to update linked objects.\n\t\t$links = $processor->get_stored_internal_links( $post_id );\n\n\t\t\/\/ Remove all links for this post.\n\t\t$processor->storage->cleanup( $post_id );\n\n\t\t\/\/ Update link counts.\n\t\t$processor->storage->update_link_counts( $post_id, [], $links );\n\t}\n\n\t\/**\n\t * Post column content.\n\t *\n\t * @param int   $post_id   Post ID.\n\t * @param array $post_data Current post SEO data.\n\t * @param array $data      All posts SEO data.\n\t *\/\n\tpublic function post_column_content( $post_id, $post_data, $data ) {\n\t\tif ( ! Post_Columns::is_post_indexable( $post_id ) || empty( $data ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( empty( $this->links_data ) ) {\n\t\t\t$this->get_links_data( array_keys( $data ) );\n\t\t}\n\n\t\t$counts = ! empty( $this->links_data[ $post_id ] ) ? $this->links_data[ $post_id ] : (object) [\n\t\t\t'internal_link_count' => 0,\n\t\t\t'external_link_count' => 0,\n\t\t\t'incoming_link_count' => 0,\n\t\t];\n\t\t?>\n\t\t<span class=\"rank-math-column-display rank-math-link-count\">\n\t\t\t<strong><?php esc_html_e( 'Links: ', 'rank-math' ); ?><\/strong>\n\t\t\t<span title=\"<?php esc_attr_e( 'Internal Links', 'rank-math' ); ?>\">\n\t\t\t\t<span class=\"dashicons dashicons-admin-links\"><\/span>\n\t\t\t\t<span><?php echo isset( $counts->internal_link_count ) ? esc_html( $counts->internal_link_count ) : ''; ?><\/span>\n\t\t\t<\/span>\n\t\t\t<span class=\"divider\"><\/span>\n\t\t\t<span title=\"<?php esc_attr_e( 'External Links', 'rank-math' ); ?>\">\n\t\t\t\t<span class=\"dashicons dashicons-external\"><\/span>\n\t\t\t\t<span><?php echo isset( $counts->external_link_count ) ? esc_html( $counts->external_link_count ) : ''; ?><\/span>\n\t\t\t<\/span>\n\t\t\t<span class=\"divider\"><\/span>\n\t\t\t<span title=\"<?php esc_attr_e( 'Incoming Links', 'rank-math' ); ?>\">\n\t\t\t\t<span class=\"dashicons dashicons-external internal\"><\/span>\n\t\t\t\t<span><?php echo isset( $counts->incoming_link_count ) ? esc_html( $counts->incoming_link_count ) : ''; ?><\/span>\n\t\t\t<\/span>\n\t\t<\/span>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Process old posts if this is an old installation.\n\t *\/\n\tpublic function cron_job() {\n\t\t$post_types = Helper::get_accessible_post_types();\n\t\tunset( $post_types['attachment'] );\n\n\t\t$posts = get_posts(\n\t\t\t[\n\t\t\t\t'post_type'   => array_keys( $post_types ),\n\t\t\t\t'post_status' => [ 'publish', 'future' ],\n\t\t\t\t'meta_query'  => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_internal_links_processed',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Early Bail.\n\t\tif ( empty( $posts ) ) {\n\t\t\twp_clear_scheduled_hook( 'rank_math\/links\/internal_links' );\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Process.\n\t\tforeach ( $posts as $post ) {\n\t\t\t$this->save_post( $post->ID, $post );\n\t\t}\n\t}\n\n\t\/**\n\t * Process the content for a given post.\n\t *\n\t * @param int    $post_id The post ID.\n\t * @param string $content The content.\n\t *\/\n\tprivate function process( $post_id, $content ) {\n\t\t$content = apply_filters( 'the_content', $content );\n\n\t\t\/**\n\t\t * Filter to change the content passed to the Link processor.\n\t\t *\n\t\t * @param string $content Post content.\n\t\t * @param int    $post_id Post ID.\n\t\t *\/\n\t\t$content = $this->do_filter( 'links\/content', $content, $post_id );\n\t\t$content = str_replace( ']]>', ']]&gt;', $content );\n\n\t\t$processor = new ContentProcessor();\n\t\t$processor->process( $post_id, $content );\n\t\tupdate_post_meta( $post_id, 'rank_math_internal_links_processed', true );\n\t}\n\n\t\/**\n\t * Check if the post is processable.\n\t *\n\t * @param WP_Post $post The post object.\n\t *\n\t * @return bool True if processable.\n\t *\/\n\tprivate function is_processable( $post ) {\n\t\t\/**\n\t\t * Filter to prevent processing the post.\n\t\t *\n\t\t * @param boolean $value Whether to process the post.\n\t\t * @param WP_POST $post  The Post object.\n\t\t *\/\n\t\tif ( wp_is_post_revision( $post->ID ) || ! $this->do_filter( 'links\/process_post', true, $post ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( in_array( $post->post_status, [ 'auto-draft', 'trash' ], true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$post_types = Helper::get_accessible_post_types();\n\t\tunset( $post_types['attachment'] );\n\n\t\treturn isset( $post_types[ $post->post_type ] );\n\t}\n\n\t\/**\n\t * Get links data by post id.\n\t *\n\t * @param array $post_ids The post ids.\n\t *\/\n\tprivate function get_links_data( $post_ids ) {\n\t\t$results          = Database::table( 'rank_math_internal_meta' )->select( '*' )->whereIn( 'object_id', $post_ids )->groupBy( 'object_id' )->get();\n\t\t$this->links_data = array_combine( array_column( $results, 'object_id' ), $results );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/links\/class-storage.php","ext":"php","size":4803,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The DB interface.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Links\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Links;\n\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Storage class.\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\nclass Storage {\n\n\t\/**\n\t * Get query builder.\n\t *\n\t * @return \\RankMath\\Admin\\Database\\Query_Builder\n\t *\/\n\tprivate function table() {\n\t\treturn \\RankMath\\Helpers\\DB::query_builder( 'rank_math_internal_links' );\n\t}\n\n\t\/**\n\t * Removes all data for a given post.\n\t *\n\t * @param  int $post_id The post ID to remove the records for.\n\t *\n\t * @return int|false The number of rows updated, or false on error.\n\t *\/\n\tpublic function cleanup( $post_id ) {\n\t\treturn $this->table()->where( 'post_id', $post_id )->delete();\n\t}\n\n\t\/**\n\t * Get array of links from the database for given post.\n\t *\n\t * @param int $post_id The post to get the links for.\n\t *\n\t * @return Link[] The links array.\n\t *\/\n\tpublic function get_links( $post_id ) {\n\t\t$links   = [];\n\t\t$results = $this->table()\n\t\t\t->select( [ 'url', 'post_id', 'target_post_id', 'type' ] )\n\t\t\t->where( 'post_id', $post_id )\n\t\t\t->get();\n\n\t\tforeach ( $results as $link ) {\n\t\t\t$links[] = new Link( $link->url, $link->target_post_id, $link->type );\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Save links for a post.\n\t *\n\t * @param integer $post_id The post ID to save.\n\t * @param Link[]  $links   The links to save.\n\t *\n\t * @return void\n\t *\/\n\tpublic function save_links( $post_id, array $links ) {\n\t\tforeach ( $links as $link ) {\n\t\t\t$this->table()->insert(\n\t\t\t\t[\n\t\t\t\t\t'url'            => $link->get_url(),\n\t\t\t\t\t'post_id'        => $post_id,\n\t\t\t\t\t'target_post_id' => $link->get_target_post_id(),\n\t\t\t\t\t'type'           => $link->get_type(),\n\t\t\t\t],\n\t\t\t\t[ '%s', '%d', '%d', '%s' ]\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Update the link counts for a post and its referenced posts.\n\t *\n\t * @param int      $post_id Post to update.\n\t * @param int|null $counts  Links count.\n\t * @param Link[]   $links   Links to update incoming link count.\n\t *\/\n\tpublic function update_link_counts( $post_id, $counts, array $links ) {\n\t\t$counts = wp_parse_args(\n\t\t\t$counts,\n\t\t\t[\n\t\t\t\t'internal_link_count' => 0,\n\t\t\t\t'external_link_count' => 0,\n\t\t\t]\n\t\t);\n\n\t\t$this->save_meta_data( $post_id, $counts );\n\t\t$this->update_incoming_links( $post_id, $links );\n\t}\n\n\t\/**\n\t * Update the incoming link count.\n\t *\n\t * @param int    $post_id Post which is processed.\n\t * @param Link[] $links   Links we need to update the incoming link count of.\n\t *\n\t * @return void\n\t *\/\n\tpublic function update_incoming_links( $post_id, $links ) {\n\t\t$post_ids = $this->get_internal_post_ids( $links );\n\t\t$post_ids = array_merge( [ $post_id ], $post_ids );\n\t\t$this->update_incoming_link_count( $post_ids );\n\t}\n\n\t\/**\n\t * Get post IDs from the link objects.\n\t *\n\t * @param Link[] $links Links we need to update the incoming link count of.\n\t *\n\t * @return int[] List of post IDs.\n\t *\/\n\tprotected function get_internal_post_ids( $links ) {\n\t\t$post_ids = [];\n\t\tforeach ( $links as $link ) {\n\t\t\t$post_ids[] = $link->get_target_post_id();\n\t\t}\n\n\t\treturn array_filter( $post_ids );\n\t}\n\n\t\/**\n\t * Update the incoming link count.\n\t *\n\t * @param array $post_ids The posts to update the link count for.\n\t *\/\n\tpublic function update_incoming_link_count( array $post_ids ) {\n\t\t$results = $this->table()\n\t\t\t->selectCount( 'id', 'incoming' )\n\t\t\t->select( 'target_post_id as post_id' )\n\t\t\t->whereIn( 'target_post_id', $post_ids )\n\t\t\t->groupBy( 'target_post_id' )->get();\n\n\t\t$post_ids_non_zero = [];\n\t\tforeach ( $results as $result ) {\n\t\t\t$this->save_meta_data( $result->post_id, [ 'incoming_link_count' => $result->incoming ] );\n\t\t\t$post_ids_non_zero[] = $result->post_id;\n\t\t}\n\n\t\t$post_ids_zero = array_diff( $post_ids, $post_ids_non_zero );\n\t\tforeach ( $post_ids_zero as $post_id ) {\n\t\t\t$this->save_meta_data( $post_id, [ 'incoming_link_count' => 0 ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Save the link count to the database.\n\t *\n\t * @param int   $post_id   The ID to save the link count for.\n\t * @param array $meta_data The total amount of links.\n\t *\/\n\tpublic function save_meta_data( $post_id, array $meta_data ) {\n\t\tglobal $wpdb;\n\n\t\t$where  = [ 'object_id' => $post_id ];\n\t\t$exists = DB_Helper::get_var( $wpdb->prepare( \"SELECT COUNT(*) FROM {$wpdb->prefix}rank_math_internal_meta WHERE object_id = %d\", $post_id ) );\n\n\t\tif ( $exists ) {\n\t\t\t$result = $wpdb->update( $wpdb->prefix . 'rank_math_internal_meta', $meta_data, $where );\n\t\t\treturn $result;\n\t\t}\n\n\t\t$data   = array_merge( $where, $meta_data );\n\t\t$result = $wpdb->insert( $wpdb->prefix . 'rank_math_internal_meta', $data );\n\t\treturn $result;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/links\/class-contentprocessor.php","ext":"php","size":5097,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Content Processor.\n *\n * Extract and save links from the content of a given post.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Links\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Links;\n\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helper;\nuse RankMath\\Sitemap\\Classifier;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * ContentProcessor class.\n *\/\nclass ContentProcessor {\n\n\t\/**\n\t * Link storage.\n\t *\n\t * @var Storage\n\t *\/\n\tpublic $storage;\n\n\t\/**\n\t * Link classifier.\n\t *\n\t * @var Classifier\n\t *\/\n\tprotected $classifier;\n\n\t\/**\n\t * The Constructor\n\t *\/\n\tpublic function __construct() {\n\t\t$this->storage    = new Storage();\n\t\t$this->classifier = new Classifier( home_url() );\n\t}\n\n\t\/**\n\t * Process the content.\n\t *\n\t * @param int    $post_id The post ID.\n\t * @param string $content The content.\n\t *\/\n\tpublic function process( $post_id, $content ) {\n\t\t$links  = $this->extract( $content );\n\t\t$counts = [\n\t\t\t'internal_link_count' => 0,\n\t\t\t'external_link_count' => 0,\n\t\t];\n\n\t\t$new_links      = [];\n\t\t$post_permalink = $this->normalize_link( get_permalink( $post_id ) );\n\t\tforeach ( $links as $link ) {\n\t\t\t$normalized_link = $this->normalize_link( $link );\n\t\t\tif ( $post_permalink === $normalized_link ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->process_link( $link, $new_links, $counts );\n\t\t}\n\n\t\t$old_links = $this->get_stored_internal_links( $post_id );\n\t\t$this->storage->cleanup( $post_id );\n\t\t$this->storage->save_links( $post_id, $new_links );\n\t\t$this->storage->update_link_counts( $post_id, $counts, array_merge( $new_links, $old_links ) );\n\t}\n\n\t\/**\n\t * Process a link.\n\t *\n\t * @param string $link      Link to process.\n\t * @param array  $new_links Links to add after process.\n\t * @param array  $counts    Counts array.\n\t *\/\n\tprivate function process_link( $link, &$new_links, &$counts ) {\n\t\t$link_type = $this->is_valid_link_type( $link );\n\t\tif ( empty( $link_type ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$target_post_id = 0;\n\t\tif ( Classifier::TYPE_INTERNAL === $link_type ) {\n\t\t\t$target_post_id = url_to_postid( $link );\n\n\t\t\tif ( 0 === $target_post_id ) {\n\t\t\t\t\/\/ Maybe a product with altered url!\n\t\t\t\t$target_post_id = $this->maybe_product_id( $link );\n\t\t\t}\n\t\t}\n\t\t$counts[ \"{$link_type}_link_count\" ] += 1;\n\n\t\t$new_links[] = new Link( $link, $target_post_id, $link_type );\n\t}\n\n\t\/**\n\t * Extract href property values from HTML string.\n\t *\n\t * @param string $content Content to extract links from.\n\t *\n\t * @return array The extracted links.\n\t *\/\n\tpublic function extract( $content ) {\n\t\t$links = [];\n\t\tif ( false === Str::contains( 'href', $content ) ) {\n\t\t\treturn $links;\n\t\t}\n\n\t\t$regexp = '<a\\s[^>]*href=(\"??)([^\" >]*?)\\\\1[^>]*>';\n\n\t\t\/\/ Case insensitive & ungreedy modifiers.\n\t\tif ( preg_match_all( \"\/$regexp\/iU\", $content, $matches, PREG_SET_ORDER ) ) {\n\t\t\tforeach ( $matches as $match ) {\n\t\t\t\t$links[] = trim( $match[2], \"'\" );\n\t\t\t}\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Retrieves the stored internal links for the supplied post.\n\t *\n\t * @param int $post_id The post to fetch links for.\n\t *\n\t * @return Link[] List of internal links connected to the post.\n\t *\/\n\tpublic function get_stored_internal_links( $post_id ) {\n\t\t$links = $this->storage->get_links( $post_id );\n\t\treturn array_filter( $links, [ $this, 'filter_internal_link' ] );\n\t}\n\n\t\/**\n\t * Filter internal links.\n\t *\n\t * @param Link $link Link to test.\n\t *\n\t * @return bool True if internal, false if external.\n\t *\/\n\tprotected function filter_internal_link( Link $link ) {\n\t\treturn $link->get_type() === Classifier::TYPE_INTERNAL;\n\t}\n\n\t\/**\n\t * Check if link is valid.\n\t *\n\t * @param string $link Link to check.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_valid_link_type( $link ) {\n\t\t$type = false;\n\t\tif ( ! empty( $link ) && '#' !== $link[0] ) {\n\t\t\t$type = $this->classifier->classify( $link );\n\t\t}\n\n\t\tif ( Classifier::TYPE_INTERNAL === $type && preg_match( '\/\\.(jpg|jpeg|png|gif|bmp|pdf|mp3|zip)$\/i', $link ) ) {\n\t\t\t$type = false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/links\/link_type' - Allow developers to filter the link type.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/links\/link_type', $type, $link );\n\t}\n\n\t\/**\n\t * Normalize a link: remove trailing slash, remove fragment identifier, remove home_url.\n\t *\n\t * @param string $link The link to normalize.\n\t * @return string\n\t *\/\n\tprivate function normalize_link( $link ) {\n\t\t$normalized = untrailingslashit( str_replace( home_url(), '', explode( '#', $link )[0] ) );\n\t\treturn $normalized;\n\t}\n\n\n\t\/**\n\t * Gets the post id from a modified link.\n\t *\n\t * @param string $link Link to process.\n\t * @return int\n\t *\/\n\tprivate function maybe_product_id( $link ) {\n\t\t\/\/ Early bail if Remove Base option is not enabled.\n\t\tif ( ! Helper::get_settings( 'general.wc_remove_product_base' ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$product = get_page_by_path( basename( untrailingslashit( $link ) ), OBJECT, [ 'product' ] );\n\t\tif ( ! $product ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn $product->ID;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/robots-txt\/options.php","ext":"php","size":2993,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The robots.txt settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\Settings\n *\/\n\nuse RankMath\\Robots_Txt;\nuse RankMath\\KB;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$data       = Robots_Txt::get_robots_data();\n$attributes = [ 'data-gramm' => 'false' ];\n$desc       = '';\nif ( $data['exists'] ) {\n\t$attributes['readonly'] = 'readonly';\n\t$attributes['value']    = $data['default'];\n\t$desc                   = esc_html__( 'Contents are locked because a robots.txt file is present in the root folder.', 'rank-math' );\n} else {\n\t$attributes['placeholder'] = $data['default'];\n}\n\nif ( isset( $data['writable'] ) && false === $data['writable'] ) {\n\t$attributes['placeholder'] = $data['default'];\n\t$desc                      = esc_html__( 'Rank Math could not detect if a robots.txt file exists or not because of a filesystem issue. The file contents entered here may not be applied.', 'rank-math' );\n\n\tunset( $attributes['readonly'], $attributes['value'] );\n}\n\nif ( 0 === $data['public'] ) {\n\t$attributes['readonly'] = 'readonly';\n}\n\nif ( ! Helper::is_edit_allowed() ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'edit_disabled',\n\t\t\t'type'    => 'notice',\n\t\t\t'what'    => 'error',\n\t\t\t'content' => __( 'robots.txt file is not writable.', 'rank-math' ),\n\t\t]\n\t);\n\t$attributes['disabled'] = 'disabled';\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'robots_txt_content',\n\t\t'type'            => 'textarea',\n\t\t'attributes'      => $attributes,\n\t\t'classes'         => 'nob rank-math-code-box',\n\t\t'sanitization_cb' => [ '\\RankMath\\CMB2', 'sanitize_robots_text' ],\n\t]\n);\n\nif ( $desc ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'robots_locked',\n\t\t\t'type'    => 'notice',\n\t\t\t'what'    => 'warning',\n\t\t\t'classes' => 'nob nopt rank-math-notice',\n\t\t\t'content' => wp_kses_post( $desc ),\n\t\t]\n\t);\n} elseif ( 0 === $data['public'] ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'site_not_public',\n\t\t\t'type'    => 'notice',\n\t\t\t'what'    => 'warning',\n\t\t\t'classes' => 'nob nopt rank-math-notice',\n\t\t\t'content' => wp_kses_post(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/\/ Translators: placeholder is the Settings page URL.\n\t\t\t\t\t__( '<strong>Warning:<\/strong> your site\\'s search engine visibility is set to Hidden in <a href=\"%1$s\" target=\"_blank\">Settings &gt; Reading<\/a>. This means that the changes you make here will not take effect. Set the search engine visibility to Public to be able to change the robots.txt content.', 'rank-math' ),\n\t\t\t\t\tadmin_url( 'options-reading.php' )\n\t\t\t\t)\n\t\t\t),\n\t\t]\n\t);\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'robots_tester',\n\t\t'type'    => 'notice',\n\t\t'what'    => 'info',\n\t\t'classes' => 'nob nopt rank-math-notice',\n\t\t'content' => wp_kses_post(\n\t\t\tsprintf(\n\t\t\t\t\/\/ Translators: placeholder is the URL to the robots.txt tester tool.\n\t\t\t\t__( 'Test and edit your live robots.txt file with our <a href=\"%1$s\" target=\"_blank\">Robots.txt Tester<\/a>.', 'rank-math' ),\n\t\t\t\tKB::get( 'robotstxt-tool', 'Options Panel Robots.txt Tester' ) . '&url=' . rawurlencode( home_url( '\/' ) )\n\t\t\t)\n\t\t),\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/robots-txt\/class-robots-txt.php","ext":"php","size":3558,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The robots.txt editor module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Arr;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Robots_Txt class.\n *\/\nclass Robots_Txt {\n\n\tuse Hooker;\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\tif ( is_super_admin() ) {\n\t\t\t$this->filter( 'rank_math\/settings\/general', 'add_settings' );\n\t\t}\n\n\t\t\/\/ Custom robots text.\n\t\tif ( ! is_admin() && Helper::get_settings( 'general.robots_txt_content' ) ) {\n\t\t\t$this->action( 'robots_txt', 'robots_txt', 10, 2 );\n\t\t}\n\t}\n\n\t\/**\n\t * Replace robots.txt content.\n\t *\n\t * @param string $content   Robots.txt file content.\n\t * @param bool   $is_public Whether the site is considered \"public\".\n\t *\n\t * @return string New robots.txt content.\n\t *\/\n\tpublic function robots_txt( $content, $is_public ) {\n\t\treturn 0 === absint( $is_public ) ? $content : Helper::get_settings( 'general.robots_txt_content' );\n\t}\n\n\t\/**\n\t * Add module settings into general optional panel.\n\t *\n\t * @param array $tabs Array of option panel tabs.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'robots' => [\n\t\t\t\t\t'icon'      => 'rm-icon rm-icon-robots',\n\t\t\t\t\t'title'     => esc_html__( 'Edit robots.txt', 'rank-math' ),\n\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t'desc'      => sprintf( esc_html__( 'Edit your robots.txt file to control what bots see. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'edit-robotstxt', 'Options Panel Robots Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'      => __DIR__ . '\/options.php',\n\t\t\t\t\t'classes'   => 'rank-math-advanced-option',\n\t\t\t\t\t'after_row' => '<div class=\"rank-math-desc\">' . __( 'Leave the field empty to let WordPress handle the contents dynamically. If an actual robots.txt file is present in the root folder of your site, this option won\\'t take effect and you have to edit the file directly, or delete it and then edit from here.', 'rank-math' ) . '<\/div>',\n\t\t\t\t\t'json'      => [\n\t\t\t\t\t\t'robotsData' => self::get_robots_data(),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t5\n\t\t);\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Get robots.txt related data: whether the file exists, the contents\n\t * of the file, and the \"Search engine visibility\" setting for the site.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_robots_data() {\n\t\t$wp_filesystem = Helper::get_filesystem();\n\t\t$public        = absint( get_option( 'blog_public' ) );\n\n\t\t$default  = '# This file is automatically added by Rank Math SEO plugin to help a website index better';\n\t\t$default .= \"\\n# More info: \" . KB::get( 'seo-suite', 'Robots' ) . \"\\n\";\n\t\t$default .= \"User-Agent: *\\n\";\n\t\tif ( 0 === $public ) {\n\t\t\t$default .= \"Disallow: \/\\n\";\n\t\t} else {\n\t\t\t$default .= \"Disallow: \/wp-admin\/\\n\";\n\t\t\t$default .= \"Allow: \/wp-admin\/admin-ajax.php\\n\";\n\t\t}\n\t\t$default = apply_filters( 'robots_txt', $default, $public );\n\n\t\tif ( empty( $wp_filesystem ) || ! Helper::is_filesystem_direct() ) {\n\t\t\treturn [\n\t\t\t\t'exists'   => false,\n\t\t\t\t'default'  => $default,\n\t\t\t\t'public'   => $public,\n\t\t\t\t'writable' => false,\n\t\t\t];\n\t\t}\n\n\t\tif ( $wp_filesystem->exists( ABSPATH . 'robots.txt' ) ) {\n\t\t\treturn [\n\t\t\t\t'exists'  => true,\n\t\t\t\t'default' => $wp_filesystem->get_contents( ABSPATH . 'robots.txt' ),\n\t\t\t\t'public'  => $public,\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\t'exists'  => false,\n\t\t\t'default' => $default,\n\t\t\t'public'  => $public,\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/robots-txt\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/class-result.php","ext":"php","size":3786,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The SEO Analyzer result of each test.\n *\n * @since      1.0.24\n * @package    RankMath\n * @subpackage RankMath\\SEO_Analysis\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\SEO_Analysis;\n\nuse RankMath\\Helper;\nuse RankMath\\KB;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Result class.\n *\/\nclass Result {\n\n\t\/**\n\t * Result ID.\n\t *\n\t * @var string\n\t *\/\n\tprivate $id;\n\n\t\/**\n\t * Hold result data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $result;\n\n\t\/**\n\t * Is sub-page.\n\t *\n\t * @var array\n\t *\/\n\tprivate $is_subpage;\n\n\t\/**\n\t * The Constructor.\n\t *\n\t * @param string $id         Result id.\n\t * @param object $data       Result data.\n\t * @param bool   $is_subpage Is sub-page result.\n\t *\/\n\tpublic function __construct( $id, $data, $is_subpage ) {\n\t\tif ( is_a( $data, 'RankMath\\\\SEO_Analysis\\\\Result' ) ) {\n\t\t\t$data = $data->result;\n\t\t}\n\t\t$this->id         = $id;\n\t\t$this->result     = $data;\n\t\t$this->is_subpage = $is_subpage;\n\t}\n\n\t\/**\n\t * Get result ID.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_id() {\n\t\treturn $this->id;\n\t}\n\n\t\/**\n\t * Get result category.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_category() {\n\t\treturn is_array( $this->result ) && isset( $this->result['category'] ) ? $this->result['category'] : '';\n\t}\n\n\t\/**\n\t * Get result status.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_status() {\n\t\treturn is_array( $this->result ) && isset( $this->result['status'] ) ? $this->result['status'] : '';\n\t}\n\n\t\/**\n\t * Is test excluded.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_excluded() {\n\t\t$exclude_tests = [\n\t\t\t'active_plugins',\n\t\t\t'active_theme',\n\t\t\t'dirlist',\n\t\t\t'libwww_perl_access',\n\t\t\t'robots_txt',\n\t\t\t'safe_browsing',\n\t\t\t'xmlrpc',\n\n\t\t\t\/\/ Local tests.\n\t\t\t'comment_pagination',\n\t\t\t'site_description',\n\t\t\t'permalink_structure',\n\t\t\t'cache_plugin',\n\t\t\t'search_console',\n\t\t\t'focus_keywords',\n\t\t\t'post_titles',\n\t\t];\n\n\t\treturn $this->is_subpage && in_array( $this->id, $exclude_tests, true );\n\t}\n\n\t\/**\n\t * Is test hidden.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_hidden() {\n\t\t$always_hidden = [\n\t\t\t'serp_preview',\n\t\t\t'mobile_serp_preview',\n\t\t];\n\n\t\t\/\/ Hidden when not in advanced mode.\n\t\t$hidden_tests = [\n\t\t\t\/\/ Performance.\n\t\t\t'image_header',\n\t\t\t'minify_css',\n\t\t\t'minify_js',\n\t\t\t'page_objects',\n\t\t\t'page_size',\n\t\t\t'response_time',\n\n\t\t\t\/\/ Security.\n\t\t\t'directory_listing',\n\t\t\t'safe_browsing',\n\t\t\t'ssl',\n\t\t\t'active_plugins',\n\t\t\t'active_theme',\n\t\t];\n\n\t\t$is_hidden = in_array( $this->id, $always_hidden, true ) || ( ! Helper::is_advanced_mode() && in_array( $this->id, $hidden_tests, true ) );\n\n\t\treturn apply_filters( 'rank_math\/seo_analysis\/is_test_hidden', $is_hidden, $this->id );\n\t}\n\n\t\/**\n\t * Get test score.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_score() {\n\t\t$score = [\n\t\t\t'h1_heading'          => 5,\n\t\t\t'h2_headings'         => 2,\n\t\t\t'img_alt'             => 4,\n\t\t\t'keywords_meta'       => 5,\n\t\t\t'links_ratio'         => 3,\n\t\t\t'title_length'        => 4,\n\t\t\t'permalink_structure' => 7,\n\t\t\t'focus_keywords'      => 3,\n\t\t\t'post_titles'         => 4,\n\n\t\t\t\/\/ Advanced SEO.\n\t\t\t'canonical'           => 5,\n\t\t\t'noindex'             => 7,\n\t\t\t'non_www'             => 4,\n\t\t\t'opengraph'           => 2,\n\t\t\t'robots_txt'          => 3,\n\t\t\t'schema'              => 3,\n\t\t\t'sitemaps'            => 3,\n\t\t\t'search_console'      => 1,\n\n\t\t\t\/\/ Performance.\n\t\t\t'image_header'        => 3,\n\t\t\t'minify_css'          => 2,\n\t\t\t'minify_js'           => 1,\n\t\t\t'page_objects'        => 2,\n\t\t\t'page_size'           => 3,\n\t\t\t'response_time'       => 3,\n\n\t\t\t\/\/ Security.\n\t\t\t'directory_listing'   => 1,\n\t\t\t'safe_browsing'       => 8,\n\t\t\t'ssl'                 => 7,\n\t\t];\n\n\t\treturn isset( $score[ $this->id ] ) ? $score[ $this->id ] : 0;\n\t}\n\n\t\/**\n\t * Get test result data.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_result() {\n\t\treturn $this->result;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/class-seo-analyzer.php","ext":"php","size":12331,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The SEO Analyzer class runs the tests and handles the results.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\SEO_Analysis\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\SEO_Analysis;\n\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * SEO_Analyzer class.\n *\/\nclass SEO_Analyzer {\n\n\tuse Ajax;\n\tuse Hooker;\n\n\t\/**\n\t * Rank Math SEO Checkup API.\n\t *\n\t * @var string\n\t *\/\n\tprivate $api_url = '';\n\n\t\/**\n\t * URL to analyze.\n\t *\n\t * @var string\n\t *\/\n\tpublic $analyse_url = '';\n\n\t\/**\n\t * Sub-page URL to analyze.\n\t *\n\t * @var string\n\t *\/\n\tpublic $analyse_subpage = false;\n\n\t\/**\n\t * Hold analysis results.\n\t *\n\t * @var null|array\n\t *\/\n\tpublic $results = null;\n\n\t\/**\n\t * Hold analysis results.\n\t *\n\t * @var null|array\n\t *\/\n\tpublic $results_data = null;\n\n\t\/**\n\t * Hold analysis result date.\n\t *\n\t * @var mixed\n\t *\/\n\tpublic $results_date = null;\n\n\t\/**\n\t * Hold any api error.\n\t *\n\t * @var array\n\t *\/\n\tprivate $api_error = '';\n\n\t\/**\n\t * Hold local test data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $local_tests = [];\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->analyse_url = home_url();\n\n\t\t$this->action( 'init', 'set_url' );\n\t\t$this->maybe_clear_storage();\n\n\t\t$this->ajax( 'analyze', 'analyze_me' );\n\t\t$this->ajax( 'enable_auto_update', 'enable_auto_update' );\n\t}\n\n\t\/**\n\t * Set URL and other properties on init.\n\t *\n\t * @return void\n\t *\/\n\tpublic function set_url() {\n\n\t\t$this->api_url = $this->do_filter( 'seo_analysis\/api_endpoint', 'https:\/\/rankmath.com\/analyze\/v2\/json\/' );\n\t\tif ( ! empty( $_REQUEST['u'] ) && $this->is_allowed_url( Param::request( 'u' ) ) ) { \/\/ phpcs:ignore\n\t\t\t$this->analyse_url     = esc_url_raw( Param::request( 'u' ) );\n\t\t\t$this->analyse_subpage = true;\n\t\t}\n\n\t\t\/**\n\t\t * Action: 'rank_math\/seo_analysis\/after_set_url' - Fires after setting the URL.\n\t\t *\/\n\t\t$this->do_action( 'seo_analysis\/after_set_url', $this );\n\n\t\tif ( $this->analyse_subpage ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->get_results_from_storage();\n\t\t$this->local_tests = $this->do_filter( 'seo_analysis\/tests', [] );\n\t}\n\n\t\/**\n\t * Get graph metrices.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_graph_metrices() {\n\t\t$total       = 0;\n\t\t$percent     = 0;\n\t\t$total_score = 0;\n\t\t$statuses    = [\n\t\t\t'ok'      => 0,\n\t\t\t'fail'    => 0,\n\t\t\t'info'    => 0,\n\t\t\t'warning' => 0,\n\t\t];\n\t\tforeach ( $this->results as $id => $result ) {\n\t\t\tif ( false === $this->can_count_result( $result ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( $result->is_hidden() ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t++$statuses[ $result->get_status() ];\n\t\t\t++$total;\n\n\t\t\t$total_score = $total_score + $result->get_score();\n\n\t\t\tif ( 'ok' !== $result->get_status() ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$percent = $percent + $result->get_score();\n\t\t}\n\n\t\t$percent = $total_score > 0 ? round( ( $percent \/ $total_score ) * 100 ) : 0;\n\t\t$grade   = $this->get_graph_grade( $percent );\n\n\t\treturn compact( 'total', 'percent', 'statuses', 'grade' );\n\t}\n\n\t\/**\n\t * Can count result.\n\t *\n\t * @param Result $result Result instance.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function can_count_result( $result ) {\n\t\treturn ! is_object( $result ) ? false : true;\n\t}\n\n\t\/**\n\t * Format grade result.\n\t *\n\t * @param int $percent Total percentage.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_graph_grade( $percent ) {\n\t\tif ( $percent < 70 ) {\n\t\t\treturn 'average';\n\t\t}\n\n\t\tif ( $percent < 50 ) {\n\t\t\treturn 'bad';\n\t\t}\n\n\t\treturn 'good';\n\t}\n\n\t\/**\n\t * Get result from storage.\n\t *\n\t * @param string $option Option name.\n\t *\/\n\tpublic function get_results_from_storage( $option = 'rank_math_seo_analysis' ) {\n\t\t$this->results      = get_option( $option . '_results' );\n\t\t$this->results_date = get_option( $option . '_date' );\n\n\t\t$url = get_option( $option . '_url' );\n\t\tif ( false !== $url ) {\n\t\t\t$this->analyse_url = $url;\n\t\t}\n\n\t\t$this->build_results();\n\t\tif ( empty( $this->results ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn $this->get_results();\n\t}\n\n\t\/**\n\t * Return formatted date.\n\t *\/\n\tpublic function get_last_checked_date() {\n\t\tif ( ! $this->results_date ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$date = date_i18n( get_option( 'date_format' ), $this->results_date );\n\t\t$time = date_i18n( get_option( 'time_format' ), $this->results_date );\n\n\t\treturn [\n\t\t\t'date' => $date,\n\t\t\t'time' => $time,\n\t\t];\n\t}\n\n\t\/**\n\t * Clear stored results if needed.\n\t *\/\n\tprivate function maybe_clear_storage() {\n\t\tif ( '1' === Param::request( 'clear_results' ) ) {\n\t\t\tdelete_option( 'rank_math_seo_analysis_results' );\n\t\t\tdelete_option( 'rank_math_seo_analysis_date' );\n\t\t\tHelper::redirect( Security::remove_query_arg_raw( 'clear_results' ) );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Convert result into object.\n\t *\/\n\tpublic function build_results() {\n\t\tif ( ! is_array( $this->results ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->move_priority_results_to_top();\n\n\t\t$this->results_data = $this->results;\n\t\t$this->results_date = time();\n\t\tforeach ( $this->results as $id => $result ) {\n\t\t\t$this->results[ $id ] = new Result( $id, $result, $this->analyse_subpage );\n\t\t}\n\t}\n\n\t\/**\n\t * Move all tests in \"priority\" category to top.\n\t *\/\n\tprivate function move_priority_results_to_top() {\n\t\t$priority = [];\n\t\tforeach ( $this->results as $id => $result ) {\n\t\t\tif ( is_array( $result ) && 'priority' === $result['category'] ) {\n\t\t\t\t$priority[ $id ] = $result;\n\t\t\t\tunset( $this->results[ $id ] );\n\t\t\t}\n\t\t}\n\n\t\t$this->results = array_replace( $priority, $this->results );\n\t}\n\n\t\/**\n\t * Analyze page.\n\t *\/\n\tpublic function analyze_me() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'site_analysis' );\n\n\t\t$this->results = null;\n\t\t$success       = true;\n\t\t$directory     = __DIR__;\n\n\t\t$this->set_url();\n\t\tif ( ! $this->analyse_subpage ) {\n\t\t\tdelete_option( 'rank_math_seo_analysis_results' );\n\t\t\tdelete_option( 'rank_math_seo_analysis_date' );\n\t\t}\n\n\t\tif ( ! $this->run_api_tests() ) {\n\t\t\t$this->error(\n\t\t\t\t'<div class=\"notice notice-error is-dismissible notice-seo-analysis-error rank-math-notice\">\n\t\t\t\t\t<p>' .\n\t\t\t\t\t\t\/* translators: API error *\/\n\t\t\t\t\t\tsprintf( __( '<strong>API Error:<\/strong> %s', 'rank-math' ), $this->api_error ) .\n\t\t\t\t\t'<\/p>\n\t\t\t\t<\/div>'\n\t\t\t);\n\t\t\t$success = false;\n\t\t\tdie;\n\t\t}\n\n\t\tif ( ! $this->analyse_subpage ) {\n\t\t\t$this->run_local_tests();\n\t\t\tupdate_option( 'rank_math_seo_analysis_results', $this->results, false );\n\t\t\tupdate_option( 'rank_math_seo_analysis_date', time(), false );\n\t\t}\n\n\t\t\/**\n\t\t * Action: 'rank_math\/seo_analysis\/after_analyze' - Fires after the SEO analysis is done.\n\t\t *\/\n\t\t$this->do_action( 'seo_analysis\/after_analyze', $this );\n\t\t$this->build_results();\n\n\t\t$this->success( $this->get_results() );\n\t}\n\n\t\/**\n\t * Ajax handler for the Enable auto update button.\n\t *\/\n\tpublic function enable_auto_update() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'general' );\n\n\t\t$this->enable_auto_update_in_stored_data();\n\t\tHelper::toggle_auto_update_setting( 'on' );\n\n\t\techo '1';\n\t\tdie;\n\t}\n\n\t\/**\n\t * Update the auto update value in the stored results.\n\t *\/\n\tpublic function enable_auto_update_in_stored_data() {\n\t\t$results = get_option( 'rank_math_seo_analysis_results' );\n\t\tif ( ! isset( $results['auto_update'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$results['auto_update']['status']  = 'ok';\n\t\t$results['auto_update']['message'] = __( 'Rank Math auto-update option is enabled on your site.', 'rank-math' );\n\t\tupdate_option( 'rank_math_seo_analysis_results', $results, false );\n\t}\n\n\t\/**\n\t * Run test through the Rank Math Analysis API.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function run_api_tests() {\n\t\t$response = $this->get_api_results();\n\t\tif ( false === $response ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->process_api_results( $response );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Process results as needed.\n\t *\n\t * @param array $response Response.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function process_api_results( $response ) {\n\t\tforeach ( $response as $id => $results ) {\n\t\t\t$this->results[ $id ] = wp_parse_args(\n\t\t\t\t$results,\n\t\t\t\t[\n\t\t\t\t\t'test_id'  => $id,\n\t\t\t\t\t'api_test' => true,\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get API results.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function get_api_results() {\n\t\t$api_url = Security::add_query_arg_raw(\n\t\t\t[\n\t\t\t\t'u'          => $this->analyse_url,\n\t\t\t\t'locale'     => get_locale(),\n\t\t\t\t'is_subpage' => $this->analyse_subpage,\n\t\t\t],\n\t\t\t$this->api_url\n\t\t);\n\n\t\t$request = wp_remote_get( $api_url, [ 'timeout' => 30 ] );\n\t\tif ( is_wp_error( $request ) ) {\n\t\t\t$this->api_error = wp_strip_all_tags( $request->get_error_message() );\n\t\t\treturn false;\n\t\t}\n\n\t\t$status = absint( wp_remote_retrieve_response_code( $request ) );\n\t\tif ( 200 !== $status ) {\n\t\t\t\/\/ Translators: placeholder is a HTTP error code.\n\t\t\t$this->api_error = sprintf( __( 'HTTP %d error.', 'rank-math' ), $status );\n\t\t\treturn false;\n\t\t}\n\n\t\t$response = wp_remote_retrieve_body( $request );\n\t\t$response = json_decode( $response, true );\n\t\tif ( ! is_array( $response ) ) {\n\t\t\t$this->api_error = __( 'Unexpected API response.', 'rank-math' );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $response;\n\t}\n\n\t\/**\n\t * Run local site tests.\n\t *\/\n\tprivate function run_local_tests() {\n\t\tforeach ( $this->local_tests as $id => $test ) {\n\t\t\t$this->results[ $id ] = array_merge(\n\t\t\t\t[\n\t\t\t\t\t'test_id'     => $id,\n\t\t\t\t\t'api_test'    => false,\n\t\t\t\t\t'title'       => $test['title'],\n\t\t\t\t\t'description' => $test['description'],\n\t\t\t\t\t'fix'         => isset( $test['how_to_fix'] ) ? $test['how_to_fix'] : '',\n\t\t\t\t\t'category'    => $test['category'],\n\t\t\t\t\t'info'        => [],\n\t\t\t\t\t'kb_link'     => isset( $test['kb_link'] ) ? $test['kb_link'] : 'https:\/\/rankmath.com\/kb\/seo-analysis',\n\t\t\t\t\t'tooltip'     => ! empty( $test['tooltip'] ) ? $test['tooltip'] : '',\n\t\t\t\t],\n\t\t\t\tcall_user_func( $test['callback'], $this )\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Check if it is a valid URL on this site.\n\t *\n\t * @param string $url Check url if it is allowed.\n\t * @return bool\n\t *\/\n\tprivate function is_allowed_url( $url ) {\n\t\t$allowed = true;\n\t\t$home    = get_home_url();\n\t\tif ( strpos( $url, $home ) !== 0 ) {\n\t\t\t$allowed = false;\n\t\t}\n\n\t\t\/\/ wp-admin pages are not allowed.\n\t\tif ( strpos( substr( $url, strlen( $home ) ), '\/wp-admin' ) === 0 ) {\n\t\t\t$allowed = false;\n\t\t}\n\n\t\treturn $this->do_filter( 'analysis\/is_allowed_url', $allowed, $url );\n\t}\n\n\t\/**\n\t * Sort results by category.\n\t *\n\t * @return array\n\t *\/\n\tprivate function sort_results_by_category() {\n\t\t$data = [];\n\t\tforeach ( $this->results as $result ) {\n\t\t\tif ( $result->is_hidden() ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$category = $result->get_category();\n\t\t\tif ( ! isset( $data[ $category ] ) ) {\n\t\t\t\t$data[ $category ] = [];\n\t\t\t}\n\t\t\t$data[ $category ][ $result->get_id() ] = $result->get_result();\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get SEO Analysis results.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_results() {\n\t\treturn [\n\t\t\t'results'  => $this->sort_results_by_category(),\n\t\t\t'metrices' => $this->get_graph_metrices(),\n\t\t\t'date'     => $this->get_last_checked_date(),\n\t\t\t'serpData' => $this->get_serp_data(),\n\t\t];\n\t}\n\n\t\/**\n\t * Get SERP Data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_serp_data() {\n\t\t$src_format = 'https:\/\/t0.gstatic.com\/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=%%SITEURL%%&size=128';\n\t\t$favicon    = str_replace( '%%SITEURL%%', rawurlencode( $this->analyse_url ), $src_format );\n\t\tif ( is_array( $this->results ) ) {\n\t\t\tif ( isset( $this->results['title_length'] ) ) {\n\t\t\t\t$title_data = $this->results['title_length']->get_result();\n\t\t\t\t$title      = $title_data['data'];\n\t\t\t}\n\n\t\t\tif ( isset( $this->results['description_length'] ) ) {\n\t\t\t\t$description_data = $this->results['description_length']->get_result();\n\t\t\t\t$description      = $description_data['data'];\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $title ) ) {\n\t\t\t$title = __( '(No Title)', 'rank-math' );\n\t\t}\n\t\t\/\/ Cut title to 60 characters.\n\t\tif ( strlen( $title ) > 60 ) {\n\t\t\t$title = substr( $title, 0, 60 ) . '...';\n\t\t}\n\n\t\tif ( empty( $description ) ) {\n\t\t\t$description = __( '(No Description)', 'rank-math' );\n\t\t}\n\t\t\/\/ Cut description to 160 characters.\n\t\tif ( strlen( $description ) > 160 ) {\n\t\t\t$description = substr( $description, 0, 160 ) . '...';\n\t\t}\n\n\t\treturn [\n\t\t\t'favicon'     => $favicon,\n\t\t\t'url'         => esc_url( $this->analyse_url ),\n\t\t\t'title'       => esc_html( $title ),\n\t\t\t'description' => esc_html( $description ),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/seo-analysis-tests.php","ext":"php","size":22207,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The local tests for the SEO Analyzer.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\SEO_Analysis\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Google\\Console;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Helpers\\DB;\n\ndefined( 'ABSPATH' ) || exit;\n\nadd_filter( 'rank_math\/seo_analysis\/tests', 'rank_math_register_seo_analysis_basic_tests' );\n\n\/**\n * Register basic local tests for the SEO Analyzer.\n *\n * @param array $tests Array of tests.\n *\n * @return array\n *\/\nfunction rank_math_register_seo_analysis_basic_tests( $tests ) {\n\t$new_tests['site_description'] = [\n\t\t'title'       => esc_html__( 'Site Tagline', 'rank-math' ),\n\t\t\/* translators: link to general setting screen *\/\n\t\t'description' => sprintf( esc_html__( 'Your theme may display the Site Tagline, and it can also be used in SEO titles &amp; descriptions. Set it to something unique. You can change it by navigating to <a href=\"%s\">Settings &gt; General<\/a>.', 'rank-math' ), admin_url( 'options-general.php' ) ),\n\t\t'how_to_fix'  => '<p>' . esc_html__( 'Most WordPress themes place your site\\'s tagline in a prominent position (inside header tags near the top of the page).  Using the right tagline can give your site an SEO boost.', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'Unfortunately, the standard WordPress tagline is \"Just Another WordPress site.\"  That\\'s pretty sloppy looking, and it does nothing for your SEO.  In fact, it\\'s actually a security risk - it makes it easy for hackers with a WordPress exploit to locate your site with an automated search.', 'rank-math' ) . '<\/p>' .\n\t\t\t\/* translators: link to general setting screen *\/\n\t\t\t'<p>' . sprintf( wp_kses_post( __( 'Changing your tagline is very easy.  Just head on over to <a target=\"_blank\" href=\"%1$s\">Settings - General<\/a> in WordPress\\'s admin menu (on the left), or click on the link in this sentence.', 'rank-math' ) ), esc_url( admin_url( 'options-general.php' ) ) ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'The tagline is the second option.  Choose a tagline that summarizes your site in a few words.  The tagline is also a good place to use your main keyword.', 'rank-math' ) . '<\/p>',\n\t\t'kb_link'     => KB::get( 'analysis-site-tagline' ),\n\t\t'tooltip'     => esc_html__( 'Confirm custom tagline is set for your site', 'rank-math' ),\n\t];\n\n\t$new_tests['blog_public'] = [\n\t\t'title'       => esc_html__( 'Blog Public', 'rank-math' ),\n\t\t\/* translators: link to general setting screen *\/\n\t\t'description' => esc_html__( 'Your site may not be visible to search engine.', 'rank-math' ),\n\t\t'how_to_fix'  => '<p>' .\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %1$s link to the reading settings, %2$s closing tag for the link *\/\n\t\t\t\tesc_html__( 'You must %1$sgo to your Reading Settings%2$s and uncheck the box for Search Engine Visibility.', 'rank-math' ),\n\t\t\t\t'<a href=\"' . esc_url( admin_url( 'options-reading.php' ) ) . '\">',\n\t\t\t\t'<\/a>'\n\t\t\t) .\n\t\t'<\/p>',\n\t\t'kb_link'     => KB::get( 'analysis-blog-public' ),\n\t\t'tooltip'     => esc_html__( \"Check your site's visibility to search engines\", 'rank-math' ),\n\t];\n\n\t$new_tests['permalink_structure'] = [\n\t\t'title'       => esc_html__( 'Permalink Structure', 'rank-math' ),\n\t\t\/* translators: link to permalink setting screen *\/\n\t\t'description' => sprintf( __( 'For the best SEO results, use a custom permalink structure, preferably one that includes the post title (<code>%%postname%%<\/code>). You can change it by navigating to <a href=\"%s\">Settings &gt; Permalinks<\/a>', 'rank-math' ), admin_url( 'options-permalink.php' ) ),\n\t\t'how_to_fix'  => '<p>' . esc_html__( 'The standard permalink structure is pretty ugly - WordPress generates offputting URLs like: http:\/\/www.yoursite.com\/?p=99', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'It\\'s not very kind on the eyes, and it does nothing for your site\\'s SEO.  In fact, it can hurt it - Google\\'s bot is quite cautious about crawling pages that look auto-generated.', 'rank-math' ) . '<\/p>' .\n\t\t\t\/* translators: link to permalink setting screen *\/\n\t\t\t'<p>' . sprintf( wp_kses_post( __( 'Fortunately, it\\'s very easy to fix.  Just hop on over to <a target=\"_blank\" href=\"%1$s\">Settings - Permalinks<\/a>.  Then chose the \"Post Name\" option.', 'rank-math' ) ), esc_url( admin_url( 'options-permalink.php' ) ) ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'This option will replace the \"?p=99\" part of the URL with the post\\'s title, like this: http:\/\/www.yoursite.com\/my-amazing-post-title\/', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'This looks nice for readers - and it gets your keywords into the URL (keywords in the URL is a ranking factor).', 'rank-math' ) . '<\/p>',\n\t\t'kb_link'     => KB::get( 'analysis-permalink-structure' ),\n\t\t'tooltip'     => esc_html__( 'Check your site for SEO-friendly permalink structure', 'rank-math' ),\n\t];\n\n\t$new_tests['focus_keywords'] = [\n\t\t'title'       => esc_html__( 'Focus Keywords', 'rank-math' ),\n\t\t'description' => esc_html__( 'Setting focus keywords for your posts allows Rank Math to analyse the content.', 'rank-math' ),\n\t\t'how_to_fix'  => '<p>' . esc_html__( 'Rank Math allows you to set a focus keyword for every post and page you write - the option is in the \"Meta Box\", which appears under the text editor in the screen where you write and edit content.', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'Rank Math uses these focus keywords to analyze your on-page content.  It can tell if you\\'ve done a good job of optimizing your text to rank for these keywords.', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'Of course, if you don\\'t give Rank Math a focus keyword to work with, it can\\'t give you any useful feedback.', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'Fixing this issue is easy - just edit the post, and set a Focus Keyword.  Then follow Rank Math\\'s analysis to improve your rankings.', 'rank-math' ) . '<\/p>',\n\t\t'kb_link'     => KB::get( 'analysis-focus-keywords' ),\n\t\t'tooltip'     => esc_html__( 'Confirm focus keywords are set for all your posts', 'rank-math' ),\n\t];\n\n\t$new_tests['post_titles'] = [\n\t\t'title'       => esc_html__( 'Post Titles Missing Focus Keywords', 'rank-math' ),\n\t\t'description' => esc_html__( 'Make sure the focus keywords you set for the posts appear in their titles.', 'rank-math' ),\n\t\t'how_to_fix'  => '<p>' . esc_html__( 'HTML Page Titles play a large role in Google\\'s ranking algorithm.  When you add a Focus Keyword to a post or page, Rank Math will check to see that you used the keyword in the title.  If it finds any posts or pages that are missing the keyword in the title, it will tell you here.', 'rank-math' ) . '<\/p>' .\n\t\t\t'<p>' . esc_html__( 'Fixing the issue is simple - just edit the post\/page and add the focus keyword(s) to the title.', 'rank-math' ) . '<\/p>',\n\t\t'kb_link'     => KB::get( 'analysis-post-titles' ),\n\t\t'tooltip'     => esc_html__( 'Verify the presence of focus keywords in your post titles', 'rank-math' ),\n\t];\n\n\tforeach ( $new_tests as $key => $test ) {\n\t\t$test['category'] = 'basic';\n\t\t$test['callback'] = 'rank_math_analyze_' . $key;\n\t\t$tests[ $key ]    = $test;\n\t}\n\n\treturn $tests;\n}\n\nadd_filter( 'rank_math\/seo_analysis\/tests', 'rank_math_register_seo_analysis_advanced_tests' );\n\n\/**\n * Register advanced local tests for the SEO Analyzer.\n *\n * @param array $tests Array of tests.\n *\n * @return array\n *\/\nfunction rank_math_register_seo_analysis_advanced_tests( $tests ) {\n\t$tests['search_console'] = [\n\t\t'category'    => 'advanced',\n\t\t'title'       => esc_html__( 'Search Console', 'rank-math' ),\n\t\t'description' => sprintf(\n\t\t\t\/* translators: link to plugin setting screen *\/\n\t\t\tesc_html__( 'Register at Google Search Console and verificate your site by adding the code to <a href=\"%1$s\">Settings &gt; Verificate Tools<\/a>, then navigate to <a href=\"%2$s\">Settings &gt; Search Console<\/a> to authenticate and link your site.', 'rank-math' ),\n\t\t\tHelper::get_settings_url( 'general', 'webmaster' ),\n\t\t\tHelper::get_settings_url( 'general', 'analytics' )\n\t\t),\n\t\t'how_to_fix'  => '<p>' . esc_html__( 'Google\\'s Search Console is a vital source of information concerning your rankings and click-through rates.  Rank Math can import this data, so you don\\'t have to log into your Google account to get the data you need.', 'rank-math' ) . '<\/p>' .\n\t\t\t\/* translators: link to plugin search console setting screen *\/\n\t\t\t'<p>' . sprintf( wp_kses_post( __( 'You can integrate the Google Search Console with Rank math in the <a href=\"%1$s\" target=\"_blank\">Search Console tab<\/a>. of Rank Math\\'s General Settings menu.', 'rank-math' ) ), esc_url( Helper::get_settings_url( 'general', 'analytics' ) ) ) . '<\/p>' .\n\t\t\t\/* translators: Link to Search Console KB article *\/\n\t\t\t'<p>' . sprintf( wp_kses_post( __( 'Read <a href=\"%1$s\" target=\"_blank\">this article<\/a> for detailed instructions on setting up your Google Webmaster account and getting Rank Math to work with the Google Search Console.', 'rank-math' ) ), KB::get( 'help-analytics', 'SEO Analysis GSC Test' ) ) . '<\/p>',\n\t\t'callback'    => 'rank_math_analyze_search_console',\n\t\t'kb_link'     => KB::get( 'analysis-search-console' ),\n\t\t'tooltip'     => esc_html__( 'Confirm if Rank Math is connected to Search Console', 'rank-math' ),\n\t];\n\n\t$tests['sitemaps'] = [\n\t\t'category'    => 'advanced',\n\t\t'title'       => esc_html__( 'Sitemaps', 'rank-math' ),\n\t\t'description' => esc_html__( 'XML sitemaps are a special type of text file that tells search engines about the structure of your site. They\\'re a list of all the resources (pages and files) you would like the search engine to index. You can assign different priorities, so certain pages will be crawled first. Before XML sitemaps, search engines were limited to indexing the content they could find by following links. That\\'s still an important feature for search engine spiders, but XML sitemaps have made it easier for content creators and search engines to collaborate.', 'rank-math' ),\n\t\t'how_to_fix'  => esc_html__( 'If you don\\'t have an XML sitemap, the best option is to install a plugin that creates sitemaps for you. That way you\\'ll know the sitemap will always be up-to-date. Plugins can also automatically ping the search engines when the XML file is updated. The Rank Math WordPress plugin gives you complete control over your site\\'s XML sitemaps. You can control the settings for each page as you write or edit it, and Rank Math will ping Google as soon as you submit your edits. This results in fast crawls and indexing.', 'rank-math' ),\n\t\t'callback'    => 'rank_math_analyze_sitemap',\n\t\t'kb_link'     => KB::get( 'analysis-sitemaps' ),\n\t\t'tooltip'     => esc_html__( 'Check the presence of sitemaps on your website', 'rank-math' ),\n\t];\n\n\treturn $tests;\n}\n\nadd_filter( 'rank_math\/seo_analysis\/tests', 'rank_math_register_seo_analysis_auto_update_test', 20 );\n\n\/**\n * Register test for the auto update option.\n *\n * @param array $tests Array of tests.\n *\n * @return array\n *\/\nfunction rank_math_register_seo_analysis_auto_update_test( $tests ) {\n\t$new_tests = [\n\t\t'auto_update' => [\n\t\t\t'category'    => 'priority',\n\t\t\t'title'       => esc_html__( 'Automatic Updates', 'rank-math' ),\n\t\t\t'description' => esc_html__( 'Enable automatic updates to ensure you are always using the latest version of Rank Math.', 'rank-math' ),\n\t\t\t'callback'    => 'rank_math_analyze_auto_update',\n\t\t\t'kb_link'     => KB::get( 'analysis-auto-update' ),\n\t\t\t'tooltip'     => esc_html__( 'Verify auto-updates are enabled for Rank Math', 'rank-math' ),\n\t\t],\n\t];\n\n\t\/\/ Move to top.\n\t$tests = array_merge( $new_tests, $tests );\n\n\treturn $tests;\n}\n\n\/**\n * Checks if auto update is enabled.\n *\n * @return array\n *\/\nfunction rank_math_analyze_auto_update() {\n\tif ( Helper::is_plugin_update_disabled() ) {\n\t\treturn [\n\t\t\t'status'  => 'warning',\n\t\t\t'message' => __( 'Site wide plugins auto-update option is disabled on your site.', 'rank-math' ),\n\t\t];\n\t}\n\n\tif ( Helper::get_auto_update_setting() ) {\n\t\treturn [\n\t\t\t'status'  => 'ok',\n\t\t\t'message' => __( 'Rank Math auto-update option is enabled on your site.', 'rank-math' ),\n\t\t];\n\t}\n\n\treturn [\n\t\t'status'  => 'warning',\n\t\t'message' => '<div class=\"auto-update-disabled\">' . sprintf(\n\t\t\t\/\/ Translators: placeholder is an activate button.\n\t\t\t__( 'Automatic updates are not enabled on your site. %s', 'rank-math' ),\n\t\t\t'<a href=\"#\" class=\"button button-primary button-small enable-auto-update\">' . __( 'Enable Auto Updates', 'rank-math' ) . '<\/a>'\n\t\t) . '<\/div>' .\n\t\t'<div class=\"auto-update-enabled hidden\">' .\n\t\tesc_html__( 'Rank Math auto-update option is enabled on your site.', 'rank-math' ) .\n\t\t'<\/div>',\n\t];\n}\n\n\/**\n * Checks if site description is empty or set to default.\n *\n * @return array\n *\/\nfunction rank_math_analyze_site_description() {\n\t$sitedesc = get_bloginfo( 'description' );\n\n\tif ( '' === $sitedesc ) {\n\t\treturn [\n\t\t\t'status'  => 'warning',\n\t\t\t'message' => sprintf(\n\t\t\t\t\/* translators: %1$s link to the customize settings, %2$s closing tag for the link *\/\n\t\t\t\tesc_html__( 'You have not entered a tagline yet. It is a good idea to choose one. %1$sYou can fix this in the customizer%2$s.', 'rank-math' ),\n\t\t\t\t'<a href=\"' . esc_url( admin_url( 'customize.php' ) ) . '\" target=\"_blank\">',\n\t\t\t\t'<\/a>'\n\t\t\t),\n\t\t];\n\t}\n\n\tif ( rank_math_is_default_tagline() ) {\n\t\treturn [\n\t\t\t'status'  => 'fail',\n\t\t\t'message' => wp_kses_post( __( 'Your Site Tagline is set to the default value <em>Just another WordPress site<\/em>.', 'rank-math' ) ),\n\t\t];\n\t}\n\n\treturn [\n\t\t'status'  => 'ok',\n\t\t'message' => esc_html__( 'Your Site Tagline is set to a custom value.', 'rank-math' ),\n\t];\n}\n\n\/**\n * Check if the site uses the default WP tagline.\n *\n * @return bool\n *\/\nfunction rank_math_is_default_tagline() {\n\t$description            = get_bloginfo( 'description' );\n\t$translated_description = translate( 'Just another WordPress site' ); \/\/ phpcs:ignore\n\n\tif ( $description === $translated_description ) {\n\t\treturn true;\n\t}\n\n\t\/\/ Also check untranslated version.\n\treturn 'Just another WordPress site' === $description;\n}\n\n\/**\n * Checks if pretty permalinks are enabled and if they contain %postname%.\n *\n * @return array\n *\/\nfunction rank_math_analyze_permalink_structure() {\n\t$permalink_structure = get_option( 'permalink_structure' );\n\n\tif ( '' === $permalink_structure ) {\n\t\treturn [\n\t\t\t'status'  => 'fail',\n\t\t\t'message' => wp_kses_post( __( 'Permalinks are set to the default value. <em>Pretty permalinks<\/em> are disabled. ', 'rank-math' ) ),\n\t\t];\n\t}\n\n\tif ( ! rank_math_is_postname_in_permalink() ) {\n\t\treturn [\n\t\t\t'status'  => 'fail',\n\t\t\t'message' => wp_kses_post( __( 'Permalinks are set to a custom structure but the post titles do not appear in the permalinks.', 'rank-math' ) ),\n\t\t];\n\t}\n\n\treturn [\n\t\t'status'  => 'ok',\n\t\t\/* translators: permalink structure *\/\n\t\t'message' => sprintf( wp_kses_post( __( 'Post permalink structure is set to %s.', 'rank-math' ) ), '<code>' . $permalink_structure . '<\/code>' ),\n\t];\n}\n\n\/**\n * Check if the post permalink includes %postname%.\n *\n * @return bool\n *\/\nfunction rank_math_is_postname_in_permalink() {\n\treturn ( false !== strpos( get_option( 'permalink_structure' ), '%postname%' ) );\n}\n\n\/**\n * Checks if Search Console is linked.\n *\n * @return array\n *\/\nfunction rank_math_analyze_search_console() {\n\t$status = Authentication::is_authorized() && Console::get_site_url();\n\n\treturn [\n\t\t'status'  => $status ? 'ok' : 'fail',\n\t\t'message' => $status ? esc_html__( 'Google Search Console has been linked.', 'rank-math' ) : esc_html__( 'You have not linked Google Search Console yet.', 'rank-math' ),\n\t];\n}\n\n\/**\n * Checks for posts without a focus keyword.\n *\n * @return array\n *\/\nfunction rank_math_analyze_focus_keywords() {\n\tglobal $wpdb;\n\n\t$postmeta_table_limit = apply_filters( 'rank_math\/seo_analysis\/postmeta_table_limit', 200000 );\n\tif ( DB::table_size_exceeds( $wpdb->postmeta, $postmeta_table_limit ) ) {\n\t\treturn [\n\t\t\t'status'  => 'warning',\n\t\t\t'message' => esc_html__( 'Could not check Focus Keywords in posts - the post meta table exceeds the size limit.', 'rank-math' ),\n\t\t];\n\t}\n\n\t$in_search_post_types = Helper::get_allowed_post_types();\n\t$in_search_post_types = empty( $in_search_post_types ) ? '' : \" AND {$wpdb->posts}.post_type IN ('\" . join( \"', '\", array_map( 'esc_sql', $in_search_post_types ) ) . \"')\";\n\n\t$meta_query = new WP_Meta_Query(\n\t\t[\n\t\t\t'relation' => 'AND',\n\t\t\t[\n\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t],\n\t\t\t[\n\t\t\t\t'relation' => 'OR',\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t],\n\t\t\t],\n\t\t]\n\t);\n\n\t$mq_sql = $meta_query->get_sql( 'post', $wpdb->posts, 'ID' );\n\t$query  = \"SELECT {$wpdb->posts}.ID, {$wpdb->posts}.post_type FROM $wpdb->posts {$mq_sql['join']} WHERE 1 = 1 {$mq_sql['where']}{$in_search_post_types} AND ({$wpdb->posts}.post_status = 'publish') GROUP BY {$wpdb->posts}.ID\";\n\t$data   = DB_Helper::get_results( $query, ARRAY_A );\n\n\t\/\/ Early Bail!\n\tif ( empty( $data ) ) {\n\t\treturn [\n\t\t\t'status'  => 'ok',\n\t\t\t'message' => esc_html__( 'All published posts have focus keywords set.', 'rank-math' ),\n\t\t];\n\t}\n\n\t$rows  = rank_math_analyze_group_result( $data );\n\t$links = rank_math_get_post_type_links( $rows, '&focus_keyword=1' );\n\n\treturn [\n\t\t'status'  => 'fail',\n\t\t\/* translators: post type links *\/\n\t\t'message' => sprintf( esc_html__( 'There are %s with no focus keyword set.', 'rank-math' ), join( ', ', $links ) ),\n\t];\n}\n\n\/**\n * Checks for posts where the focus keyword doesn't appear in the title.\n *\n * @return array\n *\/\nfunction rank_math_analyze_post_titles() {\n\t$info = [];\n\t$data = rank_math_get_posts_with_titles();\n\n\t\/\/ Early Bail!\n\tif ( empty( $data ) ) {\n\t\treturn [\n\t\t\t'status'  => 'ok',\n\t\t\t'message' => esc_html__( 'Focus keywords appear in the titles of published posts where it is set.', 'rank-math' ),\n\t\t];\n\t}\n\n\t$rows  = rank_math_analyze_group_result( $data );\n\t$links = rank_math_get_post_type_links( $rows, '&fk_in_title=1' );\n\n\t$post_ids     = wp_list_pluck( $data, 'ID' );\n\t$post_ids_max = array_slice( $post_ids, 0, 20 );\n\tforeach ( $post_ids_max as $postid ) {\n\t\t$info[] = '<a href=\"' . get_permalink( $postid ) . '\" target=\"_blank\">' . get_the_title( $postid ) . '<\/a>';\n\t}\n\t$count = count( $post_ids ) - 20;\n\tif ( $count > 0 ) {\n\t\t\/* translators: post ID count *\/\n\t\t$info[] = sprintf( esc_html__( '+%d More...', 'rank-math' ), $count );\n\t}\n\n\treturn [\n\t\t'status'  => 'fail',\n\t\t\/* translators: post type links *\/\n\t\t'message' => sprintf( esc_html__( 'There are %s published posts where the primary focus keyword does not appear in the post title.', 'rank-math' ), join( ', ', $links ) ),\n\t\t'info'    => $info,\n\t];\n}\n\n\/**\n * Get `post_type` links.\n *\n * @param array  $rows         Rows.\n * @param string $extra_params Extra parameters.\n *\n * @return array\n *\/\nfunction rank_math_get_post_type_links( $rows, $extra_params ) {\n\t$links = [];\n\tforeach ( $rows as $post_type => $row ) {\n\t\t$post_type = get_post_type_object( $post_type );\n\t\t$count     = count( $row );\n\t\t$links[]   = sprintf(\n\t\t\t'<a href=\"%1$s%2$s\" target=\"_blank\">%3$d %4$s<\/a>',\n\t\t\tesc_url( admin_url( 'edit.php?post_type=' . $post_type->name ) ),\n\t\t\t$extra_params,\n\t\t\t$count,\n\t\t\t$count > 1 ? $post_type->label : $post_type->labels->singular_name\n\t\t);\n\t}\n\n\treturn $links;\n}\n\n\/**\n * Get posts not set to noindex where the Focus Keyword has been added.\n *\n * @return mixed\n *\/\nfunction rank_math_get_posts_with_titles() {\n\tglobal $wpdb;\n\n\t$in_post_types = Helper::get_allowed_post_types();\n\t$in_post_types = empty( $in_post_types ) ? '' : \" AND {$wpdb->posts}.post_type IN ('\" . join( \"', '\", array_map( 'esc_sql', $in_post_types ) ) . \"')\";\n\t$meta_query    = new WP_Meta_Query(\n\t\t[\n\t\t\t'relation' => 'AND',\n\t\t\t[\n\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t'compare' => 'EXISTS',\n\t\t\t],\n\t\t\t[\n\t\t\t\t'relation' => 'OR',\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t],\n\t\t\t],\n\t\t]\n\t);\n\n\t$mq_sql = $meta_query->get_sql( 'post', $wpdb->posts, 'ID' );\n\t$query  = \"SELECT {$wpdb->posts}.ID, {$wpdb->posts}.post_type FROM $wpdb->posts {$mq_sql['join']} WHERE 1=1 {$mq_sql['where']}{$in_post_types} AND ({$wpdb->posts}.post_status = 'publish') AND REPLACE( {$wpdb->posts}.post_title, '&amp;', '&' ) NOT LIKE CONCAT( '%', SUBSTRING_INDEX( {$wpdb->postmeta}.meta_value, ',', 1 ), '%' ) GROUP BY {$wpdb->posts}.ID\";\n\n\treturn DB_Helper::get_results( $query, ARRAY_A );\n}\n\n\/**\n * Group result data by post type.\n *\n * @param array $data Result data.\n *\n * @return array\n *\/\nfunction rank_math_analyze_group_result( $data ) {\n\tforeach ( $data as $val ) {\n\t\t$key            = array_key_exists( 'post_type', $val ) ? $val['post_type'] : '';\n\t\t$rows[ $key ][] = $val;\n\t}\n\treturn $rows;\n}\n\n\/**\n * Check if sitemap module is active.\n *\n * @return array\n *\/\nfunction rank_math_analyze_sitemap() {\n\n\t$found = Helper::is_module_active( 'sitemap' );\n\tif ( ! $found ) {\n\t\t$sitemap = wp_remote_get( RankMath\\Sitemap\\Router::get_base_url( 'sitemap.xml' ) );\n\t\t$found   = isset( $sitemap['response'] ) && 200 === $sitemap['response']['code'];\n\t}\n\n\treturn [\n\t\t'status'  => $found ? 'ok' : 'fail',\n\t\t'message' => $found ? esc_html__( 'Your site has one or more sitemaps.', 'rank-math' ) : esc_html__( 'No sitemaps found.', 'rank-math' ),\n\t];\n}\n\n\n\/**\n * Check if the site is globally set to noindex.\n *\/\nfunction rank_math_analyze_blog_public() {\n\t$info_message  = '<strong>' . esc_html__( 'Attention: Search Engines can\\'t see your website.', 'rank-math' ) . '<\/strong> ';\n\t$info_message .= sprintf(\n\t\t\/* translators: %1$s: opening tag of the link, %2$s: the closing tag *\/\n\t\tesc_html__( 'Navigate to %1$sSettings > Reading%2$s and turn off this option: \"Discourage search engines from indexing this site\".', 'rank-math' ),\n\t\t'<a href=\"' . esc_url( admin_url( 'options-reading.php' ) ) . '\">',\n\t\t'<\/a>'\n\t);\n\n\t$public = (bool) get_option( 'blog_public' );\n\treturn [\n\t\t'status'  => $public ? 'ok' : 'fail',\n\t\t'message' => $public ? esc_html__( 'Your site is accessible by search engine.', 'rank-math' ) : $info_message,\n\t];\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/assets\/js\/seo-analysis.js","ext":"js","size":28885,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var e={n:function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,{a:n}),n},d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};e.r(t),e.d(t,{updateResults:function(){return je},updateUrl:function(){return Ce}});var n={};e.r(n),e.d(n,{appUi:function(){return ze}});var r={};e.r(r),e.d(r,{getResults:function(){return De},getUrl:function(){return Le}});var a=jQuery,o=e.n(a),l=wp.element;var i,s=React,u=ReactDOM;function c(){return c=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c.apply(this,arguments)}!function(e){e.Pop=\"POP\",e.Push=\"PUSH\",e.Replace=\"REPLACE\"}(i||(i={}));const m=\"popstate\";function p(e,t){if(!1===e||null==e)throw new Error(t)}function h(e,t){return{usr:e.state,key:e.key,idx:t}}function f(e,t,n,r){return void 0===n&&(n=null),c({pathname:\"string\"==typeof e?e:e.pathname,search:\"\",hash:\"\"},\"string\"==typeof t?y(t):t,{state:n,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function d(e){let{pathname:t=\"\/\",search:n=\"\",hash:r=\"\"}=e;return n&&\"?\"!==n&&(t+=\"?\"===n.charAt(0)?n:\"?\"+n),r&&\"#\"!==r&&(t+=\"#\"===r.charAt(0)?r:\"#\"+r),t}function y(e){let t={};if(e){let n=e.indexOf(\"#\");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf(\"?\");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function g(e,t,n,r){void 0===r&&(r={});let{window:a=document.defaultView,v5Compat:o=!1}=r,l=a.history,s=i.Pop,u=null,y=g();function g(){return(l.state||{idx:null}).idx}function w(){s=i.Pop;let e=g(),t=null==e?null:e-y;y=e,u&&u({action:s,location:v.location,delta:t})}function b(e){let t=\"null\"!==a.location.origin?a.location.origin:a.location.href,n=\"string\"==typeof e?e:d(e);return p(t,\"No window.location.(origin|href) available to create URL for href: \"+n),new URL(n,t)}null==y&&(y=0,l.replaceState(c({},l.state,{idx:y}),\"\"));let v={get action(){return s},get location(){return e(a,l)},listen(e){if(u)throw new Error(\"A history only accepts one active listener\");return a.addEventListener(m,w),u=e,()=>{a.removeEventListener(m,w),u=null}},createHref(e){return t(a,e)},createURL:b,encodeLocation(e){let t=b(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){s=i.Push;let r=f(v.location,e,t);n&&n(r,e),y=g()+1;let c=h(r,y),m=v.createHref(r);try{l.pushState(c,\"\",m)}catch(e){if(e instanceof DOMException&&\"DataCloneError\"===e.name)throw e;a.location.assign(m)}o&&u&&u({action:s,location:v.location,delta:1})},replace:function(e,t){s=i.Replace;let r=f(v.location,e,t);n&&n(r,e),y=g();let a=h(r,y),c=v.createHref(r);l.replaceState(a,\"\",c),o&&u&&u({action:s,location:v.location,delta:0})},go(e){return l.go(e)}};return v}var w;!function(e){e.data=\"data\",e.deferred=\"deferred\",e.redirect=\"redirect\",e.error=\"error\"}(w||(w={}));new Set([\"lazy\",\"caseSensitive\",\"path\",\"id\",\"index\",\"children\"]);function b(e,t){if(\"\/\"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith(\"\/\")?t.length-1:t.length,r=e.charAt(n);return r&&\"\/\"!==r?null:e.slice(n)||\"\/\"}function v(e,t,n,r){return\"Cannot include a '\"+e+\"' character in a manually specified `to.\"+t+\"` field [\"+JSON.stringify(r)+\"].  Please separate it out to the `to.\"+n+'` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.'}function k(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function E(e,t,n,r){let a;void 0===r&&(r=!1),\"string\"==typeof e?a=y(e):(a=c({},e),p(!a.pathname||!a.pathname.includes(\"?\"),v(\"?\",\"pathname\",\"search\",a)),p(!a.pathname||!a.pathname.includes(\"#\"),v(\"#\",\"pathname\",\"hash\",a)),p(!a.search||!a.search.includes(\"#\"),v(\"#\",\"search\",\"hash\",a)));let o,l=\"\"===e||\"\"===a.pathname,i=l?\"\/\":a.pathname;if(null==i)o=n;else if(r){let e=t[t.length-1].replace(\/^\\\/\/,\"\").split(\"\/\");if(i.startsWith(\"..\")){let t=i.split(\"\/\");for(;\"..\"===t[0];)t.shift(),e.pop();a.pathname=t.join(\"\/\")}o=\"\/\"+e.join(\"\/\")}else{let e=t.length-1;if(i.startsWith(\"..\")){let t=i.split(\"\/\");for(;\"..\"===t[0];)t.shift(),e-=1;a.pathname=t.join(\"\/\")}o=e>=0?t[e]:\"\/\"}let s=function(e,t){void 0===t&&(t=\"\/\");let{pathname:n,search:r=\"\",hash:a=\"\"}=\"string\"==typeof e?y(e):e,o=n?n.startsWith(\"\/\")?n:function(e,t){let n=t.replace(\/\\\/+$\/,\"\").split(\"\/\");return e.split(\"\/\").forEach((e=>{\"..\"===e?n.length>1&&n.pop():\".\"!==e&&n.push(e)})),n.length>1?n.join(\"\/\"):\"\/\"}(n,t):t;return{pathname:o,search:O(r),hash:_(a)}}(a,o),u=i&&\"\/\"!==i&&i.endsWith(\"\/\"),m=(l||\".\"===i)&&n.endsWith(\"\/\");return s.pathname.endsWith(\"\/\")||!u&&!m||(s.pathname+=\"\/\"),s}const S=e=>e.join(\"\/\").replace(\/\\\/\\\/+\/g,\"\/\"),O=e=>e&&\"?\"!==e?e.startsWith(\"?\")?e:\"?\"+e:\"\",_=e=>e&&\"#\"!==e?e.startsWith(\"#\")?e:\"#\"+e:\"\";Error;const P=[\"post\",\"put\",\"patch\",\"delete\"],A=(new Set(P),[\"get\",...P]);new Set(A),new Set([301,302,303,307,308]),new Set([307,308]);Symbol(\"deferred\");function R(){return R=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},R.apply(this,arguments)}const j=s.createContext(null);const C=s.createContext(null);const U=s.createContext(null);const N=s.createContext({outlet:null,matches:[],isDataRoute:!1});function x(){return null!=s.useContext(U)}function T(){return x()||p(!1),s.useContext(U).location}function M(e){s.useContext(C).static||s.useLayoutEffect(e)}function z(){let{isDataRoute:e}=s.useContext(N);return e?function(){let{router:e}=F(D.UseNavigateStable),t=I(L.UseNavigateStable),n=s.useRef(!1);return M((()=>{n.current=!0})),s.useCallback((function(r,a){void 0===a&&(a={}),n.current&&(\"number\"==typeof r?e.navigate(r):e.navigate(r,R({fromRouteId:t},a)))}),[e,t])}():function(){x()||p(!1);let e=s.useContext(j),{basename:t,navigator:n}=s.useContext(C),{matches:r}=s.useContext(N),{pathname:a}=T(),o=JSON.stringify(k(r).map((e=>e.pathnameBase))),l=s.useRef(!1);return M((()=>{l.current=!0})),s.useCallback((function(r,i){if(void 0===i&&(i={}),!l.current)return;if(\"number\"==typeof r)return void n.go(r);let s=E(r,JSON.parse(o),a,\"path\"===i.relative);null==e&&\"\/\"!==t&&(s.pathname=\"\/\"===s.pathname?t:S([t,s.pathname])),(i.replace?n.replace:n.push)(s,i.state,i)}),[t,n,o,a,e])}()}s.Component;var D=function(e){return e.UseBlocker=\"useBlocker\",e.UseRevalidator=\"useRevalidator\",e.UseNavigateStable=\"useNavigate\",e}(D||{}),L=function(e){return e.UseBlocker=\"useBlocker\",e.UseLoaderData=\"useLoaderData\",e.UseActionData=\"useActionData\",e.UseRouteError=\"useRouteError\",e.UseNavigation=\"useNavigation\",e.UseRouteLoaderData=\"useRouteLoaderData\",e.UseMatches=\"useMatches\",e.UseRevalidator=\"useRevalidator\",e.UseNavigateStable=\"useNavigate\",e.UseRouteId=\"useRouteId\",e}(L||{});function F(e){let t=s.useContext(j);return t||p(!1),t}function I(e){let t=function(e){let t=s.useContext(N);return t||p(!1),t}(),n=t.matches[t.matches.length-1];return n.route.id||p(!1),n.route.id}s.startTransition;function W(e){let{basename:t=\"\/\",children:n=null,location:r,navigationType:a=i.Pop,navigator:o,static:l=!1}=e;x()&&p(!1);let u=t.replace(\/^\\\/*\/,\"\/\"),c=s.useMemo((()=>({basename:u,navigator:o,static:l})),[u,o,l]);\"string\"==typeof r&&(r=y(r));let{pathname:m=\"\/\",search:h=\"\",hash:f=\"\",state:d=null,key:g=\"default\"}=r,w=s.useMemo((()=>{let e=b(m,u);return null==e?null:{location:{pathname:e,search:h,hash:f,state:d,key:g},navigationType:a}}),[u,m,h,f,d,g,a]);return null==w?null:s.createElement(C.Provider,{value:c},s.createElement(U.Provider,{children:n,value:w}))}new Promise((()=>{}));s.Component;function B(e){return void 0===e&&(e=\"\"),new URLSearchParams(\"string\"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce(((t,n)=>{let r=e[n];return t.concat(Array.isArray(r)?r.map((e=>[n,e])):[[n,r]])}),[]))}new Set([\"application\/x-www-form-urlencoded\",\"multipart\/form-data\",\"text\/plain\"]);new Map;const H=s.startTransition;u.flushSync;function V(e){let{basename:t,children:n,future:r,window:a}=e,o=s.useRef();var l;null==o.current&&(o.current=(void 0===(l={window:a,v5Compat:!0})&&(l={}),g((function(e,t){let{pathname:n,search:r,hash:a}=e.location;return f(\"\",{pathname:n,search:r,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||\"default\")}),(function(e,t){return\"string\"==typeof t?t:d(t)}),null,l)));let i=o.current,[u,c]=s.useState({action:i.action,location:i.location}),{v7_startTransition:m}=r||{},p=s.useCallback((e=>{m&&H?H((()=>c(e))):c(e)}),[c,m]);return s.useLayoutEffect((()=>i.listen(p)),[i,p]),s.createElement(W,{basename:t,children:n,location:u.location,navigationType:u.action,navigator:i})}\"undefined\"!=typeof window&&void 0!==window.document&&window.document.createElement;var K,$;function J(e){let t=s.useRef(B(e)),n=s.useRef(!1),r=T(),a=s.useMemo((()=>function(e,t){let n=B(e);return t&&t.forEach(((e,r)=>{n.has(r)||t.getAll(r).forEach((e=>{n.append(r,e)}))})),n}(r.search,n.current?null:t.current)),[r.search]),o=z(),l=s.useCallback(((e,t)=>{const r=B(\"function\"==typeof e?e(a):e);n.current=!0,o(\"?\"+r,t)}),[o,a]);return[a,l]}(function(e){e.UseScrollRestoration=\"useScrollRestoration\",e.UseSubmit=\"useSubmit\",e.UseSubmitFetcher=\"useSubmitFetcher\",e.UseFetcher=\"useFetcher\",e.useViewTransitionState=\"useViewTransitionState\"})(K||(K={})),function(e){e.UseFetcher=\"useFetcher\",e.UseFetchers=\"useFetchers\",e.UseScrollRestoration=\"useScrollRestoration\"}($||($={}));var Y=lodash,q=wp.i18n,G=wp.hooks,Q=window.rankMathComponents,Z=wp.data,X=wp.compose;function ee(e,t,n){return o().ajax({url:rankMath.ajaxurl,type:n||\"POST\",dataType:\"json\",data:o().extend(!0,{action:\"rank_math_\"+e,security:rankMath.security},t)})}function te(e){return te=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},te(e)}var ne=[\"children\",\"startAudit\"];function re(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ae(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?re(Object(n),!0).forEach((function(t){oe(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):re(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function oe(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==te(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==te(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===te(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function le(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,l,i=[],s=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(u)throw a}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return ie(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return ie(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function se(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var ue=(0,l.createContext)(),ce=(0,X.compose)((0,Z.withSelect)((function(e){var t=e(\"rank-math-seo-analysis\"),n=t.getResults,r=t.getUrl;return{results:n(),url:r()}})),(0,Z.withDispatch)((function(e){return{updateUrl:function(t){e(\"rank-math-seo-analysis\").updateUrl(t)},updateResults:function(t){e(\"rank-math-seo-analysis\").updateResults(t)},startAudit:function(t,n){t(!0),ee(\"analyze\").always((function(r){r.error?n(r.error):e(\"rank-math-seo-analysis\").updateResults(r),t(!1)}))}}})))((function(e){var t=e.children,n=e.startAudit,r=se(e,ne),a=le((0,l.useState)(!1),2),o=a[0],i=a[1],s=le((0,l.useState)(\"\"),2),u=s[0],c=s[1];return wp.element.createElement(ue.Provider,{value:ae(ae({},r),{},{startProgress:o,setStartProgress:i,startAnalysis:function(){n(i,c)},analysisError:u})},t)})),me=function(){return(0,l.useContext)(ue)};function pe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,l,i=[],s=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(u)throw a}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return he(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return he(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function he(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var fe=function(){var e=pe((0,l.useState)(!1),2),t=e[0],n=e[1],r=me(),a=r.url,o=r.updateUrl,i=r.startAnalysis;return wp.element.createElement(\"p\",{className:\"page-analysis-selected\"},(0,q.__)(\"Selected page: \",\"rank-math\"),t?wp.element.createElement(\"form\",{className:\"changeurl-form\",onSubmit:function(e){e.preventDefault(),n(!1),i()}},wp.element.createElement(Q.TextControl,{className:\"rank-math-analyze-url\",variant:\"default\",value:a,onChange:o}),\"\u00a0\",wp.element.createElement(Q.Button,{type:\"submit\",variant:\"secondary\",className:\"rank-math-changeurl-ok\",disabled:!a},(0,q.__)(\"OK\",\"rank-math\"))):wp.element.createElement(React.Fragment,null,wp.element.createElement(\"a\",{href:a,target:\"_blank\",rel:\"noreferrer\",className:\"rank-math-current-url\"},a),\"\u00a0\",wp.element.createElement(Q.Button,{variant:\"secondary\",className:\"rank-math-changeurl\",onClick:function(){n(!0)}},(0,q.__)(\"Change URL\",\"rank-math\"))))},de=function(){var e=me(),t=e.results,n=e.startProgress,r=e.startAnalysis,a=e.analysisError,o=rankMath.analyzeSubpage;return(0,Y.isEmpty)(t)?wp.element.createElement(React.Fragment,null,a&&wp.element.createElement(l.RawHTML,null,a),wp.element.createElement(\"div\",{className:\"rank-math-seo-analysis-header\"},n?wp.element.createElement(React.Fragment,null,o?wp.element.createElement(\"h2\",null,(0,q.__)(\"Analysing Page\u2026\",\"rank-math\")):wp.element.createElement(\"h2\",null,(0,q.__)(\"Analysing Website\u2026\",\"rank-math\")),wp.element.createElement(Q.ProgressBar,null)):wp.element.createElement(React.Fragment,null,o&&wp.element.createElement(fe,null),wp.element.createElement(Q.Button,{variant:\"primary\",size:\"xlarge\",className:\"rank-math-recheck\",onClick:r},o?(0,q.__)(\"Start Page Analysis\",\"rank-math\"):(0,q.__)(\"Start SEO Analyzer\",\"rank-math\"))))):wp.element.createElement(Q.AnalyzerResult,{results:t})},ye=wp.components;function ge(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\",r=rankMath.links[e]||\"\";if(!r)return\"#\";if(!t)return r;var a={utm_source:\"Plugin\",utm_medium:encodeURIComponent(t),utm_campaign:\"WP\"};return r+\"?\"+Object.keys(a).map((function(e){return\"\".concat(e,\"=\").concat(a[e])})).join(\"&\")+n}var we=function(){var e=me(),t=e.results,n=e.updateResults,r=e.startAnalysis;if(!(0,Y.isEmpty)(t))return wp.element.createElement(\"div\",{className:\"analyzer-result-actions\"},wp.element.createElement(Q.Button,{variant:\"link\",className:\"rank-math-recheck\",onClick:function(){n([]),r()}},(0,q.__)(\"Restart SEO Analyzer\",\"rank-math\"),wp.element.createElement(ye.Dashicon,{icon:\"update\"})),wp.element.createElement(\"div\",{className:\"analyzer-results-header\"},(0,G.applyFilters)(\"rank_math_seo_analysis_print_result\",wp.element.createElement(\"div\",{id:\"print-results\"},wp.element.createElement(Q.Button,{href:ge(\"pro\",\"SEO Analyzer Print Button\"),variant:\"secondary\",className:\"rank-math-print-results is-inactive\",target:\"_blank\"},wp.element.createElement(\"span\",{className:\"dashicons dashicons-printer\"}),(0,q.__)(\"Print\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-pro-badge\"},\"PRO\")))),wp.element.createElement(Q.Button,{variant:\"primary\",href:\"#analysis-result\",className:\"rank-math-view-issues\"},(0,q.__)(\"View Issues\",\"rank-math\"))))},be=function(){var e=rankMath,t=e.connectUrl,n=e.isSiteConnected;return wp.element.createElement(React.Fragment,null,wp.element.createElement(\"header\",{className:\"rank-math-box\"},wp.element.createElement(\"h2\",null,wp.element.createElement(\"span\",{className:\"title-prefix\"},(0,q.__)(\"SEO Analysis for\",\"rank-math\")),wp.element.createElement(\"span\",null,window.location.hostname)),n&&wp.element.createElement(we,null)),wp.element.createElement(\"div\",{className:\"rank-math-box rank-math-analyzer-result\"},n?wp.element.createElement(de,null):wp.element.createElement(\"div\",{className:\"rank-math-seo-analysis-header\"},wp.element.createElement(\"h3\",null,(0,q.__)(\"Analyze your site by \",\"rank-math\"),wp.element.createElement(\"a\",{href:t,target:\"_blank\",rel:\"noreferrer\"},(0,q.__)(\"linking your Rank Math account\",\"rank-math\"))))))},ve=function(){var e={metrices:{percent:85,total:29,statuses:{ok:20,warning:2,fail:7}},date:{date:\"October 17, 2024\",time:\"8:01 am\"},serpData:{favicon:\"https:\/\/t0.gstatic.com\/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=https%3A%2F%2Fwww.rankmath.com%2F&size=128\",url:\"https:\/\/www.rankmath.com\/\",title:\"Rank Math - Best Free WordPress SEO Tools in 2025\",description:\"Rank Math WordPress SEO plugin will help you rank higher in search engines. DOWNLOAD for FREE this plugin today to optimize WordPress website for higher ra...\"},results:{basic:[{status:\"info\",test_id:\"common_keywords\",title:\"Common Keywords\",tooltip:\"A list of keywords that appear frequently in the text of the content.\",kb_link:\"https:\/\/rankmath.com\/kb\/seo-analysis\/#common-keywords-test\",message:\"Here are the most common keywords we found on the page:\",data:{rank:31,math:29,wordpress:15,plugin:10,best:9,search:8,google:7,support:7,features:6,free:6}},{status:\"fail\",test_id:\"description_length\",title:\"SEO Description\",tooltip:\"SEO analysis of page's meta-description.\",kb_link:\"https:\/\/rankmath.com\/kb\/seo-analysis\/#seo-description-test\",message:\"The description of page has 184 characters. Most search engines will truncate meta description to 160 characters.\",fix:\"<p>Write a meta-description for page. Use target keyword(s) (in a natural way) and write with human readers in mind. Summarize the content - describe the topics article discusses.<\/p><p>The description should stimulate reader interest and get them to click on the article. Think of it as a mini-advert for content.<\/p>\",data:[\"Rank Math WordPress SEO plugin will help you rank higher in search engines. DOWNLOAD for FREE this plugin today to optimize WordPress website for higher rankings and more traffic.\"]},{status:\"ok\",test_id:\"h1_heading\",title:\"H1 Heading\",tooltip:\"SEO Analysis of the H1 Tags on the page.\",kb_link:\"https:\/\/rankmath.com\/kb\/seo-analysis\/#h1-heading-test\",message:\"One H1 tag was found on the page.\",data:[\"WordPress SEO Made Easy\"]},{status:\"ok\",test_id:\"h2_headings\",title:\"H2 Headings\",tooltip:\"SEO analysis of the H2 headings on your page.\",kb_link:\"https:\/\/rankmath.com\/kb\/seo-analysis\/#h2-headings-test\",message:\"One or more H2 tags were found on the page.\",data:[\"Powering SEO optimization for businesses around the world\",\"What is Rank Math?\",\"Recommended By the Best SEOs On The Planet\",\"What you can do with Rank Math\",\"Take The Guesswork Out of WordPress SEO\",\"Your all-in-one solution for all the SEO needs\",\"Leading SEOs are Loving Rank Math!\"]},{status:\"ok\",test_id:\"img_alt\",title:\"Image ALT Attributes\",tooltip:'SEO analysis of the \"alt\" attribute for image tags.',kb_link:\"https:\/\/rankmath.com\/kb\/seo-analysis\/#image-alt-attributes-test\",message:\"All images on the page have alt attributes.\"},{status:\"ok\",test_id:\"keywords_meta\",title:\"Keywords in Title & Description\",tooltip:\"SEO analysis of the HTML page's Title and meta description content.\",kb_link:\"https:\/\/rankmath.com\/kb\/seo-analysis\/#keywords-in-title-and-description-test\",message:\"One or more common keywords were found in the title and description of the page.\",data:{title:[\"rank\",\"math\",\"wordpress\",\"best\",\"free\"],description:[\"rank\",\"math\",\"wordpress\",\"plugin\",\"search\",\"free\"]}}]}};return wp.element.createElement(React.Fragment,null,wp.element.createElement(\"div\",{className:\"rank-math-box blurred\"},wp.element.createElement(\"h2\",null,(0,q.__)(\"Competitor Analyzer\",\"rank-math\")),wp.element.createElement(\"p\",null,(0,q.__)(\"Enter a site URL to see how it ranks for the same SEO criteria as site.\",\"rank-math\")),wp.element.createElement(\"div\",{className:\"url-form\"},wp.element.createElement(\"input\",{type:\"text\",name:\"competitor_url\",id:\"competitor_url\",placeholder:\"https:\/\/rankmath.com\",disabled:!0}),wp.element.createElement(Q.Button,{variant:\"primary\",id:\"competitor_url_submit\",disabled:!0},(0,q.__)(\"Start SEO Analyzer\",\"rank-math\")))),wp.element.createElement(\"div\",{className:\"rank-math-box rank-math-analyzer-result blurred\"},wp.element.createElement(\"span\",{className:\"wp-header-end\"}),!(0,Y.isEmpty)(e)&&wp.element.createElement(Q.AnalyzerResult,{results:e})),wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-box blue-ticks width-50 top-20 less-padding\"},wp.element.createElement(\"h3\",null,(0,q.__)(\"Competitor Analyzer\",\"rank-math\")),wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,q.__)(\"Analyze competitor websites to gain an edge\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,q.__)(\"Evaluate strengths and weaknesses\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,q.__)(\"Explore new keywords and opportunities\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,q.__)(\"Make more informed decisions & strategy\",\"rank-math\"))),wp.element.createElement(Q.Button,{variant:\"green\",href:ge(\"pro\",\"Competitor Analyzer Tab\"),target:\"_blank\",rel:\"noreferrer\"},(0,q.__)(\"Upgrade\",\"rank-math\")))))};function ke(e){return function(e){if(Array.isArray(e))return Oe(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||Se(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Ee(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,l,i=[],s=!0,u=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(u)throw a}}return i}}(e,t)||Se(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Se(e,t){if(e){if(\"string\"==typeof e)return Oe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n)?Oe(e,t):void 0}}function Oe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var _e=function(){return(0,G.applyFilters)(\"rank_math_analyzer_tabs\",[{name:\"seo_analyzer\",title:wp.element.createElement(React.Fragment,null,wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-analyzer\"}),(0,q.__)(\"SEO Analyzer\",\"rank-math\")),view:be},{name:\"competitor_analyzer\",title:wp.element.createElement(React.Fragment,null,wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-users\"}),(0,q.__)(\"Competitor Analyzer\",\"rank-math\")),view:ve}])},Pe=function(){var e=Ee(J(),2),t=e[0],n=e[1],r=t.get(\"view\")||_e()[0].name,a=function(e){return n((function(t){return(0,Y.fromPairs)([].concat(ke(t),[[\"view\",e]]))}))};return wp.element.createElement(React.Fragment,null,wp.element.createElement(Q.DashboardHeader,{page:r}),wp.element.createElement(\"div\",{className:\"wrap rank-math-wrap rank-math-seo-analysis-wrap dashboard\"},wp.element.createElement(Q.TabPanel,{tabs:_e(),key:r,initialTabName:r,onSelect:function(e){return a(e)}},(function(e){var t=e.name,n=e.view;return wp.element.createElement(\"div\",{className:\"rank-math-ui seo-analysis \".concat(t)},wp.element.createElement(n,{onTabSelect:a}))}))))},Ae=function(){return wp.element.createElement(V,null,wp.element.createElement(ce,null,wp.element.createElement(Pe,null)))};function Re(e,t){return{type:\"RANK_MATH_APP_UI\",key:e,value:t}}function je(e){return Re(\"results\",e)}function Ce(e){return Re(\"url\",e)}function Ue(e){return Ue=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ue(e)}function Ne(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function xe(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ne(Object(n),!0).forEach((function(t){Te(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ne(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Te(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==Ue(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==Ue(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===Ue(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Me={results:rankMath.results,url:rankMath.analyzeUrl};function ze(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Me,t=arguments.length>1?arguments[1]:void 0;return\"RANK_MATH_APP_UI\"===t.type?xe(xe({},e),{},Te({},t.key,t.value)):e}function De(e){return e.appUi.results}function Le(e){return e.appUi.url}var Fe;(0,Z.register)((0,Z.createReduxStore)(\"rank-math-seo-analysis\",{reducer:(0,Z.combineReducers)(n),selectors:r,actions:t}));Fe=function(){(0,l.createRoot)(document.getElementById(\"rank-math-seo-analysis-wrapper\")).render(wp.element.createElement(Ae,null)),o()(document).on(\"click\",\".enable-auto-update\",(function(e){e.preventDefault(),ee(\"enable_auto_update\"),o()(this).closest(\".auto-update-disabled\").addClass(\"hidden\").siblings(\".auto-update-enabled\").removeClass(\"hidden\").closest(\".row-description\").find(\".status-icon\").removeClass(\"status-warning dashicons-warning\").addClass(\"status-ok dashicons-yes\")}))},\"undefined\"!=typeof document&&(\"complete\"!==document.readyState&&\"interactive\"!==document.readyState?document.addEventListener(\"DOMContentLoaded\",Fe):Fe())}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/assets\/css\/seo-analysis.css","ext":"css","size":23913,"mtime":1757324689,"type":"text","content":"\/*!\n * Plugin:\tRank Math - SEO Analyzer\n * URL:\t\thttps:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * Name:\tseo-analysis.css\n *\/@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}:root{--rankmath-wp-adminbar-height: 0}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.blurred{pointer-events:none;-webkit-filter:blur(2px);filter:blur(2px)}.blurred:after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";background:rgba(248,249,250,.1)}#rank-math-pro-cta{position:relative;z-index:100;margin-top:2rem}#rank-math-pro-cta.center{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:0}#rank-math-pro-cta.analytics{width:560px;max-width:100%;margin:2rem auto 0}#rank-math-pro-cta.no-margin{margin:0}#rank-math-pro-cta .rank-math-cta-box{-ms-flex-item-align:center;align-self:center;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;max-width:90%;padding:2rem 1.5rem;border:2px solid #6666c3;border-radius:4px;background:#fff;-webkit-box-shadow:0 4px 14px 0 rgba(34,36,55,.28);box-shadow:0 4px 14px 0 rgba(34,36,55,.28);justify-self:center}#rank-math-pro-cta .rank-math-cta-box.no-shadow{-webkit-box-shadow:none;box-shadow:none}#rank-math-pro-cta .rank-math-cta-box.no-padding{padding:0}#rank-math-pro-cta .rank-math-cta-box.no-border{border:none}#rank-math-pro-cta .rank-math-cta-box.less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-box.less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.top-20{-ms-flex-item-align:start;align-self:flex-start;margin-top:10%}#rank-math-pro-cta .rank-math-cta-box h3{font-size:1.25rem;font-weight:600;line-height:1.4;margin-top:0;margin-bottom:1.5rem;color:#242628}@media screen and (min-width: 48rem){#rank-math-pro-cta .rank-math-cta-box.width-100{width:100%;max-width:100%}#rank-math-pro-cta .rank-math-cta-box.width-80{max-width:80%}#rank-math-pro-cta .rank-math-cta-box.width-70{max-width:70%}#rank-math-pro-cta .rank-math-cta-box.width-60{max-width:60%}#rank-math-pro-cta .rank-math-cta-box.width-60 h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.width-50{max-width:50%}#rank-math-pro-cta .rank-math-cta-box.width-40{max-width:40%}#rank-math-pro-cta .rank-math-cta-box.width-30{max-width:30%}}#rank-math-pro-cta .rank-math-cta-box.blue-ticks ul li:before{background:#069de3}#rank-math-pro-cta .rank-math-cta-table{margin-bottom:2rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}#rank-math-pro-cta .rank-math-cta-table .less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-table .less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-header{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem .825rem;border-bottom:1px solid #dadfe4}#rank-math-pro-cta .rank-math-cta-header h2{font-size:1.125rem;font-weight:500;margin:0}#rank-math-pro-cta .rank-math-cta-body{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem 1.5rem 1.25rem .825rem}#rank-math-pro-cta .rank-math-cta-body svg,#rank-math-pro-cta .rank-math-cta-body .dashicon{margin-right:1.25rem;fill:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body span.dashicon{font-size:50px;width:50px;height:50px;color:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body p{font-size:1rem;-webkit-box-flex:1;-ms-flex:1;flex:1}#rank-math-pro-cta .rank-math-cta-body .button{line-height:40px;margin-left:1.25rem}#rank-math-pro-cta .rank-math-cta-text{display:block;color:#7f868d}#rank-math-pro-cta .rank-math-cta-text span{margin-right:3px}#rank-math-pro-cta p,#rank-math-pro-cta ul{font-size:1rem;color:#7f868d}#rank-math-pro-cta p{margin-top:0}#rank-math-pro-cta ul{margin-bottom:1.5rem}#rank-math-pro-cta ul li{font-size:1rem;line-height:1.5;margin-bottom:1rem;padding:0;border:0}#rank-math-pro-cta ul li:before{font-family:\"dashicons\";font-size:16px;line-height:18px;display:inline-block;width:18px;margin-right:8px;content:\"\uf15e\";text-align:center;vertical-align:-2px;color:#fff;border-radius:50%;background:#10ac84}#rank-math-pro-cta .button{font-weight:500;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:auto;max-width:100%;margin:0 auto;padding:0 2rem;text-align:center}#rank-math-pro-cta .button.is-link{margin-left:15px;padding:0;font-size:10px;background-color:rgba(0,0,0,0)}.rank-math-error-modal.rank-math-contentai-modal{background-color:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none;height:auto}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content{margin-top:0}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content .components-modal__header{border:none}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta{position:static}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta .rank-math-cta-box{margin-top:0;max-width:100%}.rank-math-seo-analysis-wrap header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;gap:20px;margin-bottom:0;border-bottom:0;border-radius:6px 6px 0 0;background:#fff}.rank-math-seo-analysis-wrap header h2{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column wrap;flex-flow:column wrap;margin:0;font-size:1.5rem}.rank-math-seo-analysis-wrap header .analyzer-result-actions{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:1;-ms-flex:1;flex:1;gap:20px}.rank-math-seo-analysis-wrap header .rank-math-recheck{gap:5px;font-size:15px;font-weight:400;line-height:1 !important;text-decoration:none;text-transform:inherit}.rank-math-seo-analysis-wrap header .rank-math-recheck .dashicons{font-size:16px;width:16px;height:16px;vertical-align:-3px}.rank-math-seo-analysis-wrap header .analyzer-results-header{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.rank-math-seo-analysis-wrap header .rank-math-view-issues{font-weight:600}.rank-math-seo-analysis-wrap header .rank-math-print-results{margin-right:10px;font-weight:600}.rank-math-seo-analysis-wrap header .rank-math-print-results .dashicons{margin-right:5px;margin-left:-4px;-webkit-transition:none;transition:none;vertical-align:middle}.rank-math-seo-analysis-wrap header .rank-math-print-results .rank-math-pro-badge{vertical-align:1px;line-height:1.3}.rank-math-seo-analysis-wrap header .rank-math-print-results.disabled{cursor:pointer;pointer-events:initial}.rank-math-seo-analysis-wrap header .rank-math-print-results.is-inactive:not(:disabled),.rank-math-seo-analysis-wrap header .rank-math-print-results.is-inactive:hover:not(:disabled),.rank-math-seo-analysis-wrap header .rank-math-print-results.is-inactive:focus:not(:disabled),.rank-math-seo-analysis-wrap header .rank-math-print-results.is-inactive:active:not(:focus):not(:disabled){color:#a7aaad;background-color:#f6f7f7;border-color:#dcdcde;-webkit-box-shadow:none;box-shadow:none}.rank-math-seo-analysis-wrap header .button:not(.rank-math-recheck){text-transform:uppercase}.rank-math-seo-analysis-wrap .title-prefix,.rank-math-seo-analysis-wrap .rank-math-analysis-date{display:block;margin-bottom:7px;color:#7f868d;font-size:14px;font-weight:400;text-transform:uppercase}.rank-math-seo-analysis-wrap .rank-math-analysis-date{text-transform:initial}.rank-math-seo-analysis-wrap .changeurl-form{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.rank-math-seo-analysis-wrap .changeurl-form .rank-math-text-control{width:210px}.rank-math-seo-analysis-wrap .rank-math-seo-analysis-header{border:1px solid #b5bfc9;background:#fff;padding:30px;text-align:center}.rank-math-seo-analysis-wrap .rank-math-seo-analysis-header h2{font-size:2em}.rank-math-result-graphs{padding:2.5rem 1.875rem;border-radius:0 0 6px 6px;background:#fff}.rank-math-result-graphs label{cursor:unset}.rank-math-result-graphs .rank-math-analysis-date{margin-top:-1rem;margin-bottom:.5rem;text-align:right}.rank-math-result-graphs .three-col{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:37px}.rank-math-result-graphs .graphs-main,.rank-math-result-graphs .graphs-side{padding:1rem;-webkit-box-sizing:border-box;box-sizing:border-box}.rank-math-result-graphs .graphs-main{-webkit-box-flex:0;-ms-flex:0 0 20%;flex:0 0 20%;padding:0;text-align:center}.rank-math-result-graphs .graphs-side{-webkit-box-flex:0;-ms-flex:0 0 25%;flex:0 0 25%;padding:1.5rem;border-radius:6px;background-color:#f7f7f9}.rank-math-result-graphs .graphs-side li{height:auto !important}.rank-math-result-graphs .serp-preview{-webkit-box-flex:1;-ms-flex:1;flex:1}.rank-math-result-graphs .result-score{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:10px}.rank-math-result-graphs .result-score strong{font-weight:700}.rank-math-result-graphs .result-score div{display:block;color:#7f868d;font-size:15px}.serp-preview{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column nowrap;flex-flow:column nowrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:450px;padding:20px;border:4px solid #ebebed;border-radius:6px;background:#fff}.serp-preview .serp-description,.serp-preview .serp-title,.serp-preview .serp-url-wrapper{display:block;position:relative;overflow:hidden;z-index:1;max-width:630px;margin:0;font-family:arial,sans-serif}.serp-preview .serp-title{margin-bottom:4px;font-size:20px;font-weight:normal;line-height:1.3;color:#1a0dab}.serp-preview .serp-favicon{display:inline-block;margin-right:5px;vertical-align:top}.serp-preview .serp-url-wrapper{margin:3px 0 5px;font-size:14px;line-height:1.3;color:#202124}.serp-preview .serp-description{font-size:14px;line-height:1.58;word-wrap:break-word;color:#4d5156}.chart{width:100%;margin:0}.chart li{position:relative;display:block;margin-bottom:1.25rem}.chart li:last-child{margin-bottom:0}.chart .chart-bar{position:relative}.chart .chart-bar:before{position:absolute;top:0;left:0;width:100%;height:100%;content:\"\";border-radius:6px;background:#dadfe4}.chart .chart-bar-good span{background:#10ac84}.chart .chart-bar-average span{background:#ff9f43}.chart .chart-bar-bad span{background:#ed5e5e}.chart span{display:block;position:relative;z-index:1;height:13px;margin:0;border-radius:6px;background:rgba(209,236,250,.75);-webkit-animation:drawchart 1s ease-in-out;animation:drawchart 1s ease-in-out}@-webkit-keyframes drawchart{0%{width:0}}@keyframes drawchart{0%{width:0}}#rank-math-circle-progress{position:relative}#rank-math-circle-progress strong{-webkit-transform:translateY(-50%);transform:translateY(-50%);width:100%;font-size:2em;font-weight:700;text-align:center}#rank-math-circle-progress .result-main-score{position:absolute;top:40%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#rank-math-circle-progress .result-main-score div{display:block;margin-top:4px;text-transform:uppercase;color:#7f868d}.progress-bar,.progress{height:4px;border-radius:3px;background:#e9e9ea}.progress-bar .progress-text,.progress .progress-text{display:block;padding-top:6px;color:rgba(117,121,127,.6)}.progress{width:0;background:linear-gradient(-135deg, #ff4492, #434e8f)}.progress-bar{margin-bottom:3rem}.rank-math-result-table{padding:1.5rem 0 0}.rank-math-result-table:first-of-type{padding-top:0}.rank-math-result-table:last-of-type{padding-bottom:30px}.rank-math-result-table .category-title{padding:11px 20px;padding-left:0;border-bottom:1px solid #dadfe4;color:#242628;font-size:17px;font-weight:500}.rank-math-result-table .table-row{display:table;table-layout:fixed;width:100%;border:1px solid #dadfe4;border-top:0;-webkit-box-sizing:border-box;box-sizing:border-box}.rank-math-result-table .table-row.hidden{display:none}.rank-math-result-table .row-title,.rank-math-result-table .row-description{display:table-cell;position:relative;padding:18px 20px 12px}.rank-math-result-table .row-title{width:21%;vertical-align:top}.rank-math-result-table .row-title h3{display:inline-block;margin:0 0 0 34px;font-size:15px;font-weight:500}.rank-math-result-table .row-content{position:relative;padding-left:40px;font-size:14px}.rank-math-result-table .row-content code{display:inline-block;padding:0 3px;border-radius:3px;color:#60666b;background:#f5f6f7}.rank-math-result-table .row-content code.full-width{display:block;margin-top:10px;padding:10px;border-radius:4px}.rank-math-result-table .auto-update-disabled{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-result-table .auto-update-disabled.hidden{display:none}.rank-math-result-table .enable-auto-update{margin-top:-2px}.rank-math-result-filter{display:inline-block;position:relative;padding:18px 16px;text-decoration:none;color:#242628}.rank-math-result-filters{position:relative;z-index:1;margin-top:30px;padding:0 1.875rem;border:1px solid #b5bfc9;border-bottom:0;border-radius:6px 6px 0 0;background:#fff}.rank-math-result-filter:hover,.rank-math-result-filter.active{color:#242628}.rank-math-result-filter.active:after,.rank-math-result-filter:hover:after{display:block;content:\"\";position:absolute;bottom:-2px;left:0;width:100%;height:3px;background:#069de3}.rank-math-result-filter-count{display:inline-block;margin-left:9px;padding:3px 12px;border-radius:16px;color:#069de3;background:rgba(6,157,227,.15);font-size:12px;font-weight:600;pointer-events:none}.rank-math-result-filter.active .rank-math-result-filter-count{color:#fff}.rank-math-result-filter-all.active:after,.rank-math-result-filter-all.active .rank-math-result-filter-count,.rank-math-result-filter-all:hover:after{background:#069de3}.rank-math-result-filter-passed.active:after,.rank-math-result-filter-passed.active .rank-math-result-filter-count,.rank-math-result-filter-passed:hover:after{background:#10ac84}.rank-math-result-filter-warnings.active:after,.rank-math-result-filter-warnings.active .rank-math-result-filter-count,.rank-math-result-filter-warnings:hover:after{background:#ff9f43}.rank-math-result-filter-failed.active:after,.rank-math-result-filter-failed.active .rank-math-result-filter-count,.rank-math-result-filter-failed:hover:after{background:#ed5e5e}.rank-math-result-filter-passed .rank-math-result-filter-count{color:#10ac84;background:rgba(16,172,132,.15)}.rank-math-result-filter-warnings .rank-math-result-filter-count{color:#ff8510;background:rgba(255,159,67,.15)}.rank-math-result-filter-failed .rank-math-result-filter-count{color:#ed5e5e;background:rgba(237,94,94,.15)}.seo-analysis-results{margin-top:30px;border:1px solid #b5bfc9;border-radius:6px;background:#fff}.seo-analysis-results>.components-tab-panel__tabs,.seo-analysis-results>.components-tab-panel__tab-content{padding:0 1.875rem}.seo-analysis-results>.components-tab-panel__tabs{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:4px}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item{height:auto;font-size:15px;font-weight:400;color:#242628}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active .rank-math-result-filter-count{color:#fff}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active::after{height:3px;bottom:-2px;outline:none}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-all::after,.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-all .rank-math-result-filter-count,.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-info::after,.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-info .rank-math-result-filter-count{background:#069de3}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-passed::after,.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-passed .rank-math-result-filter-count{background:#10ac84}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-warnings::after,.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-warnings .rank-math-result-filter-count{background:#ff9f43}.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-failed::after,.seo-analysis-results>.components-tab-panel__tabs .components-tab-panel__tabs-item.is-active.rank-math-result-filter-failed .rank-math-result-filter-count{background:#ed5e5e}.seo-analysis-results>.components-tab-panel__tab-content{padding:1.875rem;border-top:1px solid #b5bfc9}.status-icon{position:absolute;top:18px;border:1px solid rgba(0,0,0,0);border-radius:50em;color:#069de3;background:rgba(6,157,227,.15)}.status-icon.status-info::before{content:\"i\";vertical-align:5px;font-family:sans-serif;font-size:15px;font-weight:bold}.status-icon.status-ok{color:#10ac84;background:rgba(16,172,132,.15)}.status-icon.status-warning{color:#ff8510;background:rgba(255,159,67,.15)}.status-icon.status-warning:before{content:\"!\";font-family:sans-serif;font-size:15px;font-weight:bold;vertical-align:5px}.status-icon.status-fail{color:#ed5e5e;background:rgba(237,94,94,.15)}.info-list{max-height:500px;padding:4px;color:#60666b;border-radius:6px;background:#f5f6f7;overflow:scroll}.info-list li{font-family:Consolas,Monaco,monospace;font-size:13px;margin:0 1px;padding:3px 6px 2px;direction:ltr;overflow-wrap:break-word;unicode-bidi:embed}.analysis-test-how-to-fix,.how-to-fix-wrapper{-webkit-transition:all 200ms linear;transition:all 200ms linear}.analysis-test-how-to-fix .result-action,.how-to-fix-wrapper .result-action{display:none}.rank-math-button.components-button.button-secondary.result-action{margin:-5px 0 0 10px;border-color:#7f868d;color:#fff;background:#7f868d;float:right}.expanded .rank-math-button.components-button.button-secondary.result-action,.rank-math-button.components-button.button-secondary.result-action:hover,.rank-math-button.components-button.button-secondary.result-action:focus{color:#fff !important;background:#069de3 !important;border-color:#069de3 !important}.analysis-test-how-to-fix{line-height:1.5;margin:22px auto 0;padding:15px;border:1px solid #10ac84;border-radius:6px;color:#05372a;background:rgba(16,172,132,.08)}.analysis-test-how-to-fix ul{clear:both;margin-top:0;margin-bottom:0;margin-left:15px;list-style-type:disc}.analysis-test-how-to-fix pre{margin:0;padding:0;color:inherit;background:rgba(0,0,0,0)}.analysis-test-how-to-fix p:first-of-type{margin-top:0}.analysis-test-how-to-fix p:last-of-type{margin-bottom:0}.expanded .analysis-test-how-to-fix{display:block}.keyword-cloud-item{display:inline-block;padding:4px;vertical-align:middle}.competitor_analyzer .rank-math-box>h2{margin:0;text-align:center}.competitor_analyzer .rank-math-box>p{color:#7f868d;text-align:center}.competitor_analyzer #competitor_url{width:400px}.competitor_analyzer .url-form{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;row-gap:.5rem;margin:0 auto}.competitor_analyzer #competitor_url_submit{margin-left:.5rem}.rank-math-seo-analysis-wrap{width:100%;max-width:100%;margin-top:20px;margin-bottom:-65px;-webkit-box-sizing:border-box;box-sizing:border-box}.rank-math-seo-analysis-wrap .components-tab-panel__tab-content>div{position:relative;width:1100px;max-width:100%}.rank-math-seo-analysis-wrap .rank-math-breadcrumbs-wrap{margin-bottom:20px}.rank-math-seo-analysis-wrap .rank-math-breadcrumbs-wrap .divider{margin:0 8px}.rank-math-analyzer-result{padding:0;border:0;border-radius:0 0 6px 6px;background:rgba(0,0,0,0)}@media screen and (max-width: 782px){.rank-math-seo-analysis-wrap .graphs-main,.rank-math-seo-analysis-wrap .graphs-side{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;margin:0}.rank-math-seo-analysis-wrap .chart li{height:170px}.rank-math-seo-analysis-wrap .info-list{overflow:scroll}}@media screen and (max-width: 595px){.rank-math-seo-analysis-wrap header{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.rank-math-seo-analysis-wrap header .analyzer-results-actions{-ms-flex-wrap:wrap;flex-wrap:wrap}.rank-math-seo-analysis-wrap .rank-math-result-table .row-title,.rank-math-seo-analysis-wrap .rank-math-result-table .row-description{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%}}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/class-admin.php","ext":"php","size":2340,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The SEO Analyzer module - admin side functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\SEO_Analysis\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\SEO_Analysis;\n\nuse RankMath\\Module\\Base;\nuse RankMath\\Admin\\Page;\nuse RankMath\\Helper;\nuse RankMath\\KB;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin extends Base {\n\n\t\/**\n\t * Module ID.\n\t *\n\t * @var string\n\t *\/\n\tpublic $id = '';\n\n\t\/**\n\t * Module directory.\n\t *\n\t * @var string\n\t *\/\n\tpublic $directory = '';\n\n\t\/**\n\t * Module page.\n\t *\n\t * @var object\n\t *\/\n\tpublic $page;\n\n\t\/**\n\t * SEO Analyzer object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $analyzer;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'        => 'seo-analysis',\n\t\t\t\t'directory' => $directory,\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\tif ( ( defined( 'DOING_AJAX' ) && DOING_AJAX ) || $this->page->is_current_page() ) {\n\t\t\tinclude_once 'seo-analysis-tests.php';\n\t\t\t$this->analyzer = new SEO_Analyzer();\n\t\t\tHelper::add_json( 'results', $this->analyzer->get_results_from_storage() );\n\t\t\tHelper::add_json( 'analyzeSubpage', $this->analyzer->analyse_subpage );\n\t\t\tHelper::add_json( 'analyzeUrl', $this->analyzer->analyse_url );\n\t\t}\n\t}\n\n\t\/**\n\t * Register admin page.\n\t *\/\n\tpublic function register_admin_page() {\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\n\t\t$this->page = new Page(\n\t\t\t'rank-math-seo-analysis',\n\t\t\t\/\/ Translators: placeholder is the new Rank Math label.\n\t\t\tesc_html__( 'SEO Analyzer', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'position'   => 60,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t'capability' => 'rank_math_site_analysis',\n\t\t\t\t'classes'    => [ 'rank-math-page' ],\n\t\t\t\t'render'     => $this->directory . '\/views\/main.php',\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'wp-components'          => '',\n\t\t\t\t\t\t'rank-math-common'       => '',\n\t\t\t\t\t\t'rank-math-seo-analysis' => $uri . '\/assets\/css\/seo-analysis.css',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'wp-element'             => '',\n\t\t\t\t\t\t'rank-math-components'   => '',\n\t\t\t\t\t\t'rank-math-seo-analysis' => $uri . '\/assets\/js\/seo-analysis.js',\n\t\t\t\t\t],\n\t\t\t\t\t'json'    => [\n\t\t\t\t\t\t'connectUrl'      => Helper::get_connect_url(),\n\t\t\t\t\t\t'isSiteConnected' => Helper::is_site_connected(),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/views\/main.php","ext":"php","size":324,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * SEO Analyzer admin page contents.\n *\n * @package   RANK_MATH\n * @author    Rank Math <support@rankmath.com>\n * @license   GPL-2.0+\n * @link      https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * @copyright 2019 Rank Math\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n\n<div id=\"rank-math-seo-analysis-wrapper\"><\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/seo-analysis\/class-seo-analysis.php","ext":"php","size":2090,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The SEO Analyzer module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\SEO_Analysis\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\SEO_Analysis;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * SEO_Analysis class.\n *\/\nclass SEO_Analysis {\n\n\tuse Hooker;\n\n\t\/**\n\t * Admin object.\n\t *\n\t * @var Admin\n\t *\/\n\tpublic $admin;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_heartbeat() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_admin() ) {\n\t\t\t$this->admin = new Admin();\n\t\t}\n\n\t\tif ( Helper::has_cap( 'rank_math_site_analysis' ) ) {\n\t\t\t$this->action( 'rank_math\/admin_bar\/items', 'admin_bar_items', 11 );\n\t\t}\n\t}\n\n\t\/**\n\t * Add admin bar item.\n\t *\n\t * @param Admin_Bar_Menu $menu Menu class instance.\n\t *\/\n\tpublic function admin_bar_items( $menu ) {\n\t\t$menu->add_sub_menu(\n\t\t\t'seo-analysis',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'SEO Analyzer', 'rank-math' ),\n\t\t\t\t'href'     => Helper::get_admin_url( 'seo-analysis' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Site-wide analysis', 'rank-math' ) ],\n\t\t\t\t'priority' => 50,\n\t\t\t]\n\t\t);\n\n\t\tif ( ! is_admin() && ! is_404() ) {\n\t\t\t$link = is_front_page() ? '' : ( is_ssl() ? 'https' : 'http' ) . ':\/\/' . Param::server( 'HTTP_HOST' ) . Param::server( 'REQUEST_URI' );\n\n\t\t\t$menu->add_sub_menu(\n\t\t\t\t'analyze',\n\t\t\t\t[\n\t\t\t\t\t'title' => $link ? esc_html__( 'Analyze this Page', 'rank-math' ) : esc_html__( 'SEO Analyzer', 'rank-math' ),\n\t\t\t\t\t'href'  => Helper::get_admin_url( 'seo-analysis' ) . ( $link ? '&u=' . rawurlencode( $link ) : '' ),\n\t\t\t\t\t'meta'  => [ 'title' => esc_html__( 'SEO Analysis for this page', 'rank-math' ) ],\n\t\t\t\t],\n\t\t\t\t'seo-analysis'\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Add PRO tab previews.\n\t *\n\t * @param string $file        Include file.\n\t * @param string $current_tab Current tab.\n\t *\n\t * @return string\n\t *\/\n\tpublic function add_tab_previews( $file, $current_tab ) {\n\t\tif ( 'competitor_analyzer' === $current_tab ) {\n\t\t\t$file = __DIR__ . '\/views\/competitor-analysis.php';\n\t\t}\n\n\t\treturn $file;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-bulk-edit-seo-meta.php","ext":"php","size":5936,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Bulk Edit SEO Meta data from Content AI API.\n *\n * @since      1.0.108\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Bulk_Edit_SEO_Meta class.\n *\/\nclass Bulk_Edit_SEO_Meta extends \\WP_Background_Process {\n\n\t\/**\n\t * Action.\n\t *\n\t * @var string\n\t *\/\n\tprotected $action = 'bulk_edit_seo_meta';\n\n\t\/**\n\t * Main instance.\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Bulk_Edit_SEO_Meta\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Bulk_Edit_SEO_Meta ) ) {\n\t\t\t$instance = new Bulk_Edit_SEO_Meta();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Start creating batches.\n\t *\n\t * @param array $data Posts data.\n\t *\/\n\tpublic function start( $data ) {\n\t\tHelper::add_notification(\n\t\t\tesc_html__( 'Bulk editing SEO meta started. It might take few minutes to complete the process.', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'type'    => 'success',\n\t\t\t\t'id'      => 'rank_math_content_ai_posts_started',\n\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t]\n\t\t);\n\n\t\t$action   = $data['action'];\n\t\t$posts    = $data['posts'];\n\t\t$language = $data['language'];\n\n\t\tupdate_option( 'rank_math_content_ai_posts', $posts );\n\t\t$chunks = array_chunk( $posts, 10, true );\n\t\tforeach ( $chunks as $chunk ) {\n\t\t\t$this->push_to_queue(\n\t\t\t\t[\n\t\t\t\t\t'posts'       => $chunk,\n\t\t\t\t\t'action'      => $action,\n\t\t\t\t\t'language'    => $language,\n\t\t\t\t\t'is_taxonomy' => ! empty( $data['is_taxonomy'] ),\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$this->save()->dispatch();\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param string $data Posts to process.\n\t *\/\n\tpublic function wizard( $data ) {\n\t\t$this->task( $data );\n\t}\n\n\t\/**\n\t * Cancel the Bulk edit process.\n\t *\/\n\tpublic function cancel() {\n\t\tdelete_option( 'rank_math_content_ai_posts' );\n\t\tdelete_option( 'rank_math_content_ai_posts_processed' );\n\t\tparent::clear_scheduled_event();\n\t}\n\n\t\/**\n\t * Complete.\n\t *\n\t * Override if applicable, but ensure that the below actions are\n\t * performed, or, call parent::complete().\n\t *\/\n\tprotected function complete() {\n\t\t$posts = get_option( 'rank_math_content_ai_posts' );\n\t\tdelete_option( 'rank_math_content_ai_posts' );\n\t\tdelete_option( 'rank_math_content_ai_posts_processed' );\n\t\tHelper::add_notification(\n\t\t\t\/\/ Translators: placeholder is the number of modified items.\n\t\t\tsprintf( _n( 'SEO meta successfully updated in %d item.', 'SEO meta successfully updated in %d items.', count( $posts ), 'rank-math' ), count( $posts ) ),\n\t\t\t[\n\t\t\t\t'type'    => 'success',\n\t\t\t\t'id'      => 'rank_math_content_ai_posts',\n\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t]\n\t\t);\n\n\t\tparent::complete();\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param array $data Posts to process.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function task( $data ) {\n\t\ttry {\n\t\t\t$posts = json_decode( wp_remote_retrieve_body( $this->get_posts( $data ) ), true );\n\t\t\tif ( empty( $posts['meta'] ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tforeach ( $posts['meta'] as $post_id => $data ) {\n\t\t\t\t$method = ! empty( $data['object_type'] ) && 'term' === $data['object_type'] ? 'update_term_meta' : 'update_post_meta';\n\t\t\t\tif ( ! empty( $data['title'] ) ) {\n\t\t\t\t\t$method( $post_id, 'rank_math_title', sanitize_text_field( $data['title'] ) );\n\t\t\t\t}\n\n\t\t\t\tif ( ! empty( $data['description'] ) ) {\n\t\t\t\t\t$method( $post_id, 'rank_math_description', sanitize_textarea_field( $data['description'] ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->update_content_ai_posts_count( count( $posts['meta'] ) );\n\n\t\t\t$credits = ! empty( $posts['credits'] ) ? $posts['credits'] : [];\n\t\t\tif ( ! empty( $credits['available'] ) ) {\n\t\t\t\t$credits = $credits['available'] - $credits['taken'];\n\t\t\t\tHelper::update_credits( $credits );\n\n\t\t\t\tif ( $credits <= 0 ) {\n\t\t\t\t\t$posts_processed = get_option( 'rank_math_content_ai_posts_processed' );\n\t\t\t\t\tdelete_option( 'rank_math_content_ai_posts' );\n\t\t\t\t\tdelete_option( 'rank_math_content_ai_posts_processed' );\n\t\t\t\t\tHelper::add_notification(\n\t\t\t\t\t\t\/\/ Translators: placeholder is the number of modified posts.\n\t\t\t\t\t\tsprintf( esc_html__( 'SEO meta successfully updated in %d posts. The process was stopped as you have used all the credits on your site.', 'rank-math' ), $posts_processed ),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'type'    => 'success',\n\t\t\t\t\t\t\t'id'      => 'rank_math_content_ai_posts',\n\t\t\t\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\n\t\t\t\t\twp_clear_scheduled_hook( 'wp_bulk_edit_seo_meta_cron' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} catch ( \\Exception $error ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t\/**\n\t * Get Posts to bulk update the data.\n\t *\n\t * @param array $data Data to process.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_posts( $data ) {\n\t\t$connect_data = Admin_Helper::get_registration_data();\n\t\t$posts        = array_values( $data['posts'] );\n\t\t$action       = $data['action'];\n\t\t$language     = $data['language'];\n\t\t$data         = [\n\t\t\t'posts'          => $posts,\n\t\t\t'output'         => $action,\n\t\t\t'language'       => $language,\n\t\t\t'choices'        => 1,\n\t\t\t'username'       => $connect_data['username'],\n\t\t\t'api_key'        => $connect_data['api_key'],\n\t\t\t'site_url'       => $connect_data['site_url'],\n\t\t\t'is_taxonomy'    => ! empty( $data['is_taxonomy'] ),\n\t\t\t'plugin_version' => rank_math()->version,\n\t\t];\n\n\t\treturn wp_remote_post(\n\t\t\tCONTENT_AI_URL . '\/ai\/bulk_seo_meta',\n\t\t\t[\n\t\t\t\t'headers' => [\n\t\t\t\t\t'content-type' => 'application\/json',\n\t\t\t\t],\n\t\t\t\t'timeout' => 60,\n\t\t\t\t'body'    => wp_json_encode( $data ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Keep count of the Content AI posts that were processed.\n\t *\n\t * @param int $count Number of posts processed.\n\t *\n\t * @return void\n\t *\/\n\tprivate function update_content_ai_posts_count( $count ) {\n\t\t$content_ai_posts_count = get_option( 'rank_math_content_ai_posts_processed', 0 ) + $count;\n\t\tupdate_option( 'rank_math_content_ai_posts_processed', $content_ai_posts_count, false );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/js\/content-ai-page.js","ext":"js","size":284232,"mtime":1757324689},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/js\/content-ai.js","ext":"js","size":378511,"mtime":1757324689},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/js\/content-ai-media.js","ext":"js","size":25443,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var e={n:function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,{a:n}),n},d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};e.r(t),e.d(t,{isAutoCompleterOpen:function(){return R},updateAIAttributes:function(){return L},updateData:function(){return N},updatePreviousResults:function(){return U}});var n={};e.r(n),e.d(n,{appUi:function(){return Y}});var r={};e.r(r),e.d(r,{getContentAiAttributes:function(){return $},getData:function(){return z},getPreviousResults:function(){return V},getScore:function(){return J},isAutoCompleterOpen:function(){return K}});var a=jQuery,o=e.n(a),i=lodash,l=wp.i18n,c=wp.apiFetch,u=e.n(c),s=function(e){return new Promise((function(t,n){var r=wp.data.select(\"rank-math-content-ai\").getData();(function(e){return new Promise((function(t,n){var r=new window.Image;r.crossOrigin=\"anonymous\",r.onload=function(){var a=document.createElement(\"canvas\"),o=a.getContext(\"2d\");a.width=r.width,a.height=r.height,o.drawImage(r,0,0);try{var i=e.toLowerCase().split(\".\"),l=i[i.length-1],c=\"image\/jpeg\";switch(l){case\"png\":c=\"image\/png\";break;case\"gif\":c=\"image\/gif\";break;case\"webp\":c=\"image\/webp\";break;case\"svg\":c=\"image\/svg+xml\";break;default:c=\"image\/jpeg\"}var u=a.toDataURL(c);t(u)}catch(e){n(e)}},r.onerror=function(){n(new Error(\"Failed to load image\"))},r.src=e}))})(e).then((function(a){var c=function(e){var t=e.split(\"\/\");return(0,i.last)(t)||\"image.jpg\"}(e);fetch(r.url+\"generate_image_alt_v2\",{method:\"POST\",body:JSON.stringify({images:[{id:c,image:a}],username:r.connectData.username,api_key:r.connectData.api_key,site_url:r.connectData.site_url,plugin_version:rankMath.version,language:r.language}),headers:{\"Content-Type\":\"application\/json\"}}).then((function(e){return e.json()})).then((function(e){if(e.altTexts&&e.altTexts[c])return t(e.altTexts[c]),void function(e){if(!(0,i.isUndefined)(e.credits)){var t=e.credits;(0,i.isEmpty)(t)||(t=(t=t.available-t.taken)<0?0:t,u()({method:\"POST\",path:\"\/rankmath\/v1\/ca\/updateCredits\",data:{credits:t}}).then((function(){wp.data.dispatch(\"rank-math-content-ai\").updateData(\"credits\",t),o()(\".credits-remaining\").length&&o()(\".credits-remaining strong\").text(t)})))}}(e);n((0,l.__)(\"Failed to generate alt text.\",\"rank-math\"))})).catch((function(e){n(e)}))})).catch((function(e){n(e)}))}))},m=function(){return!rankMath.contentAI.isUserRegistered||!rankMath.contentAI.plan||!rankMath.contentAI.credits||rankMath.contentAI.isMigrating},p=wp.element,d=wp.components,f=React;function h(e){return e.startsWith(\"{{\/\")?{type:\"componentClose\",value:e.replace(\/\\W\/g,\"\")}:e.endsWith(\"\/}}\")?{type:\"componentSelfClosing\",value:e.replace(\/\\W\/g,\"\")}:e.startsWith(\"{{\")?{type:\"componentOpen\",value:e.replace(\/\\W\/g,\"\")}:{type:\"string\",value:e}}function g(e,t){let n,r,a=[];for(let o=0;o<e.length;o++){const i=e[o];if(\"string\"!==i.type){if(void 0===t[i.value])throw new Error(`Invalid interpolation, missing component node: \\`${i.value}\\``);if(\"object\"!=typeof t[i.value])throw new Error(`Invalid interpolation, component node must be a ReactElement or null: \\`${i.value}\\``);if(\"componentClose\"===i.type)throw new Error(`Missing opening component token: \\`${i.value}\\``);if(\"componentOpen\"===i.type){n=t[i.value],r=o;break}a.push(t[i.value])}else a.push(i.value)}if(n){const o=function(e,t){const n=t[e];let r=0;for(let a=e+1;a<t.length;a++){const e=t[a];if(e.value===n.value){if(\"componentOpen\"===e.type){r++;continue}if(\"componentClose\"===e.type){if(0===r)return a;r--}}}throw new Error(\"Missing closing component token `\"+n.value+\"`\")}(r,e),i=g(e.slice(r+1,o),t),l=(0,f.cloneElement)(n,{},i);if(a.push(l),o<e.length-1){const n=g(e.slice(o+1),t);a=a.concat(n)}}return a=a.filter(Boolean),0===a.length?null:1===a.length?a[0]:(0,f.createElement)(f.Fragment,null,...a)}function v(e){const{mixedString:t,components:n,throwErrors:r}=e;if(!n)return t;if(\"object\"!=typeof n){if(r)throw new Error(`Interpolation Error: unable to process \\`${t}\\` because components is not an object`);return t}const a=function(e){return e.split(\/(\\{\\{\\\/?\\s*\\w+\\s*\\\/?\\}\\})\/g).map(h)}(t);try{return g(a,n)}catch(e){if(r)throw new Error(`Interpolation Error: unable to process \\`${t}\\` because of error \\`${e.message}\\``);return t}}var b=function(e){var t=e.tags,n=e.components,r=e.children;return n=n||{},!1===(0,i.isUndefined)(t)&&(t=t.split(\",\")).forEach((function(e){var t=e;n[e]=wp.element.createElement(t,null)})),v({mixedString:r,components:n})},w=function(e,t){arguments.length>2&&void 0!==arguments[2]&&arguments[2]&&(t+=\"+Free+Plan\");var n=new URLSearchParams({utm_source:\"Plugin\",utm_medium:t,utm_campaign:\"WP\"});return(0,i.includes)(e,\"?\")||(e+=\"?\"),e+n.toString()},y=function(e){var t=e.width,n=void 0===t?40:t,r=e.showProNotice,a=void 0!==r&&r,o=e.isBulkEdit,c=void 0!==o&&o,u=e.isResearch,s=void 0!==u&&u,m=e.creditsRequired,p=void 0===m?0:m,f=e.isKeywordIntent,h=void 0!==f&&f;if(a)return function(e){return wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center rank-math-content-ai-warning-wrapper\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-box blue-ticks top-20 less-padding \"+e},wp.element.createElement(\"h3\",null,(0,l.__)(\"\ud83d\udd12 This is a PRO-Only Feature\",\"rank-math\")),wp.element.createElement(\"p\",null,(0,l.__)(\"We are sorry but this feature is only available to Rank Math PRO\/Business\/Agency Users. Unlock this feature and many more by getting a Rank Math plan.\",\"rank-math\")),wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,l.__)(\"Bulk Edit SEO Tags\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Advanced Google Analytics 4 Integration\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Keyword Rank Tracker\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Free Content AI Trial\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"SEO Performance Email Reports\",\"rank-math\"))),wp.element.createElement(d.Button,{href:rankMath.links.pro,target:\"_blank\",className:\"button button-primary is-green\"},(0,l.__)(\"Learn More\",\"rank-math\"))))}(n);if(h)return function(e){return wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center rank-math-content-ai-warning-wrapper\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-box blue-ticks top-20 less-padding \"+e},wp.element.createElement(\"h3\",null,(0,l.__)(\"\u26d4\ufe0f Update Required\",\"rank-math\")),wp.element.createElement(\"p\",null,(0,l.__)(\"Your current plugin version does not support this feature. Please update Rank Math PRO to version 3.0.83 or later to unlock full functionality.\",\"rank-math\")),wp.element.createElement(d.Button,{href:rankMath.links.pro,target:\"_blank\",className:\"button button-primary is-green\"},(0,l.__)(\"Update Now\",\"rank-math\"))))}(n);var g=(0,i.isUndefined)(wp.data.select(\"rank-math-content-ai\"))?rankMath.contentAI:wp.data.select(\"rank-math-content-ai\").getData(),v=g.isUserRegistered,y=g.plan,k=\"free\"===y,_=g.credits>p,E=g.isMigrating;if(_&&s&&!k&&g.credits<500&&(_=!1),v&&y&&_&&!E&&!k)return null;var A,O=\"width-\"+n;return!v||!y||_&&k?wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center rank-math-content-ai-warning-wrapper\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-box blue-ticks top-20 less-padding \"+O},wp.element.createElement(\"h3\",null,(0,l.__)(\"\ud83d\ude80 Supercharge Your Content With AI\",\"rank-math\")),wp.element.createElement(\"p\",null,!v&&!c&&(0,l.__)(\"Start using Content AI by connecting your RankMath.com Account\",\"rank-math\"),v&&!y&&!c&&!k&&(0,l.__)(\"To access this Content AI feature, you need to have an active subscription plan.\",\"rank-math\"),v&&!c&&k&&(0,l.__)(\"To access this Content AI feature, you have to purchase a Content AI Subscription.\",\"rank-math\"),c&&(0,l.__)(\"You are one step away from unlocking this premium feature along with many more.\",\"rank-math\")),function(e,t,n){return t?wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Article Generation\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Bulk Update Your SEO Meta using AI\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Get Access to 40+ AI SEO Tools\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"125+ Expert-Written Prompts\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Competitor Content Research\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click WooCommerce Product Descriptions\",\"rank-math\"))):n?wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Article Generation\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Competitor Research\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"On-Page SEO Suggestions\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Bulk SEO Meta\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"125+ Pre-Built Prompts\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Multiple RankBot Sessions\",\"rank-math\"))):40===e?wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Article Generation\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click SEO Content\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click SEO Meta\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"40+ Specialized AI Tools\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"1-Click Competitor Research\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"125+ Pre-Built Prompts\",\"rank-math\"))):wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,l.__)(\"Gain access to 40+ advanced AI tools, empowering your content strategy.\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Experience the revolutionary AI-powered Content Editor for unparalleled efficiency.\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,l.__)(\"Engage with RankBot, your personal AI Chat Assistant, for real-time assistance.\",\"rank-math\")))}(n,c,k),!v&&wp.element.createElement(d.Button,{href:rankMath.contentAI.connectSiteUrl,className:\"button button-primary is-green\"},(0,l.__)(\"Connect Now\",\"rank-math\")),v&&(!y||k)&&wp.element.createElement(d.Button,{href:w(rankMath.links[\"content-ai\"]+\"?play-video=ioPeVIntJWw&\",\"Buy+Plan+Button\",k),className:\"button button-primary is-green\",target:\"_blank\"},(0,l.__)(\"Learn More\",\"rank-math\")))):E?wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center rank-math-content-ai-warning-wrapper\"},wp.element.createElement(\"div\",{style:{textAlign:\"center\"},className:\"rank-math-cta-box less-padding top-20 \"+O},wp.element.createElement(\"h3\",null,(0,l.__)(\"Server Maintenance Underway\",\"rank-math\")),wp.element.createElement(\"p\",null,(0,l.__)(\"We are working on improving your Content AI experience. Please wait for 5 minutes and then refresh to start using the optimized Content AI. If you see this for more than 5 minutes, please \",\"rank-math\"),wp.element.createElement(\"a\",{href:rankMath.links.support,target:\"_blank\",rel:\"noreferrer\"},(0,l.__)(\"reach out to the support team.\",\"rank-math\")),(0,l.__)(\" We are sorry for the inconvenience.\",\"rank-math\")))):wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center rank-math-content-ai-warning-wrapper\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-box less-padding top-20 \"+O},wp.element.createElement(\"h3\",null,(0,l.__)(\"\u26d4\ufe0f Content AI Credit Alert!\",\"rank-math\")),wp.element.createElement(\"p\",null,(A=g.resetDate)?wp.element.createElement(b,{components:{strong:wp.element.createElement(\"strong\",null)}},(0,l.sprintf)((0,l.__)(\"Your monthly Content AI credits have been fully utilized. You can wait till %s for your credits to refresh or upgrade to continue enjoying seamless content creation\",\"rank-math\"),\"{{strong}}\"+A+\"{{\/strong}}\")):(0,l.__)(\"Your monthly Content AI credits have been fully utilized. To continue enjoying seamless content creation, simply click the button below to upgrade your plan and access more credits.\",\"rank-math\")),wp.element.createElement(d.Button,{href:w(rankMath.links[\"content-ai\"]+\"?play-video=ioPeVIntJWw&\",\"Buy+Credits+Button\",k),className:\"button button-primary is-green\",target:\"_blank\"},(0,l.__)(\"Learn More\",\"rank-math\")),wp.element.createElement(d.Button,{variant:\"link\",href:w(rankMath.links[\"content-ai-restore-credits\"],\"Buy+Credits+Button\",k),className:\"button button-secondary\",target:\"_blank\"},(0,l.__)(\"Missing Credits?\",\"rank-math\"))))},k=function(e){var t=e.showProNotice,n=void 0!==t&&t,r=e.isBulkEdit,a=void 0!==r&&r,l=e.creditsRequired,c=void 0===l?0:l,u=e.isKeywordIntent,s=void 0!==u&&u;(0,i.isNull)(document.getElementById(\"rank-math-content-ai-modal-wrapper\"))&&o()(\"#wpwrap\").append('<div id=\"rank-math-content-ai-modal-wrapper\"><\/div>'),setTimeout((function(){(0,p.render)(wp.element.createElement(d.Modal,{className:\"rank-math-contentai-modal rank-math-modal rank-math-error-modal\",shouldCloseOnClickOutside:!1,onRequestClose:function(e){(0,i.isUndefined)(e)||(o()(\".components-modal__screen-overlay\").remove(),document.getElementById(\"rank-math-content-ai-modal-wrapper\").remove(),document.body.classList.remove(\"modal-open\"))}},wp.element.createElement(y,{width:100,showProNotice:n,isBulkEdit:a,creditsRequired:c,isKeywordIntent:s})),document.getElementById(\"rank-math-content-ai-modal-wrapper\"))}),100)};function _(e){return _=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_(e)}function E(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function A(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?E(Object(n),!0).forEach((function(t){O(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):E(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function O(e,t,n){return(t=P(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e,t){if(\"object\"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==_(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===_(t)?t:String(t)}var S=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.injectGenerateAltTextButton(),o()(window).on(\"elementor:init\",(function(){t.injectGenerateAltTextButton()}))}var t,n,r;return t=e,n=[{key:\"injectGenerateAltTextButton\",value:function(){var e=this;void 0!==wp.media&&void 0!==wp.media.view.Attachment.Details.TwoColumn&&(wp.media.view.Attachment.Details.TwoColumn=wp.media.view.Attachment.Details.TwoColumn.extend({template:function(t){return e.getTemplate(\"attachment-details-two-column\",t,!0)},events:A(A({},wp.media.view.Attachment.Details.TwoColumn.prototype.events),{},{\"click .rank-math-generate-alt-button\":this.generateAltTextForImage})})),\"classic\"===rankMath.currentEditor&&(wp.media.view.ImageDetails=wp.media.view.ImageDetails.extend({template:function(t){return e.getTemplate(\"image-details\",t)},events:A(A({},wp.media.view.ImageDetails.prototype.events),{},{\"click .rank-math-generate-alt-button\":this.generateAltTextForImage})})),void 0!==wp.media&&(wp.media.view.Attachment.Details=wp.media.view.Attachment.Details.extend({template:function(t){return e.getTemplate(\"attachment-details\",t)},events:A(A({},wp.media.view.Attachment.Details.prototype.events),{},{\"click .rank-math-generate-alt-button\":this.generateAltTextForImage})}))}},{key:\"getTemplate\",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=wp.media.template(e)(t),a=document.createElement(\"div\");if(a.innerHTML=r,!a.querySelector(\"#alt-text-description\"))return r;var o='<button class=\"rank-math-generate-alt-button\" data-two-column=\"'+n+'\"><i class=\"rm-icon rm-icon-content-ai\"><\/i>'+(0,l.__)(\"Generate Alt\",\"rank-math\")+\"<\/button><br \/>\",i=a.querySelector(\"#alt-text-description\");return i.innerHTML=o+i.innerHTML,a.innerHTML}},{key:\"generateAltTextForImage\",value:function(e){var t=this;if(e.preventDefault(),e.stopPropagation(),m()||wp.data.select(\"rank-math-content-ai\").getData().credits<50)return o()(\".media-modal-close\").trigger(\"click\"),void k({creditsRequired:50});var n=this.model.attributes.url;if(n){var r=e.currentTarget,a=r.innerHTML;r.disabled=!0,r.innerHTML=(0,l.__)(\"Generating\u2026\",\"rank-math\");var i=\"true\"===r.getAttribute(\"data-two-column\");s(n).then((function(e){t.model.set(\"alt\",e),\"classic\"!==rankMath.currentEditor&&t.model.save();var n=i?\"#attachment-details-two-column-alt-text\":\"#attachment-details-alt-text\",o=document.querySelector(n);o&&(o.value=e),r.innerHTML=a})).catch((function(e){console.error(e),r.classList.add(\"failed\"),r.innerHTML=(0,l.__)(\"Failed\",\"rank-math\"),setTimeout((function(){r.classList.remove(\"failed\"),r.innerHTML=a}),3e3)})).finally((function(){r.disabled=!1}))}}}],n&&T(t.prototype,n),r&&T(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),e}(),j=S,C=wp.data,M=wp.blockEditor;function I(e,t){return{type:\"RANK_MATH_APP_UI\",key:e,value:t}}function x(e){return x=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},x(e)}function B(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function D(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==x(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==x(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===x(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function R(e){if(!e)return I(\"isAutoCompleterOpen\",e);var t=(0,C.select)(\"core\/block-editor\").getSelectedBlock();(0,i.isNull)(t)||(0,(0,C.dispatch)(M.store).removeBlock)(t.clientId);return I(\"isAutoCompleterOpen\",e)}function L(e,t){var n=(0,C.select)(\"rank-math-content-ai\").getContentAiAttributes();return n[e]=\"language\"!==e||t?t:rankMath.contentAI.language,I(\"contentAiAttributes\",n)}function N(e,t){var n=(0,C.select)(\"rank-math-content-ai\").getData();return n[e]=t,I(\"data\",function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?B(Object(n),!0).forEach((function(t){D(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):B(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},n))}function U(e){return I(\"previousResults\",e)}function F(e){return F=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},F(e)}function G(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function H(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?G(Object(n),!0).forEach((function(t){W(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):G(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function W(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==F(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==F(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===F(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var q={isAutoCompleterOpen:!1,contentAiAttributes:{},data:rankMath.contentAI,previousResults:[]};function Y(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:q,t=arguments.length>1?arguments[1]:void 0;return\"RANK_MATH_APP_UI\"===t.type?H(H({},e),{},W({},t.key,t.value)):e}function K(e){return e.appUi.isAutoCompleterOpen}function $(e){return e.appUi.contentAiAttributes}function z(e){return e.appUi.data}function J(e){var t=e.appUi.data.score;return!t||(0,i.isEmpty)(Object.values(t))?0:(t=(0,i.map)(Object.values(t),i.toNumber),(0,i.round)((0,i.sum)(t)\/t.length))}function V(e){return e.appUi.previousResults}(0,C.register)((0,C.createReduxStore)(\"rank-math-content-ai\",{reducer:(0,C.combineReducers)(n),selectors:r,actions:t}));function Q(e){return Q=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Q(e)}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,(a=r.key,o=void 0,o=function(e,t){if(\"object\"!==Q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==Q(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(a,\"string\"),\"symbol\"===Q(o)?o:String(o)),r)}var a,o}var Z=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.data=wp.data.select(\"rank-math-content-ai\").getData(),new j,setTimeout((function(){t.addBulkGenerateButton(t.data)}),1e3),this.altTextField=document.querySelector(\"#attachment_alt\"),this.imageUrl=document.querySelector(\"#attachment_url\"),this.altTextField&&this.imageUrl&&this.injectGenerateAltTextButton()}var t,n,r;return t=e,(n=[{key:\"addBulkGenerateButton\",value:function(e){var t=o()(\".media-toolbar-secondary\");if(!(t.length<=0)){var n='<i class=\"rm-icon rm-icon-content-ai\"><\/i> '+(0,l.__)(\"Generate Alt with AI\",\"rank-math\"),r=o()('<button class=\"button media-button button-primary button-large delete-selected-button rank-math-bulk-generate-button hidden\" disabled=\"disabled\">'+n+\"<\/button>\");t.prepend(r),r.on(\"click\",(function(){if(m()||e.credits<50)k({creditsRequired:50});else{var t=o()(\".attachment.selected\").map((function(){return o()(this).data(\"id\")})).get();t.length<=0||(r[0].innerHTML=(0,l.__)(\"Generating\u2026\",\"rank-math\"),u()({method:\"POST\",path:\"\/rankmath\/v1\/ca\/generateAlt\",data:{attachmentIds:t}}).catch((function(e){console.log(e),r[0].innerHTML=n})).then((function(){r[0].innerHTML=n,window.location.reload()})))}}));var a=wp.media.frame.state(\"library\").get(\"selection\");(0,i.isUndefined)(a)||(a.on(\"selection:single\",(function(){r[0].removeAttribute(\"disabled\")})),a.on(\"selection:unsingle\",(function(){o()(\".attachment.selected\").length||r[0].setAttribute(\"disabled\",\"disabled\")})))}}},{key:\"injectGenerateAltTextButton\",value:function(){var e=document.createElement(\"button\");e.classList.add(\"rank-math-generate-alt-button\"),e.innerHTML='<i class=\"rm-icon rm-icon-content-ai\"><\/i>'+(0,l.__)(\"Generate Alt\",\"rank-math\"),this.altTextField.insertAdjacentElement(\"afterend\",e),this.altTextField.insertAdjacentHTML(\"afterend\",\"<br>\"),this.generateAltTextButton=e,e.addEventListener(\"click\",this.generateAltTextForImage.bind(this))}},{key:\"generateAltTextForImage\",value:function(e){var t=this;if(e.preventDefault(),e.stopPropagation(),m()||this.data.credits<50)k({creditsRequired:50});else{var n=this.imageUrl.value;this.generateAltTextButton.innerHTML=(0,l.__)(\"Generating\u2026\",\"rank-math\"),s(n).then((function(e){t.altTextField.value=e,t.generateAltTextButton.innerHTML='<i class=\"rm-icon rm-icon-content-ai\"><\/i>'+(0,l.__)(\"Generate Alt\",\"rank-math\")})).catch((function(e){console.error(\"Failed to generate alt text:\",e),t.generateAltTextButton.classList.add(\"failed\"),t.generateAltTextButton.innerHTML=(0,l.__)(\"Failed\",\"rank-math\"),setTimeout((function(){t.generateAltTextButton.classList.remove(\"failed\"),t.generateAltTextButton.innerHTML='<i class=\"rm-icon rm-icon-content-ai\"><\/i>'+(0,l.__)(\"Generate Alt\",\"rank-math\")}),2e3)}))}}}])&&X(t.prototype,n),r&&X(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),e}();window.addEventListener(\"load\",(function(){new Z}))}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/img\/loader.svg","ext":"svg","size":417,"mtime":1757324689,"type":"text","content":"<svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" stroke=\"#6c7781\"><g fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(1 1)\" stroke-width=\"2\"><circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\"\/><path d=\"M36 18c0-9.94-8.06-18-18-18\"><animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\" dur=\"1s\" repeatCount=\"indefinite\"\/><\/path><\/g><\/g><\/svg>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/css\/content-ai-dark.css","ext":"css","size":8734,"mtime":1757324689,"type":"text","content":".tab-header,.chat-container,.chat-sidebar,.chat-input,.chat-input textarea,.chat-input .chat-input-textarea,.chat-input-actions .chat-input-buttons,div.form-field .components-base-control input[type=text]:focus,div.form-field .components-base-control input[type=text]:active,.rank-math-contentai-modal.rank-math-modal .components-text-control__input,.rank-math-contentai-modal-overlay .rank-math-modal .column .footer input,.components-modal__frame.rank-math-contentai-modal.rank-math-modal .components-input-control__container,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input{background:rgba(0,0,0,0)}.rank-math-sidebar-panel .components-panel__body .chat-input-actions .button:hover{border-color:#212f3e !important;background:#212f3e !important}.rank-math-contentai-modal-overlay .rank-math-modal .column .footer input,.components-modal__frame.rank-math-contentai-modal.rank-math-modal .components-input-control__container{color:#fff}.rank-math-contentai-modal-overlay .rank-math-modal .column.column-output .tutorial{background:#686868}.rank-math-contentai-modal.rank-math-modal .components-text-control__input{border:1px solid #7f868d}.rank-math-prompt-modal .grid .column-first .components-search-control:after{top:5px}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:hover,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:focus,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:active{background:rgba(0,0,0,0)}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button{margin-top:15px}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button{margin-top:15px}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-search-control__icon button{margin-top:15px}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button svg{fill:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button svg{fill:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-search-control__icon button svg{fill:#7f868d}.content-ai-tagify .tagify .tagify__tag{background:#686868}.content-ai-header .components-input-control__container{background:rgba(0,0,0,0)}.rank-math-sidebar-panel .components-panel__body .rank-math-tab-content-chat .button:hover:not(:disabled){background:rgba(0,0,0,0);color:#ed5e5e}.rank-math-contentai-modal-overlay ::-webkit-input-placeholder{color:#616263}div.form-field .components-base-control .components-toggle-group-control{background:#686868}div.form-field .components-base-control .components-toggle-group-control .components-button{color:#fff}.rank-math-tabs button.rank-math-content-ai{background-color:rgba(0,0,0,0) !important}.rank-math-tabs .rank-math-ca-keywords-wrapper{background-color:rgba(0,0,0,.15)}.rank-math-tabs .rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper{color:#e0e1e3}.rank-math-tabs .rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper input{background-color:rgba(0,0,0,.1)}.rank-math-tabs .rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper .rank-math-ca-force-update{background:#33363b}.rank-math-tabs div.rank-math-contentai-tab-content-questions h3{color:#e0e1e3;background-color:rgba(0,0,0,.15)}.rank-math-tabs .rank-math-ca-recommendations>div h4,.rank-math-tabs .rank-math-ca-recommendations>div strong,.rank-math-tabs .rank-math-ca-recommendations>div span{color:#e0e1e3}.rank-math-tabs .rank-math-ca-recommendations>div.has-children .submenu div h4{color:#26292c}.rank-math-tabs .rank-math-contentai-tab-content-questions .rank-math-section-heading h2,.rank-math-tabs .rank-math-contentai-tab-content-questions button i,.rank-math-tabs .rank-math-contentai-tab-content-related-searches .rank-math-section-heading h2,.rank-math-tabs .rank-math-contentai-tab-content-related-searches button i{color:#e0e1e3}.rank-math-tabs .rank-math-contentai-tab-content-questions button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link),.rank-math-tabs .rank-math-contentai-tab-content-related-searches button:not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link){background:#26292c}.rank-math-tabs .rank-math-ai-tools .components-toggle-group-control{background-color:rgba(0,0,0,0)}.rank-math-tabs .rank-math-ai-tools .content-ai-tagify,.rank-math-tabs .rank-math-ai-tools .tagify{background-color:rgba(0,0,0,0)}.rank-math-tabs .rank-math-ai-tools .tagify__tag{background:#686868}.rank-math-tabs .rank-math-tab-content-ai-tools .components-search-control__input{min-height:30px;background-color:rgba(0,0,0,0) !important}.rank-math-tabs .rank-math-tab-content-ai-tools button.rank-math-box{background-color:rgba(0,0,0,0)}.rank-math-tabs .rank-math-tab-content-ai-tools button.rank-math-box h3{color:#fff}.rank-math-contentai-modal-overlay .rank-math-modal .column,.rank-math-contentai-modal-overlay .rank-math-modal .footer{background-color:rgba(0,0,0,0) !important}.rank-math-contentai-modal-overlay .rank-math-modal .column .tutorial,.rank-math-contentai-modal-overlay .rank-math-modal .footer .tutorial{background-color:#222}.rank-math-contentai-modal-overlay .rank-math-modal .column .inner-wrapper .output-item .output-actions{background:rgba(0,0,0,0) !important}.rank-math-contentai-modal-overlay .rank-math-modal .column .inner-wrapper .output-item .word-count,.rank-math-contentai-modal-overlay .rank-math-modal .column .inner-wrapper .output-item .content{color:#fff !important}.rank-math-contentai-modal-overlay .rank-math-modal .content-ai-tagify .tagify{background-color:rgba(0,0,0,0)}.rank-math-contentai-modal-overlay .rank-math-modal .content-ai-tagify .tagify .tagify__tag{background-color:#686868}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading:after{background-color:rgba(0,0,0,.85)}div.rank-math-content-ai-wrapper .rank-math-ca-keywords-wrapper,div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title,div.rank-math-content-ai-wrapper .rank-math-ca-recommendations>div,div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .components-tab-panel__tabs{border-color:#34383c}div.rank-math-content-ai-wrapper .rank-math-ca-keywords-wrapper .rank-math-ca-keywords-wrapper,div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title .rank-math-ca-keywords-wrapper,div.rank-math-content-ai-wrapper .rank-math-ca-recommendations>div .rank-math-ca-keywords-wrapper,div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .components-tab-panel__tabs .rank-math-ca-keywords-wrapper{border-color:rgba(0,0,0,0);background-color:rgba(0,0,0,0)}div.rank-math-content-ai-wrapper .rank-math-ca-keywords-wrapper.has-children .submenu,div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title.has-children .submenu,div.rank-math-content-ai-wrapper .rank-math-ca-recommendations>div.has-children .submenu,div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .components-tab-panel__tabs.has-children .submenu{background-color:#26292c}div.rank-math-content-ai-wrapper .rank-math-ca-keywords-wrapper.has-children .submenu div h4,div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title.has-children .submenu div h4,div.rank-math-content-ai-wrapper .rank-math-ca-recommendations>div.has-children .submenu div h4,div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .components-tab-panel__tabs.has-children .submenu div h4{color:#e0e1e3}div.rank-math-content-ai-wrapper .rank-math-ca-keywords-wrapper.has-children.show .submenu:before,div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title.has-children.show .submenu:before,div.rank-math-content-ai-wrapper .rank-math-ca-recommendations>div.has-children.show .submenu:before,div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .components-tab-panel__tabs.has-children.show .submenu:before{border-color:rgba(0,0,0,0) rgba(0,0,0,0) #26292c rgba(0,0,0,0)}div.rank-math-content-ai-wrapper .rank-math-ca-score .score-dot{border-color:#404349}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/css\/content-ai-page.css","ext":"css","size":110376,"mtime":1757324689,"type":"text","content":":root{--rankmath-wp-adminbar-height: 0}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}div.rank-math-modal{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;overflow-y:scroll;width:665px;max-width:100%;height:94vh;max-height:735px;border:0;-webkit-box-shadow:0 5px 30px 0 rgba(0,0,0,.2);box-shadow:0 5px 30px 0 rgba(0,0,0,.2)}div.rank-math-modal .components-modal__content{padding:0;margin-top:50px}div.rank-math-modal .components-modal__content:before{margin:0}div.rank-math-modal .components-panel__body{border:0}div.rank-math-modal .components-modal__header{height:51px;margin:0;padding:0 1rem;border-bottom:1px solid #dadfe4;z-index:999}div.rank-math-modal .components-modal__header .components-modal__header-heading{font-size:14px}div.rank-math-modal .components-modal__header button{padding:0 10px}@media(max-width: 782px){.rank-math-modal{width:100%;height:100%;max-height:100%}}.rank-math-focus-keyword .tagify{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-ms-flex-wrap:wrap;flex-wrap:wrap;border:1px solid #8d96a0;padding:0;cursor:text;position:relative;border-radius:4px;margin-bottom:16px;overflow:auto}@-webkit-keyframes tags--bump{30%{-webkit-transform:scale(1.2);transform:scale(1.2)}}@keyframes tags--bump{30%{-webkit-transform:scale(1.2);transform:scale(1.2)}}.rtl #side-sortables .rank-math-focus-keyword .tagify{padding-right:5px}.rank-math-focus-keyword .tagify:hover{border-color:#8d96a0}.rank-math-focus-keyword .tagify.tagify--focus{border-color:#00a0d2;-webkit-box-shadow:0 0 0 1px #00a0d2;box-shadow:0 0 0 1px #00a0d2}.rank-math-focus-keyword .tagify+input,.rank-math-focus-keyword .tagify+textarea{display:none !important}.tagify__tag+.rank-math-focus-keyword .tagify__tag{min-width:20px}.tagify__tag+.rank-math-focus-keyword .tagify__tag::before{display:none}.rank-math-focus-keyword .tagify__tag{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:5px 0 5px 5px;position:relative;z-index:1;cursor:pointer;padding:4px 6px 4px 10px;border-radius:14px;font-size:14px;line-height:17px}.rank-math-focus-keyword .tagify__tag:focus{outline:none}.rank-math-focus-keyword .tagify__tag.tagify--editable>div{color:#000}.rank-math-focus-keyword .tagify__tag.dragsort--dragElem{display:none}.rank-math-focus-keyword .tagify__tag>div{vertical-align:top;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:100%;line-height:inherit;border-radius:3px;-webkit-transition:none;transition:none;padding:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:inherit}.rank-math-focus-keyword .tagify__tag>div:before{color:green;-webkit-box-shadow:none;box-shadow:none;position:relative}.rank-math-focus-keyword .tagify__tag>div>*{white-space:pre-wrap;overflow:hidden;text-overflow:ellipsis;display:inline-block;vertical-align:top;min-width:10px;line-height:17px;max-width:initial;-webkit-transition:none;transition:none}.rank-math-focus-keyword .tagify__tag>div>*[contenteditable]{outline:none;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:text;margin:-2px;padding:2px}.rank-math-focus-keyword .tagify__tag.tagify--noAnim{-webkit-animation:none;animation:none}.rank-math-focus-keyword .tagify__tag.tagify--hide{width:0 !important;padding-left:0;padding-right:0;margin-left:0;margin-right:0;opacity:0;-webkit-transform:scale(0);transform:scale(0);-webkit-transition:.3s;transition:.3s;pointer-events:none}.rank-math-focus-keyword .tagify__tag.tagify--mark div::before{-webkit-animation:none;animation:none}.rank-math-focus-keyword .tagify__tag:first-child .tagify__tag-text:before{font-family:\"dashicons\";font-size:12px;margin-right:5px;vertical-align:-1px;display:inline-block;content:\"\uf155\";text-align:center;color:currentColor;border-radius:50%}.rank-math-focus-keyword .tagify__tag.bad-fk{color:#ef877f;background:#fce9e8}.rank-math-focus-keyword .tagify__tag.bad-fk .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.bad-fk .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.bad-fk .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#fce9e8 !important}.rank-math-focus-keyword .tagify__tag.bad-fk.selected{color:#fff;background:#f29c96}.rank-math-focus-keyword .tagify__tag.bad-fk.selected .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.bad-fk.selected .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.bad-fk.selected .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#f29c96 !important}.rank-math-focus-keyword .tagify__tag.bad-fk.selected .tagify__tag__removeBtn{color:#fff;background:#e4827b}.rank-math-focus-keyword .tagify__tag.bad-fk.selected .tagify__tag__removeBtn:hover{background:#de746d}.rank-math-focus-keyword .tagify__tag.bad-fk .tagify__tag__removeBtn{color:#fff;background:#f6d1cf}.rank-math-focus-keyword .tagify__tag.bad-fk .tagify__tag__removeBtn:hover{background:#f5c0bc}.rank-math-focus-keyword .tagify__tag.ok-fk{color:#ff9f13;background:#ffeccf}.rank-math-focus-keyword .tagify__tag.ok-fk .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.ok-fk .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.ok-fk .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#ffeccf !important}.rank-math-focus-keyword .tagify__tag.ok-fk.selected{color:#fff;background:#ffbe5f}.rank-math-focus-keyword .tagify__tag.ok-fk.selected .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.ok-fk.selected .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.ok-fk.selected .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#ffbe5f !important}.rank-math-focus-keyword .tagify__tag.ok-fk.selected .tagify__tag__removeBtn{color:#fff;background:#f3ab42}.rank-math-focus-keyword .tagify__tag.ok-fk.selected .tagify__tag__removeBtn:hover{background:#eea232}.rank-math-focus-keyword .tagify__tag.ok-fk .tagify__tag__removeBtn{color:#fff;background:#fbd6a0}.rank-math-focus-keyword .tagify__tag.ok-fk .tagify__tag__removeBtn:hover{background:#fccc86}.rank-math-focus-keyword .tagify__tag.good-fk{color:#67c267;background:#dff2df}.rank-math-focus-keyword .tagify__tag.good-fk .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.good-fk .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.good-fk .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#dff2df !important}.rank-math-focus-keyword .tagify__tag.good-fk.selected{color:#fff;background:#79c979}.rank-math-focus-keyword .tagify__tag.good-fk.selected .rank-math-keyword-intent-container:hover::before,.rank-math-focus-keyword .tagify__tag.good-fk.selected .rank-math-keyword-intent-container:hover::after,.rank-math-focus-keyword .tagify__tag.good-fk.selected .rank-math-keyword-intent-container .rank-math-keyword-intent-wrapper.is-show-intent{background:#79c979 !important}.rank-math-focus-keyword .tagify__tag.good-fk.selected .tagify__tag__removeBtn{color:#fff;background:#6ab06a}.rank-math-focus-keyword .tagify__tag.good-fk.selected .tagify__tag__removeBtn:hover{background:#60a560}.rank-math-focus-keyword .tagify__tag.good-fk .tagify__tag__removeBtn{color:#fff;background:#b2dcb2}.rank-math-focus-keyword .tagify__tag.good-fk .tagify__tag__removeBtn:hover{background:#9ad19a}.rank-math-focus-keyword .tagify__tag__removeBtn{-webkit-box-ordinal-group:6;-ms-flex-order:5;order:5;font:14px\/18px Dashicons;color:#fff;height:18px;width:18px;text-align:center;cursor:pointer;margin-left:4px;border-radius:50px;background:rgba(0,0,0,.35)}.rank-math-focus-keyword .tagify__tag__removeBtn::after{content:\"\uf335\"}.rank-math-focus-keyword .tagify__tag__removeBtn:hover{color:#fff !important;background:rgba(86,86,86,.35);border-radius:50px}.rank-math-focus-keyword .tagify__tag__removeBtn:hover+div>span{opacity:1}.rank-math-focus-keyword .tagify--hasMaxTags .tagify__input{display:none}.rank-math-focus-keyword .tagify__input{display:block;min-width:20px;margin:5px;padding:7px 6px 6px;line-height:1;position:relative}.rank-math-focus-keyword .tagify__input::before{content:attr(data-placeholder);-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:1;-webkit-transform:none;transform:none;color:rgba(0,0,0,.25);color:var(--placeholder-color-focus);height:1em;line-height:1em;margin:auto 0;white-space:nowrap;pointer-events:none}.rank-math-focus-keyword .tagify__input:after{content:attr(data-suggest);display:inline-block;vertical-align:middle;position:absolute;min-width:calc(100% - 1.5em);text-overflow:ellipsis;overflow:hidden;white-space:pre;color:var(--tag-text-color);opacity:.3;pointer-events:none;max-width:100px}.rank-math-focus-keyword .tagify__input:empty::before{-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:.5;-webkit-transform:none;transform:none;width:auto}.rank-math-focus-keyword .tagify__input:focus{outline:none}.rank-math-focus-keyword .tagify__input:focus::before{-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:0;-webkit-transform:translatex(6px);transform:translatex(6px);transition:.2s ease-out;opacity:0;-webkit-transform:translateX(6px);transform:translateX(6px);min-width:0px;display:none}@supports(-moz-appearance: none){.rank-math-focus-keyword .tagify__input:focus::before{display:none}}.rank-math-focus-keyword .tagify__input:focus:empty::before{-webkit-transition:.2s ease-out;transition:.2s ease-out;opacity:.3;-webkit-transform:none;transform:none}@supports(-moz-appearance: none){.rank-math-focus-keyword .tagify__input:focus:empty::before{display:inline-block}}.rank-math-focus-keyword .tagify__input::after{content:attr(data-suggest);color:#000;opacity:.3;pointer-events:none}.tagify__dropdown{position:absolute;z-index:99999999;background:#fff;max-height:350px;overflow:auto;border:1px solid #e8e9ec;border-radius:4px;-webkit-box-shadow:0 9px 18px 0 rgba(25,30,35,.18);box-shadow:0 9px 18px 0 rgba(25,30,35,.18);-webkit-box-sizing:border-box;box-sizing:border-box}.tagify__dropdown__item{-webkit-box-sizing:inherit;box-sizing:inherit;padding:6px 13px;cursor:pointer;position:relative;outline:none;color:#717780;border-top:1px solid #edf0f2}.tagify__dropdown__item--active,.tagify__dropdown__item:active{background:#0095cd;color:#fff}body.rtl .rank-math-focus-keyword .tagify__tag{padding-right:10px;padding-left:6px}body.rtl .rank-math-focus-keyword .tagify__tag .tagify__tag__removeBtn{margin-right:4px;margin-left:0}body.rtl .rank-math-focus-keyword .tagify__tag:first-child .tagify__tag-text:before{margin-right:0;margin-left:5px}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}.module-listing .grid,#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.blurred{pointer-events:none;-webkit-filter:blur(2px);filter:blur(2px)}.blurred:after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";background:rgba(248,249,250,.1)}#rank-math-pro-cta{position:relative;z-index:100;margin-top:2rem}#rank-math-pro-cta.center{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:0}#rank-math-pro-cta.analytics{width:560px;max-width:100%;margin:2rem auto 0}#rank-math-pro-cta.no-margin{margin:0}#rank-math-pro-cta .rank-math-cta-box{-ms-flex-item-align:center;align-self:center;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;max-width:90%;padding:2rem 1.5rem;border:2px solid #6666c3;border-radius:4px;background:#fff;-webkit-box-shadow:0 4px 14px 0 rgba(34,36,55,.28);box-shadow:0 4px 14px 0 rgba(34,36,55,.28);justify-self:center}#rank-math-pro-cta .rank-math-cta-box.no-shadow{-webkit-box-shadow:none;box-shadow:none}#rank-math-pro-cta .rank-math-cta-box.no-padding{padding:0}#rank-math-pro-cta .rank-math-cta-box.no-border{border:none}#rank-math-pro-cta .rank-math-cta-box.less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-box.less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.top-20{-ms-flex-item-align:start;align-self:flex-start;margin-top:10%}#rank-math-pro-cta .rank-math-cta-box h3{font-size:1.25rem;font-weight:600;line-height:1.4;margin-top:0;margin-bottom:1.5rem;color:#242628}@media screen and (min-width: 48rem){#rank-math-pro-cta .rank-math-cta-box.width-100{width:100%;max-width:100%}#rank-math-pro-cta .rank-math-cta-box.width-80{max-width:80%}#rank-math-pro-cta .rank-math-cta-box.width-70{max-width:70%}#rank-math-pro-cta .rank-math-cta-box.width-60{max-width:60%}#rank-math-pro-cta .rank-math-cta-box.width-60 h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.width-50{max-width:50%}#rank-math-pro-cta .rank-math-cta-box.width-40{max-width:40%}#rank-math-pro-cta .rank-math-cta-box.width-30{max-width:30%}}#rank-math-pro-cta .rank-math-cta-box.blue-ticks ul li:before{background:#069de3}#rank-math-pro-cta .rank-math-cta-table{margin-bottom:2rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}#rank-math-pro-cta .rank-math-cta-table .less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-table .less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-header{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem .825rem;border-bottom:1px solid #dadfe4}#rank-math-pro-cta .rank-math-cta-header h2{font-size:1.125rem;font-weight:500;margin:0}#rank-math-pro-cta .rank-math-cta-body{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem 1.5rem 1.25rem .825rem}#rank-math-pro-cta .rank-math-cta-body svg,#rank-math-pro-cta .rank-math-cta-body .dashicon{margin-right:1.25rem;fill:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body span.dashicon{font-size:50px;width:50px;height:50px;color:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body p{font-size:1rem;-webkit-box-flex:1;-ms-flex:1;flex:1}#rank-math-pro-cta .rank-math-cta-body .button{line-height:40px;margin-left:1.25rem}#rank-math-pro-cta .rank-math-cta-text{display:block;color:#7f868d}#rank-math-pro-cta .rank-math-cta-text span{margin-right:3px}#rank-math-pro-cta p,#rank-math-pro-cta ul{font-size:1rem;color:#7f868d}#rank-math-pro-cta p{margin-top:0}#rank-math-pro-cta ul{margin-bottom:1.5rem}#rank-math-pro-cta ul li{font-size:1rem;line-height:1.5;margin-bottom:1rem;padding:0;border:0}#rank-math-pro-cta ul li:before{font-family:\"dashicons\";font-size:16px;line-height:18px;display:inline-block;width:18px;margin-right:8px;content:\"\uf15e\";text-align:center;vertical-align:-2px;color:#fff;border-radius:50%;background:#10ac84}#rank-math-pro-cta .button{font-weight:500;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:auto;max-width:100%;margin:0 auto;padding:0 2rem;text-align:center}#rank-math-pro-cta .button.is-link{margin-left:15px;padding:0;font-size:10px;background-color:rgba(0,0,0,0)}.rank-math-error-modal.rank-math-contentai-modal{background-color:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none;height:auto}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content{margin-top:0}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content .components-modal__header{border:none}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta{position:static}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta .rank-math-cta-box{margin-top:0;max-width:100%}:root{--rankmath-wp-adminbar-height: 0}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}.rank-math-generate-alt-button{padding:10px 9px 8px;margin-bottom:4px;border:1px solid #069de3;border-radius:2px;color:#069de3;background:#dcedf7;text-align:left;cursor:pointer;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.rank-math-generate-alt-button:hover{background:#c5e1f2}.rank-math-generate-alt-button .rm-icon{font-size:17px;float:left;height:17px;margin-right:4px}.rank-math-generate-alt-button.failed{color:#fff;border-color:#ee6a5e;background:#ee6a5e;pointer-events:none}.edit-post-sidebar__panel div[role=tabpanel] div.css-0,.editor-sidebar__panel div[role=tabpanel] div.css-0{position:relative}.edit-post-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt,.editor-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt{position:absolute;top:40px;right:5px}.edit-post-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt.error,.editor-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt.error{color:#ee6a5e}.edit-post-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt .rm-icon,.editor-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt .rm-icon{margin-right:3px}.edit-post-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt .rank-math-tooltip span,.editor-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt .rank-math-tooltip span{-webkit-transform:none;transform:none;right:0;left:auto}.edit-post-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt .rank-math-tooltip span:after,.editor-sidebar__panel div[role=tabpanel] div.css-0 button.rank-math-generate-alt .rank-math-tooltip span:after{-webkit-transform:none;transform:none;right:3px;left:auto;top:98%}.rank-math-bulk-generate-button.button-primary{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.rank-math-bulk-generate-button.button-primary i{margin-right:5px}.module-listing .grid,#rank-math-pro-cta .rank-math-cta-header,#rank-math-pro-cta .rank-math-cta-body{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.content-ai-autocompleters i,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i,div.rank-math-tab-content-ai-tools .rank-math-box i{font-size:28px;line-height:50px;display:inline-block;color:#ccc;border-radius:6px;background:linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);height:50px;width:50px}.rank-math-tab-content-history .output-item .content .wp-block-code,.chat-message .message .wp-block-code,div.rank-math-content-ai-command>.rich-text .wp-block-code{color:#fff;border-color:#000;background:#242628}.rank-math-button-devices .button.button-small:nth-child(2){margin-right:5px}.button.button-small.rank-math-content-ai-meta-button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;border-color:#069de3;background:#069de3}.button.button-small.rank-math-content-ai-meta-button i{margin-right:5px}.rank-math-header .credits-remaining{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#7f868d}.rank-math-header .credits-remaining strong{margin-left:2px;color:#000}.content-ai-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-flex:1;-ms-flex:auto;flex:auto;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-preferred-size:100%;flex-basis:100%}.content-ai-filter{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.content-ai-filter div{margin:0}.content-ai-filter div button{display:inline-block;height:auto;margin-right:.5rem;padding:5px 14px;list-style-type:none;cursor:pointer;color:#fff;border:1px solid rgba(6,157,227,.2);border-radius:15px;background-color:#2c3338}.content-ai-filter div button.active:not(:disabled),.content-ai-filter div button:hover:not(:disabled),.content-ai-filter div button:focus:not(:disabled){color:#fff;border-color:#069de3;background:#069de3}.content-ai-filter .search-field{margin-bottom:1rem;margin-left:1rem}.content-ai-filter .search-field .components-search-control{position:relative}.content-ai-filter .search-field .components-search-control:after{line-height:1.3;position:absolute;padding:0 4px 1px;content:\"\/\";color:#b5bfc9;border:1px solid #b5bfc9;border-radius:3px;position:absolute;top:5px;right:4px}.content-ai-filter .search-field .components-search-control input.components-search-control__input,.content-ai-filter .search-field .components-search-control input.components-input-control__input{width:100%;height:30px;min-height:30px;padding:0 1.5rem 0 2rem;-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;border:1px solid #b5bfc9;border-radius:6px;background:#fff}.content-ai-filter .search-field .components-search-control input.components-search-control__input::-webkit-input-placeholder, .content-ai-filter .search-field .components-search-control input.components-input-control__input::-webkit-input-placeholder{color:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input::-moz-placeholder, .content-ai-filter .search-field .components-search-control input.components-input-control__input::-moz-placeholder{color:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input:-ms-input-placeholder, .content-ai-filter .search-field .components-search-control input.components-input-control__input:-ms-input-placeholder{color:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input::-ms-input-placeholder, .content-ai-filter .search-field .components-search-control input.components-input-control__input::-ms-input-placeholder{color:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input::placeholder,.content-ai-filter .search-field .components-search-control input.components-input-control__input::placeholder{color:#7f868d}.content-ai-filter .search-field .components-search-control input.components-search-control__input:hover,.content-ai-filter .search-field .components-search-control input.components-search-control__input:focus,.content-ai-filter .search-field .components-search-control input.components-search-control__input:active,.content-ai-filter .search-field .components-search-control input.components-input-control__input:hover,.content-ai-filter .search-field .components-search-control input.components-input-control__input:focus,.content-ai-filter .search-field .components-search-control input.components-input-control__input:active{border-color:#069de3;background-color:#fff;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button, .content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button{min-width:26px;margin-top:3px;margin-right:0;margin-bottom:0;padding:0;border:0;background:rgba(0,0,0,0)}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button, .content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button{min-width:26px;margin-top:3px;margin-right:0;margin-bottom:0;padding:0;border:0;background:rgba(0,0,0,0)}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-search-control__icon button,.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-input-control__suffix button,.content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-search-control__icon button,.content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-input-control__suffix button{min-width:26px;margin-top:3px;margin-right:0;margin-bottom:0;padding:0;border:0;background:rgba(0,0,0,0)}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button svg, .content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button svg, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button svg, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button svg{fill:#242628}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button svg, .content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button svg, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button svg, .content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button svg{fill:#242628}.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-search-control__icon button svg,.content-ai-filter .search-field .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-input-control__suffix button svg,.content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-search-control__icon button svg,.content-ai-filter .search-field .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-input-control__suffix button svg{fill:#242628}.content-ai-filter .search-field .components-search-control__icon,.content-ai-filter .search-field .components-search-control .components-input-control__suffix{position:absolute;right:auto;left:1px;height:100%}.content-ai-filter .search-field .components-search-control__icon svg,.content-ai-filter .search-field .components-search-control .components-input-control__suffix svg{margin:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);fill:#7f868d}.content-ai-error .notice{display:block !important;margin:5px 0 10px}div.form-field{position:relative;padding-top:10px;padding-bottom:10px}div.form-field:first-of-type{padding-top:0}div.form-field button.generate{float:right}div.form-field .components-base-control input,div.form-field .components-base-control textarea,div.form-field .components-base-control select{font-size:.875rem;width:100%;min-height:34px;border-color:#7f868d;border-radius:5px}div.form-field .components-base-control input:hover,div.form-field .components-base-control input:focus,div.form-field .components-base-control textarea:hover,div.form-field .components-base-control textarea:focus,div.form-field .components-base-control select:hover,div.form-field .components-base-control select:focus{border-color:#069de3;-webkit-box-shadow:#069de3 0 0 0 1px inset;box-shadow:#069de3 0 0 0 1px inset}div.form-field .components-base-control textarea{line-height:1.4}div.form-field .components-base-control input[type=text]{-webkit-box-sizing:border-box;box-sizing:border-box;min-height:38px;margin:0}div.form-field .components-base-control input[type=text]:focus,div.form-field .components-base-control input[type=text]:active{border-color:#069de3;background:#fff;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}div.form-field .components-base-control .components-toggle-group-control{border-color:#7f868d;border-radius:4px}div.form-field a.rank-math-tooltip{margin-left:3px}div.form-field a.rank-math-tooltip span{bottom:-20%;left:125px;display:none}div.form-field a.rank-math-tooltip span:after{top:45%;left:-10px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}div.form-field .components-select-control__field{margin-bottom:0}div.form-field .components-select-control select:focus+.components-input-control__suffix+.components-input-control__backdrop{border-color:#069de3;outline-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}div.form-field .components-input-control__backdrop{border-color:#7f868d;border-radius:4px}div.form-field.is-required label:after{font-size:.875rem;margin-left:3px;content:\"*\";vertical-align:middle;color:red}div.form-field label{font-size:.825rem;font-weight:600;display:block;margin-bottom:6px;text-transform:initial}div.form-field label .limit{float:right;font-size:12px;font-weight:normal;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;text-align:right;opacity:0;color:#7f868d}div.form-field label .limit-reached{color:#ed5e5e}div.form-field.limit-reached input,div.form-field.limit-reached textarea,div.form-field.limit-reached tags.tagify{border-color:#ed5e5e}div.form-field.limit-reached .limit{opacity:1;color:#ed5e5e}div.form-field.limit-reached input:focus,div.form-field.limit-reached textarea:focus{border-color:#ed5e5e;-webkit-box-shadow:0 0 0 1px #ed5e5e;box-shadow:0 0 0 1px #ed5e5e}div.form-field:hover label .limit{opacity:1}.content-ai-tagify .limit{display:none}.content-ai-tagify .tagify{margin-bottom:0;border-color:#7f868d;background:#fff}.content-ai-tagify .tagify:hover,.content-ai-tagify .tagify:focus{border-color:#069de3;-webkit-box-shadow:#069de3 0 0 0 1px inset;box-shadow:#069de3 0 0 0 1px inset}.content-ai-tagify .tagify__tag:first-child .tagify__tag-text:before{display:none}.content-ai-tagify .tagify .tagify__input:empty:before{opacity:.75}.content-ai-tagify .tagify .tagify__tag{background:#e9ecef}.content-ai-tagify .tagify .tagify__tag__removeBtn:hover,.content-ai-tagify .tagify .tagify__tag__removeBtn:focus{background:#f0776f}.content-ai-tagify .tagify--focus{border-color:#069de3}.tagify__dropdown{font-size:.875rem;cursor:pointer}.tagify__dropdown span{margin-left:2px}.module-listing .grid{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;gap:.9375rem}.module-listing .rank-math-box{-webkit-box-flex:0;-ms-flex:0 0 288px;flex:0 0 288px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:1.875rem 1.25rem 2rem;-webkit-transition:.2s all linear;transition:.2s all linear}.module-listing .rank-math-box:hover,.module-listing .rank-math-box:focus{cursor:pointer;border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.module-listing .rank-math-box .dot-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:30px;position:absolute;top:10px;right:10px}.module-listing .rank-math-box .dot-container:before{content:\"\";position:absolute;top:50%;left:0;right:0;height:2px;margin-top:-1px;background-color:#069de3}.module-listing .rank-math-box .dot-container .dot{width:6px;height:6px;background:#fff;border:1px solid #069de3;border-radius:50%;background:#069de3;-webkit-box-shadow:inset 0 0 0 1px #fff;box-shadow:inset 0 0 0 1px #fff;border-radius:50%;z-index:1}.module-listing .rank-math-box i{text-align:center}.module-listing .rank-math-box header h3{font-size:1.125rem;margin:.75rem 0 .75rem}.module-listing .rank-math-box header h3 .rank-math-pro-badge{font-weight:500}.module-listing .rank-math-box header h3 .rank-math-pro-badge.beta{color:#e91e63;background:rgba(233,30,99,.1)}.module-listing .rank-math-box header p{font-size:.938rem;margin-bottom:0;padding:0}.rank-math-contentai-modal-overlay{position:fixed !important;z-index:9999999 !important;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background-color:rgba(0,0,0,.5)}.rank-math-contentai-modal-overlay .rank-math-modal{font-size:.875rem;overflow:hidden;width:960px}.rank-math-contentai-modal-overlay .rank-math-modal>div{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.rank-math-contentai-modal-overlay .rank-math-modal>div>div{width:100%;max-height:calc(100% - 30px)}.rank-math-contentai-modal-overlay .rank-math-modal>div>div>div{height:100%}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header span{display:none !important}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header button{cursor:pointer;position:relative;border:none;outline:none;background-color:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .components-modal__header-heading{font-size:1rem}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .components-modal__header-heading i{margin-right:5px;vertical-align:-2px}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation{display:-webkit-box;display:-ms-flexbox;display:flex;text-align:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin:50px auto 0}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a{display:block;-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative;color:#5b6065;font-size:13px;letter-spacing:.5px;text-transform:uppercase}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a:before{display:block;content:attr(title);padding-bottom:10px;color:#5b6065;font-weight:600}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a:after{content:\"\";-webkit-transform:translate(-50%, 23px);transform:translate(-50%, 23px);background-color:#cbd2d9;height:3px;width:100%;position:absolute;top:15px;left:0;pointer-events:none}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation span{display:inline-block;position:relative;z-index:10;border:2px solid #cbd2d9;border-radius:50%;-webkit-box-shadow:inset 0 0 0 2px #fff;box-shadow:inset 0 0 0 2px #fff;background:#cbd2d9;line-height:20px;height:18px;width:18px}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation .step-label:before{color:#069de3}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation .step-label:after{display:none}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation .step-label+a:after{-webkit-transform:translate(-60%, 23px);transform:translate(-60%, 23px);width:162%}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a.active span{border:2px solid #069de3;-webkit-box-shadow:inset 0 0 0 2px #fff;box-shadow:inset 0 0 0 2px #fff;color:#fff;background:#069de3}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a.active:after{background:-webkit-gradient(linear, left top, right top, from(#58bb58), to(#069de3));background:linear-gradient(to right, #58bb58 0%, #069de3 100%)}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a.active:before{color:#069de3}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a.done span{border-color:#58bb58;-webkit-box-shadow:inset 0 0 0 2px #fff;box-shadow:inset 0 0 0 2px #fff;color:#fff;background-color:#58bb58}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a.done:after{background-color:#58bb58}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation{margin:0;text-align:left;width:30%;position:absolute;right:20px;top:0;bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-weight:normal}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a{cursor:default;-webkit-box-shadow:none;box-shadow:none}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a:before{display:none}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a:after{-webkit-transform:translate(-100%, -7px);transform:translate(-100%, -7px)}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a:first-of-type:after{display:none}.rank-math-contentai-modal-overlay .rank-math-modal>div .components-modal__header .wizard-navigation a span{display:block !important}.rank-math-contentai-modal-overlay .rank-math-modal .column-body{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:100%}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column{position:relative;-webkit-box-flex:0;-ms-flex:0 0 35%;flex:0 0 35%;background-color:#f7f9fa}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column-inner{overflow-x:auto;height:calc(100% - 64px);padding:20px}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column h3{display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:0;margin-bottom:1.25rem;line-height:1}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column h3 span{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column h3 button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column h3 button:last-child{margin-left:8px}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column h3 button i{margin-right:5px}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .required-fields span{color:#ed5e5e}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer{position:absolute;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;padding:12px 20px;border-top:1px solid #dadfe4;background-color:#f7f9fa}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer .components-input-control__backdrop,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer input{border-color:#7f868d;border-radius:4px}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer input:hover+.components-input-control__backdrop,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer input:focus+.components-input-control__backdrop{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3 inset;box-shadow:0 0 0 1px #069de3 inset}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer input[type=number]::-webkit-inner-spin-button{opacity:1}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer .components-input-control{width:50px;margin-right:5px;padding:0}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer .components-input-control input{min-height:40px}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer .components-input-control input::-webkit-inner-spin-button{opacity:1}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer .button-secondary{background:#fff}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column .footer .output-label{font-size:13px;margin-right:auto}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output{overflow-y:scroll;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;padding:20px;border-left:1px solid #dadfe4;background:#fff}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .column-output-heading{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .column-output-heading button{margin-bottom:1.25rem}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial{text-align:center;border-left:3px solid #e59901;background-color:#fffaf3}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial a{display:inline-block;margin-top:1rem;text-decoration:none}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial .rm-icon-youtube{font-size:3.5rem;width:auto;height:auto;-webkit-transition:.25s all linear;transition:.25s all linear;color:red}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial p{font-size:1rem;margin:0 auto}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial .info{margin:0;padding:2rem;cursor:pointer}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial .info,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial .info:hover,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .rank-math-video-tutorial .info:focus{border:none;outline:none;background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item{margin-bottom:1rem;position:relative;padding:2rem 1rem 1rem;-webkit-transition:all .2s linear;transition:all .2s linear;border:1px solid rgba(16,172,132,.075);border-radius:5px;background:rgba(16,172,132,.075)}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item:hover,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item:focus{border-color:#10ac84}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item:hover .output-actions,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item:focus .output-actions{-webkit-transition:opacity .2s ease-in-out;transition:opacity .2s ease-in-out;opacity:1}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .output-actions{position:absolute;top:.5rem;right:0;display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:10px;padding:0 1rem .5rem .5rem;opacity:0;background:#f0f9f6}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .output-actions button{margin-right:5px;color:#fff;border:0;background:#0e9572}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .output-actions button:hover,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .output-actions button:focus{color:#fff;border-color:#0e9572;background:#10ac84}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .output-actions button:last-of-type{margin-right:0}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .output-actions button i{margin-right:4px;vertical-align:-2px}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .word-count{font-size:.75rem;position:absolute;top:.5rem;color:rgba(36,38,40,.7)}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content{font-size:.875rem;line-height:1.5;overflow-x:auto;-webkit-user-select:all;-moz-user-select:all;user-select:all;color:#010907}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h1,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h2,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h3,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h4,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h5,.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h6{margin:0 0 1rem}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h1{font-size:1.75rem;font-weight:600}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h2{font-size:1.25rem;font-weight:700}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content h3{font-size:1.1rem;font-weight:500}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item.loading{padding-top:1rem}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content p{font-size:inherit;margin:0 0 1rem}.rank-math-contentai-modal-overlay .rank-math-modal .column-body .column.column-output .inner-wrapper .output-item .content p:last-of-type{margin-bottom:0}@-webkit-keyframes blink{to{visibility:hidden}}@keyframes blink{to{visibility:hidden}}.rank-math-contentai-modal-overlay .rank-math-modal .notice{margin:0 0 1rem;padding:.5rem 1rem}.rank-math-tab-content-ai-tools button.rank-math-box{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:auto;border:1px solid #b5bfc9}.rank-math-content-ai-wrapper #editor .edit-post-layout{position:static}.rank-math-content-ai-wrapper #editor .edit-post-layout .interface-interface-skeleton__header{display:none}.rank-math-content-ai-wrapper #editor .edit-post-layout .interface-interface-skeleton__body .interface-interface-skeleton__notices,.rank-math-content-ai-wrapper #editor .edit-post-layout .interface-interface-skeleton__body .interface-interface-skeleton__sidebar,.rank-math-content-ai-wrapper #editor .edit-post-layout .interface-interface-skeleton__body .interface-interface-skeleton__actions,.rank-math-content-ai-wrapper #editor .edit-post-layout .interface-interface-skeleton__body .edit-post-visual-editor__post-title-wrapper{display:none}.rank-math-content-ai-wrapper #editor .edit-post-layout .interface-interface-skeleton__body>:where(:not(.alignleft):not(.alignright):not(.alignfull)){max-width:100%}.rank-math-content-ai-wrapper #rank-math-pro-cta .rank-math-cta-box{max-width:88%}.rank-math-content-ai-wrapper #rank-math-pro-cta .rank-math-cta-box h3{font-size:.9rem}.rank-math-content-ai-wrapper #rank-math-pro-cta .rank-math-cta-box p,.rank-math-content-ai-wrapper #rank-math-pro-cta .rank-math-cta-box ul,.rank-math-content-ai-wrapper #rank-math-pro-cta .rank-math-cta-box li{font-size:.85rem}.rank-math-content-ai-wrapper>.wp-block-column:first-of-type>div:last-of-type{position:relative;height:calc(100% - 45px);background:#fff}.rank-math-content-ai-wrapper>.wp-block-column:first-of-type>div:last-of-type>div{overflow-x:auto;height:100%}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools{padding:1rem}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header ul{display:none}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header select,.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .components-input-control__backdrop{line-height:30px;height:auto;border-color:#7f868d;border-radius:4px}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header select:focus,.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header select:focus~.components-input-control__backdrop{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3 inset;box-shadow:0 0 0 1px #069de3 inset}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;margin:0}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter>.components-base-control{margin-right:1rem}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter div>button{margin-bottom:0}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter .search-field{width:100%;margin-left:0}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter input[type=search]{width:100%;margin:0;padding:0 1.5rem;border:1px solid #7f868d;border-radius:4px;background:#fff}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter input[type=search]:hover{border-color:#069de3}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .content-ai-header .content-ai-filter input[type=search]:focus{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:.5rem;color:#6b7278;border:1px solid #b5bfc9;border-radius:4px;background:#fbfbfb}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box:hover{border-color:#069de3;background:#f4fbff}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box i{margin-left:2px;text-align:center}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-content-ai:before{color:inherit;background:none;-webkit-background-clip:unset;background-clip:unset;-webkit-text-fill-color:unset}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box .dot-container{top:auto}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box header{margin-left:5px}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box header h3{font-size:.875rem;font-weight:normal;line-height:1;z-index:auto;margin:0;text-transform:none}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .rank-math-box header p{display:none}.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools input:focus,.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools textarea:focus{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-content-ai-wrapper .rank-math-tab-content-write,.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools,.rank-math-content-ai-wrapper .rank-math-tab-content-chat{position:relative}.rank-math-content-ai-wrapper .rank-math-tab-content-write .components-notice,.rank-math-content-ai-wrapper .rank-math-tab-content-ai-tools .components-notice,.rank-math-content-ai-wrapper .rank-math-tab-content-chat .components-notice{margin:0 0 1rem}.rank-math-content-ai-wrapper .rank-math-tab-content-write{overflow-x:scroll;max-height:calc(100% - 50px);padding:1rem}.rank-math-content-ai-wrapper .rank-math-tab-content-write label{font-size:.875rem;font-weight:500;display:block;margin-bottom:5px}.rank-math-content-ai-wrapper .rank-math-tab-content-write .write-button{margin-top:.5rem}.rank-math-content-ai-wrapper .rank-math-tab-content-write .write-button span{font-size:.625rem;margin-left:5px;padding:4px 6px;border-radius:3px;background:rgba(0,0,0,.25)}.rank-math-content-ai-wrapper .rank-math-tab-content-tools{overflow-x:scroll;max-height:calc(100% - 62px);padding:1rem}.rank-math-content-ai-wrapper .rank-math-tab-content-chat .tab-header{border:0;border-bottom:1px solid #dadfe4}.rank-math-content-ai-wrapper .rank-math-tab-content-chat .tab-header-title span{display:none}.rank-math-content-ai-wrapper .rank-math-tab-content-chat .rank-math-content-chat-page{height:auto}.rank-math-content-ai-wrapper .chat-container{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;border:0}.rank-math-content-ai-wrapper .chat-sidebar{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%;height:auto;border-width:0 0 1px 0;border-color:#dadfe4}.rank-math-content-ai-wrapper .chat-messages .prompt-examples>h2{font-size:1.25rem !important;margin-bottom:1rem}.rank-math-content-ai-wrapper .chat-messages .prompt-examples .grid>div{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}.rank-math-content-ai-wrapper .chat-messages .prompt-examples .grid>div:nth-of-type(1n+5){display:none}.rank-math-content-ai-wrapper .chat-messages .chat-message{max-width:100%}.rank-math-content-ai-wrapper .chat-messages .chat-message .message{font-size:.875rem}.rank-math-content-ai-wrapper .chat-input{border-color:#dadfe4;border-bottom:1px solid #dadfe4}.rank-math-content-ai-wrapper .chat-input-buttons .prompts-button i.rm-icon{margin-right:0}.rank-math-content-ai-wrapper .clear-history{float:right}.components-dropdown-menu .rm-icon-content-ai{background:linear-gradient(-135deg, #ff4492, #434e8f);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:rgba(0,0,0,0)}div.rank-math-content-ai-command{font-family:sans-serif;font-size:1.063rem;line-height:1.5;position:relative;z-index:9;overflow-x:auto;-webkit-box-sizing:border-box;box-sizing:border-box;padding:.5rem 1rem;letter-spacing:.5px;border:10px solid;border-width:2px;border-image-source:linear-gradient(to left, #743ad5, #d53a9d);border-image-slice:1;background:#efeff9}div.rank-math-content-ai-command.typing{pointer-events:none}div.rank-math-content-ai-command>.rich-text{margin-left:30px;white-space:normal !important}div.rank-math-content-ai-command>.rich-text>span{margin:0 0 0 -10px;opacity:0}div.rank-math-content-ai-command>.rich-text:focus *[data-rich-text-format-boundary]{background:rgba(0,0,0,0)}div.rank-math-content-ai-command>.rich-text>*:nth-last-child(2){margin-bottom:0}div.rank-math-content-ai-command button{height:100%;cursor:pointer;color:#6666c3;border:none;background-color:rgba(0,0,0,0)}div.rank-math-content-ai-command button i{vertical-align:middle}div.rank-math-content-ai-command:after,div.rank-math-content-ai-command.has-block-overlay:not(.is-multi-selected):after{font-family:\"rank-math\";font-size:1.5rem;position:absolute !important;top:.188rem !important;right:auto !important;left:.875rem !important;content:\"\ue905\" !important;outline:none !important;background:linear-gradient(-135deg, #ff4492, #434e8f);-webkit-background-clip:text;background-clip:text;-webkit-box-shadow:none !important;box-shadow:none !important;-webkit-text-fill-color:rgba(0,0,0,0)}div.rank-math-content-ai-command-buttons{margin-top:10px}div.rank-math-content-ai-command-buttons button.button.button-small{font-size:.875rem !important;font-weight:500;margin-right:5px;padding:0 12px;color:#6666c3;border:1px solid #6666c3}div.rank-math-content-ai-command-buttons button.button.button-small:focus{color:#6666c3;border-color:#6666c3;-webkit-box-shadow:0 0 0 1px #6666c3;box-shadow:0 0 0 1px #6666c3}div.rank-math-content-ai-command-buttons button.button.button-small:hover{color:#fff;border-color:#6666c3;background:#6666c3}div.rank-math-content-ai-command-buttons button.button.button-small:hover:focus{border-color:#fff}.content-ai-autocompleters{font-size:.85rem;padding:6px}.content-ai-autocompleters span{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.content-ai-autocompleters i.rm-icon-404,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-404,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-404{color:#ff6f6f;background:rgba(255,111,111,.15)}.content-ai-autocompleters i.rm-icon-mobile,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-mobile,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-mobile{color:#448aff;background:rgba(68,138,255,.15)}.content-ai-autocompleters i.rm-icon-acf,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-acf,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-acf{color:#4caf50;background:rgba(76,175,80,.15)}.content-ai-autocompleters i.rm-icon-users,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-users,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-users{color:#ff4081;background:rgba(255,64,129,.15)}.content-ai-autocompleters i.rm-icon-comments,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-comments,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-comments{color:#b8423f;background:rgba(184,66,63,.15)}.content-ai-autocompleters i.rm-icon-images,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-images,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-images{color:#00bcd4;background:rgba(0,188,212,.15)}.content-ai-autocompleters i.rm-icon-link,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-link,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-link{color:#dba240;background:rgba(219,162,64,.15)}.content-ai-autocompleters i.rm-icon-local-seo,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-local-seo,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-local-seo{color:#ff9f43;background:rgba(255,159,67,.15)}.content-ai-autocompleters i.rm-icon-post,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-post,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-post{color:#679cf7;background:rgba(103,156,247,.15)}.content-ai-autocompleters i.rm-icon-podcast,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-podcast,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-podcast{color:#a95be7;background:rgba(169,91,231,.15)}.content-ai-autocompleters i.rm-icon-redirection,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-redirection,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-redirection{color:#f7b267;background:rgba(247,178,103,.15)}.content-ai-autocompleters i.rm-icon-schema,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-schema,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-schema{color:#843224;background:rgba(132,50,36,.15)}.content-ai-autocompleters i.rm-icon-role-manager,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-role-manager,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-role-manager{color:#87a627;background:rgba(135,166,39,.15)}.content-ai-autocompleters i.rm-icon-search-console,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-search-console,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-search-console{color:#3c88d8;background:rgba(60,136,216,.15)}.content-ai-autocompleters i.rm-icon-analyzer,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-analyzer,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-analyzer{color:#e3765c;background:rgba(227,118,92,.15)}.content-ai-autocompleters i.rm-icon-sitemap,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-sitemap,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-sitemap{color:#049404;background:rgba(4,148,4,.15)}.content-ai-autocompleters i.rm-icon-cart,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-cart,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-cart{color:#a13cf7;background:rgba(161,60,247,.15)}.content-ai-autocompleters i.rm-icon-video,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-video,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-video{color:#c4302b;background:rgba(196,48,43,.15)}.content-ai-autocompleters i.rm-icon-stories,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-stories,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-stories{color:#180ca4;background:rgba(24,12,164,.15)}.content-ai-autocompleters i.rm-icon-instant-indexing,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-instant-indexing,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-instant-indexing{color:#a40fa4;background:rgba(164,15,164,.15)}.content-ai-autocompleters i.rm-icon-content-ai,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-content-ai,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-content-ai{color:#e91e63;background:rgba(233,30,99,.07)}.content-ai-autocompleters i.rm-icon-content-ai:before,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-content-ai:before,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-content-ai:before{background:linear-gradient(-135deg, #ff4081, #3f51b5);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:rgba(0,0,0,0)}.content-ai-autocompleters i.rm-icon-edit,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-edit,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-edit{color:#673ab7;background:rgba(103,58,183,.15)}.content-ai-autocompleters i.rm-icon-faq,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-faq,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-faq{color:#ff5722;background:rgba(255,87,34,.15)}.content-ai-autocompleters i.rm-icon-support,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-support,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-support{color:#009688;background:rgba(0,150,136,.15)}.content-ai-autocompleters i.rm-icon-job,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-job,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-job{color:#ff4081;background:rgba(255,64,129,.15)}.content-ai-autocompleters i.rm-icon-post-format,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-post-format,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-post-format{color:#607d8b;background:rgba(96,125,139,.15)}.content-ai-autocompleters i.rm-icon-book,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-book,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-book{color:#ff6f00;background:rgba(255,111,0,.15)}.content-ai-autocompleters i.rm-icon-misc,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-misc,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-misc{color:#c51162;background:rgba(197,17,98,.15)}.content-ai-autocompleters i.rm-icon-page,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-page,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-page{color:#9c27b0;background:rgba(156,39,176,.15)}.content-ai-autocompleters i.rm-icon-help,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-help,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-help{color:#1a237e;background:rgba(26,35,126,.15)}.content-ai-autocompleters i.rm-icon-thumbs-up,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-thumbs-up,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-thumbs-up{color:#00bfa5;background:rgba(0,191,165,.15)}.content-ai-autocompleters i.rm-icon-star,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-star,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-star{color:#e3aa0b;background:rgba(227,170,11,.15)}.content-ai-autocompleters i.rm-icon-user,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-user,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-user{color:#006064;background:rgba(0,96,100,.15)}.content-ai-autocompleters i.rm-icon-restaurant,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-restaurant,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-restaurant{color:#272649;background:rgba(26,24,78,.15)}.content-ai-autocompleters i.rm-icon-facebook,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-facebook,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-facebook{color:#3b5998;background:rgba(59,89,152,.15)}.content-ai-autocompleters i.rm-icon-comments-reply,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-comments-reply,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-comments-reply{color:#3b5998;background:rgba(59,89,152,.15)}.content-ai-autocompleters i.rm-icon-twitter,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-twitter,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-twitter{color:#03a9f4;background:rgba(3,169,244,.15)}.content-ai-autocompleters i.rm-icon-comments-reply.Tweet_Reply,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-comments-reply.Tweet_Reply,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-comments-reply.Tweet_Reply{color:#03a9f4;background:rgba(3,169,244,.15)}.content-ai-autocompleters i.rm-icon-instagram,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-instagram,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-instagram{color:#ff4081;background:rgba(255,64,129,.15)}.content-ai-autocompleters i.rm-icon-mail,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-mail,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-mail{color:#d93025;background:rgba(217,48,37,.15)}.content-ai-autocompleters i.rm-icon-mail-reply,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-mail-reply,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-mail-reply{color:#d93025;background:rgba(217,48,37,.15)}.content-ai-autocompleters i.rm-icon-light-bulb,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-light-bulb,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-light-bulb{color:#dca720;background:rgba(251,192,45,.15)}.content-ai-autocompleters i.rm-icon-tick,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-tick,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-tick{color:#4caf50;background:rgba(76,175,80,.15)}.content-ai-autocompleters i.rm-icon-text,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-text,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-text{color:#009688;background:rgba(0,150,136,.15)}.content-ai-autocompleters i.rm-icon-social,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-social,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-social{color:#ff5722;background:rgba(255,87,34,.15)}.content-ai-autocompleters i.rm-icon-dataset,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-dataset,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-dataset{color:#587c22;background:rgba(88,124,34,.15)}.content-ai-autocompleters i.rm-icon-youtube,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-youtube,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-youtube{color:#c4302b;background:rgba(196,48,43,.15)}.content-ai-autocompleters i.rm-icon-recipe,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-recipe,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-recipe{color:#4caf50;background:rgba(76,175,80,.15)}.content-ai-autocompleters i.rm-icon-code,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-code,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-code{color:#222;background:rgba(34,34,34,.15)}.content-ai-autocompleters i.rm-icon-seo,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-seo,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-seo{color:#6d4c41;background:rgba(109,76,65,.15)}.content-ai-autocompleters i.rm-icon-pencil,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-pencil,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-pencil{color:#1e88e5;background:rgba(30,136,229,.15)}.content-ai-autocompleters i.rm-icon-howto,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-howto,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-howto{color:#b71c1c;background:rgba(183,28,28,.15)}.content-ai-autocompleters i.rm-icon-heading,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-heading,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-heading{color:#0d47a1;background:rgba(13,71,161,.15)}.content-ai-autocompleters i.rm-icon-seo-title,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-seo-title,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-seo-title{color:#d50000;background:rgba(213,0,0,.15)}.content-ai-autocompleters i.rm-icon-seo-description,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-seo-description,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-seo-description{color:#f57f17;background:rgba(245,127,23,.15)}.content-ai-autocompleters i.rm-icon-text-align-left,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-text-align-left,div.rank-math-tab-content-ai-tools .rank-math-box i.rm-icon-text-align-left{color:#388e3c;background:rgba(56,142,60,.15)}.content-ai-autocompleters i.ai-icon.rm-icon,.rank-math-tab-content-write .rank-math-tab-content-ai-tools .rank-math-box i.ai-icon.rm-icon,div.rank-math-tab-content-ai-tools .rank-math-box i.ai-icon.rm-icon{font-size:1rem;line-height:16px;-webkit-box-sizing:border-box;box-sizing:border-box;width:24px;height:24px;margin-right:7px !important;padding:4px;border-radius:3px}.rank-math-tab-content-ai-tools.dashboard-wrapper .rank-math-box i.ai-icon.rm-icon{font-size:28px;line-height:50px;width:50px;height:50px;padding:0;border-radius:6px}body.rank-math_page_rank-math-content-ai-page #wpbody-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}body.rank-math_page_rank-math-content-ai-page #wpbody-content>div{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}body.rank-math_page_rank-math-content-ai-page #wpbody-content>div.notice{margin-left:0}body.rank-math_page_rank-math-content-ai-page #wpbody-content>div.rank-math-breadcrumbs-wrap{margin-top:20px}body.rank-math_page_rank-math-content-ai-page #wpbody-content .rank-math-header{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}body.rank-math_page_rank-math-content-ai-page #wpbody-content .rank-math-tabs .components-tab-panel__tabs button{border-bottom:none}body.rank-math_page_rank-math-content-ai-page #wpbody-content .rank-math-tabs .components-tab-panel__tabs button.is-active:after{position:absolute;z-index:1;bottom:-1px;left:0;visibility:visible;width:100%;height:1px;content:\"\";background:#fafafb}body.rank-math_page_rank-math-content-ai-page #wpbody-content .rank-math-tabs .components-tab-panel__tab-content{position:relative}.rank-math-tab-content-chat{width:1120px;max-width:100%;height:100%}.rank-math-tab-content-chat.blurred+#rank-math-pro-cta{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.rank-math-tab-content-chat.blurred+#rank-math-pro-cta .rank-math-cta-box{margin-left:19%}.rank-math-tab-content-chat .rank-math-content-chat-page{display:-webkit-box;display:-ms-flexbox;display:flex;overflow:auto;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;height:70vh;min-height:350px}.rank-math-tab-content-chat .tab-header{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;-webkit-box-sizing:border-box;box-sizing:border-box;border:1px solid #b5bfc9;border-bottom:0}.chat-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column;flex-flow:column;-webkit-box-sizing:border-box;box-sizing:border-box;width:calc(100% - 305px);max-width:1120px;height:100%;border:1px solid #b5bfc9;background:#fff}.chat-sidebar{overflow-x:scroll;-ms-flex-preferred-size:33.33%;flex-basis:33.33%;max-width:300px;height:calc(100% - 2px);border:1px solid #b5bfc9;border-right:0;background:#fff}.chat-sidebar-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:.875rem}.chat-sidebar .button{line-height:1;position:relative;overflow:hidden;height:auto;margin-bottom:.5rem;padding:.875rem;text-align:left;text-overflow:ellipsis;color:#242628;border:1px solid #b5bfc9;border-radius:5px}.chat-sidebar .button i{font-style:normal;margin-right:5px;vertical-align:-2px}.chat-sidebar .button .delete-session{font-size:.65rem;font-weight:900;line-height:20px;position:absolute;top:10px;right:4px;display:none;width:20px;height:auto;padding:0;text-align:center;border-radius:20px;background:#f07575}.chat-sidebar .button .delete-session:hover,.chat-sidebar .button .delete-session:focus{background:#ed5e5e}.chat-sidebar .button .delete-session i.dashicons{display:block;margin:0;color:#fff}.chat-sidebar .button:hover{color:#069de3;border-color:#069de3;background:#f8f9fa}.chat-sidebar .button:hover .delete-session{display:block}.chat-sidebar .button.active:not(:disabled){color:#fff;border-color:#069de3;background:#069de3;-webkit-box-shadow:none;box-shadow:none}.chat-sidebar .button.active:not(:disabled):hover,.chat-sidebar .button.active:not(:disabled):focus{border-color:#fff;-webkit-box-shadow:0 0 0 2px #069de3;box-shadow:0 0 0 2px #069de3}.chat-sidebar .button.new-chat,.chat-sidebar .button.new-chat i{font-weight:500}.chat-sidebar .button.is-green,.chat-sidebar .button.is-green:hover,.chat-sidebar .button.is-green:focus{color:#fff}.tab-header{font-size:1rem;font-weight:500;padding:.875rem;border-bottom:1px solid #b5bfc9;background:#f8f9fa}.tab-header-title .rm-icon{vertical-align:-1.5px}.tab-header .button{font-weight:normal;float:right;margin-top:-2px;text-decoration:none}.tab-header .button:hover:not(:disabled),.tab-header .button:focus:not(:disabled){color:#ed5e5e}.chat-messages{display:-webkit-box;display:-ms-flexbox;display:flex;overflow-y:scroll;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;padding:.875rem}.chat-messages .prompt-examples{max-width:750px;margin:0 auto auto}.chat-messages .prompt-examples h2,.chat-messages .prompt-examples p{text-align:center}.chat-messages .prompt-examples h2{font-size:1.5rem}.chat-messages .prompt-examples p{display:block}.chat-messages .prompt-examples .grid>div{display:block;-webkit-box-flex:0;-ms-flex:0 0 48%;flex:0 0 48%;cursor:pointer}.chat-messages .prompt-examples .grid>div:nth-child(1n+6){display:block}.chat-message{font-size:1rem;-ms-flex-item-align:start;align-self:flex-start;min-width:100px;max-width:70%;margin-top:10px;padding:10px;color:#fff;border-radius:8px;background-image:linear-gradient(45deg, #724bb7 0%, #4098d7 100%);-webkit-box-shadow:0 .3px .9px rgba(0,0,0,.12),0 1.6px 3.6px rgba(0,0,0,.16);box-shadow:0 .3px .9px rgba(0,0,0,.12),0 1.6px 3.6px rgba(0,0,0,.16)}.chat-message.user{-ms-flex-item-align:end;align-self:flex-end;color:#242628;background:rgba(218,223,228,.4)}.chat-message .message-actions{font-size:.875rem;margin-bottom:5px}.chat-message .message-actions>span{opacity:.5}.chat-message button.button.is-secondary{line-height:20px;float:right;min-height:20px;margin-top:-2px;padding:0 5px;cursor:pointer;opacity:0;color:#fff;border:1px solid rgba(0,0,0,0);background:rgba(0,0,0,0)}.chat-message button.button.is-secondary i{margin-right:4px;vertical-align:text-bottom}.chat-message button.button.is-secondary:hover:not(:disabled),.chat-message button.button.is-secondary:focus:not(:disabled){color:#fff;border-color:#fff;background:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none}.chat-message:hover button.button.is-secondary{opacity:1}.chat-message .message{line-height:1.4}.chat-message .message p{font-size:1rem;margin-top:0}.chat-message .message p:last-of-type{margin-bottom:0}.chat-message .message span{font-family:monospace;color:#cb10b2;background:#feecfb}.chat-message .message a{color:#fff}.chat-message .message table tr td{background-color:rgba(0,0,0,0) !important}.chat-message .rank-math-loader{--c: linear-gradient(#fff 0 0) no-repeat}.chat-input{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:.875rem;border-top:1px solid #b5bfc9;background:#f8f9fa}.chat-input-actions{position:relative;width:100%}.chat-input-actions .components-base-control__field{margin-bottom:0}.chat-input-actions .regenerate-response{height:34px !important;margin:0 5px;padding:0 7px !important}.chat-input-actions .regenerate-response .dashicon{margin-right:0 !important;vertical-align:-6px}.chat-input-actions .chat-input-buttons{position:absolute;bottom:1px;left:1px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-sizing:border-box;box-sizing:border-box;width:calc(100% - 2px);padding:8px 14px;border-radius:5px;background:#fff}.chat-input-actions .chat-input-buttons .limit{-webkit-box-flex:initial;-ms-flex-positive:initial;flex-grow:initial;margin-right:5px;font-size:12px;font-weight:normal;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;text-align:right;opacity:0;color:#7f868d}.chat-input-actions .chat-input-buttons .limit-reached{color:#ed5e5e}.chat-input-actions .chat-input-buttons .limit-wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.chat-input-actions:hover .limit,.chat-input-actions:focus .limit,.chat-input-actions:focus-within .limit{opacity:1}.chat-input textarea,.chat-input .chat-input-textarea{font-size:1rem;line-height:1.4;overflow:auto;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box;min-height:100px;max-height:200px;margin:0;padding:14px 14px 50px 14px;border:1px solid #b5bfc9;border-radius:5px;background:#fff}.chat-input textarea:hover,.chat-input textarea:focus,.chat-input .chat-input-textarea:hover,.chat-input .chat-input-textarea:focus{border-color:#069de3;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.chat-input textarea span:not([data-rich-text-placeholder]),.chat-input .chat-input-textarea span:not([data-rich-text-placeholder]){font-family:monospace;color:#cb10b2;background:#feecfb}.chat-input .button.is-primary{line-height:1;height:34px;padding:0 12px}.chat-input .button.is-primary[disabled]{cursor:not-allowed;opacity:.7}.chat-input .button.is-primary .rm-icon{font-size:20px;margin-right:0;vertical-align:-4.5px}.chat-input .button.is-primary .loader{width:25px;-webkit-animation:loading 1s infinite linear alternate;animation:loading 1s infinite linear alternate;background:var(--c) 0 50%,var(--c) 50% 50%,var(--c) 100% 50%;aspect-ratio:1;--c: linear-gradient(#000 0 0) no-repeat}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}.chat-input .chat-input-buttons .prompts-button{line-height:32px;padding:0 10px;color:#fff;border-color:#212f3e;background:#212f3e}.chat-input .chat-input-buttons .prompts-button:hover:not(:disabled),.chat-input .chat-input-buttons .prompts-button:focus:not(:disabled){color:#fff;border-color:#33485f;background:#33485f}.chat-input .chat-input-buttons .prompts-button i{margin-right:5px;vertical-align:-1px}.prompt-examples{max-width:350px;margin-bottom:0;margin-left:1.25rem}.prompt-examples h2{font-size:1rem;margin-bottom:1rem;text-align:left}.prompt-examples p{font-size:1rem;display:none;margin-bottom:2rem}.prompt-examples .grid{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.prompt-examples .grid>div{font-size:1rem;line-height:1.4;-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;-webkit-box-sizing:border-box;box-sizing:border-box;padding:1rem;cursor:pointer;-webkit-transition:-webkit-box-shadow .2s ease-in-out;transition:-webkit-box-shadow .2s ease-in-out;transition:box-shadow .2s ease-in-out;transition:box-shadow .2s ease-in-out, -webkit-box-shadow .2s ease-in-out;border-radius:10px;background:rgba(218,223,228,.4)}.prompt-examples .grid>div:nth-child(1n+6){display:none}.prompt-examples .grid>div:hover,.prompt-examples .grid>div:focus{-webkit-box-shadow:0 .3px .9px rgba(0,0,0,.12),0 1.6px 3.6px rgba(0,0,0,.16);box-shadow:0 .3px .9px rgba(0,0,0,.12),0 1.6px 3.6px rgba(0,0,0,.16)}.prompt-examples .grid>div span{font-family:monospace;color:#cb10b2;background:#feecfb}.rank-math-prompt-modal .content-ai-filter{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-sizing:border-box;box-sizing:border-box;height:60px;padding:1rem}.rank-math-prompt-modal .components-modal__content{overflow:hidden;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-top:0 !important}.rank-math-prompt-modal .components-modal__content>div{position:relative}.rank-math-prompt-modal .components-modal__content>div:not(.components-modal__header){min-height:calc(100% - 30px)}.rank-math-prompt-modal .grid{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;-ms-flex-wrap:wrap;flex-wrap:wrap;height:calc(100% - 60px);border-top:1px solid #dadfe4;gap:0}.rank-math-prompt-modal .grid .column{overflow-x:auto}.rank-math-prompt-modal .grid .column-first{-webkit-box-flex:0;-ms-flex:0 0 360px;flex:0 0 360px;max-width:360px;height:100%;padding:1rem;border-right:1px solid #dadfe4}.rank-math-prompt-modal .grid .column-first .components-search-control{position:relative}.rank-math-prompt-modal .grid .column-first .components-search-control:after{line-height:1.3;position:absolute;padding:0 4px 1px;content:\"\/\";color:#b5bfc9;border:1px solid #b5bfc9;border-radius:3px;position:absolute;top:5px;right:4px}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input{width:100%;height:30px;min-height:30px;padding:0 1.5rem 0 2rem;-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;border:1px solid #b5bfc9;border-radius:6px;background:#fff}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input::-webkit-input-placeholder, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input::-webkit-input-placeholder{color:#7f868d}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input::-moz-placeholder, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input::-moz-placeholder{color:#7f868d}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:-ms-input-placeholder, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:-ms-input-placeholder{color:#7f868d}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input::-ms-input-placeholder, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input::-ms-input-placeholder{color:#7f868d}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input::placeholder,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input::placeholder{color:#7f868d}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:hover,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:focus,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:active,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:hover,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:focus,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:active{border-color:#069de3;background-color:#fff;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button{min-width:26px;margin-top:3px;margin-right:0;margin-bottom:0;padding:0;border:0;background:rgba(0,0,0,0)}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button{min-width:26px;margin-top:3px;margin-right:0;margin-bottom:0;padding:0;border:0;background:rgba(0,0,0,0)}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-search-control__icon button,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-input-control__suffix button,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-search-control__icon button,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-input-control__suffix button{min-width:26px;margin-top:3px;margin-right:0;margin-bottom:0;padding:0;border:0;background:rgba(0,0,0,0)}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button svg, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button svg, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-search-control__icon button svg, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-moz-placeholder-shown)+.components-input-control__suffix button svg{fill:#242628}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button svg, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button svg, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-search-control__icon button svg, .rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:-ms-input-placeholder)+.components-input-control__suffix button svg{fill:#242628}.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-search-control__icon button svg,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-search-control__input:not(:placeholder-shown)+.components-input-control__suffix button svg,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-search-control__icon button svg,.rank-math-prompt-modal .grid .column-first .components-search-control input.components-input-control__input:not(:placeholder-shown)+.components-input-control__suffix button svg{fill:#242628}.rank-math-prompt-modal .grid .column-first .components-search-control__icon,.rank-math-prompt-modal .grid .column-first .components-search-control .components-input-control__suffix{position:absolute;right:auto;left:1px;height:100%}.rank-math-prompt-modal .grid .column-first .components-search-control__icon svg,.rank-math-prompt-modal .grid .column-first .components-search-control .components-input-control__suffix svg{margin:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);fill:#7f868d}.rank-math-prompt-modal .grid .column-first h3{font-size:1.3em;margin-bottom:1rem}.rank-math-prompt-modal .grid .column-first .components-search-control{margin-bottom:1rem}.rank-math-prompt-modal .grid .column-first .components-search-control input{height:36px}.rank-math-prompt-modal .grid .column-first .components-search-control:after{top:8.5px;right:8px}.rank-math-prompt-modal .grid .column-first .components-search-control__icon{left:5px}.rank-math-prompt-modal .grid .column-first .prompt-list button{font-size:1rem;font-weight:500;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:auto;margin-bottom:1rem;padding:.875rem;cursor:pointer;text-align:left;border:0;border:1px solid #b5bfc9;border-radius:5px;background:#fff}.rank-math-prompt-modal .grid .column-first .prompt-list button i{font-style:normal;height:auto;margin-right:8px}.rank-math-prompt-modal .grid .column-first .prompt-list button:hover,.rank-math-prompt-modal .grid .column-first .prompt-list button:focus{border-color:#fff;-webkit-box-shadow:0 0 0 2px #069de3;box-shadow:0 0 0 2px #069de3}.rank-math-prompt-modal .grid .column-first .prompt-list button.active{color:#fff;border-color:#069de3;background:#069de3}.rank-math-prompt-modal .grid .column-first .prompt-list button.active:hover,.rank-math-prompt-modal .grid .column-first .prompt-list button.active:focus{border-color:#fff}.rank-math-prompt-modal .grid .column-first .prompt-list button .delete-prompt{font-size:.65rem;font-weight:900;line-height:20px;position:absolute;top:14px;right:4px;display:none;width:20px;height:auto;padding:0;text-align:center;border-radius:20px;background-color:#f07575}.rank-math-prompt-modal .grid .column-first .prompt-list button .delete-prompt:hover,.rank-math-prompt-modal .grid .column-first .prompt-list button .delete-prompt:focus{background-color:#ed5e5e}.rank-math-prompt-modal .grid .column-first .prompt-list button .delete-prompt i.dashicons{display:block;margin:0;color:#fff}.rank-math-prompt-modal .grid .column-first .prompt-list button .delete-prompt.rank-math-loader{display:block;border-radius:0;background-color:rgba(0,0,0,0);--c: linear-gradient(#fff 0 0) no-repeat}.rank-math-prompt-modal .grid .column-first .prompt-list button:hover .delete-prompt{display:block}.rank-math-prompt-modal .grid .column-second{-webkit-box-flex:1;-ms-flex:1;flex:1;height:100%;padding:1rem;background:#fff}.rank-math-prompt-modal .grid .column-second h3{margin-bottom:1rem}.rank-math-prompt-modal .grid .column-second .prompt-preview-content{line-height:1.4;margin-bottom:1rem;padding:1rem;white-space:pre-line;border-radius:3px;background:rgba(218,223,228,.4);-webkit-box-shadow:inset 0 0 3px 0 rgba(0,0,0,.25);box-shadow:inset 0 0 3px 0 rgba(0,0,0,.25)}.rank-math-prompt-modal .grid .column-second .prompt-preview-content p{font-size:1rem;margin-top:0}.rank-math-prompt-modal .grid .column-second .prompt-preview-content p:last-of-type{margin-bottom:0}.rank-math-prompt-modal .grid .column-second .prompt-preview-content p span{font-family:monospace;color:#cb10b2;background:#feecfb}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field:last-of-type{padding-top:0}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field label{font-size:1rem}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field p{font-size:.875rem}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field .limit{position:absolute;right:0;font-size:12px;font-weight:normal;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;text-align:right;opacity:0;color:#7f868d}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field .limit-reached{color:#ed5e5e}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field:hover .limit,.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field:focus-within .limit{opacity:1}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field .is-required label{color:#ed5e5e}.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field .is-required input,.rank-math-prompt-modal .grid .column-second .custom-prompt-form .form-field .is-required textarea{border-color:#ed5e5e}.rank-math-prompt-modal .grid .column-second .components-base-control__help{margin-bottom:0}.rank-math-prompt-modal .grid .column-second .save-prompt,.rank-math-prompt-modal .grid .column-second .use-prompt{text-align:right}.rank-math-prompt-modal .grid .column-second .save-prompt .rank-math-loader,.rank-math-prompt-modal .grid .column-second .use-prompt .rank-math-loader{--c: linear-gradient(#fff 0 0) no-repeat}.rank-math-prompt-modal .grid .column-second button{padding:0 1.5rem}.rank-math-tab-content-history .history-container{overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:1120px;height:70vh;min-height:350px;border:1px solid #b5bfc9;background:#fff}.rank-math-tab-content-history .inner-wrapper{overflow-x:auto;-webkit-box-sizing:border-box;box-sizing:border-box;height:100%;padding:3rem 1rem 1rem}.rank-math-tab-content-history .output-item{margin-bottom:3.5rem;position:relative;padding:2rem 1rem 1rem;-webkit-transition:all .2s linear;transition:all .2s linear;border:1px solid rgba(16,172,132,.075);border-radius:5px;background:rgba(16,172,132,.075)}.rank-math-tab-content-history .output-item:hover,.rank-math-tab-content-history .output-item:focus{border-color:#10ac84}.rank-math-tab-content-history .output-item:hover .output-actions,.rank-math-tab-content-history .output-item:focus .output-actions{-webkit-transition:opacity .2s ease-in-out;transition:opacity .2s ease-in-out;opacity:1}.rank-math-tab-content-history .output-item .output-actions{position:absolute;top:.5rem;right:0;display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:10px;padding:0 1rem .5rem .5rem;opacity:0;background:#f0f9f6}.rank-math-tab-content-history .output-item .output-actions button{margin-right:5px;color:#fff;border:0;background:#0e9572}.rank-math-tab-content-history .output-item .output-actions button:hover,.rank-math-tab-content-history .output-item .output-actions button:focus{color:#fff;border-color:#0e9572;background:#10ac84}.rank-math-tab-content-history .output-item .output-actions button:last-of-type{margin-right:0}.rank-math-tab-content-history .output-item .output-actions button i{margin-right:4px;vertical-align:-2px}.rank-math-tab-content-history .output-item .word-count{font-size:.75rem;position:absolute;top:.5rem;color:rgba(36,38,40,.7)}.rank-math-tab-content-history .output-item .content{font-size:.875rem;line-height:1.5;overflow-x:auto;-webkit-user-select:all;-moz-user-select:all;user-select:all;color:#010907}.rank-math-tab-content-history .output-item .content h1,.rank-math-tab-content-history .output-item .content h2,.rank-math-tab-content-history .output-item .content h3,.rank-math-tab-content-history .output-item .content h4,.rank-math-tab-content-history .output-item .content h5,.rank-math-tab-content-history .output-item .content h6{margin:0 0 1rem}.rank-math-tab-content-history .output-item .content h1{font-size:1.75rem;font-weight:600}.rank-math-tab-content-history .output-item .content h2{font-size:1.25rem;font-weight:700}.rank-math-tab-content-history .output-item .content h3{font-size:1.1rem;font-weight:500}.rank-math-tab-content-history .output-item .tool-name{font-weight:500;position:absolute;top:-2rem;left:0;padding:3px 5px;color:#6666c3;border-radius:3px;background:#eeeef8}.rank-math-tab-content-history .output-item .content,.rank-math-tab-content-history .output-item .content p{font-size:1rem}.rank-math-tab-content-history .output-item .content>*:first-child{margin-top:0}.rank-math-tab-content-history .output-item .content>*:last-child{margin-bottom:0}.rank-math-tab-content-history .output-actions{background:rgba(0,0,0,0)}.rank-math-tab-content-content-editor .editor-styles-wrapper{font-family:inherit}.rank-math-tab-content-content-editor .components-popover{z-index:999999;opacity:1}.rank-math-tab-content-content-editor .components-popover:before,.rank-math-tab-content-content-editor .components-popover:after{display:none}.rank-math-tab-content-content-editor .actions-wrapper{height:44px;padding:0 1rem;text-align:right;border-bottom:1px solid #b5bfc9}.rank-math-tab-content-content-editor .actions-wrapper .components-button{margin-top:9px;margin-right:10px;background:#fff}.rank-math-tab-content-content-editor .actions-wrapper .components-button:last-of-type{margin-right:0}.rank-math-tab-content-content-editor .actions-wrapper .components-button:hover,.rank-math-tab-content-content-editor .actions-wrapper .components-button:focus{-webkit-box-shadow:none;box-shadow:none}.rank-math-tab-content-content-editor .actions-wrapper .components-button i{font-size:14px;margin-right:5px;vertical-align:text-top}.rank-math-tab-content-content-editor .wp-block-columns{height:70vh;min-height:350px;border:1px solid #b5bfc9}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:first-child{-ms-flex-preferred-size:66.66%;flex-basis:66.66%}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column #editor .editor-editor-interface{height:100%}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child{overflow:hidden;-ms-flex-preferred-size:33.33%;flex-basis:33.33%;max-width:300px;border-left:1px solid #b5bfc9}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs{width:100%;height:100%;margin:0}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .components-panel__header{z-index:10;height:auto;border-bottom-color:#b5bfc9;background:#f8f9fa}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .components-panel__header button{font-size:.875rem;font-weight:500;position:relative;height:44px;outline:none;-webkit-box-shadow:none;box-shadow:none}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .components-panel__header button i{margin-right:5px}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .components-panel__header button.is-active:after,.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .components-panel__header button:hover:after{visibility:visible;width:100%;height:3px;content:\"\";background:#069de3;-webkit-box-shadow:none;box-shadow:none;position:absolute;bottom:-1px;left:0}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .rank-math-tab-content-ai-tools{padding:0}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child .rank-math-tabs .rank-math-tab-content-ai-tools .content-ai-header{position:sticky;z-index:10;top:0;margin:-1rem -1rem 1rem;padding:1rem;background:-webkit-gradient(linear, left top, left bottom, from(rgb(255, 255, 255)), color-stop(80%, rgba(255, 255, 255, 0.7)), to(rgba(255, 255, 255, 0)));background:linear-gradient(180deg, rgb(255, 255, 255) 0%, rgba(255, 255, 255, 0.7) 80%, rgba(255, 255, 255, 0) 100%)}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child.has-collapsed{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;max-width:48px}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child.has-collapsed button{margin-top:7px}.rank-math-tab-content-content-editor .wp-block-columns .wp-block-column:last-child.has-collapsed{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.rank-math-tab-content-content-editor .is-root-container{min-height:100%;padding:1rem 2rem 1rem}.rank-math-tab-content-content-editor .is-root-container p{font-size:1.125rem;line-height:1.6}.rank-math-loader{width:25px;-webkit-animation:loading 1s infinite linear alternate;animation:loading 1s infinite linear alternate;background:var(--c) 0 50%,var(--c) 50% 50%,var(--c) 100% 50%;aspect-ratio:1;--c: linear-gradient(#000 0 0) no-repeat}#rank_math_metabox_content_ai div.rank-math-ca-credits .update-credits{position:static}#rank_math_metabox_content_ai div.rank-math-ca-credits .update-credits i:before{margin-bottom:0}#rank_math_metabox_content_ai div.rank-math-ca-credits .update-credits.rank-math-tooltip span{left:0}#rank_math_metabox_content_ai div.rank-math-ca-credits .update-credits.rank-math-tooltip span:after{left:52%}.rank-math-rm-modal .rank-math-content-ai-wrapper.is-opened{padding-top:20px !important}.rank-math-rm-modal .rank-math-content-ai-wrapper.is-opened .rank-math-ca-credits{top:5px;margin-top:0;color:#444}.rank-math-rm-modal .rank-math-content-ai-wrapper.is-opened .rank-math-ca-credits button.update-credits{color:#444}.rank-math-content-ai-notice.is-page{margin:0 0 15px}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/assets\/css\/content-ai.css","ext":"css","size":37499,"mtime":1757324689,"type":"text","content":":root{--rankmath-wp-adminbar-height: 0}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}#wpwrap button.rank-math-content-ai,#elementor-editor-wrapper button.rank-math-content-ai,#rank-math-rm-app-root button.rank-math-content-ai{font-size:12px;line-height:1;position:absolute;top:15px;right:42px;display:-webkit-box;display:-ms-flexbox;display:flex;min-height:22px;padding:0 5px}#wpwrap button.rank-math-content-ai.is-new,#elementor-editor-wrapper button.rank-math-content-ai.is-new,#rank-math-rm-app-root button.rank-math-content-ai.is-new{border-color:#ed5e5e;-webkit-box-shadow:0 0 2px #ed5e5e;box-shadow:0 0 2px #ed5e5e}#wpwrap button.rank-math-content-ai.is-new:before,#elementor-editor-wrapper button.rank-math-content-ai.is-new:before,#rank-math-rm-app-root button.rank-math-content-ai.is-new:before{font-size:9px;font-weight:600;line-height:1;position:absolute;top:-23px;right:7px;padding:3px 4px;content:\"New!\";-webkit-animation:bounce .8s infinite alternate;animation:bounce .8s infinite alternate;color:#fff;border-radius:2px 2px 0 2px;background:#ed5e5e}#wpwrap button.rank-math-content-ai.is-new:after,#elementor-editor-wrapper button.rank-math-content-ai.is-new:after,#rank-math-rm-app-root button.rank-math-content-ai.is-new:after{position:absolute;top:-9px;right:7px;width:0;height:0;content:\"\";-webkit-animation:bounce .8s infinite alternate;animation:bounce .8s infinite alternate;border:0 solid rgba(0,0,0,0);border-top:4px solid #ed5e5e;border-right-width:0;border-left-width:11px}#wpwrap button.rank-math-content-ai i,#elementor-editor-wrapper button.rank-math-content-ai i,#rank-math-rm-app-root button.rank-math-content-ai i{width:13px;font-size:13px;line-height:14px;margin-right:5px;background:linear-gradient(-135deg, #ff4492, #434e8f);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:rgba(0,0,0,0)}.editor-post-publish-panel__prepublish .rank-math-content-ai-box{background-color:#fff8e5}.editor-post-publish-panel__prepublish .rank-math-content-ai-box .components-panel__body-title button .dashicon{width:17px;height:17px;font-size:12px;background:linear-gradient(-135deg, #ff4492, #434e8f);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:rgba(0,0,0,0)}.editor-post-publish-panel__prepublish .rank-math-content-ai-box .components-panel__body-title button .dashicon:before{vertical-align:-2px}.editor-post-publish-panel__prepublish .rank-math-content-ai-box p{margin-top:4px}.editor-post-publish-panel__prepublish .rank-math-content-ai-box p:before{content:\"\uf348\";font-family:\"dashicons\";color:#e59901;font-size:2rem;opacity:.7;float:left;margin-right:10px;line-height:1}.editor-post-publish-panel__prepublish .rank-math-content-ai-box>button{margin-left:42px}@-webkit-keyframes loader{0%{-webkit-transform:translate3d(0, 50px, 0);transform:translate3d(0, 50px, 0);opacity:0}40%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);opacity:1}100%{-webkit-transform:translate3d(0, -30px, 0);transform:translate3d(0, -30px, 0);opacity:0}}@keyframes loader{0%{-webkit-transform:translate3d(0, 50px, 0);transform:translate3d(0, 50px, 0);opacity:0}40%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);opacity:1}100%{-webkit-transform:translate3d(0, -30px, 0);transform:translate3d(0, -30px, 0);opacity:0}}@-webkit-keyframes loader2{0%{-webkit-transform:translate3d(0, 50px, 0);transform:translate3d(0, 50px, 0);opacity:0}40%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);opacity:1}100%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);opacity:1}}@keyframes loader2{0%{-webkit-transform:translate3d(0, 50px, 0);transform:translate3d(0, 50px, 0);opacity:0}40%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);opacity:1}100%{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);opacity:1}}#wpwrap div.rank-math-ca-top-section,#elementor-editor-wrapper div.rank-math-ca-top-section,#rank-math-rm-app-root div.rank-math-ca-top-section{display:-webkit-box;display:-ms-flexbox;display:flex;padding:10px 16px;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}#wpwrap div.rank-math-ca-top-section button,#elementor-editor-wrapper div.rank-math-ca-top-section button,#rank-math-rm-app-root div.rank-math-ca-top-section button{height:30px;padding:0;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;color:#069de3}#wpwrap div.rank-math-ca-top-section button i,#elementor-editor-wrapper div.rank-math-ca-top-section button i,#rank-math-rm-app-root div.rank-math-ca-top-section button i{font-size:12px;display:-webkit-box;display:-ms-flexbox;display:flex;width:auto;margin-right:5px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}#wpwrap div.rank-math-ca-top-section .components-select-control,#elementor-editor-wrapper div.rank-math-ca-top-section .components-select-control,#rank-math-rm-app-root div.rank-math-ca-top-section .components-select-control{border-radius:4px}#wpwrap div.rank-math-ca-top-section .components-select-control select,#elementor-editor-wrapper div.rank-math-ca-top-section .components-select-control select,#rank-math-rm-app-root div.rank-math-ca-top-section .components-select-control select{max-width:136px;height:30px;padding-left:8px;color:#7f868d}#wpwrap div.rank-math-ca-top-section .components-select-control .components-input-control__backdrop,#elementor-editor-wrapper div.rank-math-ca-top-section .components-select-control .components-input-control__backdrop,#rank-math-rm-app-root div.rank-math-ca-top-section .components-select-control .components-input-control__backdrop{border-color:#b5bfc9}#wpwrap div.rank-math-ca-top-section .components-base-control__field,#elementor-editor-wrapper div.rank-math-ca-top-section .components-base-control__field,#rank-math-rm-app-root div.rank-math-ca-top-section .components-base-control__field{margin-bottom:0}button.rank-math-ca-force-update{position:absolute;z-index:0;right:1px;bottom:45px;display:block;width:34px;height:34px;padding:0;-webkit-transform:scaleX(-1);transform:scaleX(-1);text-align:center;color:#606060;background:#fff}button.rank-math-ca-force-update i{font-size:1rem;line-height:20px}button.rank-math-ca-force-update.left span{-webkit-transform:scaleX(-1) translate3d(10%, 0, 0);transform:scaleX(-1) translate3d(10%, 0, 0)}div.rank-math-ca-keywords-wrapper{padding:10px 16px;border-top:1px solid #ddd;border-bottom:1px solid #ddd;background-color:#f7f9fa}div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper{position:relative;color:#606060}div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper label{font-weight:600;margin-bottom:35px}div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper .components-base-control__help{color:inherit}div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper .help-text{position:absolute;top:23px}div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper input{font-size:1rem;font-weight:600;height:36px;background:#fff}div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper .components-base-control__help{margin-bottom:0}div.rank-math-ca-keywords-wrapper button:not(.rank-math-ca-force-update){margin-top:7px;padding:10px 22px}div.rank-math-ca-keywords-wrapper button:not(.rank-math-ca-force-update)[disabled]{opacity:.5 !important}#rank-math-rm-app-root button.rank-math-ca-force-update{bottom:27px}.rank-math-ca-score{position:relative;padding:20px 18px}.rank-math-ca-score .score-wrapper{position:relative;overflow:hidden;width:100%;height:10px;border-radius:10px;background:-webkit-gradient(linear, left top, right top, from(#e93f30), color-stop(50%, #ffbe5f), to(#58bb58));background:linear-gradient(90deg, #e93f30 0%, #ffbe5f 50%, #58bb58 100%)}.rank-math-ca-score .score-dot{position:absolute;top:-2px;left:0;-webkit-box-sizing:border-box;box-sizing:border-box;width:14px;height:14px;margin-left:-14px;-webkit-transition:1s left linear;transition:1s left linear;border:2px solid #fff;border-radius:50%;background:rgba(0,0,0,0)}.rank-math-ca-score .score-dot:before{position:absolute;-webkit-box-sizing:border-box;box-sizing:border-box;width:10px;height:10px;content:\"\";border:1px solid rgba(0,0,0,.1);border-radius:10px}.rank-math-ca-score .score-text{font-size:1rem;font-weight:500;line-height:1;margin-bottom:10px;text-align:center}.rank-math-ca-score .score-text span{font-size:.75rem;font-weight:normal}.rank-math-ca-recommendations{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.rank-math-ca-recommendations>div{line-height:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-sizing:border-box;box-sizing:border-box;padding:25px 16px 12px;border-bottom:1px solid #ddd;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-preferred-size:50%;flex-basis:50%}.rank-math-ca-recommendations>div h4{font-size:12px;font-weight:500;margin:0 0 10px;text-transform:uppercase}.rank-math-ca-recommendations>div strong{font-size:22px;line-height:1;position:relative;margin-bottom:10px;color:#242628}.rank-math-ca-recommendations>div strong:before{position:absolute;top:8px;left:-14px;width:8px;height:8px;content:\"\";border-radius:4px;background:#b5bfc9}.rank-math-ca-recommendations>div.good-fk strong:before{background:#52a652}.rank-math-ca-recommendations>div.ok-fk strong:before{background:#ff9800}.rank-math-ca-recommendations>div.bad-fk strong:before{background:#f0776f}.rank-math-ca-recommendations>div.bad-fk.dark strong:before{background:#e93f30}.rank-math-ca-recommendations>div span.desc{font-size:13px;margin-bottom:10px;color:#606060}.rank-math-ca-recommendations>div.has-children{cursor:pointer}.rank-math-ca-recommendations>div.has-children:after{font-family:\"Dashicons\";font-size:12px;content:\"\uf347\";opacity:.6}.rank-math-ca-recommendations>div.has-children:hover:after{color:#069de3}.rank-math-ca-recommendations>div.has-children .submenu{position:absolute;right:16px;left:16px;z-index:9;display:none;margin-top:78px;padding:10px;border-radius:5px;background-color:#f7f9fa;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-ca-recommendations>div.has-children .submenu div{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.rank-math-ca-recommendations>div.has-children .submenu div h4{font-size:13px;margin-right:5px;margin-bottom:0;text-transform:capitalize}.rank-math-ca-recommendations>div.has-children .submenu div span{font-size:12px;line-height:1;padding:4px 8px;color:#f0776f;border-radius:20px;background:#fce9e8}.rank-math-ca-recommendations>div.has-children .submenu div.ok-fk span{color:#e59901;background:#ffeccf}.rank-math-ca-recommendations>div.has-children .submenu div.good-fk span{color:#52a652;background:#dff2df}.rank-math-ca-recommendations>div.has-children .submenu div.dark span{color:#fefafa;background:#ec7169}.rank-math-ca-recommendations>div.has-children.show{padding-bottom:40px}.rank-math-ca-recommendations>div.has-children.show:after{font-size:30px;margin-top:-19px;content:\"\uf142\";color:#f7f9fa}.rank-math-ca-recommendations>div.has-children.show .submenu{display:-webkit-box;display:-ms-flexbox;display:flex}.rank-math-ca-recommendations>div.has-children.show .submenu:before{position:absolute;top:-8px;right:20%;width:0;height:0;content:\"\";border-width:0 6px 8px 6px;border-style:solid;border-color:rgba(0,0,0,0) rgba(0,0,0,0) #f7f9fa rgba(0,0,0,0)}.rank-math-ca-recommendations>div.has-children.show.headingCount{padding-bottom:68px}.rank-math-ca-recommendations>div.has-children.show.headingCount .submenu{margin-bottom:5px;padding-bottom:0;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.rank-math-ca-recommendations>div.has-children.show.headingCount .submenu:before{right:auto;left:20%}.rank-math-ca-recommendations>div.has-children.show.headingCount .submenu div{margin-bottom:10px;-webkit-box-flex:0;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%}div.rank-math-contentai-tab-content-keywords .components-panel__body{padding:20px 16px 16px}div.rank-math-contentai-tab-content-keywords .components-flex{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center}div.rank-math-contentai-tab-content-keywords .components-flex label{padding-bottom:0;font-weight:600;font-size:14px}div.rank-math-contentai-tab-content-keywords .components-flex .components-form-token-field__help{margin-top:10px}div.rank-math-contentai-tab-content-keywords .components-flex .components-input-control__container{max-width:135px;border-radius:4px}div.rank-math-contentai-tab-content-keywords .components-flex .components-input-control__container select{height:30px;font-size:13px;color:#7f868d}div.rank-math-contentai-tab-content-keywords .components-flex .components-input-control__container .components-input-control__backdrop{border-color:#b5bfc9}div.rank-math-contentai-tab-content-keywords ul{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:20px -3px 0}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip{display:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#fce9e8;border-radius:50px;margin-right:3px;margin-left:2px;margin-bottom:7px;padding:5px 8px 5px 10px;height:auto;min-height:32px;-webkit-box-sizing:border-box;box-sizing:border-box}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.show{display:-webkit-box;display:-ms-flexbox;display:flex}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip>span{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:130px}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip strong{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#eb4b41;font-size:13px;font-weight:500;line-height:1.4;color:#ed5e5e}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip strong span{font-size:11px;line-height:22px;margin-left:5px;padding:0 8px;background:#fef8f8;border-radius:11px;text-align:center;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.ok-fk{background:#ffeccf}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.ok-fk strong{color:#b27701}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.ok-fk strong span{background-color:#fffcf8}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.good-fk{background:#dff2df}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.good-fk strong{color:#418441}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.good-fk strong span{background-color:#f8fcf8}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.dark{background:#ec7169}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.dark strong{color:#fefafa}div.rank-math-contentai-tab-content-keywords ul li.rank-math-tooltip.dark strong span{color:#e84f44;background:#fad8d6}div.rank-math-contentai-tab-content-keywords .rank-math-related-keywords{margin-top:1.5rem}div.rank-math-contentai-tab-content-keywords .rank-math-related-keywords ul li{background:#f7f9fa}div.rank-math-contentai-tab-content-keywords .rank-math-related-keywords ul li strong{color:#242628}div.rank-math-contentai-tab-content-questions .rank-math-section-heading h2{font-weight:600}div.rank-math-contentai-tab-content-questions .rank-math-section-heading button{width:32px;height:32px;padding:0 !important;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}div.rank-math-contentai-tab-content-questions .rank-math-section-heading button:hover{color:#069de3}div.rank-math-contentai-tab-content-questions .rank-math-section-heading button:hover:after{display:none}div.rank-math-contentai-tab-content-questions .rank-math-section-heading button i{font-size:15px;height:auto}div.rank-math-contentai-tab-content-questions .rank-math-section-heading button i.rm-icon-tick{font-size:10px;font-weight:bold;vertical-align:0;color:#52a652}div.rank-math-contentai-tab-content-questions .components-form-token-field__help{display:block;margin-top:-10px;margin-bottom:10px}div.rank-math-contentai-tab-content-questions h3.rank-math-tooltip{font-size:13px;font-weight:500;line-height:1.2;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 0 7px;padding:12px;border-radius:5px;background-color:#f7f9fa;color:#242628;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:auto}div.rank-math-contentai-tab-content-links div.rank-math-section-heading{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column wrap;flex-flow:column wrap}div.rank-math-contentai-tab-content-links div.rank-math-section-heading h2{font-size:15px;width:100%;margin-bottom:10px !important;padding:0}div.rank-math-contentai-tab-content-links div.rank-math-section-heading p{margin-bottom:0}div.rank-math-contentai-tab-content-links ul{margin-left:15px;list-style:disclosure-closed;word-wrap:break-word}div.rank-math-contentai-tab-content-links ul li{font-weight:normal;list-style:disclosure-closed;line-height:1.4;margin-bottom:7px}div.rank-math-contentai-tab-content-links ul li a{text-decoration:none;color:inherit;border-bottom:1px dotted}div.rank-math-contentai-tab-content-links ul li a:hover,div.rank-math-contentai-tab-content-links ul li a:focus{color:#069de3}#rank_math_metabox_content_ai .rank-math-ca-credits{top:-28px;right:90px}#rank_math_metabox_content_ai .rank-math-ca-credits>span{display:none}#rank_math_metabox_content_ai .rank-math-ca-credits .update-credits.rank-math-tooltip span{left:-50px;height:auto}#rank_math_metabox_content_ai .rank-math-ca-credits .update-credits.rank-math-tooltip span:after{left:75%}#rank_math_metabox_content_ai .inside{margin:0;padding:0}#rank_math_metabox_content_ai .inside .error.inline{display:none}#rank_math_metabox_content_ai .inside .rank-math-ca-top-section .components-button{visibility:hidden}#rank_math_metabox_content_ai .inside .components-panel__body{border-top:none}#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-ca-top-section,#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-ca-keywords-wrapper,#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-content-ai-data h3.rank-math-ca-section-title,#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-ca-score,#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-ca-recommendations>div,#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-contentai-tabs .components-tab-panel__tabs,#rank_math_metabox_content_ai .inside .components-panel__body .components-panel__body{padding-right:12px;padding-left:12px}#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-tab-content-ai-tools{overflow:auto;max-height:500px}#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-contentai-tabs .components-tab-panel__tab-content{overflow-y:scroll;max-height:500px}#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-contentai-tabs .rank-math-section-heading h2{margin:0 !important;padding:0}#rank_math_metabox_content_ai .inside .components-panel__body .rank-math-ca-force-update{top:56.5px}.block-editor__container #rank_math_metabox_content_ai{display:none !important}body.rtl #wpwrap button.rank-math-content-ai,body.rtl #rank-math-rm-app-root button.rank-math-content-ai,body.rtl #elementor-editor-wrapper button.rank-math-content-ai{left:42px;right:auto}body.rtl #wpwrap button.rank-math-content-ai i,body.rtl #rank-math-rm-app-root button.rank-math-content-ai i,body.rtl #elementor-editor-wrapper button.rank-math-content-ai i{margin-right:0;margin-left:5px}body.rtl #wpwrap div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper button.rank-math-ca-force-update,body.rtl #rank-math-rm-app-root div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper button.rank-math-ca-force-update,body.rtl #elementor-editor-wrapper div.rank-math-ca-keywords-wrapper .rank-math-ca-credits-wrapper button.rank-math-ca-force-update{left:1px;right:auto}@-webkit-keyframes snackbar_loading{0%{left:-100%}100%{left:100%}}@keyframes snackbar_loading{0%{left:-100%}100%{left:100%}}.rank-math-ai-button.is-link{text-decoration:none}#rank-math-content-ai-snackbar{position:fixed;z-index:999999;bottom:25px;left:50px}#rank-math-content-ai-snackbar>div{-webkit-box-sizing:border-box;box-sizing:border-box;width:350px;min-height:150px;font-size:18px;position:relative;border-radius:6px;-webkit-box-shadow:0px 20px 40px 10px rgba(0,0,0,.2);box-shadow:0px 20px 40px 10px rgba(0,0,0,.2);background:#fff}#rank-math-content-ai-snackbar>div .snackbar-loader{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:calc(150px - 2rem);padding-top:15px}#rank-math-content-ai-snackbar>div .snackbar-loader span{width:100%;height:16px;color:rgba(0,0,0,0);background-color:#eee;background-color:#f0f0f0;overflow:hidden;position:relative}#rank-math-content-ai-snackbar>div .snackbar-loader span:first-child{width:70%}#rank-math-content-ai-snackbar>div .snackbar-loader span:nth-child(2){width:80%;-webkit-animation-delay:.3s;animation-delay:.3s}#rank-math-content-ai-snackbar>div .snackbar-loader span:nth-child(3){width:90%;-webkit-animation-delay:.6s;animation-delay:.6s}#rank-math-content-ai-snackbar>div .snackbar-loader span:last-child{-webkit-animation-delay:.9s;animation-delay:.9s}#rank-math-content-ai-snackbar>div .snackbar-loader span:before{content:\"\";position:absolute;top:0;left:-100%;width:100%;height:100%;background:-webkit-gradient(linear, left top, right top, from(transparent), color-stop(rgba(255, 255, 255, 0.8)), to(transparent));background:linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.8), transparent);-webkit-animation:snackbar_loading 3s infinite;animation:snackbar_loading 3s infinite}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:12px 20px;border-bottom:1px solid #e0e0e0}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header .main-title{margin:0;font-size:14px;font-weight:500;color:#1e1e1e}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header .main-title span{color:#9b9b9b}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header button{display:block;text-decoration:none}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header button.close-snackbar{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;-webkit-box-shadow:none;box-shadow:none;line-height:1}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header button.close-snackbar svg{width:20px;height:20px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header .snackbar-pagination{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header .snackbar-pagination button{font-size:14px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-header .snackbar-pagination span{font-size:14px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:16px;padding:16px 20px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .pagination-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .pagination-container h4{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:8px;margin:0;font-size:13px;font-weight:500;color:#1e1e1e}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .desc{padding:8px 16px;margin:0;color:rgba(0,0,0,.88);background:rgba(232,166,35,.1);font-size:13px;line-height:19px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:13px;color:#1e1e1e}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;padding:5px;-webkit-box-shadow:none;box-shadow:none;line-height:1}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small.previous{margin-right:4px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small.next{margin-left:4px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small:hover{color:#017cba;background:rgba(1,124,186,.1)}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small.next::after,#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small.previous::after{display:inline-block;content:\"\";width:7px;height:7px;border-color:rgba(36,59,83,.3)}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small.next::after{-webkit-transform:rotate(-45deg) translateX(-2px) translateY(-2px);transform:rotate(-45deg) translateX(-2px) translateY(-2px);border-bottom:1px solid;border-right:1px solid}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-pagination .components-button.is-small.previous::after{-webkit-transform:rotate(-45deg) translateX(2px) translateY(2px);transform:rotate(-45deg) translateX(2px) translateY(2px);border-top:1px solid;border-left:1px solid}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions{display:-webkit-box;display:-ms-flexbox;display:flex;gap:8px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:6px;padding-top:8px;padding-bottom:8px;-webkit-transition:.2s all ease-in-out;transition:.2s all ease-in-out}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.approve-content{color:#fff;background:#017cba;border-color:#017cba;-webkit-box-shadow:none;box-shadow:none}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.approve-content .rm-icon{font-size:16px}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.approve-content:hover{background:#006ba1}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.reject-content{color:#757575;-webkit-box-shadow:0 0 0 1px #c6c6c6;box-shadow:0 0 0 1px #c6c6c6}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.reject-content:hover{-webkit-box-shadow:0 0 0 1px #f24f65;box-shadow:0 0 0 1px #f24f65;color:#f24f65;background:-webkit-gradient(linear, left bottom, left top, from(rgba(246, 98, 118, 0.04)), to(rgba(246, 98, 118, 0.04))),#fff;background:linear-gradient(0deg, rgba(246, 98, 118, 0.04), rgba(246, 98, 118, 0.04)),#fff}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.reject-content:hover svg path{fill:#f24f65}#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.undo-content:hover,#rank-math-content-ai-snackbar>div .snackbar-content .snackbar-body .snackbar-actions .components-button.is-secondary.regenerate-content:hover{background:rgba(1,124,186,.08)}body.et_divi_theme #rank-math-content-ai-snackbar,body.elementor-editor-active #rank-math-content-ai-snackbar{left:unset;right:20px}div.rank-math-content-ai-wrapper .rank-math-ca-credits{position:absolute;top:15px;z-index:99;right:75px}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits{position:absolute;z-index:inherit;left:-22px;display:inline;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits i{font-size:11px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-transform:scaleX(-1);transform:scaleX(-1);-webkit-box-align:center;-ms-flex-align:center;align-items:center}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits i:before{margin-bottom:2px;margin-left:1px}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits.loading i:before{-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits.rank-math-tooltip span{top:100%;bottom:auto}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits.rank-math-tooltip span:after{top:-8px;-webkit-transform:rotate(180deg);transform:rotate(180deg);left:47%}div.rank-math-content-ai-wrapper .rank-math-ca-credits .update-credits.rank-math-tooltip:hover span{top:130%;bottom:auto;height:49px}div.rank-math-content-ai-wrapper .rank-math-tabs .components-tab-panel__tabs{-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}div.rank-math-content-ai-wrapper .rank-math-tabs .components-tab-panel__tabs button{width:auto;padding:0 .5rem}div.rank-math-content-ai-wrapper .rank-math-tabs .components-tab-panel__tab-content{border-top:1px solid #dadfe4}div.rank-math-content-ai-wrapper.is-opened{padding:0 !important;background:#fff}div.rank-math-content-ai-wrapper .components-panel__body{padding:20px 16px 16px;border-top:0;position:relative}div.rank-math-content-ai-wrapper .rank-math-ca-warning{padding:25px 16px;text-align:center;border-top:1px solid #ddd;border-bottom:1px solid #ddd;background-color:#fff8e5}div.rank-math-content-ai-wrapper .rank-math-ca-warning h3{font-size:18px;margin-bottom:8px}div.rank-math-content-ai-wrapper .rank-math-ca-warning p{font-size:15px;margin-bottom:10px;color:#606060}div.rank-math-content-ai-wrapper .rank-math-ca-warning a{font-size:14px;height:32px}div.rank-math-content-ai-wrapper .rank-math-content-ai-data .loader-text{font-size:18px;position:absolute;z-index:-1;top:50px;right:0;left:0;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;padding:25px;text-align:center}div.rank-math-content-ai-wrapper .rank-math-content-ai-data .loader-text span{line-height:1.3;position:absolute;top:100%;right:0;bottom:0;left:0;margin-top:50px;opacity:0}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading{position:relative;min-height:200px}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading:after{position:absolute;z-index:1;top:0;right:0;bottom:0;left:0;content:\"\";background-color:rgba(255,255,255,.85)}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text{z-index:99}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text span{padding:16px;-webkit-animation-name:loader;animation-name:loader;-webkit-animation-duration:6s;animation-duration:6s;-webkit-animation-fill-mode:both;animation-fill-mode:both}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text span:first-child{-webkit-animation-delay:0s;animation-delay:0s}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text span:nth-child(2){-webkit-animation-delay:4s;animation-delay:4s}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text span:nth-child(3){-webkit-animation-delay:8s;animation-delay:8s}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text span:nth-child(4){-webkit-animation-delay:12s;animation-delay:12s}div.rank-math-content-ai-wrapper .rank-math-content-ai-data.loading .loader-text span:nth-child(5){-webkit-animation-name:loader2;animation-name:loader2;-webkit-animation-delay:16s;animation-delay:16s}div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title{font-size:15px;font-weight:500;margin-bottom:0;padding:18px 16px;border-bottom:1px solid #ddd}div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.rank-math-ca-section-title span{font-size:12px;line-height:18px;display:inline-block;margin:0 2px 0 5px;padding:0 5px;vertical-align:2px;text-transform:uppercase;color:#e91e63;border-radius:3px;background:rgba(233,30,99,.1)}div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3{text-transform:initial}div.rank-math-content-ai-wrapper .rank-math-content-ai-data h3.no-data{font-size:15px;line-height:1.5;margin-top:20px;padding:12px;text-transform:initial;background-color:rgba(0,0,0,0)}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .components-tab-panel__tabs{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:0 16px;border-bottom:1px solid #ddd}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .rank-math-section-heading{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:15px}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs .rank-math-section-heading h2{font-size:15px;font-weight:600;margin:0;padding:0}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs button:not(:disabled){font-size:14px;line-height:1;margin-bottom:-1px;padding:0 10px;-webkit-box-shadow:none;box-shadow:none}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs button:not(:disabled).is-active:before{bottom:0;border-bottom:2px solid #069de3}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs button:not(:disabled):focus{color:#069de3;-webkit-box-shadow:none;box-shadow:none}div.rank-math-content-ai-wrapper .rank-math-contentai-tabs button:not(:disabled) i{vertical-align:-5px}div.rank-math-content-ai-wrapper #rank-math-help-icon{font-size:13px;line-height:12px;display:inline-block;width:12px;height:12px;margin:0 5px 0 4px;text-align:center;color:#fff;border-radius:50%;background-color:#7f868d}div.rank-math-content-ai-wrapper #rank-math-help-icon:hover{background-color:#069de3}.rank-math-sidebar-content-ai-panel.components-panel{position:static}.rank-math-sidebar-content-ai-panel.components-panel .rank-math-content-ai-wrapper .rank-math-ca-top-section button{display:none}.rank-math-sidebar-content-ai-panel.components-panel .rank-math-content-ai-wrapper .rank-math-tabs{position:relative;z-index:0}.rank-math-sidebar-content-ai-panel.components-panel:hover .update-credits{display:inline !important}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-rest.php","ext":"php","size":20693,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Global functionality of the plugin.\n *\n * Defines the functionality loaded on admin.\n *\n * @since      1.0.71\n * @package    RankMath\n * @subpackage RankMath\\Rest\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse WP_Error;\nuse WP_REST_Server;\nuse WP_REST_Request;\nuse WP_REST_Controller;\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Rest class.\n *\/\nclass Rest extends WP_REST_Controller {\n\n\t\/**\n\t * Registered data.\n\t *\n\t * @var array|false\n\t *\/\n\tprivate $registered;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->namespace  = \\RankMath\\Rest\\Rest_Helper::BASE . '\/ca';\n\t\t$this->registered = Admin_Helper::get_registration_data();\n\t}\n\n\t\/**\n\t * Registers the routes for the objects of the controller.\n\t *\/\n\tpublic function register_routes() {\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/researchKeyword',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'research_keyword' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => $this->get_research_keyword_args(),\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/getCredits',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'get_credits' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/createPost',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'create_post' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'content' => [\n\t\t\t\t\t\t'description' => esc_html__( 'The content of the new post.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t\t'title'   => [\n\t\t\t\t\t\t'description' => esc_html__( 'The title of the new post.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/saveOutput',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'save_output' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'outputs'    => [\n\t\t\t\t\t\t'description' => esc_html__( 'An array of AI-generated and existing outputs to be saved.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'array',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t\t'endpoint'   => [\n\t\t\t\t\t\t'description' => esc_html__( 'The API endpoint for which the output was generated.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t\t'isChat'     => [\n\t\t\t\t\t\t'description' => esc_html__( 'Indicates if the request was for the Chat endpoint.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'boolean',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'attributes' => [\n\t\t\t\t\t\t'description' => esc_html__( 'The parameters used to generate the AI output.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'object',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'credits'    => [\n\t\t\t\t\t\t'description' => esc_html__( 'Credit usage details returned by the API.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'object',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/deleteOutput',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'delete_output' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'isChat' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Indicates if the request to delete the output was for the Chat endpoint.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'boolean',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'index'  => [\n\t\t\t\t\t\t'description' => esc_html__( 'The output index to delete, applicable only to the Chat endpoint.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/updateRecentPrompt',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'update_recent_prompt' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'prompt' => [\n\t\t\t\t\t\t'description' => esc_html__( 'The selected prompt to be updated in the recent prompts.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/updatePrompt',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'update_prompt' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'prompt' => [\n\t\t\t\t\t\t'description'       => esc_html__( 'The prompt data to be saved in the database.', 'rank-math' ),\n\t\t\t\t\t\t'required'          => true,\n\t\t\t\t\t\t'validate_callback' => [ '\\\\RankMath\\\\Rest\\\\Rest_Helper', 'is_param_empty' ],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/savePrompts',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'save_prompts' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'prompts' => [\n\t\t\t\t\t\t'description' => esc_html__( 'A list of prompts received from the API to be saved in the database.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'array',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/pingContentAI',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'callback'            => [ $this, 'ping_content_ai' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_ping_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'plan'        => [\n\t\t\t\t\t\t'description' => esc_html__( 'Content AI plan to update in the Database.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t\t'refreshDate' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Content AI reset date to update in the Database', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/generateAlt',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'generate_alt' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'attachmentIds' => [\n\t\t\t\t\t\t'description' => esc_html__( 'List of attachment IDs for which to generate alt text.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'array',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/updateCredits',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t'callback'            => [ $this, 'update_credits' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t'args'                => [\n\t\t\t\t\t'credits' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Credit usage details returned by the API.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Check API key in request.\n\t *\n\t * @param  WP_REST_Request $request Full details about the request.\n\t * @return bool                     Whether the API key matches or not.\n\t *\/\n\tpublic function has_ping_permission( WP_REST_Request $request ) {\n\t\tif ( empty( $this->registered ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $request->get_param( 'apiKey' ) === $this->registered['api_key'] &&\n\t\t\t$request->get_param( 'username' ) === $this->registered['username'];\n\t}\n\n\t\/**\n\t * Determines if the current user can manage analytics.\n\t *\n\t * @return true\n\t *\/\n\tpublic function has_permission() {\n\t\tif ( ! Helper::has_cap( 'content_ai' ) || empty( $this->registered ) ) {\n\t\t\treturn new WP_Error(\n\t\t\t\t'rest_cannot_access',\n\t\t\t\t__( 'Sorry, only authenticated users can research the keyword.', 'rank-math' ),\n\t\t\t\t[ 'status' => rest_authorization_required_code() ]\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get Content AI Credits.\n\t *\n\t * @return int Credits.\n\t *\/\n\tpublic function get_credits() {\n\t\t$credits = Helper::get_content_ai_credits( true, true );\n\t\tif ( ! empty( $credits['error'] ) ) {\n\t\t\t$error       = $credits['error'];\n\t\t\t$error_texts = Helper::get_content_ai_errors();\n\t\t\treturn [\n\t\t\t\t'error'   => ! empty( $error_texts[ $error ] ) ? wp_specialchars_decode( $error_texts[ $error ], ENT_QUOTES ) : $error,\n\t\t\t\t'credits' => isset( $credits['credits'] ) ? $credits['credits'] : '',\n\t\t\t];\n\t\t}\n\n\t\treturn $credits;\n\t}\n\n\t\/**\n\t * Research a keyword.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function research_keyword( WP_REST_Request $request ) {\n\t\t$object_id    = $request->get_param( 'objectID' );\n\t\t$country      = $request->get_param( 'country' );\n\t\t$keyword      = mb_strtolower( $request->get_param( 'keyword' ) );\n\t\t$force_update = $request->get_param( 'forceUpdate' );\n\t\t$keyword_data = get_option( 'rank_math_ca_data' );\n\t\t$post_type    = 0 === $object_id ? 'page' : get_post_type( $object_id );\n\n\t\tif ( ! in_array( $post_type, (array) Helper::get_settings( 'general.content_ai_post_types' ), true ) ) {\n\t\t\treturn [\n\t\t\t\t'data' => esc_html__( 'Content AI is not enabled on this Post type.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( ! apply_filters( 'rank_math\/content_ai\/call_api', true ) ) {\n\t\t\treturn [\n\t\t\t\t'data' => 'show_dummy_data',\n\t\t\t];\n\t\t}\n\n\t\tif (\n\t\t\t! $force_update &&\n\t\t\t! empty( $keyword_data ) &&\n\t\t\t! empty( $keyword_data[ $country ] ) &&\n\t\t\t! empty( $keyword_data[ $country ][ $keyword ] )\n\t\t) {\n\t\t\tupdate_post_meta(\n\t\t\t\t$object_id,\n\t\t\t\t'rank_math_ca_keyword',\n\t\t\t\t[\n\t\t\t\t\t'keyword' => $keyword,\n\t\t\t\t\t'country' => $country,\n\t\t\t\t]\n\t\t\t);\n\n\t\t\treturn [\n\t\t\t\t'data'    => $keyword_data[ $country ][ $keyword ],\n\t\t\t\t'keyword' => $keyword,\n\t\t\t];\n\t\t}\n\n\t\t$data = $this->get_researched_data( $keyword, $post_type, $country, $force_update );\n\t\tif ( ! empty( $data['error'] ) ) {\n\t\t\treturn $this->get_errored_data( $data['error'] );\n\t\t}\n\n\t\t$credits = ! empty( $data['credits'] ) ? $data['credits'] : 0;\n\t\tif ( ! empty( $credits ) ) {\n\t\t\t$credits = $credits['available'] - $credits['taken'];\n\t\t}\n\n\t\t$data = $data['data']['details'];\n\t\t$this->get_recommendations( $data );\n\n\t\tupdate_post_meta(\n\t\t\t$object_id,\n\t\t\t'rank_math_ca_keyword',\n\t\t\t[\n\t\t\t\t'keyword' => $keyword,\n\t\t\t\t'country' => $country,\n\t\t\t]\n\t\t);\n\t\t$keyword_data[ $country ][ $keyword ] = $data;\n\t\tupdate_option( 'rank_math_ca_data', $keyword_data, false );\n\t\tHelper::update_credits( $credits );\n\n\t\treturn [\n\t\t\t'data'    => $keyword_data[ $country ][ $keyword ],\n\t\t\t'credits' => $credits,\n\t\t\t'keyword' => $keyword,\n\t\t];\n\t}\n\n\t\/**\n\t * Get the arguments for the researchKeyword route.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_research_keyword_args() {\n\t\treturn [\n\t\t\t'keyword'      => [\n\t\t\t\t'description' => esc_html__( 'The keyword to be researched.', 'rank-math' ),\n\t\t\t\t'type'        => 'string',\n\t\t\t\t'required'    => true,\n\t\t\t],\n\t\t\t'country'      => [\n\t\t\t\t'description' => esc_html__( 'The country for which the keyword should be researched.', 'rank-math' ),\n\t\t\t\t'type'        => 'string',\n\t\t\t\t'required'    => true,\n\t\t\t],\n\t\t\t'objectID'     => [\n\t\t\t\t'description' => esc_html__( 'The ID of the post initiating the keyword research request.', 'rank-math' ),\n\t\t\t\t'type'        => 'integer',\n\t\t\t\t'required'    => true,\n\t\t\t],\n\t\t\t'force_update' => [\n\t\t\t\t'description' => esc_html__( 'If true, forces a fresh research request.', 'rank-math' ),\n\t\t\t\t'type'        => 'boolean',\n\t\t\t\t'required'    => false,\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Create a new Post from Content AI Page.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function create_post( WP_REST_Request $request ) {\n\t\t$content       = $request->get_param( 'content' );\n\t\t$title         = $request->get_param( 'title' );\n\t\t$title         = $title ? $title : 'Content AI Post';\n\t\t$blocks        = parse_blocks( $content );\n\t\t$current_block = ! empty( $blocks ) ? current( $blocks ) : '';\n\t\tif (\n\t\t\t! empty( $current_block ) &&\n\t\t\t$current_block['blockName'] === 'core\/heading' &&\n\t\t\t$current_block['attrs']['level'] === 1\n\t\t) {\n\t\t\t$title = wp_strip_all_tags( $current_block['innerHTML'] );\n\t\t}\n\n\t\t$post_id = wp_insert_post(\n\t\t\t[\n\t\t\t\t'post_title'   => $title,\n\t\t\t\t'post_content' => $content,\n\t\t\t]\n\t\t);\n\n\t\treturn wp_specialchars_decode( add_query_arg( 'tab', 'content-ai', get_edit_post_link( $post_id ) ) );\n\t}\n\n\t\/**\n\t * Save the API output.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function save_output( WP_REST_Request $request ) {\n\t\t$outputs      = $request->get_param( 'outputs' );\n\t\t$endpoint     = $request->get_param( 'endpoint' );\n\t\t$is_chat      = $request->get_param( 'isChat' );\n\t\t$attributes   = $request->get_param( 'attributes' );\n\t\t$credits_data = $request->get_param( 'credits' );\n\n\t\tif ( ! empty( $credits_data ) ) {\n\t\t\t$credits = ! empty( $credits_data['credits'] ) ? $credits_data['credits'] : [];\n\t\t\t$data    = [\n\t\t\t\t'credits'      => ! empty( $credits['available'] ) ? $credits['available'] - $credits['taken'] : 0,\n\t\t\t\t'plan'         => ! empty( $credits_data['plan'] ) ? $credits_data['plan'] : '',\n\t\t\t\t'refresh_date' => ! empty( $credits_data['refreshDate'] ) ? $credits_data['refreshDate'] : '',\n\t\t\t];\n\n\t\t\tHelper::update_credits( $data );\n\t\t}\n\n\t\tif ( $is_chat ) {\n\t\t\tHelper::update_chats( current( $outputs ), end( $attributes['messages'] ), $attributes['session'], $attributes['isNew'], $attributes['regenerate'] );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Helper::update_outputs( $endpoint, $outputs );\n\t}\n\n\t\/**\n\t * Delete the API output.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function delete_output( WP_REST_Request $request ) {\n\t\t$is_chat = $request->get_param( 'isChat' );\n\t\tif ( $is_chat ) {\n\t\t\treturn Helper::delete_chats( $request->get_param( 'index' ) );\n\t\t}\n\n\t\treturn Helper::delete_outputs();\n\t}\n\n\t\/**\n\t * Update the Prompts.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function update_prompt( WP_REST_Request $request ) {\n\t\t$prompt = $request->get_param( 'prompt' );\n\n\t\tif ( is_string( $prompt ) ) {\n\t\t\treturn Helper::delete_prompt( $prompt );\n\t\t}\n\n\t\treturn Helper::update_prompts( $prompt );\n\t}\n\n\t\/**\n\t * Save the Prompts.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function save_prompts( WP_REST_Request $request ) {\n\t\t$prompts = $request->get_param( 'prompts' );\n\t\tif ( empty( $prompts ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Helper::save_default_prompts( $prompts );\n\t}\n\n\t\/**\n\t * Update the Recent Prompts.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function update_recent_prompt( WP_REST_Request $request ) {\n\t\t$prompt = $request->get_param( 'prompt' );\n\t\treturn Helper::update_recent_prompts( $prompt );\n\t}\n\n\t\/**\n\t * Endpoing to update the AI plan and credits.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function ping_content_ai( WP_REST_Request $request ) {\n\t\t$credits = ! empty( $request->get_param( 'credits' ) ) ? json_decode( $request->get_param( 'credits' ), true ) : [];\n\t\t$data    = [\n\t\t\t'credits'      => ! empty( $credits['available'] ) ? $credits['available'] - $credits['taken'] : 0,\n\t\t\t'plan'         => $request->get_param( 'plan' ),\n\t\t\t'refresh_date' => $request->get_param( 'refreshDate' ),\n\t\t];\n\n\t\tHelper::update_credits( $data );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Endpoint to generate Image Alt.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function generate_alt( WP_REST_Request $request ) {\n\t\t$ids = $request->get_param( 'attachmentIds' );\n\t\tif ( empty( $ids ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdo_action( 'rank_math\/content_ai\/generate_alt', $ids );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Endpoint to Update the credits data.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function update_credits( WP_REST_Request $request ) {\n\t\t$credits = $request->get_param( 'credits' );\n\t\tHelper::update_credits( $credits );\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get data from the API.\n\t *\n\t * @param string $keyword      Researched keyword.\n\t * @param string $post_type    Researched post type.\n\t * @param string $country      Researched country.\n\t * @param bool   $force_update Whether to force update the researched data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_researched_data( $keyword, $post_type, $country, $force_update = false ) {\n\t\t$args = [\n\t\t\t'username'  => rawurlencode( $this->registered['username'] ),\n\t\t\t'api_key'   => rawurlencode( $this->registered['api_key'] ),\n\t\t\t'keyword'   => rawurlencode( $keyword ),\n\t\t\t'post_type' => rawurlencode( $post_type ),\n\t\t\t'site_url'  => rawurlencode( Helper::get_home_url() ),\n\t\t\t'new_api'   => 1,\n\t\t];\n\n\t\tif ( 'all' !== $country ) {\n\t\t\t$args['locale'] = rawurlencode( $country );\n\t\t}\n\n\t\tif ( $force_update ) {\n\t\t\t$args['force_refresh'] = 1;\n\t\t}\n\n\t\t$url = add_query_arg(\n\t\t\t$args,\n\t\t\tCONTENT_AI_URL . '\/ai\/research'\n\t\t);\n\n\t\t$data = wp_remote_get(\n\t\t\t$url,\n\t\t\t[\n\t\t\t\t'timeout' => 60,\n\t\t\t]\n\t\t);\n\n\t\t$response_code = wp_remote_retrieve_response_code( $data );\n\t\tif ( 200 !== $response_code ) {\n\t\t\treturn [\n\t\t\t\t'error' => $this->research_keyword_error( $data, $response_code ),\n\t\t\t];\n\t\t}\n\n\t\t$data = wp_remote_retrieve_body( $data );\n\t\t$data = json_decode( $data, true );\n\n\t\tif ( empty( $data['error'] ) && empty( $data['data']['details'] ) ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'No data found for the researched keyword.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Update the error message based on the pre-defined Content AI errors defined in the plugin.\n\t *\n\t * @param array $response      API response.\n\t * @param int   $response_code API response code.\n\t *\n\t * @return string Error message.\n\t *\/\n\tprivate function research_keyword_error( $response, $response_code ) {\n\t\tif ( $response_code === 410 ) {\n\t\t\treturn wp_kses_post(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/\/ Translators: link to the update page.\n\t\t\t\t\t__( 'There is a new version of Content AI available! %s the Rank Math SEO plugin to use this feature.', 'rank-math' ),\n\t\t\t\t\t'<a href=\"' . esc_url( self_admin_url( 'update-core.php' ) ) . '\">' . __( 'Please update', 'rank-math' ) . '<\/a>'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$error_texts = Helper::get_content_ai_errors();\n\t\t$data        = wp_remote_retrieve_body( $response );\n\t\t$data        = json_decode( $data, true );\n\n\t\treturn isset( $data['message'] ) && isset( $error_texts[ $data['message'] ] ) ? $error_texts[ $data['message'] ] : $response['response']['message'];\n\t}\n\n\t\/**\n\t * Get errored data.\n\t *\n\t * @param array $error Error data received from the API.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_errored_data( $error ) {\n\t\tif ( empty( $error['code'] ) ) {\n\t\t\treturn [\n\t\t\t\t'data' => $error,\n\t\t\t];\n\t\t}\n\n\t\tif ( 'invalid_domain' === $error['code'] ) {\n\t\t\treturn [\n\t\t\t\t'data' => esc_html__( 'This feature is not available on the localhost.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( 'domain_limit_reached' === $error['code'] ) {\n\t\t\treturn [\n\t\t\t\t'data' => esc_html__( 'You have used all the free credits which are allowed to this domain.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\t'data'    => '',\n\t\t\t'credits' => $error['code'],\n\t\t];\n\t}\n\n\t\/**\n\t * Get the Recommendations data.\n\t *\n\t * @param array $data Researched data.\n\t *\/\n\tprivate function get_recommendations( &$data ) {\n\t\tforeach ( $data['recommendations'] as $key => $value ) {\n\t\t\tif ( ! is_array( $value ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data['recommendations'][ $key ]['total'] = array_sum( $value );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-admin.php","ext":"php","size":6064,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Content AI module.\n *\n * @since      1.0.219\n * @package    RankMath\n * @subpackage RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\CMB2;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin {\n\tuse Hooker;\n\n\t\/**\n\t * Content_AI object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $content_ai;\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param Object $content_ai Content_AI class object.\n\t *\/\n\tpublic function __construct( $content_ai ) {\n\t\tif ( ! is_admin() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->content_ai = $content_ai;\n\t\t$this->filter( 'rank_math\/analytics\/post_data', 'add_contentai_data' );\n\t\t$this->filter( 'rank_math\/settings\/general', 'add_settings' );\n\t\t$this->action( 'cmb2_admin_init', 'add_content_ai_metabox', 11 );\n\t\t$this->action( 'rank_math\/deregister_site', 'remove_credits_data' );\n\t\t$this->filter( 'rank_math\/status\/rank_math_info', 'content_ai_info' );\n\t\t$this->action( 'rank_math\/connect\/account_connected', 'refresh_content_ai_credits' );\n\t}\n\n\t\/**\n\t * Add Content AI score in Single Page Site Analytics.\n\t *\n\t * @param  array $data array.\n\t * @return array $data sorted array.\n\t *\/\n\tpublic function add_contentai_data( $data ) {\n\t\t$post_id                = $data['object_id'];\n\t\t$content_ai_data        = Helper::get_post_meta( 'contentai_score', $post_id );\n\t\t$content_ai_score       = ! empty( $content_ai_data ) ? round( array_sum( array_values( $content_ai_data ) ) \/ count( $content_ai_data ) ) : 0;\n\t\t$data['contentAiScore'] = absint( $content_ai_score );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Remove credits data when site is disconnected.\n\t *\/\n\tpublic function remove_credits_data() {\n\t\tdelete_option( 'rank_math_ca_credits' );\n\t}\n\n\t\/**\n\t * Add module settings in the General Settings panel.\n\t *\n\t * @param  array $tabs Array of option panel tabs.\n\t * @return array\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'content-ai' => [\n\t\t\t\t\t'icon'  => 'rm-icon rm-icon-content-ai',\n\t\t\t\t\t'title' => esc_html__( 'Content AI', 'rank-math' ),\n\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t'desc'  => sprintf( esc_html__( 'Get sophisticated AI suggestions for related Keywords, Questions & Links to include in the SEO meta & Content Area. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'content-ai-settings', 'Options Panel Content AI Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'  => __DIR__ . '\/views\/options.php',\n\t\t\t\t\t'json'  => [\n\t\t\t\t\t\t'countries'   => Helper::choices_contentai_countries(),\n\t\t\t\t\t\t'credits'     => Helper::get_credits(),\n\t\t\t\t\t\t'refreshDate' => Helper::get_content_ai_refresh_date(),\n\t\t\t\t\t\t'tone'        => Helper::choices_contentai_tone(),\n\t\t\t\t\t\t'audience'    => Helper::choices_contentai_audience(),\n\t\t\t\t\t\t'language'    => Helper::choices_contentai_language(),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t8\n\t\t);\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Add link suggestion metabox.\n\t *\/\n\tpublic function add_content_ai_metabox() {\n\t\tif ( ! $this->content_ai->can_add_tab() || 'classic' !== Helper::get_current_editor() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$id  = 'rank_math_metabox_content_ai';\n\t\t$cmb = new_cmb2_box(\n\t\t\t[\n\t\t\t\t'id'               => $id,\n\t\t\t\t'title'            => esc_html__( 'Content AI', 'rank-math' ),\n\t\t\t\t'object_types'     => array_keys( Helper::get_accessible_post_types() ),\n\t\t\t\t'context'          => 'side',\n\t\t\t\t'priority'         => 'high',\n\t\t\t\t'mb_callback_args' => [ '__block_editor_compatible_meta_box' => false ],\n\t\t\t]\n\t\t);\n\n\t\tCMB2::pre_init( $cmb );\n\n\t\t\/\/ Move content AI metabox below the Publish box.\n\t\t$this->reorder_content_ai_metabox( $id );\n\t}\n\n\t\/**\n\t * Add Content AI details in System Info\n\t *\n\t * @param array $rankmath Array of rankmath.\n\t *\/\n\tpublic function content_ai_info( $rankmath ) {\n\t\t$refresh_date = Helper::get_content_ai_refresh_date();\n\t\t$content_ai   = [\n\t\t\t'ca_plan'         => [\n\t\t\t\t'label' => esc_html__( 'Content AI Plan', 'rank-math' ),\n\t\t\t\t'value' => \\ucwords( Helper::get_content_ai_plan() ),\n\t\t\t],\n\t\t\t'ca_credits'      => [\n\t\t\t\t'label' => esc_html__( 'Content AI Credits', 'rank-math' ),\n\t\t\t\t'value' => Helper::get_content_ai_credits(),\n\t\t\t],\n\t\t\t'ca_refresh_date' => [\n\t\t\t\t'label' => esc_html__( 'Content AI Refresh Date', 'rank-math' ),\n\t\t\t\t'value' => $refresh_date ? wp_date( 'Y-m-d g:i a', $refresh_date ) : '',\n\t\t\t],\n\t\t];\n\n\t\tarray_splice( $rankmath['fields'], 3, 0, $content_ai );\n\n\t\treturn $rankmath;\n\t}\n\n\t\/**\n\t * Refresh Content AI credits when account is connected.\n\t *\n\t * @return void\n\t *\/\n\tpublic function refresh_content_ai_credits() {\n\t\tHelper::get_content_ai_credits( true );\n\t}\n\n\t\/**\n\t * Reorder the Content AI metabox in Classic editor.\n\t *\n\t * @param string $id Metabox ID.\n\t * @return void\n\t *\/\n\tprivate function reorder_content_ai_metabox( $id ) {\n\t\t$post_type = Helper::get_post_type();\n\t\tif ( ! $post_type ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$user  = wp_get_current_user();\n\t\t$order = (array) get_user_option( 'meta-box-order_' . $post_type, $user->ID );\n\t\tif ( ! empty( $order['normal'] ) && false !== strpos( $order['normal'], $id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$order['side'] = ! isset( $order['side'] ) ? '' : $order['side'];\n\t\tif ( false !== strpos( $order['side'], $id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( false === strpos( $order['side'], 'submitdiv' ) ) {\n\t\t\t$order['side'] = 'submitdiv,' . $order['side'];\n\t\t}\n\n\t\tif ( ',' === substr( $order['side'], -1 ) ) {\n\t\t\t$order['side'] = substr( $order['side'], 0, -1 );\n\t\t}\n\n\t\t$current_order = [];\n\t\t$current_order = explode( ',', $order['side'] );\n\n\t\t$key = array_search( 'submitdiv', $current_order, true );\n\t\tif ( false === $key ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$new_order = array_merge(\n\t\t\tarray_slice( $current_order, 0, $key + 1 ),\n\t\t\t[ $id ]\n\t\t);\n\n\t\tif ( count( $current_order ) > $key ) {\n\t\t\t$new_order = array_merge(\n\t\t\t\t$new_order,\n\t\t\t\tarray_slice( $current_order, $key + 1 )\n\t\t\t);\n\t\t}\n\n\t\t$order['side'] = implode( ',', array_unique( $new_order ) );\n\t\tupdate_user_option( $user->ID, 'meta-box-order_' . $post_type, $order, true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-assets.php","ext":"php","size":5115,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Content AI module.\n *\n * @since      1.0.219\n * @package    RankMath\n * @subpackage RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Assets {\n\tuse Hooker;\n\n\t\/**\n\t * Content_AI object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $content_ai;\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param Object $content_ai Content_AI class object.\n\t *\/\n\tpublic function __construct( $content_ai ) {\n\t\t$this->content_ai = $content_ai;\n\t\t$this->action( 'rank_math\/admin\/editor_scripts', 'editor_scripts', 20 );\n\t\t$this->filter( 'rank_math\/elementor\/dark_styles', 'add_dark_style' );\n\t\t$this->action( 'admin_enqueue_scripts', 'media_scripts', 20 );\n\t}\n\n\t\/**\n\t * Add dark style.\n\t *\n\t * @param array $styles The dark mode styles.\n\t *\/\n\tpublic function add_dark_style( $styles = [] ) {\n\n\t\t$styles['rank-math-content-ai-dark'] = rank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/css\/content-ai-dark.css';\n\n\t\treturn $styles;\n\t}\n\n\t\/**\n\t * Enqueue Content AI files in the enabled post types.\n\t *\n\t * @param WP_Screen $screen Post screen object.\n\t *\n\t * @return void\n\t *\/\n\tpublic function editor_scripts( $screen ) {\n\t\tif ( ! $this->content_ai->can_add_tab() || ! Helper::get_current_editor() ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_register_style( 'rank-math-common', rank_math()->plugin_url() . 'assets\/admin\/css\/common.css', null, rank_math()->version );\n\t\twp_enqueue_style(\n\t\t\t'rank-math-content-ai',\n\t\t\trank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/css\/content-ai.css',\n\t\t\t[ 'rank-math-common' ],\n\t\t\trank_math()->version\n\t\t);\n\n\t\twp_enqueue_script(\n\t\t\t'rank-math-content-ai',\n\t\t\trank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/js\/content-ai.js',\n\t\t\t[ 'rank-math-editor' ],\n\t\t\trank_math()->version,\n\t\t\ttrue\n\t\t);\n\n\t\twp_enqueue_style(\n\t\t\t'rank-math-content-ai-page',\n\t\t\trank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/css\/content-ai-page.css',\n\t\t\t[ 'rank-math-common' ],\n\t\t\trank_math()->version\n\t\t);\n\t\twp_set_script_translations( 'rank-math-content-ai', 'rank-math' );\n\n\t\t$this->content_ai->localized_data( $this->get_post_localized_data( $screen ) );\n\t}\n\n\t\/**\n\t * Enqueue our inject-generate-alt-text script on the Edit Media page (post.php with post_type=attachment).\n\t *\/\n\tpublic function media_scripts() {\n\t\t$screen = \\function_exists( 'get_current_screen' ) ? get_current_screen() : false;\n\t\tif ( ! $screen || 'attachment' !== $screen->post_type ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_enqueue_script(\n\t\t\t'rank-math-content-ai-media',\n\t\t\trank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/js\/content-ai-media.js',\n\t\t\t[ 'jquery', 'wp-api-fetch', 'lodash', 'wp-element', 'wp-components' ],\n\t\t\trank_math()->version,\n\t\t\ttrue\n\t\t);\n\n\t\twp_enqueue_style(\n\t\t\t'rank-math-content-ai-page',\n\t\t\trank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/css\/content-ai-page.css',\n\t\t\t[ 'rank-math-common', 'wp-components' ],\n\t\t\trank_math()->version\n\t\t);\n\n\t\t$this->content_ai->localized_data();\n\t}\n\n\t\/**\n\t * Add meta data to use in gutenberg.\n\t *\n\t * @param Screen $screen Sceen object.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_post_localized_data( $screen ) {\n\t\t$values    = [];\n\t\t$countries = [];\n\t\tforeach ( Helper::choices_contentai_countries() as $value => $label ) {\n\t\t\t$countries[] = [\n\t\t\t\t'value' => $value,\n\t\t\t\t'label' => $label,\n\t\t\t];\n\t\t}\n\n\t\t$values = [\n\t\t\t'country'   => Helper::get_settings( 'general.content_ai_country', 'all' ),\n\t\t\t'countries' => $countries,\n\t\t\t'viewed'    => true,\n\t\t\t'keyword'   => '',\n\t\t\t'score'     => [\n\t\t\t\t'keywords'     => 0,\n\t\t\t\t'wordCount'    => 0,\n\t\t\t\t'linkCount'    => 0,\n\t\t\t\t'headingCount' => 0,\n\t\t\t\t'mediaCount'   => 0,\n\t\t\t],\n\t\t];\n\n\t\t\/**\n\t\t * Filter the enabled tests for Content AI research.\n\t\t *\n\t\t * @since 1.0.243\n\t\t * @return array\n\t\t *\/\n\t\t$values['enabledTests'] = $this->do_filter(\n\t\t\t'content_ai\/research_tests',\n\t\t\t[\n\t\t\t\t'wordCount',\n\t\t\t\t'linkCount',\n\t\t\t\t'headingCount',\n\t\t\t\t'mediaCount',\n\t\t\t]\n\t\t);\n\n\t\t$content_ai_viewed = get_option( 'rank_math_content_ai_viewed', false );\n\t\tif ( ! $content_ai_viewed ) {\n\t\t\t$values['viewed'] = false;\n\t\t\tupdate_option( 'rank_math_content_ai_viewed', true, false );\n\t\t}\n\n\t\t$researched_values = $screen->get_meta( $screen->get_object_type(), $screen->get_object_id(), 'rank_math_ca_keyword' );\n\t\tif ( empty( $researched_values ) ) {\n\t\t\treturn $values;\n\t\t}\n\n\t\t$data    = get_option( 'rank_math_ca_data' );\n\t\t$keyword = empty( $researched_values['keyword'] ) ? '' : $researched_values['keyword'];\n\t\t$country = empty( $researched_values['country'] ) ? '' : $researched_values['country'];\n\t\tif (\n\t\t\t! empty( $data[ $country ] ) &&\n\t\t\t! empty( $data[ $country ][ mb_strtolower( $keyword ) ] )\n\t\t) {\n\t\t\t$values['researchedData'] = $data[ $country ][ mb_strtolower( $keyword ) ];\n\t\t}\n\n\t\t$values['keyword'] = $keyword;\n\t\t$values['country'] = $country;\n\t\t$content_ai_data   = $screen->get_meta( $screen->get_object_type(), $screen->get_object_id(), 'rank_math_contentai_score' );\n\t\t$values['score']   = (object) $content_ai_data;\n\n\t\treturn $values;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-event-scheduler.php","ext":"php","size":3159,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Event Scheduler for Content AI to update the prompts and credits data.\n *\n * @since      1.0.123\n * @package    RankMath\n * @subpackage RankMath\\ContentAI\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse WP_Block_Type_Registry;\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Event_Scheduler class.\n *\/\nclass Event_Scheduler {\n\n\tuse Hooker;\n\n\t\/**\n\t * The single instance of the class.\n\t *\n\t * @var Event_Scheduler\n\t *\/\n\tprotected static $instance = null;\n\n\t\/**\n\t * Retrieve main Block_Command instance.\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Event_Scheduler\n\t *\/\n\tpublic static function get() {\n\t\tif ( is_null( self::$instance ) && ! ( self::$instance instanceof Event_Scheduler ) ) {\n\t\t\tself::$instance = new Event_Scheduler();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( ! Helper::is_site_connected() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$credits = get_option( 'rank_math_ca_credits' );\n\t\tif ( ! empty( $credits['refresh_date'] ) ) {\n\t\t\twp_schedule_single_event( absint( $credits['refresh_date'] ) + 60, 'rank_math\/content-ai\/update_plan' );\n\t\t}\n\n\t\t$this->action( 'rank_math\/content-ai\/update_prompts', 'update_prompts_data' );\n\t\t$this->action( 'rank_math\/content-ai\/update_plan', 'update_content_ai_plan' );\n\t\t$this->action( 'admin_footer', 'update_prompts_on_new_site' );\n\t}\n\n\t\/**\n\t * Fetch and update the prompts data daily.\n\t *\n\t * @return void\n\t *\/\n\tpublic function update_prompts_data() {\n\t\tif ( ! Helper::get_credits() || ! Helper::get_content_ai_plan() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$registered = Admin_Helper::get_registration_data();\n\t\tif ( empty( $registered ) || empty( $registered['username'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$prompt_data   = [];\n\t\t$data          = wp_remote_post(\n\t\t\tCONTENT_AI_URL . '\/ai\/default_prompts',\n\t\t\t[\n\t\t\t\t'headers' => [\n\t\t\t\t\t'Content-type' => 'application\/json',\n\t\t\t\t],\n\t\t\t\t'body'    => wp_json_encode(\n\t\t\t\t\t[\n\t\t\t\t\t\t'username' => $registered['username'],\n\t\t\t\t\t\t'api_key'  => $registered['api_key'],\n\t\t\t\t\t\t'site_url' => $registered['site_url'],\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t]\n\t\t);\n\t\t$response_code = wp_remote_retrieve_response_code( $data );\n\t\tif ( is_wp_error( $data ) || ! in_array( $response_code, [ 200, 201 ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_option( 'rank_math_prompts_updated', true );\n\t\t$data = wp_remote_retrieve_body( $data );\n\t\t$data = json_decode( $data, true );\n\t\tif ( empty( $data ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::save_default_prompts( $data );\n\t}\n\n\t\/**\n\t * Run the credits endpoint to update the plan on reset date.\n\t *\n\t * @return void\n\t *\/\n\tpublic function update_content_ai_plan() {\n\t\tHelper::get_content_ai_credits( true );\n\t\twp_clear_scheduled_hook( 'rank_math\/content-ai\/update_plan' );\n\t}\n\n\t\/**\n\t * Function to update Prompts data on new sites.\n\t *\n\t * @return void\n\t *\/\n\tpublic function update_prompts_on_new_site() {\n\t\t$prompts = Helper::get_prompts();\n\t\tif ( get_option( 'rank_math_prompts_updated' ) || ! empty( $prompts ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdo_action( 'rank_math\/content-ai\/update_prompts' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-bulk-image-alt.php","ext":"php","size":10066,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Bulk Image Alt generation using the Content AI API.\n *\n * @since      1.0.218\n * @package    RankMath\n * @subpackage RankMath\\ContentAI\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Bulk_Image_Alt class.\n *\/\nclass Bulk_Image_Alt extends \\WP_Background_Process {\n\n\t\/**\n\t * Action.\n\t *\n\t * @var string\n\t *\/\n\tprotected $action = 'bulk_image_alt';\n\n\t\/**\n\t * Main instance.\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Bulk_Image_Alt\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Bulk_Image_Alt ) ) {\n\t\t\t$instance = new Bulk_Image_Alt();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Start creating batches.\n\t *\n\t * @param array $data Posts data.\n\t *\/\n\tpublic function start( $data ) {\n\t\tHelper::add_notification(\n\t\t\tesc_html__( 'Bulk image alt generation started. It might take few minutes to complete the process.', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'type'    => 'success',\n\t\t\t\t'id'      => 'rank_math_content_ai_posts_started',\n\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t]\n\t\t);\n\n\t\tupdate_option( 'rank_math_content_ai_posts', array_keys( $data['posts'] ) );\n\n\t\tforeach ( $data['posts'] as $post_id => $images ) {\n\t\t\t$chunks = array_chunk( $images, 5, true );\n\t\t\tforeach ( $chunks as $chunk ) {\n\t\t\t\t$this->push_to_queue(\n\t\t\t\t\t[\n\t\t\t\t\t\t'post_id' => $post_id,\n\t\t\t\t\t\t'images'  => array_values( $chunk ),\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t$this->save()->dispatch();\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param string $data Posts to process.\n\t *\/\n\tpublic function wizard( $data ) {\n\t\t$this->task( $data );\n\t}\n\n\t\/**\n\t * Cancel the Bulk edit process.\n\t *\/\n\tpublic function cancel() {\n\t\tdelete_option( 'rank_math_content_ai_posts' );\n\t\tdelete_option( 'rank_math_content_ai_posts_processed' );\n\t\tparent::clear_scheduled_event();\n\t}\n\n\t\/**\n\t * Complete.\n\t *\n\t * Override if applicable, but ensure that the below actions are\n\t * performed, or, call parent::complete().\n\t *\/\n\tprotected function complete() {\n\t\t$posts = get_option( 'rank_math_content_ai_posts' );\n\t\tdelete_option( 'rank_math_content_ai_posts' );\n\t\tdelete_option( 'rank_math_content_ai_posts_processed' );\n\t\tHelper::add_notification(\n\t\t\t\/\/ Translators: placeholder is the number of modified posts.\n\t\t\tsprintf( _n( 'Image alt attributes successfully updated in %d post.', 'Image alt attributes successfully updated in %d posts.', count( $posts ), 'rank-math' ), count( $posts ) ),\n\t\t\t[\n\t\t\t\t'type'    => 'success',\n\t\t\t\t'id'      => 'rank_math_content_ai_posts',\n\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t]\n\t\t);\n\n\t\tparent::complete();\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param array $data Posts to process.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function task( $data ) {\n\t\ttry {\n\t\t\tif ( empty( $data['images'] ) ) {\n\t\t\t\t$this->update_content_ai_posts_count();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$is_attachment = get_post_type( $data['post_id'] ) === 'attachment';\n\t\t\t$api_output    = json_decode( wp_remote_retrieve_body( $this->get_image_alts( $data, $is_attachment ) ), true );\n\n\t\t\t\/\/ Early bail if API returns and error.\n\t\t\tif ( ! empty( $api_output['error'] ) ) {\n\t\t\t\t$notice = ! empty( $api_output['message'] ) ? $api_output['message'] : esc_html__( 'Bulk image alt generation failed.', 'rank-math' );\n\t\t\t\tHelper::add_notification(\n\t\t\t\t\t$notice,\n\t\t\t\t\t[\n\t\t\t\t\t\t'type'    => 'error',\n\t\t\t\t\t\t'id'      => 'rank_math_content_ai_posts',\n\t\t\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t\t\t]\n\t\t\t\t);\n\n\t\t\t\t$this->cancel();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( empty( $api_output['altTexts'] ) ) {\n\t\t\t\t$this->update_content_ai_posts_count();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$this->update_image_alt( $api_output['altTexts'], $data, $is_attachment );\n\n\t\t\t$this->update_content_ai_posts_count();\n\n\t\t\t$credits = ! empty( $api_output['credits'] ) ? $api_output['credits'] : [];\n\t\t\tif ( isset( $credits['available'] ) ) {\n\t\t\t\t$credits = $credits['available'] - $credits['taken'];\n\t\t\t\tHelper::update_credits( $credits );\n\n\t\t\t\tif ( $credits <= 0 ) {\n\t\t\t\t\t$posts_processed = get_option( 'rank_math_content_ai_posts_processed' );\n\t\t\t\t\tdelete_option( 'rank_math_content_ai_posts' );\n\t\t\t\t\tdelete_option( 'rank_math_content_ai_posts_processed' );\n\t\t\t\t\tHelper::add_notification(\n\t\t\t\t\t\t\/\/ Translators: placeholder is the number of modified posts.\n\t\t\t\t\t\tsprintf( esc_html__( 'Image alt attributes successfully updated in %d posts. The process was stopped as you have used all the credits on your site.', 'rank-math' ), $posts_processed ),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'type'    => 'success',\n\t\t\t\t\t\t\t'id'      => 'rank_math_content_ai_posts',\n\t\t\t\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\n\t\t\t\t\twp_clear_scheduled_hook( 'wp_bulk_image_alt_cron' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} catch ( \\Exception $error ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t\/**\n\t * Get Posts to bulk update the data.\n\t *\n\t * @param array   $data          Data to process.\n\t * @param boolean $is_attachment Whether the current post is attachment.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_image_alts( $data, $is_attachment ) {\n\t\t$connect_data = Admin_Helper::get_registration_data();\n\n\t\t\/\/ Convert images to the new format with base64 data.\n\t\t$images     = [];\n\t\t$image_urls = $is_attachment ? $data['images'] : $this->extract_urls_from_tags( $data['images'] );\n\n\t\tforeach ( $image_urls as $image_url ) {\n\t\t\t$image_id    = $this->get_image_id_from_url( $image_url );\n\t\t\t$base64_data = $this->convert_image_to_base64( $image_url );\n\n\t\t\tif ( ! empty( $base64_data ) ) {\n\t\t\t\t$images[] = [\n\t\t\t\t\t'id'    => $image_id,\n\t\t\t\t\t'image' => $base64_data,\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $images ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$request_data = [\n\t\t\t'images'         => $images,\n\t\t\t'username'       => $connect_data['username'],\n\t\t\t'api_key'        => $connect_data['api_key'],\n\t\t\t'site_url'       => $connect_data['site_url'],\n\t\t\t'plugin_version' => rank_math()->version,\n\t\t\t'language'       => Helper::get_settings( 'general.content_ai_language', Helper::content_ai_default_language() ),\n\t\t];\n\n\t\treturn wp_remote_post(\n\t\t\tCONTENT_AI_URL . '\/ai\/generate_image_alt_v2',\n\t\t\t[\n\t\t\t\t'headers' => [\n\t\t\t\t\t'content-type' => 'application\/json',\n\t\t\t\t],\n\t\t\t\t'timeout' => 60000,\n\t\t\t\t'body'    => wp_json_encode( $request_data ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Extract URLs from image tags.\n\t *\n\t * @param array $image_tags Array of image HTML tags.\n\t * @return array Array of image URLs.\n\t *\/\n\tprivate function extract_urls_from_tags( $image_tags ) {\n\t\t$urls = [];\n\t\tforeach ( $image_tags as $image_tag ) {\n\t\t\t$url = $this->get_image_source( $image_tag );\n\t\t\tif ( ! empty( $url ) ) {\n\t\t\t\t$urls[] = $url;\n\t\t\t}\n\t\t}\n\t\treturn $urls;\n\t}\n\n\t\/**\n\t * Convert image URL to base64 encoded data.\n\t *\n\t * @param string $image_url Image URL to convert.\n\t * @return string Base64 encoded image data.\n\t *\/\n\tprivate function convert_image_to_base64( $image_url ) {\n\t\t\/\/ Validate URL.\n\t\tif ( ! filter_var( $image_url, FILTER_VALIDATE_URL ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t\/\/ Get image content.\n\t\t$response = wp_remote_get( $image_url, [ 'timeout' => 30 ] );\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$response_code = wp_remote_retrieve_response_code( $response );\n\t\tif ( 200 !== $response_code ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$image_content = wp_remote_retrieve_body( $response );\n\t\tif ( empty( $image_content ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t\/\/ Get image info to determine MIME type.\n\t\t$image_info = wp_check_filetype( $image_url );\n\t\t$mime_type  = ! empty( $image_info['type'] ) ? $image_info['type'] : 'image\/jpeg';\n\n\t\t\/\/ Convert to base64 with proper data URL format.\n\t\t$base64 = base64_encode( $image_content ); \/\/ phpcs:ignore -- Verified as safe usage.\n\t\treturn 'data:' . $mime_type . ';base64,' . $base64;\n\t}\n\n\t\/**\n\t * Extract filename from image URL.\n\t *\n\t * @param string $image_url Image URL.\n\t * @return string Filename.\n\t *\/\n\tprivate function get_image_id_from_url( $image_url ) {\n\t\t$url_parts = explode( '\/', $image_url );\n\t\t$filename  = end( $url_parts );\n\n\t\tif ( empty( $filename ) ) {\n\t\t\t$filename = 'image.jpg';\n\t\t}\n\n\t\t\/\/ Remove query parameters if present.\n\t\t$filename = strtok( $filename, '?' );\n\n\t\treturn $filename;\n\t}\n\n\t\/**\n\t * Keep count of the Content AI posts that were processed.\n\t *\n\t * @return void\n\t *\/\n\tprivate function update_content_ai_posts_count() {\n\t\t$content_ai_posts_count = get_option( 'rank_math_content_ai_posts_processed', 0 ) + 1;\n\t\tupdate_option( 'rank_math_content_ai_posts_processed', $content_ai_posts_count, false );\n\t}\n\n\t\/**\n\t * Update Image alt value.\n\t *\n\t * @param array   $alt_texts     Alt texts returned by the API.\n\t * @param array   $data          Data to process.\n\t * @param boolean $is_attachment Whether the current post is attachment.\n\t *\n\t * @return void\n\t *\/\n\tprivate function update_image_alt( $alt_texts, $data, $is_attachment ) {\n\t\tif ( $is_attachment ) {\n\t\t\tupdate_post_meta( $data['post_id'], '_wp_attachment_image_alt', sanitize_text_field( current( $alt_texts ) ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\t$post = get_post( $data['post_id'] );\n\n\t\tforeach ( $data['images'] as $image ) {\n\t\t\t$image_src = $this->get_image_source( $image );\n\t\t\t$image_id  = $this->get_image_id_from_url( $image_src );\n\t\t\t$image_alt = ! empty( $alt_texts[ $image_id ] ) ? $alt_texts[ $image_id ] : '';\n\t\t\tif ( ! $image_alt ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Remove any existing empty alt attributes.\n\t\t\t$img_tag = preg_replace( '\/ alt=(\"\"|\\'\\')\/i', '', $image );\n\t\t\t\/\/ Add the new alt attribute.\n\t\t\t$img_tag = str_replace( '<img ', '<img alt=\"' . esc_attr( $image_alt ) . '\" ', $img_tag );\n\n\t\t\t\/\/ Replace the old img tag with the new one in the post content.\n\t\t\t$post->post_content = str_replace( $image, $img_tag, $post->post_content );\n\t\t}\n\n\t\twp_update_post( $post );\n\t}\n\n\t\/**\n\t * Get Image source from image tag.\n\t *\n\t * @param string $image Image tag.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_image_source( $image ) {\n\t\t\/\/ The $data['images'] contains an array of img tags, so we need to extract the src attribute from each one.\n\t\tpreg_match( '\/src=[\\'\"]?([^\\'\" >]+)[\\'\" >]\/i', $image, $matches );\n\t\treturn $matches[1];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/views\/options.php","ext":"php","size":11536,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Content AI general settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\ContentAI\n *\/\n\nuse RankMath\\Helper;\nuse RankMath\\KB;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( ! Helper::is_site_connected() ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'rank_math_content_ai_settings',\n\t\t\t'type'    => 'raw',\n\t\t\t'content' => '<div id=\"setting-panel-content-ai\" class=\"rank-math-tab rank-math-options-panel-content exclude\">\n\t\t\t\t<div class=\"wp-core-ui rank-math-ui connect-wrap\">\n\t\t\t\t\t<a href=\"' . Admin_Helper::get_activate_url( Helper::get_settings_url( 'general', 'content-ai' ) ) . '\" class=\"button button-primary button-connect button-animated\" name=\"rank_math_activate\">'\n\t\t\t\t\t. esc_html__( 'Connect Your Rank Math Account', 'rank-math' )\n\t\t\t\t\t. '<\/a>\n\t\t\t\t<\/div>\n\t\t\t\t<div id=\"rank-math-pro-cta\" class=\"content-ai-settings\">\n\t\t\t\t\t<div class=\"rank-math-cta-box width-100 no-shadow no-padding no-border\">\n\t\t\t\t\t\t<h3>' . esc_html__( 'Benefits of Connecting Rank Math Account', 'rank-math' ) . '<\/h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>' . esc_html__( 'Gain Access to 40+ Advanced AI Tools.', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t<li>' . esc_html__( 'Experience the Revolutionary AI-Powered Content Editor.', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t<li>' . esc_html__( 'Engage with RankBot, Our AI Chatbot, For SEO Advice.', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t\t<li>' . esc_html__( 'Escape the Writer\\'s Block Using AI to Write Inside WordPress.', 'rank-math' ) . '<\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>',\n\t\t]\n\t);\n\treturn;\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'content_ai_country',\n\t\t'type'    => 'select',\n\t\t'name'    => esc_html__( 'Default Country', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Content AI tailors keyword research to the target country for highly relevant suggestions. You can override this in individual posts\/pages\/CPTs.', 'rank-math' ),\n\t\t'options' => Helper::choices_contentai_countries(),\n\t\t'default' => 'all',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'content_ai_tone',\n\t\t'type'       => 'select',\n\t\t'name'       => esc_html__( 'Default Tone', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'This feature enables the default primary tone or writing style that characterizes your content. You can override this in individual tools.', 'rank-math' ),\n\t\t'default'    => 'Formal',\n\t\t'attributes' => ( 'data-s2' ),\n\t\t'options'    => [\n\t\t\t'Analytical'     => esc_html__( 'Analytical', 'rank-math' ),\n\t\t\t'Argumentative'  => esc_html__( 'Argumentative', 'rank-math' ),\n\t\t\t'Casual'         => esc_html__( 'Casual', 'rank-math' ),\n\t\t\t'Conversational' => esc_html__( 'Conversational', 'rank-math' ),\n\t\t\t'Creative'       => esc_html__( 'Creative', 'rank-math' ),\n\t\t\t'Descriptive'    => esc_html__( 'Descriptive', 'rank-math' ),\n\t\t\t'Emotional'      => esc_html__( 'Emotional', 'rank-math' ),\n\t\t\t'Empathetic'     => esc_html__( 'Empathetic', 'rank-math' ),\n\t\t\t'Expository'     => esc_html__( 'Expository', 'rank-math' ),\n\t\t\t'Factual'        => esc_html__( 'Factual', 'rank-math' ),\n\t\t\t'Formal'         => esc_html__( 'Formal', 'rank-math' ),\n\t\t\t'Friendly'       => esc_html__( 'Friendly', 'rank-math' ),\n\t\t\t'Humorous'       => esc_html__( 'Humorous', 'rank-math' ),\n\t\t\t'Informal'       => esc_html__( 'Informal', 'rank-math' ),\n\t\t\t'Journalese'     => esc_html__( 'Journalese', 'rank-math' ),\n\t\t\t'Narrative'      => esc_html__( 'Narrative', 'rank-math' ),\n\t\t\t'Objective'      => esc_html__( 'Objective', 'rank-math' ),\n\t\t\t'Opinionated'    => esc_html__( 'Opinionated', 'rank-math' ),\n\t\t\t'Persuasive'     => esc_html__( 'Persuasive', 'rank-math' ),\n\t\t\t'Poetic'         => esc_html__( 'Poetic', 'rank-math' ),\n\t\t\t'Satirical'      => esc_html__( 'Satirical', 'rank-math' ),\n\t\t\t'Story-telling'  => esc_html__( 'Story-telling', 'rank-math' ),\n\t\t\t'Subjective'     => esc_html__( 'Subjective', 'rank-math' ),\n\t\t\t'Technical'      => esc_html__( 'Technical', 'rank-math' ),\n\t\t],\n\t],\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'content_ai_audience',\n\t\t'type'       => 'select',\n\t\t'name'       => esc_html__( 'Default Audience', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'This option lets you set the default audience that usually reads your content. You can override this in individual tools.', 'rank-math' ),\n\t\t'default'    => 'General Audience',\n\t\t'attributes' => ( 'data-s2' ),\n\t\t'options'    => [\n\t\t\t'Activists'                => esc_html__( 'Activists', 'rank-math' ),\n\t\t\t'Artists'                  => esc_html__( 'Artists', 'rank-math' ),\n\t\t\t'Authors'                  => esc_html__( 'Authors', 'rank-math' ),\n\t\t\t'Bargain Hunters'          => esc_html__( 'Bargain Hunters', 'rank-math' ),\n\t\t\t'Bloggers'                 => esc_html__( 'Bloggers', 'rank-math' ),\n\t\t\t'Business Owners'          => esc_html__( 'Business Owners', 'rank-math' ),\n\t\t\t'Collectors'               => esc_html__( 'Collectors', 'rank-math' ),\n\t\t\t'Cooks'                    => esc_html__( 'Cooks', 'rank-math' ),\n\t\t\t'Crafters'                 => esc_html__( 'Crafters', 'rank-math' ),\n\t\t\t'Dancers'                  => esc_html__( 'Dancers', 'rank-math' ),\n\t\t\t'DIYers'                   => esc_html__( 'DIYers', 'rank-math' ),\n\t\t\t'Designers'                => esc_html__( 'Designers', 'rank-math' ),\n\t\t\t'Educators'                => esc_html__( 'Educators', 'rank-math' ),\n\t\t\t'Engineers'                => esc_html__( 'Engineers', 'rank-math' ),\n\t\t\t'Entrepreneurs'            => esc_html__( 'Entrepreneurs', 'rank-math' ),\n\t\t\t'Environmentalists'        => esc_html__( 'Environmentalists', 'rank-math' ),\n\t\t\t'Fashionistas'             => esc_html__( 'Fashionistas', 'rank-math' ),\n\t\t\t'Fitness Enthusiasts'      => esc_html__( 'Fitness Enthusiasts', 'rank-math' ),\n\t\t\t'Foodies'                  => esc_html__( 'Foodies', 'rank-math' ),\n\t\t\t'Gaming Enthusiasts'       => esc_html__( 'Gaming Enthusiasts', 'rank-math' ),\n\t\t\t'Gardeners'                => esc_html__( 'Gardeners', 'rank-math' ),\n\t\t\t'General Audience'         => esc_html__( 'General Audience', 'rank-math' ),\n\t\t\t'Health Enthusiasts'       => esc_html__( 'Health Enthusiasts', 'rank-math' ),\n\t\t\t'Healthcare Professionals' => esc_html__( 'Healthcare Professionals', 'rank-math' ),\n\t\t\t'Indoor Hobbyists'         => esc_html__( 'Indoor Hobbyists', 'rank-math' ),\n\t\t\t'Investors'                => esc_html__( 'Investors', 'rank-math' ),\n\t\t\t'Job Seekers'              => esc_html__( 'Job Seekers', 'rank-math' ),\n\t\t\t'Movie Buffs'              => esc_html__( 'Movie Buffs', 'rank-math' ),\n\t\t\t'Musicians'                => esc_html__( 'Musicians', 'rank-math' ),\n\t\t\t'Outdoor Enthusiasts'      => esc_html__( 'Outdoor Enthusiasts', 'rank-math' ),\n\t\t\t'Parents'                  => esc_html__( 'Parents', 'rank-math' ),\n\t\t\t'Pet Owners'               => esc_html__( 'Pet Owners', 'rank-math' ),\n\t\t\t'Photographers'            => esc_html__( 'Photographers', 'rank-math' ),\n\t\t\t'Podcast Listeners'        => esc_html__( 'Podcast Listeners', 'rank-math' ),\n\t\t\t'Professionals'            => esc_html__( 'Professionals', 'rank-math' ),\n\t\t\t'Retirees'                 => esc_html__( 'Retirees', 'rank-math' ),\n\t\t\t'Russian'                  => esc_html__( 'Russian', 'rank-math' ),\n\t\t\t'Seniors'                  => esc_html__( 'Seniors', 'rank-math' ),\n\t\t\t'Social Media Users'       => esc_html__( 'Social Media Users', 'rank-math' ),\n\t\t\t'Sports Fans'              => esc_html__( 'Sports Fans', 'rank-math' ),\n\t\t\t'Students'                 => esc_html__( 'Students', 'rank-math' ),\n\t\t\t'Tech Enthusiasts'         => esc_html__( 'Tech Enthusiasts', 'rank-math' ),\n\t\t\t'Travelers'                => esc_html__( 'Travelers', 'rank-math' ),\n\t\t\t'TV Enthusiasts'           => esc_html__( 'TV Enthusiasts', 'rank-math' ),\n\t\t\t'Video Creators'           => esc_html__( 'Video Creators', 'rank-math' ),\n\t\t\t'Writers'                  => esc_html__( 'Writers', 'rank-math' ),\n\t\t],\n\t],\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'content_ai_language',\n\t\t'type'       => 'select',\n\t\t'name'       => esc_html__( 'Default Language', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'This option lets you set the default language for content generated using Content AI. You can override this in individual tools.', 'rank-math' ),\n\t\t'default'    => Helper::content_ai_default_language(),\n\t\t'attributes' => ( 'data-s2' ),\n\t\t'options'    => [\n\t\t\t'US English' => esc_html__( 'US English', 'rank-math' ),\n\t\t\t'UK English' => esc_html__( 'UK English', 'rank-math' ),\n\t\t\t'Arabic'     => esc_html__( 'Arabic', 'rank-math' ),\n\t\t\t'Bulgarian'  => esc_html__( 'Bulgarian', 'rank-math' ),\n\t\t\t'Chinese'    => esc_html__( 'Chinese', 'rank-math' ),\n\t\t\t'Czech'      => esc_html__( 'Czech', 'rank-math' ),\n\t\t\t'Danish'     => esc_html__( 'Danish', 'rank-math' ),\n\t\t\t'Dutch'      => esc_html__( 'Dutch', 'rank-math' ),\n\t\t\t'Estonian'   => esc_html__( 'Estonian', 'rank-math' ),\n\t\t\t'Finnish'    => esc_html__( 'Finnish', 'rank-math' ),\n\t\t\t'French'     => esc_html__( 'French', 'rank-math' ),\n\t\t\t'German'     => esc_html__( 'German', 'rank-math' ),\n\t\t\t'Greek'      => esc_html__( 'Greek', 'rank-math' ),\n\t\t\t'Hebrew'     => esc_html__( 'Hebrew', 'rank-math' ),\n\t\t\t'Hungarian'  => esc_html__( 'Hungarian', 'rank-math' ),\n\t\t\t'Indonesian' => esc_html__( 'Indonesian', 'rank-math' ),\n\t\t\t'Italian'    => esc_html__( 'Italian', 'rank-math' ),\n\t\t\t'Japanese'   => esc_html__( 'Japanese', 'rank-math' ),\n\t\t\t'Korean'     => esc_html__( 'Korean', 'rank-math' ),\n\t\t\t'Latvian'    => esc_html__( 'Latvian', 'rank-math' ),\n\t\t\t'Lithuanian' => esc_html__( 'Lithuanian', 'rank-math' ),\n\t\t\t'Norwegian'  => esc_html__( 'Norwegian', 'rank-math' ),\n\t\t\t'Polish'     => esc_html__( 'Polish', 'rank-math' ),\n\t\t\t'Portuguese' => esc_html__( 'Portuguese', 'rank-math' ),\n\t\t\t'Romanian'   => esc_html__( 'Romanian', 'rank-math' ),\n\t\t\t'Russian'    => esc_html__( 'Russian', 'rank-math' ),\n\t\t\t'Slovak'     => esc_html__( 'Slovak', 'rank-math' ),\n\t\t\t'Slovenian'  => esc_html__( 'Slovenian', 'rank-math' ),\n\t\t\t'Spanish'    => esc_html__( 'Spanish', 'rank-math' ),\n\t\t\t'Swedish'    => esc_html__( 'Swedish', 'rank-math' ),\n\t\t\t'Turkish'    => esc_html__( 'Turkish', 'rank-math' ),\n\t\t],\n\t],\n);\n\n$post_types = Helper::choices_post_types();\nif ( isset( $post_types['attachment'] ) ) {\n\tunset( $post_types['attachment'] );\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'content_ai_post_types',\n\t\t'type'    => 'multicheck_inline',\n\t\t'name'    => esc_html__( 'Select Post Type', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Choose the type of posts\/pages\/CPTs where you want to use Content AI.', 'rank-math' ),\n\t\t'options' => $post_types,\n\t\t'default' => array_keys( $post_types ),\n\t]\n);\n\n$credits = Helper::get_credits();\nif ( Helper::is_site_connected() && false !== $credits ) {\n\t$update_credits = '<a href=\"#\" class=\"rank-math-tooltip update-credit\">\n\t\t<i class=\"dashicons dashicons-image-rotate\"><\/i>\n\t\t<span>' . esc_html__( 'Click to refresh the available credits.', 'rank-math' ) . '<\/span>\n\t<\/a>';\n\n\t$refresh_date = Helper::get_content_ai_refresh_date();\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'content_ai_credits',\n\t\t\t'type'    => 'raw',\n\t\t\t\/* translators: 1. Credits left 2. Buy more credits link *\/\n\t\t\t'content' => '<div class=\"cmb-row buy-more-credits rank-math-exclude-from-search\">' . $update_credits . sprintf( esc_html__( '%1$s credits left this month. Credits will renew on %2$s or you can upgrade to get more credits %3$s.', 'rank-math' ), '<strong>' . $credits . '<\/strong>', wp_date( 'Y-m-d g:i a', $refresh_date ), '<a href=\"' . KB::get( 'content-ai-pricing-tables', 'Buy CAI Credits Options Panel' ) . '\" target=\"_blank\">' . esc_html__( 'here', 'rank-math' ) . '<\/a>' ) . '<\/div>',\n\t\t]\n\t);\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/views\/main.php","ext":"php","size":230,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Content AI Page main view.\n *\n * @package RankMath\n * @subpackage RankMath\\Role_Manager\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n?>\n<div id=\"rank-math-content-ai-page\">\n\t<div class=\"rank-math-box container\">\n\t<\/div>\n<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-bulk-actions.php","ext":"php","size":11352,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Add Content AI Bulk Action options.\n *\n * @since      1.0.212\n * @package    RankMath\n * @subpackage RankMath\\Content_AI_Page\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Post;\nuse RankMath\\Term;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Bulk_Actions class.\n *\/\nclass Bulk_Actions {\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'init', 'init' );\n\t\t$this->action( 'admin_init', 'init_admin', 15 );\n\t\t$this->action( 'rank_math\/content_ai\/generate_alt', 'generate_image_alt' );\n\t\t$this->filter( 'rank_math\/database\/tools', 'add_tools' );\n\t\t$this->filter( 'rank_math\/tools\/content_ai_cancel_bulk_edit_process', 'cancel_bulk_edit_process' );\n\t}\n\n\t\/**\n\t * Init function.\n\t *\/\n\tpublic function init() {\n\t\tBulk_Edit_SEO_Meta::get();\n\t\tBulk_Image_Alt::get();\n\t}\n\n\t\/**\n\t * Init.\n\t *\/\n\tpublic function init_admin() {\n\t\t\/\/ Add Bulk actions for Posts.\n\t\t$post_types = Helper::get_settings( 'general.content_ai_post_types', [] );\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$this->filter( \"bulk_actions-edit-{$post_type}\", 'bulk_actions', 9 );\n\t\t\t$this->filter( \"handle_bulk_actions-edit-{$post_type}\", 'handle_bulk_actions', 10, 3 );\n\t\t}\n\n\t\t\/\/ Add Bulk Generate on Attachment page.\n\t\t$this->filter( 'bulk_actions-upload', 'bulk_actions_attachment' );\n\t\t$this->filter( 'handle_bulk_actions-upload', 'handle_bulk_actions', 10, 3 );\n\n\t\t\/\/ Add Bulk Actions for Taxonomies.\n\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\tunset( $taxonomies['post_format'] );\n\t\t$taxonomies = wp_list_pluck( $taxonomies, 'label', 'name' );\n\t\tforeach ( $taxonomies as $taxonomy => $label ) {\n\t\t\t$this->filter( \"bulk_actions-edit-{$taxonomy}\", 'bulk_actions' );\n\t\t\t$this->filter( \"handle_bulk_actions-edit-{$taxonomy}\", 'handle_bulk_actions', 10, 3 );\n\t\t}\n\n\t\t$this->filter( 'wp_bulk_edit_seo_meta_post_args', 'update_background_process_args' );\n\t\t$this->filter( 'wp_bulk_image_alt_post_args', 'update_background_process_args' );\n\t}\n\n\t\/**\n\t * Add bulk actions for applicable posts, pages, CPTs.\n\t *\n\t * @param  array $actions Actions.\n\t * @return array          New actions.\n\t *\/\n\tpublic function bulk_actions( $actions ) {\n\t\tif ( ! Helper::has_cap( 'content_ai' ) ) {\n\t\t\treturn $actions;\n\t\t}\n\n\t\t$actions['rank_math_ai_options']                             = __( '&#8595; Rank Math Content AI', 'rank-math' );\n\t\t$actions['rank_math_content_ai_fetch_seo_title']             = esc_html__( 'Write SEO Title with AI', 'rank-math' );\n\t\t$actions['rank_math_content_ai_fetch_seo_description']       = esc_html__( 'Write SEO Description with AI', 'rank-math' );\n\t\t$actions['rank_math_content_ai_fetch_seo_title_description'] = esc_html__( 'Write SEO Title & Description with AI', 'rank-math' );\n\t\t$actions['rank_math_content_ai_fetch_image_alt']             = esc_html__( 'Write Image Alt Text with AI', 'rank-math' );\n\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Add bulk actions for Attachment.\n\t *\n\t * @param  array $actions Actions.\n\t * @return array          New actions.\n\t *\/\n\tpublic function bulk_actions_attachment( $actions ) {\n\t\tif ( ! Helper::has_cap( 'content_ai' ) ) {\n\t\t\treturn $actions;\n\t\t}\n\n\t\t$actions['rank_math_ai_options']                 = __( '&#8595; Rank Math Content AI', 'rank-math' );\n\t\t$actions['rank_math_content_ai_fetch_image_alt'] = esc_html__( 'Write Image Alt Text with AI', 'rank-math' );\n\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Handle bulk actions for applicable posts, pages, CPTs.\n\t *\n\t * @param  string $redirect   Redirect URL.\n\t * @param  string $doaction   Performed action.\n\t * @param  array  $object_ids Post IDs.\n\t *\n\t * @return string New redirect URL.\n\t *\/\n\tpublic function handle_bulk_actions( $redirect, $doaction, $object_ids ) {\n\t\tif ( empty( $object_ids ) || ! in_array( $doaction, [ 'rank_math_content_ai_fetch_seo_title', 'rank_math_content_ai_fetch_seo_description', 'rank_math_content_ai_fetch_seo_title_description', 'rank_math_content_ai_fetch_image_alt' ], true ) ) {\n\t\t\treturn $redirect;\n\t\t}\n\n\t\tif ( ! empty( get_option( 'rank_math_content_ai_posts' ) ) ) {\n\t\t\tHelper::add_notification(\n\t\t\t\tesc_html__( 'Another bulk editing process is already running. Please try again later after the existing process is complete.', 'rank-math' ),\n\t\t\t\t[\n\t\t\t\t\t'type'    => 'warning',\n\t\t\t\t\t'id'      => 'rank_math_content_ai_posts_error',\n\t\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\treturn $redirect;\n\t\t}\n\n\t\tif ( 'rank_math_content_ai_fetch_image_alt' === $doaction ) {\n\t\t\t$this->generate_image_alt( $object_ids );\n\t\t\treturn $redirect;\n\t\t}\n\n\t\t$action = 'both';\n\t\tif ( 'rank_math_content_ai_fetch_seo_title' === $doaction ) {\n\t\t\t$action = 'title';\n\t\t}\n\n\t\tif ( 'rank_math_content_ai_fetch_seo_description' === $doaction ) {\n\t\t\t$action = 'description';\n\t\t}\n\n\t\t$is_post_list = Admin_Helper::is_post_list();\n\t\t$data         = [\n\t\t\t'action'      => $action,\n\t\t\t'language'    => Helper::get_settings( 'general.content_ai_language', Helper::content_ai_default_language() ),\n\t\t\t'posts'       => [],\n\t\t\t'is_taxonomy' => ! $is_post_list,\n\t\t];\n\n\t\t$method = $is_post_list ? 'get_post_data' : 'get_term_data';\n\t\tforeach ( $object_ids as $object_id ) {\n\t\t\t$data['posts'][] = $this->$method( $object_id, $action );\n\t\t}\n\n\t\tBulk_Edit_SEO_Meta::get()->start( $data );\n\n\t\treturn $redirect;\n\t}\n\n\t\/**\n\t * Generate Image Alt for the attachmed Ids.\n\t *\n\t * @param array $object_ids Attachment Ids.\n\t *\/\n\tpublic function generate_image_alt( $object_ids ) {\n\t\t$data = [\n\t\t\t'action' => 'image_alt',\n\t\t\t'posts'  => [],\n\t\t];\n\n\t\tforeach ( $object_ids as $object_id ) {\n\t\t\tif ( get_post_type( $object_id ) === 'attachment' ) {\n\t\t\t\t$data['posts'][ $object_id ] = [ wp_get_attachment_url( $object_id ) ];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\/\/ Get all <img> tags from the post content.\n\t\t\t$images = [];\n\t\t\tpreg_match_all( '\/<img\\\\s[^>]+>\/i', get_post_field( 'post_content', $object_id ), $images );\n\n\t\t\t\/\/ Keep only the image tags that have src attribute but no alt attribute.\n\t\t\t$images = array_filter(\n\t\t\t\t$images[0],\n\t\t\t\tfunction ( $image ) {\n\t\t\t\t\treturn preg_match( '\/src=[\\'\"]?([^\\'\" >]+)[\\'\" >]\/i', $image, $matches ) && ( ! preg_match( '\/alt=\"([^\"]*)\"\/i', $image, $matches ) || preg_match( '\/alt=\"\"\/i', $image, $matches ) );\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( empty( $images ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$object                      = get_post( $object_id );\n\t\t\t$data['posts'][ $object_id ] = array_filter( array_values( $images ) );\n\t\t}\n\n\t\tBulk_Image_Alt::get()->start( $data );\n\t}\n\n\t\/**\n\t * Change the timeout value in Background_Process to resolve the issue with notifications not appearing after completion in v1.2.\n\t *\n\t * @param array $args Process args.\n\t *\n\t * @return array\n\t *\/\n\tpublic function update_background_process_args( $args ) {\n\t\t$args['timeout'] = 0.01;\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Add database tools.\n\t *\n\t * @param array $tools Array of tools.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_tools( $tools ) {\n\t\t$posts = get_option( 'rank_math_content_ai_posts' );\n\n\t\t\/\/ Early Bail if process is not running.\n\t\tif ( empty( $posts ) ) {\n\t\t\treturn $tools;\n\t\t}\n\n\t\t$processed = get_option( 'rank_math_content_ai_posts_processed' );\n\n\t\t$tools['content_ai_cancel_bulk_edit_process'] = [\n\t\t\t'title'       => esc_html__( 'Cancel Content AI Bulk Editing Process', 'rank-math' ),\n\t\t\t'description' => sprintf(\n\t\t\t\t\/\/ Translators: placeholders are the number of posts that were processed.\n\t\t\t\tesc_html__( 'Terminate the ongoing Content AI Bulk Editing Process to halt any pending modifications and revert to the previous state. The bulk metadata has been generated for %1$d out of %1$d posts so far.', 'rank-math' ),\n\t\t\t\t$processed,\n\t\t\t\tcount( $posts )\n\t\t\t),\n\t\t\t'button_text' => esc_html__( 'Terminate', 'rank-math' ),\n\t\t];\n\n\t\treturn $tools;\n\t}\n\n\t\/**\n\t * Function to cancel the Bulk Edit process.\n\t *\/\n\tpublic function cancel_bulk_edit_process() {\n\t\tBulk_Edit_SEO_Meta::get()->cancel();\n\t\tHelper::remove_notification( 'rank_math_content_ai_posts_started' );\n\t\treturn __( 'Bulk Editing Process Successfully Cancelled', 'rank-math' );\n\t}\n\n\t\/**\n\t * Get Post data.\n\t *\n\t * @param integer $object_id Post ID.\n\t * @param string  $action    The action being performed (title, description, or both).\n\t *\n\t * @return array Post data.\n\t *\/\n\tprivate function get_post_data( $object_id, $action = 'both' ) {\n\t\t$object = get_post( $object_id );\n\t\treturn [\n\t\t\t'post_id'       => $object_id,\n\t\t\t'post_type'     => 'download' === $object->post_type ? 'Product' : ucfirst( $object->post_type ),\n\t\t\t'title'         => get_the_title( $object_id ),\n\t\t\t'focus_keyword' => Post::get_meta( 'focus_keyword', $object_id ),\n\t\t\t'summary'       => Helper::replace_vars( $this->get_content_for_ai( $object, $action ), $object ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get Term data.\n\t *\n\t * @param integer $object_id Term ID.\n\t * @param string  $action    The action being performed (title, description, or both).\n\t *\n\t * @return array Term data.\n\t *\/\n\tprivate function get_term_data( $object_id, $action = 'both' ) {\n\t\t$object = get_term( $object_id );\n\t\treturn [\n\t\t\t'post_id'       => $object_id,\n\t\t\t'post_type'     => $object->taxonomy,\n\t\t\t'title'         => $object->name,\n\t\t\t'focus_keyword' => Term::get_meta( 'focus_keyword', $object, $object->taxonomy ),\n\t\t\t'summary'       => Helper::replace_vars( $this->get_content_for_ai( $object, $action ), $object ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get content for AI processing based on object type and action.\n\t *\n\t * @param object $current_object Object instance (WP_Post or WP_Term).\n\t * @param string $action The action being performed (title, description, or both).\n\t *\n\t * @return string Content to use for AI generation.\n\t *\/\n\tprivate function get_content_for_ai( $current_object, $action = 'both' ) {\n\t\t\/\/ For description generation, don't use current SEO descriptions.\n\t\tif ( $action === 'description' || $action === 'both' ) {\n\t\t\treturn $this->get_content_without_seo_meta( $current_object );\n\t\t}\n\n\t\t\/\/ For title generation, prioritize existing SEO description.\n\t\treturn $current_object instanceof \\WP_Post\n\t\t? Post::get_meta( 'description', $current_object->ID, $this->get_content_without_seo_meta( $current_object ) )\n\t\t: Term::get_meta( 'description', $current_object, $current_object->taxonomy, $this->get_content_without_seo_meta( $current_object ) );\n\t}\n\n\t\/**\n\t * Get content from object without using SEO meta description.\n\t *\n\t * @param object $current_object Object instance (WP_Post or WP_Term).\n\t *\n\t * @return string Content from the object.\n\t *\/\n\tprivate function get_content_without_seo_meta( $current_object ) {\n\t\t$is_post = $current_object instanceof \\WP_Post;\n\n\t\t\/\/ For terms: term description > template.\n\t\tif ( ! $is_post ) {\n\t\t\treturn ! empty( $current_object->description ) ? $current_object->description : Str::truncate( Paper::get_from_options( \"tax_{$current_object->taxonomy}_description\", $current_object ), 160 );\n\t\t}\n\n\t\t\/\/ For posts: excerpt > content > template.\n\t\tif ( ! empty( $current_object->post_excerpt ) ) {\n\t\t\treturn $current_object->post_excerpt;\n\t\t}\n\n\t\t$content = wp_strip_all_tags( $current_object->post_content );\n\t\tif ( ! empty( $content ) ) {\n\t\t\treturn Str::truncate( $content, 300 );\n\t\t}\n\n\t\treturn Str::truncate( Paper::get_from_options( \"pt_{$current_object->post_type}_description\", $current_object ), 160 );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/blocks\/command\/assets\/js\/index.asset.php","ext":"php","size":423,"mtime":1757324689,"type":"text","content":"<?php \/\/ phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is required to dynamically load the necessary block dependencies.\n\/**\n * Block script dependencies.\n *\n * @package    RankMath\n * @subpackage RankMath\\ContentAI\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nreturn [\n\t'dependencies' => [\n\t\t'wp-element',\n\t\t'wp-block-editor',\n\t],\n\t'version'      => rank_math()->version,\n];\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/blocks\/command\/assets\/js\/index.js","ext":"js","size":4755,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var e=wp.blocks,t=wp.blockEditor,n=wp.element,r=wp.i18n,a=function(){return!rankMath.contentAI.isUserRegistered||!rankMath.contentAI.plan||!rankMath.contentAI.credits||rankMath.contentAI.isMigrating},o=JSON.parse('{\"$schema\":\"https:\/\/schemas.wp.org\/trunk\/block.json\",\"apiVersion\":3,\"name\":\"rank-math\/command\",\"title\":\"AI Assistant [Content AI]\",\"icon\":\"star\",\"category\":\"rank-math-blocks\",\"description\":\"Generate content without any hassle, powered by Rank Math\\'s Content AI.\",\"keywords\":[\"ai\",\"content\",\"rank math\",\"rankmath\",\"content ai\",\"seo\"],\"textdomain\":\"rank-math-pro\",\"editorScript\":\"file:..\/js\/index.js\",\"attributes\":{\"content\":{\"type\":\"string\",\"source\":\"html\",\"selector\":\"p\",\"default\":\"<span>\/\/<\/span>\",\"__experimentalRole\":\"content\"}}}');function c(e){return c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},c(e)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==c(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===c(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=o.name,u={icon:wp.element.createElement(\"svg\",{xmlns:\"http:\/\/www.w3.org\/2000\/svg\",viewBox:\"0 0 17.08 18.02\"},wp.element.createElement(\"g\",{id:\"Layer_2\",\"data-name\":\"Layer 2\"},wp.element.createElement(\"g\",{id:\"Layer_1-2\",\"data-name\":\"Layer 1\"},wp.element.createElement(\"path\",{d:\"M16.65,12.08a.83.83,0,0,0-1.11.35A7.38,7.38,0,1,1,9,1.63a7.11,7.11,0,0,1,.92.06A2.52,2.52,0,0,1,11,.23,8.87,8.87,0,0,0,9,0a9,9,0,1,0,8,13.19A.83.83,0,0,0,16.65,12.08Z\"}),wp.element.createElement(\"path\",{d:\"M7.68,7.29A1.58,1.58,0,0,0,6.2,8.94a1.57,1.57,0,0,0,1.48,1.64A1.56,1.56,0,0,0,9.16,8.94,1.57,1.57,0,0,0,7.68,7.29Z\"}),wp.element.createElement(\"path\",{d:\"M13.34,4.71a2.45,2.45,0,0,1-1,.2A2.53,2.53,0,0,1,9.93,3,7.18,7.18,0,0,0,9.12,3a6,6,0,1,0,4.22,1.73ZM10.53,11.3a.75.75,0,1,1-1.5,0v-.06a2.4,2.4,0,0,1-1.66.69,2.81,2.81,0,0,1-2.58-3,2.82,2.82,0,0,1,2.58-3A2.39,2.39,0,0,1,9,6.64a.75.75,0,0,1,1.5.07Zm2.56,0a.75.75,0,1,1-1.5,0V6.71a.75.75,0,1,1,1.5,0Z\"}),wp.element.createElement(\"circle\",{cx:\"12.42\",cy:\"2.37\",r:\"1.45\"})))),edit:function(e){var o=e.attributes,c=e.onReplace,l=e.setAttributes,i=o.content,m=(0,t.useBlockProps)({className:\"rank-math-content-ai-command\"}),u=(0,n.useRef)(null);return(0,n.useEffect)((function(){var e=u.current;e.focus();var t=document.createRange(),n=window.getSelection();t.selectNodeContents(e),t.collapse(!1),n.removeAllRanges(),n.addRange(t)}),[]),wp.element.createElement(\"div\",m,wp.element.createElement(t.BlockControls,null),a()&&wp.element.createElement(\"div\",{className:\"rich-text\",ref:u},rankMath.contentAI.isUserRegistered?rankMath.contentAI.plan?wp.element.createElement(React.Fragment,null,(0,r.__)(\"You have exhausted your Content AI Credits.\",\"rank-math\"),wp.element.createElement(\"a\",{href:\"https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/?play-video=ioPeVIntJWw&utm_source=Plugin&utm_medium=Buy+Credits+Button&utm_campaign=WP\",target:\"_blank\",rel:\"noreferrer\"},(0,r.__)(\"Get more\",\"rank-math\"))):wp.element.createElement(React.Fragment,null,(0,r.__)(\"You do not have a Content AI plan.\",\"rank-math\"),wp.element.createElement(\"a\",{href:\"https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/?play-video=ioPeVIntJWw&utm_source=Plugin&utm_medium=Buy+Plan+Button&utm_campaign=WP\"},(0,r.__)(\"Choose your plan\",\"rank-math\"))):wp.element.createElement(React.Fragment,null,(0,r.__)(\"Start using Content AI by connecting your RankMath account.\",\"rank-math\"),wp.element.createElement(\"a\",{href:rankMath.connectSiteUrl},(0,r.__)(\"Connect Now\",\"rank-math\")))),!a()&&wp.element.createElement(t.RichText,{tagName:\"div\",allowedFormats:[],value:i,onChange:function(e){return l({content:e})},onSplit:function(){return!1},onReplace:c,\"data-empty\":!i,isSelected:!0,ref:u}))}};(0,e.registerBlockType)(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({name:m},o),u)}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/blocks\/command\/assets\/src\/edit.js","ext":"js","size":2410,"mtime":1757324689,"type":"text","content":"\/**\n * WordPress dependencies\n *\/\nimport {\n\tRichText,\n\tuseBlockProps,\n\tBlockControls,\n} from '@wordpress\/block-editor'\nimport { useRef, useEffect } from '@wordpress\/element'\nimport { __ } from '@wordpress\/i18n'\n\n\/**\n * Internal dependencies\n *\/\nimport hasError from '..\/..\/..\/..\/assets\/src\/helpers\/hasError'\n\nconst getErrorMessage = () => {\n\tif ( ! rankMath.contentAI.isUserRegistered ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\t__( 'Start using Content AI by connecting your RankMath account.', 'rank-math' )\n\t\t\t\t}\n\t\t\t\t<a href={ rankMath.connectSiteUrl }>{ __( 'Connect Now', 'rank-math' ) }<\/a>\n\t\t\t<\/>\n\t\t)\n\t}\n\n\tif ( ! rankMath.contentAI.plan ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\t__( 'You do not have a Content AI plan.', 'rank-math' )\n\t\t\t\t}\n\t\t\t\t<a href=\"https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/?play-video=ioPeVIntJWw&utm_source=Plugin&utm_medium=Buy+Plan+Button&utm_campaign=WP\">{ __( 'Choose your plan', 'rank-math' ) }<\/a>\n\t\t\t<\/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{\n\t\t\t\t__( 'You have exhausted your Content AI Credits.', 'rank-math' )\n\t\t\t}\n\t\t\t<a href=\"https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/?play-video=ioPeVIntJWw&utm_source=Plugin&utm_medium=Buy+Credits+Button&utm_campaign=WP\" target=\"_blank\" rel=\"noreferrer\">{ __( 'Get more', 'rank-math' ) }<\/a>\n\t\t<\/>\n\t)\n}\n\nexport default ( {\n\tattributes,\n\tonReplace,\n\tsetAttributes,\n} ) => {\n\tconst { content } = attributes\n\tconst blockProps = useBlockProps( {\n\t\tclassName: 'rank-math-content-ai-command',\n\t} )\n\n\tconst contentEditableRef = useRef( null )\n\tuseEffect( () => {\n\t\tconst { current: contentEditable } = contentEditableRef\n\t\tcontentEditable.focus()\n\n\t\tconst range = document.createRange()\n\t\tconst selection = window.getSelection()\n\t\trange.selectNodeContents( contentEditable )\n\t\trange.collapse( false )\n\t\tselection.removeAllRanges()\n\t\tselection.addRange( range )\n\t}, [] )\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<BlockControls \/>\n\t\t\t{\n\t\t\t\thasError() &&\n\t\t\t\t<div className=\"rich-text\" ref={ contentEditableRef }>\n\t\t\t\t\t{ getErrorMessage() }\n\t\t\t\t<\/div>\n\t\t\t}\n\t\t\t{\n\t\t\t\t! hasError() &&\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\tallowedFormats={ [] }\n\t\t\t\t\tvalue={ content }\n\t\t\t\t\tonChange={ ( newContent ) => {\n\t\t\t\t\t\treturn setAttributes( { content: newContent } )\n\t\t\t\t\t} }\n\t\t\t\t\tonSplit={ () => {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t} }\n\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\tdata-empty={ content ? false : true }\n\t\t\t\t\tisSelected={ true }\n\t\t\t\t\tref={ contentEditableRef }\n\t\t\t\t\/>\n\t\t\t}\n\t\t<\/div>\n\t)\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/blocks\/command\/assets\/src\/index.js","ext":"js","size":1146,"mtime":1757324689,"type":"text","content":"\/**\n * WordPress dependencies\n *\/\nimport { registerBlockType } from '@wordpress\/blocks'\n\n\/**\n * Internal dependencies\n *\/\nimport edit from '.\/edit'\nimport metadata from '.\/block.json'\n\nconst { name } = metadata\n\nexport { metadata, name }\n\nexport const settings = {\n\ticon: <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 17.08 18.02\"><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path d=\"M16.65,12.08a.83.83,0,0,0-1.11.35A7.38,7.38,0,1,1,9,1.63a7.11,7.11,0,0,1,.92.06A2.52,2.52,0,0,1,11,.23,8.87,8.87,0,0,0,9,0a9,9,0,1,0,8,13.19A.83.83,0,0,0,16.65,12.08Z\"\/><path d=\"M7.68,7.29A1.58,1.58,0,0,0,6.2,8.94a1.57,1.57,0,0,0,1.48,1.64A1.56,1.56,0,0,0,9.16,8.94,1.57,1.57,0,0,0,7.68,7.29Z\" \/><path d=\"M13.34,4.71a2.45,2.45,0,0,1-1,.2A2.53,2.53,0,0,1,9.93,3,7.18,7.18,0,0,0,9.12,3a6,6,0,1,0,4.22,1.73ZM10.53,11.3a.75.75,0,1,1-1.5,0v-.06a2.4,2.4,0,0,1-1.66.69,2.81,2.81,0,0,1-2.58-3,2.82,2.82,0,0,1,2.58-3A2.39,2.39,0,0,1,9,6.64a.75.75,0,0,1,1.5.07Zm2.56,0a.75.75,0,1,1-1.5,0V6.71a.75.75,0,1,1,1.5,0Z\" \/><circle cx=\"12.42\" cy=\"2.37\" r=\"1.45\" \/><\/g><\/g><\/svg>,\n\tedit,\n}\n\nregisterBlockType( { name, ...metadata }, settings )\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/blocks\/command\/assets\/src\/block.json","ext":"json","size":608,"mtime":1757324689,"type":"text","content":"{\n\t\"$schema\": \"https:\/\/schemas.wp.org\/trunk\/block.json\",\n\t\"apiVersion\": 3,\n\t\"name\": \"rank-math\/command\",\n\t\"title\": \"AI Assistant [Content AI]\",\n\t\"icon\": \"star\",\n\t\"category\": \"rank-math-blocks\",\n\t\"description\": \"Generate content without any hassle, powered by Rank Math's Content AI.\",\n\t\"keywords\": [ \"ai\", \"content\", \"rank math\", \"rankmath\", \"content ai\", \"seo\" ],\n\t\"textdomain\": \"rank-math-pro\",\n\t\"editorScript\": \"file:..\/js\/index.js\",\n\t\"attributes\": {\n\t\t\"content\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"source\": \"html\",\n\t\t\t\"selector\": \"p\",\n\t\t\t\"default\": \"<span>\/\/<\/span>\",\n\t\t\t\"__experimentalRole\": \"content\"\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/blocks\/command\/class-block-command.php","ext":"php","size":1213,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The TOC Block\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\ContentAI\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse WP_Block_Type_Registry;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Content AI Command Block class.\n *\/\nclass Block_Command {\n\n\tuse Hooker;\n\n\t\/**\n\t * Block type name.\n\t *\n\t * @var string\n\t *\/\n\tprivate $block_type = 'rank-math\/command';\n\n\t\/**\n\t * The single instance of the class.\n\t *\n\t * @var Block_Command\n\t *\/\n\tprotected static $instance = null;\n\n\t\/**\n\t * Retrieve main Block_Command instance.\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Block_Command\n\t *\/\n\tpublic static function get() {\n\t\tif ( is_null( self::$instance ) && ! ( self::$instance instanceof Block_Command ) ) {\n\t\t\tself::$instance = new Block_Command();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( WP_Block_Type_Registry::get_instance()->is_registered( $this->block_type ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tregister_block_type( RANK_MATH_PATH . 'includes\/modules\/content-ai\/blocks\/command\/assets\/src\/block.json' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-content-ai-page.php","ext":"php","size":7869,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Role Manager Module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Content_AI_Page\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Page;\nuse RankMath\\Helpers\\Param;\nuse WP_Block_Editor_Context;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Content_AI_Page class.\n *\/\nclass Content_AI_Page {\n\tuse Hooker;\n\n\t\/**\n\t * Content_AI object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $content_ai;\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param Object $content_ai Content_AI class object.\n\t *\/\n\tpublic function __construct( $content_ai ) {\n\t\t$this->content_ai = $content_ai;\n\t\t$this->action( 'rank_math\/admin_bar\/items', 'admin_bar_items', 11 );\n\t\t$this->action( 'init', 'init' );\n\t\t$this->filter( 'wp_insert_post_data', 'remove_unused_generated_content' );\n\n\t\tif ( Param::get( 'page' ) !== 'rank-math-content-ai-page' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'admin_footer', 'content_editor_settings' );\n\t\tadd_filter( 'should_load_block_editor_scripts_and_styles', '__return_true' );\n\t}\n\n\t\/**\n\t * Init function.\n\t *\/\n\tpublic function init() {\n\t\t$this->register_post_type();\n\t\t$this->register_admin_page();\n\t\tBlock_Command::get();\n\t\tEvent_Scheduler::get();\n\t}\n\n\t\/**\n\t * Register admin page.\n\t *\/\n\tpublic function register_admin_page() {\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\n\t\t$new_label = '<span class=\"rank-math-new-label\" style=\"color:#ed5e5e;font-size:10px;font-weight:normal;\">' . esc_html__( 'New!', 'rank-math' ) . '<\/span>';\n\n\t\tif ( 'rank-math-content-ai-page' === Param::get( 'page' ) ) {\n\t\t\t$this->content_ai->localized_data( [ 'isContentAIPage' => true ] );\n\t\t}\n\n\t\tnew Page(\n\t\t\t'rank-math-content-ai-page',\n\t\t\tesc_html__( 'Content AI', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'position'   => 4,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t\/\/ Translators: placeholder is the new label.\n\t\t\t\t'menu_title' => sprintf( esc_html__( 'Content AI %s', 'rank-math' ), $new_label ),\n\t\t\t\t'capability' => 'rank_math_content_ai',\n\t\t\t\t'render'     => __DIR__ . '\/views\/main.php',\n\t\t\t\t'classes'    => [ 'rank-math-page' ],\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'wp-edit-post'              => '',\n\t\t\t\t\t\t'rank-math-common'          => '',\n\t\t\t\t\t\t'rank-math-cmb2'            => '',\n\t\t\t\t\t\t'wp-block-library'          => '',\n\t\t\t\t\t\t'rank-math-content-ai-page' => $uri . '\/assets\/css\/content-ai-page.css',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'lodash'               => '',\n\t\t\t\t\t\t'wp-components'        => '',\n\t\t\t\t\t\t'wp-block-library'     => '',\n\t\t\t\t\t\t'wp-format-library'    => '',\n\t\t\t\t\t\t'wp-edit-post'         => '',\n\t\t\t\t\t\t'wp-blocks'            => '',\n\t\t\t\t\t\t'wp-element'           => '',\n\t\t\t\t\t\t'wp-editor'            => '',\n\t\t\t\t\t\t'rank-math-components' => '',\n\t\t\t\t\t\t'rank-math-analyzer'   => rank_math()->plugin_url() . 'assets\/admin\/js\/analyzer.js',\n\t\t\t\t\t\t'rank-math-content-ai' => rank_math()->plugin_url() . 'includes\/modules\/content-ai\/assets\/js\/content-ai.js',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add admin bar item.\n\t *\n\t * @param Admin_Bar_Menu $menu Menu class instance.\n\t *\/\n\tpublic function admin_bar_items( $menu ) {\n\t\t$url = Helper::get_admin_url( 'content-ai-page' );\n\t\t$menu->add_sub_menu(\n\t\t\t'content-ai-page',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'Content AI', 'rank-math' ),\n\t\t\t\t'href'     => $url,\n\t\t\t\t'priority' => 50,\n\t\t\t]\n\t\t);\n\n\t\t$items = [\n\t\t\t'content-ai-tools'   => [\n\t\t\t\t'title' => esc_html__( 'AI Tools', 'rank-math' ),\n\t\t\t\t'href'  => $url . '#ai-tools',\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Content AI Tools', 'rank-math' ) ],\n\t\t\t],\n\n\t\t\t'content-ai-editor'  => [\n\t\t\t\t'title' => esc_html__( 'Content Editor', 'rank-math' ),\n\t\t\t\t'href'  => $url . '#content-editor',\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Content AI Editor', 'rank-math' ) ],\n\t\t\t],\n\n\t\t\t'content-ai-chat'    => [\n\t\t\t\t'title' => esc_html__( 'Chat', 'rank-math' ),\n\t\t\t\t'href'  => $url . '#chat',\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Content AI Chat', 'rank-math' ) ],\n\t\t\t],\n\n\t\t\t'content-ai-history' => [\n\t\t\t\t'title' => esc_html__( 'History', 'rank-math' ),\n\t\t\t\t'href'  => $url . '#history',\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Content AI History', 'rank-math' ) ],\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $items as $id => $args ) {\n\t\t\t$menu->add_sub_menu( $id, $args, 'content-ai-page' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add Content Editor Settings.\n\t *\/\n\tpublic function content_editor_settings() {\n\t\t$post                 = $this->get_content_editor_post();\n\t\t$block_editor_context = new WP_Block_Editor_Context( [ 'post' => [] ] );\n\n\t\t\/\/ Flag that we're loading the block editor.\n\t\t$current_screen = get_current_screen();\n\t\t$current_screen->is_block_editor( true );\n\n\t\t$editor_settings = [\n\t\t\t'availableTemplates'   => [],\n\t\t\t'disablePostFormats'   => true,\n\t\t\t'autosaveInterval'     => 0,\n\t\t\t'richEditingEnabled'   => user_can_richedit(),\n\t\t\t'supportsLayout'       => function_exists( 'wp_theme_has_theme_json' ) ? wp_theme_has_theme_json() : false,\n\t\t\t'supportsTemplateMode' => false,\n\t\t\t'enableCustomFields'   => false,\n\t\t];\n\n\t\t$editor_settings = get_block_editor_settings( $editor_settings, $block_editor_context );\n\n\t\t\/**\n\t\t * Scripts\n\t\t *\/\n\t\twp_enqueue_media( [ 'post' => $post->ID ] );\n\t\t?>\n\n\t\t<div id=\"editor2\" data-settings='<?php echo esc_attr( wp_json_encode( $editor_settings ) ); ?>' data-post-id=\"<?php echo esc_attr( $post->ID ); ?>\"><\/div>\n\t\t<?php\n\n\t\twp_set_script_translations( 'rank-math-content-ai', 'rank-math' );\n\t\twp_set_script_translations( 'rank-math-content-ai-page', 'rank-math' );\n\t}\n\n\t\/**\n\t * Remove unsed content generated from the Toolbar option of the Content AI.\n\t *\n\t * @param array $data An array of slashed, sanitized, and processed post data.\n\t *\/\n\tpublic function remove_unused_generated_content( $data ) {\n\t\t$blocks = parse_blocks( $data['post_content'] );\n\t\tif ( empty( $blocks ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$update = false;\n\t\tforeach ( $blocks as $key => $block ) {\n\t\t\tif ( 'rank-math\/command' === $block['blockName'] ) {\n\t\t\t\tunset( $blocks[ $key ] );\n\t\t\t\t$update = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( $update ) {\n\t\t\t$data['post_content'] = serialize_blocks( $blocks );\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Register Content AI post type to use the post in Content Editor.\n\t *\/\n\tprivate function register_post_type() {\n\t\tregister_post_type(\n\t\t\t'rm_content_editor',\n\t\t\t[\n\t\t\t\t'label'               => 'RM Content Editor',\n\t\t\t\t'public'              => false,\n\t\t\t\t'publicly_queryable'  => false,\n\t\t\t\t'show_ui'             => false,\n\t\t\t\t'show_in_rest'        => true,\n\t\t\t\t'has_archive'         => false,\n\t\t\t\t'show_in_menu'        => false,\n\t\t\t\t'show_in_nav_menus'   => false,\n\t\t\t\t'delete_with_user'    => false,\n\t\t\t\t'exclude_from_search' => false,\n\t\t\t\t'capability_type'     => 'page',\n\t\t\t\t'map_meta_cap'        => true,\n\t\t\t\t'hierarchical'        => false,\n\t\t\t\t'rewrite'             => false,\n\t\t\t\t'query_var'           => false,\n\t\t\t\t'supports'            => [ 'editor' ],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get Content Editor post.\n\t *\n\t * @return int Post ID.\n\t *\/\n\tprivate function get_content_editor_post() {\n\t\t$posts = get_posts(\n\t\t\t[\n\t\t\t\t'post_type'   => 'rm_content_editor',\n\t\t\t\t'numberposts' => 1,\n\t\t\t\t'post_status' => 'any',\n\t\t\t]\n\t\t);\n\n\t\tif ( empty( $posts ) ) {\n\t\t\t$post_id = wp_insert_post(\n\t\t\t\t[\n\t\t\t\t\t'post_type'    => 'rm_content_editor',\n\t\t\t\t\t'post_content' => '<!-- wp:rank-math\/command \/-->',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\treturn get_post( $post_id );\n\t\t}\n\n\t\t$ai_post = current( $posts );\n\t\t$content = $ai_post->post_content;\n\t\t$blocks  = parse_blocks( $content );\n\t\tif ( ! empty( $blocks ) && count( $blocks ) < 2 && 'core\/paragraph' === $blocks[0]['blockName'] ) {\n\t\t\t$content = do_blocks( $ai_post->post_content );\n\t\t\t$content = trim( preg_replace( '\/<p[^>]*><\\\\\/p[^>]*>\/', '', $content ) );\n\t\t}\n\n\t\tif ( ! $content ) {\n\t\t\twp_update_post(\n\t\t\t\t[\n\t\t\t\t\t'ID'           => $ai_post->ID,\n\t\t\t\t\t'post_content' => '<!-- wp:rank-math\/command \/-->',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn $ai_post;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/content-ai\/class-content-ai.php","ext":"php","size":2644,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Content AI module.\n *\n * @since      1.0.71\n * @package    RankMath\n * @subpackage RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\ContentAI;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Url;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Content_AI class.\n *\/\nclass Content_AI {\n\tuse Hooker;\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rest_api_init', 'init_rest_api' );\n\t\tnew Content_AI_Page( $this );\n\t\tnew Bulk_Actions();\n\n\t\tif ( ! Helper::has_cap( 'content_ai' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnew Admin( $this );\n\t\tnew Assets( $this );\n\t}\n\n\t\/**\n\t * Load the REST API endpoints.\n\t *\/\n\tpublic function init_rest_api() {\n\t\t$rest = new Rest();\n\t\t$rest->register_routes();\n\t}\n\n\t\/**\n\t * Whether to load Content AI data.\n\t *\/\n\tpublic static function can_add_tab() {\n\t\treturn in_array( Helper::get_post_type(), (array) Helper::get_settings( 'general.content_ai_post_types' ), true );\n\t}\n\n\t\/**\n\t * Localized data to use on the Content AI page.\n\t *\n\t * @param array $data Localized data for posts.\n\t *\/\n\tpublic function localized_data( $data = [] ) {\n\t\t$refresh_date = Helper::get_content_ai_refresh_date();\n\t\tHelper::add_json(\n\t\t\t'contentAI',\n\t\t\tarray_merge(\n\t\t\t\t$data,\n\t\t\t\t[\n\t\t\t\t\t'audience'              => (array) Helper::get_settings( 'general.content_ai_audience', 'General Audience' ),\n\t\t\t\t\t'tone'                  => (array) Helper::get_settings( 'general.content_ai_tone', 'Formal' ),\n\t\t\t\t\t'language'              => Helper::get_settings( 'general.content_ai_language', Helper::content_ai_default_language() ),\n\t\t\t\t\t'history'               => Helper::get_outputs(),\n\t\t\t\t\t'chats'                 => Helper::get_chats(),\n\t\t\t\t\t'recentPrompts'         => Helper::get_recent_prompts(),\n\t\t\t\t\t'prompts'               => Helper::get_prompts(),\n\t\t\t\t\t'isUserRegistered'      => Helper::is_site_connected(),\n\t\t\t\t\t'connectData'           => Admin_Helper::get_registration_data(),\n\t\t\t\t\t'connectSiteUrl'        => Admin_Helper::get_activate_url( Url::get_current_url() ),\n\t\t\t\t\t'credits'               => Helper::get_content_ai_credits(),\n\t\t\t\t\t'plan'                  => Helper::get_content_ai_plan(),\n\t\t\t\t\t'errors'                => Helper::get_content_ai_errors(),\n\t\t\t\t\t'registerWriteShortcut' => version_compare( get_bloginfo( 'version' ), '6.2', '>=' ),\n\t\t\t\t\t'isMigrating'           => get_site_transient( 'rank_math_content_ai_migrating_user' ),\n\t\t\t\t\t'url'                   => CONTENT_AI_URL . '\/ai\/',\n\t\t\t\t\t'resetDate'             => $refresh_date ? wp_date( 'Y-m-d g:ia', $refresh_date ) : '',\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/assets\/js\/404-monitor.js","ext":"js","size":1143,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var t,e={n:function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,{a:n}),n},d:function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}},n=jQuery;(t=e.n(n)())((function(){var e=this;e.wrap=t(\".rank-math-404-monitor-wrap\"),e.wrap.on(\"click\",\".rank-math-404-delete\",(function(e){e.preventDefault();var n=t(this),r=n.attr(\"href\").replace(\"admin.php\",\"admin-ajax.php\").replace(\"action=delete\",\"action=rank_math_delete_log\").replace(\"page=\",\"math=\");t.ajax({url:r,type:\"GET\",success:function(e){e&&e.success&&n.closest(\"tr\").fadeOut(800,(function(){t(this).remove()}))}})})),e.wrap.on(\"click\",\".rank-math-clear-logs\",(function(e){if(e.preventDefault(),!confirm(rankMath.logConfirmClear))return!1;t(this).closest(\"form\").append('<input type=\"hidden\" name=\"action\" value=\"clear_log\">').submit()})),t(\"#doaction, #doaction2\").on(\"click\",(function(){\"redirect\"===t(\"#bulk-action-selector-top\").val()&&t(this).closest(\"form\").attr(\"action\",rankMath.redirectionsUri)}))}))}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/assets\/css\/404-monitor.css","ext":"css","size":166,"mtime":1757324689,"type":"text","content":"\/*!\n * Plugin:\tRank Math - 404 Monitor\n * URL:\t\thttps:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * Name:\t404-monitor.css\n *\/.metabox-prefs legend+label{display:none}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/class-admin.php","ext":"php","size":6009,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin-side code for the 404 Monitor module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Monitor;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Module\\Base;\nuse RankMath\\Admin\\Page;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin extends Base {\n\n\t\/**\n\t * Module directory.\n\t *\n\t * @var string\n\t *\/\n\tpublic $directory;\n\n\t\/**\n\t * WP_List_Table class name.\n\t *\n\t * @var string\n\t *\/\n\tpublic $table;\n\n\t\/**\n\t * Screen options.\n\t *\n\t * @var array\n\t *\/\n\tpublic $screen_options = [];\n\n\t\/**\n\t * Page object.\n\t *\n\t * @var Page\n\t *\/\n\tpublic $page;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'             => '404-monitor',\n\t\t\t\t'directory'      => $directory,\n\t\t\t\t'table'          => 'RankMath\\Monitor\\Table',\n\t\t\t\t'screen_options' => [\n\t\t\t\t\t'id'      => 'rank_math_404_monitor_per_page',\n\t\t\t\t\t'default' => 100,\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\tif ( $this->page->is_current_page() ) {\n\t\t\t$this->action( 'init', 'init' );\n\t\t}\n\n\t\tif ( Helper::has_cap( '404_monitor' ) ) {\n\t\t\t$this->filter( 'rank_math\/settings\/general', 'add_settings' );\n\t\t}\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\/\n\tpublic function init() {\n\t\t$action = Helper::get_request_action();\n\t\tif ( false === $action || ! in_array( $action, [ 'delete', 'clear_log' ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! check_admin_referer( 'bulk-events' ) ) {\n\t\t\tcheck_admin_referer( '404_delete_log', 'security' );\n\t\t}\n\n\t\t$action = 'do_' . $action;\n\t\t$this->$action();\n\t}\n\n\t\/**\n\t * Delete selected log.\n\t *\/\n\tprotected function do_delete() {\n\t\t$log = Param::request( 'log', '', FILTER_DEFAULT, FILTER_REQUIRE_ARRAY );\n\t\tif ( empty( $log ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$count = DB::delete_log( $log );\n\t\tif ( $count > 0 ) {\n\t\t\tHelper::add_notification(\n\t\t\t\t\/* translators: delete counter *\/\n\t\t\t\tsprintf( esc_html__( '%d log(s) deleted.', 'rank-math' ), $count ),\n\t\t\t\t[ 'type' => 'success' ]\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Clears all 404 logs, by truncating the log table.\n\t * Fired with the `$this->$action();` line inside the `init()` method.\n\t *\/\n\tprotected function do_clear_log() {\n\t\t$count = DB::get_count();\n\t\tDB::clear_logs();\n\n\t\tHelper::add_notification(\n\t\t\t\/* translators: delete counter *\/\n\t\t\tsprintf( esc_html__( 'Log cleared - %d items deleted.', 'rank-math' ), $count ),\n\t\t\t[ 'type' => 'success' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Register the 404 Monitor admin page.\n\t *\/\n\tpublic function register_admin_page() {\n\n\t\t$dir = $this->directory . '\/views\/';\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\n\t\t$this->page = new Page(\n\t\t\t'rank-math-404-monitor',\n\t\t\tesc_html__( '404 Monitor', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'position'   => 30,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t'capability' => 'rank_math_404_monitor',\n\t\t\t\t'render'     => $dir . 'main.php',\n\t\t\t\t'help'       => [\n\t\t\t\t\t'404-overview'       => [\n\t\t\t\t\t\t'title' => esc_html__( 'Overview', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-overview.php',\n\t\t\t\t\t],\n\t\t\t\t\t'404-screen-content' => [\n\t\t\t\t\t\t'title' => esc_html__( 'Screen Content', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-screen-content.php',\n\t\t\t\t\t],\n\t\t\t\t\t'404-actions'        => [\n\t\t\t\t\t\t'title' => esc_html__( 'Available Actions', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-actions.php',\n\t\t\t\t\t],\n\t\t\t\t\t'404-bulk'           => [\n\t\t\t\t\t\t'title' => esc_html__( 'Bulk Actions', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-bulk.php',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'rank-math-common'      => '',\n\t\t\t\t\t\t'rank-math-404-monitor' => $uri . '\/assets\/css\/404-monitor.css',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [ 'rank-math-404-monitor' => $uri . '\/assets\/js\/404-monitor.js' ],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tif ( $this->page->is_current_page() ) {\n\t\t\tHelper::add_json( 'logConfirmClear', esc_html__( 'Are you sure you wish to delete all 404 error logs?', 'rank-math' ) );\n\t\t\tHelper::add_json( 'redirectionsUri', Helper::get_admin_url( 'redirections' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Add module settings tab in the General Settings.\n\t *\n\t * @param array $tabs Array of option panel tabs.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'404-monitor' => [\n\t\t\t\t\t'icon'  => 'rm-icon rm-icon-404',\n\t\t\t\t\t'title' => esc_html__( '404 Monitor', 'rank-math' ),\n\t\t\t\t\t\/* translators: 1. Link to KB article 2. Link to redirection setting scree *\/\n\t\t\t\t\t'desc'  => sprintf( esc_html__( 'Monitor broken pages that ruin user-experience and affect SEO. %s.', 'rank-math' ), '<a href=\"' . KB::get( '404-monitor-settings', 'Options Panel 404 Monitor Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'  => $this->directory . '\/views\/options.php',\n\t\t\t\t\t'json'  => [\n\t\t\t\t\t\t'choicesComparisonTypes' => Helper::choices_comparison_types(),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t7\n\t\t);\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Output page title actions.\n\t *\n\t * @return void\n\t *\/\n\tpublic function page_title_actions() {\n\t\t$actions = [\n\t\t\t'settings'   => [\n\t\t\t\t'class' => 'page-title-action',\n\t\t\t\t'href'  => Helper::get_settings_url( 'general', '404-monitor' ),\n\t\t\t\t'label' => __( 'Settings', 'rank-math' ),\n\t\t\t],\n\t\t\t'learn_more' => [\n\t\t\t\t'class' => 'page-title-action',\n\t\t\t\t'href'  => KB::get( '404-monitor', '404 Page Learn More Button' ),\n\t\t\t\t'label' => __( 'Learn More', 'rank-math' ),\n\t\t\t],\n\t\t];\n\n\t\t\/**\n\t\t * Filters the title actions available on the 404 Monitor page.\n\t\t *\n\t\t * @param array $actions Multidimensional array of actions to show.\n\t\t *\/\n\t\t$actions = $this->do_filter( '404_monitor\/page_title_actions', $actions );\n\n\t\tforeach ( $actions as $action_name => $action ) {\n\t\t\t?>\n\t\t\t\t<a class=\"<?php echo esc_attr( $action['class'] ); ?> rank-math-404-monitor-<?php echo esc_attr( $action_name ); ?>\" href=\"<?php echo esc_attr( $action['href'] ); ?>\" target=\"_blank\"><?php echo esc_attr( $action['label'] ); ?><\/a>\n\t\t\t<?php\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/class-table.php","ext":"php","size":7257,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WP List Table class for the 404 Monitor module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Monitor;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Redirections\\DB as RedirectionsDB;\nuse RankMath\\Redirections\\Cache as RedirectionsCache;\nuse RankMath\\Admin\\List_Table;\nuse RankMath\\Monitor\\Admin;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Table class.\n *\/\nclass Table extends List_Table {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tparent::__construct(\n\t\t\t[\n\t\t\t\t'screen'   => Admin::get_screen(),\n\t\t\t\t'singular' => 'event',\n\t\t\t\t'plural'   => 'events',\n\t\t\t\t'no_items' => esc_html__( 'The 404 error log is empty.', 'rank-math' ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Prepares the list of items for displaying.\n\t *\/\n\tpublic function prepare_items() {\n\t\t$per_page = $this->get_items_per_page( 'rank_math_404_monitor_per_page', 100 );\n\t\t$search   = $this->get_search();\n\n\t\t$data = DB::get_logs(\n\t\t\t[\n\t\t\t\t'limit'   => $per_page,\n\t\t\t\t'order'   => $this->get_order(),\n\t\t\t\t'orderby' => $this->get_orderby( 'accessed' ),\n\t\t\t\t'paged'   => $this->get_pagenum(),\n\t\t\t\t'search'  => $search ? $search : '',\n\t\t\t]\n\t\t);\n\n\t\t$this->items = $data['logs'];\n\n\t\tforeach ( $this->items as $i => $item ) {\n\t\t\t$this->items[ $i ]['uri_decoded'] = urldecode( $item['uri'] );\n\t\t}\n\n\t\t$this->set_pagination_args(\n\t\t\t[\n\t\t\t\t'total_items' => $data['count'],\n\t\t\t\t'per_page'    => $per_page,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Extra controls to be displayed between bulk actions and pagination.\n\t *\n\t * @param string $which Where to show nav.\n\t *\/\n\tprotected function extra_tablenav( $which ) {\n\t\tif ( empty( $this->items ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<div class=\"alignleft actions\">\n\t\t\t<input type=\"button\" class=\"button button-link-delete action rank-math-clear-logs\" value=\"<?php esc_attr_e( 'Clear Log', 'rank-math' ); ?>\">\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Handles the checkbox column output.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tpublic function column_cb( $item ) {\n\t\t$out = sprintf( '<input type=\"checkbox\" name=\"log[]\" value=\"%s\" \/>', $item['id'] );\n\t\treturn $this->do_filter( '404_monitor\/list_table_column', $out, $item, 'cb' );\n\t}\n\n\t\/**\n\t * Handle the URI column.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tprotected function column_uri( $item ) {\n\t\t$link = '<a href=\"' . esc_url( home_url( $item['uri'] ) ) . '\" target=\"_blank\" title=\"' . esc_attr__( 'View', 'rank-math' ) . '\">' . esc_html( $item['uri_decoded'] ) . '<\/a>';\n\t\t$out  = $link . $this->column_actions( $item );\n\t\treturn $this->do_filter( '404_monitor\/list_table_column', $out, $item, 'uri' );\n\t}\n\n\t\/**\n\t * Handle the referer column.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tprotected function column_referer( $item ) {\n\t\t$out = '<a href=\"' . esc_url( $item['referer'] ) . '\" target=\"_blank\">' . esc_html( $item['referer'] ) . '<\/a>';\n\t\treturn $this->do_filter( '404_monitor\/list_table_column', $out, $item, 'referer' );\n\t}\n\n\t\/**\n\t * Handles the default column output.\n\t *\n\t * @param object $item        The current item.\n\t * @param string $column_name The current column name.\n\t *\/\n\tpublic function column_default( $item, $column_name ) {\n\t\t$out = '';\n\t\tif ( in_array( $column_name, [ 'times_accessed', 'accessed', 'user_agent' ], true ) ) {\n\t\t\t$out = esc_html( $item[ $column_name ] );\n\t\t}\n\n\t\treturn $this->do_filter( '404_monitor\/list_table_column', $out, $item, $column_name );\n\t}\n\n\t\/**\n\t * Generate row actions div.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tpublic function column_actions( $item ) {\n\t\t$actions = [];\n\n\t\t$actions['view'] = sprintf(\n\t\t\t'<a href=\"%s\" target=\"_blank\">' . esc_html__( 'View', 'rank-math' ) . '<\/a>',\n\t\t\tesc_url( home_url( $item['uri'] ) )\n\t\t);\n\n\t\tif ( Helper::get_module( 'redirections' ) ) {\n\t\t\t$this->add_redirection_actions( $item, $actions );\n\t\t}\n\n\t\t$actions['delete'] = sprintf(\n\t\t\t'<a href=\"%s\" class=\"rank-math-404-delete\">' . esc_html__( 'Delete', 'rank-math' ) . '<\/a>',\n\t\t\tHelper::get_admin_url(\n\t\t\t\t'404-monitor',\n\t\t\t\t[\n\t\t\t\t\t'action'   => 'delete',\n\t\t\t\t\t'log'      => $item['id'],\n\t\t\t\t\t'security' => wp_create_nonce( '404_delete_log' ),\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\n\t\treturn $this->row_actions( $actions );\n\t}\n\n\t\/**\n\t * Add redirection actions.\n\t *\n\t * @param object $item    The current item.\n\t * @param array  $actions Array of actions.\n\t *\/\n\tprivate function add_redirection_actions( $item, &$actions ) {\n\t\t$redirection = RedirectionsCache::get_by_url( $item['uri_decoded'] );\n\n\t\tif ( ! $redirection ) {\n\t\t\t$redirection = RedirectionsDB::match_redirections( $item['uri_decoded'] );\n\t\t}\n\n\t\tif ( $redirection ) {\n\t\t\t$redirection_array = (array) $redirection;\n\t\t\t$url               = esc_url(\n\t\t\t\tHelper::get_admin_url(\n\t\t\t\t\t'redirections',\n\t\t\t\t\t[\n\t\t\t\t\t\t'redirection' => isset( $redirection_array['redirection_id'] ) ? $redirection_array['redirection_id'] : $redirection_array['id'],\n\t\t\t\t\t\t'security'    => wp_create_nonce( 'redirection_list_action' ),\n\t\t\t\t\t\t'action'      => 'edit',\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$actions['view_redirection'] = sprintf( '<a href=\"%s\" target=\"_blank\">' . esc_html__( 'View Redirection', 'rank-math' ) . '<\/a>', $url );\n\t\t\treturn;\n\t\t}\n\n\t\t$url = esc_url(\n\t\t\tHelper::get_admin_url(\n\t\t\t\t'redirections',\n\t\t\t\t[\n\t\t\t\t\t'url' => $item['uri_decoded'],\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\n\t\t$actions['redirect'] = sprintf(\n\t\t\t'<a href=\"%1$s\" class=\"rank-math-404-redirect-btn\">%2$s<\/a>',\n\t\t\t$url,\n\t\t\tesc_html__( 'Redirect', 'rank-math' )\n\t\t);\n\t}\n\n\t\/**\n\t * Get the list of columns.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_columns() {\n\t\t$columns = [\n\t\t\t'cb'             => '<input type=\"checkbox\" \/>',\n\t\t\t'uri'            => esc_html__( 'URI', 'rank-math' ),\n\t\t\t'referer'        => esc_html__( 'Referer', 'rank-math' ),\n\t\t\t'user_agent'     => esc_html__( 'User-Agent', 'rank-math' ),\n\t\t\t'times_accessed' => esc_html__( 'Hits', 'rank-math' ),\n\t\t\t'accessed'       => esc_html__( 'Access Time', 'rank-math' ),\n\t\t];\n\n\t\t$columns = $this->filter_columns( $columns );\n\t\treturn $this->do_filter( '404_monitor\/list_table_columns', $columns );\n\t}\n\n\t\/**\n\t * Filter columns.\n\t *\n\t * @param array $columns Original columns.\n\t *\n\t * @return array\n\t *\/\n\tprivate function filter_columns( $columns ) {\n\t\tif ( 'simple' === Helper::get_settings( 'general.404_monitor_mode' ) ) {\n\t\t\tunset( $columns['referer'], $columns['user_agent'] );\n\t\t\treturn $columns;\n\t\t}\n\n\t\tunset( $columns['times_accessed'] );\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Get the list of sortable columns.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_sortable_columns() {\n\t\t$sortable = [\n\t\t\t'uri'            => [ 'uri', false ],\n\t\t\t'times_accessed' => [ 'times_accessed', false ],\n\t\t\t'accessed'       => [ 'accessed', false ],\n\t\t];\n\n\t\treturn $this->do_filter( '404_monitor\/list_table_sortable_columns', $sortable );\n\t}\n\n\t\/**\n\t * Get an associative array ( option_name => option_title ) with the list\n\t * of bulk actions available on this table.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_bulk_actions() {\n\t\t$actions = [\n\t\t\t'redirect' => esc_html__( 'Redirect', 'rank-math' ),\n\t\t\t'delete'   => esc_html__( 'Delete', 'rank-math' ),\n\t\t];\n\n\t\tif ( ! Helper::get_module( 'redirections' ) ) {\n\t\t\tunset( $actions['redirect'] );\n\t\t}\n\n\t\treturn $actions;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/help-tab-actions.php","ext":"php","size":764,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * 404 Monitor inline help: \"Available Actions\" tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'Hovering over a row in the list will display action links that allow you to manage the item. You can perform the following actions:', 'rank-math' ); ?>\n<\/p>\n<ul>\n\t<li><?php echo wp_kses_post( __( '<strong>View Details<\/strong> shows details about the 404 requests.', 'rank-math' ) ); ?><\/li>\n\t<li><?php echo wp_kses_post( __( '<strong>Redirect<\/strong> takes you to the Redirections manager to redirect the 404 URL.', 'rank-math' ) ); ?><\/li>\n\t<li><?php echo wp_kses_post( __( '<strong>Delete<\/strong> permanently removes the item from the list.', 'rank-math' ) ); ?><\/li>\n<\/ul>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/options.php","ext":"php","size":2555,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * 404 Monitor general settings.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => '404_advanced_monitor',\n\t\t'type'    => 'notice',\n\t\t'what'    => 'error',\n\t\t'content' => esc_html__( 'If you have hundreds of 404 errors, your error log might increase quickly. Only choose this option if you have a very few 404s and are unable to replicate the 404 error on a particular URL from your end.', 'rank-math' ),\n\t\t'dep'     => [ [ '404_monitor_mode', 'advanced' ] ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => '404_monitor_mode',\n\t\t'type'    => 'radio_inline',\n\t\t'name'    => esc_html__( 'Mode', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'The Simple mode only logs URI and access time, while the Advanced mode creates detailed logs including additional information such as the Referer URL.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'simple'   => esc_html__( 'Simple', 'rank-math' ),\n\t\t\t'advanced' => esc_html__( 'Advanced', 'rank-math' ),\n\t\t],\n\t\t'default' => 'simple',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => '404_monitor_limit',\n\t\t'type'       => 'text',\n\t\t'name'       => esc_html__( 'Log Limit', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Sets the max number of rows in a log. Set to 0 to disable the limit.', 'rank-math' ),\n\t\t'default'    => '100',\n\t\t'attributes' => [ 'type' => 'number' ],\n\t]\n);\n\n$monitor_exclude = $cmb->add_field(\n\t[\n\t\t'id'      => '404_monitor_exclude',\n\t\t'type'    => 'group',\n\t\t'name'    => esc_html__( 'Exclude Paths', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Enter URIs or keywords you wish to prevent from getting logged by the 404 monitor.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'add_button'    => esc_html__( 'Add another', 'rank-math' ),\n\t\t\t'remove_button' => esc_html__( 'Remove', 'rank-math' ),\n\t\t],\n\t\t'classes' => 'cmb-group-text-only',\n\t]\n);\n\n$cmb->add_group_field(\n\t$monitor_exclude,\n\t[\n\t\t'id'   => 'exclude',\n\t\t'type' => 'text',\n\t]\n);\n\n$cmb->add_group_field(\n\t$monitor_exclude,\n\t[\n\t\t'id'      => 'comparison',\n\t\t'type'    => 'select',\n\t\t'options' => Helper::choices_comparison_types(),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => '404_monitor_ignore_query_parameters',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Ignore Query Parameters', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Turn ON to ignore all query parameters (the part after a question mark in a URL) when logging 404 errors.', 'rank-math' ),\n\t\t'default' => 'off',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/main.php","ext":"php","size":744,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Main template for 404 monitor\n *\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$monitor = Helper::get_module( '404-monitor' )->admin;\n$monitor->table->prepare_items();\n?>\n<div class=\"wrap rank-math-404-monitor-wrap\">\n\n\t<h2>\n\t\t<?php echo esc_html( get_admin_page_title() ); ?>\n\t\t<?php $monitor->page_title_actions(); ?>\n\t<\/h2>\n\n\t<?php \\do_action( 'rank_math\/404_monitor\/before_list_table', $monitor ); ?>\n\n\t<form method=\"get\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rank-math-404-monitor\">\n\t\t<?php $monitor->table->search_box( esc_html__( 'Search', 'rank-math' ), 's' ); ?>\n\t<\/form>\n\t<form method=\"post\">\n\t\t<?php $monitor->table->display(); ?>\n\t<\/form>\n\n<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/help-tab-bulk.php","ext":"php","size":343,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * 404 Monitor inline help: \"Bulk Actions\" tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'You can also redirect or delete multiple items at once. Selecting multiple items to redirect allows you to redirect them to a single URL.', 'rank-math' ); ?>\n<\/p>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/help-tab-overview.php","ext":"php","size":967,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * 404 Monitor inline help: \"Overview\" tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n *\/\n\nuse RankMath\\KB;\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n\n<p>\n\t<?php esc_html_e( 'With the 404 monitor you can see where users and search engines are unable to find your content.', 'rank-math' ); ?>\n<\/p>\n\n<p>\n\t<?php esc_html_e( 'Knowledge Base Articles:', 'rank-math' ); ?>\n<\/p>\n\n<ul>\n\t<li>\n\t\t<a href=\"<?php echo esc_url( KB::get( '404-monitor', '404 Monitor Help Toggle' ) ); ?>\" target=\"_blank\">\n\t\t\t<?php esc_html_e( '404 Monitor', 'rank-math' ); ?>\n<\/a>\n\t<\/li>\n\t<li>\n\t\t<a href=\"<?php echo esc_url( KB::get( '404-monitor-settings', '404 Monitor Help Toggle' ) ); ?>\" target=\"_blank\">\n\t\t\t<?php esc_html_e( '404 Monitor Settings', 'rank-math' ); ?>\n<\/a>\n\t<\/li>\n\t<li>\n\t\t<a href=\"<?php echo esc_url( KB::get( 'fix-404', '404 Monitor Help Toggle Fix link' ) ); ?>\" target=\"_blank\">\n\t\t\t<?php esc_html_e( 'Fix 404 Errors', 'rank-math' ); ?>\n<\/a>\n\t<\/li>\n<\/ul>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/views\/help-tab-screen-content.php","ext":"php","size":738,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * 404 Monitor inline help: \"Screen Content\" tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'You can customize the display of this screen\\'s contents in a number of ways:', 'rank-math' ); ?>\n<\/p>\n<ul>\n\t<li><?php esc_html_e( 'You can hide\/display columns based on your needs.', 'rank-math' ); ?><\/li>\n\t<li><?php esc_html_e( 'You can decide how many items to list per screen using the Screen Options tab.', 'rank-math' ); ?><\/li>\n\t<li><?php esc_html_e( 'You can search items using the search form at the top.', 'rank-math' ); ?><\/li>\n\t<li><?php esc_html_e( 'You can reorder the list by clicking on the column headings. ', 'rank-math' ); ?><\/li>\n<\/ul>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/class-monitor.php","ext":"php","size":6833,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The 404 Monitor Module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Monitor;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse donatj\\UserAgent\\UserAgentParser;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Monitor class.\n *\/\nclass Monitor {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * Admin object.\n\t *\n\t * @var Admin\n\t *\/\n\tpublic $admin;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( is_admin() ) {\n\t\t\t$this->admin = new Admin();\n\t\t}\n\n\t\tif ( Helper::is_ajax() ) {\n\t\t\t$this->ajax( 'delete_log', 'delete_log' );\n\t\t}\n\n\t\tif ( Helper::has_cap( '404_monitor' ) && Helper::is_rest() ) {\n\t\t\t$this->action( 'rank_math\/dashboard\/widget', 'dashboard_widget', 11 );\n\t\t}\n\n\t\t$this->action( $this->get_hook(), 'capture_404' );\n\n\t\tif ( Helper::has_cap( '404_monitor' ) ) {\n\t\t\t$this->action( 'rank_math\/admin_bar\/items', 'admin_bar_items', 11 );\n\t\t}\n\t}\n\n\t\/**\n\t * Add stats in the admin dashboard widget.\n\t *\/\n\tpublic function dashboard_widget() {\n\t\t$data = DB::get_stats();\n\t\t?>\n\t\t<h3>\n\t\t\t<?php esc_html_e( '404 Monitor', 'rank-math' ); ?>\n\t\t\t<a href=\"<?php echo esc_url( Helper::get_admin_url( '404-monitor' ) ); ?>\" class=\"rank-math-view-report\" title=\"<?php esc_html_e( 'View Report', 'rank-math' ); ?>\"><i class=\"dashicons dashicons-chart-bar\"><\/i><\/a>\n\t\t<\/h3>\n\t\t<div class=\"rank-math-dashboard-block\">\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t<?php esc_html_e( 'Log Count', 'rank-math' ); ?>\n\t\t\t\t\t<span class=\"rank-math-tooltip\"><em class=\"dashicons-before dashicons-editor-help\"><\/em><span><?php esc_html_e( 'Total number of 404 pages opened by the users.', 'rank-math' ); ?><\/span><\/span>\n\t\t\t\t<\/h4>\n\t\t\t\t<strong class=\"text-large\"><?php echo esc_html( Str::human_number( $data->total ) ); ?><\/strong>\n\t\t\t<\/div>\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t<?php esc_html_e( 'URL Hits', 'rank-math' ); ?>\n\t\t\t\t\t<span class=\"rank-math-tooltip\"><em class=\"dashicons-before dashicons-editor-help\"><\/em><span><?php esc_html_e( 'Total number visits received on all the 404 pages.', 'rank-math' ); ?><\/span><\/span>\n\t\t\t\t<\/h4>\n\t\t\t\t<strong class=\"text-large\"><?php echo esc_html( Str::human_number( $data->hits ) ); ?><\/strong>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Add admin bar item.\n\t *\n\t * @param Admin_Bar_Menu $menu Menu class instance.\n\t *\/\n\tpublic function admin_bar_items( $menu ) {\n\t\t$menu->add_sub_menu(\n\t\t\t'404-monitor',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( '404 Monitor', 'rank-math' ),\n\t\t\t\t'href'     => Helper::get_admin_url( '404-monitor' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Review 404 errors on your site', 'rank-math' ) ],\n\t\t\t\t'priority' => 50,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Delete a log item.\n\t *\/\n\tpublic function delete_log() {\n\n\t\tcheck_ajax_referer( '404_delete_log', 'security' );\n\n\t\t$this->has_cap_ajax( '404_monitor' );\n\n\t\t$id = Param::request( 'log' );\n\t\tif ( ! $id ) {\n\t\t\t$this->error( esc_html__( 'No valid id found.', 'rank-math' ) );\n\t\t}\n\n\t\tDB::delete_log( $id );\n\t\t$this->success( esc_html__( 'Log item successfully deleted.', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Log the request details when is_404() is true and WP's response code is *not* 410 or 451.\n\t *\/\n\tpublic function capture_404() {\n\t\tif ( ! is_404() || in_array( http_response_code(), [ 410, 451 ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$uri = untrailingslashit( Helper::get_current_page_url( Helper::get_settings( 'general.404_monitor_ignore_query_parameters' ) ) );\n\t\t$uri = preg_replace( '\/(?<=\\\/)(https?:\\\/[^\\s]*)\/i', '', $uri );\n\t\t$uri = str_replace( Helper::get_home_url( '\/' ), '', $uri );\n\t\tif ( ! $uri ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check if excluded.\n\t\tif ( $this->is_url_excluded( $uri ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Mode = simple.\n\t\tif ( 'simple' === Helper::get_settings( 'general.404_monitor_mode' ) ) {\n\t\t\tDB::update( [ 'uri' => $uri ] );\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Mode = advanced.\n\t\tDB::add(\n\t\t\t[\n\t\t\t\t'uri'        => $uri,\n\t\t\t\t'referer'    => Param::server( 'HTTP_REFERER', '' ),\n\t\t\t\t'user_agent' => $this->get_user_agent(),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Check if given URL is excluded.\n\t *\n\t * @param string $uri The URL to check for exclusion.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_url_excluded( $uri ) {\n\t\t$excludes = Helper::get_settings( 'general.404_monitor_exclude' );\n\t\tif ( ! is_array( $excludes ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( $excludes as $rule ) {\n\t\t\t$rule['exclude'] = empty( $rule['exclude'] ) ? '' : $this->sanitize_exclude_pattern( $rule['exclude'], $rule['comparison'] );\n\n\t\t\tif ( ! empty( $rule['exclude'] ) && Str::comparison( $rule['exclude'], $uri, $rule['comparison'] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if regex pattern has delimiters or not, and add them if not.\n\t *\n\t * @param string $pattern The pattern to check.\n\t * @param string $comparison The comparison type.\n\t *\n\t * @return string\n\t *\/\n\tprivate function sanitize_exclude_pattern( $pattern, $comparison ) {\n\t\tif ( 'regex' !== $comparison ) {\n\t\t\treturn $pattern;\n\t\t}\n\n\t\tif ( preg_match( '[^(?:([^a-zA-Z0-9\\\\\\\\]).*\\\\1|\\\\(.*\\\\)|\\\\{.*\\\\}|\\\\[.*\\\\]|<.*>)[imsxADSUXJu]*$]', $pattern ) ) {\n\t\t\treturn $pattern;\n\t\t}\n\n\t\treturn '[' . addslashes( $pattern ) . ']';\n\t}\n\n\t\/**\n\t * Get user-agent header.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_user_agent() {\n\t\t$u_agent = Param::server( 'HTTP_USER_AGENT' );\n\t\tif ( empty( $u_agent ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$parsed  = $this->parse_user_agent( $u_agent );\n\t\t$nice_ua = '';\n\t\tif ( ! empty( $parsed['browser'] ) ) {\n\t\t\t$nice_ua .= $parsed['browser'];\n\t\t}\n\t\tif ( ! empty( $parsed['version'] ) ) {\n\t\t\t$nice_ua .= ' ' . $parsed['version'];\n\t\t}\n\n\t\treturn $nice_ua . ' | ' . $u_agent;\n\t}\n\n\t\/**\n\t * Parses a user-agent string into its parts.\n\t *\n\t * @link https:\/\/github.com\/donatj\/PhpUserAgent\n\t *\n\t * @param string $u_agent User agent string to parse or null. Uses $_SERVER['HTTP_USER_AGENT'] on NULL.\n\t *\n\t * @return string[] an array with browser, version and platform keys\n\t *\/\n\tprivate function parse_user_agent( $u_agent ) {\n\t\tif ( ! $u_agent ) {\n\t\t\treturn [\n\t\t\t\t'platform' => null,\n\t\t\t\t'browser'  => null,\n\t\t\t\t'version'  => null,\n\t\t\t];\n\t\t}\n\n\t\t$parser = new UserAgentParser();\n\t\t$agent  = $parser->parse( $u_agent );\n\n\t\treturn [\n\t\t\t'platform' => $agent->platform(),\n\t\t\t'browser'  => $agent->browser(),\n\t\t\t'version'  => $agent->browserVersion(),\n\t\t];\n\t}\n\n\t\/**\n\t * Function to get the hook name depending on the theme.\n\t *\n\t * @return string WP hook.\n\t *\/\n\tprivate function get_hook() {\n\t\t$hook = defined( 'CT_VERSION' ) ?\n\t\t\t'oxygen_enqueue_frontend_scripts' :\n\t\t\t(\n\t\t\t\tfunction_exists( 'wp_is_block_theme' ) && wp_is_block_theme() ?\n\t\t\t\t'wp_head' :\n\t\t\t\t'get_header'\n\t\t\t);\n\n\t\t\/**\n\t\t * Allow developers to change the action hook that will trigger the 404 capture.\n\t\t*\/\n\t\treturn $this->do_filter( '404_monitor\/hook', $hook );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/404-monitor\/class-db.php","ext":"php","size":3696,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The database operations for the 404 Monitor module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Monitor\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Monitor;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * DB class.\n *\/\nclass DB {\n\n\t\/**\n\t * Get query builder.\n\t *\n\t * @return Query_Builder\n\t *\/\n\tprivate static function table() {\n\t\treturn Database::table( 'rank_math_404_logs' );\n\t}\n\n\t\/**\n\t * Get error log items.\n\t *\n\t * @param array $args Array of arguments.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_logs( $args ) {\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'orderby' => 'id',\n\t\t\t\t'order'   => 'DESC',\n\t\t\t\t'limit'   => 10,\n\t\t\t\t'paged'   => 1,\n\t\t\t\t'search'  => '',\n\t\t\t\t'ids'     => [],\n\t\t\t\t'uri'     => '',\n\t\t\t]\n\t\t);\n\n\t\t$args = apply_filters( 'rank_math\/404_monitor\/get_logs_args', $args );\n\n\t\t$table = self::table()->found_rows()->page( $args['paged'] - 1, $args['limit'] );\n\n\t\tif ( ! empty( $args['search'] ) ) {\n\t\t\t$table->whereLike( 'uri', rawurlencode( $args['search'] ) );\n\t\t}\n\n\t\tif ( ! empty( $args['ids'] ) ) {\n\t\t\t$table->whereIn( 'id', (array) $args['ids'] );\n\t\t}\n\n\t\tif ( ! empty( $args['uri'] ) ) {\n\t\t\t$table->where( 'uri', $args['uri'] );\n\t\t}\n\n\t\tif ( ! empty( $args['orderby'] ) && in_array( $args['orderby'], [ 'id', 'uri', 'accessed', 'times_accessed' ], true ) ) {\n\t\t\t$table->orderBy( $args['orderby'], $args['order'] );\n\t\t}\n\n\t\treturn [\n\t\t\t'logs'  => $table->get( ARRAY_A ),\n\t\t\t'count' => $table->get_found_rows(),\n\t\t];\n\t}\n\n\t\/**\n\t * Add a record.\n\t *\n\t * @param array $args Values to insert.\n\t *\/\n\tpublic static function add( $args ) {\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'uri'            => '',\n\t\t\t\t'accessed'       => current_time( 'mysql' ),\n\t\t\t\t'times_accessed' => '1',\n\t\t\t\t'referer'        => '',\n\t\t\t\t'user_agent'     => '',\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Maybe delete logs if record exceed defined limit.\n\t\t$limit = absint( Helper::get_settings( 'general.404_monitor_limit' ) );\n\t\tif ( $limit && self::get_count() >= $limit ) {\n\t\t\tself::clear_logs();\n\t\t}\n\n\t\treturn self::table()->insert( $args, [ '%s', '%s', '%d', '%s', '%s', '%s' ] );\n\t}\n\n\t\/**\n\t * Update a record.\n\t *\n\t * @param array $args Values to update.\n\t *\/\n\tpublic static function update( $args ) {\n\t\t$row = self::table()->where( 'uri', $args['uri'] )->one( ARRAY_A );\n\n\t\tif ( $row ) {\n\t\t\treturn self::update_counter( $row );\n\t\t}\n\n\t\treturn self::add( $args );\n\t}\n\n\t\/**\n\t * Delete a record.\n\t *\n\t * @param array $ids Array of IDs to delete.\n\t *\n\t * @return int Number of records deleted.\n\t *\/\n\tpublic static function delete_log( $ids ) {\n\t\treturn self::table()->whereIn( 'id', (array) $ids )->delete();\n\t}\n\n\t\/**\n\t * Get total number of log items (number of rows in the DB table).\n\t *\n\t * @return int\n\t *\/\n\tpublic static function get_count() {\n\t\treturn self::table()->selectCount()->getVar();\n\t}\n\n\t\/**\n\t * Clear logs completely.\n\t *\n\t * @return int\n\t *\/\n\tpublic static function clear_logs() {\n\t\treturn self::table()->truncate();\n\t}\n\n\t\/**\n\t * Get stats for dashboard widget.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_stats() {\n\t\treturn self::table()->selectCount( '*', 'total' )->selectSum( 'times_accessed', 'hits' )->one();\n\t}\n\n\t\/**\n\t * Update if URL is matched and hit.\n\t *\n\t * @param object $row Record to update.\n\t *\n\t * @return int|false The number of rows updated, or false on error.\n\t *\/\n\tprivate static function update_counter( $row ) {\n\t\t$update_data = [\n\t\t\t'accessed'       => current_time( 'mysql' ),\n\t\t\t'times_accessed' => absint( $row['times_accessed'] ) + 1,\n\t\t];\n\n\t\treturn self::table()->set( $update_data )->where( 'id', absint( $row['id'] ) )->update();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-wc-vars.php","ext":"php","size":3428,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Register additional variables for WooCommerce.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WC Variables class.\n *\/\nclass WC_Vars extends Opengraph {\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rank_math\/vars\/register_extra_replacements', 'register' );\n\t}\n\n\t\/**\n\t * Registers variable replacements for WooCommerce products.\n\t *\/\n\tpublic function register() {\n\t\trank_math_register_var_replacement(\n\t\t\t'wc_price',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Product\\'s price.', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Product\\'s price of the current product', 'rank-math' ),\n\t\t\t\t'variable'    => 'wc_price',\n\t\t\t\t'example'     => $this->get_product_price(),\n\t\t\t],\n\t\t\t[ $this, 'get_product_price' ]\n\t\t);\n\n\t\trank_math_register_var_replacement(\n\t\t\t'wc_sku',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Product\\'s SKU.', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Product\\'s SKU of the current product', 'rank-math' ),\n\t\t\t\t'variable'    => 'wc_sku',\n\t\t\t\t'example'     => $this->get_product_sku(),\n\t\t\t],\n\t\t\t[ $this, 'get_product_sku' ]\n\t\t);\n\n\t\trank_math_register_var_replacement(\n\t\t\t'wc_shortdesc',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Product\\'s short description.', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Product\\'s short description of the current product', 'rank-math' ),\n\t\t\t\t'variable'    => 'wc_shortdesc',\n\t\t\t\t'example'     => $this->get_short_description(),\n\t\t\t],\n\t\t\t[ $this, 'get_short_description' ]\n\t\t);\n\n\t\trank_math_register_var_replacement(\n\t\t\t'wc_brand',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Product\\'s brand.', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Product\\'s brand of the current product', 'rank-math' ),\n\t\t\t\t'variable'    => 'wc_brand',\n\t\t\t\t'example'     => $this->get_product_brand(),\n\t\t\t],\n\t\t\t[ $this, 'get_product_brand' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieves the product price.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_product_price() {\n\t\t$product = $this->get_product();\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( method_exists( $product, 'get_price' ) ) {\n\t\t\treturn wp_strip_all_tags( wc_price( $product->get_price() ), true );\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the product SKU.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_product_sku() {\n\t\t$product = $this->get_product();\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( method_exists( $product, 'get_sku' ) ) {\n\t\t\treturn $product->get_sku();\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Checks if product class has a short description method.\n\t * Otherwise it returns the value of the post_excerpt from the post attribute.\n\t *\n\t * @param WC_Product $product The product.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_short_description( $product = null ) {\n\t\tif ( empty( $product ) ) {\n\t\t\t$product = $this->get_product();\n\t\t}\n\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( method_exists( $product, 'get_short_description' ) ) {\n\t\t\treturn $product->get_short_description();\n\t\t}\n\n\t\treturn $product->post->post_excerpt;\n\t}\n\n\t\/**\n\t * Retrieves the product brand.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_product_brand() {\n\t\t$product = $this->get_product();\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $this->get_brands( $product->get_id() );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/assets\/js\/woocommerce.js","ext":"js","size":6963,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var e={n:function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,{a:r}),r},d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}},t=jQuery,r=e.n(t),n=lodash,i=wp.hooks,o=wp.data;function c(e){return c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},c(e)}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if(\"object\"!==c(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!==c(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===c(t)?t:String(t)}var s=new(function(){function e(){var t,r,n;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),t=this,n=null,(r=u(r=\"map\"))in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n}var t,n,i;return t=e,(n=[{key:\"swap\",value:function(e,t){var r=this;if(!(e=e||\"\"))return\"\";var n=new RegExp(\/%(([a-z0-9_-]+)\\(([^)]*)\\)|[^\\s]+)%\/,\"giu\");return e.replace(\" %page%\",\"\").replace(\"%sep% %sep%\",\"%sep%\").replace(n,(function(e){return r.replace(t,e)})).trim()}},{key:\"replace\",value:function(e,t){var n=t.toLowerCase().slice(1,-1);return[\"term_description\",\"user_description\"].includes(n)?\"undefined\"!=typeof tinymce&&void 0!==tinymce.editors.rank_math_description_editor?tinymce.editors.rank_math_description_editor.getContent():r()(\"#description\").val():n.includes(\"customfield(\")?(n=n.replace(\"customfield(\",\"\").replace(\")\",\"\"))in rankMath.customFields?rankMath.customFields[n]:\"\":(e=e||this.getMap(),(n=\"seo_description\"===(n=\"seo_title\"===(n=n.includes(\"(\")?n.split(\"(\")[0]:n)?\"title\":n)?\"excerpt\":n)in e?e[n]:\"\")}},{key:\"getMap\",value:function(){var e=this;return null!==this.map||(this.map={},r().each(rankMath.variables,(function(t,r){t=t.toLowerCase().replace(\/%+\/g,\"\").split(\"(\")[0],e.map[t]=r.example}))),this.map}},{key:\"setVariable\",value:function(e,t){null!==this.map?this.map[e]=t:void 0!==rankMath.variables[e]&&(rankMath.variables[e].example=t)}}])&&a(t.prototype,n),i&&a(t,i),Object.defineProperty(t,\"prototype\",{writable:!1}),e}()),l=function(){return!((0,n.isNil)(window.wp)||(0,n.isNil)(wp.data)||(0,n.isNil)(wp.data.select(\"core\/editor\"))||!window.document.body.classList.contains(\"block-editor-page\")||!(0,n.isFunction)(wp.data.select(\"core\/editor\").getEditedPostAttribute))};function p(e){return p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},p(e)}function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function f(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(Object(r),!0).forEach((function(t){d(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t,r){return(t=h(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function y(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function h(e){var t=function(e,t){if(\"object\"!==p(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||\"default\");if(\"object\"!==p(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===p(t)?t:String(t)}var b=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.excerpt=r()(\"#excerpt\"),this.elemPrice=r()(\"#_sale_price\"),this.elemRegPrice=r()(\"#_regular_price\"),this._data={excerpt:!1},this.refreshWCPrice=this.refreshWCPrice.bind(this),this.events=this.events.bind(this),this.ensureIframe=this.ensureIframe.bind(this),this.events(),this.hooks()}var t,c,a;return t=e,(c=[{key:\"hooks\",value:function(){void 0!==this.excerpt&&((0,i.addFilter)(\"rank_math_content\",\"rank-math\",this.getContent.bind(this),11),(0,i.addFilter)(\"rank_math_dataCollector_data\",\"rank-math\",this.syncExcerpt.bind(this),11))}},{key:\"getContent\",value:function(e){return e+=\"undefined\"!=typeof tinymce&&tinymce.activeEditor&&\"excerpt\"===tinymce.activeEditor.id?tinymce.activeEditor.getContent():this.excerpt.val()}},{key:\"syncExcerpt\",value:function(e){return(0,n.has)(e,\"excerpt\")&&!1!==this._data.excerpt?f(f({},e),{},{excerpt:this._data.excerpt}):e}},{key:\"events\",value:function(){var e=this;\"undefined\"!=typeof tinymce&&tinymce.activeEditor&&void 0!==tinymce.editors.excerpt&&tinymce.editors.excerpt.on(\"keyup change\",(0,n.debounce)((function(){rankMathEditor.refresh(\"content\")}),500)),tinymce.on(\"AddEditor\",this.ensureIframe),this.debounceWCPrice=(0,n.debounce)(this.refreshWCPrice,500),this.elemPrice.on(\"input\",this.debounceWCPrice),this.elemRegPrice.on(\"input\",this.debounceWCPrice),this.ensureIframe(),l()&&this.excerpt.on(\"input\",(0,n.debounce)((function(t){e._data.excerpt=t.currentTarget.value,(0,o.dispatch)(\"rank-math\").updateSerpDescription(e._data.excerpt)}),500))}},{key:\"refreshWCPrice\",value:function(){s.setVariable(\"wc_price\",this.getWooCommerceProductPrice()),(0,i.doAction)(\"rank_math_update_description_preview\")}},{key:\"getWooCommerceProductPrice\",value:function(){var e=this.elemPrice.val()?this.elemPrice.val():this.elemRegPrice.val();return accounting.formatMoney(e,{symbol:woocommerce_admin_meta_boxes.currency_format_symbol,decimal:woocommerce_admin_meta_boxes.currency_format_decimal_sep,thousand:woocommerce_admin_meta_boxes.currency_format_thousand_sep,precision:woocommerce_admin_meta_boxes.currency_format_num_decimals,format:woocommerce_admin_meta_boxes.currency_format})}},{key:\"ensureIframe\",value:function(){var e=this;tinymce.editors&&!(0,n.isUndefined)(tinymce.editors.excerpt)&&tinymce.editors.excerpt.on(\"keyup change\",(0,n.debounce)((function(){e._data.excerpt=tinymce.get(\"excerpt\").getContent(),(0,o.dispatch)(\"rank-math\").updateSerpDescription(e._data.excerpt)}),500))}}])&&y(t.prototype,c),a&&y(t,a),Object.defineProperty(t,\"prototype\",{writable:!1}),e}();r()((function(){new b}))}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-base.php","ext":"php","size":1733,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Module Base Class\n *\n * ALl the classes inherit from this class\n *\n * @since      1.0.238\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Base class.\n *\n * This is the parent class for all WooCommerce-related functionality\n * in the RankMath plugin. It contains common methods and utilities\n * that are shared across the WooCommerce module.\n *\/\nclass Base {\n\n\t\/**\n\t * Holds the product object.\n\t *\n\t * @var WC_Product\n\t *\/\n\tprivate $product = null;\n\n\t\/**\n\t * Returns the product object when the current page is the product page.\n\t *\n\t * @return null|WC_Product\n\t *\/\n\tpublic function get_product() {\n\t\tif ( ! is_null( $this->product ) ) {\n\t\t\treturn $this->product;\n\t\t}\n\n\t\t$product_id    = Param::get( 'post', get_queried_object_id(), FILTER_VALIDATE_INT );\n\t\t$this->product = (\n\t\t\t! function_exists( 'wc_get_product' ) ||\n\t\t\t! $product_id ||\n\t\t\t(\n\t\t\t\t! is_admin() &&\n\t\t\t\t! is_singular( 'product' )\n\t\t\t)\n\t\t) ? null : wc_get_product( $product_id );\n\n\t\treturn $this->product;\n\t}\n\n\t\/**\n\t * Returns the array of brand taxonomy.\n\t *\n\t * @param int $product_id The id to get the product brands for.\n\t *\n\t * @return bool|array\n\t *\/\n\tpublic static function get_brands( $product_id ) {\n\t\t$brand    = '';\n\t\t$taxonomy = Helper::get_settings( 'general.product_brand' );\n\t\tif ( $taxonomy && taxonomy_exists( $taxonomy ) ) {\n\t\t\t$brands = get_the_terms( $product_id, $taxonomy );\n\t\t\t$brand  = is_wp_error( $brands ) || empty( $brands[0] ) ? '' : $brands[0]->name;\n\t\t}\n\n\t\treturn apply_filters( 'rank_math\/woocommerce\/product_brand', $brand );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-admin.php","ext":"php","size":2662,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WooCommerce module - admin side functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Module\\Base;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Arr;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin extends Base {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'        => 'woocommerce',\n\t\t\t\t'directory' => $directory,\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\t\/\/ Permalink Manager.\n\t\t$this->filter( 'rank_math\/settings\/general', 'add_general_settings' );\n\t\t$this->filter( 'rank_math\/flush_fields', 'flush_fields' );\n\n\t\t$this->action( 'rank_math\/admin\/editor_scripts', 'enqueue' );\n\t}\n\n\t\/**\n\t * Enqueue script to analyze product's short description.\n\t *\/\n\tpublic function enqueue() {\n\t\t$screen = get_current_screen();\n\t\tif ( ! Admin_Helper::is_post_edit() || 'product' !== $screen->post_type || ! $this->do_filter( 'woocommerce\/analyze_short_description', true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_enqueue_script( 'rank-math-description-analysis', rank_math()->plugin_url() . 'includes\/modules\/woocommerce\/assets\/js\/woocommerce.js', [ 'rank-math-editor' ], rank_math()->version, true );\n\t}\n\n\t\/**\n\t * Add module settings into general optional panel.\n\t *\n\t * @param array $tabs Array of option panel tabs.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_general_settings( $tabs ) {\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'woocommerce' => [\n\t\t\t\t\t'icon'  => 'rm-icon rm-icon-cart',\n\t\t\t\t\t'title' => esc_html__( 'WooCommerce', 'rank-math' ),\n\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t'desc'  => sprintf( esc_html__( 'Choose how you want Rank Math to handle your WooCommerce SEO. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'woocommerce-settings', 'Options Panel WooCommerce Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'  => $this->directory . '\/views\/options-general.php',\n\t\t\t\t\t'json'  => [\n\t\t\t\t\t\t'brandTaxonomies' => Helper::get_object_taxonomies( 'product', 'choices', false ),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t7\n\t\t);\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Fields after updation of which we need to flush rewrite rules.\n\t *\n\t * @param array $fields Fields to flush rewrite rules on.\n\t *\n\t * @return array\n\t *\/\n\tpublic function flush_fields( $fields ) {\n\t\t$fields[] = 'wc_remove_product_base';\n\t\t$fields[] = 'wc_remove_category_base';\n\t\t$fields[] = 'wc_remove_category_parent_slugs';\n\n\t\treturn $fields;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-woocommerce.php","ext":"php","size":5467,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WooCommerce module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WooCommerce class.\n *\/\nclass WooCommerce extends WC_Vars {\n\n\tuse Hooker;\n\n\t\/**\n\t * Remove product base.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $remove_product_base;\n\n\t\/**\n\t * Remove category base.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $remove_category_base;\n\n\t\/**\n\t * Remove parent slugs.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $remove_parent_slugs;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->remove_product_base  = Helper::get_settings( 'general.wc_remove_product_base' );\n\t\t$this->remove_category_base = Helper::get_settings( 'general.wc_remove_category_base' );\n\t\t$this->remove_parent_slugs  = Helper::get_settings( 'general.wc_remove_category_parent_slugs' );\n\n\t\tif ( is_admin() ) {\n\t\t\tnew Admin();\n\t\t}\n\n\t\t$this->integrations();\n\n\t\tif ( $this->remove_product_base || $this->remove_category_base ) {\n\t\t\tnew Product_Redirection();\n\t\t}\n\n\t\tnew Permalink_Watcher();\n\t\tparent::__construct();\n\t}\n\n\t\/**\n\t * Initialize integrations.\n\t *\/\n\tpublic function integrations() {\n\t\tif ( is_admin() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Permalink Manager.\n\t\tif ( $this->remove_product_base ) {\n\t\t\t$this->action( 'request', 'request', 11 );\n\t\t}\n\n\t\tif ( Helper::get_settings( 'general.wc_remove_generator' ) ) {\n\t\t\tremove_action( 'get_the_generator_html', 'wc_generator_tag', 10 );\n\t\t\tremove_action( 'get_the_generator_xhtml', 'wc_generator_tag', 10 );\n\t\t}\n\n\t\t$this->sitemap();\n\t\t$this->opengraph();\n\t\t$this->filter( 'rank_math\/frontend\/description', 'metadesc' );\n\t\t$this->filter( 'rank_math\/frontend\/robots', 'robots' );\n\t}\n\n\t\/**\n\t * Replace request if product was found.\n\t *\n\t * @param array $request Current request.\n\t *\n\t * @return array\n\t *\/\n\tpublic function request( $request ) {\n\t\tglobal $wp, $wpdb;\n\t\t$url = $wp->request;\n\n\t\tif ( empty( $url ) ) {\n\t\t\treturn $request;\n\t\t}\n\n\t\t$replace = [];\n\t\t$url     = explode( '\/', $url );\n\t\t$slug    = array_pop( $url );\n\n\t\tif ( 'feed' === $slug ) {\n\t\t\t$replace['feed'] = $slug;\n\t\t\t$slug            = array_pop( $url );\n\t\t}\n\n\t\tif ( 'amp' === $slug ) {\n\t\t\t$replace['amp'] = $slug;\n\t\t\t$slug           = array_pop( $url );\n\t\t}\n\n\t\tif ( ! empty( $slug ) && 0 === strpos( $slug, 'comment-page-' ) ) {\n\t\t\t$replace['cpage'] = substr( $slug, strlen( 'comment-page-' ) );\n\t\t\t$slug             = array_pop( $url );\n\t\t}\n\n\t\tif ( ! empty( $slug ) && 0 === strpos( $slug, 'schema-preview' ) ) {\n\t\t\t$replace['schema-preview'] = '';\n\t\t\t$slug                      = array_pop( $url );\n\t\t}\n\n\t\t$query = \"SELECT COUNT(ID) as count_id FROM {$wpdb->posts} WHERE post_name = %s AND post_type = %s\";\n\t\t$num   = intval( DB_Helper::get_var( $wpdb->prepare( $query, [ $slug, 'product' ] ) ) );\n\t\tif ( $num > 0 ) {\n\t\t\t$replace['page']      = '';\n\t\t\t$replace['name']      = $slug;\n\t\t\t$replace['product']   = $slug;\n\t\t\t$replace['post_type'] = 'product';\n\n\t\t\treturn $replace;\n\t\t}\n\n\t\treturn $request;\n\t}\n\n\t\/**\n\t * Change robots for WooCommerce pages according to the settings.\n\t *\n\t * @param array $robots Array of robots to sanitize.\n\t *\n\t * @return array Modified robots.\n\t *\/\n\tpublic function robots( $robots ) {\n\n\t\t\/\/ Early Bail if current page is Woocommerce OnePage Checkout.\n\t\tif ( function_exists( 'is_wcopc_checkout' ) && is_wcopc_checkout() ) {\n\t\t\treturn $robots;\n\t\t}\n\n\t\tif ( is_cart() || is_checkout() || is_account_page() ) {\n\t\t\tremove_action( 'wp_head', 'wc_page_noindex' );\n\t\t\treturn [\n\t\t\t\t'index'  => 'noindex',\n\t\t\t\t'follow' => 'follow',\n\t\t\t];\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Returns the meta description. Checks which value should be used when the given meta description is empty.\n\t *\n\t * It will use the short_description if that one is set. Otherwise it will use the full\n\t * product description limited to 156 characters. If everything is empty, it will return an empty string.\n\t *\n\t * @param string $metadesc The meta description to check.\n\t *\n\t * @return string The meta description.\n\t *\/\n\tpublic function metadesc( $metadesc ) {\n\t\tif ( '' !== $metadesc || ! is_singular( 'product' ) ) {\n\t\t\treturn $metadesc;\n\t\t}\n\n\t\t$product = $this->get_product_by_id( get_the_id() );\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$short_desc = $this->get_short_description( $product );\n\t\tif ( '' !== $short_desc ) {\n\t\t\treturn $short_desc;\n\t\t}\n\n\t\t$long_desc = $this->get_long_description( $product );\n\t\treturn '' !== $long_desc ? Str::truncate( $long_desc, 156 ) : '';\n\t}\n\n\t\/**\n\t * Returns the product for given product_id.\n\t *\n\t * @param int $product_id The id to get the product for.\n\t *\n\t * @return null|WC_Product\n\t *\/\n\tprotected function get_product_by_id( $product_id ) {\n\t\tif ( function_exists( 'wc_get_product' ) ) {\n\t\t\treturn wc_get_product( $product_id );\n\t\t}\n\n\t\tif ( function_exists( 'get_product' ) ) {\n\t\t\treturn get_product( $product_id );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Checks if product class has a description method.\n\t * Otherwise it returns the value of the post_content.\n\t *\n\t * @param WC_Product $product The product.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_long_description( $product ) {\n\t\tif ( method_exists( $product, 'get_description' ) ) {\n\t\t\treturn $product->get_description();\n\t\t}\n\n\t\treturn $product->post->post_content;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-product-redirection.php","ext":"php","size":5184,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WooCommerce module's product redirection features.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Sitepress;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Redirections\\Redirection;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WooCommerce class.\n *\/\nclass Product_Redirection {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_module_active( 'redirections' ) ) {\n\t\t\t$this->filter( 'rank_math\/redirection\/pre_search', 'pre_redirection', 10, 3 );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'wp', 'redirect' );\n\t}\n\n\t\/**\n\t * Pre-filter the redirection.\n\t *\n\t * @param string $check Check.\n\t *\n\t * @return string|array\n\t *\/\n\tpublic function pre_redirection( $check ) {\n\t\tif ( $new_link = $this->get_redirection_url() ) { \/\/ phpcs:ignore\n\t\t\treturn [\n\t\t\t\t'url_to'      => $new_link,\n\t\t\t\t'header_code' => 301,\n\t\t\t];\n\t\t}\n\n\t\treturn $check;\n\t}\n\n\t\/**\n\t * Redirect product with base to the new link.\n\t *\/\n\tpublic function redirect() {\n\t\tif ( $link = $this->get_redirection_url() ) { \/\/ phpcs:ignore\n\t\t\tHelper::redirect( $link, 301 );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Get Product URL.\n\t *\n\t * @return string Modified URL\n\t *\/\n\tprivate function get_redirection_url() {\n\t\tif ( ! $this->can_redirect() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$url                 = $this->get_source_url();\n\t\t$is_product          = is_product();\n\t\t$permalink_structure = wc_get_permalink_structure();\n\t\t$base                = $is_product ? $permalink_structure['product_base'] : $permalink_structure['category_base'];\n\n\t\t$base     = explode( '\/', ltrim( $base, '\/' ) );\n\t\t$new_link = $url;\n\n\t\t\/\/ Early Bail if new_link length is less then the base.\n\t\tif ( count( explode( '\/', $new_link ) ) <= count( $base ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ On Single product page redirect base with shop and product.\n\t\tif ( $is_product ) {\n\t\t\t$base[]   = 'product';\n\t\t\t$base[]   = 'shop';\n\t\t\t$new_link = $this->remove_base_from_url( $new_link );\n\t\t}\n\n\t\tforeach ( array_unique( $base ) as $remove ) {\n\t\t\tif ( '%product_cat%' === $remove ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$new_link = ! Str::starts_with( '\/', $new_link ) ? '\/' . $new_link : $new_link;\n\t\t\t$new_link = preg_replace( \"#\/{$remove}\/#i\", '', $new_link, 1 );\n\t\t}\n\n\t\t$new_link = implode( '\/', array_map( 'rawurlencode', explode( '\/', ltrim( $new_link, '\/' ) ) ) ); \/\/ encode everything but slashes.\n\n\t\treturn $new_link === $this->strip_ignored_parts( $url ) ? false : trailingslashit( home_url( strtolower( $new_link ) ) );\n\t}\n\n\t\/**\n\t * Remove all bases from the product link.\n\t *\n\t * @param  string $link Product link.\n\t * @return string Modified URL\n\t *\/\n\tprivate function remove_base_from_url( $link ) {\n\t\tif ( is_feed() ) {\n\t\t\treturn $link;\n\t\t}\n\n\t\tif ( Sitepress::get()->is_active() ) {\n\t\t\tglobal $sitepress_settings;\n\n\t\t\t\/\/ Early bail if auto-translation is enabled in WPML.\n\t\t\tif (\n\t\t\t\tisset( $sitepress_settings['custom_posts_sync_option'] ) &&\n\t\t\t\tisset( $sitepress_settings['custom_posts_sync_option']['product'] ) &&\n\t\t\t\t0 !== (int) $sitepress_settings['custom_posts_sync_option']['product']\n\t\t\t) {\n\t\t\t\treturn $link;\n\t\t\t}\n\t\t}\n\n\t\t$link = trim( str_replace( Helper::get_home_url(), '', get_permalink() ), '\/' );\n\n\t\treturn $link;\n\t}\n\n\t\/**\n\t * Get source URL.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_source_url() {\n\t\tglobal $wp;\n\t\t$url = defined( 'TRP_PLUGIN_DIR' ) ? $wp->request : Param::server( 'REQUEST_URI' );\n\t\t$url = str_replace( home_url( '\/' ), '', $url );\n\t\t$url = urldecode( $url );\n\t\t$url = trim( Redirection::strip_subdirectory( $url ), '\/' );\n\n\t\t$url = explode( '?', $url );\n\t\t$url = trim( $url[0], '\/' );\n\n\t\tif ( $this->is_amp_endpoint() ) {\n\t\t\t$url = \\str_replace( '\/' . \\amp_get_slug(), '', $url );\n\t\t}\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Is AMP url.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_amp_endpoint() {\n\t\treturn \\function_exists( 'is_amp_endpoint' ) && \\function_exists( 'amp_is_canonical' ) && is_amp_endpoint() && ! amp_is_canonical();\n\t}\n\n\t\/**\n\t * Remove unneeded parts from the URI.\n\t *\n\t * @param string $uri Original URI.\n\t *\n\t * @return string\n\t *\/\n\tprivate function strip_ignored_parts( $uri ) {\n\t\t$ignore_url_parts = [\n\t\t\t'#\/comment-page-([0-9]{1,})$#',\n\t\t];\n\n\t\t$ignore_url_parts = $this->do_filter( 'woocommerce\/product_redirection_ignore_url_parts', $ignore_url_parts );\n\t\tforeach ( $ignore_url_parts as $pattern ) {\n\t\t\t$uri = preg_replace( $pattern, '', $uri );\n\t\t}\n\n\t\treturn implode( '\/', array_map( 'rawurlencode', explode( '\/', $uri ) ) );\n\t}\n\n\t\/**\n\t * Can redirect to the new product link.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_redirect() {\n\t\tglobal $wp_query;\n\n\t\tif (\n\t\t\t$this->do_filter( 'woocommerce\/product_redirection', true ) &&\n\t\t\t! isset( $_GET['elementor-preview'] ) && \/\/ phpcs:ignore\n\t\t\t! isset( $wp_query->query_vars['schema-preview'] ) &&\n\t\t\t( ( Helper::get_settings( 'general.wc_remove_product_base' ) && is_product() ) ||\n\t\t\t( Helper::get_settings( 'general.wc_remove_category_base' ) && is_product_category() ) )\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/views\/options-general.php","ext":"php","size":2765,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * WooCommerce general settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'wc_remove_product_base',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Remove base', 'rank-math' ),\n\t\t'desc'    => sprintf(\n\t\t\t\/* translators: 1. Example text 2. Example text *\/\n\t\t\tesc_html__( 'Remove prefix like %1$s from product URL chosen at %2$s', 'rank-math' ),\n\t\t\t'<code>\/shop\/*<\/code>, <code>\/product\/*<\/code>',\n\t\t\t'<br \/><code>' . __( 'WordPress Dashboard > Settings > Permalinks > Product permalinks Example: default: \/product\/accessories\/action-figures\/acme\/ - becomes: \/accessories\/action-figures\/acme\/', 'rank-math' ) . '<\/code>'\n\t\t),\n\t\t'default' => 'off',\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'wc_remove_category_base',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Remove category base', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Remove prefix from category URL.', 'rank-math' ) .\n\t\t\t'<br><code>' . esc_html__( 'default: \/product-category\/accessories\/action-figures\/ - changed: \/accessories\/action-figures\/', 'rank-math' ) . '<\/code>',\n\t\t'default' => 'off',\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'wc_remove_category_parent_slugs',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( ' Remove parent slugs', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Remove parent slugs from category URL.', 'rank-math' ) .\n\t\t\t'<br><code>' . esc_html__( 'default: \/product-category\/accessories\/action-figures\/ - changed: \/product-category\/action-figures\/', 'rank-math' ) . '<\/code>',\n\t\t'default' => 'off',\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'wc_remove_generator',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Remove Generator Tag', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Remove WooCommerce generator tag from the source code.', 'rank-math' ),\n\t\t'default' => 'on',\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'remove_shop_snippet_data',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Remove Schema Markup on Shop Archives', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Remove Schema Markup Data from WooCommerce Shop archive pages.', 'rank-math' ),\n\t\t'default' => 'on',\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'product_brand',\n\t\t'type'    => 'select',\n\t\t'name'    => esc_html__( 'Brand', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Select Product Brand Taxonomy to use in Schema.org & OpenGraph markup.', 'rank-math' ),\n\t\t'options' => Helper::get_object_taxonomies( 'product', 'choices', false ),\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-opengraph.php","ext":"php","size":4003,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Add Open Graph data for the WooCommerce module.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\OpenGraph\\Image as OpenGraph_Image;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WC Opengraph class.\n *\/\nclass Opengraph extends Sitemap {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function opengraph() {\n\t\t$this->filter( 'language_attributes', 'og_product_namespace', 11 );\n\t\t$this->filter( 'rank_math\/opengraph\/desc', 'og_desc_product_taxonomy' );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'og_enhancement', 50 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook\/add_additional_images', 'set_opengraph_image' );\n\t}\n\n\t\/**\n\t * Add the OpenGraph namespace.\n\t *\n\t * @param string $output The original namespace.\n\t *\n\t * @return string\n\t *\/\n\tpublic function og_product_namespace( $output ) {\n\t\tif ( is_singular( 'product' ) ) {\n\t\t\t$output = preg_replace( '\/prefix=\"([^\"]+)\"\/', 'prefix=\"$1 product: https:\/\/ogp.me\/ns\/product#\"', $output );\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Make sure the OpenGraph description is put out.\n\t *\n\t * @param string $desc The current description, will be overwritten if we're on a product page.\n\t *\n\t * @return string\n\t *\/\n\tpublic function og_desc_product_taxonomy( $desc ) {\n\t\tif ( is_product_taxonomy() ) {\n\t\t\t$term_desc = term_description();\n\t\t\tif ( ! empty( $term_desc ) ) {\n\t\t\t\t$desc = wp_strip_all_tags( $term_desc, true );\n\t\t\t\t$desc = strip_shortcodes( $desc );\n\t\t\t}\n\t\t}\n\n\t\treturn $desc;\n\t}\n\n\t\/**\n\t * Adds the other product images to the OpenGraph output.\n\t *\n\t * @param OpenGraph $opengraph The current opengraph network object.\n\t *\/\n\tpublic function og_enhancement( $opengraph ) {\n\t\t$product = $this->get_product();\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$brand = WooCommerce::get_brands( get_the_ID() );\n\t\tif ( ! empty( $brand ) ) {\n\t\t\t$opengraph->tag( 'product:brand', $brand );\n\t\t}\n\n\t\t\/**\n\t\t * Allow developers to prevent the output of the price in the OpenGraph tags.\n\t\t *\n\t\t * @param bool unsigned Defaults to true.\n\t\t *\/\n\t\tif ( $this->do_filter( 'woocommerce\/og_price', ! $product->is_type( 'variable' ) ) ) {\n\t\t\t$opengraph->tag( 'product:price:amount', $product->get_price() );\n\t\t\t$opengraph->tag( 'product:price:currency', get_woocommerce_currency() );\n\t\t}\n\n\t\tif ( $product->is_in_stock() ) {\n\t\t\t$opengraph->tag( 'product:availability', 'instock' );\n\t\t}\n\t}\n\n\t\/**\n\t * Adds the opengraph images.\n\t *\n\t * @param OpenGraph_Image $opengraph_image The OpenGraph image to use.\n\t *\/\n\tpublic function set_opengraph_image( OpenGraph_Image $opengraph_image ) {\n\t\tif ( ! function_exists( 'is_product_category' ) || is_product_category() ) {\n\t\t\tglobal $wp_query;\n\t\t\t$cat          = $wp_query->get_queried_object();\n\t\t\t$thumbnail_id = get_term_meta( $cat->term_id, 'thumbnail_id', true );\n\t\t\t$opengraph_image->add_image_by_id( $thumbnail_id );\n\t\t}\n\n\t\t\/**\n\t\t * Passing a truthy value to the filter will effectively short-circuit the process of adding gallery images.\n\t\t *\n\t\t * @param bool $return Short-circuit return value. Either false or true.\n\t\t *\/\n\t\tif ( ! $this->do_filter( 'woocommerce\/opengraph\/add_gallery_images', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$product = $this->get_product();\n\t\tif ( ! is_object( $product ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->set_image_ids( $product, $opengraph_image );\n\t}\n\n\t\/**\n\t * Set images for the given product.\n\t *\n\t * @param WC_Product      $product         The product to get the image ids for.\n\t * @param OpenGraph_Image $opengraph_image The OpenGraph image to use.\n\t *\/\n\tprotected function set_image_ids( $product, $opengraph_image ) {\n\t\t$img_ids = method_exists( $product, 'get_gallery_image_ids' ) ?\n\t\t\t$product->get_gallery_image_ids() : $product->get_gallery_attachment_ids();\n\n\t\tif ( ! is_array( $img_ids ) || empty( $img_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $img_ids as $img_id ) {\n\t\t\t$opengraph_image->add_image_by_id( $img_id );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-sitemap.php","ext":"php","size":3667,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * WooCommerce product sitemaps adjustments.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Attachment;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WC Sitemap class.\n *\/\nclass Sitemap extends Base {\n\n\tuse Hooker;\n\n\t\/**\n\t * Register hooks.\n\t *\/\n\tpublic function sitemap() {\n\t\t$this->filter( 'rank_math\/sitemap\/exclude_post_type', 'sitemap_exclude_post_type', 10, 2 );\n\t\t$this->filter( 'rank_math\/sitemap\/post_type_archive_link', 'sitemap_taxonomies', 10, 2 );\n\t\t$this->filter( 'rank_math\/sitemap\/post_type_archive_link', 'sitemap_post_type_archive_link', 10, 2 );\n\t\t$this->filter( 'rank_math\/sitemap\/urlimages', 'add_product_images_to_xml_sitemap', 10, 2 );\n\t}\n\n\t\/**\n\t * Make sure product variations and shop coupons are not included in the XML sitemap.\n\t *\n\t * @param bool   $value     Whether or not to include this post type in the XML sitemap.\n\t * @param string $post_type The post type of the post.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function sitemap_exclude_post_type( $value, $post_type ) {\n\t\tif ( in_array( $post_type, [ 'product_variation', 'shop_coupon' ], true ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Make sure product attribute taxonomies are not included in the XML sitemap.\n\t *\n\t * @param bool   $value    Whether or not to include this post type in the XML sitemap.\n\t * @param string $taxonomy The taxonomy to check against.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function sitemap_taxonomies( $value, $taxonomy ) {\n\t\tif ( in_array( $taxonomy, [ 'product_type', 'product_shipping_class', 'shop_order_status' ], true ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( Str::starts_with( 'pa_', $taxonomy ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Filters the archive link on the product sitemap.\n\t *\n\t * @param string $link      The archive link.\n\t * @param string $post_type The post type to check against.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function sitemap_post_type_archive_link( $link, $post_type ) {\n\t\tif ( 'product' !== $post_type || ! function_exists( 'wc_get_page_id' ) ) {\n\t\t\treturn $link;\n\t\t}\n\n\t\t$shop_page_id = wc_get_page_id( 'shop' );\n\t\t$home_page_id = (int) get_option( 'page_on_front' );\n\t\tif ( 1 > $shop_page_id || 'publish' !== get_post_status( $shop_page_id ) || $home_page_id === $shop_page_id ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$robots = Helper::get_post_meta( 'robots', $shop_page_id );\n\t\tif ( ! empty( $robots ) && is_array( $robots ) && in_array( 'noindex', $robots, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t\/**\n\t * Add the product gallery images to the XML sitemap.\n\t *\n\t * @param array $images  The array of images for the post.\n\t * @param int   $post_id The ID of the post object.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_product_images_to_xml_sitemap( $images, $post_id ) {\n\t\tif ( metadata_exists( 'post', $post_id, '_product_image_gallery' ) ) {\n\t\t\t$product_gallery = get_post_meta( $post_id, '_product_image_gallery', true );\n\t\t\t$attachments     = array_filter( explode( ',', $product_gallery ) );\n\t\t\tforeach ( $attachments as $attachment_id ) {\n\t\t\t\t$image_src = wp_get_attachment_image_src( $attachment_id, 'full' );\n\t\t\t\tif ( empty( $image_src ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$image    = [\n\t\t\t\t\t'src'   => $this->do_filter( 'sitemap\/xml_img_src', $image_src[0], $post_id ),\n\t\t\t\t\t'title' => get_the_title( $attachment_id ),\n\t\t\t\t\t'alt'   => Attachment::get_alt_tag( $attachment_id ),\n\t\t\t\t];\n\t\t\t\t$images[] = $image;\n\n\t\t\t\tunset( $image, $image_src );\n\t\t\t}\n\t\t}\n\n\t\treturn $images;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/woocommerce\/class-permalink-watcher.php","ext":"php","size":7285,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The product permalink watcher class.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\WooCommerce\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\WooCommerce;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Sitepress;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Permalink_Watcher class.\n *\/\nclass Permalink_Watcher {\n\n\tuse Hooker;\n\n\t\/**\n\t * Hold product base.\n\t *\n\t * @var string\n\t *\/\n\tprivate $product_base;\n\n\t\/**\n\t * Hold product categories.\n\t *\n\t * @var array\n\t *\/\n\tprivate $categories;\n\n\t\/**\n\t * Remove product base.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $remove_product_base;\n\n\t\/**\n\t * Remove category base.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $remove_category_base;\n\n\t\/**\n\t * Remove parent slugs.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $remove_parent_slugs;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->remove_product_base  = Helper::get_settings( 'general.wc_remove_product_base' );\n\t\t$this->remove_category_base = Helper::get_settings( 'general.wc_remove_category_base' );\n\t\t$this->remove_parent_slugs  = Helper::get_settings( 'general.wc_remove_category_parent_slugs' );\n\n\t\tif ( $this->remove_product_base && ! (bool) Param::get( 'elementor-preview' ) ) {\n\t\t\t$this->filter( 'post_type_link', 'post_type_link', 1, 2 );\n\t\t}\n\n\t\tif ( $this->remove_category_base || $this->remove_parent_slugs ) {\n\t\t\t$this->action( 'created_product_cat', 'flush_rules' );\n\t\t\t$this->action( 'delete_product_cat', 'flush_rules' );\n\t\t\t$this->action( 'edited_product_cat', 'flush_rules' );\n\n\t\t\t$this->filter( 'term_link', 'term_link', 0, 3 );\n\t\t\t$this->filter( 'rewrite_rules_array', 'add_rewrite_rules', 99 );\n\t\t}\n\t}\n\n\t\/**\n\t * Flush rewrite rules (soft flush).\n\t *\n\t * @return void\n\t *\/\n\tpublic function flush_rules() {\n\t\tflush_rewrite_rules( false );\n\t}\n\n\t\/**\n\t * Replace product permalink according to settings.\n\t *\n\t * @param string  $permalink The existing permalink URL.\n\t * @param WP_Post $post WP_Post object.\n\t *\n\t * @return string\n\t *\/\n\tpublic function post_type_link( $permalink, $post ) {\n\t\tif ( $this->can_change_link( 'product', $post->post_type ) ) {\n\t\t\treturn $permalink;\n\t\t}\n\n\t\treturn str_replace( $this->get_product_base(), '\/', $permalink );\n\t}\n\n\t\/**\n\t * Replace category permalink according to settings.\n\t *\n\t * @param string $link     Term link URL.\n\t * @param object $term     Term object.\n\t * @param string $taxonomy Taxonomy slug.\n\t *\n\t * @return string\n\t *\/\n\tpublic function term_link( $link, $term, $taxonomy ) {\n\t\tif ( $this->can_change_link( 'product_cat', $taxonomy ) ) {\n\t\t\treturn $link;\n\t\t}\n\n\t\t$permalink_structure  = wc_get_permalink_structure();\n\t\t$category_base        = trailingslashit( $permalink_structure['category_rewrite_slug'] );\n\t\t$is_language_switcher = ( class_exists( 'Sitepress' ) && strpos( $link, 'lang=' ) );\n\n\t\tif ( $this->remove_category_base ) {\n\t\t\t$link          = str_replace( $category_base, '', $link );\n\t\t\t$category_base = '';\n\t\t}\n\n\t\tif ( $this->remove_parent_slugs && ! $is_language_switcher ) {\n\t\t\t$link = home_url( user_trailingslashit( $category_base . $term->slug ) );\n\t\t}\n\n\t\treturn $link;\n\t}\n\n\t\/**\n\t * Add rewrite rules.\n\t *\n\t * @param array $rules The compiled array of rewrite rules.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_rewrite_rules( $rules ) {\n\t\tglobal $wp_rewrite;\n\n\t\twp_cache_flush();\n\n\t\t\/**\n\t\t * Remove WPML filters while getting terms, to get all languages\n\t\t *\/\n\t\tSitepress::get()->remove_term_filters();\n\n\t\t$feed = '(' . trim( implode( '|', $wp_rewrite->feeds ) ) . ')';\n\n\t\t$permalink_structure = wc_get_permalink_structure();\n\t\t$category_base       = $this->remove_category_base ? '' : $permalink_structure['category_rewrite_slug'];\n\t\t$use_parent_slug     = Str::contains( '%product_cat%', $permalink_structure['product_rewrite_slug'] );\n\n\t\t$product_rules  = [];\n\t\t$category_rules = [];\n\t\tforeach ( $this->get_categories() as $category ) {\n\t\t\t$cat_path = $this->get_category_fullpath( $category );\n\t\t\t$cat_slug = $category_base . ( $this->remove_parent_slugs ? $category['slug'] : $cat_path );\n\t\t\t$cat_slug = urldecode( $cat_slug );\n\n\t\t\t$category_rules[ \"{$cat_slug}\/?\\$\" ]                                  = 'index.php?product_cat=' . $category['slug'];\n\t\t\t$category_rules[ \"{$cat_slug}\/embed\/?\\$\" ]                            = 'index.php?product_cat=' . $category['slug'] . '&embed=true';\n\t\t\t$category_rules[ \"{$cat_slug}\/{$wp_rewrite->feed_base}\/{$feed}\/?\\$\" ] = 'index.php?product_cat=' . $category['slug'] . '&feed=$matches[1]';\n\t\t\t$category_rules[ \"{$cat_slug}\/{$feed}\/?\\$\" ]                          = 'index.php?product_cat=' . $category['slug'] . '&feed=$matches[1]';\n\t\t\t$category_rules[ \"{$cat_slug}\/{$wp_rewrite->pagination_base}\/?([0-9]{1,})\/?\\$\" ] = 'index.php?product_cat=' . $category['slug'] . '&paged=$matches[1]';\n\n\t\t\tif ( $this->remove_product_base && $use_parent_slug ) {\n\t\t\t\t$cat_path                                   = urldecode( $cat_path );\n\t\t\t\t$product_rules[ $cat_path . '\/([^\/]+)\/?$' ] = 'index.php?product=$matches[1]';\n\t\t\t\t$product_rules[ $cat_path . '\/([^\/]+)\/' . $wp_rewrite->comments_pagination_base . '-([0-9]{1,})\/?$' ] = 'index.php?product=$matches[1]&cpage=$matches[2]';\n\t\t\t}\n\t\t}\n\n\t\t\/**\n\t\t * Register WPML filters back\n\t\t *\/\n\t\tSitepress::get()->restore_term_filters();\n\n\t\t$rules = empty( $rules ) ? [] : $rules;\n\t\treturn $category_rules + $product_rules + $rules;\n\t}\n\n\t\/**\n\t * Returns categories array.\n\t *\n\t * ['category id' => ['slug' => 'category slug', 'parent' => 'parent category id']]\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_categories() {\n\t\tif ( is_null( $this->categories ) ) {\n\t\t\t$categories = get_categories(\n\t\t\t\t[\n\t\t\t\t\t'taxonomy'   => 'product_cat',\n\t\t\t\t\t'hide_empty' => false,\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t$slugs = [];\n\t\t\tforeach ( $categories as $category ) {\n\t\t\t\t$slugs[ $category->term_id ] = [\n\t\t\t\t\t'parent' => $category->parent,\n\t\t\t\t\t'slug'   => $category->slug,\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$this->categories = $slugs;\n\t\t}\n\n\t\treturn $this->categories;\n\t}\n\n\t\/**\n\t * Recursively builds category full path.\n\t *\n\t * @param object $category Term object.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_category_fullpath( $category ) {\n\t\t$categories = $this->get_categories();\n\t\t$parent     = $category['parent'];\n\n\t\tif ( $parent > 0 && array_key_exists( $parent, $categories ) ) {\n\t\t\treturn $this->get_category_fullpath( $categories[ $parent ] ) . '\/' . $category['slug'];\n\t\t}\n\n\t\treturn $category['slug'];\n\t}\n\n\t\/**\n\t * Get product base.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_product_base() {\n\t\tif ( is_null( $this->product_base ) ) {\n\t\t\t$permalink_structure = wc_get_permalink_structure();\n\t\t\t$this->product_base  = $permalink_structure['product_rewrite_slug'];\n\t\t\tif ( strpos( $this->product_base, '%product_cat%' ) !== false ) {\n\t\t\t\t$this->product_base = str_replace( '%product_cat%', '', $this->product_base );\n\t\t\t}\n\t\t\t$this->product_base = '\/' . trim( $this->product_base, '\/' ) . '\/';\n\t\t}\n\n\t\treturn $this->product_base;\n\t}\n\n\t\/**\n\t * Check if the link can be changed or not.\n\t *\n\t * @param string $check   Check string.\n\t * @param string $against Against this.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_change_link( $check, $against ) {\n\t\treturn $check !== $against || ! get_option( 'permalink_structure' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/web-stories\/class-web-stories.php","ext":"php","size":2003,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Web Stories module.\n *\n * @since      1.0.45\n * @package    RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Web_Stories;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Web_Stories class.\n *\/\nclass Web_Stories {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'web_stories_story_head', 'remove_web_stories_meta_tags', 0 );\n\t\t$this->action( 'web_stories_story_head', 'add_rank_math_tags' );\n\t\t$this->action( 'rank_math\/json_ld', 'change_publisher_logo', 99, 2 );\n\t}\n\n\t\/**\n\t * Remove all meta tags added by the Web Stories plugin.\n\t *\/\n\tpublic function remove_web_stories_meta_tags() {\n\t\tadd_filter( 'web_stories_enable_metadata', '__return_false' );\n\t\tadd_filter( 'web_stories_enable_schemaorg_metadata', '__return_false' );\n\t\tadd_filter( 'web_stories_enable_open_graph_metadata', '__return_false' );\n\t\tadd_filter( 'web_stories_enable_twitter_metadata', '__return_false' );\n\t\tremove_action( 'web_stories_story_head', 'rel_canonical' );\n\t}\n\n\t\/**\n\t * Add Rank Math meta tags.\n\t *\/\n\tpublic function add_rank_math_tags() {\n\t\tdo_action( 'rank_math\/head' );\n\t}\n\n\t\/**\n\t * Change Publisher logo on Web Stories posts.\n\t *\n\t * @param array  $data    Array of JSON-LD data.\n\t * @param JsonLD $json_ld The JsonLD instance.\n\t *\n\t * @return array\n\t *\/\n\tpublic function change_publisher_logo( $data, $json_ld ) {\n\t\tif ( ! is_singular( 'web-story' ) || ! $json_ld->can_add_global_entities( $data ) || ! isset( $data['publisher'] ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\tglobal $post;\n\t\t$story = new \\Google\\Web_Stories\\Model\\Story();\n\t\t$story->load_from_post( $post );\n\n\t\t$url = $story->get_publisher_logo_url();\n\t\tif ( ! $url ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$size                      = $story->get_publisher_logo_size();\n\t\t$data['publisher']['logo'] = [\n\t\t\t'@type'  => 'ImageObject',\n\t\t\t'@id'    => home_url( '\/#logo' ),\n\t\t\t'url'    => $url,\n\t\t\t'width'  => $size[0],\n\t\t\t'height' => $size[1],\n\t\t];\n\n\t\treturn $data;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/web-stories\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/image-seo\/class-add-attributes.php","ext":"php","size":4156,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The class handles changes in image tag attributes.\n *\n * @since      1.0.15\n * @package    RankMath\n * @subpackage RankMath\\Image_Seo\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Image_Seo;\n\nuse stdClass;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\HTML;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Add Attributes class.\n *\/\nclass Add_Attributes {\n\n\tuse Hooker;\n\n\t\/**\n\t * Stores the image alt format if it is set.\n\t *\n\t * @var string|false\n\t *\/\n\tpublic $is_alt;\n\n\t\/**\n\t * Stores the image title format if it is set.\n\t *\n\t * @var string|false\n\t *\/\n\tpublic $is_title;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'wp', 'add_attributes', 9999 );\n\t\t$this->action( 'rest_api_init', 'add_attributes' );\n\t}\n\n\t\/**\n\t * Add nofollow, target, title and alt attributes to images.\n\t *\/\n\tpublic function add_attributes() {\n\t\t\/\/ Add image title and alt.\n\t\t$this->is_alt   = Helper::get_settings( 'general.add_img_alt' ) && Helper::get_settings( 'general.img_alt_format' ) ? trim( Helper::get_settings( 'general.img_alt_format' ) ) : false;\n\t\t$this->is_title = Helper::get_settings( 'general.add_img_title' ) && Helper::get_settings( 'general.img_title_format' ) ? trim( Helper::get_settings( 'general.img_title_format' ) ) : false;\n\n\t\tif ( $this->is_alt || $this->is_title ) {\n\t\t\t$this->filter( 'the_content', 'add_img_attributes', 11 );\n\t\t\t$this->filter( 'post_thumbnail_html', 'add_img_attributes', 11, 2 );\n\t\t\t$this->filter( 'woocommerce_single_product_image_thumbnail_html', 'add_img_attributes', 11 );\n\t\t}\n\t}\n\n\t\/**\n\t * Add 'title' and 'alt' attribute to image.\n\t *\n\t * @param string   $content Post content.\n\t * @param null|int $post_id The current post ID.\n\t * @return string\n\t *\/\n\tpublic function add_img_attributes( $content, $post_id = null ) {\n\t\tif ( empty( $content ) ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t$stripped_content = preg_replace( '@<(script|style)[^>]*?>.*?<\/\\\\1>@si', '', $content );\n\t\tpreg_match_all( '\/<img ([^>]+)\\\/?>\/iU', $stripped_content, $matches, PREG_SET_ORDER );\n\t\tif ( empty( $matches ) ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t$post = $this->get_post( $post_id );\n\t\tforeach ( $matches as $image ) {\n\t\t\t$is_dirty = false;\n\t\t\t$attrs    = HTML::extract_attributes( $image[0] );\n\n\t\t\tif ( ! isset( $attrs['src'] ) && ! isset( $attrs['data-ct-lazy'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$post->filename = isset( $attrs['data-ct-lazy'] ) ? $attrs['data-ct-lazy'] : $attrs['src'];\n\n\t\t\t\/\/ Lazy load support.\n\t\t\tif ( ! empty( $attrs['data-src'] ) ) {\n\t\t\t\t$post->filename = $attrs['data-src'];\n\t\t\t} elseif ( ! empty( $attrs['data-layzr'] ) ) {\n\t\t\t\t$post->filename = $attrs['data-layzr'];\n\t\t\t} elseif ( ! empty( $attrs['nitro-lazy-srcset'] ) ) {\n\t\t\t\t$post->filename = $attrs['nitro-lazy-srcset'];\n\t\t\t}\n\n\t\t\t\/\/ Pass attributes so they can be used later.\n\t\t\t$post->alttext   = isset( $attrs['alt'] ) ? $attrs['alt'] : '';\n\t\t\t$post->titletext = isset( $attrs['title'] ) ? $attrs['title'] : '';\n\n\t\t\t$this->set_image_attribute( $attrs, 'alt', $this->is_alt, $is_dirty, $post );\n\t\t\t$this->set_image_attribute( $attrs, 'title', $this->is_title, $is_dirty, $post );\n\n\t\t\tif ( $is_dirty ) {\n\t\t\t\t$new     = '<img' . HTML::attributes_to_string( $attrs ) . '>';\n\t\t\t\t$content = str_replace( $image[0], $new, $content );\n\t\t\t}\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t\/**\n\t * Get post object.\n\t *\n\t * @param null|int $post_id The post ID.\n\t * @return object\n\t *\/\n\tprivate function get_post( $post_id = null ) {\n\t\t$post = \\get_post( $post_id );\n\t\tif ( empty( $post ) ) {\n\t\t\t$post = new stdClass();\n\t\t}\n\n\t\treturn $post;\n\t}\n\n\t\/**\n\t * Set image attribute after checking condition.\n\t *\n\t * @param array   $attrs     Array which hold rel attribute.\n\t * @param string  $attribute Attribute to set.\n\t * @param boolean $condition Condition to check.\n\t * @param boolean $is_dirty  Is dirty variable.\n\t * @param object  $post      Post Object.\n\t *\/\n\tprivate function set_image_attribute( &$attrs, $attribute, $condition, &$is_dirty, $post ) {\n\t\tif ( $condition && empty( $attrs[ $attribute ] ) ) {\n\t\t\t$is_dirty            = true;\n\t\t\t$attrs[ $attribute ] = trim( Helper::replace_vars( $condition, $post ) );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/image-seo\/options.php","ext":"php","size":2262,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Image SEO settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\Image_Seo\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'add_img_alt',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Add missing ALT attributes', 'rank-math' ),\n\t\t'desc'    => wp_kses_post( __( 'Add <code>alt<\/code> attributes for <code>images<\/code> without <code>alt<\/code> attributes automatically. The attribute is dynamically applied when the content is displayed, and the stored content is not changed.', 'rank-math' ) ),\n\t\t'default' => 'off',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'img_alt_format',\n\t\t'type'            => 'text',\n\t\t'name'            => esc_html__( 'Alt attribute format', 'rank-math' ),\n\t\t'desc'            => wp_kses_post( __( 'Format used for the new <code>alt<\/code> attribute values.', 'rank-math' ) ),\n\t\t'classes'         => 'large-text rank-math-supports-variables',\n\t\t'default'         => ' %filename%',\n\t\t'dep'             => [ [ 'add_img_alt', 'on' ] ],\n\t\t'sanitization_cb' => [ '\\RankMath\\CMB2', 'sanitize_textfield' ],\n\t\t'attributes'      => [ 'data-exclude-variables' => 'seo_title,seo_description' ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'add_img_title',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Add missing TITLE attributes', 'rank-math' ),\n\t\t'desc'    => wp_kses_post( __( 'Add <code>TITLE<\/code> attribute for all <code>images<\/code> without a <code>TITLE<\/code> attribute automatically. The attribute is dynamically applied when the content is displayed, and the stored content is not changed.', 'rank-math' ) ),\n\t\t'default' => 'off',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'img_title_format',\n\t\t'type'            => 'text',\n\t\t'name'            => esc_html__( 'Title attribute format', 'rank-math' ),\n\t\t'desc'            => wp_kses_post( __( 'Format used for the new <code>title<\/code> attribute values.', 'rank-math' ) ),\n\t\t'classes'         => 'large-text rank-math-supports-variables dropdown-up',\n\t\t'default'         => '%title% %count(title)%',\n\t\t'dep'             => [ [ 'add_img_title', 'on' ] ],\n\t\t'sanitization_cb' => [ '\\RankMath\\CMB2', 'sanitize_textfield' ],\n\t\t'attributes'      => [ 'data-exclude-variables' => 'seo_title,seo_description' ],\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/image-seo\/class-admin.php","ext":"php","size":1264,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin-side functionality of the Image SEO module.\n *\n * @since      1.0\n * @package    RankMath\n * @subpackage RankMath\\Image_Seo\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Image_Seo;\n\nuse RankMath\\KB;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Arr;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rank_math\/settings\/general', 'register_tab' );\n\t}\n\n\t\/**\n\t * Add the Images tab in the General Settings.\n\t *\n\t * @param  array $tabs Original tabs array.\n\t * @return array       New tabs array.\n\t *\/\n\tpublic function register_tab( $tabs ) {\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'images' => [\n\t\t\t\t\t'icon'  => 'rm-icon rm-icon-images',\n\t\t\t\t\t'title' => esc_html__( 'Images', 'rank-math' ),\n\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t'desc'  => sprintf( esc_html__( 'SEO options related to featured images and media appearing in your post content. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'image-settings', 'Options Panel Images Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'  => __DIR__ . '\/options.php',\n\t\t\t\t],\n\t\t\t],\n\t\t\t3\n\t\t);\n\n\t\treturn $tabs;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/image-seo\/class-image-seo.php","ext":"php","size":663,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Image SEO module.\n *\n * @since      1.0\n * @package    RankMath\n * @subpackage RankMath\\Image_Seo\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Image_Seo;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Image_Seo class.\n *\n * @codeCoverageIgnore\n *\/\nclass Image_Seo {\n\n\tuse Hooker;\n\n\t\/**\n\t * Admin page object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $admin;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->load_admin();\n\n\t\tnew Add_Attributes();\n\t}\n\n\t\/**\n\t * Load admin functionality.\n\t *\/\n\tprivate function load_admin() {\n\t\tif ( is_admin() ) {\n\t\t\t$this->admin = new Admin();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/image-seo\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/version-control\/class-version-control.php","ext":"php","size":3866,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Version Control internal module.\n *\n * @package    RankMath\n * @subpackage RankMath\\Version_Control\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Version_Control class.\n *\/\nclass Version_Control {\n\n\tuse Hooker;\n\n\t\/**\n\t * Module ID.\n\t *\n\t * @var string\n\t *\/\n\tpublic $id = '';\n\n\t\/**\n\t * Module directory.\n\t *\n\t * @var string\n\t *\/\n\tpublic $directory = '';\n\n\t\/**\n\t * Plugin info transient key.\n\t *\n\t * @var string\n\t *\/\n\tconst TRANSIENT = 'rank_math_wporg_plugin_info';\n\n\t\/**\n\t * WordPress.org plugins API URL.\n\t *\n\t * @var string\n\t *\/\n\tconst API_URL = 'https:\/\/api.wordpress.org\/plugins\/info\/1.0\/seo-by-rank-math.json';\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_heartbeat() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Helper::is_rest() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'        => 'status',\n\t\t\t\t'directory' => __DIR__,\n\t\t\t]\n\t\t);\n\n\t\t$this->hooks();\n\t}\n\n\t\/**\n\t * Register version control hooks.\n\t *\/\n\tpublic function hooks() {\n\t\tif ( Helper::get_settings( 'general.beta_optin' ) ) {\n\t\t\t$beta_optin = new Beta_Optin();\n\t\t\t$beta_optin->hooks();\n\t\t}\n\t}\n\n\t\/**\n\t * Get localized JSON data based on the Page view.\n\t *\/\n\tpublic static function get_json_data() {\n\t\t$versions = array_reverse( array_keys( Beta_Optin::get_available_versions( Helper::get_settings( 'general.beta_optin' ) ) ) );\n\t\tarray_splice( $versions, 10 );\n\t\treturn [\n\t\t\t'latestVersion'           => Beta_Optin::get_latest_version(),\n\t\t\t'isRollbackVersion'       => Rollback_Version::is_rollback_version(),\n\t\t\t'isPluginUpdateDisabled'  => Helper::is_plugin_update_disabled(),\n\t\t\t'availableVersions'       => $versions,\n\t\t\t'updateCoreUrl'           => self_admin_url( 'update-core.php' ),\n\t\t\t'rollbackVersion'         => get_option( 'rank_math_rollback_version', false ),\n\t\t\t'rollbackNonce'           => wp_create_nonce( 'rank-math-rollback' ),\n\t\t\t'betaOptin'               => boolval( Helper::get_settings( 'general.beta_optin' ) ),\n\t\t\t'autoUpdate'              => boolval( Helper::get_auto_update_setting() ),\n\t\t\t'updateNotificationEmail' => boolval( Helper::get_settings( 'general.update_notification_email' ) ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get Rank Math plugin information.\n\t *\n\t * @return mixed Plugin information array or false on fail.\n\t *\/\n\tpublic static function get_plugin_info() {\n\t\t$cache = get_transient( self::TRANSIENT );\n\t\tif ( $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t$request = wp_remote_get( self::API_URL, [ 'timeout' => 20 ] );\n\t\tif ( ! is_wp_error( $request ) && is_array( $request ) ) {\n\t\t\t$response = json_decode( $request['body'], true );\n\t\t\tset_transient( self::TRANSIENT, $response, ( 12 * HOUR_IN_SECONDS ) );\n\t\t\treturn $response;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get plugin data to use in the `update_plugins` transient.\n\t *\n\t * @param  string $version New version.\n\t * @param  string $package New version download URL.\n\t * @return array           An array of plugin metadata.\n\t *\/\n\tpublic static function get_plugin_data( $version, $package ) {\n\t\treturn [\n\t\t\t'id'          => 'w.org\/plugins\/seo-by-rank-math',\n\t\t\t'slug'        => 'seo-by-rank-math',\n\t\t\t'plugin'      => 'seo-by-rank-math\/rank-math.php',\n\t\t\t'new_version' => $version,\n\t\t\t'url'         => 'https:\/\/wordpress.org\/plugins\/seo-by-rank-math\/',\n\t\t\t'package'     => $package,\n\t\t\t'icons'       =>\n\t\t\t[\n\t\t\t\t'2x'  => 'https:\/\/ps.w.org\/seo-by-rank-math\/assets\/icon-256x256.png?rev=2034417',\n\t\t\t\t'1x'  => 'https:\/\/ps.w.org\/seo-by-rank-math\/assets\/icon.svg?rev=2034417',\n\t\t\t\t'svg' => 'https:\/\/ps.w.org\/seo-by-rank-math\/assets\/icon.svg?rev=2034417',\n\t\t\t],\n\t\t\t'banners'     =>\n\t\t\t[\n\t\t\t\t'2x' => 'https:\/\/ps.w.org\/seo-by-rank-math\/assets\/banner-1544x500.png?rev=2034417',\n\t\t\t\t'1x' => 'https:\/\/ps.w.org\/seo-by-rank-math\/assets\/banner-772x250.png?rev=2034417',\n\t\t\t],\n\t\t\t'banners_rtl' => [],\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/version-control\/class-rollback-version.php","ext":"php","size":4183,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Version Rollback Class.\n *\n * @package    RankMath\n * @subpackage RankMath\\Version_Control\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Rollback_Version class.\n *\/\nclass Rollback_Version {\n\n\tuse Hooker;\n\n\t\/**\n\t * Rollback version option key.\n\t *\n\t * @var string\n\t *\/\n\tconst ROLLBACK_VERSION_OPTION = 'rank_math_rollback_version';\n\n\t\/**\n\t * Check if currently installed version is a rollback version.\n\t *\n\t * @return boolean Whether it is rollback or not.\n\t *\/\n\tpublic static function is_rollback_version() {\n\t\t$is_rollback = boolval( get_option( self::ROLLBACK_VERSION_OPTION, false ) );\n\t\tif ( ! $is_rollback ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$current_version = rank_math()->version;\n\t\t$latest_version  = Beta_Optin::get_latest_version();\n\t\tif ( $current_version === $latest_version ) {\n\t\t\tdelete_option( self::ROLLBACK_VERSION_OPTION );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Check if we should roll back in this request or not.\n\t *\/\n\tpublic static function should_rollback() {\n\t\tif ( ! Param::post( 'rm_rollback_version' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! current_user_can( 'update_plugins' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! isset( $_POST['_wpnonce'] ) || ! wp_verify_nonce( sanitize_key( $_POST['_wpnonce'] ), 'rank-math-rollback' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Reinstall previous version.\n\t *\n\t * @return boolean Whether the installation was successful.\n\t *\/\n\tpublic function rollback() {\n\t\t$title        = __( 'Rollback Plugin', 'rank-math' );\n\t\t$parent_file  = 'plugins.php';\n\t\t$submenu_file = 'plugins.php';\n\t\t$new_version  = Param::post( 'rm_rollback_version' );\n\n\t\twp_enqueue_script( 'updates' );\n\t\t$plugin = 'seo-by-rank-math\/rank-math.php';\n\t\t$nonce  = 'upgrade-plugin_' . $plugin;\n\t\t$url    = 'update.php?action=upgrade-plugin&plugin=' . rawurlencode( $plugin );\n\t\tif ( ! class_exists( '\\Plugin_Upgrader' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-upgrader.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\tupdate_option( self::ROLLBACK_VERSION_OPTION, $new_version );\n\t\t\/\/ Downgrade version number if necessary.\n\t\tif ( version_compare( rank_math()->version, $new_version, '>' ) ) {\n\t\t\tupdate_option( 'rank_math_version', $new_version );\n\t\t}\n\n\t\tadd_filter( 'pre_site_transient_update_plugins', [ $this, 'pre_transient_update_plugins' ], 20 );\n\t\tadd_filter( 'gettext', [ $this, 'change_updater_strings' ], 20, 2 );\n\t\t$upgrader = new \\Plugin_Upgrader( new \\Plugin_Upgrader_Skin( compact( 'title', 'nonce', 'url', 'plugin' ) ) );\n\t\techo '<div class=\"rank-math-rollback-status\">';\n\t\t$upgrader->upgrade( $plugin );\n\t\techo '<\/div>';\n\t\tremove_filter( 'pre_site_transient_update_plugins', [ $this, 'pre_transient_update_plugins' ], 20 );\n\t\tremove_filter( 'gettext', [ $this, 'change_updater_strings' ], 20, 2 );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Inject old version in the `update_plugins` transient for downgrading.\n\t *\n\t * @return object New `update_plugins` data object.\n\t *\/\n\tpublic function pre_transient_update_plugins() {\n\t\t$versions       = Beta_Optin::get_available_versions( true );\n\t\t$selected       = Param::post( 'rm_rollback_version' );\n\t\t$package        = $versions[ $selected ];\n\t\t$data           = new \\stdClass();\n\t\t$data->response = [];\n\t\t$data->response['seo-by-rank-math\/rank-math.php'] = new \\stdClass();\n\n\t\t$plugin_data = Version_Control::get_plugin_data( $selected, $package );\n\t\tforeach ( $plugin_data as $prop_key => $prop_value ) {\n\t\t\t$data->response['seo-by-rank-math\/rank-math.php']->{$prop_key} = $prop_value;\n\t\t}\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Hooked to gettext filter to change strings in the Updater for the rollback process.\n\t *\n\t * @param  string $translation Translated text.\n\t * @param  string $text        Original text.\n\t *\n\t * @return string New translated text.\n\t *\/\n\tpublic function change_updater_strings( $translation, $text ) {\n\t\tif ( 'Plugin updated successfully.' === $text ) {\n\t\t\treturn __( 'Plugin rollback successful.', 'rank-math' );\n\t\t}\n\n\t\tif ( 'Installing the latest version&#8230;' === $text ) {\n\t\t\treturn __( 'Installing the rollback version&#8230;', 'rank-math' );\n\t\t}\n\n\t\treturn $translation;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/version-control\/display.php","ext":"php","size":390,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Version Control View to be used on Network Admin.\n *\n * @package    RankMath\n * @subpackage RankMath\\Version_Control\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( Rollback_Version::should_rollback() ) {\n\t$rollback = new Rollback_Version();\n\t$rollback->rollback();\n\treturn;\n}\n\necho '<div id=\"rank-math-version-control-wrapper\"><\/div>';\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/version-control\/class-beta-optin.php","ext":"php","size":9507,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Beta Opt-in functionality.\n *\n * @package    RankMath\n * @subpackage RankMath\\Version_Control\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Beta_Optin class.\n *\/\nclass Beta_Optin {\n\n\tuse Hooker;\n\n\t\/**\n\t * Beta changelog URL.\n\t *\n\t * @var string\n\t *\/\n\tconst BETA_CHANGELOG_URL = 'https:\/\/rankmath.com\/changelog\/beta\/';\n\n\t\/**\n\t * Placeholder for opening tag inserted with JS.\n\t *\n\t * @var string\n\t *\/\n\tconst NOTICE_START_MARKER = '&#x25B7;';\n\n\t\/**\n\t * Placeholder for closing tag inserted with JS.\n\t *\n\t * @var string\n\t *\/\n\tconst NOTICE_END_MARKER = '&#x25C1;';\n\n\t\/**\n\t * Holds the fetched trunk version in memory to avoid fetching multiple times.\n\t *\n\t * @var mixed\n\t *\/\n\tpublic $trunk_version = false;\n\n\t\/**\n\t * Actions and filters.\n\t *\n\t * @return void\n\t *\/\n\tpublic function hooks() {\n\t\t$this->filter( 'site_transient_update_plugins', 'transient_update_plugins' );\n\t\t$this->action( 'in_plugin_update_message-seo-by-rank-math\/rank-math.php', 'plugin_update_message' );\n\t\t$this->action( 'install_plugins_pre_plugin-information', 'beta_plugin_information' );\n\t\t$this->action( 'admin_footer', 'beta_changelog_link_js' );\n\t}\n\n\t\/**\n\t * Replace plugin info popup for beta versions.\n\t *\/\n\tpublic function beta_plugin_information() {\n\t\tif ( 'seo-by-rank-math' !== Param::request( 'plugin' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$transient = get_site_transient( 'update_plugins' );\n\t\tif ( self::has_beta_update( $transient ) ) {\n\t\t\t\/\/ No-js fallback.\n\t\t\techo '<html><head><\/head><body style=\"margin: 0;\"><iframe src=\"' . esc_attr( self::BETA_CHANGELOG_URL ) . '\" style=\"width: 100%; height: 100%;\"><\/body><\/html>';\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Check if Rank Math update is a beta update in the transient.\n\t *\n\t * @param  mixed $transient Transient value.\n\t * @return boolean          If it is a beta update or not.\n\t *\/\n\tpublic static function has_beta_update( $transient ) {\n\t\treturn (\n\t\t\tis_object( $transient )\n\t\t\t&& ! empty( $transient->response )\n\t\t\t&& ! empty( $transient->response['seo-by-rank-math\/rank-math.php'] )\n\t\t\t&& ! empty( $transient->response['seo-by-rank-math\/rank-math.php']->is_beta )\n\t\t);\n\t}\n\n\t\/**\n\t * Get all available versions of Rank Math.\n\t *\n\t * @param boolean $beta  Include beta versions.\n\t *\n\t * @return array List of versions and download URLs.\n\t *\/\n\tpublic static function get_available_versions( $beta = false ) {\n\t\t$versions    = [];\n\t\t$plugin_info = Version_Control::get_plugin_info();\n\t\tif ( empty( $plugin_info['versions'] ) ) {\n\t\t\treturn $versions;\n\t\t}\n\n\t\tforeach ( (array) $plugin_info['versions'] as $version => $url ) {\n\t\t\tif ( ! self::is_eligible_version( $version, $beta ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$versions[ $version ] = $url;\n\t\t}\n\n\t\tuksort( $versions, 'version_compare' );\n\n\t\treturn $versions;\n\t}\n\n\t\/**\n\t * Check if version should be in the dropdown.\n\t *\n\t * @param  string  $version Version number.\n\t * @param  boolean $beta    If beta versions should be included or not.\n\t *\n\t * @return boolean          If version should be in the dropdown.\n\t *\/\n\tpublic static function is_eligible_version( $version, $beta ) {\n\t\tif ( 'trunk' === $version ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! $beta && Str::contains( 'beta', $version ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get latest version available.\n\t *\n\t * @return string Latest version number.\n\t *\/\n\tpublic static function get_latest_version() {\n\t\t$plugin_info = Version_Control::get_plugin_info();\n\t\treturn $plugin_info['version'];\n\t}\n\n\t\/**\n\t * Get latest beta version available.\n\t *\n\t * @return string Latest beta version number.\n\t *\/\n\tpublic function get_latest_beta_version() {\n\t\t$version = get_transient( 'rank_math_trunk_version' );\n\t\tif ( ! $version || $this->is_check_requested() ) {\n\t\t\t$version = $this->fetch_trunk_version();\n\t\t}\n\n\t\t$beta = 0;\n\t\tif ( Str::contains( 'beta', $version ) ) {\n\t\t\t$beta = $version;\n\t\t}\n\n\t\treturn $beta;\n\t}\n\n\t\/**\n\t * Fetch latest plugin file from public SVN and get version number.\n\t *\n\t * @return string\n\t *\/\n\tpublic function fetch_trunk_version() {\n\t\tif ( false !== $this->trunk_version ) {\n\t\t\treturn $this->trunk_version;\n\t\t}\n\n\t\t$this->trunk_version = 0;\n\n\t\t$response = wp_remote_get( 'https:\/\/plugins.svn.wordpress.org\/seo-by-rank-math\/trunk\/rank-math.php' );\n\t\tif ( is_wp_error( $response ) || ! is_array( $response ) ) {\n\t\t\treturn $this->trunk_version;\n\t\t}\n\n\t\t$plugin_file = wp_remote_retrieve_body( $response );\n\n\t\tpreg_match( '\/Version:\\s+([0-9a-zA-Z.-]+)\\s*$\/m', $plugin_file, $matches );\n\t\tif ( empty( $matches[1] ) ) {\n\t\t\treturn $this->trunk_version;\n\t\t}\n\n\t\t$this->trunk_version = $matches[1];\n\t\tset_transient( 'rank_math_trunk_version', $this->trunk_version, ( 12 * HOUR_IN_SECONDS ) );\n\t\treturn $this->trunk_version;\n\t}\n\n\t\/**\n\t * Inject beta in the `update_plugins` transient to be able to update to it.\n\t *\n\t * @param  mixed $value Original value.\n\t *\n\t * @return mixed New value.\n\t *\/\n\tpublic function transient_update_plugins( $value ) {\n\t\t$beta_version = $this->get_latest_beta_version();\n\t\t$new_version  = isset( $value->response['seo-by-rank-math\/rank-math.php'] ) && ! empty( $value->response['seo-by-rank-math\/rank-math.php']->new_version ) ? $value->response['seo-by-rank-math\/rank-math.php']->new_version : 0;\n\n\t\tif ( ! $beta_version ) {\n\t\t\treturn $value;\n\t\t}\n\n\t\tif ( version_compare( $beta_version, rank_math()->version, '>' ) && version_compare( $beta_version, $new_version, '>' ) ) {\n\t\t\t$value = $this->inject_beta( $value, $beta_version );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Inject beta update in the transient value.\n\t *\n\t * @param  mixed  $value        Transient value.\n\t * @param  string $beta_version Beta version number.\n\t *\n\t * @return mixed New transient value.\n\t *\/\n\tpublic function inject_beta( $value, $beta_version ) {\n\t\tif ( empty( $value ) ) {\n\t\t\t$value = new \\stdClass();\n\t\t}\n\n\t\tif ( empty( $value->response ) ) {\n\t\t\t$value->response = [];\n\t\t}\n\n\t\t$value->response['seo-by-rank-math\/rank-math.php'] = new \\stdClass();\n\n\t\t$plugin_data = Version_Control::get_plugin_data( $beta_version, 'https:\/\/downloads.wordpress.org\/plugin\/seo-by-rank-math.zip' );\n\t\tforeach ( $plugin_data as $prop_key => $prop_value ) {\n\t\t\t$value->response['seo-by-rank-math\/rank-math.php']->{$prop_key} = $prop_value;\n\t\t}\n\n\t\t$value->response['seo-by-rank-math\/rank-math.php']->is_beta        = true;\n\t\t$value->response['seo-by-rank-math\/rank-math.php']->upgrade_notice = self::NOTICE_START_MARKER . ' ' . __( 'This update will install a beta version of Rank Math.', 'rank-math' ) . ' ' . self::NOTICE_END_MARKER;\n\n\t\tif ( empty( $value->no_update ) ) {\n\t\t\t$value->no_update = [];\n\t\t}\n\n\t\tunset( $value->no_update['seo-by-rank-math\/rank-math.php'] );\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Add warning about beta version in the update notice.\n\t *\n\t * @param  array $plugin_data An array of plugin metadata.\n\t * @return void\n\t *\/\n\tpublic function plugin_update_message( $plugin_data ) {\n\t\tif ( empty( $plugin_data['is_beta'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tprintf(\n\t\t\t'<\/p><p class=\"rank-math-beta-update-notice\">%s',\n\t\t\tesc_html__( 'This update will install a beta version of Rank Math.', 'rank-math' )\n\t\t);\n\t}\n\n\t\/**\n\t * Add Javascript to open beta changelog link in a new tab instead of the modal.\n\t *\n\t * @return void\n\t *\/\n\tpublic function beta_changelog_link_js() {\n\t\t$screen = get_current_screen();\n\n\t\t$applicable_screens = [\n\t\t\t'update-core',\n\t\t\t'plugins',\n\t\t\t'update-core-network',\n\t\t\t'plugins-network',\n\t\t];\n\n\t\tif ( empty( $screen->base ) || ! in_array( $screen->base, $applicable_screens, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$transient = get_site_transient( 'update_plugins' );\n\t\tif ( ! self::has_beta_update( $transient ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<script type=\"text\/javascript\">\n\t\t\tjQuery( document ).ready( function( $ ) {\n\t\t\t\t\/\/ Change our link.\n\t\t\t\t$('.open-plugin-details-modal').each( function( index, element ) {\n\t\t\t\t\tif ( element.href.indexOf( 'plugin=seo-by-rank-math&section=changelog' ) !== -1 ) {\n\t\t\t\t\t\t\/\/ Found our link.\n\t\t\t\t\t\t$( element )\n\t\t\t\t\t\t\t.removeClass( 'open-plugin-details-modal thickbox' )\n\t\t\t\t\t\t\t.attr( 'href', '<?php echo esc_js( self::BETA_CHANGELOG_URL ); ?>' )\n\t\t\t\t\t\t\t.attr( 'target', '_blank' );\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t\/\/ Change our notice.\n\t\t\t\t<?php if ( 'update-core' === $screen->base || 'update-core-network' === $screen->base ) { ?>\n\t\t\t\t\t$('td.plugin-title').each( function( index, element ) {\n\t\t\t\t\t\tvar contents = $( element ).html();\n\t\t\t\t\t\tif ( contents.indexOf( '<?php echo esc_js( html_entity_decode( self::NOTICE_START_MARKER ) ); ?>' ) !== -1 && contents.indexOf( '<?php echo esc_js( html_entity_decode( self::NOTICE_END_MARKER ) ); ?>' ) !== -1 ) {\n\t\t\t\t\t\t\tcontents = contents\n\t\t\t\t\t\t\t\t.replace( '<?php echo esc_js( html_entity_decode( self::NOTICE_START_MARKER ) ); ?>', '<\/p><div class=\"update-message notice inline notice-warning notice-alt rank-math-beta-update-notice\"><p>' )\n\t\t\t\t\t\t\t\t.replace( '<?php echo esc_js( html_entity_decode( self::NOTICE_END_MARKER ) ); ?>', '<\/p><\/div><p style=\"display: none;\">' );\n\n\t\t\t\t\t\t\t$( element ).html( contents );\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t<?php } ?>\n\t\t\t} );\n\t\t<\/script>\n\t\t<style>\n\t\t\t.update-message.rank-math-beta-update-notice {\n\t\t\t\tfont-weight: bold;\n\t\t\t\tmargin-top: 20px;\n\t\t\t}\n\t\t\t.update-message.rank-math-beta-update-notice > p:before {\n\t\t\t\tcontent: \"\\f534\";\n\t\t\t}\n\t\t<\/style>\n\t\t<?php\n\t}\n\n\t\/**\n\t * If user requested check with force-check parameter.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_check_requested() {\n\t\treturn (bool) Param::get( 'force-check' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/version-control\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-generator.php","ext":"php","size":11453,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap generator.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Generator class.\n *\/\nclass Generator extends XML {\n\n\tuse Hooker;\n\n\t\/**\n\t * XSL stylesheet for styling a sitemap for web browsers.\n\t *\n\t * @var string\n\t *\/\n\tprotected $stylesheet = '';\n\n\t\/**\n\t * Holds the get_bloginfo( 'charset' ) value to reuse for performance.\n\t *\n\t * @var string\n\t *\/\n\tprotected $charset = 'UTF-8';\n\n\t\/**\n\t * If data encoding needs to be converted for output.\n\t *\n\t * @var boolean\n\t *\/\n\tprotected $needs_conversion = false;\n\n\t\/**\n\t * Timezone.\n\t *\n\t * @var Timezone\n\t *\/\n\tpublic $timezone;\n\n\t\/**\n\t * Providers array.\n\t *\n\t * @var Provider\n\t *\/\n\tpublic $providers = [];\n\n\t\/**\n\t * The maximum number of entries per sitemap page.\n\t *\n\t * @var int\n\t *\/\n\tprivate $max_entries;\n\n\t\/**\n\t * Set up object properties.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$this->stylesheet     = preg_replace( '\/(^http[s]?:)\/', '', Router::get_base_url( 'main-sitemap.xsl' ) );\n\t\t$this->stylesheet     = '<?xml-stylesheet type=\"text\/xsl\" href=\"' . $this->stylesheet . '\"?>';\n\t\t$this->charset        = get_bloginfo( 'charset' );\n\t\t$this->output_charset = $this->charset;\n\t\t$this->timezone       = new Timezone();\n\n\t\tif (\n\t\t\t'UTF-8' !== $this->charset\n\t\t\t&& function_exists( 'mb_list_encodings' )\n\t\t\t&& in_array( $this->charset, mb_list_encodings(), true )\n\t\t) {\n\t\t\t$this->output_charset = 'UTF-8';\n\t\t}\n\n\t\t$this->needs_conversion = $this->output_charset !== $this->charset;\n\t\t$this->instantiate();\n\t}\n\n\t\/**\n\t * Instantiate required objects.\n\t *\/\n\tprivate function instantiate() {\n\t\t\/\/ Initialize sitemap providers classes.\n\t\t$this->providers = [\n\t\t\tnew \\RankMath\\Sitemap\\Providers\\Post_Type(),\n\t\t\tnew \\RankMath\\Sitemap\\Providers\\Taxonomy(),\n\t\t];\n\n\t\t\/\/ Author Provider.\n\t\tif ( true === Helper::is_author_archive_indexable() ) {\n\t\t\t$this->providers[] = new \\RankMath\\Sitemap\\Providers\\Author();\n\t\t}\n\n\t\t$external_providers = $this->do_filter( 'sitemap\/providers', [] );\n\t\tforeach ( $external_providers as $provider ) {\n\t\t\tif ( is_object( $provider ) ) {\n\t\t\t\t$this->providers[] = $provider;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Produce final XML output with debug information.\n\t *\n\t * @param  string $type Sitemap type.\n\t * @param  int    $page Page number to retrieve.\n\t * @return string\n\t *\/\n\tpublic function get_output( $type, $page ) {\n\t\t$output = '<?xml version=\"1.0\" encoding=\"' . esc_attr( $this->get_output_charset() ) . '\"?>';\n\n\t\tif ( $this->stylesheet ) {\n\t\t\t\/**\n\t\t\t * Filter the stylesheet URL for the XML sitemap.\n\t\t\t *\n\t\t\t * @param string $stylesheet Stylesheet URL.\n\t\t\t *\/\n\t\t\t$output .= $this->do_filter( \"sitemap\/{$type}_stylesheet_url\", $this->stylesheet ) . \"\\n\";\n\t\t}\n\n\t\t$content = $this->build_sitemap( $type, $page );\n\n\t\tif ( '' !== $content ) {\n\t\t\treturn $output . $content;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Attempts to build the requested sitemap.\n\t *\n\t * @param  string $type Sitemap type.\n\t * @param  int    $page Page number to retrieve.\n\t * @return string\n\t *\/\n\tpublic function build_sitemap( $type, $page ) {\n\t\t$this->max_entries = absint( Helper::get_settings( 'sitemap.items_per_page', 100 ) );\n\n\t\t\/**\n\t\t * Filter the type of sitemap to build.\n\t\t *\n\t\t * @param string $type Sitemap type, determined by the request.\n\t\t *\/\n\t\t$type = $this->do_filter( 'sitemap\/build_type', $type );\n\t\tif ( '1' === $type ) {\n\t\t\treturn $this->build_root_map();\n\t\t}\n\n\t\tforeach ( $this->providers as $provider ) {\n\t\t\tif ( ! $provider->handles_type( $type ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$links = $provider->get_sitemap_links( $type, $this->max_entries, $page );\n\t\t\tif ( empty( $links ) && ( empty( $provider->should_show_empty ) || $page > 1 ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn $this->get_sitemap( $links, $type, $page );\n\t\t}\n\n\t\treturn $this->do_filter( \"sitemap\/{$type}\/content\", '' );\n\t}\n\n\t\/**\n\t * Build the root sitemap (example.com\/sitemap_index.xml) which lists sub-sitemaps for other content types.\n\t *\/\n\tpublic function build_root_map() {\n\t\t$links = [];\n\t\tforeach ( $this->providers as $provider ) {\n\t\t\t$links = array_merge( $links, $provider->get_index_links( $this->max_entries ) );\n\t\t}\n\n\t\tif ( empty( $links ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $this->get_index( $links );\n\t}\n\n\t\/**\n\t * Produce XML output for sitemap index.\n\t *\n\t * @param  array $links Set of sitemaps index links.\n\t * @return string\n\t *\/\n\tpublic function get_index( $links ) {\n\n\t\t$xml = '<sitemapindex xmlns=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\">' . \"\\n\";\n\n\t\tforeach ( $links as $link ) {\n\t\t\t$xml .= $this->sitemap_index_url( $link );\n\t\t}\n\n\t\t\/**\n\t\t * Filter to append sitemaps to the index.\n\t\t *\n\t\t * @param string $index String to append to sitemaps index, defaults to empty.\n\t\t *\/\n\t\t$xml .= $this->do_filter( 'sitemap\/index', '' );\n\t\t$xml .= '<\/sitemapindex>';\n\n\t\treturn $xml;\n\t}\n\n\t\/**\n\t * Produce XML output for urlset.\n\t *\n\t * @param  array  $links        Set of sitemap links.\n\t * @param  string $type         Sitemap type.\n\t * @param  int    $current_page Current sitemap page number.\n\t * @return string\n\t *\/\n\tpublic function get_sitemap( $links, $type, $current_page ) {\n\n\t\t$urlset = '<urlset xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xmlns:image=\"http:\/\/www.google.com\/schemas\/sitemap-image\/1.1\" '\n\t\t\t. 'xsi:schemaLocation=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9 http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\/sitemap.xsd '\n\t\t\t. 'http:\/\/www.google.com\/schemas\/sitemap-image\/1.1 http:\/\/www.google.com\/schemas\/sitemap-image\/1.1\/sitemap-image.xsd\" '\n\t\t\t. 'xmlns=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\">' . \"\\n\";\n\n\t\t\/**\n\t\t * Filters the `urlset` for a sitemap by type.\n\t\t *\n\t\t * @param string $urlset The output for the sitemap's `urlset`.\n\t\t *\/\n\t\t$xml = $this->do_filter( \"sitemap\/{$type}_urlset\", $urlset );\n\n\t\tforeach ( $links as $url ) {\n\t\t\t$method = $type . '_sitemap_url';\n\t\t\t$xml   .= has_filter( \"rank_math\/sitemap\/{$method}\" ) ? $this->do_filter( \"sitemap\/{$method}\", $url, $this ) : $this->sitemap_url( $url );\n\t\t}\n\n\t\t\/**\n\t\t * Filter to add extra URLs to the XML sitemap by type.\n\t\t *\n\t\t * Only runs for the first page, not on all.\n\t\t *\n\t\t * @param string $content String content to add, defaults to empty.\n\t\t *\/\n\t\tif ( 1 === $current_page ) {\n\t\t\t$xml .= $this->do_filter( \"sitemap\/{$type}_content\", '' );\n\t\t}\n\n\t\t$xml .= '<\/urlset>';\n\n\t\treturn $xml;\n\t}\n\n\t\/**\n\t * Build the `<sitemap>` tag for a given URL.\n\t *\n\t * @param  array $url Array of parts that make up this entry.\n\t * @return string\n\t *\/\n\tprotected function sitemap_index_url( $url ) {\n\n\t\t$date = null;\n\t\tif ( ! empty( $url['lastmod'] ) ) {\n\t\t\t$date = $this->timezone->format_date( $url['lastmod'] );\n\t\t}\n\n\t\t$output  = $this->newline( '<sitemap>', 1 );\n\t\t$output .= $this->newline( '<loc>' . htmlspecialchars( $url['loc'] ) . '<\/loc>', 2 );\n\t\t$output .= empty( $date ) ? '' : $this->newline( '<lastmod>' . htmlspecialchars( $date ) . '<\/lastmod>', 2 );\n\t\t$output .= $this->newline( '<\/sitemap>', 1 );\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Build the `<url>` tag for a given URL.\n\t *\n\t * Public access for backwards compatibility reasons.\n\t *\n\t * @param  array $url Array of parts that make up this entry.\n\t * @return string\n\t *\/\n\tpublic function sitemap_url( $url ) {\n\n\t\t$date = null;\n\t\tif ( ! empty( $url['mod'] ) ) {\n\t\t\t\/\/ Create a DateTime object date in the correct timezone.\n\t\t\t$date = $this->timezone->format_date( $url['mod'] );\n\t\t}\n\n\t\t$output  = $this->newline( '<url>', 1 );\n\t\t$output .= $this->newline( '<loc>' . $this->encode_url_rfc3986( htmlspecialchars( $url['loc'] ) ) . '<\/loc>', 2 );\n\t\t$output .= empty( $date ) ? '' : $this->newline( '<lastmod>' . htmlspecialchars( $date ) . '<\/lastmod>', 2 );\n\t\t$output .= $this->sitemap_images( $url );\n\t\t$output .= $this->newline( '<\/url>', 1 );\n\n\t\t\/**\n\t\t * Filters the output for the sitemap url tag.\n\t\t *\n\t\t * @param string $output The output for the sitemap url tag.\n\t\t * @param array  $url    The sitemap url array on which the output is based.\n\t\t *\/\n\t\treturn $this->do_filter( 'sitemap\/url', $output, $url );\n\t}\n\n\t\/**\n\t * Sitemap Images.\n\t *\n\t * @param  array $url Array of parts that make up this entry.\n\t * @return string\n\t *\/\n\tpublic function sitemap_images( $url ) {\n\t\tif ( empty( $url['images'] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$output = '';\n\t\tforeach ( $url['images'] as $img ) {\n\n\t\t\tif ( empty( $img['src'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$output .= $this->newline( '<image:image>', 2 );\n\t\t\t$output .= $this->newline( '<image:loc>' . esc_html( $this->encode_url_rfc3986( $img['src'] ) ) . '<\/image:loc>', 3 );\n\t\t\t$output .= $this->newline( '<\/image:image>', 2 );\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Convret encoding if needed.\n\t *\n\t * @param string  $data   Data to be added.\n\t * @param string  $tag    Tag to create CDATA for.\n\t * @param integer $indent Tab indent count.\n\t *\/\n\tpublic function add_cdata( $data, $tag, $indent = 0 ) {\n\t\tif ( $this->needs_conversion ) {\n\t\t\t$data = mb_convert_encoding( $data, $this->output_charset, $this->charset );\n\t\t}\n\n\t\t$data = _wp_specialchars( html_entity_decode( $data, ENT_QUOTES, $this->output_charset ) );\n\n\t\treturn $this->newline( \"<{$tag}><![CDATA[{$data}]]><\/{$tag}>\", $indent );\n\t}\n\n\t\/**\n\t * Apply some best effort conversion to comply with RFC3986.\n\t *\n\t * @param  string $url URL to encode.\n\t * @return string\n\t *\/\n\tpublic function encode_url_rfc3986( $url ) {\n\t\tif ( filter_var( $url, FILTER_VALIDATE_URL ) ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\t$url = $this->encode_url_path( $url );\n\t\t$url = $this->encode_url_query( $url );\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Apply some best effort conversion to comply with RFC3986.\n\t *\n\t * @param  string $url URL to encode.\n\t * @return string\n\t *\/\n\tprivate function encode_url_path( $url ) {\n\t\t$path = wp_parse_url( $url, PHP_URL_PATH );\n\t\tif ( empty( $path ) || '\/' === $path ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\t$encoded_path = explode( '\/', $path );\n\n\t\t\/\/ First decode the path, to prevent double encoding.\n\t\t$encoded_path = array_map( 'rawurldecode', $encoded_path );\n\n\t\t$encoded_path = array_map( 'rawurlencode', $encoded_path );\n\t\t$encoded_path = implode( '\/', $encoded_path );\n\t\t$encoded_path = str_replace( '%7E', '~', $encoded_path ); \/\/ PHP <5.3.\n\n\t\treturn str_replace( $path, $encoded_path, $url );\n\t}\n\n\t\/**\n\t * Apply some best effort conversion to comply with RFC3986.\n\t *\n\t * @param  string $url URL to encode.\n\t * @return string\n\t *\/\n\tprivate function encode_url_query( $url ) {\n\t\t$query = wp_parse_url( $url, PHP_URL_QUERY );\n\t\tif ( empty( $query ) ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\tparse_str( $query, $parsed_query );\n\n\t\tif ( defined( 'PHP_QUERY_RFC3986' ) ) { \/\/ PHP 5.4+.\n\t\t\t$parsed_query = http_build_query( $parsed_query, '', '&amp;', PHP_QUERY_RFC3986 );\n\t\t} else {\n\t\t\t$parsed_query = http_build_query( $parsed_query, '', '&amp;' );\n\t\t\t$parsed_query = str_replace( '+', '%20', $parsed_query );\n\t\t\t$parsed_query = str_replace( '%7E', '~', $parsed_query );\n\t\t}\n\n\t\treturn str_replace( $query, $parsed_query, $url );\n\t}\n\n\t\/**\n\t * Write a newline with indent count.\n\t *\n\t * @param  string  $content Content to write.\n\t * @param  integer $indent  Count of indent.\n\t * @return string\n\t *\/\n\tpublic function newline( $content, $indent = 0 ) {\n\t\treturn str_repeat( \"\\t\", $indent ) . $content . \"\\n\";\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/providers\/class-author.php","ext":"php","size":8287,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap provider for author archives.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap\\Providers;\n\nuse DateTime;\nuse DateTimeZone;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Author class.\n *\/\nclass Author implements Provider {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds the Sitemap slug.\n\t *\n\t * @var string\n\t *\/\n\tprotected $sitemap_slug = null;\n\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->sitemap_slug = Router::get_sitemap_slug( 'author' );\n\n\t\t$this->filter( 'rank_math\/sitemap\/author\/query', 'exclude_users', 5 );\n\t\t$this->filter( 'rank_math\/sitemap\/author\/query', 'exclude_roles', 5 );\n\t\t$this->filter( 'rank_math\/sitemap\/author\/query', 'exclude_post_types', 5 );\n\t}\n\n\t\/**\n\t * Check if provider supports given item type.\n\t *\n\t * @param  string $type Type string to check for.\n\t * @return boolean\n\t *\/\n\tpublic function handles_type( $type ) {\n\t\treturn $this->sitemap_slug === $type && Helper::get_settings( 'sitemap.authors_sitemap' );\n\t}\n\n\t\/**\n\t * Get set of sitemaps index link data.\n\t *\n\t * @param  int $max_entries Entries per sitemap.\n\t * @return array\n\t *\/\n\tpublic function get_index_links( $max_entries ) {\n\t\tif ( ! Helper::get_settings( 'sitemap.authors_sitemap' ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$users = $this->get_index_users();\n\t\tif ( empty( $users ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$page       = 1;\n\t\t$index      = [];\n\t\t$user_pages = array_chunk( $users, $max_entries );\n\n\t\tif ( 1 === count( $user_pages ) ) {\n\t\t\t$page = 0;\n\t\t}\n\n\t\tforeach ( $user_pages as $user_page ) {\n\t\t\t$current_page = $page > 0 ? $page : '';\n\t\t\t$user         = array_shift( $user_page ); \/\/ Time descending, first user on page is most recently updated.\n\t\t\t$item         = $this->do_filter(\n\t\t\t\t'sitemap\/index\/entry',\n\t\t\t\t[\n\t\t\t\t\t'loc'     => Router::get_base_url( $this->sitemap_slug . '-sitemap' . $current_page . '.xml' ),\n\t\t\t\t\t'lastmod' => '@' . $user->last_update,\n\t\t\t\t],\n\t\t\t\t'author',\n\t\t\t\t$user\n\t\t\t);\n\n\t\t\tif ( ! $item ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$index[] = $item;\n\n\t\t\t++$page;\n\t\t}\n\n\t\treturn $index;\n\t}\n\n\t\/**\n\t * Get set of sitemap link data.\n\t *\n\t * @param  string $type         Sitemap type.\n\t * @param  int    $max_entries  Entries per sitemap.\n\t * @param  int    $current_page Current page of the sitemap.\n\t * @return array\n\t *\/\n\tpublic function get_sitemap_links( $type, $max_entries, $current_page ) {\n\t\t$links = [];\n\n\t\tif ( $current_page < 1 ) {\n\t\t\t$current_page = 1;\n\t\t}\n\n\t\t$users = $this->get_users(\n\t\t\t[\n\t\t\t\t'offset' => ( $current_page - 1 ) * $max_entries,\n\t\t\t\t'number' => $max_entries,\n\t\t\t]\n\t\t);\n\n\t\tif ( empty( $users ) ) {\n\t\t\treturn $links;\n\t\t}\n\n\t\tSitemap::maybe_redirect( count( $users ), $max_entries );\n\t\tforeach ( $users as $user ) {\n\t\t\t$url = $this->get_sitemap_url( $user );\n\t\t\tif ( ! empty( $url ) ) {\n\t\t\t\t$links[] = $url;\n\t\t\t}\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Get sitemap urlset.\n\t *\n\t * @param WP_User $user User instance.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function get_sitemap_url( $user ) {\n\t\t$author_link = get_author_posts_url( $user->ID );\n\t\tif ( empty( $author_link ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$mod = isset( $user->last_update ) ? $user->last_update : strtotime( $user->user_registered );\n\n\t\t$date = new DateTime();\n\t\t$date->setTimestamp( $mod );\n\t\t$date->setTimezone( new DateTimeZone( 'UTC' ) );\n\n\t\t$url = [\n\t\t\t'loc' => $author_link,\n\t\t\t'mod' => $date->format( DATE_W3C ),\n\t\t];\n\n\t\t\/** This filter is documented at includes\/modules\/sitemap\/providers\/class-post-type.php *\/\n\t\treturn $this->do_filter( 'sitemap\/entry', $url, 'user', $user );\n\t}\n\n\t\/**\n\t * Retrieve users, taking account of all necessary exclusions.\n\t *\n\t * @param  array $args Arguments to add.\n\t * @return array\n\t *\/\n\tpublic function get_users( $args = [] ) {\n\t\t$defaults = [\n\t\t\t'orderby'    => 'meta_value_num',\n\t\t\t'order'      => 'DESC',\n\t\t\t\/\/ phpcs:ignore WordPress.DB.SlowDBQuery -- Needed to generate the author sitemap by comparing values stored in the meta table\n\t\t\t'meta_query' => [\n\t\t\t\t'relation' => 'AND',\n\t\t\t\t[\n\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key' => 'last_update',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'last_update',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\t$args = $this->do_filter( 'sitemap\/author\/query', wp_parse_args( $args, $defaults ) );\n\n\t\tif ( Helper::get_settings( 'sitemap.include_authors_without_posts' ) ) {\n\t\t\t$args['has_published_posts'] = false;\n\t\t}\n\n\t\treturn get_users( $args );\n\t}\n\n\t\/**\n\t * Exclude users.\n\t *\n\t * @param array $args Array of user query arguments.\n\t *\n\t * @return array\n\t *\/\n\tpublic function exclude_users( $args ) {\n\t\t$exclude = Helper::get_settings( 'sitemap.exclude_users' );\n\t\tif ( ! empty( $exclude ) ) {\n\t\t\t$args['exclude'] = wp_parse_id_list( $exclude );\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Exclude roles.\n\t *\n\t * @param array $args Array of user query arguments.\n\t *\n\t * @return array\n\t *\/\n\tpublic function exclude_roles( $args ) {\n\t\t$exclude_roles = Helper::get_settings( 'sitemap.exclude_roles' );\n\t\tif ( ! empty( $exclude_roles ) ) {\n\t\t\t$args['role__not_in'] = $exclude_roles;\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Exclude post types.\n\t *\n\t * @param array $args Array of user query arguments.\n\t *\n\t * @return array\n\t *\/\n\tpublic function exclude_post_types( $args ) {\n\t\t\/\/ Exclude post types.\n\t\t$public_post_types = get_post_types( [ 'public' => true ] );\n\n\t\t\/\/ We're not supporting sitemaps for author pages for attachments.\n\t\tunset( $public_post_types['attachment'] );\n\n\t\tif ( ! Helper::get_settings( 'sitemap.include_authors_without_posts' ) ) {\n\t\t\t$args['has_published_posts'] = array_keys( $public_post_types );\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Get all users according to author sitemap settings.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_index_users() {\n\t\tglobal $wpdb;\n\t\t$table_prefix                  = $wpdb->get_blog_prefix();\n\t\t$include_authors_without_posts = Helper::get_settings( 'sitemap.include_authors_without_posts' );\n\t\t$exclude_users                 = Helper::get_settings( 'sitemap.exclude_users' );\n\t\t$exclude_roles                 = Helper::get_settings( 'sitemap.exclude_roles' );\n\t\t$exclude_users_query           = ! $exclude_users ? '' : 'AND post_author NOT IN ( ' . esc_sql( $exclude_users ) . ' )';\n\t\t$exclude_roles_query           = '';\n\t\t$meta_query                    = \"(\n\t\t \t\t( um.meta_key = 'rank_math_robots' AND um.meta_value NOT LIKE '%noindex%' )\n\t\t \t\tOR um.user_id IS NULL\n\t\t\t)\n\t\t\tAND (  umt1.meta_key = 'last_update' OR umt1.user_id IS NULL )\n\t\t\t\";\n\t\tif ( $exclude_roles ) {\n\t\t\t$exclude_roles_query = \"AND ( umt.meta_key ='{$table_prefix}capabilities' AND ( \";\n\t\t\tforeach ( $exclude_roles as $key => $role ) {\n\t\t\t\t$exclude_roles_query .= 0 === $key ? \" umt.meta_value NOT LIKE '%\" . esc_sql( $role ) . \"%'\" : \" AND umt.meta_value NOT LIKE '%\" . esc_sql( $role ) . \"%'\";\n\t\t\t}\n\n\t\t\t$exclude_roles_query .= ' ) )';\n\t\t}\n\n\t\t$meta_query .= $exclude_roles_query;\n\n\t\t$include_authors_without_posts_query = $include_authors_without_posts ? '' : \"AND u.ID IN (\n\t\t\tSELECT post_author\n\t\t\tFROM {$wpdb->posts} as p\n\t\t\tWHERE p.post_status = 'publish' AND p.post_password = ''\n\t\t\t{$exclude_users_query}\n\t\t)\";\n\n\t\t$sql = \"\n\t\tSELECT u.ID, umt1.meta_value as last_update\n\t\tFROM {$wpdb->users} as u\n\t\t    LEFT JOIN {$wpdb->usermeta} AS um ON ( u.ID = um.user_id AND um.meta_key = 'rank_math_robots' )\n\t\t    LEFT JOIN {$wpdb->usermeta} AS umt ON ( u.ID = umt.user_id AND umt.meta_key = '{$table_prefix}capabilities' )\n\t\t    LEFT JOIN {$wpdb->usermeta} AS umt1 ON ( u.ID = umt1.user_id AND umt1.meta_key = 'last_update' )\n\t\t    WHERE ( {$meta_query} )\n\t\t    {$include_authors_without_posts_query}\n\t\tORDER BY umt1.meta_value DESC\n\t\t \";\n\n\t\treturn DB_Helper::get_results( $sql );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/providers\/interface-provider.php","ext":"php","size":1149,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap provider interface.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap\\Providers;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Provider interface.\n *\/\ninterface Provider {\n\n\t\/**\n\t * Check if provider supports given item type.\n\t *\n\t * @param  string $type Type string to check for.\n\t * @return boolean\n\t *\/\n\tpublic function handles_type( $type );\n\n\t\/**\n\t * Get set of sitemaps index link data.\n\t *\n\t * @param  int $max_entries Entries per sitemap.\n\t * @return array\n\t *\/\n\tpublic function get_index_links( $max_entries );\n\n\t\/**\n\t * Get set of sitemap link data.\n\t *\n\t * @param  string $type         Sitemap type.\n\t * @param  int    $max_entries  Entries per sitemap.\n\t * @param  int    $current_page Current page of the sitemap.\n\t * @return array\n\t *\/\n\tpublic function get_sitemap_links( $type, $max_entries, $current_page );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/providers\/class-taxonomy.php","ext":"php","size":8776,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap provider for taxonomies.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap\\Providers;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Sitemap\\Image_Parser;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Taxonomy provider\n *\/\nclass Taxonomy implements Provider {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds image parser instance.\n\t *\n\t * @var Image_Parser\n\t *\/\n\tprotected static $image_parser;\n\n\t\/**\n\t * Check if provider supports given item type.\n\t *\n\t * @param  string $type Type string to check for.\n\t * @return boolean\n\t *\/\n\tpublic function handles_type( $type ) {\n\t\tif ( is_a( $type, 'WP_Taxonomy' ) ) {\n\t\t\t$type = $type->name;\n\t\t}\n\n\t\tif (\n\t\t\tempty( $type ) ||\n\t\t\tfalse === taxonomy_exists( $type ) ||\n\t\t\tfalse === Helper::is_taxonomy_viewable( $type ) ||\n\t\t\tfalse === Helper::get_settings( 'sitemap.tax_' . $type . '_sitemap' ) ||\n\t\t\tin_array( $type, [ 'link_category', 'nav_menu', 'post_format' ], true )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter decision if taxonomy is excluded from the XML sitemap.\n\t\t *\n\t\t * @param bool   $exclude Default false.\n\t\t * @param string $type    Taxonomy name.\n\t\t *\/\n\t\treturn ! $this->do_filter( 'sitemap\/exclude_taxonomy', false, $type );\n\t}\n\n\t\/**\n\t * Get set of sitemaps index link data.\n\t *\n\t * @param  int $max_entries Entries per sitemap.\n\t * @return array\n\t *\/\n\tpublic function get_index_links( $max_entries ) {\n\t\t$taxonomies = Helper::get_accessible_taxonomies();\n\t\t$taxonomies = array_filter( $taxonomies, [ $this, 'handles_type' ] );\n\t\tif ( empty( $taxonomies ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t\/\/ Retrieve all the taxonomies and their terms so we can do a proper count on them.\n\t\t\/**\n\t\t * Filter the setting of excluding empty terms from the XML sitemap.\n\t\t *\n\t\t * @param boolean $exclude        Defaults to true.\n\t\t * @param array   $taxonomy_name Array of names for the taxonomies being processed.\n\t\t *\/\n\t\t$hide_empty = $this->do_filter( 'sitemap\/exclude_empty_terms', true, $taxonomies );\n\n\t\t$all_taxonomies = [];\n\t\tforeach ( $taxonomies as $taxonomy_name => $object ) {\n\t\t\t$or_meta_query = ! Helper::is_taxonomy_indexable( $taxonomy_name ) ? [] :\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t];\n\n\t\t\t$all_taxonomies[ $taxonomy_name ] = get_terms(\n\t\t\t\t[\n\t\t\t\t\t'taxonomy'   => $taxonomy_name,\n\t\t\t\t\t'hide_empty' => $hide_empty,\n\t\t\t\t\t'fields'     => 'ids',\n\t\t\t\t\t'orderby'    => 'name',\n\t\t\t\t\t'meta_query' => [\n\t\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t\t\t],\n\t\t\t\t\t\t$or_meta_query,\n\t\t\t\t\t],\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$index = [];\n\t\tforeach ( $all_taxonomies as $tax_name => $terms ) {\n\t\t\tif ( is_wp_error( $terms ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$max_pages   = 1;\n\t\t\t$total_count = empty( $terms ) ? 1 : count( $terms );\n\t\t\tif ( $total_count > $max_entries ) {\n\t\t\t\t$max_pages = (int) ceil( $total_count \/ $max_entries );\n\t\t\t}\n\n\t\t\t$tax = $taxonomies[ $tax_name ];\n\t\t\tif ( ! is_array( $tax->object_type ) || count( $tax->object_type ) === 0 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$last_modified_gmt = Sitemap::get_last_modified_gmt( $tax->object_type );\n\t\t\tfor ( $page_counter = 0; $page_counter < $max_pages; $page_counter++ ) {\n\t\t\t\t$current_page = ( $max_pages > 1 ) ? ( $page_counter + 1 ) : '';\n\t\t\t\t$terms_page   = array_splice( $terms, 0, $max_entries );\n\t\t\t\tif ( ! $terms_page ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$query = new \\WP_Query(\n\t\t\t\t\t[\n\t\t\t\t\t\t'post_type'      => $tax->object_type,\n\t\t\t\t\t\t'tax_query'      => [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'taxonomy' => $tax_name,\n\t\t\t\t\t\t\t\t'terms'    => $terms_page,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'orderby'        => 'modified',\n\t\t\t\t\t\t'order'          => 'DESC',\n\t\t\t\t\t\t'posts_per_page' => 1,\n\t\t\t\t\t]\n\t\t\t\t);\n\n\t\t\t\t$item = $this->do_filter(\n\t\t\t\t\t'sitemap\/index\/entry',\n\t\t\t\t\t[\n\t\t\t\t\t\t'loc'     => Router::get_base_url( $tax_name . '-sitemap' . $current_page . '.xml' ),\n\t\t\t\t\t\t'lastmod' => $query->have_posts() ? $query->posts[0]->post_modified_gmt : $last_modified_gmt,\n\t\t\t\t\t],\n\t\t\t\t\t'term',\n\t\t\t\t\t$tax_name,\n\t\t\t\t);\n\n\t\t\t\tif ( ! $item ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$index[] = $item;\n\t\t\t}\n\t\t}\n\n\t\treturn $index;\n\t}\n\n\t\/**\n\t * Get set of sitemap link data.\n\t *\n\t * @param  string $type         Sitemap type.\n\t * @param  int    $max_entries  Entries per sitemap.\n\t * @param  int    $current_page Current page of the sitemap.\n\t * @return array\n\t *\/\n\tpublic function get_sitemap_links( $type, $max_entries, $current_page ) {\n\t\t$links    = [];\n\t\t$taxonomy = get_taxonomy( $type );\n\t\t$terms    = $this->get_terms( $taxonomy, $max_entries, $current_page );\n\t\tSitemap::maybe_redirect( count( $this->get_terms( $taxonomy, 0, $current_page ) ), $max_entries );\n\n\t\tforeach ( $terms as $term ) {\n\t\t\t$url = [];\n\t\t\tif ( ! Sitemap::is_object_indexable( $term, 'term' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$link = $this->get_term_link( $term );\n\t\t\tif ( ! $link ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$url['loc']    = $link;\n\t\t\t$url['mod']    = $this->get_lastmod( $term );\n\t\t\t$url['images'] = ! is_null( $this->get_image_parser() ) ? $this->get_image_parser()->get_term_images( $term ) : [];\n\n\t\t\t\/** This filter is documented at inc\/sitemaps\/class-post-type-sitemap-provider.php *\/\n\t\t\t$url = $this->do_filter( 'sitemap\/entry', $url, 'term', $term );\n\n\t\t\tif ( ! empty( $url ) ) {\n\t\t\t\t$links[] = $url;\n\t\t\t}\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Get the Image Parser.\n\t *\n\t * @return Image_Parser\n\t *\/\n\tprotected function get_image_parser() {\n\t\tif ( class_exists( 'RankMath\\Sitemap\\Image_Parser' ) && ! isset( self::$image_parser ) ) {\n\t\t\tself::$image_parser = new Image_Parser();\n\t\t}\n\n\t\treturn self::$image_parser;\n\t}\n\n\t\/**\n\t * Get terms for taxonomy.\n\t *\n\t * @param  object $taxonomy     Taxonomy name.\n\t * @param  int    $max_entries  Entries per sitemap.\n\t * @param  int    $current_page Current page of the sitemap.\n\t * @return false|array\n\t *\/\n\tprivate function get_terms( $taxonomy, $max_entries, $current_page ) {\n\t\t$offset     = $current_page > 1 ? ( ( $current_page - 1 ) * $max_entries ) : 0;\n\t\t$hide_empty = ! Helper::get_settings( 'sitemap.tax_' . $taxonomy->name . '_include_empty' );\n\n\t\t\/\/ Getting terms.\n\t\t$terms = get_terms(\n\t\t\t[\n\t\t\t\t'taxonomy'               => $taxonomy->name,\n\t\t\t\t'orderby'                => 'term_order',\n\t\t\t\t'hide_empty'             => $hide_empty,\n\t\t\t\t'offset'                 => $offset,\n\t\t\t\t'number'                 => $max_entries,\n\t\t\t\t'exclude'                => wp_parse_id_list( Helper::get_settings( 'sitemap.exclude_terms' ) ),\n\n\t\t\t\t\/*\n\t\t\t\t * Limits aren't included in queries when hierarchical is set to true (by default).\n\t\t\t\t *\n\t\t\t\t * @link: https:\/\/github.com\/WordPress\/WordPress\/blob\/5.3\/wp-includes\/class-wp-term-query.php#L558-L567\n\t\t\t\t *\/\n\t\t\t\t'hierarchical'           => false,\n\t\t\t\t'update_term_meta_cache' => false,\n\t\t\t\t'meta_query'             => [\n\t\t\t\t\t'relation' => 'OR',\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t'value'   => 'noindex',\n\t\t\t\t\t\t'compare' => 'NOT LIKE',\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t'key'     => 'rank_math_robots',\n\t\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $terms ) || empty( $terms ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn $terms;\n\t}\n\n\t\/**\n\t * Get term link.\n\t *\n\t * @param  WP_Term $term Term object.\n\t * @return string\n\t *\/\n\tprivate function get_term_link( $term ) {\n\t\t$url       = get_term_link( $term, $term->taxonomy );\n\t\t$canonical = Helper::get_term_meta( 'canonical_url', $term, $term->taxonomy );\n\t\tif ( $canonical && $canonical !== $url ) {\n\t\t\t\/*\n\t\t\t * Let's assume that if a canonical is set for this term and it's different from\n\t\t\t * the URL of this term, that page is either already in the XML sitemap OR is on\n\t\t\t * an external site, either way, we shouldn't include it here.\n\t\t\t *\/\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Get last modified date of post by term.\n\t *\n\t * @param  WP_Term $term Term object.\n\t * @return string\n\t *\/\n\tpublic function get_lastmod( $term ) {\n\t\tglobal $wpdb;\n\n\t\treturn DB_Helper::get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"\n\t\t\tSELECT MAX(p.post_modified_gmt) AS lastmod\n\t\t\tFROM\t$wpdb->posts AS p\n\t\t\tINNER JOIN $wpdb->term_relationships AS term_rel\n\t\t\t\tON\t\tterm_rel.object_id = p.ID\n\t\t\tINNER JOIN $wpdb->term_taxonomy AS term_tax\n\t\t\t\tON\t\tterm_tax.term_taxonomy_id = term_rel.term_taxonomy_id\n\t\t\t\tAND\t\tterm_tax.taxonomy = %s\n\t\t\t\tAND\t\tterm_tax.term_id = %d\n\t\t\tWHERE\tp.post_status IN ('publish', 'inherit')\n\t\t\t\tAND\t\tp.post_password = ''\n\t\t\",\n\t\t\t\t$term->taxonomy,\n\t\t\t\t$term->term_id\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/providers\/class-post-type.php","ext":"php","size":16575,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap provider for post types.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap\\Providers;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Sitemap\\Classifier;\nuse RankMath\\Sitemap\\Image_Parser;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post type provider class.\n *\/\nclass Post_Type implements Provider {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds the `home_url()` value to speed up loops.\n\t *\n\t * @var string\n\t *\/\n\tprotected $home_url = null;\n\n\t\/**\n\t * Holds image parser instance.\n\t *\n\t * @var Image_Parser\n\t *\/\n\tprotected $image_parser = null;\n\n\t\/**\n\t * Holds link classifier.\n\t *\n\t * @var Classifier\n\t *\/\n\tprotected $classifier = null;\n\n\t\/**\n\t * Static front page ID.\n\t *\n\t * @var int\n\t *\/\n\tprotected $page_on_front_id = null;\n\n\t\/**\n\t * Posts page ID.\n\t *\n\t * @var int\n\t *\/\n\tprotected $page_for_posts_id = null;\n\n\t\/**\n\t * Check if provider supports given item type.\n\t *\n\t * @param string $type Type string to check for.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function handles_type( $type ) {\n\t\tif (\n\t\t\tfalse === post_type_exists( $type ) ||\n\t\t\t! Helper::get_settings( 'sitemap.pt_' . $type . '_sitemap' ) ||\n\t\t\t( 'attachment' === $type && Helper::get_settings( 'general.attachment_redirect_urls', true ) )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter decision if post type is excluded from the XML sitemap.\n\t\t *\n\t\t * @param bool   $exclude Default false.\n\t\t * @param string $type    Post type name.\n\t\t *\/\n\t\treturn ! $this->do_filter( 'sitemap\/exclude_post_type', false, $type );\n\t}\n\n\t\/**\n\t * Get set of sitemaps index link data.\n\t *\n\t * @param int $max_entries Entries per sitemap.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_index_links( $max_entries ) {\n\t\tglobal $wpdb;\n\n\t\t$post_types          = Helper::get_accessible_post_types();\n\t\t$post_types          = array_filter( $post_types, [ $this, 'handles_type' ] );\n\t\t$last_modified_times = Sitemap::get_last_modified_gmt( $post_types, true );\n\t\t$index               = [];\n\n\t\tforeach ( $post_types as $post_type ) {\n\n\t\t\t$total_count = $this->get_post_type_count( $post_type );\n\t\t\tif ( 0 === $total_count ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$max_pages = 1;\n\t\t\tif ( $total_count > $max_entries ) {\n\t\t\t\t$max_pages = (int) ceil( $total_count \/ $max_entries );\n\t\t\t}\n\n\t\t\t$all_dates = [];\n\t\t\tif ( $max_pages > 1 ) {\n\t\t\t\t$sql = \"\n\t\t\t\tSELECT post_modified_gmt\n\t\t\t\t\tFROM ( SELECT @rownum:=@rownum rownum, $wpdb->posts.post_modified_gmt\n\t\t\t\t\tFROM ( SELECT @rownum:=0 ) r, $wpdb->posts\n\t\t\t\t\t\tWHERE post_status IN ( 'publish', 'inherit' )\n\t\t\t\t\t\tAND post_type = %s\n\t\t\t\t\t\tORDER BY post_modified_gmt ASC\n\t\t\t\t\t)\n\t\t\t\t\tx WHERE rownum %% %d = 0 ORDER BY post_modified_gmt DESC\";\n\n\t\t\t\t$all_dates = DB_Helper::get_col( $wpdb->prepare( $sql, $post_type, $max_entries ) );\n\t\t\t}\n\n\t\t\tfor ( $page_counter = 0; $page_counter < $max_pages; $page_counter++ ) {\n\t\t\t\t$current_page = ( $max_pages > 1 ) ? ( $page_counter + 1 ) : '';\n\t\t\t\t$date         = false;\n\n\t\t\t\tif ( isset( $all_dates[ $page_counter ] ) ) {\n\t\t\t\t\t$date = $all_dates[ $page_counter ];\n\t\t\t\t} elseif ( ! empty( $last_modified_times[ $post_type ] ) ) {\n\t\t\t\t\t$date = $last_modified_times[ $post_type ];\n\t\t\t\t}\n\n\t\t\t\t$item = $this->do_filter(\n\t\t\t\t\t'sitemap\/index\/entry',\n\t\t\t\t\t[\n\t\t\t\t\t\t'loc'     => Router::get_base_url( $post_type . '-sitemap' . $current_page . '.xml' ),\n\t\t\t\t\t\t'lastmod' => $date,\n\t\t\t\t\t],\n\t\t\t\t\t'post',\n\t\t\t\t\t$post_type,\n\t\t\t\t);\n\n\t\t\t\tif ( ! $item ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$index[] = $item;\n\t\t\t}\n\t\t}\n\n\t\treturn $index;\n\t}\n\n\t\/**\n\t * Get set of sitemap link data.\n\t *\n\t * @param string $type         Sitemap type.\n\t * @param int    $max_entries  Entries per sitemap.\n\t * @param int    $current_page Current page of the sitemap.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_sitemap_links( $type, $max_entries, $current_page ) {\n\t\t$links     = [];\n\t\t$steps     = $max_entries;\n\t\t$offset    = ( $current_page > 1 ) ? ( ( $current_page - 1 ) * $max_entries ) : 0;\n\t\t$total     = ( $offset + $max_entries );\n\t\t$typecount = $this->get_post_type_count( $type );\n\n\t\tSitemap::maybe_redirect( $typecount, $max_entries );\n\t\tif ( $total > $typecount ) {\n\t\t\t$total = $typecount;\n\t\t}\n\n\t\tif ( 1 === $current_page ) {\n\t\t\t$links = array_merge( $links, $this->get_first_links( $type ) );\n\t\t}\n\n\t\tif ( 0 === $typecount ) {\n\t\t\treturn $links;\n\t\t}\n\n\t\t$stacked_urls = [];\n\t\twhile ( $total > $offset ) {\n\t\t\t$posts   = $this->get_posts( $type, $steps, $offset );\n\t\t\t$offset += $steps;\n\n\t\t\tif ( empty( $posts ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach ( $posts as $post ) {\n\t\t\t\t$post_id = (int) $post->ID;\n\t\t\t\tif ( ! Sitemap::is_object_indexable( $post_id ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$url = $this->get_url( $post );\n\t\t\t\tif ( ! isset( $url['loc'] ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t\/**\n\t\t\t\t * Filter URL entry before it gets added to the sitemap.\n\t\t\t\t *\n\t\t\t\t * @param array  $url  Array of URL parts.\n\t\t\t\t * @param string $type URL type.\n\t\t\t\t * @param object $user Data object for the URL.\n\t\t\t\t *\/\n\t\t\t\t$url = $this->do_filter( 'sitemap\/entry', $url, 'post', $post );\n\t\t\t\tif ( empty( $url ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$stacked_urls[] = $url['loc'];\n\t\t\t\tif ( $post_id === $this->get_page_for_posts_id() || $post_id === $this->get_page_on_front_id() ) {\n\t\t\t\t\tarray_unshift( $links, $url );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$links[] = $url;\n\t\t\t}\n\n\t\t\tunset( $post, $url );\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Update the query to exclude canonical posts.\n\t *\n\t * @param string $join_filter  The join filter.\n\t * @param string $where_filter The where filter.\n\t * @param array  $post_types   The post types.\n\t *\n\t * @return void\n\t *\/\n\tprivate function maybe_update_query_to_exclude_posts_with_canonical_urls( &$join_filter, &$where_filter, $post_types ) {\n\t\t\/**\n\t\t * Allows to decide if canonical urls should be excluded from the sitemap.\n\t\t *\n\t\t * @param bool $exlude_posts_with_canonical_urls\n\t\t * @param array|string $post_types The post types.\n\t\t *\/\n\t\t$exlude_posts_with_canonical_urls = $this->do_filter( 'sitemap\/exlude_posts_with_canonical_urls', false, $post_types );\n\t\tif ( ! $exlude_posts_with_canonical_urls ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $wpdb;\n\t\t$join_filter  .= \" LEFT JOIN {$wpdb->postmeta} AS pm_canonical ON ( p.ID = pm_canonical.post_id AND pm_canonical.meta_key = 'rank_math_canonical_url' )\";\n\t\t$where_filter .= ' AND pm_canonical.meta_value IS NULL';\n\t}\n\n\t\/**\n\t * Get count of posts for post type.\n\t *\n\t * @param string $post_types Post types to retrieve count for.\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_post_type_count( $post_types ) {\n\t\tglobal $wpdb;\n\n\t\t$posts_to_exclude = 'page' === $post_types ? $this->get_blog_page_id() : '';\n\t\t$post_status      = 'attachment' === $post_types ? [ 'publish', 'inherit' ] : [ 'publish' ];\n\n\t\t\/**\n\t\t * Filter to add a JOIN clause for get_post_type_count(post types) query.\n\t\t *\n\t\t * @param string $join       SQL join clause, defaults to an empty string.\n\t\t * @param array  $post_types Post types.\n\t\t *\/\n\t\t$join_filter = $this->do_filter( 'sitemap\/post_count\/join', '', $post_types );\n\n\t\t\/**\n\t\t * Filter to add a WHERE clause for get_post_type_count(post types) query.\n\t\t *\n\t\t * @param string $where      SQL WHERE query, defaults to an empty string.\n\t\t * @param array  $post_types Post types.\n\t\t *\/\n\t\t$where_filter = $this->do_filter( 'sitemap\/post_count\/where', '', $post_types );\n\n\t\t$this->maybe_update_query_to_exclude_posts_with_canonical_urls( $join_filter, $where_filter, $post_types );\n\n\t\t$sql = \"SELECT COUNT( DISTINCT p.ID ) as count FROM {$wpdb->posts} as p\n\t\t{$join_filter}\n\t\tLEFT JOIN {$wpdb->postmeta} AS pm ON ( p.ID = pm.post_id AND pm.meta_key = 'rank_math_robots' )\n\t\tWHERE (\n\t\t\t( pm.meta_key = 'rank_math_robots' AND pm.meta_value NOT LIKE '%noindex%' ) OR\n\t\t\tpm.post_id IS NULL\n\t\t)\n\t\tAND p.post_type = '{$post_types}' AND p.post_status IN ( '\" . join( \"', '\", esc_sql( $post_status ) ) . \"' ) AND p.post_password = ''\n\t\tAND p.ID != '{$posts_to_exclude}'\n\t\t{$where_filter}\";\n\n\t\treturn (int) DB_Helper::get_var( $sql );\n\t}\n\n\t\/**\n\t * Produces set of links to prepend at start of first sitemap page.\n\t *\n\t * @param string $post_type Post type to produce links for.\n\t *\n\t * @return array\n\t *\/\n\tprotected function get_first_links( $post_type ) {\n\n\t\t$links         = [];\n\t\t$needs_archive = true;\n\n\t\tif ( ! $this->get_page_on_front_id() && ( 'post' === $post_type || 'page' === $post_type ) ) {\n\t\t\t$needs_archive = false;\n\t\t\t$links[]       = [\n\t\t\t\t'loc' => $this->get_home_url(),\n\t\t\t\t'mod' => Sitemap::get_last_modified_gmt( $post_type ),\n\t\t\t];\n\t\t} elseif ( $this->get_page_on_front_id() && 'post' === $post_type && $this->get_page_for_posts_id() ) {\n\t\t\t$needs_archive = false;\n\t\t\t$links[]       = Sitemap::is_object_indexable( $this->get_page_for_posts_id() ) ? [ 'loc' => get_permalink( $this->get_page_for_posts_id() ) ] : '';\n\t\t}\n\n\t\tif ( ! $needs_archive ) {\n\t\t\treturn array_filter( $links );\n\t\t}\n\n\t\t$archive_url = $this->get_post_type_archive_link( $post_type );\n\n\t\t\/**\n\t\t * Filter the URL Rank Math SEO uses in the XML sitemap for this post type archive.\n\t\t *\n\t\t * @param string $archive_url The URL of this archive\n\t\t * @param string $post_type   The post type this archive is for.\n\t\t *\/\n\t\t$archive_url = $this->do_filter( 'sitemap\/post_type_archive_link', $archive_url, $post_type );\n\n\t\tif ( $archive_url ) {\n\t\t\t$links[] = [\n\t\t\t\t'loc' => $archive_url,\n\t\t\t\t'mod' => Sitemap::get_last_modified_gmt( $post_type ),\n\t\t\t];\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Get URL for a post type archive.\n\t *\n\t * @param string $post_type Post type.\n\t *\n\t * @return string|boolean URL or false if it should be excluded.\n\t *\/\n\tprotected function get_post_type_archive_link( $post_type ) {\n\t\t\/\/ Post archive should be excluded if it isn't front page or posts page.\n\t\tif ( 'post' === $post_type && get_option( 'show_on_front' ) !== 'posts' && ! $this->get_page_for_posts_id() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn get_post_type_archive_link( $post_type );\n\t}\n\n\t\/**\n\t * Retrieve set of posts with optimized query routine.\n\t *\n\t * @param array $post_types Post type to retrieve.\n\t * @param int   $count      Count of posts to retrieve.\n\t * @param int   $offset     Starting offset.\n\t *\n\t * @return object[]\n\t *\/\n\tprotected function get_posts( $post_types, $count, $offset ) {\n\t\tglobal $wpdb;\n\n\t\t$posts_to_exclude = 'page' === $post_types ? $this->get_blog_page_id() : '';\n\t\t$post_status      = 'attachment' === $post_types ? [ 'publish', 'inherit' ] : [ 'publish' ];\n\n\t\t\/**\n\t\t * Filter to add a JOIN clause for get_posts(types) query.\n\t\t *\n\t\t * @param string $join       SQL join clause, defaults to an empty string.\n\t\t * @param array  $post_types Post types.\n\t\t *\/\n\t\t$join_filter = $this->do_filter( 'sitemap\/get_posts\/join', '', $post_types );\n\n\t\t\/**\n\t\t * Filter to add a WHERE clause for get_posts(types) query.\n\t\t *\n\t\t * @param string $where      SQL WHERE query, defaults to an empty string.\n\t\t * @param array  $post_types Post types.\n\t\t *\/\n\t\t$where_filter = $this->do_filter( 'sitemap\/get_posts\/where', '', $post_types );\n\n\t\t$this->maybe_update_query_to_exclude_posts_with_canonical_urls( $join_filter, $where_filter, [ $post_types ] );\n\n\t\t$sql = \"\n\t\t\tSELECT l.ID, post_title, post_content, post_name, post_parent, post_author, post_modified_gmt, post_date, post_date_gmt, post_type\n\t\t\tFROM (\n\t\t\t\tSELECT DISTINCT p.ID FROM {$wpdb->posts} as p\n\t\t\t\t{$join_filter}\n\t\t\t\tLEFT JOIN {$wpdb->postmeta} AS pm ON ( p.ID = pm.post_id AND pm.meta_key = 'rank_math_robots' )\n\t\t\t\tWHERE (\n\t\t\t\t\t( pm.meta_key = 'rank_math_robots' AND pm.meta_value NOT LIKE '%noindex%' ) OR\n\t\t\t\t\tpm.post_id IS NULL\n\t\t\t\t)\n\t\t\t\tAND p.post_type = '{$post_types}' AND p.post_status IN ( '\" . join( \"', '\", esc_sql( $post_status ) ) . \"' ) AND p.post_password = ''\n\t\t\t\tAND p.ID != '{$posts_to_exclude}'\n\t\t\t\t{$where_filter}\n\t\t\t\tORDER BY p.post_modified DESC LIMIT %d OFFSET %d\n\t\t\t)\n\t\t\to JOIN {$wpdb->posts} l ON l.ID = o.ID\n\t\t\";\n\n\t\t$posts = DB_Helper::get_results( $wpdb->prepare( $sql, $count, $offset ) );\n\n\t\t$post_ids = [];\n\t\tforeach ( $posts as $post ) {\n\t\t\t$post->post_status = 'publish';\n\t\t\t$post->filter      = 'sample';\n\t\t\t$post_ids[]        = $post->ID;\n\t\t}\n\n\t\tupdate_meta_cache( 'post', $post_ids );\n\n\t\treturn $posts;\n\t}\n\n\t\/**\n\t * Get where clause to query data.\n\t *\n\t * @param array $post_types Post types slug.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_sql_where_clause( $post_types ) {\n\t\tglobal $wpdb;\n\n\t\t$join   = '';\n\t\t$status = \"{$wpdb->posts}.post_status = 'publish'\";\n\n\t\t\/\/ Based on WP_Query->get_posts(). R.\n\t\tif ( in_array( 'attachment', $post_types, true ) ) {\n\t\t\t$join   = \" LEFT JOIN {$wpdb->posts} AS p2 ON ({$wpdb->posts}.post_parent = p2.ID) \";\n\t\t\t$status = \"p2.post_status = 'publish'\";\n\t\t}\n\n\t\t$where_clause = \"\n\t\t{$join}\n\t\tWHERE {$status}\n\t\t\tAND {$wpdb->posts}.post_type IN ( '\" . join( \"', '\", esc_sql( $post_types ) ) . \"' )\n\t\t\tAND {$wpdb->posts}.post_password = ''\n\t\t\";\n\n\t\treturn $where_clause;\n\t}\n\n\t\/**\n\t * Produce array of URL parts for given post object.\n\t *\n\t * @param object $post Post object to get URL parts for.\n\t *\n\t * @return array|boolean\n\t *\/\n\tprotected function get_url( $post ) {\n\t\t$url = [];\n\n\t\t\/**\n\t\t * Filter the post object before it gets added to the sitemap.\n\t\t * This allows you to add custom properties to the post object, or replace it entirely.\n\t\t *\n\t\t * @param object $post Post object.\n\t\t *\/\n\t\t$post = $this->do_filter( 'sitemap\/post_object', $post );\n\n\t\tif ( ! $post ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter the URL Rank Math SEO uses in the XML sitemap.\n\t\t *\n\t\t * Note that only absolute local URLs are allowed as the check after this removes external URLs.\n\t\t *\n\t\t * @param string $url  URL to use in the XML sitemap\n\t\t * @param object $post Post object for the URL.\n\t\t *\/\n\t\t$url['loc'] = $this->do_filter( 'sitemap\/xml_post_url', get_permalink( $post ), $post );\n\n\t\t\/**\n\t\t * Do not include external URLs.\n\t\t *\n\t\t * @see https:\/\/wordpress.org\/plugins\/page-links-to\/ can rewrite permalinks to external URLs.\n\t\t *\/\n\t\tif ( 'external' === $this->get_classifier()->classify( $url['loc'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$modified = max( $post->post_modified_gmt, $post->post_date_gmt );\n\t\tif ( '0000-00-00 00:00:00' !== $modified ) {\n\t\t\t$url['mod'] = $modified;\n\t\t}\n\n\t\t$canonical = Helper::get_post_meta( 'canonical_url', $post->ID );\n\t\tif ( '' !== $canonical && $canonical !== $url['loc'] ) {\n\t\t\t\/*\n\t\t\t * Let's assume that if a canonical is set for this page and it's different from\n\t\t\t * the URL of this post, that page is either already in the XML sitemap OR is on\n\t\t\t * an external site, either way, we shouldn't include it here.\n\t\t\t *\/\n\t\t\treturn false;\n\t\t}\n\n\t\t$url['images'] = ! is_null( $this->get_image_parser() ) ? $this->get_image_parser()->get_images( $post ) : [];\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Get front page ID.\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_page_on_front_id() {\n\t\tif ( is_null( $this->page_on_front_id ) ) {\n\t\t\t$this->page_on_front_id = intval( get_option( 'page_on_front' ) );\n\t\t}\n\n\t\treturn $this->page_on_front_id;\n\t}\n\n\t\/**\n\t * Get page for posts ID.\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_page_for_posts_id() {\n\t\tif ( is_null( $this->page_for_posts_id ) ) {\n\t\t\t$this->page_for_posts_id = intval( get_option( 'page_for_posts' ) );\n\t\t}\n\n\t\treturn $this->page_for_posts_id;\n\t}\n\n\t\/**\n\t * Get the Image Parser.\n\t *\n\t * @return Image_Parser\n\t *\/\n\tprotected function get_image_parser() {\n\t\tif ( is_null( $this->image_parser ) ) {\n\t\t\t$this->image_parser = new Image_Parser();\n\t\t}\n\n\t\treturn $this->image_parser;\n\t}\n\n\t\/**\n\t * Get the link classifier.\n\t *\n\t * @return Classifier\n\t *\/\n\tprotected function get_classifier() {\n\t\tif ( is_null( $this->classifier ) ) {\n\t\t\t$this->classifier = new Classifier( $this->get_home_url() );\n\t\t}\n\n\t\treturn $this->classifier;\n\t}\n\n\t\/**\n\t * Get Home URL.\n\t *\n\t * This has been moved from the constructor because wp_rewrite is not available on plugins_loaded in multisite.\n\t * It will now be requested on need and not on initialization.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_home_url() {\n\t\tif ( is_null( $this->home_url ) ) {\n\t\t\t$this->home_url = user_trailingslashit( get_home_url() );\n\t\t}\n\n\t\treturn $this->home_url;\n\t}\n\n\t\/**\n\t * Get Blog page id.\n\t *\n\t * @return int\n\t *\/\n\tprivate function get_blog_page_id() {\n\t\treturn get_option( 'show_on_front' ) === 'page' && $this->get_page_for_posts_id() ? $this->get_page_for_posts_id() : '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/providers\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-timezone.php","ext":"php","size":1491,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Sitemap date format class.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse DateTime;\nuse Exception;\nuse DateTimeZone;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Timezone.\n *\/\nclass Timezone {\n\n\t\/**\n\t * Format arbitrary UTC datetime string to desired form in site's time zone.\n\t *\n\t * @param string $datetime_string The input datetime string in UTC time zone.\n\t * @param string $format          Date format to use.\n\t *\n\t * @return string\n\t *\/\n\tpublic function format_date( $datetime_string, $format = DATE_W3C ) {\n\t\tif ( empty( $datetime_string ) || false === $this->is_valid_datetime( $datetime_string ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$date_time = new DateTime( $datetime_string, new DateTimeZone( 'UTC' ) );\n\n\t\treturn false === $date_time ? '' : $date_time->format( $format );\n\t}\n\n\t\/**\n\t * Check if a string is a valid datetime.\n\t *\n\t * @param  string $datetime String input to check as valid input for DateTime class.\n\t * @return boolean\n\t *\/\n\tprivate function is_valid_datetime( $datetime ) {\n\t\tif ( substr( $datetime, 0, 1 ) === '-' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\treturn new DateTime( $datetime ) !== false;\n\t\t} catch ( Exception $exc ) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-sitemap-index.php","ext":"php","size":1685,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap index runner class.\n *\n * @since      1.0.42\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Runner;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Sitemap Index class.\n *\/\nclass Sitemap_Index implements Runner {\n\n\tuse Hooker;\n\n\t\/**\n\t * The hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->filter( 'robots_txt', 'add_sitemap_directive', 0, 2 );\n\t\t$this->filter( 'redirect_canonical', 'redirect_canonical' );\n\t}\n\n\t\/**\n\t * Adds the sitemap index to robots.txt.\n\t *\n\t * @param string $output    robots.txt output.\n\t * @param bool   $is_public Whether the site is public or not.\n\t *\n\t * @return string robots.txt output.\n\t *\/\n\tpublic function add_sitemap_directive( $output, $is_public ) {\n\t\tif (\n\t\t\t'0' === $is_public ||\n\t\t\tStr::contains( 'Sitemap:', $output ) ||\n\t\t\tStr::contains( 'sitemap:', $output )\n\t\t) {\n\t\t\treturn $output;\n\t\t}\n\n\t\t$sitemap_url = esc_url( Router::get_base_url( Sitemap::get_sitemap_index_slug() . '.xml' ) );\n\t\treturn $output . \"\\nSitemap: {$sitemap_url}\\n\";\n\t}\n\n\t\/**\n\t * Stop trailing slashes on `sitemap.xml` URLs.\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\n\t * @param string $redirect The redirect URL currently determined.\n\t *\n\t * @return boolean|string $redirect\n\t *\/\n\tpublic function redirect_canonical( $redirect ) {\n\t\tif ( get_query_var( 'sitemap' ) || get_query_var( 'xsl' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $redirect;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-cache.php","ext":"php","size":7281,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Handle sitemap caching and invalidation.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Cache class.\n *\/\nclass Cache {\n\n\t\/**\n\t * Cache mode.\n\t *\n\t * @var string\n\t *\/\n\tprivate $mode = 'db';\n\n\t\/**\n\t * The $wp_filesystem object.\n\t *\n\t * @var object WP_Filesystem\n\t *\/\n\tprivate $wp_filesystem;\n\n\t\/**\n\t * Prefix of the filename for sitemap caches.\n\t *\n\t * @var string\n\t *\/\n\tconst STORAGE_KEY_PREFIX = 'rank_math_';\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->wp_filesystem = Helper::get_filesystem();\n\t\t$this->mode          = $this->is_writable() ? 'file' : 'db';\n\n\t\t\/**\n\t\t * Change sitemap caching mode (can be \"file\" or \"db\").\n\t\t *\/\n\t\t$this->mode = apply_filters( 'rank_math\/sitemap\/cache_mode', $this->mode );\n\t}\n\n\t\/**\n\t * Is the file writable?\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_writable() {\n\t\tif ( is_null( $this->wp_filesystem ) || ! Helper::is_filesystem_direct() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$directory_separator = '\/';\n\t\t$folder_path         = $this->get_cache_directory();\n\t\t$test_file           = $folder_path . $this->get_storage_key();\n\n\t\t\/\/ If folder doesn't exist?\n\t\tif ( ! file_exists( $folder_path ) ) {\n\t\t\t\/\/ Can we create the folder?\n\t\t\t\/\/ returns true if yes and false if not.\n\t\t\t$permissions = ( defined( 'FS_CHMOD_DIR' ) ) ? FS_CHMOD_DIR : 0755;\n\t\t\treturn $this->wp_filesystem->mkdir( $folder_path, $permissions );\n\t\t}\n\n\t\t\/\/ Does the file exist?\n\t\t\/\/ File exists. Is it writable?\n\t\tif ( file_exists( $test_file ) && ! $this->wp_filesystem->is_writable( $test_file ) ) {\n\t\t\t\/\/ Nope, it's not writable.\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Folder exists, but is it actually writable?\n\t\treturn $this->wp_filesystem->is_writable( $folder_path );\n\t}\n\n\t\/**\n\t * Get the sitemap that is cached.\n\t *\n\t * @param  string $type Sitemap type.\n\t * @param  int    $page Page number to retrieve.\n\t * @param  bool   $html Is HTML sitemap.\n\t * @return false|string false on no cache found otherwise sitemap file.\n\t *\/\n\tpublic function get_sitemap( $type, $page, $html = false ) {\n\t\t$filename = $this->get_storage_key( $type, $page, $html );\n\t\tif ( false === $filename || is_null( $this->wp_filesystem ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$path = self::get_cache_directory() . $filename;\n\t\tif ( 'file' === $this->mode\n\t\t\t&& is_a( $this->wp_filesystem, 'WP_Filesystem_Direct' )\n\t\t\t&& $this->wp_filesystem->exists( $path ) ) {\n\t\t\treturn $this->wp_filesystem->get_contents( $path );\n\t\t}\n\n\t\t$filename = \"sitemap_{$type}_$filename\";\n\t\t$sitemap  = get_transient( $filename );\n\t\treturn maybe_unserialize( $sitemap );\n\t}\n\n\t\/**\n\t * Store the sitemap page from cache.\n\t *\n\t * @param  string $type    Sitemap type.\n\t * @param  int    $page    Page number to store.\n\t * @param  string $sitemap Sitemap body to store.\n\t * @param  bool   $html    Is HTML sitemap.\n\t * @return boolean\n\t *\/\n\tpublic function store_sitemap( $type, $page, $sitemap, $html = false ) {\n\t\t$filename = $this->get_storage_key( $type, $page, $html );\n\t\tif ( false === $filename || is_null( $this->wp_filesystem ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( 'file' === $this->mode ) {\n\t\t\t$stored = $this->wp_filesystem->put_contents( self::get_cache_directory() . $filename, $sitemap, FS_CHMOD_FILE );\n\t\t\tif ( true === $stored ) {\n\t\t\t\tself::cached_files( $filename, $type );\n\t\t\t\treturn $stored;\n\t\t\t}\n\t\t}\n\n\t\t$filename = \"sitemap_{$type}_$filename\";\n\t\treturn set_transient( $filename, maybe_serialize( $sitemap ), DAY_IN_SECONDS * 100 );\n\t}\n\n\t\/**\n\t * Get filename for sitemap.\n\t *\n\t * @param  null|string $type The type to get the key for. Null or '1' for index cache.\n\t * @param  int         $page The page of cache to get the key for.\n\t * @param  boolean     $html Whether to add html extension.\n\t * @return boolean|string The key where the cache is stored on. False if the key could not be generated.\n\t *\/\n\tprivate function get_storage_key( $type = null, $page = 1, $html = false ) {\n\t\t$type = is_null( $type ) ? '1' : $type;\n\n\t\t$filename = self::STORAGE_KEY_PREFIX . md5( \"{$type}_{$page}_\" . home_url() ) . '.' . ( $html ? 'html' : 'xml' );\n\n\t\treturn $filename;\n\t}\n\n\t\/**\n\t * Get cache directory.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_cache_directory() {\n\t\t$dir     = wp_upload_dir();\n\t\t$default = $dir['basedir'] . '\/rank-math';\n\n\t\t\/**\n\t\t * Filter XML sitemap cache directory.\n\t\t *\n\t\t * @param string $unsigned Default cache directory\n\t\t *\/\n\t\t$filtered = apply_filters( 'rank_math\/sitemap\/cache_directory', $default );\n\n\t\tif ( ! is_string( $filtered ) || '' === $filtered ) {\n\t\t\t$filtered = $default;\n\t\t}\n\n\t\treturn trailingslashit( $filtered );\n\t}\n\n\t\/**\n\t * Read\/Write cached files.\n\t *\n\t * @param  mixed  $value Pass null to get option,\n\t *                       Pass false to delete option,\n\t *                       Pass value to update option.\n\t * @param  string $type  Sitemap type.\n\t * @return mixed\n\t *\/\n\tpublic static function cached_files( $value = null, $type = '' ) {\n\t\tif ( '' !== $type ) {\n\t\t\t$options           = Helper::option( 'sitemap_cache_files' );\n\t\t\t$options[ $value ] = $type;\n\t\t\treturn Helper::option( 'sitemap_cache_files', $options );\n\t\t}\n\n\t\treturn Helper::option( 'sitemap_cache_files', $value );\n\t}\n\n\t\/**\n\t * Invalidate sitemap cache.\n\t *\n\t * @param null|string $type The type to get the key for. Null for all caches.\n\t *\/\n\tpublic static function invalidate_storage( $type = null ) {\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/invalidate_storage' - Allow developers to disable sitemap cache invalidation.\n\t\t *\/\n\t\tif ( ! apply_filters( 'rank_math\/sitemap\/invalidate_storage', true, $type ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\t\tif ( is_null( $wp_filesystem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$directory = self::get_cache_directory();\n\n\t\tif ( is_null( $type ) ) {\n\t\t\t$wp_filesystem->delete( $directory, true );\n\t\t\twp_mkdir_p( $directory );\n\t\t\tself::clear_transients();\n\t\t\tself::cached_files( false );\n\t\t\tHelper::clear_cache( 'sitemap' );\n\t\t\treturn;\n\t\t}\n\n\t\t$data  = [];\n\t\t$files = self::cached_files();\n\t\tforeach ( $files as $file => $sitemap_type ) {\n\t\t\tif ( $type !== $sitemap_type ) {\n\t\t\t\t$data[ $file ] = $sitemap_type;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$wp_filesystem->delete( $directory . $file );\n\t\t}\n\n\t\tself::clear_transients( $type );\n\t\tself::cached_files( $data );\n\t\tHelper::clear_cache( 'sitemap\/' . $type );\n\n\t\t\/**\n\t\t * Action: 'rank_math\/sitemap\/invalidated_storage' - Runs after sitemap cache invalidation.\n\t\t *\/\n\t\tdo_action( 'rank_math\/sitemap\/invalidated_storage', $type );\n\t}\n\n\t\/**\n\t * Reset ALL transient caches.\n\t *\n\t * @param null|string $type The type to get the key for. Null for all caches.\n\t *\/\n\tprivate static function clear_transients( $type = null ) {\n\n\t\tif ( is_null( $type ) ) {\n\t\t\treturn Database::table( 'options' )\n\t\t\t\t->whereLike( 'option_name', '_transient_sitemap_' )\n\t\t\t\t->delete();\n\t\t}\n\n\t\treturn Database::table( 'options' )\n\t\t\t->whereLike( 'option_name', '_transient_sitemap_' . $type )\n\t\t\t->delete();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-sitemap-xml.php","ext":"php","size":5009,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Render XML output for sitemaps.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Sitemap XML class.\n *\/\nclass Sitemap_XML extends XML {\n\n\tuse Hooker;\n\n\t\/**\n\t * Hold sitemap type.\n\t *\n\t * @var string\n\t *\/\n\tpublic $type;\n\n\t\/**\n\t * Sitemap cache.\n\t *\n\t * @var Cache\n\t *\/\n\tpublic $cache;\n\n\t\/**\n\t * Hold the current page.\n\t *\n\t * @var int\n\t *\/\n\tprivate $current_page = 1;\n\n\t\/**\n\t * Content of the sitemap to output.\n\t *\n\t * @var string\n\t *\/\n\tprotected $sitemap = '';\n\n\t\/**\n\t * Whether or not the XML sitemap was served from cache or not.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $transient = false;\n\n\t\/**\n\t * Holds the stats for the sitemap generation.\n\t *\n\t * @var array\n\t *\/\n\tprivate $stats = [];\n\n\t\/**\n\t * The Constructor.\n\t *\n\t * @param string $type Sitemap type.\n\t *\/\n\tpublic function __construct( $type ) {\n\t\tremove_all_actions( 'widgets_init' );\n\t\t$this->filter( 'user_has_cap', 'filter_user_has_cap' );\n\n\t\t$this->type  = $type;\n\t\t$this->cache = new Cache();\n\t\t$this->set_n( get_query_var( 'sitemap_n' ) );\n\t\t$this->output();\n\t}\n\n\t\/**\n\t * Generate sitemap now.\n\t *\/\n\tprivate function output() {\n\t\tglobal $wp_query;\n\n\t\t$this->init_stats();\n\t\tif ( ! $this->has_sitemap_in_cache() ) {\n\t\t\t$this->build_sitemap();\n\t\t}\n\n\t\tif ( empty( $this->sitemap ) ) {\n\t\t\t$wp_query->set_404();\n\t\t\tstatus_header( 404 );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->send_headers();\n\t\techo $this->sitemap; \/\/ phpcs:ignore\n\t\t$this->output_credits();\n\t\tremove_all_actions( 'wp_footer' );\n\t\tdie;\n\t}\n\n\t\/**\n\t * Output XML credits.\n\t *\/\n\tprivate function output_credits() {\n\t\tif ( ! $this->do_filter( 'sitemap\/remove_credit', false ) ) {\n\t\t\techo \"\\n<!-- XML Sitemap generated by Rank Math SEO Plugin (c) Rank Math - rankmath.com -->\";\n\t\t}\n\n\t\tif ( ! WP_DEBUG_DISPLAY || ! WP_DEBUG ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$time     = timer_stop( 0, 3 );\n\t\t$sql      = get_num_queries() - $this->stats['query'];\n\t\t$memory   = size_format( memory_get_usage() - $this->stats['memory'], 2 );\n\t\t$template = $this->transient ? 'Served from cache in %s second(s) (Memory usage: %s)' : 'This sitemap was originally generated in %s second(s). (Memory usage: %s) - %s queries';\n\t\t$template = sprintf( $template, $time, $memory, $sql );\n\t\techo \"\\n<!-- {$template} -->\"; \/\/ phpcs:ignore\n\n\t\tif ( defined( 'SAVEQUERIES' ) && SAVEQUERIES ) {\n\t\t\t$queries = print_r( $GLOBALS['wpdb']->queries, true ); \/\/ phpcs:ignore\n\t\t\techo \"\\n<!-- {$queries} -->\"; \/\/ phpcs:ignore\n\t\t}\n\t}\n\n\t\/**\n\t * Try to get the sitemap from cache.\n\t *\n\t * @return boolean If the sitemap has been retrieved from cache.\n\t *\/\n\tprivate function has_sitemap_in_cache() {\n\t\t$this->transient = false;\n\t\tif ( true !== Sitemap::is_cache_enabled() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->sitemap = $this->cache->get_sitemap( $this->type, $this->current_page );\n\n\t\tif ( ! empty( $this->sitemap ) ) {\n\t\t\t$this->transient = true;\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ No cache was found, refresh it because cache is enabled.\n\t\t$this->build_sitemap();\n\t\tif ( ! empty( $this->sitemap ) ) {\n\t\t\treturn $this->cache->store_sitemap( $this->type, $this->current_page, $this->sitemap );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Attempts to build the requested sitemap.\n\t *\/\n\tpublic function build_sitemap() {\n\t\t$generator     = new Generator();\n\t\t$this->sitemap = $generator->get_output( $this->type, $this->current_page );\n\t}\n\n\t\/**\n\t * Set the sitemap current page to allow creating partial sitemaps with wp-cli\n\t * in a one-off process.\n\t *\n\t * @param integer $current_page The part that should be generated.\n\t *\/\n\tpublic function set_n( $current_page ) {\n\t\tif ( ! empty( $current_page ) && is_scalar( $current_page ) ) {\n\t\t\t$this->maybe_redirect( $current_page );\n\t\t\t$this->current_page = max( intval( $current_page ), 1 );\n\t\t}\n\t}\n\n\t\/**\n\t * Inits building some sitemap generation stats.\n\t *\/\n\tprivate function init_stats() {\n\t\ttimer_start();\n\t\t$this->stats['query']  = get_num_queries();\n\t\t$this->stats['memory'] = memory_get_usage();\n\t}\n\n\t\/**\n\t * Redirect page if $current_page has leading zeros.\n\t *\n\t * @param  mixed $current_page The page number.\n\t * @return void\n\t *\/\n\tprivate function maybe_redirect( $current_page ) {\n\t\t\/\/ Redirect when there are only zeros.\n\t\tif ( '' !== $current_page && intval( $current_page ) < 1 ) {\n\t\t\tHelper::redirect( preg_replace( '\/0+\\.xml$\/', '.xml', Helper::get_current_page_url() ) );\n\t\t\tdie();\n\t\t}\n\n\t\t\/\/ Redirect when there are leading zeros.\n\t\t$zeros_stripped = ltrim( $current_page, '0' );\n\t\tif ( (string) $zeros_stripped !== (string) $current_page ) {\n\t\t\tHelper::redirect( preg_replace( '\/' . preg_quote( $current_page, '\/' ) . '\\.xml$\/', $zeros_stripped . '.xml', Helper::get_current_page_url() ) );\n\t\t\tdie();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-admin.php","ext":"php","size":15334,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Sitemap module admin side functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Module\\Base;\nuse RankMath\\Admin\\Register_Options_Page;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin extends Base {\n\n\tuse Ajax;\n\n\t\/**\n\t * Module ID.\n\t *\n\t * @var string\n\t *\/\n\tpublic $id = '';\n\n\t\/**\n\t * Module directory.\n\t *\n\t * @var string\n\t *\/\n\tpublic $directory = '';\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'        => 'sitemap',\n\t\t\t\t'directory' => $directory,\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\t$this->action( 'init', 'register_setting_page', 999 );\n\t\t$this->action( 'admin_footer', 'admin_scripts' );\n\t\t$this->filter( 'rank_math\/settings\/sitemap', 'post_type_settings' );\n\t\t$this->filter( 'rank_math\/settings\/sitemap', 'taxonomy_settings' );\n\n\t\t\/\/ Attachment.\n\t\t$this->filter( 'media_send_to_editor', 'media_popup_html', 10, 2 );\n\n\t\tif ( Helper::has_cap( 'sitemap' ) ) {\n\t\t\t$this->filter( 'attachment_fields_to_edit', 'media_popup_fields', 20, 2 );\n\t\t\t$this->filter( 'attachment_fields_to_save', 'media_popup_fields_save', 20, 2 );\n\t\t}\n\n\t\t$this->ajax( 'remove_nginx_notice', 'remove_nginx_notice' );\n\t}\n\n\t\/**\n\t * Register setting page.\n\t *\/\n\tpublic function register_setting_page() {\n\t\t$sitemap_url = Router::get_base_url( Sitemap::get_sitemap_index_slug() . '.xml' );\n\n\t\t$tabs = [\n\t\t\t'general' => [\n\t\t\t\t'icon'      => 'rm-icon rm-icon-settings',\n\t\t\t\t'title'     => esc_html__( 'General', 'rank-math' ),\n\t\t\t\t'file'      => $this->directory . '\/settings\/general.php',\n\t\t\t\t'desc'      => esc_html__( 'This tab contains General settings related to the XML sitemaps.', 'rank-math' ) . ' <a href=\"' . KB::get( 'sitemap-general', 'Options Panel Sitemap General Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>',\n\t\t\t\t\/* translators: sitemap url *\/\n\t\t\t\t'after_row' => $this->get_notice_start() . sprintf( esc_html__( 'Your sitemap index can be found here: %s', 'rank-math' ), '<a href=\"' . $sitemap_url . '\" target=\"_blank\">' . $sitemap_url . '<\/a>' ) . '<\/p><\/div>' . $this->get_nginx_notice(),\n\t\t\t\t'json'      => [\n\t\t\t\t\t'sitemapUrl'   => $sitemap_url,\n\t\t\t\t\t'nginxNotice'  => $this->get_nginx_notice(),\n\t\t\t\t\t'isWPMLActive' => class_exists( 'SitePress' ),\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\t$rank_math_sitemap_page = Helper::get_settings( 'sitemap.html_sitemap_page' );\n\t\tif ( $rank_math_sitemap_page ) {\n\t\t\t$rank_math_sitemap_page = [\n\t\t\t\t'id'   => $rank_math_sitemap_page,\n\t\t\t\t'name' => get_the_title( $rank_math_sitemap_page ),\n\t\t\t\t'url'  => get_permalink( $rank_math_sitemap_page ),\n\t\t\t];\n\t\t}\n\n\t\t$tabs['html_sitemap'] = [\n\t\t\t'icon'    => 'rm-icon rm-icon-sitemap',\n\t\t\t'title'   => esc_html__( 'HTML Sitemap', 'rank-math' ),\n\t\t\t'file'    => $this->directory . '\/settings\/html-sitemap.php',\n\t\t\t'desc'    => esc_html__( 'This tab contains settings related to the HTML sitemap.', 'rank-math' ) . ' <a href=\"' . KB::get( 'sitemap-general', 'Options Panel Sitemap HTML Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>',\n\t\t\t'classes' => 'html-sitemap',\n\t\t\t'json'    => [\n\t\t\t\t'htmlSitemapPage' => $rank_math_sitemap_page,\n\t\t\t],\n\t\t];\n\n\t\tif ( Helper::is_author_archive_indexable() ) {\n\t\t\t$roles   = Helper::get_roles();\n\t\t\t$default = $roles;\n\t\t\tunset( $default['administrator'], $default['editor'], $default['author'] );\n\t\t\t$tabs['authors'] = [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-users',\n\t\t\t\t'title' => esc_html__( 'Authors', 'rank-math' ),\n\t\t\t\t\/* translators: Learn more link. *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Set the sitemap options for author archive pages. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'configure-sitemaps', 'Options Panel Sitemap Authors Tab' ) . '#authors\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'file'  => $this->directory . '\/settings\/authors.php',\n\t\t\t\t'json'  => [\n\t\t\t\t\t'roles'        => $roles,\n\t\t\t\t\t'defaultRoles' => array_keys( $default ),\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\t$tabs = $this->do_filter( 'settings\/sitemap', $tabs );\n\n\t\tnew Register_Options_Page(\n\t\t\t[\n\t\t\t\t'key'        => 'rank-math-options-sitemap',\n\t\t\t\t'title'      => esc_html__( 'Sitemap Settings', 'rank-math' ),\n\t\t\t\t'menu_title' => esc_html__( 'Sitemap Settings', 'rank-math' ),\n\t\t\t\t'capability' => 'rank_math_sitemap',\n\t\t\t\t'folder'     => 'titles',\n\t\t\t\t'tabs'       => $tabs,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add post type tabs in the Sitemap Settings options panel.\n\t *\n\t * @param array $tabs Hold tabs for the options panel.\n\t *\n\t * @return array\n\t *\/\n\tpublic function post_type_settings( $tabs ) {\n\t\t$icons  = Helper::choices_post_type_icons();\n\t\t$things = [\n\t\t\t'attachment' => esc_html__( 'attachments', 'rank-math' ),\n\t\t\t'product'    => esc_html__( 'your product pages', 'rank-math' ),\n\t\t];\n\t\t$urls   = [\n\t\t\t'post'       => KB::get( 'sitemap-post', 'Options Panel Sitemap Posts Tab' ),\n\t\t\t'page'       => KB::get( 'sitemap-page', 'Options Panel Sitemap Page Tab' ),\n\t\t\t'attachment' => KB::get( 'sitemap-media', 'Options Panel Sitemap Attachments Tab' ),\n\t\t\t'product'    => KB::get( 'sitemap-product', 'Options Panel Sitemap Product Tab' ),\n\t\t];\n\n\t\t\/\/ Post type label seprator.\n\t\t$tabs['p_types'] = [\n\t\t\t'title' => esc_html__( 'Post Types:', 'rank-math' ),\n\t\t\t'type'  => 'seprator',\n\t\t];\n\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\t$object      = get_post_type_object( $post_type );\n\t\t\t$sitemap_url = Router::get_base_url( $object->name . '-sitemap.xml' );\n\t\t\t$notice_end  = '<\/p><div class=\"rank-math-cmb-dependency hidden\" data-relation=\"or\"><span class=\"hidden\" data-field=\"pt_' . $post_type . '_sitemap\" data-comparison=\"=\" data-value=\"on\"><\/span><\/div><\/div>';\n\t\t\t$name        = strtolower( $object->label );\n\n\t\t\t\/* translators: Post Type label *\/\n\t\t\t$thing = isset( $things[ $post_type ] ) ? $things[ $post_type ] : sprintf( __( 'single %s', 'rank-math' ), $name );\n\t\t\t$url   = isset( $urls[ $post_type ] ) ? $urls[ $post_type ] : KB::get( 'configure-sitemaps' );\n\n\t\t\t$tabs[ 'sitemap-post-type-' . $object->name ] = [\n\t\t\t\t'title'     => 'attachment' === $post_type ? esc_html__( 'Attachments', 'rank-math' ) : $object->label,\n\t\t\t\t'icon'      => isset( $icons[ $object->name ] ) ? $icons[ $object->name ] : $icons['default'],\n\t\t\t\t\/* translators: %1$s: thing, %2$s: Learn more link. *\/\n\t\t\t\t'desc'      => sprintf( esc_html__( 'Change Sitemap settings of %1$s. %2$s.', 'rank-math' ), $thing, '<a href=\"' . $url . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'post_type' => $object->name,\n\t\t\t\t'file'      => $this->directory . '\/settings\/post-types.php',\n\t\t\t\t\/* translators: Post Type Sitemap Url *\/\n\t\t\t\t'after_row' => $this->get_notice_start() . sprintf( esc_html__( 'Sitemap URL: %s', 'rank-math' ), '<a href=\"' . $sitemap_url . '\" target=\"_blank\">' . $sitemap_url . '<\/a>' ) . $notice_end,\n\t\t\t\t'json'      => [\n\t\t\t\t\t'isRedirectAttachment' => Helper::get_settings( 'general.attachment_redirect_urls', false ),\n\t\t\t\t\t$object->name          => [\n\t\t\t\t\t\t'sitemapUrl' => $sitemap_url,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t];\n\n\t\t\tif ( 'attachment' === $post_type ) {\n\t\t\t\t$tabs[ 'sitemap-post-type-' . $object->name ]['after_row'] = $this->get_notice_start() . esc_html__( 'Please note that this will add the attachment page URLs to the sitemap, not direct image URLs.', 'rank-math' ) . $notice_end;\n\t\t\t\t$tabs[ 'sitemap-post-type-' . $object->name ]['classes']   = 'rank-math-advanced-option';\n\t\t\t}\n\t\t}\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Add taxonomy tabs in the Sitemap Settings options panel.\n\t *\n\t * @param array $tabs Hold tabs for the options panel.\n\t *\n\t * @return array\n\t *\/\n\tpublic function taxonomy_settings( $tabs ) {\n\t\t$icons = Helper::choices_taxonomy_icons();\n\n\t\t\/\/ Taxonomy label seprator.\n\t\t$tabs['t_types'] = [\n\t\t\t'title' => esc_html__( 'Taxonomies:', 'rank-math' ),\n\t\t\t'type'  => 'seprator',\n\t\t];\n\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy ) {\n\t\t\tif ( 'post_format' === $taxonomy->name ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$hash_links = [\n\t\t\t\t'category'    => '#categories',\n\t\t\t\t'post_tag'    => '#tags',\n\t\t\t\t'product_cat' => '#product-categories',\n\t\t\t\t'product_tag' => '#product-tags',\n\t\t\t];\n\n\t\t\t$sitemap_url = Router::get_base_url( $taxonomy->name . '-sitemap.xml' );\n\t\t\t$notice_end  = '<\/p><div class=\"rank-math-cmb-dependency hidden\" data-relation=\"or\"><span class=\"hidden\" data-field=\"tax_' . $taxonomy->name . '_sitemap\" data-comparison=\"=\" data-value=\"on\"><\/span><\/div><\/div>';\n\n\t\t\t$taxonomy_name = strtolower( $taxonomy->name );\n\t\t\t$url           = isset( $hash_links[ $taxonomy_name ] ) ? KB::get( 'configure-sitemaps', 'Options Panel Sitemap ' . $taxonomy->labels->name . ' Tab' ) . $hash_links[ $taxonomy_name ] : KB::get( 'configure-sitemaps' );\n\t\t\tswitch ( $taxonomy->name ) {\n\t\t\t\tcase 'product_cat':\n\t\t\t\tcase 'product_tag':\n\t\t\t\t\t\/* translators: Taxonomy singular label *\/\n\t\t\t\t\t$thing = sprintf( __( 'your product %s pages', 'rank-math' ), strtolower( $taxonomy->labels->singular_name ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t\/* translators: Taxonomy singular label *\/\n\t\t\t\t\t$thing = sprintf( __( '%s archives', 'rank-math' ), strtolower( $taxonomy->labels->singular_name ) );\n\t\t\t\t\t$name  = strtolower( $taxonomy->labels->name );\n\t\t\t}\n\n\t\t\t$tabs[ 'sitemap-taxonomy-' . $taxonomy->name ] = [\n\t\t\t\t'icon'      => isset( $icons[ $taxonomy->name ] ) ? $icons[ $taxonomy->name ] : $icons['default'],\n\t\t\t\t'title'     => $taxonomy->label,\n\t\t\t\t\/* translators: %1$s: thing, %2$s: Learn more link. *\/\n\t\t\t\t'desc'      => sprintf( esc_html__( 'Change Sitemap settings of %1$s. %2$s.', 'rank-math' ), $thing, '<a href=\"' . $url . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'taxonomy'  => $taxonomy->name,\n\t\t\t\t'file'      => $this->directory . '\/settings\/taxonomies.php',\n\t\t\t\t\/* translators: Taxonomy Sitemap Url *\/\n\t\t\t\t'after_row' => $this->get_notice_start() . sprintf( esc_html__( 'Sitemap URL: %s', 'rank-math' ), '<a href=\"' . $sitemap_url . '\" target=\"_blank\">' . $sitemap_url . '<\/a>' ) . $notice_end,\n\t\t\t\t'json'      => [\n\t\t\t\t\t$taxonomy->name => [\n\t\t\t\t\t\t'sitemapUrl' => $sitemap_url,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Adds new \"exclude from sitemap\" checkbox to the media popup in the post editor.\n\t *\n\t * @param array  $form_fields Default form fields.\n\t * @param object $post        Current post.\n\t *\n\t * @return array New form fields\n\t *\/\n\tpublic function media_popup_fields( $form_fields, $post ) {\n\t\t$exclude   = get_post_meta( $post->ID, 'rank_math_exclude_sitemap', true );\n\t\t$checkbox  = '<label><input type=\"checkbox\" name=\"attachments[' . $post->ID . '][rank_math_media_exclude_sitemap]\" ' . checked( $exclude, true, 0 ) . ' \/> ';\n\t\t$checkbox .= esc_html__( 'Exclude this attachment from sitemap', 'rank-math' ) . '<\/label>';\n\n\t\t$form_fields['rank_math_exclude_sitemap'] = [ 'tr' => \"\\t\\t<tr><td><\/td><td>$checkbox<\/td><\/tr>\\n\" ];\n\n\t\treturn $form_fields;\n\t}\n\n\t\/**\n\t * Saves new \"exclude from sitemap\" field as post meta for the attachment.\n\t *\n\t * @param array $post       Attachment ID.\n\t * @param array $attachment Attachment data.\n\t *\n\t * @return array Post\n\t *\/\n\tpublic function media_popup_fields_save( $post, $attachment ) {\n\n\t\tif ( isset( $attachment['rank_math_media_exclude_sitemap'] ) ) {\n\t\t\tupdate_post_meta( $post['ID'], 'rank_math_exclude_sitemap', true );\n\t\t} else {\n\t\t\tdelete_post_meta( $post['ID'], 'rank_math_exclude_sitemap' );\n\t\t}\n\n\t\tCache_Watcher::invalidate_post( $post['ID'] );\n\n\t\treturn $post;\n\t}\n\n\t\/**\n\t * Adds the \"data-sitemapexclude\" HTML attribute to the img tag in the post\n\t * editor when necessary.\n\t *\n\t * @param string $html          Original img HTML tag.\n\t * @param int    $attachment_id Attachment ID.\n\t *\n\t * @return string New img HTML tag.\n\t *\/\n\tpublic function media_popup_html( $html, $attachment_id ) {\n\t\t$post = get_post( $attachment_id );\n\t\tif ( Str::starts_with( 'image', $post->post_mime_type ) && get_post_meta( $attachment_id, 'rank_math_exclude_sitemap', true ) ) {\n\t\t\t$html = str_replace( ' class=\"', ' data-sitemapexclude=\"true\" class=\"', $html );\n\t\t}\n\t\treturn $html;\n\t}\n\n\t\/**\n\t * Remove Sitemap nginx notice.\n\t *\n\t * @since 1.0.73\n\t *\/\n\tpublic function remove_nginx_notice() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'sitemap' );\n\t\tupdate_option( 'rank_math_remove_nginx_notice', true, false );\n\t\t$this->success();\n\t}\n\n\t\/**\n\t * Get opening tags for the notice HTML.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_notice_start() {\n\t\treturn '<div class=\"notice notice-alt notice-info info inline rank-math-notice\"><p>';\n\t}\n\n\t\/**\n\t * Get nginx notice.\n\t *\n\t * @since 1.0.41\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_nginx_notice() {\n\t\tif ( 'rank-math-options-sitemap' !== Param::get( 'page' ) || empty( Param::server( 'SERVER_SOFTWARE' ) ) || get_option( 'rank_math_remove_nginx_notice' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$server_software = explode( '\/', Param::server( 'SERVER_SOFTWARE' ) );\n\t\tif ( ! in_array( 'nginx', array_map( 'strtolower', $server_software ), true ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$sitemap_base = Router::get_sitemap_base() ? Router::get_sitemap_base() : '';\n\n\t\t$message = sprintf(\n\t\t\t\/* Translators: the placeholder is for the sitemap base url. *\/\n\t\t\t__( 'Since you are using an NGINX server, you may need to add the following code to your %s <strong>if your Sitemap pages are not loading<\/strong>. If you are unsure how to do it, please contact your hosting provider.', 'rank-math' ),\n\t\t\t'<a href=\"https:\/\/help.dreamhost.com\/hc\/en-us\/articles\/216455077-Nginx-configuration-file-locations\/?utm_campaign=Rank+Math\" target=\"_blank\">' . __( 'configuration file', 'rank-math' ) . '<\/a>'\n\t\t);\n\n\t\treturn '<div class=\"sitemap-nginx-notice notice notice-alt notice-warning rank-math-notice\">' .\n\t\t'<p>' . $message .\n\t\t\t' <a href=\"#\"><span class=\"show\">' . __( 'Click here to see the code.', 'rank-math' ) . '<\/span><span class=\"hide\">' . __( 'Hide', 'rank-math' ) . '<\/span><\/a>\n\t\t\t<a href=\"#\" class=\"sitemap-close-notice\">' . __( 'I already added', 'rank-math' ) . '<\/a>\n\t\t<\/p>\n <pre>\n # START Nginx Rewrites for Rank Math Sitemaps\n rewrite ^\/' . $sitemap_base . Sitemap::get_sitemap_index_slug() . '\\\\.xml$ \/index.php?sitemap=1 last;\n rewrite ^\/' . $sitemap_base . '([^\/]+?)-sitemap([0-9]+)?.xml$ \/index.php?sitemap=$1&sitemap_n=$2 last;\n # END Nginx Rewrites for Rank Math Sitemaps\n <\/pre>\n\t\t <\/div>';\n\t}\n\n\t\/**\n\t * Add some inline JS for the sitemap settings admin page.\n\t *\/\n\tpublic function admin_scripts() {\n\t\tif ( 'rank-math-options-sitemap' !== Param::get( 'page' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t?>\n\t\t<script>\n\t\t\tjQuery( function( $ ) {\n\t\t\t\t$( '.cmb2-id-html-sitemap-seo-titles input' ).on( 'change', function() {\n\t\t\t\t\tif ( 'seo_titles' === $( this ).filter(':checked').val() ) {\n\t\t\t\t\t\t$( '#html_sitemap_sort option[value=\"alphabetical\"]' ).prop( 'disabled', true );\n\t\t\t\t\t\tif ( $( '#html_sitemap_sort option:selected' ).prop( 'disabled' ) ) {\n\t\t\t\t\t\t\t$( '#html_sitemap_sort option:first' ).prop( 'selected', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$( '#html_sitemap_sort option[value=\"alphabetical\"]' ).prop( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} ).trigger( 'change' );\n\t\t\t} );\n\t\t<\/script>\n\t\t<?php\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/settings\/taxonomies.php","ext":"php","size":1405,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Sitemap settings - taxonomy tabs.\n *\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$taxonomy_name = $tab['taxonomy'];\n$prefix        = \"tax_{$taxonomy_name}_\";\n$is_enabled    = 'category' === $taxonomy_name ? 'on' : 'off';\n\n$cmb->add_field(\n\t[\n\t\t'id'      => $prefix . 'sitemap',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include in Sitemap', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include archive pages for terms of this taxonomy in the XML sitemap.', 'rank-math' ),\n\t\t'default' => $is_enabled,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => $prefix . 'html_sitemap',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include in HTML Sitemap', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include archive pages for terms of this taxonomy in the HTML sitemap.', 'rank-math' ),\n\t\t'default' => $is_enabled,\n\t\t'classes' => [\n\t\t\t'rank-math-html-sitemap',\n\t\t\t! Helper::get_settings( 'sitemap.html_sitemap' ) ? 'hidden' : '',\n\t\t],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => $prefix . 'include_empty',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include Empty Terms', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include archive pages of terms that have no posts associated.', 'rank-math' ),\n\t\t'default' => 'off',\n\t\t'dep'     => [ [ $prefix . 'sitemap', 'on' ] ],\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/settings\/post-types.php","ext":"php","size":2238,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Sitemap settings - post type tabs.\n *\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$attributes        = [];\n$current_post_type = $tab['post_type'];\n$prefix            = \"pt_{$current_post_type}_\";\n\nif ( 'attachment' === $current_post_type && Helper::get_settings( 'general.attachment_redirect_urls', true ) ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'attachment_redirect_urls_notice',\n\t\t\t'type'    => 'notice',\n\t\t\t'what'    => 'warning',\n\t\t\t\/* translators: The settings page link *\/\n\t\t\t'content' => sprintf( __( 'To configure meta tags for your media attachment pages, you need to first %s to parent.', 'rank-math' ), '<a href=\"' . esc_url( Helper::get_settings_url( 'general', 'links' ) ) . '\">' . esc_html__( 'disable redirect attachments', 'rank-math' ) . '<\/a>' ),\n\t\t]\n\t);\n\t$attributes['disabled'] = 'disabled';\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'         => $prefix . 'sitemap',\n\t\t'type'       => 'toggle',\n\t\t'name'       => esc_html__( 'Include in Sitemap', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Include this post type in the XML sitemap.', 'rank-math' ),\n\t\t'default'    => 'attachment' === $current_post_type ? 'off' : 'on',\n\t\t'attributes' => $attributes,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => $prefix . 'html_sitemap',\n\t\t'type'       => 'toggle',\n\t\t'name'       => esc_html__( 'Include in HTML Sitemap', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Include this post type in the HTML sitemap if it\\'s enabled.', 'rank-math' ),\n\t\t'default'    => 'attachment' === $current_post_type ? 'off' : 'on',\n\t\t'attributes' => $attributes,\n\t\t'classes'    => [\n\t\t\t'rank-math-html-sitemap',\n\t\t\t! Helper::get_settings( 'sitemap.html_sitemap' ) ? 'hidden' : '',\n\t\t],\n\t]\n);\n\nif ( 'attachment' !== $current_post_type ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => $prefix . 'image_customfields',\n\t\t\t'type'    => 'textarea_small',\n\t\t\t'name'    => esc_html__( 'Image Custom Fields', 'rank-math' ),\n\t\t\t'desc'    => esc_html__( 'Insert custom field (post meta) names which contain image URLs to include them in the sitemaps. Add one per line.', 'rank-math' ),\n\t\t\t'dep'     => [ [ $prefix . 'sitemap', 'on' ] ],\n\t\t\t'classes' => 'rank-math-advanced-option',\n\t\t]\n\t);\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/settings\/authors.php","ext":"php","size":2249,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Sitemap settings - Authors tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$roles   = Helper::get_roles();\n$default = $roles;\nunset( $default['administrator'], $default['editor'], $default['author'] );\n\n$dep = [\n\t'relation' => 'OR',\n\t[ 'authors_sitemap', 'on' ],\n\t[ 'authors_html_sitemap', 'on' ],\n];\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'authors_sitemap',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include in Sitemap', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include author archives in the XML sitemap.', 'rank-math' ),\n\t\t'default' => 'on',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'authors_html_sitemap',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include in HTML Sitemap', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include author archives in the HTML sitemap if it\\'s enabled.', 'rank-math' ),\n\t\t'default' => 'on',\n\t\t'classes' => [\n\t\t\t'rank-math-html-sitemap',\n\t\t\t! Helper::get_settings( 'sitemap.html_sitemap' ) ? 'hidden' : '',\n\t\t],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'include_authors_without_posts',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include Authors Without Posts', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Enable this option to include authors in the sitemap even if they have not created any posts. This ensures all author archives are listed, regardless of content availability.', 'rank-math' ),\n\t\t'default' => 'off',\n\t\t'classes' => 'rank-math-advanced-option cmb2-top-border',\n\t\t'dep'     => $dep,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'                => 'exclude_roles',\n\t\t'type'              => 'multicheck',\n\t\t'name'              => esc_html__( 'Exclude User Roles', 'rank-math' ),\n\t\t'desc'              => esc_html__( 'Selected roles will be excluded from the XML &amp; HTML sitemaps.', 'rank-math' ),\n\t\t'options'           => $roles,\n\t\t'default'           => $default,\n\t\t'select_all_button' => false,\n\t\t'dep'               => $dep,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'exclude_users',\n\t\t'type' => 'text',\n\t\t'name' => esc_html__( 'Exclude Users', 'rank-math' ),\n\t\t'desc' => esc_html__( 'Add user IDs, separated by commas, to exclude them from the sitemap.', 'rank-math' ),\n\t\t'dep'  => $dep,\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/settings\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/settings\/html-sitemap.php","ext":"php","size":4343,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Sitemap settings - HTML Sitemap tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'html_sitemap',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'HTML Sitemap', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Enable the HTML sitemap.', 'rank-math' ),\n\t\t'default' => 'off',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'html_sitemap_display',\n\t\t'type'    => 'radio_inline',\n\t\t'name'    => esc_html__( 'Display Format', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Choose how you want to display the HTML sitemap.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'shortcode' => esc_html__( 'Shortcode', 'rank-math' ),\n\t\t\t'page'      => esc_html__( 'Page', 'rank-math' ),\n\t\t],\n\t\t'default' => 'shortcode',\n\t\t'dep'     => [ [ 'html_sitemap', 'on' ] ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'html_sitemap_shortcode',\n\t\t'type'       => 'text',\n\t\t'name'       => esc_html__( 'Shortcode', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Use this shortcode to display the HTML sitemap.', 'rank-math' ),\n\t\t'default'    => '[rank_math_html_sitemap]',\n\t\t'dep'        => [\n\t\t\t'relation' => 'AND',\n\t\t\t[ 'html_sitemap', 'on' ],\n\t\t\t[ 'html_sitemap_display', 'shortcode' ],\n\t\t],\n\t\t'classes'    => 'rank-math-code',\n\t\t'attributes' => [\n\t\t\t'disabled' => 'disabled',\n\t\t],\n\t]\n);\n\n$rank_math_sitemap_page         = Helper::get_settings( 'sitemap.html_sitemap_page' );\n$rank_math_sitemap_page_options = [ '' => __( 'Select Page', 'rank-math' ) ];\n$rank_math_sitemap_page_after   = '<p class=\"rank-math-selected-page-message hidden\">' . esc_html__( 'Selected page: ', 'rank-math' ) . '<span class=\"rank-math-selected-page\"><\/span><\/p>';\n\nif ( $rank_math_sitemap_page ) {\n\t$rank_math_sitemap_page_options[ $rank_math_sitemap_page ] = get_the_title( $rank_math_sitemap_page );\n\n\t$rank_math_sitemap_page_after = '<p class=\"rank-math-selected-page-message\">' . sprintf(\n\t\t\/* translators: link to the selected page *\/\n\t\t__( 'Selected page: <a href=\"%s\" target=\"_blank\" class=\"rank-math-selected-page\">%s<\/a>', 'rank-math' ), \/\/ phpcs:ignore\n\t\tget_permalink( $rank_math_sitemap_page ),\n\t\tget_permalink( $rank_math_sitemap_page )\n\t) . '<\/p>';\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'html_sitemap_page',\n\t\t'type'       => 'select',\n\t\t'name'       => esc_html__( 'Page', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Select the page to display the HTML sitemap. Once the settings are saved, the sitemap will be displayed below the content of the selected page.', 'rank-math' ),\n\t\t'options'    => $rank_math_sitemap_page_options,\n\t\t'dep'        => [\n\t\t\t'relation' => 'AND',\n\t\t\t[ 'html_sitemap', 'on' ],\n\t\t\t[ 'html_sitemap_display', 'page' ],\n\t\t],\n\t\t'after'      => $rank_math_sitemap_page_after,\n\t\t'attributes' => [\n\t\t\t'data-placeholder' => esc_html__( 'Select a page', 'rank-math' ),\n\t\t\t'data-s2-pages'    => 'true',\n\t\t],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'html_sitemap_sort',\n\t\t'type'    => 'select',\n\t\t'name'    => esc_html__( 'Sort By', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Choose how you want to sort the items in the HTML sitemap.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t\/\/ Published Date, Modified Date, Alphabetical, Post ID.\n\t\t\t'published'    => esc_html__( 'Published Date', 'rank-math' ),\n\t\t\t'modified'     => esc_html__( 'Modified Date', 'rank-math' ),\n\t\t\t'alphabetical' => esc_html__( 'Alphabetical', 'rank-math' ),\n\t\t\t'post_id'      => esc_html__( 'Post ID', 'rank-math' ),\n\t\t],\n\t\t'default' => 'published',\n\t\t'dep'     => [ [ 'html_sitemap', 'on' ] ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'html_sitemap_show_dates',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Show Dates', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Show published dates for each post & page.', 'rank-math' ),\n\t\t'default' => 'on',\n\t\t'dep'     => [ [ 'html_sitemap', 'on' ] ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'html_sitemap_seo_titles',\n\t\t'type'    => 'radio_inline',\n\t\t'name'    => esc_html__( 'Item Titles', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Show the post\/term titles, or the SEO titles in the HTML sitemap.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'titles'     => esc_html__( 'Item Titles', 'rank-math' ),\n\t\t\t'seo_titles' => esc_html__( 'SEO Titles', 'rank-math' ),\n\t\t],\n\t\t'dep'     => [ [ 'html_sitemap', 'on' ] ],\n\t\t'default' => 'titles',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/settings\/general.php","ext":"php","size":2603,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Sitemap settings - General tab.\n *\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( class_exists( 'SitePress' ) ) {\n\t$cmb->add_field(\n\t\t[\n\t\t\t'id'      => 'multilingual_sitemap_notice',\n\t\t\t'type'    => 'notice',\n\t\t\t'what'    => 'warning',\n\t\t\t'content' => sprintf(\n\t\t\t\t\/* translators: hreflang tags documentation link *\/\n\t\t\t\tesc_html__( 'Rank Math generates the default Sitemaps only and WPML takes care of the rest. When a search engine bot visits any post\/page, it is shown hreflang tag that helps it crawl the translated pages. This is one of the recommended methods by Google. Please %s', 'rank-math' ),\n\t\t\t\t'<a href=\"https:\/\/support.google.com\/webmasters\/answer\/189077?hl=en\" target=\"blank\">' . esc_html__( 'read here', 'rank-math' ) . '<\/a>'\n\t\t\t),\n\t\t]\n\t);\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'items_per_page',\n\t\t'type'       => 'text',\n\t\t'name'       => esc_html__( 'Links Per Sitemap', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Max number of links on each sitemap page.', 'rank-math' ),\n\t\t'default'    => '200',\n\t\t'attributes' => [ 'type' => 'number' ],\n\t\t'classes'    => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'include_images',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Images in Sitemaps', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include reference to images from the post content in sitemaps. This helps search engines index the important images on your pages.', 'rank-math' ),\n\t\t'default' => 'on',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'include_featured_image',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Include Featured Images', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Include the Featured Image too, even if it does not appear directly in the post content.', 'rank-math' ),\n\t\t'default' => 'off',\n\t\t'dep'     => [ [ 'include_images', 'on' ] ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'exclude_posts',\n\t\t'type'    => 'text',\n\t\t'name'    => esc_html__( 'Exclude Posts', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Enter post IDs of posts you want to exclude from the sitemap, separated by commas. This option **applies** to all posts types including posts, pages, and custom post types.', 'rank-math' ),\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'exclude_terms',\n\t\t'type'    => 'text',\n\t\t'name'    => esc_html__( 'Exclude Terms', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Add term IDs, separated by comma. This option is applied for all taxonomies.', 'rank-math' ),\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-cache-watcher.php","ext":"php","size":9544,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap cache watcher.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Cache_Watcher class.\n *\/\nclass Cache_Watcher {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds the options that, when updated, should cause the cache to clear.\n\t *\n\t * @var array\n\t *\/\n\tprotected static $cache_clear = [];\n\n\t\/**\n\t * Holds the flag to clear all cache.\n\t *\n\t * @var boolean\n\t *\/\n\tprotected static $clear_all = false;\n\n\t\/**\n\t * Holds the array of types to clear.\n\t *\n\t * @var array\n\t *\/\n\tprotected static $clear_types = [];\n\n\t\/**\n\t * Holds the array of post types being imported.\n\t *\n\t * @var array\n\t *\/\n\tprivate $importing_post_types = [];\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'save_post', 'save_post' );\n\t\t$this->action( 'transition_post_status', 'status_transition', 10, 3 );\n\t\t$this->action( 'admin_footer', 'status_transition_bulk_finished' );\n\n\t\t$this->action( 'edited_terms', 'invalidate_term', 10, 2 );\n\t\t$this->action( 'clean_term_cache', 'invalidate_term', 10, 2 );\n\t\t$this->action( 'clean_object_term_cache', 'invalidate_term', 10, 2 );\n\n\t\t$this->action( 'delete_user', 'invalidate_author' );\n\t\t$this->action( 'user_register', 'invalidate_author' );\n\t\t$this->action( 'profile_update', 'invalidate_author' );\n\n\t\t$this->action( 'rank_math\/sitemap\/invalidate_object_type', 'invalidate_object_type', 10, 2 );\n\n\t\tadd_action( 'shutdown', [ __CLASS__, 'clear_queued' ] );\n\t\tadd_action( 'update_option', [ __CLASS__, 'clear_on_option_update' ] );\n\t\tadd_action( 'deleted_term_relationships', [ __CLASS__, 'invalidate' ] );\n\n\t\t\/\/ Clear cache when user updates any of these options.\n\t\tself::register_clear_on_option_update( 'home' );\n\t\tself::register_clear_on_option_update( 'permalink_structure' );\n\t\tself::register_clear_on_option_update( 'rank_math_modules' );\n\t\tself::register_clear_on_option_update( 'rank-math-options-titles' );\n\t\tself::register_clear_on_option_update( 'rank-math-options-general' );\n\t\tself::register_clear_on_option_update( 'rank-math-options-sitemap' );\n\t\tself::register_clear_on_option_update( 'date_format' );\n\t}\n\n\t\/**\n\t * Check for relevant post type before invalidation.\n\t *\n\t * @param int $post_id Post ID to possibly invalidate for.\n\t *\/\n\tpublic function save_post( $post_id ) {\n\t\t$post = get_post( $post_id );\n\t\tif ( ! empty( $post->post_password ) || 'auto-draft' === $post->post_status ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tupdate_user_meta( $post->post_author, 'last_update', get_post_modified_time( 'U', false, $post ) );\n\t\t$this->invalidate_post( $post_id );\n\t\t$this->invalidate_author( $post->post_author );\n\t}\n\n\t\/**\n\t * Hooked into transition_post_status. Will initiate search engine pings\n\t * if the post is being published, is a post type that a sitemap is built for\n\t * and is a post that is included in sitemaps.\n\t *\n\t * @param string   $new_status New post status.\n\t * @param string   $old_status Old post status.\n\t * @param \\WP_Post $post       Post object.\n\t *\/\n\tpublic function status_transition( $new_status, $old_status, $post ) {\n\t\tif ( 'publish' !== $new_status ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( defined( 'WP_IMPORTING' ) ) {\n\t\t\t$this->status_transition_bulk( $new_status, $old_status, $post );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $this->can_exclude( $post ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( WP_CACHE ) {\n\t\t\twp_schedule_single_event( ( time() + 300 ), 'rank_math\/sitemap\/hit_index' );\n\t\t}\n\t}\n\n\t\/**\n\t * Can exclude post type.\n\t *\n\t * @param \\WP_Post $post Post object.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_exclude( $post ) {\n\t\t$post_type = get_post_type( $post );\n\t\twp_cache_delete( 'lastpostmodified:gmt:' . $post_type, 'timeinfo' );\n\n\t\t\/\/ None of our interest.\n\t\t\/\/ If the post type is excluded in options, we can stop.\n\t\treturn 'nav_menu_item' === $post_type || ! Sitemap::is_object_indexable( $post->ID );\n\t}\n\n\t\/**\n\t * While bulk importing, just save unique `post_types`.\n\t *\n\t * When importing is done, if we have a `post_type` that is saved in the sitemap\n\t * try to ping the search engines\n\t *\n\t * @param string   $new_status New post status.\n\t * @param string   $old_status Old post status.\n\t * @param \\WP_Post $post       Post object.\n\t *\/\n\tprivate function status_transition_bulk( $new_status, $old_status, $post ) {\n\t\t$this->importing_post_types[] = get_post_type( $post );\n\t\t$this->importing_post_types   = array_unique( $this->importing_post_types );\n\t}\n\n\t\/**\n\t * After import finished, walk through imported `post_types` and update info.\n\t *\/\n\tpublic function status_transition_bulk_finished() {\n\t\tif ( ! defined( 'WP_IMPORTING' ) || empty( $this->importing_post_types ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( false === $this->maybe_ping_search_engines() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( WP_CACHE ) {\n\t\t\tdo_action( 'rank_math\/sitemap\/hit_index' );\n\t\t}\n\t}\n\n\t\/**\n\t * Check if we can ping search engines.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function maybe_ping_search_engines() {\n\t\t$ping                  = false;\n\t\t$accessible_post_types = Helper::get_accessible_post_types();\n\n\t\tforeach ( $this->importing_post_types as $post_type ) {\n\t\t\twp_cache_delete( 'lastpostmodified:gmt:' . $post_type, 'timeinfo' );\n\n\t\t\tif ( in_array( $post_type, $accessible_post_types, true ) ) {\n\t\t\t\t$ping = true;\n\t\t\t}\n\t\t}\n\n\t\treturn $ping;\n\t}\n\n\t\/**\n\t * Helper to invalidate in hooks where type is passed as second argument.\n\t *\n\t * @param int    $unused    Unused term ID value.\n\t * @param string $taxonomy  Taxonomy to invalidate.\n\t *\/\n\tpublic static function invalidate_term( $unused, $taxonomy ) {\n\t\tif ( false !== Helper::get_settings( 'sitemap.tax_' . $taxonomy . '_sitemap' ) ) {\n\t\t\tself::invalidate( $taxonomy );\n\t\t}\n\t}\n\n\t\/**\n\t * Delete cache transients for index and specific type.\n\t *\n\t * Always deletes the main index sitemaps cache, as that's always invalidated by any other change.\n\t *\n\t * @param string $type Sitemap type to invalidate.\n\t *\/\n\tpublic static function invalidate( $type ) {\n\t\tself::clear( [ $type ] );\n\t}\n\n\t\/**\n\t * Invalidate sitemap cache for the post type of a post.\n\t * Don't invalidate for revisions.\n\t *\n\t * @param int $post_id Post ID to invalidate type for.\n\t *\/\n\tpublic static function invalidate_post( $post_id ) {\n\t\tif ( wp_is_post_revision( $post_id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tself::invalidate( get_post_type( $post_id ) );\n\t}\n\n\t\/**\n\t * Invalidate sitemap cache for authors.\n\t *\n\t * @param int $user_id User ID.\n\t *\/\n\tpublic static function invalidate_author( $user_id ) {\n\t\t$user = get_user_by( 'id', $user_id );\n\t\tif ( 'user_register' === current_action() || 'profile_update' === current_action() ) {\n\t\t\tupdate_user_meta( $user_id, 'last_update', time() );\n\t\t}\n\n\t\tif ( $user && ! is_null( $user->roles ) && ! in_array( 'subscriber', $user->roles, true ) ) {\n\t\t\tself::invalidate( 'author' );\n\t\t}\n\t}\n\n\t\/**\n\t * Function to clear the Sitemap Cache.\n\t *\n\t * @param string $object_type Object type for destination where to save.\n\t * @param int    $object_id   Object id for destination where to save.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function invalidate_object_type( $object_type, $object_id ) {\n\t\tif ( 'post' === $object_type ) {\n\t\t\tself::invalidate_post( $object_id );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'user' === $object_type ) {\n\t\t\tself::invalidate_author( $object_id );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'term' === $object_type ) {\n\t\t\t$term = get_term( $object_id );\n\t\t\tself::invalidate_term( $object_id, $term->taxonomy );\n\t\t}\n\t}\n\n\t\/**\n\t * Delete cache transients for given sitemaps types or all by default.\n\t *\n\t * @param array $types Set of sitemap types to delete cache transients for.\n\t *\/\n\tpublic static function clear( $types = [] ) {\n\t\tif ( ! Sitemap::is_cache_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ No types provided, clear all.\n\t\tif ( empty( $types ) ) {\n\t\t\tself::$clear_all = true;\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Always invalidate the index sitemap as well.\n\t\tif ( ! in_array( '1', $types, true ) ) {\n\t\t\tarray_unshift( $types, '1' );\n\t\t}\n\n\t\tforeach ( $types as $type ) {\n\t\t\tif ( ! in_array( $type, self::$clear_types, true ) ) {\n\t\t\t\tself::$clear_types[] = $type;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Invalidate storage for cache types queued to clear.\n\t *\/\n\tpublic static function clear_queued() {\n\t\tif ( self::$clear_all ) {\n\t\t\tCache::invalidate_storage();\n\t\t\tself::$clear_all   = false;\n\t\t\tself::$clear_types = [];\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( self::$clear_types as $type ) {\n\t\t\tCache::invalidate_storage( $type );\n\t\t}\n\n\t\tself::$clear_types = [];\n\t}\n\n\t\/**\n\t * Adds a hook that when given option is updated, the cache is cleared.\n\t *\n\t * @param string $option Option name.\n\t * @param string $type   Sitemap type.\n\t *\/\n\tpublic static function register_clear_on_option_update( $option, $type = '' ) {\n\t\tself::$cache_clear[ $option ] = $type;\n\t}\n\n\t\/**\n\t * Clears the transient cache when a given option is updated, if that option has been registered before.\n\t *\n\t * @param string $option The option name that's being updated.\n\t *\/\n\tpublic static function clear_on_option_update( $option ) {\n\t\tif ( ! array_key_exists( $option, self::$cache_clear ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Clear all caches.\n\t\tif ( empty( self::$cache_clear[ $option ] ) ) {\n\t\t\tself::clear();\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Clear specific provided type(s).\n\t\t$types = (array) self::$cache_clear[ $option ];\n\t\tself::clear( $types );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-redirect-core-sitemaps.php","ext":"php","size":2234,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Redirect core sitemaps.\n *\n * Disable WP core sitemap feature added in version 5.5 and\n * use Rank Math's sitemaps instead.\n *\n * @since      1.0.47\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Redirect Core Sitemaps class.\n *\/\nclass Redirect_Core_Sitemaps {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t\/**\n\t\t * Disable the WP core XML sitemaps.\n\t\t *\/\n\t\tadd_filter( 'wp_sitemaps_enabled', '__return_false' );\n\t\t$this->action( 'template_redirect', 'redirect_core_sitemaps' );\n\t}\n\n\t\/**\n\t * Redirect Core sitemap links to Rank Math Sitemaps.\n\t *\/\n\tpublic function redirect_core_sitemaps() {\n\t\t\/\/ Early Bail.\n\t\tif ( empty( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$path = sanitize_text_field( wp_unslash( $_SERVER['REQUEST_URI'] ) );\n\n\t\t\/\/ Early bail if it's not a WP Core sitemap link.\n\t\tif ( ! Str::starts_with( '\/wp-sitemap', $path ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$redirect = $this->get_redirect_url( $path );\n\n\t\tif ( ! $redirect ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::redirect( home_url( $redirect ), 301 );\n\t\texit;\n\t}\n\n\t\/**\n\t * Get Redirect URL by path.\n\t *\n\t * @param string $path The original path.\n\t *\n\t * @return string The URL to redirect.\n\t *\/\n\tprivate function get_redirect_url( $path ) {\n\t\tif ( '\/wp-sitemap.xml' === $path ) {\n\t\t\treturn '\/' . Sitemap::get_sitemap_index_slug() . '.xml';\n\t\t}\n\n\t\tif ( preg_match( '\/^\\\/wp-sitemap-(posts|taxonomies)-(\\w+)-(\\d+)\\.xml$\/', $path, $matches ) ) {\n\t\t\t$index = ( (int) $matches[3] - 1 );\n\t\t\t$index = 0 !== $index ? (string) $index : '';\n\n\t\t\treturn '\/' . $matches[2] . '-sitemap' . $index . '.xml';\n\t\t}\n\n\t\tif ( preg_match( '\/^\\\/wp-sitemap-users-(\\d+)\\.xml$\/', $path, $matches ) ) {\n\t\t\t$index = ( (int) $matches[1] - 1 );\n\t\t\t$index = 0 !== $index ? (string) $index : '';\n\n\t\t\treturn '\/author-sitemap' . $index . '.xml';\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-image-parser.php","ext":"php","size":13936,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Parse images from a post.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse WP_Query;\nuse DOMDocument;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Attachment;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Image_Parser class.\n *\/\nclass Image_Parser {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds the `home_url()` value to speed up loops.\n\t *\n\t * @var string\n\t *\/\n\tprotected $home_url = '';\n\n\t\/**\n\t * Holds site URL hostname.\n\t *\n\t * @var string\n\t *\/\n\tprotected $host = '';\n\n\t\/**\n\t * Holds site URL protocol.\n\t *\n\t * @var string\n\t *\/\n\tprotected $scheme = 'http';\n\n\t\/**\n\t * Cached set of attachments for multiple posts.\n\t *\n\t * @var array\n\t *\/\n\tprotected $attachments = [];\n\n\t\/**\n\t * Holds blog charset value for use in DOM parsing.\n\t *\n\t * @var string\n\t *\/\n\tprotected $charset = 'UTF-8';\n\n\t\/**\n\t * Hold post.\n\t *\n\t * @var object\n\t *\/\n\tprivate $post = null;\n\n\t\/**\n\t * Hold parsed images data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $images = [];\n\n\t\/**\n\t * Set up URL properties for reuse.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->home_url = home_url();\n\t\t$parsed_home    = wp_parse_url( $this->home_url );\n\n\t\tif ( ! empty( $parsed_home['host'] ) ) {\n\t\t\t$this->host = str_replace( 'www.', '', $parsed_home['host'] );\n\t\t}\n\n\t\tif ( ! empty( $parsed_home['scheme'] ) ) {\n\t\t\t$this->scheme = $parsed_home['scheme'];\n\t\t}\n\n\t\t$this->charset = esc_attr( get_bloginfo( 'charset' ) );\n\t}\n\n\t\/**\n\t * Get set of image data sets for the given post.\n\t *\n\t * @param object $post Post object to get images for.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_images( $post ) {\n\t\tif ( ! Helper::get_settings( 'sitemap.include_images' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->post = $post;\n\t\tif ( ! is_object( $this->post ) ) {\n\t\t\treturn $this->images;\n\t\t}\n\n\t\t$this->get_post_thumbnail();\n\t\t$this->get_post_images();\n\t\t$this->get_post_galleries();\n\t\t$this->get_is_attachment();\n\t\t$this->get_custom_field_images();\n\n\t\t\/\/ Reset.\n\t\t$images       = $this->images;\n\t\t$this->images = [];\n\t\t$this->post   = null;\n\n\t\t\/**\n\t\t * Filter images to be included for the post in XML sitemap.\n\t\t *\n\t\t * @param array $images  Array of image items.\n\t\t * @param int   $post_id ID of the post.\n\t\t *\/\n\t\treturn $this->do_filter( 'sitemap\/urlimages', $images, $post->ID );\n\t}\n\n\t\/**\n\t * Get term images.\n\t *\n\t * @param object $term Term to get images from description for.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_term_images( $term ) {\n\t\tif ( ! Helper::get_settings( 'sitemap.include_images' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$images = $this->parse_html_images( $term->description );\n\t\tforeach ( $this->parse_galleries( $term->description ) as $attachment ) {\n\t\t\t$images[] = [\n\t\t\t\t'src' => $this->get_absolute_url( $this->image_url( $attachment->ID ) ),\n\t\t\t];\n\t\t}\n\n\t\treturn $images;\n\t}\n\n\t\/**\n\t * Get post thumbnail.\n\t *\/\n\tprivate function get_post_thumbnail() {\n\t\t$thumbnail_id = get_post_thumbnail_id( $this->post->ID );\n\t\tif (\n\t\t\t! Helper::get_settings( 'sitemap.include_featured_image' ) ||\n\t\t\t! Attachment::attachment_in_sitemap( $thumbnail_id )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->get_image_item( $this->get_absolute_url( $this->image_url( $thumbnail_id ) ) );\n\t}\n\n\t\/**\n\t * Get images from post content.\n\t *\/\n\tprivate function get_post_images() {\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/content_before_parse_html_images' - Filters the post content\n\t\t * before it is parsed for images.\n\t\t *\n\t\t * @param string $content The raw\/unprocessed post content.\n\t\t *\/\n\t\t$content = $this->do_filter( 'sitemap\/content_before_parse_html_images', $this->post->post_content, $this->post->ID );\n\t\t$content = do_blocks( $content );\n\n\t\tforeach ( $this->parse_html_images( $content ) as $image ) {\n\t\t\t$this->get_image_item( $image['src'] );\n\t\t}\n\t}\n\n\t\/**\n\t * Get post galleries.\n\t *\/\n\tprivate function get_post_galleries() {\n\t\tforeach ( $this->parse_galleries( $this->post->post_content, $this->post->ID ) as $attachment ) {\n\t\t\t$this->get_image_item( $this->get_absolute_url( $this->image_url( $attachment->ID ) ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Get image if post is attachment.\n\t *\/\n\tprivate function get_is_attachment() {\n\t\tif ( 'attachment' === $this->post->post_type && wp_attachment_is_image( $this->post ) ) {\n\t\t\t$this->get_image_item( $this->get_absolute_url( $this->image_url( $this->post->ID ) ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Get images from custom fields.\n\t *\/\n\tprivate function get_custom_field_images() {\n\t\t$customs = Helper::get_settings( 'sitemap.pt_' . $this->post->post_type . '_image_customfields' );\n\t\tif ( empty( $customs ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$customs = Arr::from_string( $customs, \"\\n\" );\n\t\tforeach ( $customs as $key ) {\n\t\t\t$src = get_post_meta( $this->post->ID, $key, true );\n\t\t\tif ( Str::is_non_empty( $src ) && Helper::is_image_url( $src ) ) {\n\t\t\t\t$this->get_image_item( $src );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Parse `<img \/>` tags in content.\n\t *\n\t * @param string $content Content string to parse.\n\t *\n\t * @return array\n\t *\/\n\tprivate function parse_html_images( $content ) {\n\t\t$images   = [];\n\t\t$document = $this->get_document( $content );\n\t\tif ( false === $document ) {\n\t\t\treturn $images;\n\t\t}\n\n\t\tforeach ( $document->getElementsByTagName( 'img' ) as $img ) {\n\t\t\t$src = $this->get_image_src( $img );\n\t\t\tif ( false === $src ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$images[] = [ 'src' => $src ];\n\t\t}\n\n\t\treturn $images;\n\t}\n\n\t\/**\n\t * Get DOM document.\n\t *\n\t * @param string $content Content to parse.\n\t *\n\t * @return bool|DOMDocument\n\t *\/\n\tprivate function get_document( $content ) {\n\t\tif ( ! class_exists( 'DOMDocument' ) || empty( $content ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Prevent DOMDocument from bubbling warnings about invalid HTML.\n\t\tlibxml_use_internal_errors( true );\n\n\t\t$post_dom = new DOMDocument();\n\t\t$post_dom->loadHTML( '<?xml encoding=\"' . $this->charset . '\">' . $content );\n\n\t\t\/\/ Clear the errors, so they don't get kept in memory.\n\t\tlibxml_clear_errors();\n\n\t\treturn $post_dom;\n\t}\n\n\t\/**\n\t * Get image source from node.\n\t *\n\t * @param DOMNode $node Node instance.\n\t *\n\t * @return bool|string\n\t *\/\n\tprivate function get_image_src( $node ) {\n\t\t$src = $node->getAttribute( 'src' );\n\t\tif ( $node->hasAttribute( 'data-sitemapexclude' ) || empty( $src ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$class = $node->getAttribute( 'class' );\n\t\tif ( \/\/ This detects WP-inserted images, which we need to upsize. R.\n\t\t\t! empty( $class )\n\t\t\t&& ! Str::contains( 'size-full', $class )\n\t\t\t&& preg_match( '|wp-image-(?P<id>\\d+)|', $class, $matches )\n\t\t\t&& get_post_status( $matches['id'] )\n\t\t) {\n\t\t\t$src = $this->image_url( $matches['id'] );\n\t\t}\n\n\t\t$src     = $this->get_absolute_url( $src );\n\t\t$no_host = esc_url( $src ) !== $src;\n\t\tif ( ! $this->do_filter( 'sitemap\/include_external_image', false ) ) {\n\t\t\t$no_host = ! Str::contains( $this->host, $src ) || esc_url( $src ) !== $src;\n\t\t}\n\n\t\treturn $no_host ? false : $src;\n\t}\n\n\t\/**\n\t * Parse gallery shortcodes in a given content.\n\t *\n\t * @param string $content Content string.\n\t * @param int    $post_id Optional ID of post being parsed.\n\t *\n\t * @return array Set of attachment objects.\n\t *\/\n\tprivate function parse_galleries( $content, $post_id = 0 ) {\n\t\t$attachments = [];\n\t\t$galleries   = $this->get_content_galleries( $content );\n\n\t\tforeach ( $galleries as $gallery ) {\n\t\t\t$id = $post_id;\n\t\t\tif ( ! empty( $gallery['id'] ) ) {\n\t\t\t\t$id = intval( $gallery['id'] );\n\t\t\t}\n\n\t\t\t\/\/ Forked from core gallery_shortcode() to have exact same logic. R.\n\t\t\tif ( ! empty( $gallery['ids'] ) ) {\n\t\t\t\t$gallery['include'] = $gallery['ids'];\n\t\t\t}\n\n\t\t\t$attachments = array_merge( $attachments, $this->get_gallery_attachments( $id, $gallery ) );\n\t\t}\n\n\t\treturn array_unique( $attachments, SORT_REGULAR );\n\t}\n\n\t\/**\n\t * Retrieves galleries from the passed content.\n\t * Forked from core to skip executing shortcodes for performance.\n\t *\n\t * @param string $content Content to parse for shortcodes.\n\t *\n\t * @return array A list of arrays, each containing gallery data.\n\t *\/\n\tprivate function get_content_galleries( $content ) {\n\t\tif ( ! preg_match_all( '\/' . get_shortcode_regex( [ 'gallery' ] ) . '\/s', $content, $matches, PREG_SET_ORDER ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$galleries = [];\n\t\tforeach ( $matches as $shortcode ) {\n\t\t\tif ( 'gallery' !== $shortcode[2] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$attributes  = shortcode_parse_atts( $shortcode[3] );\n\t\t\t$galleries[] = '' === $attributes ? [] : $attributes;\n\t\t}\n\n\t\treturn $galleries;\n\t}\n\n\t\/**\n\t * Set image item array with filters applied.\n\t *\n\t * @param string $src Image URL.\n\t *\/\n\tprivate function get_image_item( $src ) {\n\t\t$image = [];\n\n\t\t\/**\n\t\t * Filter image URL to be included in XML sitemap for the post.\n\t\t *\n\t\t * @param string $src  Image URL.\n\t\t * @param object $post Post object.\n\t\t *\/\n\t\t$image['src'] = $this->do_filter( 'sitemap\/xml_img_src', $src, $this->post );\n\t\tif ( Str::is_empty( $image['src'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Filter image data to be included in XML sitemap for the post.\n\t\t *\n\t\t * @param array  $image Array of image data. {\n\t\t *     @type string $src Image URL.\n\t\t * }\n\t\t * @param object $post  Post object.\n\t\t *\/\n\t\t$this->images[] = $this->do_filter( 'sitemap\/xml_img', $image, $this->post );\n\t}\n\n\t\/**\n\t * Get attached image URL with filters applied. Adapted from core for speed.\n\t *\n\t * @param int $post_id ID of the post.\n\t *\n\t * @return string\n\t *\/\n\tprivate function image_url( $post_id ) {\n\t\t$src = $this->normalize_image_url( $post_id );\n\n\t\treturn false === $src ? '' : apply_filters( 'wp_get_attachment_url', $src, $post_id ); \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Get attached image URL.\n\t *\n\t * @param int $post_id ID of the post.\n\t *\n\t * @return bool|string\n\t *\/\n\tprivate function normalize_image_url( $post_id ) {\n\t\t$uploads    = $this->get_upload_dir();\n\t\t$attachment = get_post_meta( $post_id, '_wp_attached_file', true );\n\n\t\tif ( false !== $uploads['error'] || empty( $attachment ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Check that the upload base exists in the file location.\n\t\tif ( 0 === strpos( $attachment, $uploads['basedir'] ) ) {\n\t\t\treturn str_replace( $uploads['basedir'], $uploads['baseurl'], $attachment );\n\t\t}\n\n\t\tif ( false !== strpos( $attachment, 'wp-content\/uploads' ) ) {\n\t\t\treturn $uploads['baseurl'] . substr( $attachment, ( strpos( $attachment, 'wp-content\/uploads' ) + 18 ) );\n\t\t}\n\n\t\t\/\/ It's a newly uploaded file, therefore $attachment is relative to the baseurl.\n\t\treturn $uploads['baseurl'] . '\/' . $attachment;\n\t}\n\n\t\/**\n\t * Get WordPress upload directory.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function get_upload_dir() {\n\t\tstatic $rank_math_wp_uploads;\n\n\t\tif ( empty( $rank_math_wp_uploads ) ) {\n\t\t\t$rank_math_wp_uploads = wp_upload_dir();\n\t\t}\n\n\t\treturn $rank_math_wp_uploads;\n\t}\n\n\t\/**\n\t * Make absolute URL for domain or protocol-relative one.\n\t *\n\t * @param string $src URL to process.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_absolute_url( $src ) {\n\t\tif ( Str::is_empty( $src ) ) {\n\t\t\treturn $src;\n\t\t}\n\n\t\tif ( true === Url::is_relative( $src ) ) {\n\t\t\treturn '\/' !== $src[0] ? $src :\n\t\t\t\t$this->home_url . $src; \/\/ The URL is relative, we'll have to make it absolute.\n\t\t}\n\n\t\t\/\/ If not starting with protocol, we add the scheme as the standard requires a protocol.\n\t\treturn ! Str::starts_with( 'http', $src ) ? $this->scheme . ':' . $src : $src;\n\t}\n\n\t\/**\n\t * Returns the attachments for a gallery.\n\t *\n\t * @param int   $id      The post ID.\n\t * @param array $gallery The gallery config.\n\t *\n\t * @return array The selected attachments.\n\t *\/\n\tprivate function get_gallery_attachments( $id, $gallery ) {\n\t\t\/\/ When there are attachments to include.\n\t\tif ( ! empty( $gallery['include'] ) ) {\n\t\t\treturn $this->get_gallery_attachments_for_included( $gallery['include'] );\n\t\t}\n\n\t\treturn empty( $id ) ? [] : $this->get_gallery_attachments_for_parent( $id, $gallery );\n\t}\n\n\t\/**\n\t * Returns the attachments for the given ID.\n\t *\n\t * @param int   $id      The post ID.\n\t * @param array $gallery The gallery config.\n\t *\n\t * @return array The selected attachments.\n\t *\/\n\tprivate function get_gallery_attachments_for_parent( $id, $gallery ) {\n\t\t$query = [\n\t\t\t'posts_per_page' => -1,\n\t\t\t'post_parent'    => $id,\n\t\t];\n\n\t\t\/\/ When there are posts that should be excluded from result set.\n\t\tif ( ! empty( $gallery['exclude'] ) ) {\n\t\t\t$query['post__not_in'] = wp_parse_id_list( $gallery['exclude'] );\n\t\t}\n\n\t\treturn $this->get_attachments( $query );\n\t}\n\n\t\/**\n\t * Returns an array with attachments for the post IDs that will be included.\n\t *\n\t * @param array $include_ids Array with ids to include.\n\t *\n\t * @return array The found attachments.\n\t *\/\n\tprivate function get_gallery_attachments_for_included( $include_ids ) {\n\t\t$ids_to_include = wp_parse_id_list( $include_ids );\n\t\t$attachments    = $this->get_attachments(\n\t\t\t[\n\t\t\t\t'posts_per_page' => count( $ids_to_include ),\n\t\t\t\t'post__in'       => $ids_to_include,\n\t\t\t]\n\t\t);\n\n\t\t$gallery_attachments = [];\n\t\tforeach ( $attachments as $val ) {\n\t\t\t$gallery_attachments[ $val->ID ] = $val;\n\t\t}\n\n\t\treturn $gallery_attachments;\n\t}\n\n\t\/**\n\t * Returns the attachments.\n\t *\n\t * @param array $args Array with query args.\n\t *\n\t * @return array The found attachments.\n\t *\/\n\tprotected function get_attachments( $args ) {\n\t\t$default_args = [\n\t\t\t'post_status'         => 'inherit',\n\t\t\t'post_type'           => 'attachment',\n\t\t\t'post_mime_type'      => 'image',\n\n\t\t\t\/\/ Defaults taken from function get_posts.\n\t\t\t'orderby'             => 'date',\n\t\t\t'order'               => 'DESC',\n\t\t\t'meta_key'            => '',\n\t\t\t'meta_value'          => '',\n\t\t\t'suppress_filters'    => true,\n\t\t\t'ignore_sticky_posts' => true,\n\t\t\t'no_found_rows'       => true,\n\t\t];\n\n\t\t$args = wp_parse_args( $args, $default_args );\n\n\t\t$get_attachments = new WP_Query();\n\t\treturn $get_attachments->query( $args );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-classifier.php","ext":"php","size":3411,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The link classifier finds out if a link points to internal content or external content.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Classifier class.\n *\/\nclass Classifier {\n\n\tconst TYPE_EXTERNAL = 'external';\n\tconst TYPE_INTERNAL = 'internal';\n\n\t\/**\n\t * Base host.\n\t *\n\t * @var string\n\t *\/\n\tprotected $base_host = '';\n\n\t\/**\n\t * Base path.\n\t *\n\t * @var string\n\t *\/\n\tprotected $base_path = '';\n\n\t\/**\n\t * Constructor setting the base url.\n\t *\n\t * @param string $base_url The base url to set.\n\t *\/\n\tpublic function __construct( $base_url ) {\n\n\t\t$this->base_host = Helper::get_url_part( $base_url, 'host' );\n\n\t\t$base_path = Helper::get_url_part( $base_url, 'path' );\n\t\tif ( $base_path ) {\n\t\t\t$this->base_path = trailingslashit( $base_path );\n\t\t}\n\t}\n\n\t\/**\n\t * Determines if the given link is an outbound or an internal link.\n\t *\n\t * @param  string $link The link to classify.\n\t * @return string Returns outbound or internal.\n\t *\/\n\tpublic function classify( $link ) {\n\t\t$url_parts = wp_parse_url( $link );\n\n\t\t\/\/ Because parse_url may return false.\n\t\tif ( ! is_array( $url_parts ) ) {\n\t\t\t$url_parts = [];\n\t\t}\n\n\t\t\/\/ Short-circuit if filter returns non-null.\n\t\t$filtered = apply_filters( 'rank_math\/links\/is_external', null, $url_parts );\n\t\tif ( null !== $filtered ) {\n\t\t\treturn $filtered ? self::TYPE_EXTERNAL : self::TYPE_INTERNAL;\n\t\t}\n\n\t\tif ( $this->contains_protocol( $url_parts ) && $this->is_external_link( $url_parts ) ) {\n\t\t\treturn self::TYPE_EXTERNAL;\n\t\t}\n\n\t\treturn self::TYPE_INTERNAL;\n\t}\n\n\t\/**\n\t * Returns true when the link starts with `https:\/\/` or `http:\/\/`.\n\t *\n\t * @param  array $url_parts The URL parts to use.\n\t * @return bool True if the URL starts with a protocol.\n\t *\/\n\tprotected function contains_protocol( array $url_parts ) {\n\t\treturn isset( $url_parts['scheme'] ) && null !== $url_parts['scheme'];\n\t}\n\n\t\/**\n\t * Checks if the link contains the `home_url`. Returns true if this isn't the case.\n\t *\n\t * @param  array $url_parts The URL parts to use.\n\t * @return bool True when the link doesn't contain the home url.\n\t *\/\n\tprotected function is_external_link( array $url_parts ) {\n\t\tif ( $this->has_valid_scheme( $url_parts ) || $this->has_different_host( $url_parts ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ There is no base path.\n\t\tif ( empty( $this->base_path ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ When there is a path.\n\t\tif ( isset( $url_parts['path'] ) ) {\n\t\t\treturn ( strpos( $url_parts['path'], $this->base_path ) === false );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Checks if the link contains valid scheme.\n\t *\n\t * @param  array $url_parts The URL parts to use.\n\t * @return bool\n\t *\/\n\tprivate function has_valid_scheme( array $url_parts ) {\n\t\treturn isset( $url_parts['scheme'] ) && ! in_array( $url_parts['scheme'], [ 'http', 'https' ], true );\n\t}\n\n\t\/**\n\t * Checks if the base host is equal to the host.\n\t *\n\t * @param  array $url_parts The URL parts to use.\n\t * @return bool\n\t *\/\n\tprivate function has_different_host( array $url_parts ) {\n\t\treturn isset( $url_parts['host'] ) && $url_parts['host'] !== $this->base_host;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-stylesheet.php","ext":"php","size":1592,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The stylesheet class for the sitemaps.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Stylesheet class.\n *\/\nclass Stylesheet extends XML {\n\n\tuse Hooker;\n\n\t\/**\n\t * Hold sitemap type.\n\t *\n\t * @var string\n\t *\/\n\tpublic $type;\n\n\t\/**\n\t * Output the XSL for the XML sitemap.\n\t *\n\t * @param string $type Sitemap type.\n\t *\/\n\tpublic function output( $type ) {\n\t\t$this->type = $type;\n\n\t\t$expires = gmdate( 'D, d M Y H:i:s', ( time() + YEAR_IN_SECONDS ) );\n\t\t$this->send_headers(\n\t\t\t[\n\t\t\t\t'Cache-Control' => 'maxage=' . YEAR_IN_SECONDS,\n\t\t\t\t'Expires'       => $expires . ' GMT',\n\t\t\t\t'Etag'          => md5( $expires . $this->type ),\n\t\t\t],\n\t\t\ttrue\n\t\t);\n\n\t\t\/* translators: 1. separator, 2. blogname *\/\n\t\t$title = sprintf( __( 'XML Sitemap %1$s %2$s', 'rank-math' ), '-', get_bloginfo( 'name', 'display' ) );\n\n\t\t\/* translators: 1. separator, 2. blogname *\/\n\t\t$kml_title = sprintf( __( 'Locations Sitemap %1$s %2$s', 'rank-math' ), '-', get_bloginfo( 'name', 'display' ) );\n\n\t\tif ( 'main' !== $type ) {\n\t\t\t\/**\n\t\t\t * Fires for the output of XSL for XML sitemaps, other than type \"main\".\n\t\t\t *\/\n\t\t\t$this->do_action( \"sitemap\/xsl_{$type}\", $title, $kml_title );\n\t\t\tdie;\n\t\t}\n\n\t\trequire_once 'sitemap-xsl.php';\n\t\tdie;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-sitemap.php","ext":"php","size":9101,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Sitemap module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Helpers\\Sitepress;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Sitemap\\Html\\Sitemap as Html_Sitemap;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Sitemap class.\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\nclass Sitemap {\n\n\tuse Hooker;\n\n\t\/**\n\t * Sitemap Index object.\n\t *\n\t * @var Sitemap_Index\n\t *\/\n\tpublic $index;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\tif ( is_admin() ) {\n\t\t\tnew Admin();\n\t\t}\n\n\t\tif ( is_admin() || wp_doing_cron() ) {\n\t\t\tnew Cache_Watcher();\n\t\t}\n\n\t\tnew Router();\n\t\t$this->index = new Sitemap_Index();\n\t\t$this->index->hooks();\n\t\tnew Redirect_Core_Sitemaps();\n\t\tnew Html_Sitemap();\n\n\t\tadd_action( 'rank_math\/sitemap\/hit_index', [ __CLASS__, 'hit_index' ] );\n\n\t\t$this->filter( 'rank_math\/admin\/notice\/new_post_type', 'new_post_type_notice', 10, 2 );\n\n\t\tif ( class_exists( 'SitePress' ) ) {\n\t\t\t$this->filter( 'rank_math\/sitemap\/build_type', 'rank_math_build_sitemap_filter' );\n\t\t\t$this->filter( 'rank_math\/sitemap\/entry', 'exclude_hidden_language_posts', 10, 3 );\n\t\t}\n\t}\n\n\t\/**\n\t * Exclude posts under hidden language.\n\t *\n\t * @since 1.0.5\n\t *\n\t * @param string $url  Post URL.\n\t * @param string $type URL type.\n\t * @param object $post Object with some post information.\n\t *\n\t * @return string\n\t *\/\n\tpublic function exclude_hidden_language_posts( $url, $type, $post ) {\n\t\tif ( 'post' !== $type ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\tglobal $sitepress;\n\t\t\/\/ Check that at least ID is set in post object.\n\t\tif ( ! isset( $post->ID ) ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\t\/\/ Get list of hidden languages.\n\t\t$hidden_languages = $sitepress->get_setting( 'hidden_languages', [] );\n\n\t\t\/\/ If there are no hidden languages return original URL.\n\t\tif ( empty( $hidden_languages ) ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\t\/\/ Get language information for post.\n\t\t$language_info = $sitepress->post_translations()->get_element_lang_code( $post->ID );\n\n\t\t\/\/ If language code is one of the hidden languages return empty string to skip the post.\n\t\tif ( in_array( $language_info, $hidden_languages, true ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Prevent get_permalink from translating and remove filter added by WPML to get terms in current language.\n\t *\n\t * @since 1.0.5\n\t *\n\t * @param string $type Sitemap type.\n\t *\n\t * @return string\n\t *\/\n\tpublic function rank_math_build_sitemap_filter( $type ) {\n\t\tif ( Sitepress::get()->is_per_domain() ) {\n\t\t\treturn $type;\n\t\t}\n\n\t\tglobal $sitepress_settings;\n\n\t\t\/\/ Before to build the sitemap and as we are on front-end just make sure the links won't be translated. The setting should not be updated in DB.\n\t\t$sitepress_settings['auto_adjust_ids'] = 0;\n\n\t\t\/**\n\t\t * Remove WPML filters while getting terms, to get all languages\n\t\t *\/\n\t\tSitepress::get()->remove_term_filters();\n\n\t\treturn $type;\n\t}\n\n\t\/**\n\t * Add new CPT notice.\n\t *\n\t * @param  string $notice New CPT notice.\n\t * @param  int    $count  Count of new post types detected.\n\t * @return string\n\t *\/\n\tpublic function new_post_type_notice( $notice, $count ) {\n\t\t\/* Translators: placeholder is the post type name. *\/\n\t\t$notice = __( 'Rank Math has detected a new post type: %1$s. You may want to check the settings of the <a href=\"%2$s\">Titles &amp; Meta page<\/a> and <a href=\"%3$s\">the Sitemap<\/a>.', 'rank-math' );\n\n\t\tif ( $count > 1 ) {\n\t\t\t\/* Translators: placeholder is the post type names separated with commas. *\/\n\t\t\t$notice = __( 'Rank Math has detected new post types: %1$s. You may want to check the settings of the <a href=\"%2$s\">Titles &amp; Meta page<\/a> and <a href=\"%3$s\">the Sitemap<\/a>.', 'rank-math' );\n\t\t}\n\n\t\treturn $notice;\n\t}\n\n\t\/**\n\t * Hit sitemap index to pre-generate the cache.\n\t *\/\n\tpublic static function hit_index() {\n\t\twp_remote_get( Router::get_base_url( self::get_sitemap_index_slug() . '.xml' ) );\n\t}\n\n\t\/**\n\t * Exclude object from sitemap.\n\t *\n\t * @param  int     $object_id   Object id.\n\t * @param  string  $object_type Object type. Accetps: post, term, user.\n\t * @param  boolean $is_include  Add or Remove object.\n\t *\/\n\tpublic static function exclude_object( $object_id, $object_type, $is_include ) {\n\t\t$field_id = \"exclude_{$object_type}s\";\n\t\t$ids      = Helper::get_settings( 'sitemap.' . $field_id );\n\n\t\tif ( empty( $ids ) ) {\n\t\t\t$ids = $object_id;\n\t\t} else {\n\t\t\t$ids = array_filter( wp_parse_id_list( $ids ) );\n\n\t\t\t\/\/ Add object.\n\t\t\tif ( $is_include && ! in_array( $object_id, $ids, true ) ) {\n\t\t\t\t$ids[] = $object_id;\n\t\t\t}\n\n\t\t\t\/\/ Remove object.\n\t\t\tif ( ! $is_include && in_array( $object_id, $ids, true ) ) {\n\t\t\t\t$ids = array_diff( $ids, [ $object_id ] );\n\t\t\t}\n\n\t\t\t$ids = implode( ',', $ids );\n\t\t}\n\n\t\t$opt = cmb2_options( 'rank-math-options-sitemap' );\n\t\t$opt->update( $field_id, $ids, true );\n\t}\n\n\t\/**\n\t * Get the GMT modification date for the last modified post in the post type.\n\t *\n\t * @param  string|array $post_types Post type or array of types.\n\t * @param  boolean      $return_all Flag to return array of values.\n\t * @return string|array|false\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\/\n\tpublic static function get_last_modified_gmt( $post_types, $return_all = false ) {\n\t\tglobal $wpdb;\n\n\t\tif ( empty( $post_types ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tstatic $post_type_dates = null;\n\t\tif ( ! is_array( $post_types ) ) {\n\t\t\t$post_types = [ $post_types ];\n\t\t}\n\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\tif ( ! isset( $post_type_dates[ $post_type ] ) ) { \/\/ If we hadn't seen post type before. R.\n\t\t\t\t$post_type_dates = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( is_null( $post_type_dates ) ) {\n\t\t\t$post_type_dates = [];\n\t\t\t$post_type_names = get_post_types( [ 'public' => true ] );\n\n\t\t\tif ( ! empty( $post_type_names ) ) {\n\t\t\t\t$sql = \"\n\t\t\t\tSELECT post_type, MAX( GREATEST( p.post_modified_gmt, p.post_date_gmt ) ) AS date\n\t\t\t\tFROM $wpdb->posts as p\n\t\t\t\tLEFT JOIN {$wpdb->postmeta} AS pm ON ( p.ID = pm.post_id AND pm.meta_key = 'rank_math_robots')\n\t\t\t\tWHERE (\n\t\t\t\t\t( pm.meta_key = 'rank_math_robots' AND pm.meta_value NOT LIKE '%noindex%' ) OR\n\t\t\t\t    pm.post_id IS NULL\n\t\t\t\t)\n\t\t\t\tAND p.post_status IN ( 'publish','inherit' )\n\t\t\t\t\tAND p.post_type IN ('\" . implode( \"','\", $post_type_names ) . \"')\n\t\t\t\tGROUP BY p.post_type\n\t\t\t\tORDER BY p.post_modified_gmt DESC\";\n\n\t\t\t\tforeach ( DB_Helper::get_results( $sql ) as $obj ) {\n\t\t\t\t\t$post_type_dates[ $obj->post_type ] = $obj->date;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$dates = array_intersect_key( $post_type_dates, array_flip( $post_types ) );\n\t\tif ( count( $dates ) > 0 ) {\n\t\t\treturn $return_all ? $dates : max( $dates );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if cache is enabled.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_cache_enabled() {\n\t\tstatic $xml_sitemap_caching;\n\t\tif ( isset( $xml_sitemap_caching ) ) {\n\t\t\treturn $xml_sitemap_caching;\n\t\t}\n\n\t\t\/**\n\t\t * Filter to enable\/disable XML sitemap caching.\n\t\t *\n\t\t * @param boolean $true Enable or disable caching.\n\t\t *\/\n\t\t$xml_sitemap_caching = apply_filters( 'rank_math\/sitemap\/enable_caching', true );\n\t\treturn $xml_sitemap_caching;\n\t}\n\n\t\/**\n\t * Check if `object` is indexable.\n\t *\n\t * @param int\/object $data_object Post|Term Object.\n\t * @param string     $type        Object Type.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_object_indexable( $data_object, $type = 'post' ) {\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/include_noindex' - Include noindex data in Sitemap.\n\t\t *\n\t\t * @param bool   $value Whether to include noindex terms in Sitemap.\n\t\t * @param string $type  Object Type.\n\t\t *\n\t\t * @return boolean\n\t\t *\/\n\t\tif ( apply_filters( 'rank_math\/sitemap\/include_noindex', false, $type ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$method = 'post' === $type ? 'is_post_indexable' : 'is_term_indexable';\n\n\t\treturn Helper::$method( $data_object );\n\t}\n\n\t\/**\n\t * Redirect duplicate sitemaps.\n\t *\n\t * @param int $count       Total number of entries.\n\t * @param int $max_entries Entries per sitemap.\n\t *\/\n\tpublic static function maybe_redirect( $count, $max_entries ) {\n\t\t$current_page = (int) get_query_var( 'sitemap_n' );\n\t\tif ( ! $current_page && $count > $max_entries ) {\n\t\t\tHelper::redirect( preg_replace( '\/\\.xml$\/', '1.xml', Helper::get_current_page_url() ) );\n\t\t\tdie();\n\t\t}\n\n\t\tif ( $count < $max_entries && $current_page ) {\n\t\t\tHelper::redirect( preg_replace( '\/' . preg_quote( $current_page, '\/' ) . '\\.xml$\/', '.xml', Helper::get_current_page_url() ) );\n\t\t\tdie();\n\t\t}\n\t}\n\n\t\/**\n\t * Get the sitemap index slug.\n\t *\/\n\tpublic static function get_sitemap_index_slug() {\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/index_slug' - Modify the sitemap index slug.\n\t\t *\n\t\t * @param string $slug Sitemap index slug.\n\t\t *\n\t\t * @return string\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/sitemap\/index\/slug', 'sitemap_index' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/abstract-xml.php","ext":"php","size":2206,"mtime":1757324689,"type":"text","content":"<?php \/\/ phpcs:ignore WordPress.Files.FileName.InvalidClassFileName\n\/**\n * The Sitemap xml and stylesheet abstract class.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * XML.\n *\/\nabstract class XML {\n\n\tuse Hooker;\n\n\t\/**\n\t * HTTP protocol to use in headers.\n\t *\n\t * @var string\n\t *\/\n\tprotected $http_protocol = null;\n\n\t\/**\n\t * Holds charset of output, might be converted.\n\t *\n\t * @var string\n\t *\/\n\tprotected $output_charset = 'UTF-8';\n\n\t\/**\n\t * Send file headers.\n\t *\n\t * @param array $headers Array of headers.\n\t * @param bool  $is_xsl True if sending headers are for XSL.\n\t *\/\n\tprotected function send_headers( $headers = [], $is_xsl = false ) {\n\t\t$defaults = [\n\t\t\t'X-Robots-Tag'  => 'noindex',\n\t\t\t'Content-Type'  => 'text\/xml; charset=' . $this->get_output_charset(),\n\t\t\t'Pragma'        => 'public',\n\t\t\t'Cache-Control' => 'no-cache, no-store, must-revalidate, max-age=0',\n\t\t\t'Expires'       => 0,\n\t\t];\n\n\t\t$headers = wp_parse_args( $headers, $defaults );\n\n\t\t\/**\n\t\t * Filter the sitemap HTTP headers.\n\t\t *\n\t\t * @param array $headers HTTP headers.\n\t\t * @param bool  $is_xsl Whether these headers are for XSL.\n\t\t *\/\n\t\t$headers = $this->do_filter( 'sitemap\/http_headers', $headers, $is_xsl );\n\n\t\theader( $this->get_protocol() . ' 200 OK', true, 200 );\n\n\t\tforeach ( $headers as $header => $value ) {\n\t\t\theader( $header . ': ' . $value );\n\t\t}\n\t}\n\n\t\/**\n\t * Get HTTP protocol.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_protocol() {\n\t\tif ( ! is_null( $this->http_protocol ) ) {\n\t\t\treturn $this->http_protocol;\n\t\t}\n\n\t\t$this->http_protocol = ! empty( $_SERVER['SERVER_PROTOCOL'] ) ? sanitize_text_field( $_SERVER['SERVER_PROTOCOL'] ) : 'HTTP\/1.1';\n\t\treturn $this->http_protocol;\n\t}\n\n\t\/**\n\t * Get `charset` for the output.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_output_charset() {\n\t\treturn $this->output_charset;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/class-router.php","ext":"php","size":4851,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The sitemap URL rewrite setup and handling functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Sitemap;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Url;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Router class.\n *\/\nclass Router {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'init', 'init', 1 );\n\t\t$this->action( 'parse_query', 'request_sitemap', 1 );\n\t\t$this->action( 'template_redirect', 'template_redirect', 0 );\n\t\t$this->action( 'after_setup_theme', 'reduce_query_load', 99 );\n\t}\n\n\t\/**\n\t * Sets up rewrite rules.\n\t *\/\n\tpublic function init() {\n\t\tglobal $wp;\n\n\t\t$base = self::get_sitemap_base();\n\t\t$wp->add_query_var( 'sitemap' );\n\t\t$wp->add_query_var( 'sitemap_n' );\n\t\t$wp->add_query_var( 'xsl' );\n\n\t\tadd_rewrite_rule( $base . Sitemap::get_sitemap_index_slug() . '\\\\.xml$', 'index.php?sitemap=1', 'top' );\n\t\tadd_rewrite_rule( $base . '([^\/]+?)-sitemap([0-9]+)?\\.xml$', 'index.php?sitemap=$matches[1]&sitemap_n=$matches[2]', 'top' );\n\t\tadd_rewrite_rule( $base . '([a-z]+)?-?sitemap\\.xsl$', 'index.php?xsl=$matches[1]', 'top' );\n\t}\n\n\t\/**\n\t * Serves sitemap when needed using correct sitemap module.\n\t *\n\t * @param WP_Query $query The WP_Query instance (passed by reference).\n\t *\/\n\tpublic function request_sitemap( $query ) {\n\t\tif ( ! $query->is_main_query() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$xsl = self::get_sitemap_slug( get_query_var( 'xsl' ) );\n\t\tif ( ! empty( $xsl ) ) {\n\t\t\t$this->filter( 'user_has_cap', 'filter_user_has_cap' );\n\t\t\t$stylesheet = new Stylesheet();\n\t\t\t$stylesheet->output( $xsl );\n\t\t\treturn;\n\t\t}\n\n\t\t$type = get_query_var( 'sitemap' );\n\t\tif ( empty( $type ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnew Sitemap_XML( $type );\n\t}\n\n\t\/**\n\t * Check the current request URI, if we can determine it's probably an XML sitemap, kill loading the widgets.\n\t *\/\n\tpublic function reduce_query_load() {\n\t\tif ( ! isset( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$request   = sanitize_text_field( wp_unslash( $_SERVER['REQUEST_URI'] ) );\n\t\t$extension = substr( $request, -4 );\n\t\tif ( Str::contains( 'sitemap', $request ) && in_array( $extension, [ '.xml', '.xsl' ], true ) ) {\n\t\t\tremove_all_actions( 'widgets_init' );\n\t\t}\n\t}\n\n\t\/**\n\t * Redirects `sitemap.xml` to `sitemap_index.xml`.\n\t *\/\n\tpublic function template_redirect() {\n\t\tif ( ! $this->needs_sitemap_index_redirect() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::redirect( home_url( '\/' . Sitemap::get_sitemap_index_slug() . '.xml' ), 301 );\n\t\texit;\n\t}\n\n\t\/**\n\t * Checks whether the current request needs to be redirected to sitemap_index.xml.\n\t *\n\t * @return bool True if redirect is needed, false otherwise.\n\t *\/\n\tpublic function needs_sitemap_index_redirect() {\n\t\tglobal $wp_query;\n\n\t\treturn $wp_query->is_404 && home_url( '\/sitemap.xml' ) === Url::get_current_url();\n\t}\n\n\t\/**\n\t * Create base URL for the sitemap.\n\t *\n\t * @param string $page Page to append to the base URL.\n\t *\n\t * @return string base URL (incl page)\n\t *\/\n\tpublic static function get_base_url( $page ) {\n\t\t$page = self::get_page_url( $page );\n\t\t$base = self::get_sitemap_base();\n\t\treturn home_url( $base . $page );\n\t}\n\n\t\/**\n\t * Create base URL for the sitemap.\n\t *\n\t * @since 1.0.43\n\t *\n\t * @return string Sitemap base.\n\t *\/\n\tpublic static function get_sitemap_base() {\n\t\tglobal $wp_rewrite;\n\n\t\t$base = $wp_rewrite->using_index_permalinks() ? $wp_rewrite->index . '\/' : '';\n\n\t\t\/**\n\t\t * Filter the base URL of the sitemaps.\n\t\t *\n\t\t * @param string $base The string that should be added to home_url() to make the full base URL.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/sitemap\/base_url', $base );\n\t}\n\n\t\/**\n\t * Get sitemap slug.\n\t *\n\t * @param string $type Sitemap type.\n\t * @return string\n\t *\/\n\tpublic static function get_sitemap_slug( $type ) {\n\t\t\/**\n\t\t * Filter the slug of the sitemap.\n\t\t *\n\t\t * @param string $slug Slug of the sitemap.\n\t\t *\/\n\t\treturn apply_filters( \"rank_math\/sitemap\/{$type}\/slug\", $type );\n\t}\n\n\t\/**\n\t * Get page URL for the sitemap.\n\t *\n\t * @param string $page Page to append to the base URL.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_page_url( $page ) {\n\t\tglobal $wp_rewrite;\n\n\t\tif ( $wp_rewrite->using_permalinks() ) {\n\t\t\treturn $page;\n\t\t}\n\n\t\tif ( Sitemap::get_sitemap_index_slug() . '.xml' === $page ) {\n\t\t\treturn '?sitemap=1';\n\t\t}\n\n\t\t$page = \\preg_replace( '\/([^\\\/]+?)-sitemap([0-9]+)?\\.xml$\/', '?sitemap=$1&sitemap_n=$2', $page );\n\t\t$page = \\preg_replace( '\/([a-z]+)?-?sitemap\\.xsl$\/', '?xsl=$1', $page );\n\t\t$page = str_replace( 'locations.kml', '?sitemap=locations', $page );\n\n\t\treturn $page;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/sitemap-xsl.php","ext":"php","size":10287,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The XSL stylesheet output.\n *\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Sitemap\\Sitemap;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/\/ Echo so opening tag doesn't get confused for PHP.\necho '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n?>\n<xsl:stylesheet version=\"2.0\"\n\txmlns:html=\"http:\/\/www.w3.org\/TR\/REC-html40\"\n\txmlns:image=\"http:\/\/www.google.com\/schemas\/sitemap-image\/1.1\"\n\txmlns:sitemap=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\"\n\txmlns:kml=\"http:\/\/www.opengis.net\/kml\/2.2\"\n\txmlns:xsl=\"http:\/\/www.w3.org\/1999\/XSL\/Transform\"\n\txmlns:atom=\"http:\/\/www.w3.org\/2005\/Atom\">\n<xsl:output method=\"html\" version=\"1.0\" encoding=\"UTF-8\" indent=\"yes\"\/>\n\t<xsl:template match=\"\/\">\n\t\t<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\n\t\t\t<head>\n\t\t\t\t<xsl:choose>\n\t\t\t\t\t<xsl:when test=\"kml:kml\">\n\t\t\t\t\t\t<title><?php echo esc_html( $kml_title ); ?><\/title>\n\t\t\t\t\t<\/xsl:when>\n\t\t\t\t\t<xsl:otherwise>\n\t\t\t\t\t\t<title><?php echo esc_html( $title ); ?><\/title>\n\t\t\t\t\t<\/xsl:otherwise>\n\t\t\t\t<\/xsl:choose>\n\t\t\t\t<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\" \/>\n\t\t\t\t<style type=\"text\/css\">\n\t\t\t\t\tbody {\n\t\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\t\tfont-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\tcolor: #545353;\n\t\t\t\t\t}\n\t\t\t\t\ta {\n\t\t\t\t\t\tcolor: #05809e;\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t}\n\t\t\t\t\th1 {\n\t\t\t\t\t\tfont-size: 24px;\n\t\t\t\t\t\tfont-family: Verdana,Geneva,sans-serif;\n\t\t\t\t\t\tfont-weight: normal;\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t#description {\n\t\t\t\t\t\tbackground-color: #4275f4;\n\t\t\t\t\t\tpadding: 20px 40px;\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tpadding: 30px 30px 20px;\n\t\t\t\t\t}\n\t\t\t\t\t#description h1,\n\t\t\t\t\t#description p,\n\t\t\t\t\t#description a {\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\tfont-size: 1.1em;\n\t\t\t\t\t}\n\t\t\t\t\t#description h1 {\n\t\t\t\t\t\tfont-size: 2em;\n\t\t\t\t\t\tmargin-bottom: 1em;\n\t\t\t\t\t}\n\t\t\t\t\t#description p {\n\t\t\t\t\t\tmargin-top: 5px;\n\t\t\t\t\t}\n\t\t\t\t\t#description a {\n\t\t\t\t\t\tborder-bottom: 1px dotted;\n\t\t\t\t\t}\n\n\t\t\t\t\t#content {\n\t\t\t\t\t\tpadding: 20px 30px;\n\t\t\t\t\t\tbackground: #fff;\n\t\t\t\t\t\tmax-width: 75%;\n\t\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t\t}\n\t\t\t\t\ttable {\n\t\t\t\t\t\tborder: none;\n\t\t\t\t\t\tborder-collapse: collapse;\n\t\t\t\t\t\tfont-size: .9em;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t}\n\t\t\t\t\tth {\n\t\t\t\t\t\tbackground-color: #4275f4;\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t\tpadding: 15px 10px;\n\t\t\t\t\t\tfont-size: 14px;\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t}\n\t\t\t\t\ttd {\n\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\tborder-bottom: 1px solid #ddd;\n\t\t\t\t\t}\n\t\t\t\t\ttbody tr:nth-child(even) {\n\t\t\t\t\t\tbackground-color: #f7f7f7;\n\t\t\t\t\t}\n\t\t\t\t\ttable td a {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t}\n\t\t\t\t\ttable td a img {\n\t\t\t\t\t\tmax-height: 30px;\n\t\t\t\t\t\tmargin: 6px 3px;\n\t\t\t\t\t}\n\t\t\t\t<\/style>\n\t\t\t<\/head>\n\t\t\t<body>\n\n\t\t\t\t<xsl:choose>\n\t\t\t\t\t<xsl:when test=\"kml:kml\">\n\n\t\t\t\t\t\t<div id=\"description\">\n\n\t\t\t\t\t\t\t<h1><?php esc_html_e( 'KML File', 'rank-math' ); ?><\/h1>\n\n\t\t\t\t\t\t\t<?php if ( false === $this->do_filter( 'sitemap\/remove_credit', false ) ) : ?>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t\twp_kses_post(\n\t\t\t\t\t\t\t\t\t\t\t\/* translators: link to rankmath.com *\/\n\t\t\t\t\t\t\t\t\t\t\t__( 'This KML File is generated by <a href=\"%s\" target=\"_blank\">Rank Math WordPress SEO Plugin<\/a>. It is used to provide location information to Google.', 'rank-math' )\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tesc_url( KB::get( 'seo-suite' ) )\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\twp_kses_post(\n\t\t\t\t\t\t\t\t\t\t\/* translators: link to rankmath.com *\/\n\t\t\t\t\t\t\t\t\t\t__( 'Learn more about <a href=\"%s\" target=\"_blank\">KML File<\/a>.', 'rank-math' )\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t'https:\/\/developers.google.com\/kml\/documentation\/'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<\/p>\n\n\t\t\t\t\t\t<\/div>\n\n\t\t\t\t\t\t<div id=\"content\">\n\t\t\t\t\t\t\t<p class=\"expl\">\n\t\t\t\t\t\t\t\tThis KML file contains <xsl:value-of select=\"count(kml:kml\/kml:Document\/kml:Folder\/kml:Placemark)\"\/> Locations.\n\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t<p class=\"expl\">\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t\/* translators: xsl value count *\/\n\t\t\t\t\t\t\t\t\twp_kses_post( __( '<a href=\"%s\">&#8592; Sitemap Index<\/a>', 'rank-math' ) ),\n\t\t\t\t\t\t\t\t\tesc_url( Router::get_base_url( Sitemap::get_sitemap_index_slug() . '.xml' ) )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t<table id=\"sitemap\" cellpadding=\"3\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th width=\"25%\"><?php esc_html_e( 'Name', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t<th width=\"40%\"><?php esc_html_e( 'Address', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t<th width=\"15%\"><?php esc_html_e( 'Phone number', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t<th width=\"10%\"><?php esc_html_e( 'Latitude', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t<th width=\"10%\"><?php esc_html_e( 'Longitude', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t<\/thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<xsl:variable name=\"lower\" select=\"'abcdefghijklmnopqrstuvwxyz'\"\/>\n\t\t\t\t\t\t\t\t\t<xsl:variable name=\"upper\" select=\"'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\"\/>\n\t\t\t\t\t\t\t\t\t<xsl:for-each select=\"kml:kml\/kml:Document\/kml:Folder\/kml:Placemark\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsl:variable name=\"itemURL\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"atom:link\/@href\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/xsl:variable>\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"{$itemURL}\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"kml:name\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"kml:address\"\/>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"kml:phoneNumber\"\/>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"kml:LookAt\/kml:latitude\"\/>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"kml:LookAt\/kml:longitude\"\/>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t<\/xsl:for-each>\n\t\t\t\t\t\t\t\t<\/tbody>\n\t\t\t\t\t\t\t<\/table>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/xsl:when>\n\t\t\t\t\t<xsl:otherwise>\n\n\t\t\t\t\t\t<div id=\"description\">\n\n\t\t\t\t\t\t\t<h1><?php esc_html_e( 'XML Sitemap', 'rank-math' ); ?><\/h1>\n\n\t\t\t\t\t\t\t<?php if ( false === $this->do_filter( 'sitemap\/remove_credit', false ) ) : ?>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t\twp_kses_post(\n\t\t\t\t\t\t\t\t\t\t\t\/* translators: link to rankmath.com *\/\n\t\t\t\t\t\t\t\t\t\t\t__( 'This XML Sitemap is generated by <a href=\"%s\" target=\"_blank\">Rank Math WordPress SEO Plugin<\/a>. It is what search engines like Google use to crawl and re-crawl posts\/pages\/products\/images\/archives on your website.', 'rank-math' )\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tesc_url( KB::get( 'seo-suite' ) )\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t<?php endif; ?>\n\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\twp_kses_post(\n\t\t\t\t\t\t\t\t\t\t\/* translators: link to rankmath.com *\/\n\t\t\t\t\t\t\t\t\t\t__( 'Learn more about <a href=\"%s\" target=\"_blank\">XML Sitemaps<\/a>.', 'rank-math' )\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t'http:\/\/sitemaps.org'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<\/p>\n\n\t\t\t\t\t\t<\/div>\n\n\t\t\t\t\t\t<div id=\"content\">\n\t\t\t\t\t\t\t<xsl:if test=\"count(sitemap:sitemapindex\/sitemap:sitemap) &gt; 0\">\n\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t\t\/* translators: xsl value count *\/\n\t\t\t\t\t\t\t\t\t\twp_kses_post( __( 'This XML Sitemap Index file contains <strong>%s<\/strong> sitemaps.', 'rank-math' ) ),\n\t\t\t\t\t\t\t\t\t\t'<xsl:value-of select=\"count(sitemap:sitemapindex\/sitemap:sitemap)\"\/>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<\/p>\n\n\t\t\t\t\t\t\t\t<table id=\"sitemap\" cellpadding=\"3\">\n\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th width=\"75%\"><?php esc_html_e( 'Sitemap', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t\t<th width=\"25%\"><?php esc_html_e( 'Last Modified', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t<\/thead>\n\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<xsl:for-each select=\"sitemap:sitemapindex\/sitemap:sitemap\">\n\t\t\t\t\t\t\t\t\t\t\t<xsl:variable name=\"sitemapURL\">\n\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"sitemap:loc\"\/>\n\t\t\t\t\t\t\t\t\t\t\t<\/xsl:variable>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"{$sitemapURL}\"><xsl:value-of select=\"sitemap:loc\"\/><\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"concat(substring(sitemap:lastmod,0,11),concat(' ', substring(sitemap:lastmod,12,5)),concat(' ', substring(sitemap:lastmod,20,6)))\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t\t<\/xsl:for-each>\n\t\t\t\t\t\t\t\t\t<\/tbody>\n\n\t\t\t\t\t\t\t\t<\/table>\n\n\t\t\t\t\t\t\t<\/xsl:if>\n\t\t\t\t\t\t\t<xsl:if test=\"count(sitemap:sitemapindex\/sitemap:sitemap) &lt; 1\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t\t\/* translators: xsl value count *\/\n\t\t\t\t\t\t\t\t\t\twp_kses_post( __( 'This XML Sitemap contains <strong>%s<\/strong> URLs.', 'rank-math' ) ),\n\t\t\t\t\t\t\t\t\t\t'<xsl:value-of select=\"count(sitemap:urlset\/sitemap:url)\"\/>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<\/p>\n\n\t\t\t\t\t\t\t\t<p class=\"expl\">\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t\t\/* translators: xsl value count *\/\n\t\t\t\t\t\t\t\t\t\twp_kses_post( __( '<a href=\"%s\">&#8592; Sitemap Index<\/a>', 'rank-math' ) ),\n\t\t\t\t\t\t\t\t\t\tesc_url( Router::get_base_url( Sitemap::get_sitemap_index_slug() . '.xml' ) )\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<\/p>\n\n\t\t\t\t\t\t\t\t<table id=\"sitemap\" cellpadding=\"3\">\n\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th width=\"75%\"><?php esc_html_e( 'URL', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t\t<?php if ( Helper::get_settings( 'sitemap.include_images' ) ) : \/\/ phpcs:ignore ?><th width=\"5%\"><?php esc_html_e( 'Images', 'rank-math' ); ?><\/th><?php endif; ?>\n\t\t\t\t\t\t\t\t\t\t\t<th title=\"Last Modification Time\" width=\"20%\"><?php esc_html_e( 'Last Mod.', 'rank-math' ); ?><\/th>\n\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t<\/thead>\n\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<xsl:variable name=\"lower\" select=\"'abcdefghijklmnopqrstuvwxyz'\"\/>\n\t\t\t\t\t\t\t\t\t\t<xsl:variable name=\"upper\" select=\"'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\"\/>\n\t\t\t\t\t\t\t\t\t\t<xsl:for-each select=\"sitemap:urlset\/sitemap:url\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:variable name=\"itemURL\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"sitemap:loc\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/xsl:variable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"{$itemURL}\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"sitemap:loc\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t\t<?php if ( Helper::get_settings( 'sitemap.include_images' ) ) : ?>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"count(image:image)\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t\t<?php endif; ?>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsl:value-of select=\"concat(substring(sitemap:lastmod,0,11),concat(' ', substring(sitemap:lastmod,12,5)),concat(' ', substring(sitemap:lastmod,20,6)))\"\/>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t\t<\/xsl:for-each>\n\t\t\t\t\t\t\t\t\t<\/tbody>\n\n\t\t\t\t\t\t\t\t<\/table>\n\n\t\t\t\t\t\t\t<\/xsl:if>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/xsl:otherwise>\n\t\t\t\t<\/xsl:choose>\n\n\t\t\t<\/body>\n\t\t<\/html>\n\t<\/xsl:template>\n<\/xsl:stylesheet>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/html-sitemap\/class-authors.php","ext":"php","size":4627,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The HTML sitemap generator for authors.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap\\Html;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Database\\Database;\nuse RankMath\\Sitemap\\Providers\\Author;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Terms class.\n *\/\nclass Authors extends Author {\n\n\tuse Hooker;\n\n\t\/**\n\t * Get all authors.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_authors() {\n\t\t$sort_map = [\n\t\t\t'published'    => [\n\t\t\t\t'field' => 'user_registered',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t\t'modified'     => [\n\t\t\t\t'field' => 'user_registered',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t\t'alphabetical' => [\n\t\t\t\t'field' => 'display_name',\n\t\t\t\t'order' => 'ASC',\n\t\t\t],\n\t\t\t'post_id'      => [\n\t\t\t\t'field' => 'ID',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t];\n\n\t\t$sort_setting = Helper::get_settings( 'sitemap.html_sitemap_sort' );\n\t\t$sort         = ( isset( $sort_map[ $sort_setting ] ) ) ? $sort_map[ $sort_setting ] : $sort_map['published'];\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/html_sitemap\/sort_items' - Allow changing the sort order of the HTML sitemap.\n\t\t *\n\t\t * @var array $sort {\n\t\t *    @type string $field The field to sort by.\n\t\t *    @type string $order The sort order.\n\t\t * }\n\t\t * @var string $order The item type.\n\t\t * @var string $empty Empty string (unused).\n\t\t *\/\n\t\t$sort     = $this->do_filter( 'sitemap\/html_sitemap\/sort_items', $sort, 'authors', '' );\n\t\t$defaults = [\n\t\t\t'orderby' => $sort['field'],\n\t\t\t'order'   => $sort['order'],\n\t\t];\n\t\t$args     = $this->do_filter( 'sitemap\/author\/query', wp_parse_args( [ 'posts_per_page' => -1 ], $defaults ) );\n\t\t$users    = $this->get_users( $args );\n\n\t\tif ( empty( $users ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn $users;\n\t}\n\n\t\/**\n\t * Check if user is not in the excluded roles and doesn't have noindex set.\n\t *\n\t * @param object $user Partial user data from database.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function should_include_user( $user ) {\n\t\t$excluded_roles = (array) Helper::get_settings( 'sitemap.exclude_roles' );\n\t\t$roles          = (array) get_userdata( $user->ID )->roles;\n\t\t$intersect      = array_intersect( $roles, $excluded_roles );\n\t\tif ( ! empty( $intersect ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$robots = get_user_meta( $user->ID, 'rank_math_robots', true );\n\t\tif ( is_array( $robots ) && in_array( 'noindex', $robots, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Generate the HTML sitemap for authors.\n\t *\n\t * @return string\n\t *\/\n\tpublic function generate_sitemap() {\n\t\t$users = $this->get_authors();\n\t\tif ( empty( $users ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$output[] = '<div class=\"rank-math-html-sitemap__section rank-math-html-sitemap__section--authors\">';\n\t\t$output[] = '<h2 class=\"rank-math-html-sitemap__title\">' . esc_html__( 'Authors', 'rank-math' ) . '<\/h2>';\n\t\t$output[] = '<ul class=\"rank-math-html-sitemap__list\">';\n\t\t$output[] = $this->generate_authors_list( $users );\n\t\t$output[] = '<\/ul>';\n\t\t$output[] = '<\/div>';\n\n\t\t$output = implode( '', $output );\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Generate HTML list of authors.\n\t *\n\t * @param array $authors List of authors.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_authors_list( $authors ) {\n\t\tif ( empty( $authors ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$output = [];\n\t\tforeach ( $authors as $author ) {\n\t\t\t$output[] = '<li class=\"rank-math-html-sitemap__item\">'\n\t\t\t\t. '<a href=\"' . esc_url( $this->get_author_link( $author ) ) . '\" class=\"rank-math-html-sitemap__link\">'\n\t\t\t\t. esc_html( $this->get_author_title( $author ) )\n\t\t\t\t. '<\/a>'\n\t\t\t\t. '<\/li>';\n\t\t}\n\n\t\treturn implode( '', $output );\n\t}\n\n\t\/**\n\t * Get the author link.\n\t *\n\t * @param object $author Author data from database (not a WP_User object).\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_author_link( $author ) {\n\t\treturn get_author_posts_url( $author->ID, $author->user_nicename );\n\t}\n\n\t\/**\n\t * Get the author title.\n\t *\n\t * @param object $author The author data.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_author_title( $author ) {\n\t\tif ( Helper::get_settings( 'sitemap.html_sitemap_seo_titles' ) !== 'seo_titles' ) {\n\t\t\treturn $author->display_name;\n\t\t}\n\n\t\t\/\/ Custom SEO title.\n\t\t$meta = get_user_meta( $author->ID, 'rank_math_title', true );\n\t\tif ( ! empty( $meta ) ) {\n\t\t\treturn Helper::replace_vars( $meta, $author );\n\t\t}\n\n\t\t\/\/ Default SEO title from the global settings.\n\t\t$template = Helper::get_settings( 'titles.pt_author_title' );\n\t\tif ( ! empty( $template ) ) {\n\t\t\treturn Helper::replace_vars( $template, $author );\n\t\t}\n\n\t\t\/\/ Fallback to author name.\n\t\treturn $author->display_name;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/html-sitemap\/class-posts.php","ext":"php","size":9972,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The HTML sitemap generator for posts.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap\\Html;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Database\\Database;\nuse RankMath\\Sitemap\\Sitemap as SitemapBase;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Posts class.\n *\/\nclass Posts {\n\n\tuse Hooker;\n\n\t\/**\n\t * An array of posts that have a parent.\n\t *\n\t * @var array\n\t *\/\n\tprivate $children = [];\n\n\t\/**\n\t * Get all posts from a given post type.\n\t *\n\t * @param string $post_type   Post type.\n\t * @param array  $post_parents An array of post parent ids.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_posts( $post_type, $post_parents = [] ) {\n\t\tglobal $wpdb;\n\t\t$sort_map = [\n\t\t\t'published'    => [\n\t\t\t\t'field' => 'post_date',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t\t'modified'     => [\n\t\t\t\t'field' => 'post_modified',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t\t'alphabetical' => [\n\t\t\t\t'field' => 'post_title',\n\t\t\t\t'order' => 'ASC',\n\t\t\t],\n\t\t\t'post_id'      => [\n\t\t\t\t'field' => 'ID',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t];\n\n\t\t$sort_setting = Helper::get_settings( 'sitemap.html_sitemap_sort' );\n\t\t$sort         = ( isset( $sort_map[ $sort_setting ] ) ) ? $sort_map[ $sort_setting ] : $sort_map['published'];\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/html_sitemap\/sort_items' - Allow changing the sort order of the HTML sitemap.\n\t\t *\n\t\t * @var array $sort {\n\t\t *    @type string $field The field to sort by.\n\t\t *    @type string $order The sort order.\n\t\t * }\n\t\t * @var string $post_type The post type name.\n\t\t * @var string $order     The item type.\n\t\t *\/\n\t\t$sort = $this->do_filter( 'sitemap\/html_sitemap\/sort_items', $sort, 'posts', $post_type );\n\n\t\t$statuses = [ 'publish' ];\n\n\t\t\/**\n\t\t * Filter to add a JOIN clause for the HTML get_posts(type, post_parent[]) query.\n\t\t *\n\t\t * @param string $join       SQL join clause, defaults to an empty string.\n\t\t * @param array  $post_type  The Post type.\n\t\t *\/\n\t\t$join_filter = $this->do_filter( 'html_sitemap\/get_posts\/join', '', $post_type );\n\n\t\t\/**\n\t\t * Filter to add a WHERE clause for the HTML sitemap get_posts(type, post_parent[] ) query.\n\t\t *\n\t\t * @param string $where      SQL WHERE query, defaults to an empty string.\n\t\t * @param array  $post_type  The Post type.\n\t\t *\/\n\t\t$where_filter = $this->do_filter( 'html_sitemap\/get_posts\/where', '', $post_type );\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/html_sitemap_post_statuses' - Allow changing the post statuses that should be included in the sitemap.\n\t\t *\n\t\t * @var array  $statuses Post statuses.\n\t\t * @var string $post_type Post type name.\n\t\t *\/\n\t\t$statuses  = $this->do_filter( 'sitemap\/html_sitemap_post_statuses', $statuses, $post_type );\n\t\t$get_child = ! empty( $post_parents ) ? \" WHERE post_parent !='' \" : '';\n\t\t$sql       = \"\n\t\t\tSELECT l.ID, post_title, post_name, post_parent, post_date, post_type, l.post_modified\n\t\t\tFROM (\n\t\t\t\tSELECT DISTINCT p.ID, p.post_modified FROM {$wpdb->posts} as p\n\t\t\t\t{$join_filter}\n\t\t\t\tLEFT JOIN {$wpdb->postmeta} AS pm ON ( p.ID = pm.post_id AND pm.meta_key = 'rank_math_robots' )\n\t\t\t\tWHERE (\n\t\t\t\t\t( pm.meta_key = 'rank_math_robots' AND pm.meta_value NOT LIKE '%noindex%' ) OR\n\t\t\t\t\tpm.post_id IS NULL\n\t\t\t\t)\n\t\t\t\tAND p.post_type IN ( '\" . $post_type . \"' ) AND p.post_status IN ( '\" . join( \"', '\", esc_sql( $statuses ) ) . \"' )\n\t\t\t\t{$where_filter}\n\t\t\t\tORDER BY p.post_modified DESC\n\t\t\t)\n\t\t\to JOIN {$wpdb->posts} l ON l.ID = o.ID \" . $get_child . \" ORDER BY \" . $sort['field'] . \" \" . $sort['order']; \/\/ phpcs:ignore\n\t\treturn DB_Helper::get_results( $wpdb->prepare( $sql ) );\n\t}\n\n\t\/**\n\t * Generate the HTML sitemap for a given post type.\n\t *\n\t * @param string $post_type Post type name.\n\t * @param bool   $show_dates Whether to show dates.\n\t *\n\t * @return string\n\t *\/\n\tpublic function generate_sitemap( $post_type, $show_dates ) {\n\t\t$posts = $this->get_posts( $post_type );\n\n\t\tif ( empty( $posts ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$output[] = '<div class=\"rank-math-html-sitemap__section rank-math-html-sitemap__section--post-type rank-math-html-sitemap__section--' . $post_type . '\">';\n\t\t$output[] = '<h2 class=\"rank-math-html-sitemap__title\">' . esc_html( get_post_type_object( $post_type )->labels->name ) . '<\/h2>';\n\t\t$output[] = '<ul class=\"rank-math-html-sitemap__list\">';\n\t\t$output[] = $this->generate_posts_list( $posts, $show_dates, $post_type );\n\t\t$output[] = '<\/ul>';\n\t\t$output[] = '<\/div>';\n\n\t\t$output = implode( '', $output );\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Generate the post list HTML.\n\t *\n\t * @param array  $posts Array of posts.\n\t * @param bool   $show_dates Whether to show dates.\n\t * @param string $post_type Post type name.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_posts_list( $posts, $show_dates, $post_type ) {\n\t\tif ( empty( $posts ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( is_post_type_hierarchical( $post_type ) ) {\n\t\t\t$post_ids  = [];\n\t\t\t$post_list = [];\n\t\t\tarray_map(\n\t\t\t\tfunction ( $post ) use ( &$post_ids, &$post_list ) {\n\t\t\t\t\t$post_ids[]             = $post->ID;\n\t\t\t\t\t$post_list[ $post->ID ] = $post;\n\t\t\t\t},\n\t\t\t\t$posts\n\t\t\t);\n\n\t\t\t$children = $this->get_posts( $post_type, $post_ids );\n\t\t\tforeach ( $children as $child ) {\n\t\t\t\t\/\/ Confirm if child has a parent available, the parent might not be index-able and re-add the child to $posts!\n\t\t\t\t$parent = array_filter(\n\t\t\t\t\t$post_list,\n\t\t\t\t\tfunction ( $post ) use ( $child ) {\n\t\t\t\t\t\treturn $child->post_parent === $post->ID;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif ( empty( $parent ) ) {\n\t\t\t\t\t$child->child_has_no_parent = true;\n\t\t\t\t\t$post_list[ $child->ID ]    = $child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t$this->children[ $post_type ][ $child->post_parent ][ $child->ID ] = $child;\n\t\t\t}\n\n\t\t\t$post_list = $this->remove_with_parent( $post_list );\n\t\t\treturn $this->generate_posts_list_hierarchical( $post_list, $show_dates, $post_type );\n\t\t}\n\n\t\treturn $this->generate_posts_list_flat( $posts, $show_dates );\n\t}\n\n\t\/**\n\t * Get the post list HTML for non-hierarchical post types.\n\t *\n\t * @param array $posts The posts to output.\n\t * @param bool  $show_dates Whether to show the post dates.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_posts_list_flat( $posts, $show_dates ) {\n\t\t$output = [];\n\t\tforeach ( $posts as $post ) {\n\t\t\tif ( ! SitemapBase::is_object_indexable( absint( $post->ID ) ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$url = $this->do_filter( 'sitemap\/entry', [ 'loc' => esc_url( $this->get_post_link( $post ) ) ], 'post', $post );\n\t\t\tif ( empty( $url['loc'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$output[] = '<li class=\"rank-math-html-sitemap__item\">'\n\t\t\t. '<a href=\"' . esc_url( $this->get_post_link( $post ) ) . '\" class=\"rank-math-html-sitemap__link\">'\n\t\t\t. esc_html( $this->get_post_title( $post ) )\n\t\t\t. '<\/a>'\n\t\t\t. ( $show_dates ? ' <span class=\"rank-math-html-sitemap__date\">(' . esc_html( mysql2date( get_option( 'date_format' ), $post->post_date ) ) . ')<\/span>' : '' )\n\t\t\t. '<\/li>';\n\t\t}\n\n\t\treturn implode( '', $output );\n\t}\n\n\t\/**\n\t * Get the post list HTML for hierarchical post types. This will output the\n\t * posts in a nested list.\n\t *\n\t * @param array  $posts      The posts to output.\n\t * @param bool   $show_dates Whether to show the post dates.\n\t * @param string $post_type  Post type name.\n\t * @param bool   $child      Whether the passed posts are children.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_posts_list_hierarchical( $posts, $show_dates, $post_type, $child = false ) {\n\t\t$output  = [];\n\t\t$exclude = wp_parse_id_list( Helper::get_settings( 'sitemap.exclude_posts' ) );\n\n\t\tforeach ( $posts as $post ) {\n\t\t\t$check_parent_index = empty( $post->post_parent ) ? 0 : SitemapBase::is_object_indexable( $post->post_parent );\n\t\t\t$is_indexable       = SitemapBase::is_object_indexable( absint( $post->ID ) );\n\n\t\t\tif ( ( ! $check_parent_index || $child ) && $is_indexable ) {\n\t\t\t\t$output[] = '<li class=\"rank-math-html-sitemap__item\">'\n\t\t\t\t. '<a href=\"' . esc_url( get_permalink( $post->ID ) ) . '\" class=\"rank-math-html-sitemap__link\">'\n\t\t\t\t. esc_html( $this->get_post_title( $post ) )\n\t\t\t\t. '<\/a>'\n\t\t\t\t. ( $show_dates ? ' <span class=\"rank-math-html-sitemap__date\">(' . esc_html( mysql2date( get_option( 'date_format' ), $post->post_date ) ) . ')<\/span>' : '' );\n\t\t\t}\n\n\t\t\tif ( ! empty( $this->children[ $post_type ][ $post->ID ] ) ) {\n\t\t\t\tif ( $is_indexable ) {\n\t\t\t\t\t$output[] = '<ul class=\"rank-math-html-sitemap__list\">';\n\t\t\t\t}\n\n\t\t\t\t$output[] = $this->generate_posts_list_hierarchical(  $this->children[ $post_type ][ $post->ID ], $show_dates, $post_type, true ); \/\/ phpcs:ignore\n\n\t\t\t\tif ( $is_indexable ) {\n\t\t\t\t\t$output[] = '<\/ul>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $is_indexable ) {\n\t\t\t\t$output[] = '<\/li>';\n\t\t\t}\n\t\t}\n\n\t\treturn implode( '', $output );\n\t}\n\n\t\/**\n\t * Get the post permalink.\n\t *\n\t * @param object $post The post object.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_post_link( $post ) {\n\t\treturn get_permalink( $post->ID );\n\t}\n\n\t\/**\n\t * Get the post title.\n\t *\n\t * @param object $post The post data.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_post_title( $post ) {\n\t\tif ( Helper::get_settings( 'sitemap.html_sitemap_seo_titles' ) !== 'seo_titles' ) {\n\t\t\treturn $post->post_title;\n\t\t}\n\n\t\t\/\/ Custom SEO title.\n\t\t$meta = get_post_meta( $post->ID, 'rank_math_title', true );\n\t\tif ( ! empty( $meta ) ) {\n\t\t\treturn Helper::replace_vars( $meta, get_post( $post->ID ) );\n\t\t}\n\n\t\t\/\/ Default SEO title from the global settings.\n\t\t$template = Helper::get_settings( \"titles.pt_{$post->post_type}_title\" );\n\t\tif ( ! empty( $template ) ) {\n\t\t\treturn Helper::replace_vars( $template, get_post( $post->ID ) );\n\t\t}\n\n\t\t\/\/ Fallback to post title.\n\t\treturn $post->post_title;\n\t}\n\n\t\/**\n\t * Removes posts with a parent to avoid them being rendered twice.\n\t *\n\t * @param array $posts Array of post objects.\n\t *\n\t * @return array\n\t *\/\n\tprivate function remove_with_parent( $posts ) {\n\t\treturn array_filter(\n\t\t\t$posts,\n\t\t\tfunction ( $post ) {\n\t\t\t\treturn ! $post->post_parent || isset( $post->child_has_no_parent );\n\t\t\t}\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/html-sitemap\/class-sitemap.php","ext":"php","size":6424,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Sitemap module - HTML Sitemap feature.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap\\Html;\n\nuse RankMath\\Helper;\nuse RankMath\\Sitemap\\Providers\\Taxonomy;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Sitemap\\Cache;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Sitemap class.\n *\/\nclass Sitemap extends Taxonomy {\n\n\tuse Hooker;\n\n\t\/**\n\t * Generators.\n\t *\n\t * @var array\n\t *\/\n\tprivate $generators;\n\n\t\/**\n\t * Cache.\n\t *\n\t * @var object\n\t *\/\n\tprivate $cache;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( ! Helper::get_settings( 'sitemap.html_sitemap' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->cache      = new Cache();\n\t\t$this->generators = [\n\t\t\t'posts'   => new Posts(),\n\t\t\t'terms'   => new Terms(),\n\t\t\t'authors' => new Authors(),\n\t\t];\n\n\t\t$display_mode = Helper::get_settings( 'sitemap.html_sitemap_display' );\n\t\tif ( 'page' === $display_mode ) {\n\t\t\t$this->action( 'the_content', 'show_on_page' );\n\t\t} elseif ( 'shortcode' === $display_mode ) {\n\t\t\tadd_shortcode( 'rank_math_html_sitemap', [ $this, 'shortcode' ] );\n\n\t\t\t\/\/ Compatibility code for the [aioseo_html_sitemap] shortcode.\n\t\t\tadd_shortcode( 'aioseo_html_sitemap', [ $this, 'shortcode' ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the HTML sitemap cache.\n\t *\n\t * @param string $name     Name of the cache.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_cache( $name ) {\n\t\tif ( true !== \\RankMath\\Sitemap\\Sitemap::is_cache_enabled() ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn $this->cache->get_sitemap( $name, 1, true );\n\t}\n\n\t\/**\n\t * Set the HTML sitemap cache.\n\t *\n\t * @param string $name     Name of the cache.\n\t * @param string $content  Content of the cache.\n\t *\/\n\tprivate function set_cache( $name, $content ) {\n\t\t$this->cache->store_sitemap( $name, 1, $content, true );\n\t}\n\n\t\/**\n\t * Get generator.\n\t *\n\t * @param string $generator Generator name.\n\t *\n\t * @return object\n\t *\/\n\tprivate function get_generator( $generator ) {\n\t\tif ( ! isset( $this->generators[ $generator ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $this->generators[ $generator ];\n\t}\n\n\t\/**\n\t * Get the HTML sitemap output.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_output() {\n\t\t$post_types = self::get_post_types();\n\t\t$taxonomies = self::get_taxonomies();\n\n\t\t\/**\n\t\t * Filter the setting of excluding empty terms from the XML sitemap.\n\t\t *\n\t\t * @param boolean $exclude        Defaults to true.\n\t\t * @param array   $taxonomies     Array of names for the taxonomies being processed.\n\t\t *\/\n\n\t\t$show_dates = Helper::get_settings( 'sitemap.html_sitemap_show_dates' );\n\t\t$output     = [];\n\n\t\t$output[] = '<div class=\"rank-math-html-sitemap\">';\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$cached = $this->get_cache( $post_type );\n\t\t\tif ( ! empty( $cached ) ) {\n\t\t\t\t$output[] = $cached;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$sitemap = $this->get_generator( 'posts' )->generate_sitemap( $post_type, $show_dates );\n\t\t\t$this->set_cache( $post_type, $sitemap );\n\t\t\t$output[] = $sitemap;\n\t\t}\n\n\t\tif ( ! empty( $taxonomies ) ) {\n\t\t\tforeach ( $taxonomies as $taxonomy => $object ) {\n\n\t\t\t\t$cached = $this->get_cache( $taxonomy );\n\t\t\t\tif ( ! empty( $cached ) ) {\n\t\t\t\t\t$output[] = $cached;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$hide_empty = ! Helper::get_settings( 'sitemap.tax_' . $taxonomy . '_include_empty' );\n\t\t\t\t$sitemap    = $this->get_generator( 'terms' )->generate_sitemap(\n\t\t\t\t\t$taxonomy,\n\t\t\t\t\t$show_dates,\n\t\t\t\t\t[\n\t\t\t\t\t\t'hide_empty' => $hide_empty,\n\t\t\t\t\t\t'exclude'    => wp_parse_id_list( Helper::get_settings( 'sitemap.exclude_terms' ) ),\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t\t$this->set_cache( $taxonomy, $sitemap );\n\t\t\t\t$output[] = $sitemap;\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->should_show_author_sitemap() ) {\n\t\t\t$cached = $this->get_cache( 'author' );\n\t\t\tif ( ! empty( $cached ) ) {\n\t\t\t\t$output[] = $cached;\n\t\t\t} else {\n\t\t\t\t$sitemap = $this->get_generator( 'authors' )->generate_sitemap();\n\t\t\t\t$this->set_cache( 'author', $sitemap );\n\t\t\t\t$output[] = $sitemap;\n\t\t\t}\n\t\t}\n\n\t\t$output[] = '<\/div>';\n\n\t\treturn implode( '', $output );\n\t}\n\n\t\/**\n\t * Get post types to be included in the HTML sitemap.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_post_types() {\n\t\t$post_types = [];\n\t\tforeach ( Helper::get_accessible_post_types() as $post_type ) {\n\t\t\tif ( ! Helper::get_settings( \"sitemap.pt_{$post_type}_html_sitemap\" ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$post_types[] = $post_type;\n\t\t}\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/html_sitemap_post_types' - Allow changing the post types to be included in the HTML sitemap.\n\t\t *\n\t\t * @var array $post_types The post types to be included in the HTML sitemap.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/sitemap\/html_sitemap_post_types', $post_types );\n\t}\n\n\t\/**\n\t * Check if author sitemap should be shown or not.\n\t *\/\n\tprivate function should_show_author_sitemap() {\n\t\t$show = Helper::get_settings( 'sitemap.authors_html_sitemap' );\n\t\tif ( ! $show ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$disable_author_archives = Helper::get_settings( 'titles.disable_author_archives' );\n\t\tif ( $disable_author_archives ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$robots = Helper::get_settings( 'titles.author_robots' );\n\t\tif ( is_array( $robots ) && in_array( 'noindex', $robots, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get taxonomies to be included in the HTML sitemap.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_taxonomies() {\n\t\t$taxonomies = [];\n\t\tforeach ( Helper::get_accessible_taxonomies() as $taxonomy ) {\n\t\t\tif ( ! Helper::get_settings( \"sitemap.tax_{$taxonomy->name}_html_sitemap\" ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$taxonomies[ $taxonomy->name ] = $taxonomy;\n\t\t}\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/html_sitemap_taxonomies' - Allow changing the taxonomies to be included in the HTML sitemap.\n\t\t *\n\t\t * @var array $taxonomies The taxonomies to be included in the HTML sitemap.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/sitemap\/html_sitemap_taxonomies', $taxonomies );\n\t}\n\n\t\/**\n\t * Show sitemap on a page (after content).\n\t *\n\t * @param mixed $content The page content.\n\t *\/\n\tpublic function show_on_page( $content ) {\n\t\tif ( ! is_page() ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\tif ( ! is_main_query() || ! in_the_loop() ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t$post_id = get_the_ID();\n\t\tif ( (int) Helper::get_settings( 'sitemap.html_sitemap_page' ) !== $post_id ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\treturn $content . $this->get_output();\n\t}\n\n\t\/**\n\t * Shortcode callback.\n\t *\/\n\tpublic function shortcode() {\n\t\treturn $this->get_output();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/sitemap\/html-sitemap\/class-terms.php","ext":"php","size":7689,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The HTML sitemap generator for terms.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Sitemap\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Sitemap\\Html;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Database\\Database;\nuse RankMath\\Sitemap\\Sitemap as SitemapBase;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Terms class.\n *\/\nclass Terms {\n\n\tuse Hooker;\n\n\t\/**\n\t * Get all terms from a given taxonomy.\n\t *\n\t * @param string $taxonomy    Taxonomy name.\n\t * @param int    $parent_term Parent term ID.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_terms( $taxonomy, $parent_term = 0 ) {\n\t\t$sort_map = [\n\t\t\t'published'    => [\n\t\t\t\t'field' => 'term_id',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t\t'modified'     => [\n\t\t\t\t'field' => 'term_id',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t\t'alphabetical' => [\n\t\t\t\t'field' => 'name',\n\t\t\t\t'order' => 'ASC',\n\t\t\t],\n\t\t\t'post_id'      => [\n\t\t\t\t'field' => 'term_id',\n\t\t\t\t'order' => 'DESC',\n\t\t\t],\n\t\t];\n\n\t\t$sort_setting = Helper::get_settings( 'sitemap.html_sitemap_sort' );\n\t\t$sort         = ( isset( $sort_map[ $sort_setting ] ) ) ? $sort_map[ $sort_setting ] : $sort_map['published'];\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/sitemap\/html_sitemap\/sort_items' - Allow changing the sort order of the HTML sitemap.\n\t\t *\n\t\t * @var array $sort {\n\t\t *    @type string $field The field to sort by.\n\t\t *    @type string $order The sort order.\n\t\t * }\n\t\t * @var string $taxonomy The taxonomy name.\n\t\t * @var string $order    The item type.\n\t\t *\/\n\t\t$sort = $this->do_filter( 'sitemap\/html_sitemap\/sort_items', $sort, 'terms', $taxonomy );\n\n\t\t$exclude     = wp_parse_id_list( Helper::get_settings( 'sitemap.exclude_terms' ) );\n\t\t$terms_table = Database::table( 'terms' );\n\t\t$tt_table    = Database::table( 'term_taxonomy' );\n\n\t\t$query = $terms_table->where( 'taxonomy', $taxonomy )\n\t\t\t->select( [ $terms_table->table . '.term_id', 'name', 'slug', 'taxonomy' ] )\n\t\t\t->leftJoin( $tt_table->table, $terms_table->table . '.term_id', $tt_table->table . '.term_id' )\n\t\t\t->where( 'parent', $parent_term );\n\n\t\tif ( ! empty( $exclude ) ) {\n\t\t\t$query->whereNotIn( $terms_table->table . '.term_id', $exclude );\n\t\t}\n\n\t\t$terms = $query->orderBy( $sort['field'], $sort['order'] )->get();\n\n\t\treturn $this->get_indexable_terms( $terms, $taxonomy );\n\t}\n\n\t\/**\n\t * Generate the HTML sitemap for a given taxonomy.\n\t *\n\t * @param string $taxonomy   Taxonomy name.\n\t * @param bool   $show_dates Whether to show dates.\n\t * @param array  $args       Array with term query arguments.\n\t *\n\t * @return string\n\t *\/\n\tpublic function generate_sitemap( $taxonomy, $show_dates, $args = [] ) {\n\t\t$args['taxonomy'] = $taxonomy;\n\t\t$terms            = get_terms( $args );\n\t\t$terms            = $this->get_indexable_terms( $terms, $taxonomy );\n\t\tif ( empty( $terms ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$output[] = '<div class=\"rank-math-html-sitemap__section rank-math-html-sitemap__section--taxonomy rank-math-html-sitemap__section--' . $taxonomy . '\">';\n\t\t$output[] = '<h2 class=\"rank-math-html-sitemap__title\">' . esc_html( get_taxonomy( $taxonomy )->labels->name ) . '<\/h2>';\n\t\t$output[] = '<ul class=\"rank-math-html-sitemap__list\">';\n\t\t$output[] = $this->generate_terms_list( $terms, $taxonomy );\n\t\t$output[] = '<\/ul>';\n\t\t$output[] = '<\/div>';\n\n\t\t$output = implode( '', $output );\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Get the term list HTML.\n\t *\n\t * @param array  $terms    The terms to output.\n\t * @param object $taxonomy The taxonomy object.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_terms_list( $terms, $taxonomy ) {\n\t\tif ( empty( $terms ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( is_taxonomy_hierarchical( $taxonomy ) ) {\n\t\t\treturn $this->generate_terms_list_hierarchical( $terms, $taxonomy );\n\t\t}\n\n\t\treturn $this->generate_terms_list_flat( $terms, $taxonomy );\n\t}\n\n\t\/**\n\t * Get the term list HTML for non-hierarchical taxonomies.\n\t *\n\t * @param array  $terms    The terms to output.\n\t * @param string $taxonomy Taxonomy name.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_terms_list_flat( $terms, $taxonomy ) {\n\t\t$output = [];\n\t\tforeach ( $terms as $term ) {\n\t\t\t$output[] = '<li class=\"rank-math-html-sitemap__item\">'\n\t\t\t\t. '<a href=\"' . esc_url( $this->get_term_link( (int) $term->term_id, $taxonomy ) ) . '\" class=\"rank-math-html-sitemap__link\">'\n\t\t\t\t. esc_html( $this->get_term_title( $term, $taxonomy ) )\n\t\t\t\t. '<\/a>'\n\t\t\t\t. '<\/li>';\n\t\t}\n\n\t\treturn implode( '', $output );\n\t}\n\n\t\/**\n\t * Get the term list HTML for hierarchical taxonomies. This will output the\n\t * terms in a nested list.\n\t *\n\t * @param array  $terms    The terms to output.\n\t * @param string $taxonomy The taxonomy name.\n\t * @param bool   $remove_children Whether to remove terms that have a parent.\n\t *\n\t * @return string\n\t *\/\n\tprivate function generate_terms_list_hierarchical( $terms, $taxonomy, $remove_children = true ) {\n\t\t$output = [];\n\t\tif ( $remove_children ) {\n\t\t\t\/\/ Remove initial with parents because they are queried below in $this->get_terms!\n\t\t\t$terms = $this->remove_with_parent( $terms );\n\t\t}\n\t\tforeach ( $terms as $term ) {\n\t\t\t$output[] = '<li class=\"rank-math-html-sitemap__item\">'\n\t\t\t\t\t\t\t. '<a href=\"' . esc_url( $this->get_term_link( (int) $term->term_id, $taxonomy ) ) . '\" class=\"rank-math-html-sitemap__link\">'\n\t\t\t\t\t\t\t. esc_html( $this->get_term_title( $term, $taxonomy ) )\n\t\t\t\t\t\t\t. '<\/a>';\n\n\t\t\t$children = $this->get_terms( $taxonomy, $term->term_id );\n\n\t\t\tif ( ! empty( $children ) ) {\n\t\t\t\t$output[] = '<ul class=\"rank-math-html-sitemap__list\">';\n\t\t\t\t$output[] = $this->generate_terms_list_hierarchical( $children, $taxonomy, false );\n\t\t\t\t$output[] = '<\/ul>';\n\t\t\t}\n\t\t\t$output[] = '<\/li>';\n\t\t}\n\n\t\treturn implode( '', $output );\n\t}\n\n\t\/**\n\t * Get the term link.\n\t *\n\t * @param int    $term_id  The term ID.\n\t * @param string $taxonomy The taxonomy name.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_term_link( $term_id, $taxonomy ) {\n\t\t$term = get_term( $term_id, $taxonomy );\n\t\tif ( is_wp_error( $term ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn get_term_link( $term );\n\t}\n\n\t\/**\n\t * Get the term title.\n\t *\n\t * @param object $term     The term data.\n\t * @param string $taxonomy The taxonomy name.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_term_title( $term, $taxonomy ) {\n\t\tif ( Helper::get_settings( 'sitemap.html_sitemap_seo_titles' ) !== 'seo_titles' ) {\n\t\t\treturn $term->name;\n\t\t}\n\n\t\t\/\/ Custom SEO title.\n\t\t$meta = get_term_meta( $term->term_id, 'rank_math_title', true );\n\t\tif ( ! empty( $meta ) ) {\n\t\t\treturn Helper::replace_vars( $meta, get_term( $term->term_id, $taxonomy ) );\n\t\t}\n\n\t\t\/\/ Default SEO title from the global settings.\n\t\t$template = Helper::get_settings( \"titles.tax_{$taxonomy}_title\" );\n\t\tif ( ! empty( $template ) ) {\n\t\t\treturn Helper::replace_vars( $template, get_term( $term->term_id, $taxonomy ) );\n\t\t}\n\n\t\t\/\/ Fallback to term name.\n\t\treturn $term->name;\n\t}\n\n\t\/**\n\t * Removes terms that have a parent (and the parent is available in the list) from the list.\n\t *\n\t * @param array $terms The terms list.\n\t *\n\t * @return array\n\t *\/\n\tprivate function remove_with_parent( $terms ) {\n\t\t$term_ids = array_column( $terms, 'term_id' );\n\t\treturn array_filter(\n\t\t\t$terms,\n\t\t\tfunction ( $term ) use ( $term_ids ) {\n\t\t\t\treturn ! $term->parent || ! in_array( $term->parent, $term_ids, true );\n\t\t\t}\n\t\t);\n\t}\n\n\t\/**\n\t * Remove terms that are not indexable.\n\t *\n\t * @param array  $terms    Array of terms.\n\t * @param string $taxonomy Taxonomy name that `$terms` are part of.\n\t * @return array\n\t *\/\n\tprivate function get_indexable_terms( $terms, $taxonomy ) {\n\t\treturn array_filter(\n\t\t\t$terms,\n\t\t\tfunction ( $term ) use ( $taxonomy ) {\n\t\t\t\treturn SitemapBase::is_object_indexable( get_term( $term->term_id, $taxonomy ), 'term' );\n\t\t\t}\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-redirections.php","ext":"php","size":5605,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections Module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Redirections class.\n *\/\nclass Redirections {\n\n\tuse Hooker;\n\n\t\/**\n\t * Admin object.\n\t *\n\t * @var Admin\n\t *\/\n\tpublic $admin;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->load_admin();\n\n\t\tif ( ! is_admin() ) {\n\t\t\t\/\/ Delay the redirection when BuddyPress plugin  is active since it uses template_redirect hook to show the group page content.\n\t\t\t$hook = class_exists( 'BuddyPress' ) ? 'template_redirect' : 'wp';\n\t\t\t$this->action( $hook, 'do_redirection', 11 );\n\t\t}\n\n\t\tif ( Helper::has_cap( 'redirections' ) ) {\n\t\t\t$this->action( 'rank_math\/admin_bar\/items', 'admin_bar_items', 11 );\n\n\t\t\tif ( Helper::is_rest() ) {\n\t\t\t\t$this->action( 'rank_math\/dashboard\/widget', 'dashboard_widget', 12 );\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->disable_auto_redirect() ) {\n\t\t\tremove_action( 'template_redirect', 'wp_old_slug_redirect' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add stats in the Rank Math admin dashboard widget.\n\t *\/\n\tpublic function dashboard_widget() {\n\t\t$data = DB::get_stats();\n\t\t?>\n\t\t<h3>\n\t\t\t<?php esc_html_e( 'Redirections', 'rank-math' ); ?>\n\t\t\t<a href=\"<?php echo esc_url( Helper::get_admin_url( 'redirections' ) ); ?>\" class=\"rank-math-view-report\" title=\"<?php esc_html_e( 'View Report', 'rank-math' ); ?>\"><i class=\"dashicons dashicons-chart-bar\"><\/i><\/a>\n\t\t<\/h3>\n\t\t<div class=\"rank-math-dashboard-block\">\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t<?php esc_html_e( 'Redirection Count', 'rank-math' ); ?>\n\t\t\t\t\t<span class=\"rank-math-tooltip\"><em class=\"dashicons-before dashicons-editor-help\"><\/em><span><?php esc_html_e( 'Total number of Redirections created in the Rank Math.', 'rank-math' ); ?><\/span><\/span>\n\t\t\t\t<\/h4>\n\t\t\t\t<strong class=\"text-large\"><?php echo esc_html( Str::human_number( $data->total ) ); ?><\/strong>\n\t\t\t<\/div>\n\t\t\t<div>\n\t\t\t\t<h4>\n\t\t\t\t\t<?php esc_html_e( 'Redirection Hits', 'rank-math' ); ?>\n\t\t\t\t\t<span class=\"rank-math-tooltip\"><em class=\"dashicons-before dashicons-editor-help\"><\/em><span><?php esc_html_e( 'Total number of hits received by all the Redirections.', 'rank-math' ); ?><\/span><\/span>\n\t\t\t\t<\/h4>\n\t\t\t\t<strong class=\"text-large\"><?php echo esc_html( Str::human_number( $data->hits ) ); ?><\/strong>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Load redirection admin and the REST API.\n\t *\/\n\tprivate function load_admin() {\n\t\tif ( is_admin() ) {\n\t\t\t$this->admin = new Admin();\n\t\t}\n\n\t\tif ( is_admin() || Helper::is_rest() ) {\n\t\t\tnew Watcher();\n\t\t}\n\t}\n\n\t\/**\n\t * Do redirection on frontend.\n\t *\/\n\tpublic function do_redirection() {\n\t\tif (\n\t\t\t$this->is_wp_login() ||\n\t\t\tis_customize_preview() ||\n\t\t\tHelper::is_ajax() ||\n\t\t\t! isset( $_SERVER['REQUEST_URI'] ) ||\n\t\t\tempty( $_SERVER['REQUEST_URI'] ) ||\n\t\t\t$this->is_script_uri_or_http_x() ||\n\t\t\t(bool) Param::get( 'elementor-preview' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$redirector = new Redirector();\n\t}\n\n\t\/**\n\t * Add admin bar item.\n\t *\n\t * @param Admin_Bar_Menu $menu Menu class instance.\n\t *\/\n\tpublic function admin_bar_items( $menu ) {\n\t\t$menu->add_sub_menu(\n\t\t\t'redirections',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'Redirections', 'rank-math' ),\n\t\t\t\t'href'     => Helper::get_admin_url( 'redirections' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Create and edit redirections', 'rank-math' ) ],\n\t\t\t\t'priority' => 50,\n\t\t\t]\n\t\t);\n\n\t\t$menu->add_sub_menu(\n\t\t\t'redirections-edit',\n\t\t\t[\n\t\t\t\t'title' => esc_html__( 'Manage Redirections', 'rank-math' ),\n\t\t\t\t'href'  => Helper::get_admin_url( 'redirections' ),\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Create and edit redirections', 'rank-math' ) ],\n\t\t\t],\n\t\t\t'redirections'\n\t\t);\n\n\t\t$menu->add_sub_menu(\n\t\t\t'redirections-settings',\n\t\t\t[\n\t\t\t\t'title' => esc_html__( 'Redirection Settings', 'rank-math' ),\n\t\t\t\t'href'  => Helper::get_settings_url( 'general', 'redirections' ),\n\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Redirection Settings', 'rank-math' ) ],\n\t\t\t],\n\t\t\t'redirections'\n\t\t);\n\n\t\tif ( ! is_admin() ) {\n\t\t\t$menu->add_sub_menu(\n\t\t\t\t'redirections-redirect-me',\n\t\t\t\t[\n\t\t\t\t\t'title' => esc_html__( '&raquo; Redirect this page', 'rank-math' ),\n\t\t\t\t\t'href'  => Security::add_query_arg_raw( 'url', rawurlencode( ltrim( Param::server( 'REQUEST_URI' ), '\/' ) ), Helper::get_admin_url( 'redirections' ) ),\n\t\t\t\t\t'meta'  => [ 'title' => esc_html__( 'Redirect the current URL', 'rank-math' ) ],\n\t\t\t\t],\n\t\t\t\t'redirections'\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Check if request is WordPress login.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_wp_login() {\n\t\t$uri = Param::server( 'REQUEST_URI' );\n\t\tif ( Str::contains( 'wp-admin', $uri ) || Str::contains( 'wp-login', $uri ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if request is script URI or a http-x request.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_script_uri_or_http_x() {\n\t\tif ( isset( $_SERVER['SCRIPT_URI'] ) && ! empty( $_SERVER['SCRIPT_URI'] ) && admin_url( 'admin-ajax.php' ) === Param::server( 'SCRIPT_URI' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isset( $_SERVER['HTTP_X_REQUESTED_WITH'] ) && ! empty( $_SERVER['HTTP_X_REQUESTED_WITH'] ) && strtolower( Param::server( 'HTTP_X_REQUESTED_WITH' ) ) === 'xmlhttprequest' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Disable Auto-Redirect.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function disable_auto_redirect() {\n\t\treturn get_option( 'permalink_structure' ) && Helper::get_settings( 'general.redirections_post_redirect' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-import-export.php","ext":"php","size":3708,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections import\/export panel.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Import_Export class.\n *\/\nclass Import_Export {\n\n\tuse Hooker;\n\n\t\/**\n\t * Limit\n\t *\n\t * @var string\n\t *\/\n\tpublic $limit;\n\n\t\/**\n\t * Instance of this class.\n\t *\n\t * @var object\n\t *\/\n\tprotected static $instance;\n\n\t\/**\n\t * Get the singleton instance of this class.\n\t *\n\t * @return Import_Export\n\t *\/\n\tpublic static function get() {\n\t\tif ( ! ( self::$instance instanceof self ) ) {\n\t\t\tself::$instance = new self();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->limit = $this->do_filter( 'redirections\/export_notice_limit', 1000 );\n\t}\n\n\t\/**\n\t * The hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'rank_math\/redirections\/export_tab_content', 'export_tab' );\n\t}\n\n\t\/**\n\t * Export Tab contents.\n\t *\n\t * @return void\n\t *\/\n\tpublic function export_tab() {\n\t\t\/\/ Show a notice if the number of redirections is too high.\n\t\t$count = DB::get_redirections(\n\t\t\t[\n\t\t\t\t'limit'  => $this->limit,\n\t\t\t\t'status' => 'active',\n\t\t\t]\n\t\t);\n\n\t\tif ( $count['count'] >= $this->limit ) {\n\t\t\t?>\n\t\t\t<div class=\"inline notice notice-warning notice-alt rank-math-notice\" style=\"margin: 10px 10px 0;\">\n\t\t\t\t<p>\n\t\t\t\t\t<?php\n\t\t\t\t\t\/\/ Translators: Placeholder expands to number of redirections.\n\t\t\t\t\tprintf( esc_html__( 'Warning: you have more than %d active redirections. Exporting them to your .htaccess file may cause performance issues.', 'rank-math' ), absint( $this->limit ) );\n\t\t\t\t\t?>\n\t\t\t\t<\/p>\n\t\t\t<\/div>\n\t\t\t<?php\n\t\t}\n\n\t\t?>\n\t\t<div class=\"rank-math-redirections-export-options\">\n\t\t\t<a class=\"button button-primary\" href=\"<?php echo esc_url( wp_nonce_url( Helper::get_admin_url( 'redirections', 'export=apache' ), 'rank-math-export-redirections' ) ); ?>\"><?php esc_html_e( 'Export to .htaccess', 'rank-math' ); ?><\/a>\n\t\t\t<a class=\"button button-primary\" href=\"<?php echo esc_url( wp_nonce_url( Helper::get_admin_url( 'redirections', 'export=nginx' ), 'rank-math-export-redirections' ) ); ?>\"><?php esc_html_e( 'Export to Nginx config file', 'rank-math' ); ?><\/a>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Display form.\n\t *\/\n\tpublic function display_form() {\n\t\t$tabs = $this->do_filter(\n\t\t\t'redirections\/export_tabs',\n\t\t\t[\n\t\t\t\t'export' => [\n\t\t\t\t\t'name'  => __( 'Export', 'rank-math' ),\n\t\t\t\t\t'icon'  => 'rm-icon-export',\n\t\t\t\t\t'class' => 'active-tab',\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t?>\n\t\t<div id=\"import-export-box\" class=\"rank-math-box no-padding\">\n\t\t\t<div class=\"rank-math-box-tabs wp-clearfix\">\n\t\t\t\t<?php foreach ( $tabs as $tab_id => $tab ) : ?>\n\t\t\t\t\t<a href=\"#panel-<?php echo sanitize_html_class( $tab_id ); ?>\" class=\"<?php echo esc_attr( $tab['class'] ); ?>\">\n\t\t\t\t\t\t<i class=\"rm-icon <?php echo esc_attr( $tab['icon'] ); ?>\"><\/i>\n\t\t\t\t\t\t<span class=\"rank-math-tab-text\"><?php echo esc_html( $tab['name'] ); ?><\/span>\n\t\t\t\t\t<\/a>\n\t\t\t\t<?php endforeach; ?>\n\t\t\t<\/div>\n\n\t\t\t<div class=\"rank-math-box-content\">\n\n\t\t\t\t<div class=\"rank-math-box-inner\">\n\t\t\t\t\t<?php foreach ( $tabs as $tab_id => $tab ) : ?>\n\t\t\t\t\t\t<form id=\"panel-<?php echo sanitize_html_class( $tab_id ); ?>\" class=\"rank-math-<?php echo sanitize_html_class( $tab_id ); ?>-form cmb2-form <?php echo esc_attr( $tab['class'] ); ?>\" action=\"#import-export-box\" method=\"post\" enctype=\"multipart\/form-data\" accept-charset=\"<?php echo esc_attr( get_bloginfo( 'charset' ) ); ?>\">\n\t\t\t\t\t\t\t<?php $this->do_action( 'redirections\/' . $tab_id . '_tab_content' ); ?>\n\t\t\t\t\t\t<\/form>\n\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<?php\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-export.php","ext":"php","size":6751,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Export Redirections in various formats.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\KB;\nuse RankMath\\Redirections\\Import_Export;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Export class.\n *\/\nclass Export {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'admin_init', 'export' );\n\t}\n\n\t\/**\n\t * Export redirections.\n\t *\/\n\tpublic function export() {\n\t\t$server = Param::get( 'export' );\n\t\tif ( ! $server || ! in_array( $server, [ 'apache', 'nginx' ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_admin_referer( 'rank-math-export-redirections' );\n\n\t\t$filename = \"rank-math-redirections-{$server}-\" . date_i18n( 'Y-m-d-H-i-s' ) . ( 'apache' === $server ? '.htaccess' : '.conf' );\n\n\t\theader( 'Content-Type: application\/octet-stream' );\n\t\theader( 'Content-Disposition: attachment; filename=' . $filename );\n\t\theader( 'Cache-Control: no-cache, no-store, must-revalidate' );\n\t\theader( 'Pragma: no-cache' );\n\t\theader( 'Expires: 0' );\n\n\t\t$items = DB::get_redirections(\n\t\t\t[\n\t\t\t\t'limit'  => Import_Export::get()->limit,\n\t\t\t\t'status' => 'active',\n\t\t\t]\n\t\t);\n\n\t\tif ( 0 === $items['count'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$text[] = '# Created by Rank Math';\n\t\t$text[] = '# ' . date_i18n( 'r' );\n\t\t$text[] = '# Rank Math ' . trim( rank_math()->version ) . ' - ' . KB::get( 'seo-suite' );\n\t\t$text[] = '';\n\n\t\t$text = array_merge( $text, $this->$server( $items['redirections'] ) );\n\n\t\t$text[] = '';\n\t\t$text[] = '# Rank Math Redirections END';\n\n\t\techo implode( PHP_EOL, $text ) . PHP_EOL; \/\/ phpcs:ignore\n\t\texit;\n\t}\n\n\t\/**\n\t * Apache rewrite rules.\n\t *\n\t * @param array $items Array of DB items.\n\t *\n\t * @return string\n\t *\/\n\tprivate function apache( $items ) {\n\t\t$output[] = '<IfModule mod_rewrite.c>';\n\n\t\tforeach ( $items as $item ) {\n\t\t\t$this->apache_item( $item, $output );\n\t\t}\n\n\t\t$output[] = '<\/IfModule>';\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Format Apache single item.\n\t *\n\t * @param array $item   Single item.\n\t * @param array $output Output array.\n\t *\/\n\tprivate function apache_item( $item, &$output ) {\n\t\t$target  = '410' === $item['header_code'] ? '- [G]' : sprintf( '%s [R=%d,L]', $this->encode2nd( $item['url_to'] ), $item['header_code'] );\n\t\t$sources = maybe_unserialize( $item['sources'] );\n\n\t\tforeach ( $sources as $from ) {\n\t\t\t$url = $from['pattern'];\n\t\t\tif ( ( 'regex' !== $from['comparison'] && strpos( $url, '?' ) !== false ) || strpos( $url, '&' ) !== false ) {\n\t\t\t\t$url_parts = wp_parse_url( $url );\n\t\t\t\t$url       = $url_parts['path'];\n\t\t\t\t$output[]  = sprintf( 'RewriteCond %%{QUERY_STRING} ^%s$', preg_quote( $url_parts['query'], null ) );\n\t\t\t}\n\n\t\t\t\/\/ Get rewrite string.\n\t\t\t$output[] = sprintf( '%sRewriteRule %s %s', ( $this->is_valid_regex( $from ) ? '' : '# ' ), $this->get_comparison( $url, $from ), $target );\n\t\t}\n\t}\n\n\t\/**\n\t * Nginx rewrite rules.\n\t *\n\t * @param array $items Array of db items.\n\t *\n\t * @return string\n\t *\/\n\tprivate function nginx( $items ) {\n\t\t$output[] = 'server {';\n\n\t\tforeach ( $items as $item ) {\n\t\t\t$this->nginx_item( $item, $output );\n\t\t}\n\n\t\t$output[] = '}';\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Format nginx single item.\n\t *\n\t * @param array $item   Single item.\n\t * @param array $output Output array.\n\t *\/\n\tprivate function nginx_item( $item, &$output ) {\n\t\t$target      = $this->encode2nd( $item['url_to'] );\n\t\t$sources     = maybe_unserialize( $item['sources'] );\n\t\t$header_code = '301' === $item['header_code'] ? 'permanent' : 'redirect';\n\n\t\tforeach ( $sources as $from ) {\n\t\t\tif ( ! $this->is_valid_regex( $from ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$output[] = $this->normalize_nginx_redirect( $this->get_comparison( $from['pattern'], $from ), $target, $header_code );\n\t\t}\n\t}\n\n\t\/**\n\t * Check if it's a valid pattern.\n\t *\n\t * So we don't break the site when it's inserted in the .htaccess.\n\t *\n\t * @param array $source Source array.\n\t *\n\t * @return string\n\t *\/\n\tprivate function is_valid_regex( $source ) {\n\t\tif ( 'regex' == $source['comparison'] && @preg_match( '\/' . $source['pattern'] . '\/', null ) === false ) { \/\/ phpcs:ignore\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Normalize redirect data.\n\t *\n\t * @param string $source      Matching pattern.\n\t * @param string $target      Target where to redirect.\n\t * @param string $header_code Response header code.\n\t *\n\t * @return string\n\t *\/\n\tprivate function normalize_nginx_redirect( $source, $target, $header_code ) {\n\t\t$source = preg_replace( \"\/[\\r\\n\\t].*?$\/s\", '', $source );\n\t\t$source = preg_replace( '\/[^\\PC\\s]\/u', '', $source );\n\t\t$target = preg_replace( \"\/[\\r\\n\\t].*?$\/s\", '', $target );\n\t\t$target = preg_replace( '\/[^\\PC\\s]\/u', '', $target );\n\n\t\treturn \"    rewrite {$source} {$target} {$header_code};\";\n\t}\n\n\t\/**\n\t * Get comparison pattern.\n\t *\n\t * @param string $url  URL for comparison.\n\t * @param array  $from Comparison type and URL.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_comparison( $url, $from ) {\n\t\t$comparison = $from['comparison'];\n\t\tif ( 'regex' === $comparison ) {\n\t\t\treturn $this->encode_regex( $from['pattern'] );\n\t\t}\n\n\t\t$hash = [\n\t\t\t'exact'    => '^{url}\/?$',\n\t\t\t'contains' => '^(.*){url}(.*)$',\n\t\t\t'start'    => '^{url}',\n\t\t\t'end'      => '{url}\/?$',\n\t\t];\n\n\t\t$url = preg_quote( $url, null );\n\t\treturn isset( $hash[ $comparison ] ) ? str_replace( '{url}', $url, $hash[ $comparison ] ) : $url;\n\t}\n\n\t\/**\n\t * Encode URL.\n\t *\n\t * @param string $url URL to encode.\n\t *\n\t * @return string\n\t *\/\n\tprivate function encode2nd( $url ) {\n\t\t$url = rawurlencode( $url );\n\t\t$url = str_replace( '%2F', '\/', $url );\n\t\t$url = str_replace( '%3F', '?', $url );\n\t\t$url = str_replace( '%3A', ':', $url );\n\t\t$url = str_replace( '%3D', '=', $url );\n\t\t$url = str_replace( '%26', '&', $url );\n\t\t$url = str_replace( '%25', '%', $url );\n\t\t$url = str_replace( '+', '%20', $url );\n\t\t$url = str_replace( '%24', '$', $url );\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Encode regex.\n\t *\n\t * @param string $url URL to encode.\n\t *\n\t * @return string\n\t *\/\n\tprivate function encode_regex( $url ) {\n\t\t$url = preg_replace( '\/[^a-zA-Z0-9\\s](.*)[^a-zA-Z0-9\\s][imsxeADSUXJu]*\/', '$1', $url ); \/\/ Strip delimiters.\n\t\t$url = preg_replace( \"\/[\\r\\n\\t].*?$\/s\", '', $url ); \/\/ Remove newlines.\n\t\t$url = preg_replace( '\/[^\\PC\\s]\/u', '', $url ); \/\/ Remove any invalid characters.\n\t\t$url = str_replace( ' ', '%20', $url ); \/\/ Make sure spaces are quoted.\n\t\t$url = str_replace( '%24', '$', $url );\n\t\t$url = ltrim( $url, '\/' ); \/\/ No leading slash.\n\t\t$url = preg_replace( '@^\\^\/@', '^', $url ); \/\/ If pattern has a ^ at the start then ensure we don't have a slash immediately.\n\n\t\treturn $url;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/assets\/js\/redirections.js","ext":"js","size":37982,"mtime":1757324689,"type":"text","content":"!function(){var t={75:function(){},802:function(){},184:function(t,e){var r;!function(){\"use strict\";var n={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var i=typeof r;if(\"string\"===i||\"number\"===i)t.push(r);else if(Array.isArray(r)){if(r.length){var a=o.apply(null,r);a&&t.push(a)}}else if(\"object\"===i){if(r.toString!==Object.prototype.toString&&!r.toString.toString().includes(\"[native code]\")){t.push(r.toString());continue}for(var c in r)n.call(r,c)&&r[c]&&t.push(c)}}}return t.join(\" \")}t.exports?(o.default=o,t.exports=o):void 0===(r=function(){return o}.apply(e,[]))||(t.exports=r)}()}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}};return t[n](i,i.exports,r),i.exports}r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,{a:e}),e},r.d=function(t,e){for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},function(){\"use strict\";var t={};r.r(t),r.d(t,{resetStore:function(){return pt},resetdirtySettings:function(){return dt},updateAnalytics:function(){return st},updateData:function(){return lt},updateModules:function(){return ft}});var e={};r.r(e),r.d(e,{appData:function(){return wt},appUi:function(){return _t}});var n={};r.r(n),r.d(n,{getAnalytics:function(){return Dt},getAppData:function(){return Pt},getData:function(){return xt},getModules:function(){return Ct},getdirtySettings:function(){return Et}});var o=jQuery,i=r.n(o),a=wp.element,c=lodash,u=wp.i18n,l=wp.compose,s=wp.data,f=wp.hooks,d=function(){var t=document.querySelector(\".rank-math-editcreate-form\").querySelectorAll('input[type=\"text\"]:not(#add_category):not(#exclude)');(0,c.forEach)(t,(function(t){t.classList.remove(\"invalid\");var e=t.nextElementSibling;e&&e.classList.contains(\"validation-message\")&&e.remove()}));var e=(0,c.filter)(t,(function(t){return!t.value.trim()}));return!e.length>0||((0,c.forEach)(e,(function(t,e){var r=document.createElement(\"span\");r.className=\"validation-message\",r.innerText=(0,u.__)(\"This field must not be empty.\",\"rank-math\"),t.classList.add(\"invalid\"),t.after(r),0===e&&t.scrollIntoView({behavior:\"smooth\",block:\"nearest\"})})),!1)},p=function(){var t=document.querySelector(\".field-id-header_code\");if(t){var e=t.querySelector(\".rank-math-toggle-group-control\");if(e){var r=function(t){var e=document.createElement(\"div\");return e.className=t,e},n=r(\"field-th\"),o=document.createElement(\"label\");o.textContent=(0,u.__)(\"Maintenance Code\",\"rank-math\"),n.appendChild(o);var i=r(\"field-td\"),a=r(\"components-base-control\"),c=r(\"components-base-control__field\"),l=r(\"components-toggle-group-control rank-math-toggle-group-control css-ml4wxx e19lxcc00\");l.append(e.children[3],e.children[4]),c.appendChild(l),a.appendChild(c),i.appendChild(a);var s=r(\"field-row field-type-radio_inline field-id-maintenance\");s.append(n,i),t.after(s)}}},m=function(t){var e=t.title,r=t.description,n=t.link,o=t.linkText,i=void 0===o?(0,u.__)(\"Learn more\",\"rank-math\"):o;return wp.element.createElement(\"header\",{className:\"rank-math-tab-header\"},wp.element.createElement(\"h2\",null,e),wp.element.createElement(\"p\",null,r,n&&wp.element.createElement(React.Fragment,null,\" \",wp.element.createElement(\"a\",{href:n,target:\"_blank\",rel:\"noreferrer\"},i),\".\")))},h=wp.apiFetch,y=r.n(h),b=window.rankMathComponents;function v(t,e,r,n){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"\",a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];e=e||\"error\",n=n||!1;var c=i()('<div class=\"notice notice-'+e+\" \"+o+' is-dismissible\"><p>'+t+\"<\/p><\/div>\").hide();a||r.siblings(\".notice\").remove(),r.after(c),c.slideDown(),i()(document).trigger(\"wp-updates-notice-added\"),i()(\"html,body\").animate({scrollTop:c.offset().top-50},\"slow\"),n&&setTimeout((function(){c.fadeOut((function(){c.remove()}))}),n)}function g(t){return g=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},g(t)}var w=[\"validate\",\"afterSave\"];function S(){return S=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},S.apply(this,arguments)}function O(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function k(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?O(Object(r),!0).forEach((function(e){j(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):O(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function j(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==g(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===g(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function _(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}function P(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=r){var n,o,i,a,c=[],u=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return E(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===r&&t.constructor&&(r=t.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(t);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return E(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function E(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var x=function(t,e){return\"resetting\"===e?(0,u.__)(\"Resetting\u2026\",\"rank-math\"):\"resetted\"===e?(0,u.__)(\"Resetted\",\"rank-math\"):t.children},D=function(t,e){return\"updating\"===e?(0,u.__)(\"Updating\u2026\",\"rank-math\"):\"updated\"===e?(0,u.__)(\"Updated\",\"rank-math\"):t.children},C=function(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};if((0,c.includes)([\"roleCapabilities\",\"redirections\"],t))return{data:e,fields:{},updated:[]};var i={},a=[];return{data:(0,c.isUndefined)(r)?{}:(0,c.reduce)(r,(function(t,r){return(0,c.isArray)(r.fields)&&0!==r.fields.length?\"htaccess\"===r.name?(t.htaccess_allow_editing=e.htaccess_allow_editing,t.htaccess_content=e.htaccess_content,(0,c.isEqual)(e.htaccess_content,o.htaccess_content)||a.push(\"htaccess_content\"),t):((0,c.forEach)(r.fields,(function(r){var u=r.id;if(n)(0,c.has)(r,\"default\")&&(t[u]=r.default,i[u]=r.type);else{var l=(\"\"===e[u]||(0,c.isUndefined)(e[u]))&&(0,c.has)(r,\"default\")?r.default:e[u];t[u]=l,i[u]=r.type,\"file\"!==r.type||(0,c.isUndefined)(e[u+\"_id\"])||(t[u+\"_id\"]=e[u+\"_id\"],i[u]=\"text\"),(0,c.isEqual)(l,o[u])||a.push(u)}})),t):t}),{}),fields:i,updated:a}},A=(0,l.compose)((0,s.withSelect)((function(t){return{settings:t(\"rank-math-settings\").getdirtySettings(),data:t(\"rank-math-settings\").getData()}})),(0,s.withDispatch)((function(t,e){var r=e.type,n=e.settings,o=e.tabs,a=e.footer.applyButton;return{saveSettings:function(e,l){var s=C(r,n,o,!1,l);e(\"updating\"),y()({method:\"POST\",path:\"\/rankmath\/v1\/updateSettings\",data:{type:r,settings:s.data,fieldTypes:s.fields,updated:s.updated}}).then((function(r){return e(\"updated\"),r?!(0,c.isUndefined)(r.notifications)&&r.notifications.length?((0,c.forEach)(r.notifications,(function(t){var e=!(0,c.isEmpty)(t.error);v(e?t.error:t.success,e?\"error\":\"success\",i()(\".rank-math-breadcrumbs-wrap\"),!1,\"rank-math-settings-notice\",!0)})),void i()(\"html, body\").animate({scrollTop:0},\"fast\")):r.error?(v(r.error,\"error\",i()(\".rank-math-breadcrumbs-wrap\"),!1,\"rank-math-settings-notice\"),void i()(\"html, body\").animate({scrollTop:0},\"fast\")):(t(\"rank-math-settings\").updateData(r.settings?r.settings:k({},s.data)),r.success?(v(r.success,\"success\",i()(\".rank-math-breadcrumbs-wrap\"),!1,\"rank-math-settings-notice\"),void i()(\"html, body\").animate({scrollTop:0},\"fast\")):(r&&!r.error&&a.afterSave&&a.afterSave(),e(\"updated\"),void t(\"rank-math-settings\").resetdirtySettings())):(e(\"\"),void window.alert((0,u.__)(\"Something went wrong! Please try again.\",\"rank-math\")))}))},resetSettings:function(e){var i=C(r,n,o,!0);e(\"resetting\"),y()({method:\"POST\",path:\"\/rankmath\/v1\/updateSettings\",data:{type:r,settings:i.data,fieldTypes:i.fields,isReset:!0}}).then((function(r){if(!r)return e(\"\"),void window.alert((0,u.__)(\"Something went wrong! Please try again.\",\"rank-math\"));e(\"resetted\"),t(\"rank-math-settings\").updateData(r.settings?r.settings:k({},i.data)),t(\"rank-math-settings\").resetdirtySettings()}))}}})))((function(t){var e=P((0,a.useState)(\"\"),2),r=e[0],n=e[1],o=t.settings,i=t.data,l=t.resetSettings,s=t.saveSettings,f=t.footer,d=f.applyButton,p=d.validate,m=(d.afterSave,_(d,w)),h=(0,a.useRef)(null);return null===h.current&&(h.current=k({},i)),(0,a.useEffect)((function(){(0,c.includes)([\"updated\",\"resetted\"],r)&&setTimeout((function(){return n(\"\")}),1e3)}),[r]),wp.element.createElement(\"footer\",{className:\"form-footer rank-math-ui\"},wp.element.createElement(b.Button,S({onClick:function(){window.confirm((0,u.__)(\"Are you sure? You want to reset settings.\",\"rank-math\"))&&l(n)}},f.discardButton,{children:x(f.discardButton,r)})),wp.element.createElement(b.Button,S({variant:\"primary\",onClick:function(){(!p||p())&&s(n,h.current)},disabled:(0,c.isEmpty)(o)},m,{children:D(m,r)})))})),T=r(184),M=r.n(T);function R(t){return R=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},R(t)}var N=[\"id\",\"type\",\"content\",\"Component\",\"isDisabled\",\"default\"];function I(){return I=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},I.apply(this,arguments)}function U(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function L(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?U(Object(r),!0).forEach((function(e){B(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):U(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function B(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==R(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===R(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function G(t){return function(t){if(Array.isArray(t))return F(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(!t)return;if(\"string\"==typeof t)return F(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===r&&t.constructor&&(r=t.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(t);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return F(t,e)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function F(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function q(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var W=(0,l.compose)((0,s.withDispatch)((function(t,e){var r=e.settings;return{updateSetting:function(e,n){r[e]=n,t(\"rank-math-settings\").updateData(L({},r))}}})))((function(t){var e=t.field,r=t.settingType,n=t.settings,o=t.value,i=e.id,u=e.type,l=e.content,s=e.Component,f=e.isDisabled,d=e.default,p=q(e,N);(0,c.isUndefined)(o)&&(o=(0,c.isUndefined)(n)||(0,c.isUndefined)(n[i])?d:n[i]),(0,c.includes)([\"disable_author_archives\",\"opening_hours_format\"],i)&&(0,c.isBoolean)(o)&&t.updateSetting(i,!1===o?\"off\":\"on\"),(0,c.includes)([\"disable_author_archives\"],i)&&\"\"===o&&t.updateSetting(i,d),(0,c.endsWith)(i,\"_bulk_editing\")&&!(0,c.isString)(o)&&(o=String(o)),!(0,c.endsWith)(i,\"_default_rich_snippet\")||\"\"!==o&&!1!==o||(o=\"off\");var m=function(e){if(((0,c.endsWith)(i,\"_robots\")||\"robots_global\"===i)&&(0,c.isArray)(e)&&((0,c.includes)(e,\"index\")||(0,c.includes)(e,\"noindex\")||(0,c.includes)(o||[],\"index\")||(0,c.includes)(o||[],\"noindex\"))){var r=o||[],n=(0,c.includes)(e,\"index\"),a=(0,c.includes)(e,\"noindex\"),l=(0,c.includes)(r,\"index\"),s=(0,c.includes)(r,\"noindex\");if(l&&!n)e=[].concat(G(e),[\"noindex\"]);else if(s&&!a)e=[].concat(G(e),[\"index\"]);else if(n&&a){var f=(0,c.last)(e);e=(0,c.filter)(e,(function(t){return\"index\"===f?\"noindex\"!==t:\"index\"!==t}))}}\"file\"===u?(t.updateSetting(i,e.url),t.updateSetting(i+\"_id\",e.id)):t.updateSetting(i,e)},h=function(){var t={toggle:\"checked\",checkbox:\"checked\"}[u]||\"value\",e=(0,c.includes)([\"component\",\"group\"],u);return L(L(L({},p),{},B(B({id:i},t,p.value||o),\"onChange\",p.onChange||!f&&m),e&&{settingType:r}),p.attributes)},y={file:window.rankMathComponents.UploadFile,text:window.rankMathComponents.TextControl,select:window.rankMathComponents.SelectControl,toggle:window.rankMathComponents.ToggleControl,select_search:window.rankMathComponents.SelectWithSearch,multicheck:window.rankMathComponents.CheckboxList,multicheck_inline:window.rankMathComponents.CheckboxList,radio_inline:window.rankMathComponents.ToggleGroupControl,repeatable_group:window.rankMathComponents.RepeatableGroup,selectSearch:window.rankMathComponents.SelectWithSearch,searchPage:window.rankMathComponents.SearchPage,checkboxlist:window.rankMathComponents.CheckboxList,toggleGroup:window.rankMathComponents.ToggleGroupControl,repeatableGroup:window.rankMathComponents.RepeatableGroup,group:window.rankMathComponents.Group,checkbox:window.rankMathComponents.CheckboxControl,textarea:window.rankMathComponents.TextareaControl,notice:window.rankMathComponents.Notice,selectVariable:window.rankMathComponents.SelectVariable,button:window.rankMathComponents.Button}[u],b=\"group\"===u?{onChange:t.updateSetting}:{};return y?wp.element.createElement(y,I({},h(),{settings:n},b)):\"component\"===u?wp.element.createElement(s,h()):\"raw\"===u?wp.element.createElement(a.RawHTML,null,l):null})),H=[\"relation\",\"compare\"];function K(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=r){var n,o,i,a,c=[],u=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return V(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===r&&t.constructor&&(r=t.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(t);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return V(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function V(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function $(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}function z(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=r){var n,o,i,a,c=[],u=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return Q(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===r&&t.constructor&&(r=t.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(t);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return Q(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Q(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function Y(t){return Y=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},Y(t)}function J(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function X(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?J(Object(r),!0).forEach((function(e){Z(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):J(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function Z(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==Y(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==Y(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===Y(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var tt=function(t){var e=t.settingType,r=t.fields,n=t.settings,o=void 0===n?null:n;return wp.element.createElement(\"div\",{className:\"field-wrap form-table wp-core-ui rank-math-ui\"},wp.element.createElement(\"div\",{id:\"field-metabox-rank-math-\".concat(e),className:\"field-metabox field-list\"},(0,c.map)(r,(function(t,r){var n=t.id,i=t.type,a=t.name,u=t.desc,l=t.classes,s=t.content,f=t.dep,d=t.disableDep,p=t.afterfield,m=function(t,e){return(0,c.some)(t,(function(t){var r=z(t,1)[0];return e[r]}))}(d,o);if((!f||function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=t.relation,n=void 0===r?\"or\":r,o=t.compare,i=void 0===o?\"\":o,a=$(t,H),u=function(t){var r=K(t,2),n=r[0],o=r[1],a=e[n];return\"!=\"===i?(0,c.isArray)(o)?!(0,c.includes)(o,a):o!==a:(0,c.isArray)(o)?(0,c.includes)(o,a):o===a};return\"and\"===n?(0,c.every)((0,c.entries)(a),u):(0,c.some)((0,c.entries)(a),u)}(f,o))&&\"hidden\"!==i){if(\"raw\"===i)return s;var h=M()(\"field-row\",l,Z(Z({\"field-disabled\":m},\"field-id-\"+n,n),\"field-type-\"+i,i));return wp.element.createElement(\"div\",{key:n||r,className:h},a&&wp.element.createElement(\"div\",{className:\"field-th\"},wp.element.createElement(\"label\",{htmlFor:n},a)),wp.element.createElement(\"div\",{className:\"field-td\"},wp.element.createElement(W,{settingType:e,field:X(X({},t),{},{isDisabled:m}),settings:o}),u&&wp.element.createElement(\"p\",{className:\"field-description\",dangerouslySetInnerHTML:{__html:u}}),p))}}))))},et=function(t){var e=t.type,r=t.header,n=t.footer,o=t.fields,i=void 0===o?[]:o,a=t.settings,u=void 0===a?null:a,l=t.tabs;return(0,c.isEmpty)(u)?null:wp.element.createElement(React.Fragment,null,r&&wp.element.createElement(m,r),wp.element.createElement(tt,{settingType:e,fields:i,settings:u}),n&&wp.element.createElement(A,{type:e,footer:n,tabs:l}))};function rt(t){return rt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},rt(t)}function nt(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function ot(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==rt(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==rt(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===rt(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function it(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=r){var n,o,i,a,c=[],u=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=i.call(r)).done)&&(c.push(n.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(l)throw o}}return c}}(t,e)||function(t,e){if(!t)return;if(\"string\"==typeof t)return at(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===r&&t.constructor&&(r=t.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(t);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return at(t,e)}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function at(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var ct=(0,l.compose)((0,s.withSelect)((function(t,e){return{defaultRedirection:e.defaultRedirection,settings:t(\"rank-math-settings\").getData()}})),(0,s.withDispatch)((function(t){return{updateData:function(e){t(\"rank-math-settings\").updateData(function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?nt(Object(r),!0).forEach((function(e){ot(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):nt(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({},e))}}})))((function(t){var e=t.defaultRedirection,r=t.settings,n=t.updateData,o=rankMath,i=o.isNew,l=o.data,s=it((0,a.useState)(!(0,c.isEmpty)(l)),2),m=s[0],h=s[1];return(0,a.useEffect)(p,[]),(0,a.useEffect)((function(){return function(t){var e=document.querySelector(\".rank-math-add-new-redirection\");if(!(0,c.isNull)(e)){var r=document.querySelectorAll(\".value-url_from, .rank-math-redirection-edit\"),n=function(){return t(!0)},o=function(){return t(!1)};return(0,c.forEach)(r,(function(t){return t.addEventListener(\"click\",n)})),e.addEventListener(\"click\",o),function(){(0,c.forEach)(r,(function(t){return t.removeEventListener(\"click\",n)})),e.removeEventListener(\"click\",o)}}}(h)}),[]),(0,a.useEffect)((function(){rankMath.data||n(e)}),[]),wp.element.createElement(\"div\",{className:\"rank-math-redirections-form rank-math-editcreate-form rank-math-page rank-math-box \".concat(i||m?\"is-open\":\"\")},wp.element.createElement(\"h2\",null,wp.element.createElement(\"strong\",null,m?(0,u.__)(\"Update Redirection\",\"rank-math\"):(0,u.__)(\"Add Redirection\",\"rank-math\"))),wp.element.createElement(et,{type:\"redirections\",fields:(0,f.applyFilters)(\"rank_math_redirection_fields\",[{id:\"sources\",type:\"repeatableGroup\",name:(0,u.__)(\"Source URLs\",\"rank-math\"),default:{comparison:\"exact\"},options:{addButton:{children:(0,u.__)(\"Add another\",\"rank-math\")},removeButton:{children:(0,u.__)(\"Remove\",\"rank-math\")}},classes:\"field-group-text-only\",fields:[{id:\"pattern\",type:\"text\"},{id:\"comparison\",type:\"select\",options:{exact:(0,u.__)(\"Exact\",\"rank-math\"),contains:(0,u.__)(\"Contains\",\"rank-math\"),start:(0,u.__)(\"Starts With\",\"rank-math\"),end:(0,u.__)(\"End With\",\"rank-math\"),regex:(0,u.__)(\"Regex\",\"rank-math\")}},{id:\"ignore\",type:\"checkbox\",label:(0,u.__)(\"Ignore Case\",\"rank-math\"),variant:\"metabox\"}]},{id:\"url_to\",type:\"text\",name:(0,u.__)(\"Destination URL\",\"rank-math\"),dep:{header_code:[\"301\",\"302\",\"307\"]}},{id:\"header_code\",type:\"toggleGroup\",name:(0,u.__)(\"Redirection Type\",\"rank-math\"),options:{301:(0,u.__)(\"301 Permanent Move\",\"rank-math\"),302:(0,u.__)(\"302 Temporary Move\",\"rank-math\"),307:(0,u.__)(\"307 Temporary Redirect\",\"rank-math\"),410:(0,u.__)(\"410 Content Deleted\",\"rank-math\"),451:(0,u.__)(\"451 Content Unavailable for Legal Reasons\",\"rank-math\")}},{id:\"status\",type:\"toggleGroup\",name:(0,u.__)(\"Status\",\"rank-math\"),options:{active:(0,u.__)(\"Activate\",\"rank-math\"),inactive:(0,u.__)(\"Deactivate\",\"rank-math\")},disableDep:[[\"start-date\"],[\"end-date\"]]}]),settings:r,settingType:\"redirections\",footer:{discardButton:{onClick:void 0,isDestructive:!0,children:(0,u.__)(\"Cancel\",\"rank-math\")},applyButton:{type:\"submit\",validate:d,children:m?(0,u.__)(\"Update Redirection\",\"rank-math\"):(0,u.__)(\"Add Redirection\",\"rank-math\"),afterSave:function(){return window.location.href=\"\".concat(rankMath.adminurl,\"?page=rank-math-redirections\")}}}}))}));function ut(t,e){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;return e=(0,f.applyFilters)(\"rank_math_sanitize_settings\",e,t,r),null!==n&&(n=(0,f.applyFilters)(\"rank_math_sanitize_settings_value\",n,t,r)),n=null===n?e:n,(0,f.doAction)(\"rank_math_settings_changed\",t,e,r),{type:\"RANK_MATH_SETTINGS_DATA\",key:t,value:e,settingsKey:r,settingsValue:n}}function lt(t){return ut(\"data\",t,\"data\")}function st(t){return ut(\"analytics\",t,\"analytics\")}function ft(t,e){var r=wp.data.select(\"rank-math-settings\").getData();return r[t].isActive=e,(0,c.forEach)(r,(function(e,n){if((0,c.includes)(e.dep_modules,t)){var o=!1;(0,c.forEach)(e.dep_modules,(function(t){r[t].isActive||(o=!0)})),r[n].isDisabled=o,r[n].disabled=o}})),lt(r)}function dt(){return ut(\"dirtySettings\",{})}function pt(){return{type:\"RESET_STORE\"}}r(75);function mt(t){return mt=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},mt(t)}function ht(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function yt(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ht(Object(r),!0).forEach((function(e){bt(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ht(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function bt(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==mt(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==mt(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===mt(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var vt={data:(0,c.get)(rankMath,\"data\",{}),analytics:yt(yt(yt({},rankMath),(0,c.get)(rankMath,\"data\",{})),(0,c.get)(rankMath,\"analytics\",{})),dirtySettings:{}},gt=yt({},vt);function wt(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:vt,e=arguments.length>1?arguments[1]:void 0,r=yt({},t.dirtySettings);return!1!==e.settingsKey&&(r=e.settingsValue),\"RANK_MATH_SETTINGS_DATA\"===e.type?\"dirtySettings\"===e.key?yt(yt({},t),{},{dirtySettings:e.value}):yt(yt({},t),{},bt(bt({},e.key,e.value),\"dirtySettings\",r)):\"RESET_STORE\"===e.type?gt:t}function St(t){return St=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},St(t)}function Ot(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function kt(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?Ot(Object(r),!0).forEach((function(e){jt(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):Ot(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function jt(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==St(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==St(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===St(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function _t(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1?arguments[1]:void 0;return\"RANK_MATH_APP_UI\"===e.type?kt(kt({},t),{},jt({},e.key,e.value)):t}function Pt(t){return t.appData}function Et(t){return t.appData.dirtySettings}function xt(t){return t.appData.data}function Dt(t){return t.appData.analytics}function Ct(t){return t.appData.modules}r(802),(0,s.register)((0,s.createReduxStore)(\"rank-math-settings\",{reducer:(0,s.combineReducers)(e),selectors:n,actions:t}));function At(t){return At=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},At(t)}function Tt(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function Mt(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?Tt(Object(r),!0).forEach((function(e){Rt(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):Tt(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function Rt(t,e,r){return(e=function(t){var e=function(t,e){if(\"object\"!==At(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,e||\"default\");if(\"object\"!==At(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"===At(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var Nt,It=\"\".concat(rankMath.adminurl,\"?page=rank-math-redirections\");(Nt=i())((function(){({init:function(){this.wrap=Nt(\".rank-math-redirections-wrap\"),this.defaultRedirection={header_code:\"301\",status:\"active\",url_to:\"\",sources:[{comparison:\"exact\",pattern:\"\"}]},this.addForm(),this.addNew(),this.edit(),this.importExport(),this.showMore(),this.columnActions(),this.explodePastedContent()},addForm:function(){(0,a.createRoot)(document.getElementById(\"rank-math-redirections-form\")).render(wp.element.createElement(ct,{defaultRedirection:this.defaultRedirection}))},addNew:function(){var t=this,e=Nt(\"html, body\");this.wrap.on(\"click\",\".rank-math-add-new-redirection\",(function(r){r.preventDefault();var n=t.wrap.find(\".rank-math-editcreate-form\");if(t.wrap.find(\".rank-math-importexport-form\").hide(),n.is(\":visible\"))return n.hide(),void window.history.pushState(null,{},It);wp.data.dispatch(\"rank-math-settings\").updateData(Mt({},t.defaultRedirection)),n.show(),window.history.pushState(null,{},r.currentTarget.href),e.on(\"scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove\",(function(){e.stop()})),e.animate({scrollTop:n.position().top},\"slow\",(function(){e.off(\"scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove\")}))})),this.wrap.on(\"click\",\".rank-math-button.is-destructive\",(function(t){t.preventDefault(),Nt(this).closest(\".rank-math-editcreate-form\").hide(),window.history.pushState(null,{},It)}))},edit:function(){var t=this,e=Nt(\"html, body\");this.wrap.on(\"click\",\".value-url_from\",(function(t){t.preventDefault();var e=Nt(t.currentTarget);return e.closest(\".rank-math-more\").length?e.closest(\".rank-math-more\").parent().find(\".rank-math-redirection-edit\").trigger(\"click\"):e.parent().find(\".rank-math-redirection-edit\").trigger(\"click\"),!1})),this.wrap.on(\"click\",\".rank-math-redirection-edit\",(function(r){r.preventDefault();var n=t.wrap.find(\".rank-math-editcreate-form\");t.wrap.find(\".rank-math-importexport-form\").hide();var o=i()(this).data(\"redirection\");wp.data.dispatch(\"rank-math-settings\").updateData(Mt({},o)),n.show(),window.history.pushState(null,{},r.currentTarget.href),e.on(\"scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove\",(function(){e.stop()})),e.animate({scrollTop:n.position().top},\"slow\",(function(){e.off(\"scroll mousedown wheel DOMMouseScroll mousewheel keyup touchmove\")}))}))},importExport:function(){var t=this;this.wrap.on(\"click\",\".rank-math-redirections-import_export\",(function(e){e.preventDefault();var r=t.wrap.find(\".rank-math-importexport-form\");if(r.is(\":visible\"))return r.hide(),void window.history.pushState(null,{},It);t.wrap.find(\".rank-math-editcreate-form\").hide(),r.slideToggle(200),window.history.pushState(null,{},e.currentTarget.href)}))},explodePastedContent:function(){var t=Nt(\"#sources_repeat\");t.on(\"paste\",\"input\",(function(e){var r=e.originalEvent.clipboardData.getData(\"text\");if(!\/\\r|\\n\/.exec(r))return!0;var n=Nt(this),o=Nt(\".cmb-add-group-row\",t),i=r.split(\/\\r?\\n\/).filter(String),a=n.closest(\".cmb-field-list\").find(\"select\").val();return Nt.each(i,(function(e,r){if(n.val(r),n.closest(\".cmb-field-list\").find(\"select\").val(a),e<i.length-1){if(rankMath.redirectionPastedContent-1<=e)return!1;o.click(),n=Nt(\".cmb-repeatable-grouping\",t).last().find(\"input\")}else n.focus()})),!1}))},showMore:function(){this.wrap.on(\"click\",\".rank-math-showmore\",(function(t){t.preventDefault();var e=Nt(this);e.hide(),e.next(\".rank-math-more\").slideDown()})),this.wrap.on(\"click\",\".rank-math-hidemore\",(function(t){t.preventDefault();var e=Nt(this).parent();e.hide(),e.prev(\".rank-math-showmore\").show()}))},columnActions:function(){var t=this;this.wrap.on(\"click\",\".rank-math-redirection-action\",(function(e){e.preventDefault();var r=Nt(this),n=r.data(\"action\"),o=this.href.replace(\"admin.php\",\"admin-ajax.php\").replace(\"page=rank-math-redirections&\",\"\")+\"&action=rank_math_redirection_\"+n;Nt.ajax({url:o,type:\"GET\",success:function(e){e&&e.success&&([\"delete\",\"trash\",\"restore\"].includes(n)?r.closest(\"tr\").fadeOut(800,(function(){Nt(this).remove()})):r.closest(\"tr\").toggleClass(\"rank-math-redirection-activated rank-math-redirection-deactivated\"),\"activate\"===n?(t.filterCountAdd(\"active\"),t.filterCountSubstract(\"inactive\")):\"deactivate\"===n?(t.filterCountAdd(\"inactive\"),t.filterCountSubstract(\"active\")):\"trash\"===n?(t.filterCountAdd(\"trashed\"),t.filterCountSubstract(\"all\"),r.closest(\".rank-math-redirection-deactivated\").length?t.filterCountSubstract(\"inactive\"):t.filterCountSubstract(\"active\")):\"delete\"===n?t.filterCountSubstract(\"trashed\"):\"restore\"===n&&(t.filterCountAdd(\"active\"),t.filterCountAdd(\"all\"),t.filterCountSubstract(\"trashed\")))}})}))},filterCountAdd:function(t){this.filterCount(t,\"add\")},filterCountSubstract:function(t){this.filterCount(t,\"sub\")},filterCount:function(t,e){var r=this.wrap.find(\"form > ul.subsubsub > .\"+t+\" .count\"),n=parseInt(r.text().substr(1));n=\"add\"===e?n+1:n-1,r.text(\"(\"+n+\")\")}}).init()}))}()}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/assets\/css\/redirections.css","ext":"css","size":3390,"mtime":1757324689,"type":"text","content":"\/*!\n * Plugin:\tRank Math - Redirections\n * URL:\t\thttps:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * Name:\tredirections.css\n *\/@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}:root{--rankmath-wp-adminbar-height: 0}.column-url_from,.column-url_to{width:28%}tr.rank-math-redirection-deactivated .deactivate,tr.rank-math-redirection-activated .activate,.rank-math-more,.rank-math-redirections-form,.metabox-prefs legend+label{display:none}.rank-math-redirections-form{width:808px;max-width:100%;margin-top:1.25rem;-webkit-box-sizing:border-box;box-sizing:border-box}.rank-math-redirections-form.is-open{display:block}.rank-math-redirections-form>h2{margin-top:0;margin-bottom:2rem}#rank-math-redirections-form .field-row{border-top:0 !important}#rank-math-redirections-form .rank-math-editcreate-form{overflow:visible}#rank-math-redirections-form .rank-math-editcreate-form .field-repeatable-grouping{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-bottom:10px;line-height:1.3}#rank-math-redirections-form .rank-math-editcreate-form .field-repeatable-grouping>.group-item{-webkit-box-flex:0;-ms-flex:0 0 41%;flex:0 0 41%;display:inline-block;width:calc(43% - 10px)}#rank-math-redirections-form .rank-math-editcreate-form .field-repeatable-grouping>.group-item~.group-item:not(.group-item-checkbox){margin-left:10px}#rank-math-redirections-form .rank-math-editcreate-form .field-repeatable-grouping>.group-item.group-item-checkbox{margin-left:0;margin-top:10px;-ms-flex-order:4;order:4;-webkit-box-ordinal-group:5}#rank-math-redirections-form .rank-math-editcreate-form .field-repeatable-grouping>.group-item.group-item-checkbox .components-checkbox-control__label{color:#7f868d;letter-spacing:.01em;line-height:1.3}#rank-math-redirections-form .rank-math-editcreate-form .field-repeatable-grouping .button-remove-group{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;margin-left:10px}.form-footer:not(.rank-math-custom){margin:1.875rem -1.875rem -1.875rem;padding:20px 1.875rem;width:auto;overflow:hidden;border:0;border-top:1px solid #b5bfc9}.form-footer:not(.rank-math-custom) .rank-math-button.components-button{padding:0 20px}tr.rank-math-redirection-deactivated{opacity:.5}.rank-math-redirections-export-options{padding:20px}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-watcher.php","ext":"php","size":11122,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections Watcher.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Sitepress;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Watcher class.\n *\/\nclass Watcher {\n\n\tuse Hooker;\n\n\t\/**\n\t * Hold updated posts permalinks.\n\t *\n\t * @var array\n\t *\/\n\tprivate $updated_posts = [];\n\n\t\/**\n\t * Hold updated terms permalinks.\n\t *\n\t * @var array\n\t *\/\n\tprivate $updated_terms = [];\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t\/\/ Post.\n\t\t\/\/ Only monitor if pretty permalinks are enabled.\n\t\tif ( get_option( 'permalink_structure' ) ) {\n\t\t\tif ( Helper::get_settings( 'general.redirections_post_redirect' ) ) {\n\t\t\t\t$this->action( 'pre_post_update', 'pre_post_update' );\n\t\t\t\t$this->action( 'post_updated', 'handle_post_update', 10, 3 );\n\t\t\t\t$this->action( 'attachment_updated', 'handle_post_update', 10, 3 );\n\t\t\t\t$this->action( 'edit_terms', 'pre_term_update', 10, 2 );\n\t\t\t\t$this->action( 'edited_term', 'handle_term_update', 10, 3 );\n\t\t\t}\n\t\t\t$this->action( 'wp_trash_post', 'display_suggestion' );\n\t\t}\n\t\t$this->action( 'deleted_post', 'invalidate_post' );\n\n\t\t\/\/ Term.\n\t\t$this->action( 'pre_delete_term', 'invalidate_term', 10, 2 );\n\n\t\t\/\/ User.\n\t\t$this->action( 'delete_user', 'invalidate_author' );\n\t\t$this->action( 'profile_update', 'invalidate_author' );\n\t}\n\n\t\/**\n\t * Remember the previous post permalink.\n\t *\n\t * @param integer $post_id Post ID.\n\t *\/\n\tpublic function pre_post_update( $post_id ) {\n\t\t$this->updated_posts[ $post_id ] = get_permalink( $post_id );\n\t}\n\n\t\/**\n\t * Handles redirection when post is updated.\n\t *\n\t * @param integer $post_id Post ID.\n\t * @param WP_Post $post    Post object after update.\n\t * @param WP_Post $before  Post object before update.\n\t *\/\n\tpublic function handle_post_update( $post_id, $post, $before ) {\n\t\tif ( ! in_array( $post->post_type, Helper::get_accessible_post_types(), true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Transitioning state of post.\n\t\t$transition = \"{$before->post_status}_to_{$post->post_status}\";\n\n\t\t\/\/ Both state permalink.\n\t\t$before_permalink = isset( $this->updated_posts[ $post_id ] ) ? $this->updated_posts[ $post_id ] : false;\n\t\t$after_permalink  = get_permalink( $post_id );\n\n\t\t\/\/ Check for permalink change.\n\t\tif ( $this->is_watched_transition( $transition, $post ) && $this->has_permalink_changed( $before_permalink, $after_permalink ) ) {\n\t\t\t$redirection_id = $this->create_redirection( $before_permalink, $after_permalink, 301, $post->ID, 'post' );\n\n\t\t\t$message = sprintf(\n\t\t\t\t\/\/ translators: %1$s: post type label, %2$s: edit redirection URL.\n\t\t\t\t__( 'SEO Notice: you just changed the slug of a %1$s and Rank Math has automatically created a redirection. You can edit the redirection by <a href=\"%2$s\">clicking here<\/a>.', 'rank-math' ),\n\t\t\t\tHelper::get_post_type_label( $post->post_type, true ),\n\t\t\t\t$this->get_edit_redirection_url( $redirection_id )\n\t\t\t);\n\t\t\t$this->add_notification( $message, true );\n\n\t\t\t\/\/ Update the meta value as well.\n\t\t\tif ( 'edit-post' === Param::post( 'screen' ) ) {\n\t\t\t\tupdate_post_meta( $post_id, 'rank_math_permalink', $post->post_name );\n\t\t\t}\n\n\t\t\t$this->do_action( 'redirection\/post_updated', $redirection_id, $post_id );\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Remember the previous term permalink.\n\t *\n\t * @param integer $term_id  Term ID.\n\t * @param string  $taxonomy Taxonomy slug of the related term.\n\t *\/\n\tpublic function pre_term_update( $term_id, $taxonomy ) {\n\t\t$this->updated_terms[ $term_id ] = get_term_link( $term_id, $taxonomy );\n\t}\n\n\t\/**\n\t * Detect if the slug changed, hooked into 'post_updated'.\n\t *\n\t * @param integer $term_id  ID of the term edited.\n\t * @param integer $tt_id    The term taxonomy id.\n\t * @param string  $taxonomy Taxonomy slug of the related term.\n\t *\n\t * @return void\n\t *\/\n\tpublic function handle_term_update( $term_id, $tt_id, $taxonomy ) {\n\t\tif ( ! in_array( $taxonomy, array_keys( Helper::get_accessible_taxonomies() ), true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tSitepress::get()->delete_cached_tax_permalink( $term_id, $taxonomy );\n\n\t\t\/\/ Both state permalink.\n\t\t$before_permalink = isset( $this->updated_terms[ $term_id ] ) ? $this->updated_terms[ $term_id ] : false;\n\t\t$after_permalink  = get_term_link( $term_id );\n\n\t\tif ( $before_permalink !== $after_permalink ) {\n\t\t\t$term           = get_term_by( 'id', $term_id, $taxonomy );\n\t\t\t$redirection_id = $this->create_redirection( $before_permalink, $after_permalink, 301, $term->term_id, 'term' );\n\n\t\t\t$message = sprintf(\n\t\t\t\t\/\/ translators: %1$s: term name, %2$s: edit redirection URL.\n\t\t\t\t__( 'SEO Notice: you just changed the slug of a %1$s and Rank Math has automatically created a redirection. You can edit the redirection by <a href=\"%2$s\">clicking here<\/a>.', 'rank-math' ),\n\t\t\t\t$term->name,\n\t\t\t\t$this->get_edit_redirection_url( $redirection_id )\n\t\t\t);\n\t\t\t$this->add_notification( $message, true );\n\n\t\t\t$this->do_action( 'redirection\/term_updated', $redirection_id, $term_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Create redirection.\n\t *\n\t * @param string $from_url    Redirecting from url for cache.\n\t * @param string $url_to      Destination url.\n\t * @param int    $header_code Response header code.\n\t * @param int    $object_id   Object id.\n\t * @param string $type        Object type.\n\t *\n\t * @return int Redirection id.\n\t *\/\n\tprivate function create_redirection( $from_url, $url_to, $header_code, $object_id, $type ) {\n\t\t\/\/ Early bail.\n\t\tif ( empty( $from_url ) || empty( $url_to ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check for any existing redirection.\n\t\t\/\/ If found update that record.\n\t\t$redirection = $this->has_existing_redirection( $object_id, $type );\n\t\tif ( false === $redirection ) {\n\t\t\t$redirection = Redirection::from(\n\t\t\t\t[\n\t\t\t\t\t'url_to'      => $url_to,\n\t\t\t\t\t'header_code' => $header_code,\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$redirection->set_nocache( true );\n\t\t$redirection->add_source( $from_url, 'exact' );\n\t\t$redirection->add_destination( $url_to );\n\t\t$redirection->save();\n\n\t\t\/\/ Perform Cache.\n\t\tCache::purge_by_object_id( $object_id, $type );\n\t\tif ( $from_url ) {\n\t\t\t$from_url = wp_parse_url( $from_url, PHP_URL_PATH );\n\t\t\t$from_url = Redirection::strip_subdirectory( $from_url );\n\t\t\tCache::add(\n\t\t\t\t[\n\t\t\t\t\t'from_url'       => $from_url,\n\t\t\t\t\t'redirection_id' => $redirection->get_id(),\n\t\t\t\t\t'object_id'      => $object_id,\n\t\t\t\t\t'object_type'    => $type,\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn $redirection->get_id();\n\t}\n\n\t\/**\n\t * Check for any existing redirection.\n\t *\n\t * @param int    $object_id Object id.\n\t * @param string $type      Object type.\n\t *\n\t * @return boolean|int\n\t *\/\n\tprivate function has_existing_redirection( $object_id, $type ) {\n\t\t$cache = Cache::get_by_object_id( $object_id, $type );\n\t\tif ( ! $cache ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Redirection::create( $cache->redirection_id );\n\t}\n\n\t\/**\n\t * Check if permalinks are different and if the before isn't the site URL.\n\t *\n\t * @param  WP_Post $before Post object before update.\n\t * @param  WP_Post $after  Post object after update.\n\t * @return boolean\n\t *\/\n\tprivate function has_permalink_changed( $before, $after ) {\n\t\t$before = wp_parse_url( $before, PHP_URL_PATH );\n\t\t$after  = wp_parse_url( $after, PHP_URL_PATH );\n\n\t\t\/\/ Do the URLs the match?\n\t\tif ( $before === $after ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Is the $before the site URL?\n\t\tif ( $this->get_site_path() === $before || '\/' === $before ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Gets edit redirection URL.\n\t *\n\t * @param  int $redirection_id Redirection ID.\n\t * @return string\n\t *\/\n\tprivate function get_edit_redirection_url( $redirection_id ) {\n\t\treturn Helper::get_admin_url(\n\t\t\t'redirections',\n\t\t\t[\n\t\t\t\t'redirection' => $redirection_id,\n\t\t\t\t'action'      => 'edit',\n\t\t\t\t'security'    => wp_create_nonce( 'redirection_list_action' ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get site path.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_site_path() {\n\t\t$path = wp_parse_url( get_home_url(), PHP_URL_PATH );\n\t\tif ( $path ) {\n\t\t\treturn rtrim( $path, '\/' ) . '\/';\n\t\t}\n\n\t\treturn '\/';\n\t}\n\n\t\/**\n\t * Display a suggestion notice after a post has been deleted.\n\t *\n\t * @param int $post_id Deleted post ID.\n\t *\/\n\tpublic function display_suggestion( $post_id ) {\n\t\t$post = get_post( $post_id );\n\n\t\tif ( $this->can_display_suggestion( $post ) ) {\n\t\t\t$url = get_permalink( $post_id );\n\t\t\t$this->add_invalid_notification( $url, 'post' );\n\t\t}\n\t}\n\n\t\/**\n\t * Invalidate redirection cache for the post.\n\t * Don't invalidate for revisions.\n\t *\n\t * @param int $post_id Post ID to invalidate type for.\n\t *\/\n\tpublic function invalidate_post( $post_id ) {\n\t\tif ( wp_is_post_revision( $post_id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCache::purge_by_object_id( $post_id, 'post' );\n\t}\n\n\t\/**\n\t * Invalidate redirection cache for taxonomies.\n\t *\n\t * @param int $term Term ID.\n\t *\/\n\tpublic function invalidate_term( $term ) {\n\t\t$url = get_term_link( $term );\n\t\t$this->add_invalid_notification( $url, 'term' );\n\t\tCache::purge_by_object_id( $term, 'term' );\n\t}\n\n\t\/**\n\t * Invalidate redirection cache for authors.\n\t *\n\t * @param int $user_id User ID.\n\t *\/\n\tpublic function invalidate_author( $user_id ) {\n\t\tCache::purge_by_object_id( $user_id, 'user' );\n\t}\n\n\t\/**\n\t * Check if notice can be displayed or not.\n\t *\n\t * @param  WP_Post $post Current post.\n\t * @return bool\n\t *\/\n\tprivate function can_display_suggestion( $post ) {\n\t\tif ( 'publish' !== $post->post_status ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Helper::is_post_type_accessible( $post->post_type );\n\t}\n\n\t\/**\n\t * Show Delete Post\/Term notification.\n\t *\n\t * @param url    $url  Deleted object url.\n\t * @param string $type Deleted object type.\n\t *\/\n\tprivate function add_invalid_notification( $url, $type ) {\n\t\t$admin_url = Helper::get_admin_url( 'redirections', [ 'url' => trim( set_url_scheme( $url, 'relative' ), '\/' ) ] );\n\n\t\t\/* translators: 1. url to new screen, 2. old trashed post permalink *\/\n\t\t$message = sprintf( wp_kses_post( __( '<strong>SEO Notice:<\/strong> A previously published %1$s has been moved to trash. You may redirect <code>%2$s<\/code> to <a href=\"%3$s\">a new url<\/a>.', 'rank-math' ) ), $type, $url, $admin_url );\n\n\t\t$this->add_notification( $message, true );\n\t}\n\n\t\/**\n\t * Show Delete Post\/Term notification.\n\t *\n\t * @param string  $message        Notification message.\n\t * @param boolean $is_dismissible Is notification dismissible.\n\t *\/\n\tprivate function add_notification( $message, $is_dismissible = false ) {\n\t\tif ( ! Helper::has_cap( 'redirections' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type'    => 'warning',\n\t\t\t\t'id'      => 'auto_post_redirection',\n\t\t\t\t'classes' => $is_dismissible ? 'is-dismissible' : '',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Invalidate redirection update.\n\t *\n\t * @param string  $transition Previous and current post status.\n\t * @param WP_Post $post       Current post.\n\t * @return bool\n\t *\/\n\tprivate function is_watched_transition( $transition, $post ) {\n\t\treturn 'publish_to_publish' === $transition\n\t\t\t|| ( 'inherit_to_inherit' === $transition && 'attachment' === $post->post_type && ! Helper::get_settings( 'general.attachment_redirect_urls' ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-cache.php","ext":"php","size":3109,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections Cache.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Cache class.\n *\/\nclass Cache {\n\n\t\/**\n\t * Get query builder.\n\t *\n\t * @return Query_Builder\n\t *\/\n\tprivate static function table() {\n\t\treturn Database::table( 'rank_math_redirections_cache' );\n\t}\n\n\t\/**\n\t * Get redirection by object ID.\n\t *\n\t * @param  integer $object_id   Object ID to look for.\n\t * @param  string  $object_type Current object type.\n\t * @return object\n\t *\/\n\tpublic static function get_by_object_id( $object_id, $object_type ) {\n\t\treturn self::table()->where( 'object_id', $object_id )->where( 'object_type', $object_type )->one();\n\t}\n\n\t\/**\n\t * Get redirection by URL.\n\t *\n\t * @param  integer $url URL to look for.\n\t * @return object\n\t *\/\n\tpublic static function get_by_url( $url ) {\n\t\treturn empty( $url ) ? false : self::table()->where( 'BINARY from_url', $url )->one();\n\t}\n\n\t\/**\n\t * Get redirections by object ID or URL.\n\t *\n\t * @param integer $object_id   Object ID to look for.\n\t * @param string  $object_type Current object type.\n\t * @param string  $url         URL to look for.\n\t * @return array\n\t *\/\n\tpublic static function get_by_object_id_or_url( $object_id, $object_type, $url ) {\n\t\t$query = self::table()->where( [ [ 'object_id', '=', $object_id ], [ 'object_type', '=', $object_type ] ], 'and' );\n\n\t\tif ( '' !== (string) $url ) {\n\t\t\t$query->orWhere( 'BINARY from_url', $url );\n\t\t}\n\n\t\treturn $query->orderBy( 'object_id', 'desc' )->get();\n\t}\n\n\t\/**\n\t * Add a new record.\n\t *\n\t * @param array $args Values to insert.\n\t *\/\n\tpublic static function add( $args = [] ) {\n\t\tif ( empty( $args ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'from_url'       => '',\n\t\t\t\t'redirection_id' => '',\n\t\t\t\t'object_id'      => '',\n\t\t\t\t'object_type'    => 'post',\n\t\t\t\t'is_redirected'  => '1',\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Check if already exists.\n\t\t$exists = self::table()->where(\n\t\t\t[\n\t\t\t\t[ 'from_url', '=', $args['from_url'] ],\n\t\t\t\t[ 'redirection_id', '=', $args['redirection_id'] ],\n\t\t\t\t[ 'object_id', '=', $args['object_id'] ],\n\t\t\t\t[ 'object_type', '=', $args['object_type'] ],\n\t\t\t\t[ 'is_redirected', '=', $args['is_redirected'] ],\n\t\t\t],\n\t\t\t'and'\n\t\t)->one();\n\n\t\tif ( ! empty( $exists ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn self::table()->insert( $args, [ '%s', '%d', '%d', '%s', '%d' ] );\n\t}\n\n\t\/**\n\t * Purge cache for a redirection.\n\t *\n\t * @param  integer $ids Redirection IDs to purge cache for.\n\t * @return integer\n\t *\/\n\tpublic static function purge( $ids ) {\n\t\treturn self::table()->whereIn( 'redirection_id', (array) $ids )->delete();\n\t}\n\n\t\/**\n\t * Purge cache for an object.\n\t *\n\t * @param  integer $ids Object IDs to purge cache for.\n\t * @param  string  $object_type Current object type.\n\t * @return integer\n\t *\/\n\tpublic static function purge_by_object_id( $ids, $object_type ) {\n\t\treturn self::table()->whereIn( 'object_id', (array) $ids )\n\t\t\t->where( 'object_type', $object_type )->delete();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-admin.php","ext":"php","size":11061,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Module\\Base;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Admin\\Page;\nuse RankMath\\Monitor\\DB as Monitor_DB;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class.\n *\/\nclass Admin extends Base {\n\n\tuse Ajax;\n\tuse Hooker;\n\n\t\/**\n\t * Module ID.\n\t *\n\t * @var string\n\t *\/\n\tpublic $id = '';\n\n\t\/**\n\t * Module directory.\n\t *\n\t * @var string\n\t *\/\n\tpublic $directory = '';\n\n\t\/**\n\t * List table object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $table;\n\n\t\/**\n\t * Screen options.\n\t *\n\t * @var array\n\t *\/\n\tpublic $screen_options = [];\n\n\t\/**\n\t * Module page.\n\t *\n\t * @var object\n\t *\/\n\tpublic $page;\n\n\t\/**\n\t * Admin object.\n\t *\n\t * @var Admin\n\t *\/\n\tpublic $admin;\n\n\t\/**\n\t * Import\/Export object.\n\t *\n\t * @var Import_Export\n\t *\/\n\tpublic $import_export;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'             => 'redirect',\n\t\t\t\t'directory'      => $directory,\n\t\t\t\t'table'          => 'RankMath\\Redirections\\Table',\n\t\t\t\t'screen_options' => [\n\t\t\t\t\t'id'      => 'rank_math_redirections_per_page',\n\t\t\t\t\t'default' => 100,\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\t$this->ajax_hooks();\n\t\t$this->load_metabox();\n\n\t\tif ( Helper::has_cap( 'redirections' ) ) {\n\t\t\t$this->filter( 'rank_math\/settings\/general', 'add_settings' );\n\t\t}\n\n\t\tif ( $this->page->is_current_page() || 'rank_math_save_redirections' === Param::post( 'action' ) ) {\n\t\t\t$this->import_export = new Import_Export();\n\t\t\t$this->import_export->hooks();\n\t\t}\n\n\t\tif ( $this->page->is_current_page() ) {\n\t\t\tnew Export();\n\t\t\t$this->action( 'init', 'init', 21 );\n\t\t}\n\n\t\tadd_action( 'rank_math\/redirection\/clean_trashed', 'RankMath\\\\Redirections\\\\DB::periodic_clean_trash' );\n\t}\n\n\t\/**\n\t * Load metabox.\n\t *\/\n\tprivate function load_metabox() {\n\t\tif ( Admin_Helper::is_post_edit() || Admin_Helper::is_term_edit() ) {\n\t\t\tnew Metabox();\n\t\t}\n\t}\n\n\t\/**\n\t * Hooks for ajax.\n\t *\/\n\tprivate function ajax_hooks() {\n\t\tif ( ! Helper::is_ajax() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->ajax( 'redirection_delete', 'handle_ajax' );\n\t\t$this->ajax( 'redirection_activate', 'handle_ajax' );\n\t\t$this->ajax( 'redirection_deactivate', 'handle_ajax' );\n\t\t$this->ajax( 'redirection_trash', 'handle_ajax' );\n\t\t$this->ajax( 'redirection_restore', 'handle_ajax' );\n\t}\n\n\t\/**\n\t * Register admin page.\n\t *\/\n\tpublic function register_admin_page() {\n\n\t\t$dir = $this->directory . '\/views\/';\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\n\t\t$this->page = new Page(\n\t\t\t'rank-math-redirections',\n\t\t\tesc_html__( 'Redirections', 'rank-math' ),\n\t\t\t[\n\t\t\t\t'position'   => 40,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t'capability' => 'rank_math_redirections',\n\t\t\t\t'render'     => $dir . 'main.php',\n\t\t\t\t'help'       => [\n\t\t\t\t\t'redirections-overview'       => [\n\t\t\t\t\t\t'title' => esc_html__( 'Overview', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-overview.php',\n\t\t\t\t\t],\n\t\t\t\t\t'redirections-screen-content' => [\n\t\t\t\t\t\t'title' => esc_html__( 'Screen Content', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-screen-content.php',\n\t\t\t\t\t],\n\t\t\t\t\t'redirections-actions'        => [\n\t\t\t\t\t\t'title' => esc_html__( 'Available Actions', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-actions.php',\n\t\t\t\t\t],\n\t\t\t\t\t'redirections-bulk'           => [\n\t\t\t\t\t\t'title' => esc_html__( 'Bulk Actions', 'rank-math' ),\n\t\t\t\t\t\t'view'  => $dir . 'help-tab-bulk.php',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'wp-components'          => '',\n\t\t\t\t\t\t'rank-math-common'       => '',\n\t\t\t\t\t\t'rank-math-redirections' => $uri . '\/assets\/css\/redirections.css',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'wp-element'             => '',\n\t\t\t\t\t\t'wp-components'          => '',\n\t\t\t\t\t\t'rank-math-common'       => '',\n\t\t\t\t\t\t'rank-math-components'   => '',\n\t\t\t\t\t\t'rank-math-redirections' => $uri . '\/assets\/js\/redirections.js',\n\t\t\t\t\t],\n\t\t\t\t\t'json'    => [\n\t\t\t\t\t\t'isNew' => Param::get( 'new' ),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add module settings in the General Settings panel.\n\t *\n\t * @param  array $tabs Array of option panel tabs.\n\t * @return array\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\n\t\t\/**\n\t\t * Allow developers to change number of redirections to process at once.\n\t\t *\n\t\t * @param int $number\n\t\t *\/\n\t\tHelper::add_json( 'redirectionPastedContent', $this->do_filter( 'redirections\/pastedContent', 100 ) );\n\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'redirections' => [\n\t\t\t\t\t'icon'  => 'rm-icon rm-icon-redirection',\n\t\t\t\t\t'title' => esc_html__( 'Redirections', 'rank-math' ),\n\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t'desc'  => sprintf( esc_html__( 'Easily create redirects without fiddling with tedious code. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'redirections-settings', 'Options Panel Redirections Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'  => $this->directory . '\/views\/options.php',\n\t\t\t\t\t'json'  => [\n\t\t\t\t\t\t'redirectionTypes' => Helper::choices_redirection_types(),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t8\n\t\t);\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Initialize module actions.\n\t *\/\n\tpublic function init() {\n\t\tHelper::add_json( 'data', $this->get_default_redirection() );\n\t\tif ( ! empty( $_REQUEST['delete_all'] ) ) {\n\t\t\tcheck_admin_referer( 'bulk-redirections' );\n\t\t\tDB::clear_trashed();\n\t\t\treturn;\n\t\t}\n\n\t\t$action = Helper::get_request_action();\n\t\tif ( false === $action || empty( $_REQUEST['redirection'] ) || 'edit' === $action ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_admin_referer( 'bulk-redirections' );\n\n\t\t$ids = (array) wp_parse_id_list( $_REQUEST['redirection'] );\n\t\tif ( empty( $ids ) ) {\n\t\t\tHelper::add_notification( __( 'No valid ID found.', 'rank-math' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$notice = $this->perform_action( $action, $ids );\n\t\tif ( $notice ) {\n\t\t\tHelper::add_notification( $notice, [ 'type' => 'success' ] );\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Handle AJAX request.\n\t *\/\n\tpublic function handle_ajax() {\n\t\t$action = Helper::get_request_action();\n\t\tif ( false === $action ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_ajax_referer( 'redirection_list_action', 'security' );\n\t\t$this->has_cap_ajax( 'redirections' );\n\n\t\t$id     = Param::request( 'redirection', 0, FILTER_VALIDATE_INT );\n\t\t$action = str_replace( 'rank_math_redirection_', '', $action );\n\n\t\tif ( ! $id ) {\n\t\t\t$this->error( esc_html__( 'No valid ID found.', 'rank-math' ) );\n\t\t}\n\n\t\t$notice = $this->perform_action( $action, $id );\n\t\tif ( $notice ) {\n\t\t\t$this->success( $notice );\n\t\t}\n\n\t\t$this->error( esc_html__( 'No valid action found.', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Output page title actions.\n\t *\n\t * @param bool $is_editing User is editing a redirection.\n\t * @return void\n\t *\/\n\tpublic function page_title_actions( $is_editing ) {\n\t\t$actions = [\n\t\t\t'add'           => [\n\t\t\t\t'class' => 'page-title-action rank-math-add-new-redirection' . ( $is_editing ? '-refresh' : '' ),\n\t\t\t\t'href'  => Helper::get_admin_url( 'redirections', 'new=1' ),\n\t\t\t\t'label' => __( 'Add New', 'rank-math' ),\n\t\t\t],\n\t\t\t'import_export' => [\n\t\t\t\t'class' => 'page-title-action',\n\t\t\t\t'href'  => Helper::get_admin_url( 'redirections', 'importexport=1' ),\n\t\t\t\t'label' => __( 'Export Options', 'rank-math' ),\n\t\t\t],\n\t\t\t'learn_more'    => [\n\t\t\t\t'class' => 'page-title-action',\n\t\t\t\t'href'  => KB::get( 'redirections', 'SW Redirection Step' ),\n\t\t\t\t'label' => __( 'Learn More', 'rank-math' ),\n\t\t\t],\n\t\t\t'settings'      => [\n\t\t\t\t'class' => 'page-title-action',\n\t\t\t\t'href'  => Helper::get_settings_url( 'general', 'redirections' ),\n\t\t\t\t'label' => __( 'Settings', 'rank-math' ),\n\t\t\t],\n\t\t];\n\n\t\t$actions = $this->do_filter( 'redirections\/page_title_actions', $actions, $is_editing );\n\n\t\tforeach ( $actions as $action_name => $action ) {\n\t\t\t?>\n\t\t\t\t<a class=\"<?php echo esc_attr( $action['class'] ); ?> rank-math-redirections-<?php echo esc_attr( $action_name ); ?>\" href=\"<?php echo esc_attr( $action['href'] ); ?>\" target=\"<?php echo $action_name === 'learn_more' ? '_blank' : ''; ?>\"><?php echo esc_attr( $action['label'] ); ?><\/a>\n\t\t\t<?php\n\t\t}\n\t}\n\n\t\/**\n\t * Get default Redirection to show on a new Redirection form.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_default_redirection() {\n\t\t$redirection = Param::get( 'redirection' );\n\t\tif ( $redirection ) {\n\t\t\treturn $this->do_filter( 'redirections\/table_item', DB::get_redirection_by_id( $redirection ) );\n\t\t}\n\n\t\t$url = Param::get( 'url' );\n\t\tif ( $url ) {\n\t\t\treturn [\n\t\t\t\t'header_code' => '301',\n\t\t\t\t'status'      => 'active',\n\t\t\t\t'sources'     => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'pattern'    => esc_attr( $url ),\n\t\t\t\t\t\t'comparison' => 'exact',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\t$urls = Param::get( 'urls', false, FILTER_DEFAULT, FILTER_REQUIRE_ARRAY );\n\t\tif ( $urls ) {\n\t\t\t$urls    = array_map( 'esc_attr', $urls );\n\t\t\t$sources = [];\n\t\t\tforeach ( $urls as $url ) {\n\t\t\t\t$sources[] = [\n\t\t\t\t\t'pattern'    => $url,\n\t\t\t\t\t'comparison' => 'exact',\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t'header_code' => '301',\n\t\t\t\t'status'      => 'active',\n\t\t\t\t'sources'     => $sources,\n\t\t\t];\n\t\t}\n\n\t\tif ( ! empty( $_REQUEST['log'] ) && is_array( $_REQUEST['log'] ) ) {\n\t\t\treturn [\n\t\t\t\t'header_code' => '301',\n\t\t\t\t'status'      => 'active',\n\t\t\t\t'sources'     => $this->get_sources_for_log(),\n\t\t\t\t'url_to'      => esc_url( home_url( '\/' ) ),\n\t\t\t];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get sources for 404 log items.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_sources_for_log() {\n\t\t$logs = isset( $_REQUEST['log'] ) ? array_map( 'absint', $_REQUEST['log'] ) : [];\n\t\t$logs = Monitor_DB::get_logs(\n\t\t\t[\n\t\t\t\t'ids'     => $logs,\n\t\t\t\t'orderby' => '',\n\t\t\t\t'limit'   => 1000,\n\t\t\t]\n\t\t);\n\n\t\t$sources = [];\n\t\tforeach ( $logs['logs'] as $log ) {\n\t\t\tif ( empty( $log['uri'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$sources[] = [\n\t\t\t\t'pattern'    => $log['uri'],\n\t\t\t\t'comparison' => 'exact',\n\t\t\t];\n\t\t}\n\n\t\treturn $sources;\n\t}\n\n\t\/**\n\t * Perform action on database.\n\t *\n\t * @param  string        $action Action to perform.\n\t * @param  integer|array $ids    Rows to perform on.\n\t * @return string\n\t *\/\n\tprivate function perform_action( $action, $ids ) {\n\t\t$status  = [\n\t\t\t'activate'   => 'active',\n\t\t\t'deactivate' => 'inactive',\n\t\t\t'trash'      => 'trashed',\n\t\t\t'restore'    => 'active',\n\t\t];\n\t\t$message = [\n\t\t\t'activate'   => esc_html__( 'Redirection successfully activated.', 'rank-math' ),\n\t\t\t'deactivate' => esc_html__( 'Redirection successfully deactivated.', 'rank-math' ),\n\t\t\t'trash'      => esc_html__( 'Redirection successfully moved to Trash.', 'rank-math' ),\n\t\t\t'restore'    => esc_html__( 'Redirection successfully restored.', 'rank-math' ),\n\t\t];\n\n\t\tif ( isset( $status[ $action ] ) ) {\n\t\t\tDB::change_status( $ids, $status[ $action ] );\n\t\t\treturn $message[ $action ];\n\t\t}\n\n\t\tif ( 'delete' === $action ) {\n\t\t\t$count = DB::delete( $ids );\n\t\t\tif ( $count > 0 ) {\n\t\t\t\t\/* translators: delete counter *\/\n\t\t\t\treturn sprintf( esc_html__( '%d redirection(s) successfully deleted.', 'rank-math' ), $count );\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-metabox.php","ext":"php","size":5080,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirections Metabox.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Metabox class.\n *\/\nclass Metabox {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rank_math\/metabox\/values', 'add_json_data' );\n\t}\n\n\t\/**\n\t * Add settings in the Advanced tab of the metabox.\n\t *\n\t * @param array $values Localized data.\n\t *\/\n\tpublic function add_json_data( $values ) {\n\t\tif ( ! $this->can_add_setting( $values ) ) {\n\t\t\treturn $values;\n\t\t}\n\n\t\t$object_type = $values['objectType'];\n\t\t$object_id   = (int) $values['objectID'];\n\t\t$url         = 'term' === $object_type ? get_term_link( $object_id ) : get_permalink( $object_id );\n\t\tif ( is_wp_error( $url ) ) {\n\t\t\treturn $values;\n\t\t}\n\n\t\t$redirection = Cache::get_by_object_id( $object_id, $object_type );\n\t\t$redirection = $redirection ? DB::get_redirection_by_id( $redirection->redirection_id, 'active' ) : [\n\t\t\t'id'          => '',\n\t\t\t'url_to'      => '',\n\t\t\t'header_code' => Helper::get_settings( 'general.redirections_header_code' ),\n\t\t];\n\n\t\tif ( ! empty( $redirection['url_to'] ) && $url === $redirection['url_to'] ) {\n\t\t\t$redirection['url_to'] = '';\n\t\t}\n\n\t\t$values['assessor']['redirection']           = $redirection;\n\t\t$values['assessor']['autoCreateRedirection'] = Helper::get_settings( 'general.redirections_post_redirect' );\n\n\t\treturn $values;\n\t}\n\n\t\/**\n\t * Save handler for metadata.\n\t *\n\t * @param CMB2 $cmb CMB2 instance.\n\t *\/\n\tpublic function save_advanced_meta( $cmb ) {\n\t\tif ( $this->can_delete( $cmb->data_to_save ) ) {\n\t\t\t\/\/ Delete.\n\t\t\tif ( ! empty( $cmb->data_to_save['redirection_id'] ) ) {\n\t\t\t\tDB::delete( $cmb->data_to_save['redirection_id'] );\n\t\t\t\tHelper::add_notification( esc_html__( 'Redirection successfully deleted.', 'rank-math' ), [ 'type' => 'info' ] );\n\t\t\t}\n\t\t\treturn [\n\t\t\t\t'action'  => 'delete',\n\t\t\t\t'message' => esc_html__( 'Redirection successfully deleted.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t\/\/ Check if no change bail!!\n\t\tif ( ! $this->can_update( $cmb->data_to_save ) ) {\n\t\t\treturn [\n\t\t\t\t'action'  => 'cant_update',\n\t\t\t\t'message' => esc_html__( 'Can\\'t update redirection.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$redirection = Redirection::from(\n\t\t\t[\n\t\t\t\t'id'          => isset( $cmb->data_to_save['redirection_id'] ) ? $cmb->data_to_save['redirection_id'] : '',\n\t\t\t\t'url_to'      => $cmb->data_to_save['redirection_url_to'],\n\t\t\t\t'sources'     => [\n\t\t\t\t\t[\n\t\t\t\t\t\t'pattern'    => $cmb->data_to_save['redirection_sources'],\n\t\t\t\t\t\t'comparison' => 'exact',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'header_code' => $cmb->data_to_save['redirection_header_code'],\n\t\t\t]\n\t\t);\n\t\t$redirection->set_nocache( true );\n\t\t$redirection->save();\n\n\t\t$response = [\n\t\t\t'action'  => 'update',\n\t\t\t'message' => esc_html__( 'Redirection updated successfully.', 'rank-math' ),\n\t\t];\n\n\t\tif ( $redirection->is_new() ) {\n\t\t\tHelper::add_notification( esc_html__( 'New redirection created.', 'rank-math' ) );\n\t\t\t$response = [\n\t\t\t\t'id'      => $redirection->get_id(),\n\t\t\t\t'action'  => 'new',\n\t\t\t\t'message' => esc_html__( 'New redirection created.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tCache::add(\n\t\t\t[\n\t\t\t\t'from_url'       => $cmb->data_to_save['redirection_sources'],\n\t\t\t\t'redirection_id' => $redirection->get_id(),\n\t\t\t\t'object_id'      => $cmb->object_id,\n\t\t\t\t'object_type'    => \\property_exists( $cmb, 'object_type' ) ? $cmb->object_type : 'post',\n\t\t\t]\n\t\t);\n\n\t\treturn $response;\n\t}\n\n\t\/**\n\t * Whether to add Redirection Settings.\n\t *\n\t * @param array $values Localized data.\n\t *\/\n\tprivate function can_add_setting( $values ) {\n\t\tif ( 'post' !== $values['objectType'] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$post = get_post( $values['objectID'] );\n\t\tif ( empty( $post ) || 'publish' !== $post->post_status ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Check if can delete.\n\t *\n\t * @param array $values Values.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function can_delete( $values ) {\n\t\tif ( ! isset( $values['rank_math_enable_redirection'] ) || 'off' === $values['rank_math_enable_redirection'] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isset( $values['has_redirect'] ) && empty( $values['has_redirect'] ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( false === in_array( (int) $values['redirection_header_code'], [ 410, 451 ], true ) ) {\n\t\t\tif ( empty( $values['redirection_url_to'] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if update is required.\n\t *\n\t * @param array $values Values.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function can_update( $values ) {\n\t\tif ( did_action( 'rank_math\/redirection\/post_updated' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( empty( $values['redirection_id'] ) || in_array( (int) $values['redirection_header_code'], [ 410, 451 ], true ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$redirection = DB::get_redirection_by_id( $values['redirection_id'] );\n\n\t\treturn ! (\n\t\t\t$values['redirection_url_to'] === $redirection['url_to'] &&\n\t\t\t$values['redirection_header_code'] === $redirection['header_code']\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-table.php","ext":"php","size":11649,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WP List Table class for the Redirections module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Admin\\List_Table;\nuse RankMath\\Redirections\\Admin;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Table class.\n *\/\nclass Table extends List_Table {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tparent::__construct(\n\t\t\t[\n\t\t\t\t'screen'   => Admin::get_screen(),\n\t\t\t\t'singular' => 'redirection',\n\t\t\t\t'plural'   => 'redirections',\n\t\t\t\t'no_items' => $this->is_trashed_page() ? esc_html__( 'No redirections found in Trash.', 'rank-math' ) : wp_kses_post( __( 'No redirections added yet. <a href=\"#\" class=\"rank-math-add-new-redirection\">Add New Redirection<\/a>', 'rank-math' ) ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Prepares the list of items for displaying.\n\t *\/\n\tpublic function prepare_items() {\n\t\t$per_page = $this->get_items_per_page( 'rank_math_redirections_per_page', 100 );\n\n\t\t$data = DB::get_redirections(\n\t\t\t[\n\t\t\t\t'limit'   => $per_page,\n\t\t\t\t'order'   => $this->get_order(),\n\t\t\t\t'orderby' => $this->get_orderby( 'id' ),\n\t\t\t\t'paged'   => $this->get_pagenum(),\n\t\t\t\t'search'  => $this->get_search(),\n\t\t\t\t'status'  => Param::request( 'status', 'any' ),\n\t\t\t]\n\t\t);\n\n\t\t$this->items = $data['redirections'];\n\n\t\t$this->set_pagination_args(\n\t\t\t[\n\t\t\t\t'total_items' => $data['count'],\n\t\t\t\t'per_page'    => $per_page,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Handles the checkbox column output.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tpublic function column_cb( $item ) {\n\t\treturn sprintf( '<input type=\"checkbox\" name=\"redirection[]\" value=\"%s\" \/>', $item['id'] );\n\t}\n\n\t\/**\n\t * Handle the sources column.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tprotected function column_sources( $item ) {\n\t\treturn $this->get_sources_html( $item ) . $this->column_actions( $item );\n\t}\n\n\t\/**\n\t * Handle the created column.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tprotected function column_created( $item ) {\n\t\t$no_created = ( empty( $item['created'] ) || '0000-00-00 00:00:00' === $item['created'] );\n\n\t\treturn $no_created ? '' : mysql2date( 'F j, Y, G:i', $item['created'] );\n\t}\n\n\t\/**\n\t * Handle the last accessed column.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tprotected function column_last_accessed( $item ) {\n\t\t$no_last_accessed = ( empty( $item['last_accessed'] ) || '0000-00-00 00:00:00' === $item['last_accessed'] );\n\n\t\treturn $no_last_accessed ? '' : mysql2date( 'F j, Y, G:i', $item['last_accessed'] );\n\t}\n\n\t\/**\n\t * Handles the default column output.\n\t *\n\t * @param object $item        The current item.\n\t * @param string $column_name The current column name.\n\t *\/\n\tpublic function column_default( $item, $column_name ) {\n\t\t\/**\n\t\t * Filters the default column output. Pass non-empty value to enable.\n\t\t *\n\t\t * @param bool   $false The column value.\n\t\t * @param object $item  The current item.\n\t\t *\/\n\t\t$default = apply_filters( \"rank_math\/redirection\/admin_column_{$column_name}\", false, $item );\n\t\tif ( ! empty( $default ) ) {\n\t\t\treturn $default;\n\t\t}\n\n\t\tif ( in_array( $column_name, [ 'hits', 'header_code', 'url_to' ], true ) ) {\n\t\t\treturn esc_html( $item[ $column_name ] );\n\t\t}\n\n\t\treturn esc_html( wp_json_encode( $item, true ) );\n\t}\n\n\t\/**\n\t * Get html for sources column\n\t *\n\t * @param  array $item Array of current redirection..\n\t * @return string\n\t *\/\n\tprivate function get_sources_html( $item ) {\n\t\t$sources = maybe_unserialize( $item['sources'] );\n\n\t\tif ( empty( $sources ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$comparison_hash = Helper::choices_comparison_types();\n\n\t\t\/\/ First one.\n\t\t$html = $this->get_source_html( $sources[0], $comparison_hash, $item );\n\t\tunset( $sources[0] );\n\n\t\tif ( empty( $sources ) ) {\n\t\t\treturn $html;\n\t\t}\n\n\t\t\/\/ Show more button.\n\t\t$html .= ' <a href=\"#\" class=\"rank-math-showmore\" title=\"' . esc_html__( 'Show more', 'rank-math' ) . '\">[&hellip;]<\/a>';\n\t\t$html .= '<div class=\"rank-math-more\">';\n\n\t\t\/\/ Loop remaining.\n\t\t$parts = [];\n\t\tforeach ( $sources as $source ) {\n\t\t\t$parts[] = $this->get_source_html( $source, $comparison_hash, $item );\n\t\t}\n\n\t\t$html .= join( '<br>', $parts );\n\t\t$html .= '<br><a href=\"#\" class=\"rank-math-hidemore\" title=\"' . esc_html__( 'Hide details', 'rank-math' ) . '\">[' . esc_html__( 'Hide', 'rank-math' ) . ']<\/a>';\n\t\t$html .= '<\/div>';\n\n\t\treturn $html;\n\t}\n\n\t\/**\n\t * Get html of a source.\n\t *\n\t * @param  array $source          Source for which render html.\n\t * @param  array $comparison_hash Comparison array hash.\n\t * @param  array $item            Array of current redirection.\n\t * @return string\n\t *\/\n\tprivate function get_source_html( $source, $comparison_hash, $item ) {\n\t\t$edit_url = $this->get_url(\n\t\t\t$item,\n\t\t\t[\n\t\t\t\t'action' => 'edit',\n\t\t\t]\n\t\t);\n\t\t$html     = '<span class=\"value-url_from\"><strong><a href=\"' . $edit_url . '\">' . esc_html( stripslashes( $source['pattern'] ) ) . '<\/a><\/strong><\/span>';\n\t\tif ( 'exact' !== $source['comparison'] ) {\n\t\t\t$html .= ' <span class=\"value-source-comparison\">(' . esc_html( $comparison_hash[ $source['comparison'] ] ) . ')<\/span>';\n\t\t}\n\t\treturn $html;\n\t}\n\n\t\/**\n\t * Generate admin action url.\n\t *\n\t * @param object $item      The current item.\n\t * @param array  $params Additional URL params.\n\t *\/\n\tpublic function get_url( $item, $params = [] ) {\n\t\t$defaults = [\n\t\t\t'redirection' => $item['id'],\n\t\t\t'security'    => wp_create_nonce( 'redirection_list_action' ),\n\t\t];\n\t\t$params   = wp_parse_args( $params, $defaults );\n\t\treturn esc_url( Helper::get_admin_url( 'redirections', $params ) );\n\t}\n\n\t\/**\n\t * Generate row actions div.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tpublic function column_actions( $item ) {\n\t\t$url      = $this->get_url( $item );\n\t\t$sources  = maybe_unserialize( $item['sources'] );\n\t\t$view_url = Helper::get_home_url( $sources[0]['pattern'] );\n\t\t$edit_url = $this->get_url(\n\t\t\t$item,\n\t\t\t[\n\t\t\t\t'action' => 'edit',\n\t\t\t]\n\t\t);\n\n\t\tif ( $this->is_trashed_page() ) {\n\t\t\treturn $this->row_actions(\n\t\t\t\t[\n\t\t\t\t\t'restore' => '<a href=\"' . $url . '\" data-action=\"restore\" class=\"rank-math-redirection-action\">' . esc_html__( 'Restore', 'rank-math' ) . '<\/a>',\n\t\t\t\t\t'delete'  => '<a href=\"' . $url . '\" data-action=\"delete\" class=\"rank-math-redirection-action\">' . esc_html__( 'Delete Permanently', 'rank-math' ) . '<\/a>',\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$redirection = $this->do_filter(\n\t\t\t'redirections\/table_item',\n\t\t\t[\n\t\t\t\t'id'          => $item['id'],\n\t\t\t\t'sources'     => unserialize( $item['sources'] ), \/\/phpcs:ignore -- This will be fixed after moving the sources to JSON.\n\t\t\t\t'url_to'      => $item['url_to'],\n\t\t\t\t'header_code' => $item['header_code'],\n\t\t\t\t'status'      => $item['status'],\n\t\t\t]\n\t\t);\n\n\t\treturn $this->row_actions(\n\t\t\t[\n\t\t\t\t'edit'       => '<a data-redirection=\"' . esc_attr( wp_json_encode( $redirection ) ) . '\" href=\"' . $edit_url . '\" class=\"rank-math-redirection-edit\">' . esc_html__( 'Edit', 'rank-math' ) . '<\/a>',\n\t\t\t\t'deactivate' => '<a href=\"' . $url . '\" data-action=\"deactivate\" class=\"rank-math-redirection-action\">' . esc_html__( 'Deactivate', 'rank-math' ) . '<\/a>',\n\t\t\t\t'activate'   => '<a href=\"' . $url . '\" data-action=\"activate\" class=\"rank-math-redirection-action\">' . esc_html__( 'Activate', 'rank-math' ) . '<\/a>',\n\t\t\t\t'trash'      => '<a href=\"' . $url . '\" data-action=\"trash\" class=\"rank-math-redirection-action\">' . esc_html__( 'Trash', 'rank-math' ) . '<\/a>',\n\t\t\t\t'view'       => '<a href=\"' . $view_url . '\" rel=\"bookmark\">' . esc_html__( 'View', 'rank-math' ) . '<\/a>',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get a list of columns.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_columns() {\n\t\t\/**\n\t\t * Filters the columns displayed in the Redirections table.\n\t\t *\n\t\t * @param array $columns Array of columns.\n\t\t *\/\n\t\treturn apply_filters(\n\t\t\t'rank_math\/redirection\/admin_columns',\n\t\t\t[\n\t\t\t\t'cb'            => '<input type=\"checkbox\" \/>',\n\t\t\t\t'sources'       => esc_html__( 'From', 'rank-math' ),\n\t\t\t\t'url_to'        => esc_html__( 'To', 'rank-math' ),\n\t\t\t\t'header_code'   => esc_html__( 'Type', 'rank-math' ),\n\t\t\t\t'hits'          => esc_html__( 'Hits', 'rank-math' ),\n\t\t\t\t'created'       => esc_html__( 'Created', 'rank-math' ),\n\t\t\t\t'last_accessed' => esc_html__( 'Last Accessed', 'rank-math' ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get a list of sortable columns.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_sortable_columns() {\n\t\treturn [\n\t\t\t'url_to'        => [ 'url_to', false ],\n\t\t\t'header_code'   => [ 'header_code', false ],\n\t\t\t'hits'          => [ 'hits', false ],\n\t\t\t'created'       => [ 'created', false ],\n\t\t\t'last_accessed' => [ 'last_accessed', false ],\n\t\t];\n\t}\n\n\t\/**\n\t * Get an associative array ( option_name => option_title ) with the list\n\t * of bulk actions available on this table.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_bulk_actions() {\n\t\tif ( $this->is_trashed_page() ) {\n\t\t\t$actions = [\n\t\t\t\t'restore' => esc_html__( 'Restore', 'rank-math' ),\n\t\t\t\t'delete'  => esc_html__( 'Delete Permanently', 'rank-math' ),\n\t\t\t];\n\t\t} else {\n\t\t\t$actions = [\n\t\t\t\t'activate'   => esc_html__( 'Activate', 'rank-math' ),\n\t\t\t\t'deactivate' => esc_html__( 'Deactivate', 'rank-math' ),\n\t\t\t\t'trash'      => esc_html__( 'Move to Trash', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t\/**\n\t\t * Filters the list of bulk actions available on the Redirections table.\n\t\t *\n\t\t * @param array $actions Array of bulk actions.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/redirection\/bulk_actions', $actions );\n\t}\n\n\t\/**\n\t * Get an associative array ( id => link ) with the list of views available on this table.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_views() {\n\n\t\t$url     = Helper::get_admin_url( 'redirections' );\n\t\t$current = Param::get( 'status', 'all' );\n\t\t$counts  = DB::get_counts();\n\t\t$labels  = [\n\t\t\t'all'      => esc_html__( 'All', 'rank-math' ),\n\t\t\t'active'   => esc_html__( 'Active', 'rank-math' ),\n\t\t\t'inactive' => esc_html__( 'Inactive', 'rank-math' ),\n\t\t\t'trashed'  => esc_html__( 'Trash', 'rank-math' ),\n\t\t];\n\n\t\t$links = [];\n\t\tforeach ( $labels as $key => $label ) {\n\t\t\t$links[ $key ] = sprintf(\n\t\t\t\t'<a href=\"%1$s\"%2$s>%3$s <span class=\"count\">(%4$s)<\/span><\/a>',\n\t\t\t\t$url . '&status=' . $key,\n\t\t\t\t$key === $current ? ' class=\"current\"' : '',\n\t\t\t\t$label,\n\t\t\t\tnumber_format_i18n( $counts[ $key ] )\n\t\t\t);\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Generates content for a single row of the table.\n\t *\n\t * @param object $item The current item.\n\t *\/\n\tpublic function single_row( $item ) {\n\t\t$classes = 'rank-math-redirection-' . ( 'inactive' === $item['status'] ? 'deactivated' : 'activated' );\n\n\t\t\/**\n\t\t * Filters the row class.\n\t\t *\n\t\t * @param string $classes The row class.\n\t\t * @param object $item    The current item.\n\t\t *\/\n\t\t$classes = apply_filters( 'rank_math\/redirection\/row_classes', $classes, $item );\n\n\t\techo '<tr class=\"' . esc_attr( $classes ) . '\">';\n\t\t$this->single_row_columns( $item );\n\t\techo '<\/tr>';\n\t}\n\n\t\/**\n\t * Prints extra table nav.\n\t *\n\t * @param string $which The position. Accepts `top` or `bottom`.\n\t *\/\n\tpublic function extra_tablenav( $which ) {\n\t\tparent::extra_tablenav( $which );\n\n\t\tdo_action( 'rank_math\/redirection\/extra_tablenav', $which );\n\n\t\tif ( ! $this->is_trashed_page() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$counts = DB::get_counts();\n\t\tif ( empty( $counts['trashed'] ) || ! intval( $counts['trashed'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\techo '<div class=\"alignleft actions\">';\n\t\tsubmit_button( esc_html__( 'Empty Trash', 'rank-math' ), '', 'delete_all', false );\n\t\techo '<\/div>';\n\t}\n\n\t\/**\n\t * Checks if page status is set to trashed.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function is_trashed_page() {\n\t\treturn 'trashed' === Param::get( 'status' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-redirection.php","ext":"php","size":10727,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirection Item.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Redirection class.\n *\/\nclass Redirection {\n\n\t\/**\n\t * Hold redirection data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $data;\n\n\t\/**\n\t * Hold cache data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $cache;\n\n\t\/**\n\t * No pre redirection cache.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $nocache = false;\n\n\t\/**\n\t * Hold current parent domain.\n\t *\n\t * @var string\n\t *\/\n\tprivate $domain = null;\n\n\t\/**\n\t * Hold state.\n\t *\n\t * @var string\n\t *\/\n\tprivate $is_new = true;\n\n\t\/**\n\t * Retrieve Redirection instance.\n\t *\n\t * @param integer $id Redirection ID.\n\t *\n\t * @return Redirection\n\t *\/\n\tpublic static function create( $id = 0 ) {\n\t\t$data = [\n\t\t\t'id'          => 0,\n\t\t\t'sources'     => [],\n\t\t\t'url_to'      => '',\n\t\t\t'header_code' => '301',\n\t\t\t'hits'        => '0',\n\t\t\t'status'      => 'active',\n\t\t\t'created'     => '',\n\t\t\t'updated'     => '',\n\t\t];\n\n\t\tif ( $id > 0 && $object = DB::get_redirection_by_id( $id ) ) { \/\/ phpcs:ignore\n\t\t\t$object['id'] = absint( $object['id'] );\n\t\t\tunset( $object['last_accessed'] );\n\t\t\t$data = $object;\n\t\t}\n\n\t\treturn new self( $data );\n\t}\n\n\t\/**\n\t * Create instance from array.\n\t *\n\t * @param array $data Array of data.\n\t *\n\t * @return Redirection\n\t *\/\n\tpublic static function from( $data ) {\n\t\t$sources = [];\n\t\tif ( isset( $data['sources'] ) ) {\n\t\t\t$sources = $data['sources'];\n\t\t\tunset( $data['sources'] );\n\t\t}\n\n\t\t$object = new self( $data );\n\t\t$object->add_sources( $sources );\n\n\t\tif ( isset( $data['url_to'] ) ) {\n\t\t\t$object->add_destination( $data['url_to'] );\n\t\t}\n\n\t\treturn $object;\n\t}\n\n\t\/**\n\t * Constructor.\n\t *\n\t * @param array $data    Array of item data.\n\t * @param bool  $nocache Don't do pre-cache.\n\t *\/\n\tpublic function __construct( $data, $nocache = false ) {\n\t\t$this->data    = $data;\n\t\t$this->nocache = $nocache;\n\n\t\tif ( isset( $data['id'] ) && $data['id'] > 0 ) {\n\t\t\t$this->is_new = false;\n\t\t}\n\t}\n\n\t\/**\n\t * Getter.\n\t *\n\t * @param string $key Key to get.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function __get( $key ) {\n\t\tif ( isset( $this->data[ $key ] ) ) {\n\t\t\treturn $this->data[ $key ];\n\t\t}\n\n\t\treturn $this->$key;\n\t}\n\n\t\/**\n\t * Get item ID.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_id() {\n\t\treturn $this->data['id'];\n\t}\n\n\t\/**\n\t * Set item ID.\n\t *\n\t * @param int $id Item ID.\n\t *\/\n\tpublic function set_id( $id ) {\n\t\t$this->data['id'] = $id;\n\t}\n\n\t\/**\n\t * Set item status.\n\t *\n\t * @param string $status Item status.\n\t *\/\n\tpublic function set_status( $status ) {\n\t\t$this->data['status'] = $status;\n\t}\n\n\t\/**\n\t * Set cache setting.\n\t *\n\t * @param bool $nocache Can save cache or not.\n\t *\/\n\tpublic function set_nocache( $nocache ) {\n\t\t$this->nocache = $nocache;\n\t}\n\n\t\/**\n\t * Is new redirection.\n\t *\n\t * @return int\n\t *\/\n\tpublic function is_new() {\n\t\treturn $this->is_new;\n\t}\n\n\t\/**\n\t * Has sources.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function has_sources() {\n\t\treturn ! empty( $this->data['sources'] ) && is_array( $this->data['sources'] );\n\t}\n\n\t\/**\n\t * Save to database.\n\t *\/\n\tpublic function save() {\n\t\tif ( false === $this->has_sources() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->set_id( DB::update_iff( $this->data ) );\n\n\t\tif ( false === $this->nocache ) {\n\t\t\t$this->save_redirection_cache();\n\t\t}\n\n\t\treturn $this->get_id();\n\t}\n\n\t\/**\n\t * Check a newly added redirection for infinite loop.\n\t *\/\n\tpublic function is_infinite_loop() {\n\t\t$destination = $this->data['url_to'];\n\t\tforeach ( $this->data['sources'] as $source ) {\n\t\t\tif ( 'exact' !== $source['comparison'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$source_url = home_url( $source['pattern'] );\n\t\t\tif ( $destination === $source_url ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Add sources.\n\t *\n\t * @param array $sources Sources to add.\n\t *\/\n\tpublic function add_sources( $sources ) {\n\t\tforeach ( $sources as $key => $value ) {\n\t\t\t$value['comparison'] = empty( $value['comparison'] ) ? 'exact' : $value['comparison'];\n\t\t\t$this->add_source( $value['pattern'], $value['comparison'], ! empty( $value['ignore'] ) ? 'case' : '' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add source.\n\t *\n\t * @param string $pattern    Pattern to add.\n\t * @param string $comparison Comparison for pattern.\n\t * @param string $ignore     Ignore flag.\n\t *\/\n\tpublic function add_source( $pattern, $comparison, $ignore = '' ) {\n\t\t$pattern = trim( $pattern );\n\t\tif ( empty( $pattern ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$pattern = $this->sanitize_source( wp_strip_all_tags( $pattern, true ), $comparison );\n\t\tif ( ! $pattern ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->data['sources'][] = [\n\t\t\t'ignore'     => $ignore,\n\t\t\t'pattern'    => $pattern,\n\t\t\t'comparison' => $comparison,\n\t\t];\n\t}\n\n\t\/**\n\t * Add and sanitize destination URL.\n\t *\n\t * @param string $url URL to process.\n\t *\/\n\tpublic function add_destination( $url ) {\n\t\t$processed = trim( wp_strip_all_tags( $url, true ) );\n\n\t\t\/\/ If beginning looks like a domain but without protocol then let's add home_url().\n\t\tif ( ! empty( $processed ) && Url::is_relative( $processed ) ) {\n\t\t\t$processed = home_url( $processed );\n\t\t}\n\n\t\t$this->data['url_to'] = $processed;\n\t}\n\n\t\/**\n\t * Sanitize source.\n\t *\n\t * @param string $pattern    Pattern to sanitize.\n\t * @param string $comparison Comparison of pattern.\n\t *\n\t * @return string\n\t *\/\n\tprivate function sanitize_source( $pattern, $comparison ) {\n\t\tif ( 'exact' === $comparison ) {\n\t\t\t$pattern = $this->sanitize_source_url( $pattern );\n\t\t\tif ( $pattern && false === $this->nocache ) {\n\t\t\t\t$this->pre_redirection_cache( $pattern );\n\t\t\t}\n\n\t\t\treturn $pattern;\n\t\t} elseif ( 'regex' === $comparison ) {\n\t\t\treturn $this->sanitize_source_regex( $pattern );\n\t\t}\n\n\t\t\/\/ Other comparison types: \"contains\", \"start\", \"end\".\n\t\treturn filter_var( $pattern, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK );\n\t}\n\n\t\/**\n\t * Sanitize redirection source URL.\n\t *\n\t * Following urls converted to URI:\n\t *    '' => false\n\t *    '\/' => false\n\t *    \/URI => URI\n\t *    #URI => #URI\n\t *    https:\/\/website.com\/#URI\/ => #URI\n\t *    https:\/\/website.com#URI\/ => #URI\n\t *    website.com => false\n\t *    www.website.com => false\n\t *    http:\/\/sub.website.com\/URI => false\n\t *    http:\/\/external.com\/URI => false\n\t *    website.com\/URI => URI\n\t *    website.com\/URI\/ => URI\n\t *    http:\/\/website.com\/URI => URI\n\t *    http:\/\/website.com\/URI\/ => URI\n\t *    https:\/\/website.com\/URI => URI\n\t *    https:\/\/website.com\/URI\/ => URI\n\t *    www.website.com\/URI => URI\n\t *    www.website.com\/URI\/ => URI\n\t *    http:\/\/www.website.com\/URI => URI\n\t *    http:\/\/www.website.com\/URI\/ => URI\n\t *    https:\/\/www.website.com\/URI => URI\n\t *    https:\/\/www.website.com\/URI\/ => URI\n\t *\n\t * @param string $url User-input source URL.\n\t *\n\t * @return string|false\n\t *\/\n\tprivate function sanitize_source_url( $url ) {\n\t\tif ( empty( $url ) || '\/' === $url ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( '#' === $url[0] || '\/' === $url[0] ) {\n\t\t\treturn ltrim( $url, '\/' );\n\t\t}\n\n\t\t$original = $url;\n\t\t$domain   = $this->get_home_domain();\n\t\t$url      = trailingslashit( $url );\n\t\t$url      = str_replace( $domain . '#', $domain . '\/#', $url );  \/\/ For website.com#URI link.\n\t\t$domain   = trailingslashit( $domain );\n\t\t$search   = [\n\t\t\t'http:\/\/' . $domain,\n\t\t\t'http:\/\/www.' . $domain,\n\t\t\t'https:\/\/' . $domain,\n\t\t\t'https:\/\/www.' . $domain,\n\t\t\t'www.' . $domain,\n\t\t];\n\t\t$url      = str_replace( $search, '', $url );\n\t\t$url      = preg_replace( '\/^' . preg_quote( $domain, '\/' ) . '\/s', '', $url );\n\n\t\t\/\/ Empty url.\n\t\t\/\/ External domain.\n\t\tif ( empty( $url ) || 0 === strpos( $url, 'http:\/\/' ) || 0 === strpos( $url, 'https:\/\/' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Remove trailing slash if original url doesn't have it.\n\t\tif ( '\/' !== substr( $original, -1 ) ) {\n\t\t\t$url = untrailingslashit( $url );\n\t\t}\n\n\t\treturn urldecode( self::strip_subdirectory( $url ) );\n\t}\n\n\t\/**\n\t * Sanitize redirection source for regex.\n\t *\n\t * @param  string $pattern Pattern to process.\n\t * @return string\n\t *\/\n\tprivate function sanitize_source_regex( $pattern ) {\n\t\t\/\/ No new lines.\n\t\t$pattern = preg_replace( \"\/[\\r\\n\\t].*?$\/s\", '', $pattern );\n\n\t\t\/\/ Clean control codes.\n\t\t$pattern = preg_replace( '\/[^\\PC\\s]\/u', '', $pattern );\n\n\t\t\/\/ Check if it's a valid pattern.\n\t\tif ( @preg_match( '@' . $pattern . '@', '' ) === false ) { \/\/ phpcs:ignore\n\t\t\t\/* translators: source pattern *\/\n\t\t\tHelper::add_notification( sprintf( __( 'Invalid regex pattern: %s', 'rank-math' ), $pattern ), [ 'type' => 'error' ] );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $pattern;\n\t}\n\n\t\/**\n\t * Maybe collect WordPress object to add redirection cache.\n\t *\n\t * @param string $slug Url to search for.\n\t *\/\n\tprivate function pre_redirection_cache( $slug ) {\n\t\tglobal $wpdb;\n\n\t\t\/\/ Check for post.\n\t\t$post_id = url_to_postid( home_url( $slug ) );\n\t\tif ( $post_id ) {\n\t\t\t$this->cache[] = [\n\t\t\t\t'from_url'    => $slug,\n\t\t\t\t'object_id'   => $post_id,\n\t\t\t\t'object_type' => 'post',\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check for term.\n\t\t$terms = DB_Helper::get_results( $wpdb->prepare( \"SELECT term_id FROM $wpdb->terms WHERE slug = %s\", $slug ) );\n\t\tif ( $terms ) {\n\t\t\tforeach ( $terms as $term ) {\n\t\t\t\t$this->cache[] = [\n\t\t\t\t\t'from_url'    => $slug,\n\t\t\t\t\t'object_id'   => $term->term_id,\n\t\t\t\t\t'object_type' => 'term',\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check for user.\n\t\t$user = get_user_by( 'slug', $slug );\n\t\tif ( $user ) {\n\t\t\t$this->cache[] = [\n\t\t\t\t'from_url'    => $slug,\n\t\t\t\t'object_id'   => $user->ID,\n\t\t\t\t'object_type' => 'user',\n\t\t\t];\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Save redirection caches.\n\t *\/\n\tprivate function save_redirection_cache() {\n\t\tif ( ! $this->get_id() || empty( $this->cache ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->cache as $item ) {\n\t\t\t$item['redirection_id'] = $this->get_id();\n\t\t\tCache::add( $item );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the domain, without www. and protocol.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_home_domain() {\n\t\tif ( ! is_null( $this->domain ) ) {\n\t\t\treturn $this->domain;\n\t\t}\n\n\t\t$this->domain = Url::get_host( home_url() );\n\n\t\treturn $this->domain;\n\t}\n\n\t\/**\n\t * Strip home directory when WP is installed in subdirectory.\n\t *\n\t * @param string $url URL to strip from.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function strip_subdirectory( $url ) {\n\t\t$home_dir = ltrim( Helper::get_home_url( '', 'relative' ), '\/' );\n\n\t\treturn $home_dir ? str_replace( trailingslashit( $home_dir ), '', $url ) : $url;\n\t}\n\n\t\/**\n\t * Get the current URI.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_full_uri() {\n\t\t$uri = str_replace( home_url( '\/' ), '', Param::server( 'REQUEST_URI' ) );\n\t\t$uri = urldecode( $uri );\n\t\t$uri = trim( self::strip_subdirectory( $uri ), '\/' );\n\n\t\treturn $uri;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/help-tab-actions.php","ext":"php","size":785,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * On-Screen help tab: Available Actions.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'Hovering over a row in the list will display action links that allow you to manage the item. You can perform the following actions:', 'rank-math' ); ?>\n<\/p>\n<ul>\n\t<li><?php echo wp_kses_post( __( '<strong>Edit<\/strong> redirection details: from\/to URLs and the redirection type.', 'rank-math' ) ); ?><\/li>\n\t<li><?php echo wp_kses_post( __( '<strong>Activate\/Deactivate<\/strong> redirections. Deactivated redirections do not take effect on your site.', 'rank-math' ) ); ?><\/li>\n\t<li><?php echo wp_kses_post( __( '<strong>Delete<\/strong> permanently removes the redirection.', 'rank-math' ) ); ?><\/li>\n<\/ul>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/options.php","ext":"php","size":2041,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Redirections general settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'redirections_debug',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Debug Redirections', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Display the Debug Console instead of being redirected. Administrators only.', 'rank-math' ),\n\t\t'default' => 'off',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'redirections_fallback',\n\t\t'type'    => 'radio',\n\t\t'name'    => esc_html__( 'Fallback Behavior', 'rank-math' ),\n\t\t'desc'    => wp_kses_post( __( 'If nothing similar is found, this behavior will be applied. <strong>Note<\/strong>: If the requested URL ends with <code>\/login<\/code>, <code>\/admin<\/code>, or <code>\/dashboard<\/code>, WordPress will automatically redirect to respective locations within the WordPress admin area.', 'rank-math' ) ),\n\t\t'options' => [\n\t\t\t'default'  => esc_html__( 'Default 404', 'rank-math' ),\n\t\t\t'homepage' => esc_html__( 'Redirect to Homepage', 'rank-math' ),\n\t\t\t'custom'   => esc_html__( 'Custom Redirection', 'rank-math' ),\n\t\t],\n\t\t'default' => 'default',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'redirections_custom_url',\n\t\t'type' => 'text',\n\t\t'name' => esc_html__( 'Custom Url ', 'rank-math' ),\n\t\t'dep'  => [ [ 'redirections_fallback', 'custom' ] ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'redirections_header_code',\n\t\t'type'    => 'select',\n\t\t'name'    => esc_html__( 'Redirection Type', 'rank-math' ),\n\t\t'options' => Helper::choices_redirection_types(),\n\t\t'default' => '301',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'redirections_post_redirect',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Auto Post Redirect', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Extend the functionality of WordPress by creating redirects in our plugin when you change the slug of a post, page, category or a CPT. You can modify the redirection further according to your needs.', 'rank-math' ),\n\t\t'default' => 'off',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/debugging.php","ext":"php","size":2866,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Redirection debugging template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<!DOCTYPE html>\n<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\" <?php language_attributes(); ?>>\n<head>\n\t<title><?php esc_html_e( 'Rank Math SEO Redirection Debugger', 'rank-math' ); ?><\/title>\n\t<meta name=\"viewport\" content=\"width=device-width\"\/>\n\t<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\"\/>\n\n\t<?php $this->do_action( 'redirection\/debugger_head' ); ?>\n<\/head>\n<body>\n\t<div class=\"rank-math-redrection-debug\">\n\t\t<h1><?php esc_html_e( 'Redirection Debugger', 'rank-math' ); ?><\/h1>\n\t\t<p>\n\t\t\t<?php esc_html_e( 'Redirecting from ', 'rank-math' ); ?><code>\/<?php echo esc_html( $this->args['uri'] ); ?><\/code>\n\t\t\t<?php esc_html_e( ' To ', 'rank-math' ); ?><code><a href=\"<?php echo esc_url_raw( $this->args['redirect_to'] ); ?>\"><?php echo esc_url( $this->args['redirect_to'] ); ?><\/a><\/code>\n\t\t<\/p>\n\n\t\t<div class=\"rank-math-redirection-loading-animation\">\n\t\t\t<img src=\"<?php echo esc_url_raw( rank_math()->plugin_url() . 'assets\/admin\/img\/loader.svg' ); ?>\">\n\t\t<\/div>\n\t\t<div class=\"rank-math-redirection-loading-timer\">\n\t\t\t<?php \/* translators: countdown seconds *\/ ?>\n\t\t\t<span class=\"redirection-timer\"><?php printf( esc_html__( 'Redirecting in %s seconds...', 'rank-math' ), '<span id=\"redirection-timer-counter\">5<\/span>' ); ?><\/span><br \/>\n\t\t\t<a href=\"#\" class=\"button button-secondary\" id=\"rank-math-cancel-redirection\"><?php esc_html_e( 'Stop Redirection', 'rank-math' ); ?><\/a>\n\t\t<\/div>\n\t\t<div class=\"rank-math-redirect-debug-continue\" style=\"display: none;\">\n\t\t\t<a href=\"<?php echo esc_url( $this->args['redirect_to'] ); ?>\"><?php esc_html_e( 'Continue redirecting', 'rank-math' ); ?><\/a>\n\t\t<\/div>\n\n\t\t<p>\n\t\t\t<?php $rank_math_redirections_page_url = Helper::get_admin_url( 'redirections' ); ?>\n\t\t\t<?php if ( isset( $this->args['matched']['id'] ) ) : ?>\n\t\t\t\t<a target=\"_blank\" href=\"<?php echo esc_url_raw( $rank_math_redirections_page_url . '&action=edit&redirection=' . absint( $this->args['matched']['id'] ) ); ?>\"><?php esc_html_e( 'Manage This Redirection', 'rank-math' ); ?><\/a> \n\t\t\t\t<?php esc_html_e( 'or', 'rank-math' ); ?>\n\t\t\t<?php endif; ?>\n\t\t\t<a target=\"_blank\" href=\"<?php echo esc_url_raw( $rank_math_redirections_page_url ); ?>\"><?php esc_html_e( 'Manage All Redirections', 'rank-math' ); ?><\/a>\n\t\t<\/p>\n\n\t\t<p class=\"rank-math-redirection-debug-info\">\n\t\t\t<?php echo wp_kses_post( __( '<strong>Note:<\/strong> This interstitial page is displayed only to administrators. Site visitors are redirected without delay.', 'rank-math' ) ); ?>\n\t\t<\/p>\n\n\t\t<?php if ( $this->args['cache'] ) : ?>\n\t\t\t<code><?php esc_html_e( 'Served from cache', 'rank-math' ); ?><\/code>\n\t\t<?php endif; ?>\n\t<\/div>\n\n\t<?php $this->do_action( 'redirection\/debugger_footer' ); ?>\n<\/body>\n<\/html>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/main.php","ext":"php","size":1456,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Redirection main view.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n$redirections = Helper::get_module( 'redirections' )->admin;\n$redirections->table->prepare_items();\n\n$is_new     = (bool) Param::get( 'new' );\n$is_editing = ! empty( Param::get( 'url' ) ) || ! empty( $_GET['urls'] ) || ! empty( $_REQUEST['log'] ) || ! empty( Param::request( 'redirect_uri' ) );\n\n$is_importexport = ! empty( Param::get( 'importexport' ) );\n\n$entries_status = Param::get( 'status' ) ?? 'any';\n\n?>\n<div class=\"wrap rank-math-redirections-wrap\">\n\n\t<h1 class=\"wp-heading-inline\">\n\t\t<?php echo esc_html( get_admin_page_title() ); ?>\n\t\t<?php $redirections->page_title_actions( $is_editing ); ?>\n\t<\/h1>\n\n\t<div class=\"clear\"><\/div>\n\n\t<div id=\"rank-math-redirections-form\"><\/div>\n\n\t<div class=\"rank-math-redirections-form rank-math-importexport-form<?php echo $is_importexport ? ' is-open' : ''; ?>\">\n\n\t\t<?php $redirections->import_export->display_form(); ?>\n\n\t<\/div>\n\n\t<form method=\"get\">\n\t\t<input type=\"hidden\" name=\"page\" value=\"rank-math-redirections\">\n\t\t<input type=\"hidden\" name=\"status\" value=\"<?php echo esc_attr( $entries_status ); ?>\">\n\t\t<?php $redirections->table->search_box( esc_html__( 'Search', 'rank-math' ), 's' ); ?>\n\t<\/form>\n\n\t<form method=\"post\">\n\t<?php\n\t\t$redirections->table->views();\n\t\t$redirections->table->display();\n\t?>\n\t<\/form>\n\n<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/help-tab-bulk.php","ext":"php","size":300,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * On-Screen help tab: Bulk Actions.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'You can also activate, deactivate, or delete multiple items at once using the Bulk Actions dropdown.', 'rank-math' ); ?>\n<\/p>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/help-tab-overview.php","ext":"php","size":1057,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * On-Screen help tab: Overview.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'Here you can set up custom redirections. It is important to choose the right type of redirection.', 'rank-math' ); ?>\n<\/p>\n<ul>\n\t<li><?php echo wp_kses_post( __( '301 redirections are <em>permanent<\/em>. The old URL will be removed in search engines and replaced by the new one, passing on SearchRank and other SEO scores. Browsers may also store the new URL in cache and redirect to it even after the redirection is deleted from the list here.', 'rank-math' ) ); ?><\/li>\n\t<li><?php echo wp_kses_post( __( 'Using a 302 <em>temporary<\/em> redirection is useful when you want to test a new page for client feedback temporarily without affecting the SEO scores of the original page.', 'rank-math' ) ); ?><\/li>\n\t<li><?php echo wp_kses_post( __( 'Redirections can be exported to your .htaccess file for faster redirections, in SEO > Settings > Import\/Export.', 'rank-math' ) ); ?><\/li>\n<\/ul>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/views\/help-tab-screen-content.php","ext":"php","size":732,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * On-Screen help tab: Screen Content.\n *\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<p>\n\t<?php esc_html_e( 'You can customize the display of this screen\\'s contents in a number of ways:', 'rank-math' ); ?>\n<\/p>\n<ul>\n\t<li><?php esc_html_e( 'You can hide\/display columns based on your needs.', 'rank-math' ); ?><\/li>\n\t<li><?php esc_html_e( 'You can decide how many items to list per screen using the Screen Options tab.', 'rank-math' ); ?><\/li>\n\t<li><?php esc_html_e( 'You can search items using the search form at the top.', 'rank-math' ); ?><\/li>\n\t<li><?php esc_html_e( 'You can reorder the list by clicking on the column headings. ', 'rank-math' ); ?><\/li>\n<\/ul>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-debugger.php","ext":"php","size":3738,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirection debugger.\n *\n * @since      1.0.92\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Debugger class.\n *\/\nclass Debugger {\n\n\tuse Hooker;\n\n\t\/**\n\t * Redirector variables.\n\t *\n\t * @var array\n\t *\/\n\tprivate $args = [];\n\n\t\/**\n\t * Constructor.\n\t *\n\t * @param array $args Redirector variables.\n\t *\/\n\tpublic function __construct( $args ) {\n\t\t$this->args = $args;\n\t\t$this->filter( 'user_has_cap', 'filter_user_has_cap' );\n\t\t$this->action( 'rank_math\/redirection\/debugger_head', 'inline_styles' );\n\t\t$this->action( 'rank_math\/redirection\/debugger_footer', 'inline_scripts' );\n\n\t\t$this->debugger_headers();\n\n\t\tinclude_once __DIR__ . '\/views\/debugging.php';\n\t\texit;\n\t}\n\n\t\/**\n\t * Output CSS for the debugger page.\n\t *\/\n\tpublic function inline_styles() {\n\t\t?>\n\t\t<style type=\"text\/css\">\n\t\t\ta {\n\t\t\t\tcolor: #3a3aea;\n\t\t\t\ttext-decoration: none;\n\t\t\t}\n\t\t\t.rank-math-redrection-debug {\n\t\t\t\twidth: 540px;\n\t\t\t\tmargin: 0 auto;\n\t\t\t\tpadding: 14px 16px;\n\t\t\t\tmargin-top: 20px;\n\t\t\t\tborder: 2px solid #f8dd91;\n\t\t\t\tbackground: #fef7e6;\n\t\t\t\tcolor: #343434;\n\t\t\t\tfont-family: Arial;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t.rank-math-redirection-loading-animation {\n\t\t\t\tmargin-bottom: 8px;\n\t\t\t}\n\n\t\t\t.rank-math-redirection-loading-timer {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin-top: 0;\n\t\t\t\tvertical-align: 12px;\n\t\t\t\tmargin-left: 14px;\n\t\t\t}\n\t\t\t.redirection-timer {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmargin: 6px 10px 0 0;\n\t\t\t}\n\t\t\tcode {\n\t\t\t\tfont-family: Consolas, Monaco, monospace;\n\t\t\t\tunicode-bidi: embed;\n\t\t\t\tpadding: 3px 5px 2px 5px;\n\t\t\t\tmargin: 0 1px;\n\t\t\t\tbackground-color: #f7f7f9;\n\t\t\t\tborder: 1px solid #e1e1e8;\n\t\t\t\tfont-size: 13px;\n\t\t\t\tcolor: #d72b3f;\n\t\t\t}\n\n\t\t\tcode a {\n\t\t\t\tcolor: #d72b3f;\n\t\t\t}\n\t\t\t.rank-math-redirection-debug-info {\n\t\t\t\tfont-size: 13px;\n\t\t\t\tfont-style: italic;\n\t\t\t\tfont-family: Consolas, Monaco, monospace;\n\t\t\t\tcolor: #000;\n\t\t\t}\n\t\t<\/style>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output JS for the debugger page.\n\t *\/\n\tpublic function inline_scripts() {\n\t\t?>\n\t\t<script>\n\t\t\tvar redirectTimer = 5,\n\t\t\t\tstopRedirection = false;\n\n\t\t\tvar updateTimer = function() {\n\t\t\t\tif ( stopRedirection ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tredirectTimer--;\n\t\t\t\tif ( redirectTimer > 1) {\n\t\t\t\t\tdocument.getElementById( 'redirection-timer-counter' ).textContent = redirectTimer;\n\t\t\t\t\tsetTimeout( updateTimer, 1000 );\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById( 'redirection-timer-counter' ).textContent = redirectTimer;\n\t\t\t\t\twindow.location.href = '<?php echo esc_url_raw( $this->args['redirect_to'] ); ?>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar cancelRedirection = function() {\n\t\t\t\tstopRedirection = true;\n\t\t\t\tdocument.querySelector('.rank-math-redirection-loading-animation').style.display = 'none';\n\t\t\t\tdocument.querySelector('.rank-math-redirection-loading-timer').style.display = 'none';\n\n\t\t\t\tdocument.querySelector('.rank-math-redirect-debug-continue').style.display = 'block';\n\t\t\t}\n\n\t\t\tsetTimeout( updateTimer, 1000 );\n\n\t\t\tdocument.getElementById( 'rank-math-cancel-redirection' ).addEventListener( 'click', function( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tcancelRedirection();\n\t\t\t} );\n\n\t\t\tdocument.addEventListener( 'keyup', function( event ) {\n\t\t\t\tif ( 27 === event.keyCode ) {\n\t\t\t\t\tcancelRedirection();\n\t\t\t\t}\n\t\t\t} );\n\t\t<\/script>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Send headers for the debugger page.\n\t *\/\n\tprivate function debugger_headers() {\n\t\t$headers = [];\n\n\t\t$protocol  = wp_get_server_protocol();\n\t\t$headers[] = \"$protocol 200 OK\";\n\t\t$headers[] = 'Content-Type: text\/html; charset=UTF-8';\n\n\t\t$headers = $this->do_filter( 'redirection\/debugger_headers', $headers );\n\n\t\tforeach ( $headers as $header ) {\n\t\t\theader( $header );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-db.php","ext":"php","size":12996,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirection module database operations.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * DB class.\n *\/\nclass DB {\n\n\t\/**\n\t * Get query builder object.\n\t *\n\t * @return Query_Builder\n\t *\/\n\tprivate static function table() {\n\t\treturn Database::table( 'rank_math_redirections' );\n\t}\n\n\t\/**\n\t * Get counts of records grouped by active and inactive.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_counts() {\n\t\tstatic $redirction_counts;\n\t\tif ( ! is_null( $redirction_counts ) ) {\n\t\t\treturn $redirction_counts;\n\t\t}\n\n\t\t$redirction_counts = self::table()\n\t\t\t->selectSum( \"status = 'active'\", 'active' )\n\t\t\t->selectSum( \"status = 'inactive'\", 'inactive' )\n\t\t\t->selectSum( \"status = 'trashed'\", 'trashed' )\n\t\t\t->one( ARRAY_A );\n\n\t\t$redirction_counts = array_map(\n\t\t\tfunction ( $value ) {\n\t\t\t\treturn $value ? $value : 0;\n\t\t\t},\n\t\t\t$redirction_counts\n\t\t);\n\n\t\t$redirction_counts['all'] = $redirction_counts['active'] + $redirction_counts['inactive'];\n\n\t\treturn $redirction_counts;\n\t}\n\n\t\/**\n\t * Get redirections.\n\t *\n\t * @param array $args Array of filters apply to query.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_redirections( $args = [] ) {\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'orderby' => 'id',\n\t\t\t\t'order'   => 'DESC',\n\t\t\t\t'limit'   => 10,\n\t\t\t\t'paged'   => 1,\n\t\t\t\t'search'  => '',\n\t\t\t\t'status'  => 'any',\n\t\t\t]\n\t\t);\n\n\t\t$status = self::is_valid_status( $args['status'] ) ? [ $args['status'], null ] : [ '!=', 'trashed' ];\n\n\t\t$table = self::table()\n\t\t\t->found_rows()\n\t\t\t->page( $args['paged'] - 1, $args['limit'] )\n\t\t\t->where( 'status', $status[0], $status[1] );\n\n\t\tif ( ! empty( $args['search'] ) ) {\n\t\t\t$table->whereLike( 'sources', $args['search'] );\n\t\t\t$table->orWhereLike( 'url_to', $args['search'] );\n\t\t\t$table->where( 'status', $status[0], $status[1] );\n\t\t}\n\n\t\tif ( ! empty( $args['orderby'] ) && in_array( $args['orderby'], [ 'id', 'url_to', 'header_code', 'hits', 'created', 'last_accessed' ], true ) ) {\n\t\t\t$table->orderBy( $args['orderby'], $args['order'] );\n\t\t}\n\n\t\tdo_action_ref_array( 'rank_math\/redirection\/get_redirections_query', [ &$table, $args ] );\n\n\t\t$redirections = $table->get( ARRAY_A );\n\t\t$count        = $table->get_found_rows();\n\n\t\treturn compact( 'redirections', 'count' );\n\t}\n\n\t\/**\n\t * Match redirections for URI.\n\t *\n\t * @param string $uri Current URI to match.\n\t * @param bool   $all Get All.\n\t *\n\t * @return object\n\t *\/\n\tpublic static function match_redirections( $uri, $all = false ) {\n\t\tif ( empty( $uri ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ If nothing found than go for all.\n\t\tif ( $all ) {\n\t\t\t$redirections = self::table()\n\t\t\t\t->where( 'status', 'active' )\n\t\t\t\t->orderby( 'updated', 'desc' )\n\t\t\t\t->get( ARRAY_A );\n\n\t\t\treturn self::compare_redirections( $redirections, $uri );\n\t\t}\n\n\t\t$table = self::table()->where( 'status', 'active' )->orderby( 'updated', 'desc' );\n\n\t\t\/\/ Generate words.\n\t\t$words = str_replace( '\/', '-', $uri );\n\t\t$words = str_replace( '.', '-', $words );\n\t\t$words = explode( '-', $words );\n\n\t\t\/\/ Generate where clause.\n\t\t$where  = [];\n\t\t$source = maybe_serialize(\n\t\t\t[\n\t\t\t\t'pattern'    => $uri,\n\t\t\t\t'comparison' => 'exact',\n\t\t\t]\n\t\t);\n\n\t\t$where[] = [ 'sources', 'like', $table->esc_like( $source ) ];\n\t\tforeach ( $words as $word ) {\n\t\t\t$where[] = [ 'sources', 'like', $table->esc_like( $word ) ];\n\t\t}\n\n\t\t$redirections = $table->where( $where, 'or' )->get( ARRAY_A );\n\t\t$redirection  = self::compare_redirections( $redirections, $uri );\n\t\tif ( false === $redirection ) {\n\t\t\treturn self::match_redirections( $uri, true );\n\t\t}\n\n\t\treturn $redirection;\n\t}\n\n\t\/**\n\t * Compare given redirections.\n\t *\n\t * @param array  $redirections Array of redirection matched.\n\t * @param string $uri          URI to compare with.\n\t *\n\t * @return array|bool\n\t *\/\n\tprivate static function compare_redirections( $redirections, $uri ) {\n\t\tforeach ( $redirections as $redirection ) {\n\t\t\t$redirection['sources'] = maybe_unserialize( $redirection['sources'] );\n\t\t\tif ( ! empty( $redirection['sources'] ) && self::compare_sources( $redirection['sources'], $uri ) ) {\n\t\t\t\treturn $redirection;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Compare sources.\n\t *\n\t * @param array  $sources Array of sources.\n\t * @param string $uri     URI to compare with.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function compare_sources( $sources, $uri ) {\n\t\tif ( ! is_array( $sources ) || empty( $sources ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( $sources as $source ) {\n\t\t\t$compare_uri = $uri;\n\t\t\t$comparison  = $source['comparison'];\n\t\t\tif ( 'exact' === $comparison ) {\n\t\t\t\t$compare_uri = untrailingslashit( $compare_uri );\n\t\t\t}\n\n\t\t\tif ( in_array( $comparison, [ 'contains', 'start', 'end' ], true ) ) {\n\t\t\t\t$source['pattern'] = untrailingslashit( $source['pattern'] );\n\t\t\t}\n\n\t\t\tif ( 'exact' === $comparison && isset( $source['ignore'] ) && 'case' === $source['ignore'] && strtolower( $source['pattern'] ) === strtolower( $compare_uri ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( Str::comparison( self::get_clean_pattern( $source['pattern'], $comparison ), $compare_uri, $comparison ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Match redirections for a source.\n\t *\n\t * @param string $source Current source to match.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function match_redirections_source( $source ) {\n\t\tif ( empty( $source ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$table = self::table();\n\n\t\treturn $table->found_rows()\n\t\t\t->where( 'status', 'active' )\n\t\t\t->whereLike( 'sources', $source )\n\t\t\t->orderby( 'updated', 'desc' )\n\t\t\t->page( 0, 1 )\n\t\t\t->get( ARRAY_A );\n\t}\n\n\t\/**\n\t * Get clean pattern for testing.\n\t *\n\t * @param string $pattern    Pattern to clean.\n\t * @param string $comparison Comparison type.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_clean_pattern( $pattern, $comparison ) {\n\t\tif ( 'exact' === $comparison ) {\n\t\t\t$pattern = trim( $pattern, '\/' );\n\t\t}\n\n\t\t$cleaned = 'regex' === $comparison ? ( '@' . stripslashes( $pattern ) . '@' ) : $pattern;\n\n\t\treturn apply_filters( 'rank_math\/redirection\/get_clean_pattern', $cleaned, $pattern, $comparison );\n\t}\n\n\t\/**\n\t *  Get source by ID.\n\t *\n\t * @param int    $id     ID of the record to search for.\n\t * @param string $status Status to filter with.\n\t *\n\t * @return bool|array\n\t *\/\n\tpublic static function get_redirection_by_id( $id, $status = 'all' ) {\n\t\t$fields = [\n\t\t\t[ 'id', '=', $id ],\n\t\t];\n\n\t\tif ( 'all' !== $status ) {\n\t\t\t$fields[] = [ 'status', '=', $status ];\n\t\t}\n\n\t\treturn self::get_redirection_by( $fields );\n\t}\n\n\t\/**\n\t *  Get redirection\n\t *\n\t * @param array $data Redirection data.\n\t *\n\t * @return bool|array\n\t *\/\n\tpublic static function get_redirection( $data ) {\n\t\t$args = [];\n\t\tif ( isset( $data['destination'] ) ) {\n\t\t\t$args[] = [ 'url_to', '=', $data['destination'] ];\n\t\t}\n\n\t\tif ( isset( $data['type'] ) ) {\n\t\t\t$args[] = [ 'header_code', '=', $data['type'] ];\n\t\t}\n\n\t\tif ( isset( $data['status'] ) ) {\n\t\t\t$args[] = [ 'status', '=', $data['status'] ];\n\t\t}\n\n\t\tif ( empty( $args ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Exist by destination.\n\t\t$exist = self::get_redirection_by( $args );\n\n\t\tif ( $exist ) {\n\t\t\treturn $exist;\n\t\t}\n\n\t\t\/\/ Exist by ID.\n\t\tif ( ! empty( $data['id'] ) ) {\n\t\t\treturn self::get_redirection_by_id( $data['id'] );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t *  Get source by.\n\t *\n\t * @param array $data Redirection fields.\n\t *\n\t * @return bool|array\n\t *\/\n\tpublic static function get_redirection_by( $data = [] ) {\n\t\t$table = self::table()->where( $data );\n\n\t\t$item = $table->one( ARRAY_A );\n\t\tif ( ! isset( $item['sources'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$item['sources'] = self::get_sources( maybe_unserialize( $item['sources'] ) );\n\t\treturn $item;\n\t}\n\n\t\/**\n\t * Get stats for dashboard widget.\n\t *\n\t * @return object\n\t *\/\n\tpublic static function get_stats() {\n\t\treturn self::table()->selectCount( '*', 'total' )->selectSum( 'hits', 'hits' )->one();\n\t}\n\n\t\/**\n\t * Add a new record.\n\t *\n\t * @param array $args Values to insert.\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function add( $args = [] ) {\n\t\tif ( empty( $args ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( array_key_exists( 'id', $args ) ) {\n\t\t\tunset( $args['id'] );\n\t\t}\n\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'sources'     => '',\n\t\t\t\t'url_to'      => '',\n\t\t\t\t'header_code' => '301',\n\t\t\t\t'hits'        => '0',\n\t\t\t\t'status'      => 'active',\n\t\t\t\t'created'     => current_time( 'mysql' ),\n\t\t\t\t'updated'     => current_time( 'mysql' ),\n\t\t\t]\n\t\t);\n\n\t\tif ( in_array( $args['header_code'], [ 410, 451 ], true ) ) {\n\t\t\t$args['url_to'] = '';\n\t\t}\n\n\t\t$args['sources'] = maybe_serialize( $args['sources'] );\n\n\t\treturn self::table()->insert( $args, [ '%s', '%s', '%d', '%d', '%s', '%s', '%s' ] );\n\t}\n\n\t\/**\n\t * Update a record.\n\t *\n\t * @param array $args Values to update.\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function update( $args = [] ) {\n\t\tif ( empty( $args ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'id'          => '',\n\t\t\t\t'sources'     => '',\n\t\t\t\t'url_to'      => '',\n\t\t\t\t'header_code' => '301',\n\t\t\t\t'status'      => 'active',\n\t\t\t\t'updated'     => current_time( 'mysql' ),\n\t\t\t]\n\t\t);\n\n\t\t$id = absint( $args['id'] );\n\t\tif ( 0 === $id ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$args['sources'] = maybe_serialize( $args['sources'] );\n\t\tunset( $args['id'] );\n\n\t\tif ( in_array( $args['header_code'], [ 410, 451 ], true ) ) {\n\t\t\t$args['url_to'] = '';\n\t\t}\n\n\t\tCache::purge( $id );\n\t\treturn self::table()->set( $args )->where( 'id', $id )->update();\n\t}\n\n\t\/**\n\t * Add or Update record.\n\t *\n\t * @param array $redirection Single redirection item.\n\t *\n\t * @return int\n\t *\/\n\tpublic static function update_iff( $redirection ) {\n\t\t\/\/ Update record.\n\t\tif ( isset( $redirection['id'] ) && ! empty( $redirection['id'] ) ) {\n\t\t\tself::update( $redirection );\n\t\t\treturn $redirection['id'];\n\t\t}\n\n\t\t$existing_redirection = self::match_redirections_source( maybe_serialize( $redirection['sources'] ) );\n\t\tif ( ! empty( $existing_redirection ) && isset( $existing_redirection[0]['id'] ) ) {\n\t\t\t$redirection['id'] = $existing_redirection[0]['id'];\n\t\t\tself::update( $redirection );\n\t\t\treturn $redirection['id'];\n\t\t}\n\n\t\t\/\/ Add record.\n\t\treturn self::add( $redirection );\n\t}\n\n\t\/**\n\t * Update counter for redirection.\n\t *\n\t * @param object $redirection Record to update.\n\t *\n\t * @return int|false The number of rows updated, or false on error.\n\t *\/\n\tpublic static function update_access( $redirection = false ) {\n\t\tif ( empty( $redirection ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$args['hits']          = absint( $redirection['hits'] ) + 1;\n\t\t$args['last_accessed'] = current_time( 'mysql' );\n\n\t\treturn self::table()->set( $args )->where( 'id', $redirection['id'] )->update();\n\t}\n\n\t\/**\n\t * Delete multiple records.\n\t *\n\t * @param array $ids Array of ids to delete.\n\t *\n\t * @return int Number of records deleted.\n\t *\/\n\tpublic static function delete( $ids ) {\n\t\tCache::purge( $ids );\n\t\t$deleted = self::table()->whereIn( 'id', (array) $ids )->delete();\n\n\t\t\/**\n\t\t * Fires after deleting redirections.\n\t\t *\/\n\t\tdo_action( 'rank_math\/redirection\/deleted', $ids, $deleted );\n\n\t\treturn $deleted;\n\t}\n\n\t\/**\n\t * Change record status to active or inactive.\n\t *\n\t * @param array $ids     Array of ids.\n\t * @param bool  $status Active=1, Inactive=0.\n\t *\n\t * @return int Number of records updated.\n\t *\/\n\tpublic static function change_status( $ids, $status ) {\n\t\tif ( ! self::is_valid_status( $status ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn self::table()->set( 'status', $status )\n\t\t\t->set( 'updated', current_time( 'mysql' ) )\n\t\t\t->whereIn( 'id', (array) $ids )->update();\n\t}\n\n\t\/**\n\t * Clean trashed redirects after 30 days.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function periodic_clean_trash() {\n\t\t$ids = self::table()->select( 'id' )->where( 'status', 'trashed' )->where( 'updated', '<=', date_i18n( 'Y-m-d', strtotime( '30 days ago' ) ) )->get( ARRAY_A );\n\t\tif ( empty( $ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tself::delete( wp_list_pluck( $ids, 'id' ) );\n\t}\n\n\t\/**\n\t * Delete all trashed redirections and associated sources.\n\t *\n\t * @return int Number of records deleted.\n\t *\/\n\tpublic static function clear_trashed() {\n\t\t$ids = self::table()->select( 'id' )->where( 'status', 'trashed' )->get();\n\t\tif ( empty( $ids ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn self::delete( wp_list_pluck( $ids, 'id' ) );\n\t}\n\n\t\/**\n\t * Check if status is valid.\n\t *\n\t * @param string $status Status to validate.\n\t *\n\t * @return bool\n\t *\/\n\tprivate static function is_valid_status( $status ) {\n\t\t$allowed = [ 'active', 'inactive', 'trashed' ];\n\t\treturn in_array( $status, $allowed, true );\n\t}\n\n\t\/**\n\t * Get redirection source.\n\t *\n\t * @param array $sources Unserialized sources.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_sources( $sources ) {\n\t\tif ( ! is_array( $sources ) || empty( $sources ) ) {\n\t\t\treturn $sources;\n\t\t}\n\n\t\tforeach ( $sources as $key => $source ) {\n\t\t\t$sources[ $key ]['pattern'] = wp_specialchars_decode( $source['pattern'] );\n\t\t}\n\n\t\treturn $sources;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/redirections\/class-redirector.php","ext":"php","size":10040,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Redirector.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Redirections\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Redirections;\n\nuse WP_Query;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Redirector class.\n *\/\nclass Redirector {\n\n\tuse Hooker;\n\n\t\/**\n\t * Matched redirection.\n\t *\n\t * @var array\n\t *\/\n\tprivate $matched = false;\n\n\t\/**\n\t * Redirect to this URL.\n\t *\n\t * @var string\n\t *\/\n\tprivate $redirect_to;\n\n\t\/**\n\t * Current request URI.\n\t *\n\t * @var string\n\t *\/\n\tprivate $uri = '';\n\n\t\/**\n\t * Current request uri with querystring.\n\t *\n\t * @var string\n\t *\/\n\tprivate $full_uri = '';\n\n\t\/**\n\t * Current query string.\n\t *\n\t * @var string\n\t *\/\n\tprivate $query_string = '';\n\n\t\/**\n\t * From cache.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $cache = false;\n\n\t\/**\n\t * Sets the error template to include.\n\t *\n\t * @var string\n\t *\/\n\tprotected $template_file_path;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->start();\n\t\t$this->flow();\n\t\t$this->redirect();\n\t}\n\n\t\/**\n\t * Set the required values.\n\t *\/\n\tprivate function start() {\n\t\t\/\/ Complete request uri.\n\t\t$this->full_uri = Redirection::get_full_uri();\n\n\t\t\/\/ Remove query string.\n\t\t$this->uri = explode( '?', $this->full_uri );\n\t\tif ( isset( $this->uri[1] ) ) {\n\t\t\t$this->query_string = $this->uri[1];\n\t\t}\n\t\t$this->uri = trim( $this->uri[0], '\/' );\n\n\t\tif ( $this->is_amp_endpoint() ) {\n\t\t\t$this->uri = \\str_replace( '\/' . amp_get_slug(), '', $this->uri );\n\t\t}\n\t}\n\n\t\/**\n\t * Run the system flow.\n\t *\/\n\tprivate function flow() {\n\t\t$flow = [ 'pre_filter', 'from_cache', 'everything', 'fallback' ];\n\t\tforeach ( $flow as $func ) {\n\t\t\tif ( false !== $this->matched ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->$func();\n\t\t}\n\t}\n\n\t\/**\n\t * If we got a match, redirect.\n\t *\/\n\tprivate function redirect() {\n\t\tif ( false === $this->matched ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isset( $this->matched['id'], $this->matched['url_to'] ) ) {\n\t\t\tDB::update_access( $this->matched );\n\t\t}\n\n\t\t$header_code = $this->get_header_code();\n\t\tif ( in_array( $header_code, [ 410, 451 ], true ) ) {\n\t\t\t$this->redirect_without_target( $header_code );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->do_debugging();\n\n\t\tif ( true === $this->do_filter( 'redirection\/add_query_string', true, $this->matched ) && Str::is_non_empty( $this->query_string ) ) {\n\t\t\t$this->redirect_to .= '?' . $this->query_string;\n\t\t}\n\n\t\tif ( wp_redirect( esc_url_raw( $this->redirect_to ), $header_code, $this->get_redirect_header() ) ) { \/\/ phpcs:ignore\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Handles the redirects without a target by setting the needed hooks.\n\t *\n\t * @param string $header_code The type of the redirect.\n\t *\n\t * @return void\n\t *\/\n\tprivate function redirect_without_target( $header_code ) {\n\t\t$has_include_hook = $this->set_template_include_hook( $header_code );\n\t\tif ( ! $has_include_hook ) {\n\t\t\t$this->set_404();\n\t\t}\n\n\t\tif ( 410 === $header_code ) {\n\t\t\tstatus_header( 410 );\n\t\t}\n\n\t\tif ( 451 === $header_code ) {\n\t\t\tstatus_header( 451, 'Unavailable For Legal Reasons' );\n\t\t}\n\t}\n\n\t\/**\n\t * Sets the hook for setting the template include. This is the file that we want to show.\n\t *\n\t * @param string $template The template to look for.\n\t *\n\t * @return bool True when template should be included.\n\t *\/\n\tprotected function set_template_include_hook( $template ) {\n\t\t$this->template_file_path = get_query_template( $template );\n\t\tif ( ! empty( $this->template_file_path ) ) {\n\t\t\t$this->filter( 'template_include', 'set_template_include' );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Returns the template that should be included.\n\t *\n\t * @param string $template The template that will included before executing hook.\n\t *\n\t * @return string Returns the template that should be included.\n\t *\/\n\tpublic function set_template_include( $template ) {\n\t\tif ( ! empty( $this->template_file_path ) ) {\n\t\t\treturn $this->template_file_path;\n\t\t}\n\n\t\treturn $template;\n\t}\n\n\t\/**\n\t * Pre filter\n\t *\/\n\tprivate function pre_filter() {\n\t\t$pre = $this->do_filter(\n\t\t\t'redirection\/pre_search',\n\t\t\tnull,\n\t\t\t$this->uri,\n\t\t\t$this->full_uri\n\t\t);\n\n\t\tif ( null === $pre || ! is_array( $pre ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->matched     = $pre;\n\t\t$this->redirect_to = $pre['url_to'];\n\t}\n\n\t\/**\n\t * Search from cache.\n\t *\/\n\tprivate function from_cache() {\n\t\t$redirections = Cache::get_by_object_id_or_url( (int) get_queried_object_id(), $this->get_current_object_type(), $this->uri );\n\t\tforeach ( $redirections as $redirection ) {\n\t\t\tif ( empty( $redirection->object_id ) ) {\n\t\t\t\t$this->cache = true;\n\t\t\t\t$this->set_redirection( $redirection->redirection_id );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( trim( $redirection->from_url, '\/' ) === $this->uri ) {\n\t\t\t\t$this->cache = true;\n\t\t\t\t$this->set_redirection( $redirection->redirection_id );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Search for everything rules.\n\t *\/\n\tprivate function everything() {\n\t\t$redirection = DB::match_redirections( $this->uri );\n\t\tif ( ! $redirection && $this->uri !== $this->full_uri ) {\n\t\t\t$redirection = DB::match_redirections( $this->full_uri );\n\t\t}\n\n\t\tif ( $redirection ) {\n\t\t\tCache::add(\n\t\t\t\t[\n\t\t\t\t\t'from_url'       => $this->uri,\n\t\t\t\t\t'redirection_id' => $redirection['id'],\n\t\t\t\t\t'object_id'      => 0,\n\t\t\t\t\t'object_type'    => 'any',\n\t\t\t\t\t'is_redirected'  => '1',\n\t\t\t\t]\n\t\t\t);\n\t\t\t$this->set_redirection( $redirection );\n\t\t}\n\t}\n\n\t\/**\n\t * Do the fallback strategy here.\n\t *\/\n\tprivate function fallback() {\n\t\tif ( ! $this->can_run_fallback() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$behavior = Helper::get_settings( 'general.redirections_fallback' );\n\t\tif ( 'default' === $behavior ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'homepage' === $behavior ) {\n\t\t\t$this->matched     = [];\n\t\t\t$this->redirect_to = home_url();\n\t\t\treturn;\n\t\t}\n\n\t\t$custom_url = Helper::get_settings( 'general.redirections_custom_url' );\n\t\tif ( ! empty( $custom_url ) ) {\n\t\t\t$this->matched     = [];\n\t\t\t$this->redirect_to = $custom_url;\n\t\t}\n\t}\n\n\t\/**\n\t * Show debugging interstitial if enabled.\n\t *\/\n\tprivate function do_debugging() {\n\t\tif ( ! Helper::get_settings( 'general.redirections_debug' ) || ! Helper::has_cap( 'redirections' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnew Debugger( get_object_vars( $this ) );\n\t}\n\n\t\/**\n\t * Set redirection by ID.\n\t *\n\t * @param integer $redirection Redirection ID to set for.\n\t *\/\n\tprivate function set_redirection( $redirection ) {\n\t\tif ( ! is_array( $redirection ) ) {\n\t\t\t$redirection = DB::get_redirection_by_id( $redirection, 'active' );\n\t\t}\n\n\t\t$custom_match = $this->do_filter( 'redirection\/redirection_match', false, $redirection );\n\t\tif ( false === $redirection || ( ! DB::compare_sources( $redirection['sources'], $this->uri ) && ! $custom_match ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isset( $redirection['url_to'] ) ) {\n\t\t\t$this->matched = $redirection;\n\t\t\t$this->set_redirect_to();\n\t\t}\n\n\t\tif ( $this->is_amp_endpoint() ) {\n\t\t\t$this->redirect_to = $this->redirect_to . amp_get_slug() . '\/';\n\t\t}\n\t}\n\n\t\/**\n\t * Set redirect to.\n\t *\/\n\tprivate function set_redirect_to() {\n\t\t$this->redirect_to = $this->matched['url_to'];\n\t\tforeach ( $this->matched['sources'] as $source ) {\n\t\t\t$this->set_redirect_to_regex( $source );\n\t\t}\n\t}\n\n\t\/**\n\t * Set redirect to by replacing using regex.\n\t *\n\t * @param array $source Source to check.\n\t *\/\n\tprivate function set_redirect_to_regex( $source ) {\n\t\tif ( 'regex' !== $source['comparison'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$pattern = DB::get_clean_pattern( $source['pattern'], $source['comparison'] );\n\t\tif ( Str::comparison( $pattern, $this->uri, $source['comparison'] ) ) {\n\t\t\t$this->redirect_to = preg_replace( $pattern, $this->redirect_to, $this->uri );\n\t\t}\n\t}\n\n\t\/**\n\t * Sets the wp_query to 404 when this is an object.\n\t *\/\n\tprivate function set_404() {\n\t\tglobal $wp_query;\n\n\t\t$wp_query         = is_object( $wp_query ) ? $wp_query : new WP_Query();\n\t\t$wp_query->is_404 = true;\n\t}\n\n\t\/**\n\t * Get the object type for the current page.\n\t *\n\t * @return string object type name.\n\t *\/\n\tprivate function get_current_object_type() {\n\t\t$hash   = [\n\t\t\t'WP_Post' => 'post',\n\t\t\t'WP_Term' => 'term',\n\t\t\t'WP_User' => 'user',\n\t\t];\n\t\t$object = get_queried_object();\n\t\tif ( ! $object ) {\n\t\t\treturn 'none';\n\t\t}\n\n\t\t$object = get_class( $object );\n\t\treturn isset( $hash[ $object ] ) ? $hash[ $object ] : 'none';\n\t}\n\n\t\/**\n\t * Get header code.\n\t *    1. From matched redirection.\n\t *    2. From optgeneral options.\n\t *\n\t * @return int\n\t *\/\n\tprivate function get_header_code() {\n\t\t$header_code = isset( $this->matched['header_code'] ) ? $this->matched['header_code'] : Helper::get_settings( 'general.redirections_header_code' );\n\t\treturn absint( $header_code );\n\t}\n\n\t\/**\n\t * Get redirect header.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_redirect_header() {\n\t\treturn true === $this->do_filter( 'redirection\/add_redirect_header', true ) ? 'Rank Math' : 'WordPress';\n\t}\n\n\t\/**\n\t * Is AMP url.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_amp_endpoint() {\n\t\treturn \\function_exists( 'is_amp_endpoint' ) && \\function_exists( 'amp_is_canonical' ) && is_amp_endpoint() && ! amp_is_canonical();\n\t}\n\n\t\/**\n\t * Gets the post id for the redirections' fallback.\n\t *\n\t * @return int|void\n\t *\/\n\tprivate static function get_redirections_fallback_post_id() {\n\t\t$fall_back = Helper::get_settings( 'general.redirections_fallback' );\n\n\t\tif ( in_array( $fall_back, [ 'default', 'homepage' ], true ) ) {\n\t\t\treturn (int) get_option( 'page_on_front' );\n\t\t}\n\n\t\tif ( Helper::get_settings( 'general.redirections_custom_url' ) ) {\n\t\t\treturn url_to_postid( Helper::get_settings( 'general.redirections_custom_url' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Check if the fall_back redirect can run in the current contexts.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function can_run_fallback() {\n\t\tif ( ! is_404() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! $this->uri && $this->query_string && Str::starts_with( 'p=', trim( $this->query_string ) ) ) {\n\t\t\t$this->query_string = '';\n\t\t\treturn true;\n\t\t}\n\n\t\t$wp_redirect_admin_locations = $this->do_filter( 'redirection\/fallback_exclude_locations', [ 'login', 'admin', 'dashboard' ] );\n\t\treturn $this->uri && ! in_array( $this->uri, $wp_redirect_admin_locations, true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/class-api.php","ext":"php","size":7902,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * IndexNow API\n *\n * @since      1.0.56\n * @package    RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Instant_Indexing;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * API class.\n *\n * @codeCoverageIgnore\n *\/\nclass Api {\n\n\tuse Hooker;\n\n\t\/**\n\t * IndexNow API URL.\n\t *\n\t * @var string\n\t *\/\n\tprivate $api_url = 'https:\/\/api.indexnow.org\/indexnow\/';\n\n\t\/**\n\t * IndexNow API key.\n\t *\n\t * @var string\n\t *\/\n\tprotected $api_key = '';\n\n\t\/**\n\t * Was the last request successful.\n\t *\n\t * @var bool\n\t *\/\n\tprotected $is_success = false;\n\n\t\/**\n\t * Last error.\n\t *\n\t * @var string\n\t *\/\n\tprotected $last_error = '';\n\n\t\/**\n\t * Last response.\n\t *\n\t * @var array\n\t *\/\n\tprotected $last_response = '';\n\n\t\/**\n\t * Last response header code.\n\t *\n\t * @var int\n\t *\/\n\tprotected $last_code = 0;\n\n\t\/**\n\t * Next submission is a manual submission.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $is_manual = true;\n\n\t\/**\n\t * User agent used for the API requests.\n\t *\n\t * @var string\n\t *\/\n\tprotected $user_agent = '';\n\n\t\/**\n\t * User agent used for the API requests.\n\t *\n\t * @var string\n\t *\/\n\tprotected $version = '';\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Api\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Api ) ) {\n\t\t\t$instance             = new Api();\n\t\t\t$instance->user_agent = 'RankMath\/' . md5( esc_url( home_url( '\/' ) ) );\n\t\t\t$instance->version    = rank_math()->version;\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Make request to the IndexNow API.\n\t *\n\t * @param array $urls URLs to submit.\n\t * @param bool  $manual Whether the request is manual or not.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function submit( $urls, $manual = null ) {\n\t\t$this->reset();\n\n\t\tif ( ! is_null( $manual ) ) {\n\t\t\t$this->is_manual = (bool) $manual;\n\t\t}\n\n\t\t$data = $this->get_payload( $urls );\n\n\t\t$response = wp_remote_post(\n\t\t\t'https:\/\/api.indexnow.org\/indexnow\/',\n\t\t\t[\n\t\t\t\t'body'    => $data,\n\t\t\t\t'headers' => [\n\t\t\t\t\t'Content-Type'  => 'application\/json',\n\t\t\t\t\t'User-Agent'    => $this->user_agent,\n\t\t\t\t\t'X-Source-Info' => 'https:\/\/rankmath.com\/' . $this->version . '\/' . ( $this->is_manual ? '1' : '' ),\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$this->last_error = 'WP_Error: ' . $response->get_error_message();\n\t\t\t$this->log( (array) $urls, 0, $this->last_error );\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->last_code     = wp_remote_retrieve_response_code( $response );\n\t\t$this->last_response = wp_remote_retrieve_body( $response );\n\t\tif ( in_array( $this->last_code, [ 200, 202, 204 ], true ) ) {\n\t\t\t$this->is_success = true;\n\t\t\t$this->log( (array) $urls, $this->last_code, 'OK' );\n\t\t\treturn true;\n\t\t}\n\n\t\t$message = wp_remote_retrieve_response_message( $response );\n\t\t$this->set_error_message( $message );\n\n\t\t$this->log( (array) $urls, $this->last_code, $this->last_error );\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get the last error message.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_error() {\n\t\treturn $this->last_error;\n\t}\n\n\t\/**\n\t * Get the last response code.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_response_code() {\n\t\treturn $this->last_code;\n\t}\n\n\t\/**\n\t * Get the last response.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_response() {\n\t\treturn $this->last_response;\n\t}\n\n\t\/**\n\t * Get the host parameter value to send to the API.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_host() {\n\t\t$host = wp_parse_url( home_url(), PHP_URL_HOST );\n\t\tif ( empty( $host ) ) {\n\t\t\t$host = 'localhost';\n\t\t}\n\n\t\t\/**\n\t\t * Filter the host parameter value to send to the API.\n\t\t *\n\t\t * @param string $host Host.\n\t\t *\/\n\t\treturn $this->do_filter( 'instant_indexing\/indexnow_host', $host );\n\t}\n\n\t\/**\n\t * Get the API key.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_key() {\n\t\tif ( ! empty( $this->api_key ) ) {\n\t\t\treturn $this->api_key;\n\t\t}\n\n\t\t$api_key = Helper::get_settings( 'instant_indexing.indexnow_api_key' );\n\n\t\t\/**\n\t\t * Filter the API key.\n\t\t *\n\t\t * @param string $api_key API key.\n\t\t *\/\n\t\t$this->api_key = $this->do_filter( 'instant_indexing\/indexnow_key', $api_key );\n\n\t\treturn $this->api_key;\n\t}\n\n\t\/**\n\t * Alias for get_key().\n\t *\/\n\tpublic function get_api_key() {\n\t\treturn $this->get_key();\n\t}\n\n\t\/**\n\t * Get the API key location.\n\t *\n\t * @param string $context Key context.\n\t * @return string\n\t *\/\n\tpublic function get_key_location( $context = '' ) {\n\t\t\/**\n\t\t * Filter the API key location.\n\t\t *\n\t\t * @param string $location Location.\n\t\t *\/\n\t\treturn $this->do_filter( 'instant_indexing\/indexnow_key_location', trailingslashit( home_url() ) . $this->get_key() . '.txt', $context );\n\t}\n\n\t\/**\n\t * Log the request.\n\t *\n\t * @param array  $urls    URLs to submit.\n\t * @param int    $status  Response code.\n\t * @param string $message Response message.\n\t *\/\n\tpublic function log( $urls, $status, $message = '' ) {\n\t\t$log = get_option( 'rank_math_indexnow_log', [] );\n\t\t$url = $this->get_loggable_url( $urls );\n\n\t\tif ( ! $url ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$log[] = [\n\t\t\t'url'               => $url,\n\t\t\t'status'            => (int) $status,\n\t\t\t'manual_submission' => (bool) $this->is_manual,\n\t\t\t'message'           => $message,\n\t\t\t'time'              => time(),\n\t\t];\n\n\t\t\/\/ Only keep the last 100 entries.\n\t\t$log = array_slice( $log, -100 );\n\n\t\tupdate_option( 'rank_math_indexnow_log', $log, false );\n\t}\n\n\t\/**\n\t * Get the loggable URL from an array of URLs.\n\t * If multiple URLs are submitted, return the first one and [+12]\n\t *\n\t * @param array $urls URLs to submit.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_loggable_url( $urls ) {\n\t\t$urls       = array_values( (array) $urls );\n\t\t$count_urls = count( $urls );\n\t\tif ( ! $count_urls ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$url = $urls[0];\n\t\tif ( $count_urls > 1 ) {\n\t\t\t$url .= ' [+' . ( $count_urls - 1 ) . ']';\n\t\t}\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Get the log.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_log() {\n\t\treturn get_option( 'rank_math_indexnow_log', [] );\n\t}\n\n\t\/**\n\t * Clear the log.\n\t *\/\n\tpublic function clear_log() {\n\t\tdelete_option( 'rank_math_indexnow_log' );\n\t}\n\n\t\/**\n\t * Reset object properties.\n\t *\/\n\tprivate function reset() {\n\t\t$this->last_error    = '';\n\t\t$this->last_code     = 0;\n\t\t$this->last_response = '';\n\t\t$this->is_success    = false;\n\t}\n\n\t\/**\n\t * Get the additional data to send to the API.\n\t *\n\t * @param array $urls URLs to submit.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_payload( $urls ) {\n\t\treturn wp_json_encode(\n\t\t\t[\n\t\t\t\t'host'        => $this->get_host(),\n\t\t\t\t'key'         => $this->get_key(),\n\t\t\t\t'keyLocation' => $this->get_key_location( 'request_payload' ),\n\t\t\t\t'urlList'     => (array) $urls,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the error message from the response message.\n\t *\n\t * @param string $message Response message.\n\t *\/\n\tprivate function set_error_message( $message ) {\n\t\tif ( ! empty( $message ) ) {\n\t\t\t$this->last_error = $message;\n\t\t\treturn;\n\t\t}\n\n\t\t$message     = __( 'Unknown error.', 'rank-math' );\n\t\t$message_map = [\n\t\t\t400 => __( 'Invalid request.', 'rank-math' ),\n\t\t\t403 => __( 'Invalid API key.', 'rank-math' ),\n\t\t\t422 => __( 'Invalid URL.', 'rank-math' ),\n\t\t\t429 => __( 'Too many requests.', 'rank-math' ),\n\t\t\t500 => __( 'Internal server error.', 'rank-math' ),\n\t\t];\n\n\t\tif ( isset( $message_map[ $this->last_code ] ) ) {\n\t\t\t$message = $message_map[ $this->last_code ];\n\t\t}\n\n\t\t$this->last_error = $message;\n\t}\n\n\n\t\/**\n\t * Generate and save a new API key.\n\t *\/\n\tpublic function reset_key() {\n\t\t$settings                     = Helper::get_settings( 'instant_indexing', [] );\n\t\t$settings['indexnow_api_key'] = $this->generate_api_key();\n\t\t$this->api_key                = $settings['indexnow_api_key'];\n\t\tupdate_option( 'rank-math-options-instant-indexing', $settings );\n\t}\n\n\t\/**\n\t * Generate new random API key.\n\t *\/\n\tprivate function generate_api_key() {\n\t\t$api_key = wp_generate_uuid4();\n\t\t$api_key = preg_replace( '[-]', '', $api_key );\n\n\t\treturn $api_key;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/class-instant-indexing.php","ext":"php","size":12172,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Instant Indexing module.\n *\n * @since      1.0.56\n * @package    RankMath\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Instant_Indexing;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Module\\Base;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Admin\\Options;\nuse RankMath\\Admin\\Register_Options_Page;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Sitepress;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Instant_Indexing class.\n *\/\nclass Instant_Indexing extends Base {\n\n\tuse Hooker;\n\tuse Ajax;\n\n\t\/**\n\t * API Object.\n\t *\n\t * @var string\n\t *\/\n\tprivate $api;\n\n\t\/**\n\t * Keep log of submitted objects to avoid double submissions.\n\t *\n\t * @var array\n\t *\/\n\tprivate $submitted = [];\n\n\t\/**\n\t * Store previous post status that we can check agains in save_post.\n\t *\n\t * @var array\n\t *\/\n\tprivate $previous_post_status = [];\n\n\t\/**\n\t * Store original permalinks for when they get trashed.\n\t *\n\t * @var array\n\t *\/\n\tprivate $previous_post_permalinks = [];\n\n\t\/**\n\t * Restrict to one request every X seconds to a given URL.\n\t *\/\n\tconst THROTTLE_LIMIT = 5;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tparent::__construct();\n\n\t\tif ( ! $this->is_configured() ) {\n\t\t\tApi::get()->reset_key();\n\t\t}\n\n\t\t$this->action( 'init', 'register_instant_indexing_settings', 125 );\n\t\t$post_types = $this->get_auto_submit_post_types();\n\t\tif ( ! empty( $post_types ) ) {\n\t\t\t$this->filter( 'wp_insert_post_data', 'before_save_post', 10, 4 );\n\t\t}\n\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$this->action( 'save_post_' . $post_type, 'save_post', 10, 3 );\n\t\t\t$this->filter( \"bulk_actions-edit-{$post_type}\", 'post_bulk_actions', 11 );\n\t\t\t$this->filter( \"handle_bulk_actions-edit-{$post_type}\", 'handle_post_bulk_actions', 10, 3 );\n\t\t}\n\n\t\t$this->filter( 'post_row_actions', 'post_row_actions', 10, 2 );\n\t\t$this->filter( 'page_row_actions', 'post_row_actions', 10, 2 );\n\t\t$this->filter( 'admin_init', 'handle_post_row_actions' );\n\n\t\t$this->action( 'wp', 'serve_api_key' );\n\t\t$this->action( 'rest_api_init', 'init_rest_api' );\n\t}\n\n\t\/**\n\t * Load the REST API endpoints.\n\t *\/\n\tpublic function init_rest_api() {\n\t\t$rest = new Rest();\n\t\t$rest->register_routes();\n\t}\n\n\t\/**\n\t * Add bulk actions for applicable posts, pages, CPTs.\n\t *\n\t * @param  array $actions Actions.\n\t * @return array          New actions.\n\t *\/\n\tpublic function post_bulk_actions( $actions ) {\n\t\t$actions['rank_math_indexnow'] = esc_html__( 'Instant Indexing: Submit Pages', 'rank-math' );\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Action links for the post listing screens.\n\t *\n\t * @param array  $actions Action links.\n\t * @param object $post    Current post object.\n\t * @return array\n\t *\/\n\tpublic function post_row_actions( $actions, $post ) {\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn $actions;\n\t\t}\n\n\t\tif ( 'publish' !== $post->post_status ) {\n\t\t\treturn $actions;\n\t\t}\n\n\t\t$post_types = $this->get_auto_submit_post_types();\n\t\tif ( ! in_array( $post->post_type, $post_types, true ) ) {\n\t\t\treturn $actions;\n\t\t}\n\n\t\t$link = wp_nonce_url(\n\t\t\tadd_query_arg(\n\t\t\t\t[\n\t\t\t\t\t'action'        => 'rank_math_instant_index_post',\n\t\t\t\t\t'index_post_id' => $post->ID,\n\t\t\t\t\t'method'        => 'bing_submit',\n\t\t\t\t]\n\t\t\t),\n\t\t\t'rank_math_instant_index_post'\n\t\t);\n\n\t\t$actions['indexnow_submit'] = '<a href=\"' . esc_url( $link ) . '\" class=\"rm-instant-indexing-action rm-indexnow-submit\">' . __( 'Instant Indexing: Submit Page', 'rank-math' ) . '<\/a>';\n\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Handle post row action link actions.\n\t *\n\t * @return void\n\t *\/\n\tpublic function handle_post_row_actions() {\n\t\tif ( 'rank_math_instant_index_post' !== Param::get( 'action' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$post_id = absint( Param::get( 'index_post_id' ) );\n\t\tif ( ! $post_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! wp_verify_nonce( Param::get( '_wpnonce' ), 'rank_math_instant_index_post' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->api_submit( get_permalink( $post_id ), true );\n\n\t\tHelper::redirect( remove_query_arg( [ 'action', 'index_post_id', 'method', '_wpnonce' ] ) );\n\t\texit;\n\t}\n\n\t\/**\n\t * Handle bulk actions for applicable posts, pages, CPTs.\n\t *\n\t * @param  string $redirect   Redirect URL.\n\t * @param  string $doaction   Performed action.\n\t * @param  array  $object_ids Post IDs.\n\t *\n\t * @return string             New redirect URL.\n\t *\/\n\tpublic function handle_post_bulk_actions( $redirect, $doaction, $object_ids ) {\n\t\tif ( 'rank_math_indexnow' !== $doaction || empty( $object_ids ) ) {\n\t\t\treturn $redirect;\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn $redirect;\n\t\t}\n\n\t\t$urls = [];\n\t\tforeach ( $object_ids as $object_id ) {\n\t\t\t$urls[] = get_permalink( $object_id );\n\t\t}\n\n\t\t$this->api_submit( $urls, true );\n\n\t\treturn $redirect;\n\t}\n\n\t\/**\n\t * Register admin page.\n\t *\/\n\tpublic function register_instant_indexing_settings() {\n\t\t$tabs = [\n\t\t\t'url-submission' => [\n\t\t\t\t'icon'    => 'rm-icon rm-icon-instant-indexing',\n\t\t\t\t'title'   => esc_html__( 'Submit URLs', 'rank-math' ),\n\t\t\t\t'desc'    => esc_html__( 'Send URLs directly to the IndexNow API.', 'rank-math' ) . ' <a href=\"' . KB::get( 'instant-indexing', 'Indexing Submit URLs' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>',\n\t\t\t\t'classes' => 'rank-math-advanced-option',\n\t\t\t\t'file'    => __DIR__ . '\/views\/console.php',\n\t\t\t],\n\t\t\t'settings'       => [\n\t\t\t\t'icon'  => 'rm-icon rm-icon-settings',\n\t\t\t\t'title' => esc_html__( 'Settings', 'rank-math' ),\n\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t'desc'  => sprintf( esc_html__( 'Instant Indexing module settings. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'instant-indexing', 'Indexing Settings' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t'file'  => __DIR__ . '\/views\/options.php',\n\t\t\t],\n\t\t\t'history'        => [\n\t\t\t\t'icon'    => 'rm-icon rm-icon-htaccess',\n\t\t\t\t'title'   => esc_html__( 'History', 'rank-math' ),\n\t\t\t\t'desc'    => esc_html__( 'The last 100 IndexNow API requests.', 'rank-math' ),\n\t\t\t\t'classes' => 'rank-math-advanced-option',\n\t\t\t\t'file'    => __DIR__ . '\/views\/history.php',\n\t\t\t],\n\t\t];\n\n\t\tif ( 'easy' === Helper::get_settings( 'general.setup_mode', 'advanced' ) ) {\n\t\t\t\/\/ Move ['settings'] to the top.\n\t\t\t$tabs = [ 'settings' => $tabs['settings'] ] + $tabs;\n\t\t}\n\n\t\t\/**\n\t\t * Allow developers to add new sections in the IndexNow settings.\n\t\t *\n\t\t * @param array $tabs\n\t\t *\/\n\t\t$tabs = $this->do_filter( 'settings\/instant_indexing', $tabs );\n\n\t\tnew Register_Options_Page(\n\t\t\t[\n\t\t\t\t'key'        => 'rank-math-options-instant-indexing',\n\t\t\t\t'title'      => esc_html__( 'Instant Indexing', 'rank-math' ),\n\t\t\t\t'menu_title' => esc_html__( 'Instant Indexing', 'rank-math' ),\n\t\t\t\t'capability' => 'rank_math_general',\n\t\t\t\t'tabs'       => $tabs,\n\t\t\t\t'position'   => 11,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Store previous post status & permalink before saving the post.\n\t *\n\t * @param  array $data                Post data.\n\t * @param  array $postarr             Raw post data.\n\t * @param  array $unsanitized_postarr Unsanitized post data.\n\t * @param  bool  $update              Whether this is an existing post being updated or not.\n\t *\/\n\tpublic function before_save_post( $data, $postarr, $unsanitized_postarr, $update = false ) {\n\t\tif ( ! $update ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$this->previous_post_status[ $postarr['ID'] ]     = get_post_status( $postarr['ID'] );\n\t\t$this->previous_post_permalinks[ $postarr['ID'] ] = str_replace( '__trashed', '', get_permalink( $postarr['ID'] ) );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * When a post from a watched post type is published or updated, submit its URL\n\t * to the API and add notice about it.\n\t *\n\t * @param  int    $post_id Post ID.\n\t * @param  object $post    Post object.\n\t *\n\t * @return void\n\t *\/\n\tpublic function save_post( $post_id, $post ) {\n\t\t\/\/ Check if already submitted.\n\t\tif ( in_array( $post_id, $this->submitted, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check if post status changed to publish or trash.\n\t\tif ( ! in_array( $post->post_status, [ 'publish', 'trash' ], true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If new status is trash, check if previous status was publish.\n\t\tif ( 'trash' === $post->post_status && 'publish' !== $this->previous_post_status[ $post_id ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( wp_is_post_revision( $post_id ) || wp_is_post_autosave( $post_id ) || ! empty( Helper::get_post_meta( 'lock_modified_date', $post_id ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::is_post_indexable( $post_id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Check if it's a hidden product.\n\t\tif ( 'product' === $post->post_type && Helper::is_woocommerce_active() ) {\n\t\t\t$product = wc_get_product( $post_id );\n\t\t\tif ( $product && ! $product->is_visible() ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tSitepress::get()->remove_home_url_filter();\n\t\t$url = get_permalink( $post );\n\t\tif ( 'trash' === $post->post_status ) {\n\t\t\t$url = $this->previous_post_permalinks[ $post_id ];\n\t\t}\n\t\tSitepress::get()->restore_home_url_filter();\n\n\t\t\/**\n\t\t * Filter the URL to be submitted to IndexNow.\n\t\t * Returning false will prevent the URL from being submitted.\n\t\t *\n\t\t * @param string  $url  URL to be submitted.\n\t\t * @param WP_POST $post Post object.\n\t\t *\/\n\t\t$send_url = $this->do_filter( 'instant_indexing\/publish_url', $url, $post );\n\n\t\t\/\/ Early exit if filter is set to false.\n\t\tif ( ! $send_url ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->api_submit( $send_url, false );\n\t\t$this->submitted[] = $post_id;\n\t}\n\n\t\/**\n\t * Is module configured.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_configured() {\n\t\treturn (bool) Helper::get_settings( 'instant_indexing.indexnow_api_key' );\n\t}\n\n\t\/**\n\t * Serve API key for search engines.\n\t *\/\n\tpublic function serve_api_key() {\n\t\tglobal $wp;\n\n\t\t$api          = Api::get();\n\t\t$key          = $api->get_key();\n\t\t$key_location = $api->get_key_location( 'serve_api_key' );\n\t\t$current_url  = home_url( $wp->request );\n\n\t\tif ( isset( $current_url ) && $key_location === $current_url ) {\n\t\t\theader( 'Content-Type: text\/plain' );\n\t\t\theader( 'X-Robots-Tag: noindex' );\n\t\t\tstatus_header( 200 );\n\t\t\techo esc_html( $key );\n\n\t\t\texit();\n\t\t}\n\t}\n\n\t\/**\n\t * Submit URL to IndexNow API.\n\t *\n\t * @param string $url                  URL to be submitted.\n\t * @param bool   $is_manual_submission Whether the URL is submitted manually by the user.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function api_submit( $url, $is_manual_submission ) {\n\t\t$api = Api::get();\n\n\t\t\/**\n\t\t * Filter the URL to be submitted to IndexNow.\n\t\t * Returning false will prevent the URL from being submitted.\n\t\t *\n\t\t * @param bool   $is_manual_submission Whether the URL is submitted manually by the user.\n\t\t *\/\n\t\t$url = $this->do_filter( 'instant_indexing\/submit_url', $url, $is_manual_submission );\n\t\tif ( ! $url ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$api_logs = $api->get_log();\n\t\tif ( ! $is_manual_submission && ! empty( $api_logs ) ) {\n\t\t\t$logs = array_values( array_reverse( $api_logs ) );\n\t\t\tif ( ! empty( $logs[0] ) && $logs[0]['url'] === $url && time() - $logs[0]['time'] < self::THROTTLE_LIMIT ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t$submitted = $api->submit( $url, $is_manual_submission );\n\n\t\tif ( ! $is_manual_submission ) {\n\t\t\treturn $submitted;\n\t\t}\n\n\t\t$count = is_array( $url ) ? count( $url ) : 1;\n\t\t$this->add_submit_message_notice( $submitted, $count );\n\n\t\treturn $submitted;\n\t}\n\n\t\/**\n\t * Add notice after submitting one or more URLs.\n\t *\n\t * @param bool $success Whether the submission was successful.\n\t * @param int  $count   Number of submitted URLs.\n\t *\n\t * @return void\n\t *\/\n\tprivate function add_submit_message_notice( $success, $count ) {\n\t\t$notification_type    = 'error';\n\t\t$notification_message = __( 'Error submitting page to IndexNow.', 'rank-math' );\n\n\t\tif ( $success ) {\n\t\t\t$notification_type    = 'success';\n\t\t\t$notification_message = sprintf(\n\t\t\t\t\/* translators: %s: Number of pages submitted. *\/\n\t\t\t\t_n( '%s page submitted to IndexNow.', '%s pages submitted to IndexNow.', $count, 'rank-math' ),\n\t\t\t\t$count\n\t\t\t);\n\t\t}\n\n\t\tHelper::add_notification( $notification_message, [ 'type' => $notification_type ] );\n\t}\n\n\t\/**\n\t * Get post types where auto-submit is enabled.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_auto_submit_post_types() {\n\t\t$post_types = Helper::get_settings( 'instant_indexing.bing_post_types', [] );\n\t\treturn $post_types;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/class-rest.php","ext":"php","size":5562,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Global functionality of the plugin.\n *\n * Defines the functionality loaded on admin.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\Rest\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Instant_Indexing;\n\nuse RankMath\\Helper;\nuse WP_Error;\nuse WP_REST_Server;\nuse WP_REST_Request;\nuse WP_REST_Controller;\nuse WP_REST_Response;\nuse RankMath\\Helpers\\Arr;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Rest class.\n *\/\nclass Rest extends WP_REST_Controller {\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->namespace = \\RankMath\\Rest\\Rest_Helper::BASE . '\/in';\n\t}\n\n\t\/**\n\t * Register REST routes.\n\t *\n\t * @return void\n\t *\/\n\tpublic function register_routes() {\n\t\t$namespace = $this->namespace;\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'\/submitUrls',\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t\t'callback'            => [ $this, 'submit_urls' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t\t'args'                => [\n\t\t\t\t\t\t'urls' => [\n\t\t\t\t\t\t\t'description' => __( 'The list of urls to submit to the Instant Indexing API.', 'rank-math' ),\n\t\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'\/getLog',\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t\t'callback'            => [ $this, 'get_log' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t\t'args'                => [\n\t\t\t\t\t\t'filter' => [\n\t\t\t\t\t\t\t'description' => __( 'Filter log by type.', 'rank-math' ),\n\t\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t\t'enum'        => [ 'all', 'manual', 'auto' ],\n\t\t\t\t\t\t\t'default'     => 'all',\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'\/clearLog',\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t\t'callback'            => [ $this, 'clear_log' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t\t'args'                => [\n\t\t\t\t\t\t'filter' => [\n\t\t\t\t\t\t\t'description' => __( 'Clear log by type.', 'rank-math' ),\n\t\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t\t'enum'        => [ 'all', 'manual', 'auto' ],\n\t\t\t\t\t\t\t'default'     => 'all',\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$namespace,\n\t\t\t'\/resetKey',\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t\t'callback'            => [ $this, 'reset_key' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Submit URLs.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error\n\t *\/\n\tpublic function submit_urls( WP_REST_Request $request ) {\n\t\t$urls = $request->get_param( 'urls' );\n\t\tif ( empty( $urls ) ) {\n\t\t\treturn new WP_Error( 'empty_urls', __( 'No URLs provided.', 'rank-math' ) );\n\t\t}\n\n\t\t$urls = Arr::from_string( $urls, \"\\n\" );\n\t\t$urls = array_values( array_unique( array_filter( $urls, 'wp_http_validate_url' ) ) );\n\n\t\tif ( ! $urls ) {\n\t\t\treturn new WP_Error( 'invalid_urls', __( 'Invalid URLs provided.', 'rank-math' ) );\n\t\t}\n\n\t\t$result = Api::get()->submit( $urls );\n\t\tif ( ! $result ) {\n\t\t\treturn new WP_Error( 'submit_failed', __( 'Failed to submit URLs. See details in the History tab.', 'rank-math' ) );\n\t\t}\n\n\t\t$urls_number = count( $urls );\n\t\treturn new WP_REST_Response(\n\t\t\t[\n\t\t\t\t'success' => true,\n\t\t\t\t'message' => sprintf(\n\t\t\t\t\t\/\/ Translators: %s is the number of URLs submitted.\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Successfully submitted %s URL.',\n\t\t\t\t\t\t'Successfully submitted %s URLs.',\n\t\t\t\t\t\t$urls_number,\n\t\t\t\t\t\t'rank-math'\n\t\t\t\t\t),\n\t\t\t\t\t$urls_number\n\t\t\t\t),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get log.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error\n\t *\/\n\tpublic function get_log( WP_REST_Request $request ) {\n\t\t$filter = $request->get_param( 'filter' );\n\t\t$result = Api::get()->get_log();\n\t\t$total  = count( $result );\n\t\tforeach ( $result as $key => $value ) {\n\t\t\t$result[ $key ]['timeFormatted'] = wp_date( 'Y-m-d H:i:s', $value['time'] );\n\t\t\t\/\/ Translators: placeholder is human-readable time, e.g. \"1 hour\".\n\t\t\t$result[ $key ]['timeHumanReadable'] = sprintf( __( '%s ago', 'rank-math' ), human_time_diff( $value['time'] ) );\n\n\t\t\tif ( 'manual' === $filter && empty( $result[ $key ]['manual_submission'] ) ) {\n\t\t\t\tunset( $result[ $key ] );\n\t\t\t} elseif ( 'auto' === $filter && ! empty( $result[ $key ]['manual_submission'] ) ) {\n\t\t\t\tunset( $result[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\t$result = array_values( array_reverse( $result ) );\n\n\t\treturn new WP_REST_Response(\n\t\t\t[\n\t\t\t\t'data'  => $result,\n\t\t\t\t'total' => $total,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Clear log.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error\n\t *\/\n\tpublic function clear_log( WP_REST_Request $request ) {\n\t\tApi::get()->clear_log();\n\t\treturn new WP_REST_Response( [ 'status' => 'ok' ] );\n\t}\n\n\t\/**\n\t * Reset key.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error\n\t *\/\n\tpublic function reset_key( WP_REST_Request $request ) {\n\t\t$api = Api::get();\n\t\t$api->reset_key();\n\t\t$key      = $api->get_key();\n\t\t$location = $api->get_key_location( 'reset_key' );\n\t\treturn new WP_REST_Response(\n\t\t\t[\n\t\t\t\t'status'   => 'ok',\n\t\t\t\t'key'      => $key,\n\t\t\t\t'location' => $location,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Determine if the current user can manage instant indexing.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function has_permission() {\n\t\treturn Helper::has_cap( 'general' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/views\/history.php","ext":"php","size":3688,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * IndexNow Options: History tab.\n *\n * @since   1.0.56\n * @package Rank_Math\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n$history_content  = '';\n$history_content .= '<a href=\"#\" id=\"indexnow_clear_history\" class=\"button alignright hidden\">' . esc_html__( 'Clear History', 'rank-math' ) . '<\/a>';\n$history_content .= '<div class=\"history-filter-links hidden\" id=\"indexnow_history_filters\"><a href=\"#\" data-filter=\"all\" class=\"current\">' . esc_html__( 'All', 'rank-math' ) . '<\/a> | <a href=\"#\" data-filter=\"manual\">' . esc_html__( 'Manual', 'rank-math' ) . '<\/a> | <a href=\"#\" data-filter=\"auto\">' . esc_html__( 'Auto', 'rank-math' ) . '<\/a><\/div>';\n$history_content .= '<div class=\"clear\"><\/div>';\n$history_content .= '<table class=\"wp-list-table widefat striped\" id=\"indexnow_history\"><thead><tr><th class=\"col-date\">' . esc_html__( 'Time', 'rank-math' ) . '<\/th><th class=\"col-url\">' . esc_html__( 'URL', 'rank-math' ) . '<\/th><th class=\"col-status\">' . esc_html__( 'Response', 'rank-math' ) . '<\/th><\/tr><\/thead><tbody>';\n$history_content .= '<\/tbody><\/table>';\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'indexnow_history',\n\t\t'type'    => 'raw',\n\t\t\/* translators: daily quota *\/\n\t\t'content' => $history_content,\n\t]\n);\n\n$help_contents = '';\n\n$help_contents .= '<a href=\"#\" id=\"indexnow_show_response_codes\">' . esc_html__( 'Response Code Help', 'rank-math' ) . '<span class=\"dashicons dashicons-arrow-down\"><\/span><\/a>';\n\n$help_contents .= '<table class=\"wp-list-table widefat striped hidden\" id=\"indexnow_response_codes\"><thead><tr><th class=\"col-response-code\">' . esc_html__( 'Response Code', 'rank-math' ) . '<\/th><th class=\"col-response-message\">' . esc_html__( 'Response Message', 'rank-math' ) . '<\/th><th class=\"col-reasons\">' . esc_html__( 'Reasons', 'rank-math' ) . '<\/th><\/tr><\/thead><tbody>';\n$help_contents .= '<tr><td class=\"col-response-code\">200<\/td><td class=\"col-response-message\">' . esc_html__( 'OK', 'rank-math' ) . '<\/td><td class=\"col-reasons\">' . esc_html__( 'The URL was successfully submitted to the IndexNow API.', 'rank-math' ) . '<\/td><\/tr>';\n$help_contents .= '<tr><td class=\"col-response-code\">202<\/td><td class=\"col-response-message\">' . esc_html__( 'Accepted', 'rank-math' ) . '<\/td><td class=\"col-reasons\">' . esc_html__( 'The URL was successfully submitted to the IndexNow API, but the API key will be checked later.', 'rank-math' ) . '<\/td><\/tr>';\n$help_contents .= '<tr><td class=\"col-response-code\">400<\/td><td class=\"col-response-message\">' . esc_html__( 'Bad Request', 'rank-math' ) . '<\/td><td class=\"col-reasons\">' . esc_html__( 'The request was invalid.', 'rank-math' ) . '<\/td><\/tr>';\n$help_contents .= '<tr><td class=\"col-response-code\">403<\/td><td class=\"col-response-message\">' . esc_html__( 'Forbidden', 'rank-math' ) . '<\/td><td class=\"col-reasons\">' . esc_html__( 'The key was invalid (e.g. key not found, file found but key not in the file).', 'rank-math' ) . '<\/td><\/tr>';\n$help_contents .= '<tr><td class=\"col-response-code\">422<\/td><td class=\"col-response-message\">' . esc_html__( 'Unprocessable Entity', 'rank-math' ) . '<\/td><td class=\"col-reasons\">' . esc_html__( 'The URLs don\\'t belong to the host or the key is not matching the schema in the protocol.', 'rank-math' ) . '<\/td><\/tr>';\n$help_contents .= '<tr><td class=\"col-response-code\">429<\/td><td class=\"col-response-message\">' . esc_html__( 'Too Many Requests', 'rank-math' ) . '<\/td><td class=\"col-reasons\">' . esc_html__( 'Too Many Requests (potential Spam).', 'rank-math' ) . '<\/td><\/tr>';\n$help_contents .= '<\/tbody><\/table>';\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'indexnow_help',\n\t\t'type'    => 'raw',\n\t\t\/* translators: daily quota *\/\n\t\t'content' => $help_contents,\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/views\/options.php","ext":"php","size":2476,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * IndexNow Settings.\n *\n * @since      1.0.56\n * @package    RankMath\n * @subpackage RankMath\\Settings\n *\/\n\nnamespace RankMath\\Instant_Indexing;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'bing_post_types',\n\t\t'type'    => 'multicheck',\n\t\t'name'    => esc_html__( 'Auto-Submit Post Types', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Submit posts from these post types automatically to the IndexNow API when a post is published, updated, or trashed.', 'rank-math' ),\n\t\t'options' => Helper::choices_post_types(),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'          => 'indexnow_api_key',\n\t\t'name'        => esc_html__( 'API Key', 'rank-math' ),\n\t\t'desc'        => esc_html__( 'The IndexNow API key proves the ownership of the site. It is generated automatically. You can change the key if it becomes known to third parties.', 'rank-math' ),\n\t\t'type'        => 'text',\n\t\t'after_field' => '<a href=\"#\" id=\"indexnow_reset_key\" class=\"button button-secondary large-button\"><span class=\"dashicons dashicons-update\"><\/span> ' . esc_html__( 'Change Key', 'rank-math' ) . '<\/a>',\n\t\t'classes'     => 'rank-math-advanced-option',\n\t\t'attributes'  => [\n\t\t\t'readonly' => 'readonly',\n\t\t],\n\t]\n);\n\n$key_location    = Api::get()->get_key_location( 'settings_field' );\n$field_label     = esc_html__( 'API Key Location', 'rank-math' );\n$check_key_label = esc_html__( 'Check Key', 'rank-math' );\n\n\/\/ Translators: %s is the words \"Check Key\".\n$field_desc = sprintf( esc_html__( 'Use the %1$s button to verify that the key is accessible for search engines. Clicking on it should open the key file in your browser and show the API key.', 'rank-math' ), '<strong>' . $check_key_label . '<\/strong>' );\n\n$location_field = '<div class=\"cmb-row cmb-type-text cmb2-id-indexnow-api-key-location table-layout rank-math-advanced-option\" data-fieldtype=\"text\">\n<div class=\"cmb-th\">\n<label for=\"indexnow_api_key_location\">' . $field_label . '<\/label>\n<\/div>\n\t<div class=\"cmb-td\">\n<code id=\"indexnow_api_key_location\">' . esc_url( $key_location ) . '<\/code>\n<p class=\"cmb2-metabox-description\">' . $field_desc . '<\/p>\n<a href=\"' . esc_url( $key_location ) . '\" id=\"indexnow_check_key\" class=\"button button-secondary large-button\" target=\"_blank\"><span class=\"dashicons dashicons-search\"><\/span> ' . $check_key_label . '<\/a>\n\t<\/div>\n<\/div>';\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'indexnow_api_key_location',\n\t\t'type'    => 'raw',\n\t\t'content' => $location_field,\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/instant-indexing\/views\/console.php","ext":"php","size":1332,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * IndexNow Options: Console tab.\n *\n * @since   1.0.56\n * @package Rank_Math\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'indexnow_description',\n\t\t'type'    => 'raw',\n\t\t'content' => '<div class=\"bing-api-description description\"><p>' . esc_html__( 'Insert URLs to send to the IndexNow API (one per line, up to 10,000):', 'rank-math' ) . '<\/p><\/div>',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'indexnow_urls',\n\t\t'type'            => 'textarea_small',\n\t\t'sanitization_cb' => '__return_false',\n\t\t'attributes'      => [\n\t\t\t'class'       => 'instant-indexing-urls',\n\t\t\t'placeholder' => trailingslashit( home_url() ) . _x( 'hello-world', 'URL slug placeholder', 'rank-math' ),\n\t\t],\n\t\t'after_field'     => '<a href=\"#\" id=\"indexnow_submit\" class=\"button button-primary large-button\" style=\"margin-top: 20px;\">' . esc_html__( 'Submit URLs', 'rank-math' ) . '<\/a> <span class=\"spinner\" id=\"indexnow_spinner\"><\/span>',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'educational_note',\n\t\t'type'       => 'notice',\n\t\t'what'       => 'info',\n\t\t'save_field' => false,\n\t\t'content'    => sprintf(\n\t\t\t\/* translators: Note text *\/\n\t\t\tesc_html__( '%s The URLs will be submitted to Bing and Yandex only, and not to Google.', 'rank-math' ),\n\t\t\t'<b>' . esc_html__( 'Note:', 'rank-math' ) . '<\/b>'\n\t\t),\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/schema\/interface-snippet.php","ext":"php","size":477,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Schema Interface\n *\n * @since      1.0.13\n * @package    RankMath\n * @subpackage RankMath\\Schema\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Schema;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Schema interface.\n *\/\ninterface Snippet {\n\n\t\/**\n\t * Process schema data\n\t *\n\t * @param array  $data   Array of JSON-LD data.\n\t * @param JsonLD $jsonld Instance of JsonLD.\n\t *\n\t * @return array\n\t *\/\n\tpublic function process( $data, $jsonld );\n}\n"}]