[{"base":"plugins","rel":"code-snippets\/php\/settings\/class-setting-field.php","ext":"php","size":6557,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * This file handles rendering the settings fields\n *\n * @since      2.0.0\n * @package    Code_Snippets\n * @subpackage Settings\n *\/\n\nnamespace Code_Snippets\\Settings;\n\n\/**\n * Represents a single setting field\n *\n * @property-read string                $desc               Field description.\n * @property-read string                $label              Field label.\n * @property-read string                $type               Field type.\n * @property-read string                $name               Setting name.\n *\n * @property-read int                   $min                Minimum value (for numerical inputs).\n * @property-read int                   $max                Maximum value(for numerical inputs).\n * @property-read array<string, string> $options            List of options for a select or checkboxes field.\n * @property-read callable              $render_callback    Custom function to use when rendering a callback field.\n * @property-read callable              $sanitize_callback  Custom function to use when sanitize the setting value.\n * @property-read mixed                 $default            Default setting value.\n *\n * @property-read string                $input_name         Value of `name` HTML attribute on an input element.\n * @property-read string                $element_id\n *\/\nclass Setting_Field {\n\n\t\/**\n\t * Input field identifier.\n\t *\n\t * @var string\n\t *\/\n\tprivate string $field_id;\n\n\t\/**\n\t * Settings section identifier.\n\t *\n\t * @var string\n\t *\/\n\tprivate string $section;\n\n\t\/**\n\t * List of possible arguments.\n\t *\n\t * @var array<string, mixed>\n\t *\/\n\tprivate array $args = array(\n\t\t'desc'    => '',\n\t\t'label'   => '',\n\t\t'min'     => null,\n\t\t'max'     => null,\n\t\t'options' => [],\n\t);\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param string               $section_id Settings section identifier.\n\t * @param string               $field_id   Setting field identifier.\n\t * @param array<string, mixed> $args       The setting field attributes.\n\t *\/\n\tpublic function __construct( string $section_id, string $field_id, array $args ) {\n\t\t$this->field_id = $field_id;\n\t\t$this->section = $section_id;\n\t\t$this->args = array_merge( $this->args, $args );\n\t}\n\n\t\/**\n\t * Retrieve a single setting attribute.\n\t *\n\t * @param string $argument Attribute name.\n\t *\n\t * @return mixed Attribute value.\n\t *\/\n\tpublic function __get( string $argument ) {\n\n\t\tif ( 'input_name' === $argument ) {\n\t\t\treturn sprintf( '%s[%s][%s]', OPTION_NAME, $this->section, $this->field_id );\n\t\t}\n\n\t\treturn $this->args[ $argument ];\n\t}\n\n\t\/**\n\t * Retrieve the saved value for this setting.\n\t *\n\t * @return mixed\n\t *\/\n\tprivate function get_saved_value() {\n\t\treturn get_setting( $this->section, $this->field_id );\n\t}\n\n\t\/**\n\t * Render the setting field\n\t *\/\n\tpublic function render() {\n\t\t$method_name = 'render_' . $this->type . '_field';\n\n\t\tif ( method_exists( $this, $method_name ) ) {\n\t\t\tcall_user_func( array( $this, $method_name ) );\n\t\t} else {\n\t\t\t\/\/ Error message, not necessary to translate.\n\t\t\tprintf( 'Cannot render a %s field.', esc_html( $this->type ) );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $this->desc ) {\n\t\t\techo '<p class=\"description\">', wp_kses_post( $this->desc ), '<\/p>';\n\t\t}\n\t}\n\n\t\/**\n\t * Render a callback field.\n\t *\/\n\tpublic function render_callback_field() {\n\t\tcall_user_func( $this->render_callback );\n\t}\n\n\t\/**\n\t * Render a single checkbox field.\n\t *\n\t * @param string  $input_name Input name.\n\t * @param string  $label      Input label.\n\t * @param boolean $checked    Whether the checkbox should be checked.\n\t *\/\n\tprivate static function render_checkbox( string $input_name, string $label, bool $checked ) {\n\n\t\t$checkbox = sprintf(\n\t\t\t'<input type=\"checkbox\" name=\"%s\"%s>',\n\t\t\tesc_attr( $input_name ),\n\t\t\tchecked( $checked, true, false )\n\t\t);\n\n\t\t$kses = [\n\t\t\t'input' => [\n\t\t\t\t'type'    => [],\n\t\t\t\t'name'    => [],\n\t\t\t\t'checked' => [],\n\t\t\t],\n\t\t];\n\n\t\tif ( $label ) {\n\t\t\tprintf(\n\t\t\t\t'<label>%s %s<\/label>',\n\t\t\t\twp_kses( $checkbox, $kses ),\n\t\t\t\twp_kses_post( $label )\n\t\t\t);\n\t\t} else {\n\t\t\techo wp_kses( $checkbox, $kses );\n\t\t}\n\t}\n\n\t\/**\n\t * Render a checkbox field for a setting\n\t *\n\t * @return void\n\t * @since 2.0.0\n\t *\/\n\tpublic function render_checkbox_field() {\n\t\t$this->render_checkbox( $this->input_name, $this->label, $this->get_saved_value() ?? false );\n\t}\n\n\t\/**\n\t * Render a checkbox field for a setting\n\t *\n\t * @return void\n\t * @since 2.0.0\n\t *\/\n\tpublic function render_checkboxes_field() {\n\t\t$saved_value = $this->get_saved_value();\n\t\t$saved_value = is_array( $saved_value ) ? $saved_value : [];\n\n\t\techo '<fieldset>';\n\t\tprintf( '<legend class=\"screen-reader-text\"><span>%s<\/span><\/legend>', esc_html( $this->name ) );\n\n\t\tforeach ( $this->options as $option => $label ) {\n\t\t\t$this->render_checkbox( $this->input_name . \"[$option]\", $label, in_array( $option, $saved_value, true ) );\n\t\t\techo '<br>';\n\t\t}\n\n\t\techo '<\/fieldset>';\n\t}\n\n\t\/**\n\t * Render a basic text field for an editor setting.\n\t *\n\t * @return void\n\t *\/\n\tprivate function render_text_field() {\n\t\tprintf(\n\t\t\t'<input id=\"%s\" type=\"text\" name=\"%s\" value=\"%s\" class=\"regular-text %s\">',\n\t\t\tesc_attr( $this->element_id ),\n\t\t\tesc_attr( $this->input_name ),\n\t\t\tesc_attr( $this->get_saved_value() ),\n\t\t\tesc_attr( $this->element_id )\n\t\t);\n\n\t\tif ( $this->label ) {\n\t\t\techo ' ' . wp_kses_post( $this->label );\n\t\t}\n\t}\n\n\t\/**\n\t * Render a number select field for an editor setting\n\t *\n\t * @since 2.0.0\n\t *\/\n\tprivate function render_number_field() {\n\t\tprintf(\n\t\t\t'<input type=\"number\" name=\"%s\" value=\"%s\"',\n\t\t\tesc_attr( $this->input_name ),\n\t\t\tesc_attr( $this->get_saved_value() )\n\t\t);\n\n\t\tif ( is_numeric( $this->min ) ) {\n\t\t\tprintf( ' min=\"%d\"', intval( $this->min ) );\n\t\t}\n\n\t\tif ( is_numeric( $this->max ) ) {\n\t\t\tprintf( ' max=\"%d\"', intval( $this->max ) );\n\t\t}\n\n\t\techo '>';\n\n\t\tif ( $this->label ) {\n\t\t\techo ' ' . wp_kses_post( $this->label );\n\t\t}\n\t}\n\n\t\/**\n\t * Render a number select field for an editor setting.\n\t *\n\t * @since 3.0.0\n\t *\/\n\tprivate function render_select_field() {\n\t\t$saved_value = $this->get_saved_value();\n\t\tprintf( '<select name=\"%s\">', esc_attr( $this->input_name ) );\n\n\t\tforeach ( $this->options as $option => $option_label ) {\n\t\t\tprintf(\n\t\t\t\t'<option value=\"%s\"%s>%s<\/option>',\n\t\t\t\tesc_attr( $option ),\n\t\t\t\tselected( $option, $saved_value, false ),\n\t\t\t\tesc_html( $option_label )\n\t\t\t);\n\t\t}\n\n\t\techo '<\/select>';\n\t}\n\n\t\/**\n\t * Render a button link.\n\t *\n\t * @since 3.5.1\n\t *\/\n\tprivate function render_action_field() {\n\t\tprintf(\n\t\t\t'<button type=\"submit\" name=\"%s\" class=\"button\">%s<\/button>',\n\t\t\tesc_attr( $this->input_name ),\n\t\t\tesc_html( $this->label ? $this->label : $this->name )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/front-end\/mce-strings.php","ext":"php","size":1750,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * For some reason, WordPress requires that TinyMCE translations be hosted in an external file. So that's what this is.\n *\n * @package Code_Snippets\n *\/\n\nnamespace Code_Snippets;\n\nuse _WP_Editors;\n\n\/**\n * Variable types.\n *\n * @var array<string, string|array<string, Snippet[]>> $strings\n *\/\n\n$strings = [\n\t'insert_content_menu'  => __( 'Content Snippet', 'code-snippets' ),\n\t'insert_content_title' => __( 'Insert Content Snippet', 'code-snippets' ),\n\t'snippet_label'        => __( 'Snippet', 'code-snippets' ),\n\t'php_att_label'        => __( 'Run PHP code', 'code-snippets' ),\n\t'format_att_label'     => __( 'Apply formatting', 'code-snippets' ),\n\t'shortcodes_att_label' => __( 'Enable shortcodes', 'code-snippets' ),\n\n\t'insert_source_menu'      => __( 'Snippet Source Code', 'code-snippets' ),\n\t'insert_source_title'     => __( 'Insert Snippet Source', 'code-snippets' ),\n\t'show_line_numbers_label' => __( 'Show line numbers', 'code-snippets' ),\n];\n\n$strings = array_map( 'esc_js', $strings );\n\n$snippets = get_snippets();\n\n$strings['all_snippets'] = [];\n$strings['content_snippets'] = [];\n\nforeach ( $snippets as $snippet ) {\n\tif ( 'content' === $snippet->scope ) {\n\t\t$strings['content_snippets'][ $snippet->id ] = $snippet->display_name;\n\t}\n\n\t$strings['all_snippets'][ $snippet->id ] = sprintf(\n\t\t'%s (%s)',\n\t\t$snippet->display_name,\n\t\tstrtoupper( $snippet->type )\n\t);\n}\n\nasort( $strings['all_snippets'], SORT_STRING | SORT_FLAG_CASE );\nasort( $strings['content_snippets'], SORT_STRING | SORT_FLAG_CASE );\n\n$strings = [ _WP_Editors::$mce_locale => [ 'code_snippets' => $strings ] ];\n\/** $strings is used by outer file. @noinspection PhpUnusedLocalVariableInspection *\/\n$strings = 'tinyMCE.addI18n(' . wp_json_encode( $strings ) . ');';\n"},{"base":"plugins","rel":"code-snippets\/php\/front-end\/class-front-end.php","ext":"php","size":11867,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse WP_Post;\nuse WP_REST_Response;\nuse WP_REST_Server;\n\n\/**\n * This class manages the shortcodes included with the plugin,\n *\n * @package Code_Snippets\n *\/\nclass Front_End {\n\n\t\/**\n\t * Name of the shortcode tag for rendering the code source\n\t *\/\n\tpublic const SOURCE_SHORTCODE = 'code_snippet_source';\n\n\t\/**\n\t * Name of the shortcode tag for rendering content snippets\n\t *\/\n\tpublic const CONTENT_SHORTCODE = 'code_snippet';\n\n\t\/**\n\t * Handle to use for front-end scripts and styles.\n\t *\/\n\tpublic const PRISM_HANDLE = 'code-snippets-prism';\n\n\t\/**\n\t * Class constructor\n\t *\/\n\tpublic function __construct() {\n\t\tadd_action( 'the_posts', [ $this, 'enqueue_highlighting' ] );\n\t\tadd_action( 'init', [ $this, 'setup_mce_plugin' ] );\n\n\t\tadd_shortcode( self::CONTENT_SHORTCODE, [ $this, 'render_content_shortcode' ] );\n\t\tadd_shortcode( self::SOURCE_SHORTCODE, [ $this, 'render_source_shortcode' ] );\n\n\t\tadd_filter( 'code_snippets\/render_content_shortcode', 'trim' );\n\t}\n\n\t\/**\n\t * Register REST API routes for use in front-end plugins.\n\t *\n\t * @return void\n\t *\/\n\tpublic function register_rest_routes() {\n\t\tregister_rest_route(\n\t\t\t'v1\/snippets',\n\t\t\t'\/snippets-info',\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'callback'            => [ $this, 'get_snippets_info' ],\n\t\t\t\t'permission_callback' => function () {\n\t\t\t\t\treturn current_user_can( 'edit_posts' );\n\t\t\t\t},\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Fetch snippets data in response to a request.\n\t *\n\t * @return WP_REST_Response\n\t *\/\n\tpublic function get_snippets_info(): WP_REST_Response {\n\t\t$snippets = get_snippets();\n\t\t$data = [];\n\n\t\tforeach ( $snippets as $snippet ) {\n\t\t\t$data[] = [\n\t\t\t\t'id'     => $snippet->id,\n\t\t\t\t'name'   => $snippet->name,\n\t\t\t\t'type'   => $snippet->type,\n\t\t\t\t'active' => $snippet->active,\n\t\t\t];\n\t\t}\n\n\t\treturn new WP_REST_Response( $data, 200 );\n\t}\n\n\t\/**\n\t * Perform the necessary actions to add a button to the TinyMCE editor\n\t *\/\n\tpublic function setup_mce_plugin() {\n\t\tif ( ! code_snippets()->current_user_can() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/* Register the TinyMCE plugin *\/\n\t\tadd_filter(\n\t\t\t'mce_external_plugins',\n\t\t\tfunction ( $plugins ) {\n\t\t\t\t$plugins['code_snippets'] = plugins_url( 'dist\/mce.js', PLUGIN_FILE );\n\t\t\t\treturn $plugins;\n\t\t\t}\n\t\t);\n\n\t\t\/* Add the button to the editor toolbar *\/\n\t\tadd_filter(\n\t\t\t'mce_buttons',\n\t\t\tfunction ( $buttons ) {\n\t\t\t\t$buttons[] = 'code_snippets';\n\t\t\t\treturn $buttons;\n\t\t\t}\n\t\t);\n\n\t\t\/* Add the translation strings to the TinyMCE editor *\/\n\t\tadd_filter(\n\t\t\t'mce_external_languages',\n\t\t\tfunction ( $languages ) {\n\t\t\t\t$languages['code_snippets'] = __DIR__ . '\/mce-strings.php';\n\t\t\t\treturn $languages;\n\t\t\t}\n\t\t);\n\t}\n\n\t\/**\n\t * Enqueue the syntax highlighting assets if they are required for the current posts\n\t *\n\t * @param array<WP_Post|int>|null|false $posts List of currently visible posts.\n\t *\n\t * @return array<WP_Post|int>|null|false Unchanged list of posts.\n\t *\/\n\tpublic function enqueue_highlighting( $posts ) {\n\n\t\t\/\/ Exit early if there are no posts to check or if the highlighter has been disabled.\n\t\tif ( empty( $posts ) || Settings\\get_setting( 'general', 'disable_prism' ) ) {\n\t\t\treturn $posts;\n\t\t}\n\n\t\t\/\/ Loop through the posts, checking for an existing shortcode, short-circuiting if possible.\n\t\t$found_shortcode_content = null;\n\n\t\tforeach ( $posts as $post ) {\n\t\t\tif ( false !== stripos( $post->post_content, '[' . self::SOURCE_SHORTCODE ) ||\n\t\t\t     false !== strpos( $post->post_content, '<!-- wp:code-snippets\/source ' ) ) {\n\t\t\t\t$found_shortcode_content = $post->post_content;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Load assets on the appropriate hook if a matching shortcode was found.\n\t\tif ( null !== $found_shortcode_content ) {\n\t\t\t$this->register_prism_assets();\n\n\t\t\tadd_action(\n\t\t\t\t'wp_enqueue_scripts',\n\t\t\t\tfunction () {\n\t\t\t\t\twp_enqueue_style( self::PRISM_HANDLE );\n\t\t\t\t\twp_enqueue_script( self::PRISM_HANDLE );\n\t\t\t\t},\n\t\t\t\t100\n\t\t\t);\n\t\t}\n\n\t\treturn $posts;\n\t}\n\n\t\/**\n\t * Enqueue the styles and scripts for the Prism syntax highlighter.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function register_prism_assets() {\n\t\t$plugin = code_snippets();\n\n\t\twp_register_script(\n\t\t\tself::PRISM_HANDLE,\n\t\t\tplugins_url( 'dist\/prism.js', $plugin->file ),\n\t\t\tarray(),\n\t\t\t$plugin->version,\n\t\t\ttrue\n\t\t);\n\n\t\twp_register_style(\n\t\t\tself::PRISM_HANDLE,\n\t\t\tplugins_url( 'dist\/prism.css', $plugin->file ),\n\t\t\tarray(),\n\t\t\t$plugin->version\n\t\t);\n\t}\n\n\t\/**\n\t * Enqueue all available Prism themes.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function enqueue_all_prism_themes() {\n\t\tself::register_prism_assets();\n\n\t\twp_enqueue_style( self::PRISM_HANDLE );\n\t\twp_enqueue_script( self::PRISM_HANDLE );\n\t}\n\n\t\/**\n\t * Print a message to the user if the snippet ID attribute is invalid.\n\t *\n\t * @param integer $id Snippet ID.\n\t *\n\t * @return string Warning message.\n\t *\/\n\tprotected function invalid_id_warning( int $id ): string {\n\t\t\/\/ translators: %d: snippet ID.\n\t\t$text = esc_html__( 'Could not load snippet with an invalid ID: %d.', 'code-snippets' );\n\t\treturn current_user_can( 'edit_posts' ) ? sprintf( $text, $id ) : '';\n\t}\n\n\t\/**\n\t * Allow boolean attributes to be provided without a value, similar to how React works.\n\t *\n\t * @param array<string|number, mixed> $atts          Unfiltered shortcode attributes.\n\t * @param array<string>               $boolean_flags List of attribute names with boolean values.\n\t *\n\t * @return array<string|number, mixed> Shortcode attributes with flags converted to attributes.\n\t *\/\n\tprotected function convert_boolean_attribute_flags( array $atts, array $boolean_flags ): array {\n\t\tforeach ( $atts as $key => $value ) {\n\t\t\tif ( in_array( $value, $boolean_flags, true ) && ! isset( $atts[ $value ] ) ) {\n\t\t\t\t$atts[ $value ] = true;\n\t\t\t\tunset( $atts[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn $atts;\n\t}\n\n\t\/**\n\t * Evaluate the code from a content shortcode.\n\t *\n\t * @param Snippet              $snippet Snippet.\n\t * @param array<string, mixed> $atts    Shortcode attributes.\n\t *\n\t * @return string Evaluated shortcode content.\n\t *\/\n\tprotected function evaluate_shortcode_content( Snippet $snippet, array $atts ): string {\n\t\tif ( empty( $atts['php'] ) ) {\n\t\t\treturn $snippet->code;\n\t\t}\n\n\t\t\/**\n\t\t * Avoiding extract is typically recommended, however in this situation we want to make it easy for snippet\n\t\t * authors to use custom attributes.\n\t\t *\n\t\t * @phpcs:disable WordPress.PHP.DontExtract.extract_extract\n\t\t *\/\n\t\textract( $atts );\n\n\t\tob_start();\n\t\teval( \"?>\\n\\n\" . $snippet->code );\n\n\t\treturn ob_get_clean();\n\t}\n\n\t\/**\n\t * Render the value of a content shortcode\n\t *\n\t * @param array<string, mixed> $atts Shortcode attributes.\n\t *\n\t * @return string Shortcode content.\n\t *\/\n\tpublic function render_content_shortcode( array $atts ): string {\n\t\t$atts = $this->convert_boolean_attribute_flags( $atts, [ 'network', 'php', 'format', 'shortcodes', 'debug' ] );\n\t\t$original_atts = $atts;\n\n\t\t$atts = shortcode_atts(\n\t\t\t[\n\t\t\t\t'id'         => 0,\n\t\t\t\t'snippet_id' => 0,\n\t\t\t\t'network'    => false,\n\t\t\t\t'php'        => false,\n\t\t\t\t'format'     => false,\n\t\t\t\t'shortcodes' => false,\n\t\t\t\t'debug'      => false,\n\t\t\t],\n\t\t\t$atts,\n\t\t\tself::CONTENT_SHORTCODE\n\t\t);\n\n\t\t$id = 0 !== intval( $atts['snippet_id'] ) ? intval( $atts['snippet_id'] ) : intval( $atts['id'] );\n\t\tif ( ! $id ) {\n\t\t\treturn $this->invalid_id_warning( $id );\n\t\t}\n\n\t\t$snippet = get_snippet( $id, (bool) $atts['network'] );\n\n\t\t\/\/ Render the source code if this is not a shortcode snippet.\n\t\tif ( 'content' !== $snippet->scope ) {\n\t\t\treturn $snippet->id ? $this->render_snippet_source( $snippet ) : $this->invalid_id_warning( $snippet->id );\n\t\t}\n\n\t\t\/\/ If the snippet is inactive, either display a message or render nothing.\n\t\tif ( ! $snippet->active ) {\n\t\t\tif ( ! $atts['debug'] ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t\/* translators: 1: snippet name, 2: snippet edit link *\/\n\t\t\t$text = __( '%1$s is currently inactive. You can <a href=\"%2$s\">edit this snippet<\/a> to activate it and make it visible. This message will not appear in the published post.', 'code-snippets' );\n\t\t\t$snippet_name = '<strong>' . $snippet->name . '<\/strong>';\n\t\t\t$edit_url = add_query_arg( 'id', $snippet->id, code_snippets()->get_menu_url( 'edit' ) );\n\n\t\t\treturn wp_kses(\n\t\t\t\tsprintf( $text, $snippet_name, $edit_url ),\n\t\t\t\t[\n\t\t\t\t\t'strong' => [],\n\t\t\t\t\t'a'      => [\n\t\t\t\t\t\t'href' => [],\n\t\t\t\t\t],\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$content = $this->evaluate_shortcode_content( $snippet, $original_atts );\n\n\t\tif ( $atts['format'] ) {\n\t\t\t$functions = [ 'wptexturize', 'convert_smilies', 'convert_chars', 'wpautop', 'capital_P_dangit' ];\n\t\t\tforeach ( $functions as $function ) {\n\t\t\t\t$content = call_user_func( $function, $content );\n\t\t\t}\n\t\t}\n\n\t\tif ( $atts['shortcodes'] ) {\n\t\t\t\/\/ Temporarily remove this shortcode from the list to prevent recursion while executing do_shortcode.\n\t\t\tremove_shortcode( self::CONTENT_SHORTCODE );\n\t\t\t$content = do_shortcode( $atts['format'] ? shortcode_unautop( $content ) : $content );\n\t\t\tadd_shortcode( self::CONTENT_SHORTCODE, [ $this, 'render_content_shortcode' ] );\n\t\t}\n\n\t\treturn apply_filters( 'code_snippets\/content_shortcode', $content, $snippet, $atts, $original_atts );\n\t}\n\n\t\/**\n\t * Converts a value and key into an HTML attribute pair.\n\t *\n\t * @param string $value Attribute value.\n\t * @param string $key   Attribute name.\n\t *\n\t * @return void\n\t *\/\n\tprivate static function create_attribute_pair( string &$value, string $key ) {\n\t\t$value = sprintf( '%s=\"%s\"', sanitize_key( $key ), esc_attr( $value ) );\n\t}\n\n\t\/**\n\t * Render the source code of a given snippet\n\t *\n\t * @param Snippet              $snippet Snippet object.\n\t * @param array<string, mixed> $atts    Shortcode attributes.\n\t *\n\t * @return string Shortcode content.\n\t *\/\n\tprivate function render_snippet_source( Snippet $snippet, array $atts = [] ): string {\n\t\t$atts = array_merge(\n\t\t\tarray(\n\t\t\t\t'line_numbers'    => false,\n\t\t\t\t'highlight_lines' => '',\n\t\t\t),\n\t\t\t$atts\n\t\t);\n\n\t\t$language = 'css' === $snippet->type ? 'css' : ( 'js' === $snippet->type ? 'js' : 'php' );\n\n\t\t$pre_attributes = array(\n\t\t\t'id'    => \"code-snippet-source-$snippet->id\",\n\t\t\t'class' => 'code-snippet-source',\n\t\t);\n\n\t\t$code_attributes = array(\n\t\t\t'class' => \"language-$language\",\n\t\t);\n\n\t\tif ( $atts['line_numbers'] ) {\n\t\t\t$code_attributes['class'] .= ' line-numbers';\n\t\t\t$pre_attributes['class'] .= ' linkable-line-numbers';\n\t\t}\n\n\t\tif ( $atts['highlight_lines'] ) {\n\t\t\t$pre_attributes['data-line'] = $atts['highlight_lines'];\n\t\t}\n\n\t\t$pre_attributes = apply_filters( 'code_snippets\/prism_pre_attributes', $pre_attributes, $snippet, $atts );\n\t\t$code_attributes = apply_filters( 'code_snippets\/prism_code_attributes', $code_attributes, $snippet, $atts );\n\n\t\tarray_walk( $code_attributes, array( $this, 'create_attribute_pair' ) );\n\t\tarray_walk( $pre_attributes, array( $this, 'create_attribute_pair' ) );\n\n\t\t$code = 'php' === $snippet->type ? \"<?php\\n\\n$snippet->code\" : $snippet->code;\n\n\t\t$output = sprintf(\n\t\t\t'<pre %s><code %s>%s<\/code><\/pre>',\n\t\t\timplode( ' ', $pre_attributes ),\n\t\t\timplode( ' ', $code_attributes ),\n\t\t\tesc_html( $code )\n\t\t);\n\n\t\treturn apply_filters( 'code_snippets\/render_source_shortcode', $output, $snippet, $atts );\n\t}\n\n\t\/**\n\t * Render the value of a source shortcode\n\t *\n\t * @param array<string, mixed> $atts Shortcode attributes.\n\t *\n\t * @return string Shortcode content.\n\t *\/\n\tpublic function render_source_shortcode( array $atts ): string {\n\t\t$atts = $this->convert_boolean_attribute_flags( $atts, [ 'network', 'line_numbers' ] );\n\n\t\t$atts = shortcode_atts(\n\t\t\tarray(\n\t\t\t\t'id'              => 0,\n\t\t\t\t'snippet_id'      => 0,\n\t\t\t\t'network'         => false,\n\t\t\t\t'line_numbers'    => false,\n\t\t\t\t'highlight_lines' => '',\n\t\t\t),\n\t\t\t$atts,\n\t\t\tself::SOURCE_SHORTCODE\n\t\t);\n\n\t\t$id = 0 !== intval( $atts['snippet_id'] ) ? intval( $atts['snippet_id'] ) : intval( $atts['id'] );\n\t\tif ( ! $id ) {\n\t\t\treturn $this->invalid_id_warning( $id );\n\t\t}\n\n\t\t$snippet = get_snippet( $id, (bool) $atts['network'] );\n\n\t\treturn $this->render_snippet_source( $snippet, $atts );\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/deactivation-notice.php","ext":"php","size":1991,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * File loaded when the plugin cannot be activated.\n *\n * All code in this file should be compatible with PHP 5.2 or later.\n *\n * @package      Code_Snippets\n *\n * @noinspection PhpNestedDirNameCallsCanBeReplacedWithLevelParameterInspection\n *\n * phpcs:disable Modernize.FunctionCalls.Dirname.FileConstant\n *\/\n\nif ( ! defined( 'ABSPATH' ) || function_exists( 'code_snippets_deactivation_notice' ) ) {\n\treturn;\n}\n\n\/**\n * Deactivate the plugin and display a notice informing the user that this has happened.\n *\n * @return void\n *\n * @since 3.3.0\n *\/\nfunction code_snippets_deactivation_notice() {\n\t$plugins = array();\n\t$required_php_version = '7.4';\n\n\tif ( version_compare( phpversion(), $required_php_version, '<' ) ) {\n\t\techo '<div class=\"error fade\"><p><strong>';\n\t\t\/\/ translators: %s: required PHP version number.\n\t\techo esc_html( sprintf( __( 'Code Snippets requires PHP %s or later.', 'code-snippets' ), $required_php_version ) );\n\t\techo '<\/strong><br>';\n\n\t\t$update_url = function_exists( 'wp_get_default_update_php_url' ) ?\n\t\t\twp_get_default_update_php_url() :\n\t\t\t'https:\/\/wordpress.org\/support\/update-php\/';\n\n\t\t\/\/ translators: %s: Update PHP URL.\n\t\t$text = __( 'Please <a href=\"%s\">upgrade your server to the latest version of PHP<\/a> to continue using Code Snippets.', 'code-snippets' );\n\n\t\techo wp_kses( sprintf( $text, $update_url ), array( 'a' => array( 'href' => array() ) ) );\n\t\techo '<\/p><\/div>';\n\n\t\t$plugins[] = plugin_basename( dirname( dirname( __FILE__ ) ) . '\/code-snippets.php' );\n\t}\n\n\tif ( defined( 'CODE_SNIPPETS_FILE' ) ) {\n\t\techo '<div class=\"error fade\"><p>';\n\t\tesc_html_e( 'Another version of Code Snippets appears to be installed. Deactivating this version.', 'code-snippets' );\n\t\techo '<\/p><\/div>';\n\n\t\t$plugins[] = 'code-snippets\/code-snippets.php';\n\t}\n\n\tif ( $plugins ) {\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/plugin.php';\n\t\tdeactivate_plugins( array_unique( $plugins ) );\n\t}\n}\n\nadd_action( 'admin_notices', 'code_snippets_deactivation_notice' );\n"},{"base":"plugins","rel":"code-snippets\/php\/class-upgrade.php","ext":"php","size":6712,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse WP_User;\n\n\/**\n * Manages upgrade tasks such as deleting and updating options\n *\/\nclass Upgrade {\n\n\t\/**\n\t * Instance of database class\n\t *\n\t * @var DB\n\t *\/\n\tprivate DB $db;\n\n\t\/**\n\t * The current plugin version number\n\t *\n\t * @var string\n\t *\/\n\tprivate string $current_version;\n\n\t\/**\n\t * Class constructor\n\t *\n\t * @param string $version Current plugin version.\n\t * @param DB     $db      Instance of database class.\n\t *\/\n\tpublic function __construct( string $version, DB $db ) {\n\t\t$this->db = $db;\n\t\t$this->current_version = $version;\n\t}\n\n\t\/**\n\t * Run the upgrade functions\n\t *\/\n\tpublic function run() {\n\n\t\t\/\/ Always run multisite upgrades, even if not on the main site, as sub-sites depend on the network snippet table.\n\t\tif ( is_multisite() ) {\n\t\t\t$this->do_multisite_upgrades();\n\t\t}\n\n\t\t$this->do_site_upgrades();\n\t}\n\n\t\/**\n\t * Perform upgrades for the current site\n\t *\/\n\tprivate function do_site_upgrades() {\n\t\t$table_name = $this->db->table;\n\t\t$prev_version = get_option( 'code_snippets_version' );\n\n\t\t\/\/ Do nothing if the plugin has not just been updated or installed.\n\t\tif ( ! version_compare( $prev_version, $this->current_version, '<' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Update the plugin version stored in the database.\n\t\t$updated = update_option( 'code_snippets_version', $this->current_version );\n\n\t\tif ( ! $updated ) {\n\t\t\treturn; \/\/ Bail if the data was not successfully saved to prevent this process from repeating.\n\t\t}\n\n\t\t$this->db->create_table( $table_name );\n\n\t\t\/\/ Remove outdated user meta.\n\t\tif ( version_compare( $prev_version, '2.14.1', '<' ) ) {\n\t\t\tglobal $wpdb;\n\n\t\t\t$prefix = $wpdb->get_blog_prefix();\n\t\t\t$menu_slug = code_snippets()->get_menu_slug();\n\t\t\t$option_name = \"{$prefix}managetoplevel_page_{$menu_slug}columnshidden\";\n\n\t\t\t\/\/ Loop through each user ID and remove all matching user meta.\n\t\t\tforeach ( get_users( array( 'fields' => 'ID' ) ) as $user_id ) {\n\t\t\t\tdelete_metadata( 'user', $user_id, $option_name, '', true );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Update the scope column of the database.\n\t\tif ( version_compare( $prev_version, '2.10.0', '<' ) ) {\n\t\t\t$this->migrate_scope_data( $table_name );\n\t\t}\n\n\t\t\/\/ Custom capabilities were removed after version 2.9.5.\n\t\tif ( version_compare( $prev_version, '2.9.5', '<=' ) ) {\n\t\t\t$role = get_role( apply_filters( 'code_snippets_role', 'administrator' ) );\n\t\t\t$role->remove_cap( apply_filters( 'code_snippets_cap', 'manage_snippets' ) );\n\t\t}\n\n\t\tif ( false === $prev_version ) {\n\t\t\tadd_action( 'init', [ $this, 'create_sample_content' ] );\n\t\t}\n\n\t\tclean_snippets_cache( $table_name );\n\t\tWelcome_API::clear_cache();\n\t}\n\n\t\/**\n\t * Create example snippets.\n\t *\n\t * As this uses translation functions, this should not be called earlier than 'init'.\n\t *\n\t * @return void\n\t *\/\n\tpublic function create_sample_content() {\n\t\tif ( apply_filters( 'code_snippets\/create_sample_content', true ) ) {\n\t\t\t$sample_snippets = $this->get_sample_content();\n\t\t\tforeach ( $sample_snippets as $sample_snippet ) {\n\t\t\t\tsave_snippet( $sample_snippet );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Perform multisite-only upgrades\n\t *\/\n\tprivate function do_multisite_upgrades() {\n\t\t$table_name = $this->db->ms_table;\n\t\t$prev_version = get_site_option( 'code_snippets_version' );\n\n\t\t\/\/ Do nothing if the plugin has not been updated or installed.\n\t\tif ( ! version_compare( $prev_version, $this->current_version, '<' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Always attempt to create or upgrade the database tables.\n\t\t$this->db->create_table( $table_name );\n\n\t\t\/\/ Update the plugin version stored in the database.\n\t\tupdate_site_option( 'code_snippets_version', $this->current_version );\n\n\t\t\/\/ Update the scope column of the database.\n\t\tif ( version_compare( $prev_version, '2.10.0', '<' ) ) {\n\t\t\t$this->migrate_scope_data( $table_name );\n\t\t}\n\n\t\t\/\/ Custom capabilities were removed after version 2.9.5.\n\t\tif ( version_compare( $prev_version, '2.9.5', '<=' ) ) {\n\t\t\t$network_cap = apply_filters( 'code_snippets_network_cap', 'manage_network_snippets' );\n\n\t\t\tforeach ( get_super_admins() as $admin ) {\n\t\t\t\t$user = new WP_User( 0, $admin );\n\t\t\t\t$user->remove_cap( $network_cap );\n\t\t\t}\n\t\t}\n\n\t\tclean_snippets_cache( $table_name );\n\t}\n\n\t\/**\n\t * Migrate data from the old integer method of storing scopes to the new string method\n\t *\n\t * @param string $table_name Name of database table.\n\t *\/\n\tprivate function migrate_scope_data( string $table_name ) {\n\t\tglobal $wpdb;\n\n\t\t$scopes = array(\n\t\t\t0 => 'global',\n\t\t\t1 => 'admin',\n\t\t\t2 => 'front-end',\n\t\t);\n\n\t\tforeach ( $scopes as $scope_number => $scope_name ) {\n\t\t\t\/\/ phpcs:disable WordPress.DB.DirectDatabaseQuery.NoCaching, will flush at end of process.\n\t\t\t$wpdb->query(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"UPDATE $table_name SET scope = %s WHERE scope = %d\",\n\t\t\t\t\t$scope_name,\n\t\t\t\t\t$scope_number\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Build a collection of sample snippets for new users to try out.\n\t *\n\t * @return array<string, Snippet> List of Snippet objects.\n\t *\/\n\tprivate function get_sample_content(): array {\n\t\t$tag = \"\\n\\n\" . esc_html__( 'This is a sample snippet. Feel free to use it, edit it, or remove it.', 'code-snippets' );\n\n\t\t$snippets_data = array(\n\t\t\tarray(\n\t\t\t\t'name' => esc_html__( 'Make upload filenames lowercase', 'code-snippets' ),\n\t\t\t\t'code' => \"add_filter( 'sanitize_file_name', 'mb_strtolower' );\",\n\t\t\t\t'desc' => esc_html__( 'Makes sure that image and file uploads have lowercase filenames.', 'code-snippets' ) . $tag,\n\t\t\t\t'tags' => array( 'sample', 'media' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'name'  => esc_html__( 'Disable admin bar', 'code-snippets' ),\n\t\t\t\t'code'  => \"add_action( 'wp', function () {\\n\\tif ( ! current_user_can( 'manage_options' ) ) {\\n\\t\\tshow_admin_bar( false );\\n\\t}\\n} );\",\n\t\t\t\t'desc'  => esc_html__( 'Turns off the WordPress admin bar for everyone except administrators.', 'code-snippets' ) . $tag,\n\t\t\t\t'tags'  => array( 'sample', 'admin-bar' ),\n\t\t\t\t'scope' => 'front-end',\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'name' => esc_html__( 'Allow smilies', 'code-snippets' ),\n\t\t\t\t'code' => \"add_filter( 'widget_text', 'convert_smilies' );\\nadd_filter( 'the_title', 'convert_smilies' );\\nadd_filter( 'wp_title', 'convert_smilies' );\\nadd_filter( 'get_bloginfo', 'convert_smilies' );\",\n\t\t\t\t'desc' => esc_html__( 'Allows smiley conversion in obscure places.', 'code-snippets' ) . $tag,\n\t\t\t\t'tags' => array( 'sample' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'name'  => esc_html__( 'Current year', 'code-snippets' ),\n\t\t\t\t'code'  => \"<?php echo date( 'Y' ); ?>\",\n\t\t\t\t'desc'  => esc_html__( 'Shortcode for inserting the current year into a post or page..', 'code-snippets' ) . $tag,\n\t\t\t\t'tags'  => array( 'sample', 'dates' ),\n\t\t\t\t'scope' => 'content',\n\t\t\t),\n\t\t);\n\n\t\treturn array_map(\n\t\t\tfunction ( $snippet_data ) {\n\t\t\t\treturn new Snippet( $snippet_data );\n\t\t\t},\n\t\t\t$snippets_data\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/strings.php","ext":"php","size":1846,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Additional strings needed for translation, but not currently present within code.\n *\n * @package Code_Snippets\n *\/\n\n__( 'You can now safely remove the free version of Code Snippets', 'code-snippets' );\n\n__( 'Success', 'code-snippets' );\n__( 'Notice', 'code-snippets' );\n__( 'Thanks', 'code-snippets' );\n__( 'Ok', 'code-snippets' );\n\n\/\/ settings-fields.php.\n__( 'Minify Snippet Output', 'code-snippets' );\n__( 'Minify snippet output by removing whitespace and optimizing code to reduce load times.', 'code-snippets' );\n\n\/\/ edit.php.\n__( 'View Full Stylesheet', 'code-snippets' );\n__( 'View Full Script', 'code-snippets' );\n\narray(\n\t'site-css'       => __( 'Site front-end stylesheet', 'code-snippets' ),\n\t'admin-css'      => __( 'Administration area stylesheet', 'code-snippets' ),\n\t'site-head-js'   => __( 'JavaScript loaded in the site &amp;lt;head&amp;gt; section', 'code-snippets' ),\n\t'site-footer-js' => __( 'JavaScript loaded just before the closing &amp;lt;\/body&amp;gt; tag', 'code-snippets' ),\n);\n\n\/\/ class-content-widget.php.\n__( 'Processing Options', 'code-snippets' );\n__( 'Alignment', 'code-snippets' );\n__( 'Left', 'code-snippets' );\n__( 'Center', 'code-snippets' );\n__( 'Right', 'code-snippets' );\n__( 'Justified', 'code-snippets' );\n__( 'Text Color', 'code-snippets' );\n__( 'Select a snippet to show', 'code-snippets' );\n\n\/\/ class-source-widget.php.\n__( 'Code Snippet Source', 'code-snippets' );\n__( 'Functions (PHP)', 'code-snippets' );\n__( 'Content (Mixed)', 'code-snippets' );\n__( 'Styles (CSS)', 'code-snippets' );\n__( 'Scripts (JS)', 'code-snippets' );\n__( 'Highlight Lines', 'code-snippets' );\n__( 'Word Wrap', 'code-snippets' );\n__( 'On', 'code-snippets' );\n__( 'Off', 'code-snippets' );\n__( 'Height', 'code-snippets' );\n__( 'Font Size', 'code-snippets' );\n__( 'Select a snippet to display', 'code-snippets' );\n"},{"base":"plugins","rel":"code-snippets\/php\/uninstall.php","ext":"php","size":2129,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Functions for cleaning data when the plugin is uninstalled.\n *\n * @package Code_Snippets\n *\n * phpcs:disable WordPress.DB.DirectDatabaseQuery.NoCaching\n *\/\n\nnamespace Code_Snippets\\Uninstall;\n\n\/**\n * Determine whether the option for allowing a complete uninstallation is enabled.\n *\n * @return boolean\n *\/\nfunction complete_uninstall_enabled(): bool {\n\t$unified = false;\n\n\tif ( is_multisite() ) {\n\t\t$menu_perms = get_site_option( 'menu_items', array() );\n\t\t$unified = empty( $menu_perms['snippets_settings'] );\n\t}\n\n\t$settings = $unified ? get_site_option( 'code_snippets_settings' ) : get_option( 'code_snippets_settings' );\n\n\treturn isset( $settings['general']['complete_uninstall'] ) && $settings['general']['complete_uninstall'];\n}\n\n\/**\n * Clean up data created by this plugin for a single site\n *\n * phpcs:disable WordPress.DB.DirectDatabaseQuery.SchemaChange\n *\/\nfunction uninstall_current_site() {\n\tglobal $wpdb;\n\n\t$wpdb->query( \"DROP TABLE IF EXISTS {$wpdb->prefix}snippets\" );\n\n\tdelete_option( 'code_snippets_version' );\n\tdelete_option( 'recently_activated_snippets' );\n\tdelete_option( 'code_snippets_settings' );\n\n\tdelete_option( 'code_snippets_cloud_settings' );\n\tdelete_transient( 'cs_codevault_snippets' );\n\tdelete_transient( 'cs_local_to_cloud_map' );\n}\n\n\/**\n * Clean up data created by this plugin on multisite.\n *\n * phpcs:disable WordPress.DB.DirectDatabaseQuery.SchemaChange\n *\/\nfunction uninstall_multisite() {\n\tglobal $wpdb;\n\n\t\/\/ Loop through sites.\n\t$blog_ids = get_sites( [ 'fields' => 'ids' ] );\n\n\tforeach ( $blog_ids as $site_id ) {\n\t\tswitch_to_blog( $site_id );\n\t\tuninstall_current_site();\n\t}\n\n\trestore_current_blog();\n\n\t\/\/ Remove network snippets table.\n\t$wpdb->query( \"DROP TABLE IF EXISTS {$wpdb->prefix}ms_snippets\" );\n\n\t\/\/ Remove saved options.\n\tdelete_site_option( 'code_snippets_version' );\n\tdelete_site_option( 'recently_activated_snippets' );\n}\n\n\/**\n * Uninstall the Code Snippets plugin.\n *\n * @return void\n *\/\nfunction uninstall_plugin() {\n\tif ( complete_uninstall_enabled() ) {\n\n\t\tif ( is_multisite() ) {\n\t\t\tuninstall_multisite();\n\t\t} else {\n\t\t\tuninstall_current_site();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/class-validator.php","ext":"php","size":7189,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\n\/**\n * Validates code prior to execution.\n *\n * @package Code_Snippets\n *\/\nclass Validator {\n\n\t\/**\n\t * Code to validate.\n\t *\n\t * @var string\n\t *\/\n\tprivate string $code;\n\n\t\/**\n\t * List of tokens.\n\t *\n\t * @var array<string>\n\t *\/\n\tprivate array $tokens;\n\n\t\/**\n\t * The index of the token currently being examined.\n\t *\n\t * @var integer\n\t *\/\n\tprivate int $current;\n\n\t\/**\n\t * The total number of tokens.\n\t *\n\t * @var integer\n\t *\/\n\tprivate int $length;\n\n\t\/**\n\t * Array to keep track of the various function, class and interface identifiers which have been defined.\n\t *\n\t * @var array<string, string[]>\n\t *\/\n\tprivate array $defined_identifiers = [];\n\n\t\/**\n\t * Exclude certain tokens from being checked.\n\t *\n\t * @var array<string, string[]>\n\t *\/\n\tprivate array $exceptions = [];\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param string $code Snippet code for parsing.\n\t *\/\n\tpublic function __construct( string $code ) {\n\t\t$this->code = $code;\n\t\t$this->tokens = token_get_all( \"<?php\\n\" . $this->code );\n\t\t$this->length = count( $this->tokens );\n\t\t$this->current = 0;\n\t}\n\n\t\/**\n\t * Determine whether the parser has reached the end of the list of tokens.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function end(): bool {\n\t\treturn $this->current === $this->length;\n\t}\n\n\t\/**\n\t * Retrieve the next token without moving the pointer\n\t *\n\t * @return string|array<string|int>|null The current token if the list has not been expended, null otherwise.\n\t *\/\n\tprivate function peek() {\n\t\treturn $this->end() ? null : $this->tokens[ $this->current ];\n\t}\n\n\t\/**\n\t * Move the pointer to the next token, if there is one.\n\t *\n\t * If the first argument is provided, only move the pointer if the tokens match.\n\t *\/\n\tprivate function next() {\n\t\tif ( ! $this->end() ) {\n\t\t\t++$this->current;\n\t\t}\n\t}\n\n\t\/**\n\t * Check whether a particular identifier has been used previously.\n\t *\n\t * @param string $type       Which type of identifier this is. Supports T_FUNCTION, T_CLASS and T_INTERFACE.\n\t * @param string $identifier The name of the identifier itself.\n\t *\n\t * @return bool true if the identifier is not unique.\n\t *\/\n\tprivate function check_duplicate_identifier( string $type, string $identifier ): bool {\n\n\t\tif ( ! isset( $this->defined_identifiers[ $type ] ) ) {\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase T_FUNCTION:\n\t\t\t\t\t$defined_functions = get_defined_functions();\n\t\t\t\t\t$this->defined_identifiers[ T_FUNCTION ] = array_merge( $defined_functions['internal'], $defined_functions['user'] );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase T_CLASS:\n\t\t\t\t\t$this->defined_identifiers[ T_CLASS ] = get_declared_classes();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase T_INTERFACE:\n\t\t\t\t\t$this->defined_identifiers[ T_INTERFACE ] = get_declared_interfaces();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t$duplicate = in_array( $identifier, $this->defined_identifiers[ $type ], true );\n\t\tarray_unshift( $this->defined_identifiers[ $type ], $identifier );\n\n\t\treturn $duplicate && ! ( isset( $this->exceptions[ $type ] ) && in_array( $identifier, $this->exceptions[ $type ], true ) );\n\t}\n\n\t\/**\n\t * Validate the given PHP code and return the result.\n\t *\n\t * @return array<string, mixed>|false Array containing message if an error was encountered, false if validation was successful.\n\t *\/\n\tpublic function validate() {\n\n\t\twhile ( ! $this->end() ) {\n\t\t\t$token = $this->peek();\n\t\t\t$this->next();\n\n\t\t\tif ( ! is_array( $token ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ If this is a function or class exists check, then allow this function or class to be defined.\n\t\t\tif ( T_STRING === $token[0] && ( 'function_exists' === $token[1] || 'class_exists' === $token[1] ) ) {\n\t\t\t\t$type = 'function_exists' === $token[1] ? T_FUNCTION : T_CLASS;\n\n\t\t\t\t\/\/ Eat tokens until we find the function or class name.\n\t\t\t\twhile ( ! $this->end() && T_CONSTANT_ENCAPSED_STRING !== $token[0] ) {\n\t\t\t\t\t$token = $this->peek();\n\t\t\t\t\t$this->next();\n\t\t\t\t}\n\n\t\t\t\t\/\/ Add the identifier to the list of exceptions.\n\t\t\t\t$this->exceptions[ $type ] = $this->exceptions[ $type ] ?? [];\n\t\t\t\t$this->exceptions[ $type ][] = trim( $token[1], '\\'\"' );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ If we have a double colon, followed by a class, then consume it before the next section.\n\t\t\tif ( T_DOUBLE_COLON === $token[0] ) {\n\t\t\t\t$token = $this->peek();\n\t\t\t\t$this->next();\n\n\t\t\t\tif ( T_CLASS === $token[0] ) {\n\t\t\t\t\t$this->next();\n\t\t\t\t\t$token = $this->peek();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/ Only look for class and function declaration tokens.\n\t\t\tif ( T_CLASS !== $token[0] && T_FUNCTION !== $token[0] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/**\n\t\t\t * Ensure the type of $token is inferred correctly.\n\t\t\t *\n\t\t\t * @var string|array<string|int> $token\n\t\t\t *\/\n\t\t\t$structure_type = $token[0];\n\n\t\t\t\/\/ Continue eating tokens until we find the name of the class or function.\n\t\t\twhile ( ! $this->end() && T_STRING !== $token[0] &&\n\t\t\t        ( T_FUNCTION !== $structure_type || '(' !== $token ) && ( T_CLASS !== $structure_type || '{' !== $token ) ) {\n\t\t\t\t$token = $this->peek();\n\t\t\t\t$this->next();\n\t\t\t}\n\n\t\t\t\/\/ If we've eaten all the tokens without discovering a name, then there must be a syntax error, so return appropriately.\n\t\t\tif ( $this->end() ) {\n\t\t\t\treturn array(\n\t\t\t\t\t'message' => __( 'Parse error: syntax error, unexpected end of snippet.', 'code-snippets' ),\n\t\t\t\t\t'line'    => $token[2],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t\/\/ If the function or class is anonymous, with no name, then no need to check.\n\t\t\tif ( ! ( T_FUNCTION === $structure_type && '(' === $token ) && ! ( T_CLASS === $structure_type && '{' === $token ) ) {\n\n\t\t\t\t\/\/ Check whether the name has already been defined.\n\t\t\t\tif ( $this->check_duplicate_identifier( $structure_type, $token[1] ) ) {\n\t\t\t\t\tswitch ( $structure_type ) {\n\t\t\t\t\t\tcase T_FUNCTION:\n\t\t\t\t\t\t\t\/* translators: %s: PHP function name *\/\n\t\t\t\t\t\t\t$message = __( 'Cannot redeclare function %s.', 'code-snippets' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase T_CLASS:\n\t\t\t\t\t\t\t\/* translators: %s: PHP class name *\/\n\t\t\t\t\t\t\t$message = __( 'Cannot redeclare class %s.', 'code-snippets' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase T_INTERFACE:\n\t\t\t\t\t\t\t\/* translators: %s: PHP interface name *\/\n\t\t\t\t\t\t\t$message = __( 'Cannot redeclare interface %s.', 'code-snippets' );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\/* translators: %s: PHP identifier name*\/\n\t\t\t\t\t\t\t$message = __( 'Cannot redeclare %s.', 'code-snippets' );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array(\n\t\t\t\t\t\t'message' => sprintf( $message, $token[1] ),\n\t\t\t\t\t\t'line'    => $token[2],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/ If we have entered into a class, eat tokens until we find the closing brace.\n\t\t\tif ( T_CLASS !== $structure_type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Find the opening brace for the class.\n\t\t\twhile ( ! $this->end() && '{' !== $token ) {\n\t\t\t\t$token = $this->peek();\n\t\t\t\t$this->next();\n\t\t\t}\n\n\t\t\t\/\/ Continue traversing the class tokens until we have found the class closing brace.\n\t\t\t$depth = 1;\n\t\t\twhile ( ! $this->end() && $depth > 0 ) {\n\t\t\t\t$token = $this->peek();\n\n\t\t\t\tif ( '{' === $token ) {\n\t\t\t\t\t++$depth;\n\t\t\t\t} elseif ( '}' === $token ) {\n\t\t\t\t\t--$depth;\n\t\t\t\t}\n\n\t\t\t\t$this->next();\n\t\t\t}\n\n\t\t\t\/\/ If we did not make it out of the class, then there's a problem.\n\t\t\tif ( $depth > 0 ) {\n\t\t\t\treturn array(\n\t\t\t\t\t'message' => __( 'Parse error: syntax error, unexpected end of snippet.', 'code-snippets' ),\n\t\t\t\t\t'line'    => $token[2],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/class-snippet.php","ext":"php","size":13644,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse DateTime;\nuse DateTimeZone;\nuse Exception;\n\n\/**\n * A snippet object.\n *\n * @since   2.4.0\n * @package Code_Snippets\n *\n * @property int                    $id                 The database ID.\n * @property string                 $name               The snippet title.\n * @property string                 $desc               The formatted description.\n * @property string                 $code               The executable code.\n * @property array<string>          $tags               An array of the tags.\n * @property string                 $scope              The scope name.\n * @property int                    $condition_id       ID of the condition this snippet is linked to.\n * @property int                    $priority           Execution priority.\n * @property bool                   $active             The active status.\n * @property bool                   $network            true if is multisite-wide snippet, false if site-wide.\n * @property bool                   $shared_network     Whether the snippet is a shared network snippet.\n * @property string                 $modified           The date and time when the snippet data was most recently saved to the database.\n * @property array{string,int}|null $code_error         Code error encountered when last testing snippet code.\n * @property int                    $revision           Revision or version number of snippet.\n * @property string                 $cloud_id           Cloud ID and ownership status of snippet.\n *\n * @property-read string            $display_name       The snippet name if it exists or a placeholder if it does not.\n * @property-read string            $tags_list          The tags in string list format.\n * @property-read string            $scope_icon         The dashicon used to represent the current scope.\n * @property-read string            $scope_name         Human-readable description of the snippet type.\n * @property-read string            $type               The type of snippet.\n * @property-read string            $lang               The language that the snippet code is written in.\n * @property-read int               $modified_timestamp The last modification date in Unix timestamp format.\n * @property-read DateTime          $modified_local     The last modification date in the local timezone.\n * @property-read boolean           $is_pro             Whether the snippet type is pro-only.\n *\/\nclass Snippet extends Data_Item {\n\n\t\/**\n\t * MySQL datetime format (YYYY-MM-DD hh:mm:ss).\n\t *\/\n\tpublic const DATE_FORMAT = 'Y-m-d H:i:s';\n\n\t\/**\n\t * Default value used for a datetime variable.\n\t *\/\n\tpublic const DEFAULT_DATE = '0000-00-00 00:00:00';\n\n\t\/**\n\t * Constructor function.\n\t *\n\t * @param array<string, mixed>|object $initial_data Initial snippet data.\n\t *\/\n\tpublic function __construct( $initial_data = null ) {\n\t\t$default_values = array(\n\t\t\t'id'             => 0,\n\t\t\t'name'           => '',\n\t\t\t'desc'           => '',\n\t\t\t'code'           => '',\n\t\t\t'tags'           => array(),\n\t\t\t'scope'          => 'global',\n\t\t\t'condition_id'   => 0,\n\t\t\t'active'         => false,\n\t\t\t'priority'       => 10,\n\t\t\t'network'        => null,\n\t\t\t'shared_network' => null,\n\t\t\t'modified'       => null,\n\t\t\t'code_error'     => null,\n\t\t\t'revision'       => 1,\n\t\t\t'cloud_id'       => '',\n\t\t);\n\n\t\t$field_aliases = array(\n\t\t\t'description' => 'desc',\n\t\t\t'language'    => 'lang',\n\t\t\t'conditionId' => 'condition_id',\n\t\t);\n\n\t\tparent::__construct( $default_values, $initial_data, $field_aliases );\n\t}\n\n\t\/**\n\t * Add a new tag\n\t *\n\t * @param string $tag Tag content to add to list.\n\t *\/\n\tpublic function add_tag( string $tag ) {\n\t\t$this->fields['tags'][] = $tag;\n\t}\n\n\t\/**\n\t * Determine if the snippet is a condition.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_condition(): bool {\n\t\treturn 'condition' === $this->scope;\n\t}\n\n\t\/**\n\t * Prepare a value before it is stored.\n\t *\n\t * @param mixed  $value Value to prepare.\n\t * @param string $field Field name.\n\t *\n\t * @return mixed Value in the correct format.\n\t *\/\n\tprotected function prepare_field( $value, string $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'id':\n\t\t\tcase 'priority':\n\t\t\tcase 'condition_id':\n\t\t\t\treturn absint( $value );\n\n\t\t\tcase 'tags':\n\t\t\t\treturn code_snippets_build_tags_array( $value );\n\n\t\t\tcase 'active':\n\t\t\t\treturn ( is_bool( $value ) ? $value : (bool) $value ) && ! $this->is_condition();\n\n\t\t\tdefault:\n\t\t\t\treturn $value;\n\t\t}\n\t}\n\n\t\/**\n\t * Prepare the scope by ensuring that it is a valid choice\n\t *\n\t * @param int|string $scope The field as provided.\n\t *\n\t * @return string The field in the correct format.\n\t *\/\n\tprotected function prepare_scope( $scope ) {\n\t\t$scopes = self::get_all_scopes();\n\n\t\tif ( in_array( $scope, $scopes, true ) ) {\n\t\t\treturn $scope;\n\t\t}\n\n\t\tif ( is_numeric( $scope ) && isset( $scopes[ $scope ] ) ) {\n\t\t\treturn $scopes[ $scope ];\n\t\t}\n\n\t\treturn $this->fields['scope'];\n\t}\n\n\t\/**\n\t * If $network is anything other than true, set it to false\n\t *\n\t * @param bool $network The field as provided.\n\t *\n\t * @return bool The field in the correct format.\n\t *\/\n\tprotected function prepare_network( bool $network ): bool {\n\t\tif ( null === $network && function_exists( 'is_network_admin' ) ) {\n\t\t\treturn is_network_admin();\n\t\t}\n\n\t\treturn true === $network;\n\t}\n\n\t\/**\n\t * Determine the type of code a given scope will produce.\n\t *\n\t * @param string $scope Scope name.\n\t *\n\t * @return string The snippet type \u2013 will be a filename extension.\n\t *\/\n\tpublic static function get_type_from_scope( string $scope ): string {\n\t\tif ( '-css' === substr( $scope, -4 ) ) {\n\t\t\treturn 'css';\n\t\t} elseif ( '-js' === substr( $scope, -3 ) ) {\n\t\t\treturn 'js';\n\t\t} elseif ( 'content' === substr( $scope, -7 ) ) {\n\t\t\treturn 'html';\n\t\t} elseif ( 'condition' === $scope ) {\n\t\t\treturn 'cond';\n\t\t} else {\n\t\t\treturn 'php';\n\t\t}\n\t}\n\n\t\/**\n\t * Determine the type of code this snippet is, based on its scope\n\t *\n\t * @return string The snippet type \u2013 will be a filename extension.\n\t *\/\n\tprotected function get_type(): string {\n\t\treturn self::get_type_from_scope( $this->scope );\n\t}\n\n\t\/**\n\t * Retrieve a list of all valid types.\n\t *\n\t * @return string[]\n\t *\/\n\tpublic static function get_types(): array {\n\t\treturn [ 'php', 'html', 'css', 'js', 'cond' ];\n\t}\n\n\t\/**\n\t * Determine the language that the snippet code is written in, based on the scope\n\t *\n\t * @return string The name of a language filename extension.\n\t *\/\n\tprotected function get_lang(): string {\n\t\treturn 'cond' === $this->type ? 'json' : $this->type;\n\t}\n\n\t\/**\n\t * Prepare the modification field by ensuring it is in the correct format.\n\t *\n\t * @param DateTime|string $modified Snippet modification date.\n\t *\n\t * @return string\n\t *\/\n\tprotected function prepare_modified( $modified ): ?string {\n\n\t\t\/\/ If the supplied value is a DateTime object, convert it to string representation.\n\t\tif ( $modified instanceof DateTime ) {\n\t\t\treturn $modified->format( self::DATE_FORMAT );\n\t\t}\n\n\t\t\/\/ If the supplied value is probably a timestamp, attempt to convert it to a string.\n\t\tif ( is_numeric( $modified ) ) {\n\t\t\treturn gmdate( self::DATE_FORMAT, $modified );\n\t\t}\n\n\t\t\/\/ If the supplied value is a string, check it is not just the default value.\n\t\tif ( is_string( $modified ) && self::DEFAULT_DATE !== $modified ) {\n\t\t\treturn $modified;\n\t\t}\n\n\t\t\/\/ Otherwise, discard the supplied value.\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Update the last modification date to the current date and time.\n\t *\n\t * @return void\n\t *\/\n\tpublic function update_modified() {\n\t\t$this->modified = gmdate( self::DATE_FORMAT );\n\t}\n\n\t\/**\n\t * Retrieve the snippet title if set or a placeholder title if not.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_display_name(): string {\n\t\t\/\/ translators: %s: snippet identifier.\n\t\treturn empty( $this->name ) ? sprintf( esc_html__( 'Snippet #%d', 'code-snippets' ), $this->id ) : $this->name;\n\t}\n\n\t\/**\n\t * Retrieve the tags in list format\n\t *\n\t * @return string The tags separated by a comma and a space.\n\t *\/\n\tprotected function get_tags_list(): string {\n\t\treturn implode( ', ', $this->tags );\n\t}\n\n\t\/**\n\t * Retrieve a list of all available scopes\n\t *\n\t * @return array<string> List of scope names.\n\t *\n\t * @phpcs:disable WordPress.Arrays.ArrayDeclarationSpacing.ArrayItemNoNewLine\n\t *\/\n\tpublic static function get_all_scopes(): array {\n\t\treturn array(\n\t\t\t'global', 'admin', 'front-end', 'single-use',\n\t\t\t'content', 'head-content', 'footer-content',\n\t\t\t'admin-css', 'site-css',\n\t\t\t'site-head-js', 'site-footer-js',\n\t\t\t'condition',\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieve a list of all scope icons\n\t *\n\t * @return array<string, string> Scope name keyed to the class name of a dashicon.\n\t *\/\n\tpublic static function get_scope_icons(): array {\n\t\treturn array(\n\t\t\t'global'         => 'admin-site',\n\t\t\t'admin'          => 'admin-tools',\n\t\t\t'front-end'      => 'admin-appearance',\n\t\t\t'single-use'     => 'clock',\n\t\t\t'content'        => 'shortcode',\n\t\t\t'head-content'   => 'editor-code',\n\t\t\t'footer-content' => 'editor-code',\n\t\t\t'admin-css'      => 'dashboard',\n\t\t\t'site-css'       => 'admin-customizer',\n\t\t\t'site-head-js'   => 'media-code',\n\t\t\t'site-footer-js' => 'media-code',\n\t\t\t'condition'      => 'randomize',\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieve the string representation of the scope\n\t *\n\t * @return string The name of the scope.\n\t *\/\n\tprotected function get_scope_name(): string {\n\t\tswitch ( $this->scope ) {\n\t\t\tcase 'global':\n\t\t\t\treturn __( 'Global function', 'code-snippets' );\n\t\t\tcase 'admin':\n\t\t\t\treturn __( 'Admin function', 'code-snippets' );\n\t\t\tcase 'front-end':\n\t\t\t\treturn __( 'Front-end function', 'code-snippets' );\n\t\t\tcase 'single-use':\n\t\t\t\treturn __( 'Single-use function', 'code-snippets' );\n\t\t\tcase 'content':\n\t\t\t\treturn __( 'Content', 'code-snippets' );\n\t\t\tcase 'head-content':\n\t\t\t\treturn __( 'Head content', 'code-snippets' );\n\t\t\tcase 'footer-content':\n\t\t\t\treturn __( 'Footer content', 'code-snippets' );\n\t\t\tcase 'admin-css':\n\t\t\t\treturn __( 'Admin styles', 'code-snippets' );\n\t\t\tcase 'site-css':\n\t\t\t\treturn __( 'Front-end styles', 'code-snippets' );\n\t\t\tcase 'site-head-js':\n\t\t\t\treturn __( 'Head scripts', 'code-snippets' );\n\t\t\tcase 'site-footer-js':\n\t\t\t\treturn __( 'Footer scripts', 'code-snippets' );\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieve the icon used for the current scope\n\t *\n\t * @return string A dashicon name.\n\t *\/\n\tprotected function get_scope_icon(): string {\n\t\t$icons = self::get_scope_icons();\n\n\t\treturn $icons[ $this->scope ];\n\t}\n\n\t\/**\n\t * Determine if the snippet is a shared network snippet\n\t *\n\t * @return bool Whether the snippet is a shared network snippet.\n\t *\/\n\tprotected function get_shared_network(): bool {\n\t\tif ( isset( $this->fields['shared_network'] ) ) {\n\t\t\treturn $this->fields['shared_network'];\n\t\t}\n\n\t\tif ( ! is_multisite() || ! $this->fields['network'] ) {\n\t\t\t$this->fields['shared_network'] = false;\n\t\t} else {\n\t\t\t$shared_network_snippets = get_site_option( 'shared_network_snippets', array() );\n\t\t\t$this->fields['shared_network'] = in_array( $this->fields['id'], $shared_network_snippets, true );\n\t\t}\n\n\t\treturn $this->fields['shared_network'];\n\t}\n\n\t\/**\n\t * Retrieve the snippet modification date as a timestamp.\n\t *\n\t * @return integer Timestamp value.\n\t *\/\n\tprotected function get_modified_timestamp(): int {\n\t\t$datetime = DateTime::createFromFormat( self::DATE_FORMAT, $this->modified, new DateTimeZone( 'UTC' ) );\n\n\t\treturn $datetime ? $datetime->getTimestamp() : 0;\n\t}\n\n\t\/**\n\t * Retrieve the modification time in the local timezone.\n\t *\n\t * @return DateTime\n\t *\/\n\tprotected function get_modified_local(): DateTime {\n\t\t$datetime = DateTime::createFromFormat( self::DATE_FORMAT, $this->modified, new DateTimeZone( 'UTC' ) );\n\n\t\tif ( function_exists( 'wp_timezone' ) ) {\n\t\t\t$timezone = wp_timezone();\n\t\t} else {\n\t\t\t$timezone = get_option( 'timezone_string' );\n\n\t\t\t\/\/ Calculate the timezone manually if it is not available.\n\t\t\tif ( ! $timezone ) {\n\t\t\t\t$offset = (float) get_option( 'gmt_offset' );\n\t\t\t\t$hours = (int) $offset;\n\t\t\t\t$minutes = ( $offset - $hours ) * 60;\n\n\t\t\t\t$sign = ( $offset < 0 ) ? '-' : '+';\n\t\t\t\t$timezone = sprintf( '%s%02d:%02d', $sign, abs( $hours ), abs( $minutes ) );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$timezone = new DateTimeZone( $timezone );\n\t\t\t} catch ( Exception $exception ) {\n\t\t\t\treturn $datetime;\n\t\t\t}\n\t\t}\n\n\t\t$datetime->setTimezone( $timezone );\n\t\treturn $datetime;\n\t}\n\n\t\/**\n\t * Retrieve the last modified time, nicely formatted for readability.\n\t *\n\t * @param boolean $include_html Whether to include HTML in the output.\n\t *\n\t * @return string\n\t *\/\n\tpublic function format_modified( bool $include_html = true ): string {\n\t\tif ( ! $this->modified ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$timestamp = $this->modified_timestamp;\n\t\t$time_diff = time() - $timestamp;\n\t\t$local_time = $this->modified_local;\n\n\t\tif ( $time_diff >= 0 && $time_diff < YEAR_IN_SECONDS ) {\n\t\t\t\/\/ translators: %s: Human-readable time difference.\n\t\t\t$human_time = sprintf( __( '%s ago', 'code-snippets' ), human_time_diff( $timestamp ) );\n\t\t} else {\n\t\t\t$human_time = $local_time->format( __( 'Y\/m\/d', 'code-snippets' ) );\n\t\t}\n\n\t\tif ( ! $include_html ) {\n\t\t\treturn $human_time;\n\t\t}\n\n\t\t\/\/ translators: 1: date format, 2: time format.\n\t\t$date_format = _x( '%1$s at %2$s', 'date and time format', 'code-snippets' );\n\t\t$date_format = sprintf( $date_format, get_option( 'date_format' ), get_option( 'time_format' ) );\n\n\t\treturn sprintf( '<span title=\"%s\">%s<\/span>', $local_time->format( $date_format ), $human_time );\n\t}\n\n\t\/**\n\t * Determine whether the current snippet type is pro-only.\n\t *\/\n\tprivate function get_is_pro(): bool {\n\t\treturn 'css' === $this->type || 'js' === $this->type || 'cond' === $this->type;\n\t}\n\n\t\/**\n\t * Increment the revision number by one.\n\t *\/\n\tpublic function increment_revision() {\n\t\t++$this->revision;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/rest-api\/class-snippets-rest-controller.php","ext":"php","size":15934,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets\\REST_API;\n\nuse Code_Snippets\\Export;\nuse Code_Snippets\\Snippet;\nuse WP_Error;\nuse WP_REST_Controller;\nuse WP_REST_Request;\nuse WP_REST_Response;\nuse WP_REST_Server;\nuse function Code_Snippets\\activate_snippet;\nuse function Code_Snippets\\code_snippets;\nuse function Code_Snippets\\deactivate_snippet;\nuse function Code_Snippets\\delete_snippet;\nuse function Code_Snippets\\get_snippet;\nuse function Code_Snippets\\get_snippets;\nuse function Code_Snippets\\save_snippet;\nuse const Code_Snippets\\REST_API_NAMESPACE;\n\n\/**\n * Allows fetching snippet data through the WordPress REST API.\n *\n * @since   3.4.0\n * @package Code_Snippets\n *\/\nfinal class Snippets_REST_Controller extends WP_REST_Controller {\n\n\t\/**\n\t * Current API version.\n\t *\/\n\tpublic const VERSION = 1;\n\n\t\/**\n\t * The base of this controller's route.\n\t *\/\n\tpublic const BASE_ROUTE = 'snippets';\n\n\t\/**\n\t * The namespace of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $namespace = REST_API_NAMESPACE . self::VERSION;\n\n\t\/**\n\t * The base of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $rest_base = self::BASE_ROUTE;\n\n\t\/**\n\t * Retrieve this controller's REST API base path, including namespace.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_base_route(): string {\n\t\treturn REST_API_NAMESPACE . self::VERSION . '\/' . self::BASE_ROUTE;\n\t}\n\n\t\/**\n\t * Retrieve the full base route including the REST API prefix.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_prefixed_base_route(): string {\n\t\treturn '\/' . rtrim( rest_get_url_prefix(), '\/\\\\' ) . '\/' . self::get_base_route();\n\t}\n\n\t\/**\n\t * Register REST routes.\n\t *\/\n\tpublic function register_routes() {\n\t\t$route = '\/' . $this->rest_base;\n\t\t$id_route = $route . '\/(?P<id>[\\d]+)';\n\n\t\t$network_args = array_intersect_key(\n\t\t\t$this->get_endpoint_args_for_item_schema(),\n\t\t\t[ 'network' ]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$route,\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t\t'callback'            => [ $this, 'get_items' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'get_items_permissions_check' ],\n\t\t\t\t\t'args'                => $network_args,\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::CREATABLE,\n\t\t\t\t\t'callback'            => [ $this, 'create_item' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'create_item_permissions_check' ],\n\t\t\t\t\t'args'                => $this->get_endpoint_args_for_item_schema( true ),\n\t\t\t\t],\n\t\t\t\t'schema' => [ $this, 'get_item_schema' ],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$id_route,\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t\t'callback'            => [ $this, 'get_item' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'get_item_permissions_check' ],\n\t\t\t\t\t'args'                => $network_args,\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t\t'callback'            => [ $this, 'update_item' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'update_item_permissions_check' ],\n\t\t\t\t\t'args'                => $this->get_endpoint_args_for_item_schema( false ),\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'methods'             => WP_REST_Server::DELETABLE,\n\t\t\t\t\t'callback'            => [ $this, 'delete_item' ],\n\t\t\t\t\t'permission_callback' => [ $this, 'delete_item_permissions_check' ],\n\t\t\t\t\t'args'                => $network_args,\n\t\t\t\t],\n\t\t\t\t'schema' => [ $this, 'get_item_schema' ],\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$route . '\/schema',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'callback'            => [ $this, 'get_public_item_schema' ],\n\t\t\t\t'permission_callback' => '__return_true',\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$id_route . '\/activate',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t'callback'            => [ $this, 'activate_item' ],\n\t\t\t\t'permission_callback' => [ $this, 'update_item_permissions_check' ],\n\t\t\t\t'schema'              => [ $this, 'get_item_schema' ],\n\t\t\t\t'args'                => $network_args,\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$id_route . '\/deactivate',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t'callback'            => [ $this, 'deactivate_item' ],\n\t\t\t\t'permission_callback' => [ $this, 'update_item_permissions_check' ],\n\t\t\t\t'schema'              => [ $this, 'get_item_schema' ],\n\t\t\t\t'args'                => $network_args,\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$id_route . '\/export',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'callback'            => [ $this, 'export_item' ],\n\t\t\t\t'permission_callback' => [ $this, 'get_item_permissions_check' ],\n\t\t\t\t'schema'              => [ $this, 'get_item_schema' ],\n\t\t\t\t'args'                => $network_args,\n\t\t\t]\n\t\t);\n\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t$id_route . '\/export-code',\n\t\t\t[\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'callback'            => [ $this, 'export_item_code' ],\n\t\t\t\t'permission_callback' => [ $this, 'get_item_permissions_check' ],\n\t\t\t\t'schema'              => [ $this, 'get_item_schema' ],\n\t\t\t\t'args'                => $network_args,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieves a collection of snippets.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response Response object on success.\n\t *\/\n\tpublic function get_items( $request ): WP_REST_Response {\n\t\t$snippets = get_snippets();\n\t\t$snippets_data = [];\n\n\t\tforeach ( $snippets as $snippet ) {\n\t\t\t$snippet_data = $this->prepare_item_for_response( $snippet, $request );\n\t\t\t$snippets_data[] = $this->prepare_response_for_collection( $snippet_data );\n\t\t}\n\n\t\treturn rest_ensure_response( $snippets_data );\n\t}\n\n\t\/**\n\t * Retrieves one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success.\n\t *\/\n\tpublic function get_item( $request ) {\n\t\t$snippet_id = $request->get_param( 'id' );\n\t\t$item = get_snippet( $snippet_id, $request->get_param( 'network' ) );\n\n\t\tif ( ! $item->id && 0 !== $snippet_id && '0' !== $snippet_id ) {\n\t\t\treturn new WP_Error(\n\t\t\t\t'rest_cannot_get',\n\t\t\t\t__( 'The snippet could not be found.', 'code-snippets' ),\n\t\t\t\t[ 'status' => 500 ]\n\t\t\t);\n\t\t}\n\n\t\t$data = $this->prepare_item_for_response( $item, $request );\n\t\treturn rest_ensure_response( $data );\n\t}\n\n\t\/**\n\t * Create one item from the collection\n\t *\n\t * @param WP_REST_Request|array $request Full data about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error\n\t *\/\n\tpublic function create_item( $request ) {\n\t\t$snippet = $this->prepare_item_for_database( $request );\n\t\t$result = $snippet ? save_snippet( $snippet ) : null;\n\n\t\treturn $result ?\n\t\t\t$this->prepare_item_for_response( $result, $request ) :\n\t\t\tnew WP_Error(\n\t\t\t\t'rest_cannot_create',\n\t\t\t\t__( 'The snippet could not be created.', 'code-snippets' ),\n\t\t\t\t[ 'status' => 500 ]\n\t\t\t);\n\t}\n\n\t\/**\n\t * Update one item from the collection\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function update_item( $request ) {\n\t\t$snippet_id = absint( $request->get_param( 'id' ) );\n\t\t$snippet = $snippet_id ? get_snippet( $snippet_id, $request->get_param( 'network' ) ) : null;\n\n\t\tif ( ! $snippet_id || ! $snippet || ! $snippet->id ) {\n\t\t\treturn new WP_Error(\n\t\t\t\t'rest_cannot_update',\n\t\t\t\t__( 'Cannot update a snippet without a valid ID.', 'code-snippets' ),\n\t\t\t\t[ 'status' => 400 ]\n\t\t\t);\n\t\t}\n\n\t\t$item = $this->prepare_item_for_database( $request, $snippet );\n\t\t$result = save_snippet( $item );\n\n\t\tif ( $result ) {\n\t\t\t$request->set_param( 'id', $result->id );\n\t\t\treturn $this->get_item( $request );\n\t\t}\n\n\t\treturn new WP_Error(\n\t\t\t'rest_cannot_update',\n\t\t\t__( 'The snippet could not be updated.', 'code-snippets' ),\n\t\t\t[ 'status' => 500 ]\n\t\t);\n\t}\n\n\t\/**\n\t * Delete one item from the collection\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function delete_item( $request ) {\n\t\t$item = $this->prepare_item_for_database( $request );\n\t\t$result = delete_snippet( $item->id, $item->network );\n\n\t\treturn $result ?\n\t\t\tnew WP_REST_Response( null, 204 ) :\n\t\t\tnew WP_Error(\n\t\t\t\t'rest_cannot_delete',\n\t\t\t\t__( 'The snippet could not be deleted.', 'code-snippets' ),\n\t\t\t\t[ 'status' => 500 ]\n\t\t\t);\n\t}\n\n\t\/**\n\t * Activate one item in the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function activate_item( WP_REST_Request $request ) {\n\t\t$item = $this->prepare_item_for_database( $request );\n\t\t$result = activate_snippet( $item->id, $item->network );\n\n\t\treturn $result instanceof Snippet ?\n\t\t\trest_ensure_response( $result ) :\n\t\t\tnew WP_Error(\n\t\t\t\t'rest_cannot_activate',\n\t\t\t\t$result,\n\t\t\t\t[ 'status' => 500 ]\n\t\t\t);\n\t}\n\n\t\/**\n\t * Deactivate one item in the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function deactivate_item( WP_REST_Request $request ) {\n\t\t$item = $this->prepare_item_for_database( $request );\n\t\t$result = deactivate_snippet( $item->id, $item->network );\n\n\t\treturn $result instanceof Snippet ?\n\t\t\trest_ensure_response( $result ) :\n\t\t\tnew WP_Error(\n\t\t\t\t'rest_cannot_activate',\n\t\t\t\t__( 'The snippet could not be deactivated.', 'code-snippets' ),\n\t\t\t\t[ 'status' => 500 ]\n\t\t\t);\n\t}\n\n\t\/**\n\t * Prepare an instance of the Export class from a request.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return Export\n\t *\/\n\tprotected function build_export( WP_REST_Request $request ): Export {\n\t\t$item = $this->prepare_item_for_database( $request );\n\t\treturn new Export( [ $item->id ], $item->network );\n\t}\n\n\t\/**\n\t * Retrieve one item in the collection in JSON export format.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function export_item( WP_REST_Request $request ) {\n\t\t$export = $this->build_export( $request );\n\t\t$result = $export->create_export_object();\n\t\treturn rest_ensure_response( $result );\n\t}\n\n\t\/**\n\t * Retrieve one item in the collection in the code export format.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function export_item_code( WP_REST_Request $request ) {\n\t\t$export = $this->build_export( $request );\n\t\t$result = $export->export_snippets_code();\n\n\t\treturn rest_ensure_response( $result );\n\t}\n\n\t\/**\n\t * Prepares one item for create or update operation.\n\t *\n\t * @param WP_REST_Request $request Request object.\n\t * @param Snippet|null    $item    Existing item to augment.\n\t *\n\t * @return Snippet The prepared item.\n\t *\/\n\tprotected function prepare_item_for_database( $request, ?Snippet $item = null ): ?Snippet {\n\t\tif ( ! $item instanceof Snippet ) {\n\t\t\t$item = new Snippet();\n\t\t}\n\n\t\tforeach ( $item->get_allowed_fields() as $field ) {\n\t\t\tif ( isset( $request[ $field ] ) ) {\n\t\t\t\t$item->set_field( $field, $request[ $field ] );\n\t\t\t}\n\t\t}\n\n\t\treturn $item;\n\t}\n\n\t\/**\n\t * Prepare the item for the REST response.\n\t *\n\t * @param Snippet         $item    Snippet object.\n\t * @param WP_REST_Request $request Request object.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function prepare_item_for_response( $item, $request ) {\n\t\t$schema = $this->get_item_schema();\n\t\t$response = [];\n\n\t\tforeach ( array_keys( $schema['properties'] ) as $property ) {\n\t\t\t$response[ $property ] = $item->$property;\n\t\t}\n\n\t\treturn rest_ensure_response( $response );\n\t}\n\n\t\/**\n\t * Check if a given request has access to get items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function get_items_permissions_check( $request ): bool {\n\t\treturn code_snippets()->current_user_can();\n\t}\n\n\t\/**\n\t * Check if a given request has access to get a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function get_item_permissions_check( $request ): bool {\n\t\treturn $this->get_items_permissions_check( $request );\n\t}\n\n\t\/**\n\t * Check if a given request has access to create items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function create_item_permissions_check( $request ): bool {\n\t\treturn code_snippets()->current_user_can();\n\t}\n\n\t\/**\n\t * Check if a given request has access to update a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function update_item_permissions_check( $request ): bool {\n\t\treturn $this->create_item_permissions_check( $request );\n\t}\n\n\t\/**\n\t * Check if a given request has access to delete a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function delete_item_permissions_check( $request ): bool {\n\t\treturn $this->create_item_permissions_check( $request );\n\t}\n\n\t\/**\n\t * Get our sample schema for a post.\n\t *\n\t * @return array<string, mixed> The sample schema for a post\n\t *\/\n\tpublic function get_item_schema(): array {\n\t\tif ( $this->schema ) {\n\t\t\treturn $this->schema;\n\t\t}\n\n\t\t$this->schema = [\n\t\t\t'$schema'    => 'http:\/\/json-schema.org\/draft-04\/schema#',\n\t\t\t'title'      => 'snippet',\n\t\t\t'type'       => 'object',\n\t\t\t'properties' => [\n\t\t\t\t'id'             => [\n\t\t\t\t\t'description' => esc_html__( 'Unique identifier for the snippet.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t'readonly'    => true,\n\t\t\t\t],\n\t\t\t\t'name'           => [\n\t\t\t\t\t'description' => esc_html__( 'Descriptive title for the snippet.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t],\n\t\t\t\t'desc'           => [\n\t\t\t\t\t'description' => esc_html__( 'Descriptive text associated with snippet.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t],\n\t\t\t\t'code'           => [\n\t\t\t\t\t'description' => esc_html__( 'Executable snippet code.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t],\n\t\t\t\t'tags'           => [\n\t\t\t\t\t'description' => esc_html__( 'List of tag categories the snippet belongs to.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'array',\n\t\t\t\t\t'items'       => [\n\t\t\t\t\t\t'type' => 'string',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t'scope'          => [\n\t\t\t\t\t'description' => esc_html__( 'Context in which the snippet is executable.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t],\n\t\t\t\t'condition_id'   => [\n\t\t\t\t\t'description' => esc_html__( 'Identifier of condition linked to this snippet.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t],\n\t\t\t\t'active'         => [\n\t\t\t\t\t'description' => esc_html__( 'Snippet activation status.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'boolean',\n\t\t\t\t],\n\t\t\t\t'priority'       => [\n\t\t\t\t\t'description' => esc_html__( 'Relative priority in which the snippet is executed.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t],\n\t\t\t\t'network'        => [\n\t\t\t\t\t'description' => esc_html__( 'Whether the snippet is network-wide instead of site-wide.', 'code-snippets' ),\n\t\t\t\t\t'type'        => [ 'boolean', 'null' ],\n\t\t\t\t\t'default'     => null,\n\t\t\t\t],\n\t\t\t\t'shared_network' => [\n\t\t\t\t\t'description' => esc_html__( 'If a network snippet, whether can be activated on discrete sites instead of network-wide.', 'code-snippets' ),\n\t\t\t\t\t'type'        => [ 'boolean', 'null' ],\n\t\t\t\t],\n\t\t\t\t'modified'       => [\n\t\t\t\t\t'description' => esc_html__( 'Date and time when the snippet was last modified, in ISO format.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t'format'      => 'date-time',\n\t\t\t\t\t'readonly'    => true,\n\t\t\t\t],\n\t\t\t\t'code_error'     => [\n\t\t\t\t\t'description' => esc_html__( 'Error message if the snippet code could not be parsed.', 'code-snippets' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t'readonly'    => true,\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\treturn $this->schema;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/class-welcome-api.php","ext":"php","size":9762,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse DateTimeImmutable;\nuse Exception;\nuse WP_Filesystem_Direct;\n\n\/**\n * Class for loading data from the codesnippets.pro website.\n *\n * @package Code_Snippets\n *\/\nclass Welcome_API {\n\n\t\/**\n\t *  URL for the welcome page data.\n\t *\n\t * @var string\n\t *\/\n\tprotected const WELCOME_JSON_URL = 'https:\/\/codesnippets.pro\/wp-content\/uploads\/cs_welcome\/cs_welcome.json';\n\n\t\/**\n\t * Limit of number of items to display when loading lists of items.\n\t *\n\t * @var int\n\t *\/\n\tprotected const ITEM_LIMIT = 4;\n\n\t\/**\n\t * Limit of number of items of historic versions to display in the changelog.\n\t *\n\t * @var int\n\t *\/\n\tprotected const MAX_CHANGELOG_ENTRIES = 4;\n\n\t\/**\n\t * Key used for caching welcome page data.\n\t *\n\t * @var string\n\t *\/\n\tprotected const CACHE_KEY = 'code_snippets_welcome_data';\n\n\t\/**\n\t * Data fetched from the remote API.\n\t *\n\t * @var array{\n\t *     banner: ?array,\n\t *     hero-item: ?array,\n\t *     features: ?array,\n\t *     partners: ?array,\n\t *     changelog: ?array\n\t * }\n\t *\/\n\tprivate array $welcome_data;\n\n\t\/**\n\t * Populate the $welcome_data variable when the class is loaded.\n\t *\n\t * @return void\n\t *\/\n\tpublic function __construct() {\n\t\t$stored_data = get_transient( self::CACHE_KEY );\n\n\t\tif ( is_array( $stored_data ) ) {\n\t\t\t$this->welcome_data = $stored_data;\n\t\t} else {\n\t\t\t$this->welcome_data = [];\n\t\t\t$this->fetch_remote_welcome_data();\n\t\t\t$this->build_changelog_data();\n\t\t\tset_transient( self::CACHE_KEY, $this->welcome_data, DAY_IN_SECONDS * 2 );\n\t\t}\n\t}\n\n\t\/**\n\t * Purge the welcome data cache.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function clear_cache() {\n\t\tdelete_transient( self::CACHE_KEY );\n\t}\n\n\t\/**\n\t * Safely retrieve an array from an object, ensuring it exists and is valid, returning a default value if not.\n\t *\n\t * @param array<string, mixed> $items Associative array containing array to extract.\n\t * @param string               $key   Array key.\n\t *\n\t * @return array Extracted array, or empty array if array is missing.\n\t *\/\n\tprivate static function safe_get_array( array $items, string $key ): array {\n\t\treturn isset( $items[ $key ] ) && is_array( $items[ $key ] ) ? $items[ $key ] : [];\n\t}\n\n\t\/**\n\t * Parse DateTime value from a string without triggering an error.\n\t *\n\t * @param string $datetime String representation of DateTime value.\n\t *\n\t * @return DateTimeImmutable|null\n\t *\/\n\tprivate static function safe_parse_datetime( string $datetime ): ?DateTimeImmutable {\n\t\ttry {\n\t\t\treturn new DateTimeImmutable( $datetime );\n\t\t} catch ( Exception $e ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t\/**\n\t * Parse remote hero item data.\n\t *\n\t * @param array $remote Remote hero item data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function parse_hero_item( array $remote ): array {\n\t\treturn [\n\t\t\t'name'       => $remote[0]['name'] ?? '',\n\t\t\t'follow_url' => $remote[0]['follow_url'] ?? '',\n\t\t\t'image_url'  => $remote[0]['image_url'] ?? '',\n\t\t];\n\t}\n\n\t\/**\n\t * Parse remote banner data.\n\t *\n\t * @param array $remote Remote hero item data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function parse_banner( array $remote ): array {\n\t\treturn [\n\t\t\t'key'               => sanitize_key( $remote['key'] ) ?? '',\n\t\t\t'start_datetime'    => self::safe_parse_datetime( $remote['start_datetime'] ),\n\t\t\t'end_datetime'      => self::safe_parse_datetime( $remote['end_datetime'] ),\n\t\t\t'text_free'         => $remote['text_free'] ?? '',\n\t\t\t'action_url_free'   => $remote['action_url_free'] ?? '',\n\t\t\t'action_label_free' => $remote['action_label_free'] ?? '',\n\t\t\t'text_pro'          => $remote['text_pro'] ?? '',\n\t\t\t'action_url_pro'    => $remote['action_url_pro'] ?? '',\n\t\t\t'action_label_pro'  => $remote['action_label_pro'] ?? '',\n\t\t];\n\t}\n\n\t\/**\n\t * Parse a list of features from a remote dataset.\n\t *\n\t * @param array $remote Remote data.\n\t *\n\t * @return array[] Parsed feature data.\n\t *\/\n\tprivate function parse_features( array $remote ): array {\n\t\t$limit = max( self::ITEM_LIMIT, count( $remote ) );\n\t\t$features = [];\n\n\t\tfor ( $i = 0; $i < $limit; $i++ ) {\n\t\t\t$feature = $remote[ $i ];\n\n\t\t\t$features[] = [\n\t\t\t\t'title'       => $feature['title'] ?? '',\n\t\t\t\t'follow_url'  => $feature['follow_url'] ?? '',\n\t\t\t\t'image_url'   => $feature['image_url'] ?? '',\n\t\t\t\t'category'    => $feature['category'] ?? '',\n\t\t\t\t'description' => $feature['description'] ?? '',\n\t\t\t];\n\t\t}\n\n\t\treturn $features;\n\t}\n\n\t\/**\n\t * Parse a list of partners from a remote dataset.\n\t *\n\t * @param array $remote Remote data.\n\t *\n\t * @return array[] Parsed partner data.\n\t *\/\n\tprivate function parse_partners( array $remote ): array {\n\t\t$limit = max( self::ITEM_LIMIT, count( $remote ) );\n\t\t$partners = [];\n\n\t\tfor ( $i = 0; $i < $limit; $i++ ) {\n\t\t\t$partner = $remote[ $i ];\n\n\t\t\t$partners[] = [\n\t\t\t\t'title'      => $partner['title'] ?? '',\n\t\t\t\t'follow_url' => $partner['follow_url'] ?? '',\n\t\t\t\t'image_url'  => $partner['image_url'] ?? '',\n\t\t\t];\n\t\t}\n\n\t\treturn $partners;\n\t}\n\n\t\/**\n\t * Fetch remote welcome data from the remote server and add it to the stored data.\n\t *\n\t * @return void\n\t *\/\n\tprotected function fetch_remote_welcome_data() {\n\t\t$remote_welcome_data = wp_remote_get( self::WELCOME_JSON_URL );\n\n\t\tif ( is_wp_error( $remote_welcome_data ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$remote_welcome_data = json_decode( wp_remote_retrieve_body( $remote_welcome_data ), true );\n\n\t\tif ( ! is_array( $remote_welcome_data ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->welcome_data['banner'] = $this->parse_banner( self::safe_get_array( $remote_welcome_data, 'banner' ) );\n\t\t$this->welcome_data['hero-item'] = $this->parse_hero_item( self::safe_get_array( $remote_welcome_data, 'hero-item' ) );\n\t\t$this->welcome_data['features'] = $this->parse_features( self::safe_get_array( $remote_welcome_data, 'features' ) );\n\t\t$this->welcome_data['partners'] = $this->parse_partners( self::safe_get_array( $remote_welcome_data, 'partners' ) );\n\t}\n\n\t\/**\n\t * Build the full list of latest changes for caching.\n\t *\n\t * @return void\n\t *\/\n\tprotected function build_changelog_data() {\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-filesystem-base.php';\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-filesystem-direct.php';\n\t\t$filesystem = new WP_Filesystem_Direct( null );\n\n\t\t$changelog_filename = 'CHANGELOG.md';\n\t\t$changelog = [];\n\n\t\t$changelog_dir = plugin_dir_path( PLUGIN_FILE );\n\n\t\twhile ( plugin_dir_path( $changelog_dir ) !== $changelog_dir && ! $filesystem->exists( $changelog_dir . $changelog_filename ) ) {\n\t\t\t$changelog_dir = plugin_dir_path( $changelog_dir );\n\t\t}\n\n\t\tif ( ! $filesystem->exists( $changelog_dir . $changelog_filename ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$changelog_contents = $filesystem->get_contents( $changelog_dir . $changelog_filename );\n\t\t$changelog_releases = explode( \"\\n## \", $changelog_contents );\n\n\t\tforeach ( array_slice( $changelog_releases, 1, self::MAX_CHANGELOG_ENTRIES ) as $changelog_release ) {\n\t\t\t$sections = explode( \"\\n### \", $changelog_release );\n\n\t\t\tif ( count( $sections ) < 2 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$header_parts = explode( '(', $sections[0], 2 );\n\t\t\t$version = trim( trim( $header_parts[0] ), '[]' );\n\n\t\t\t$changelog[ $version ] = [];\n\n\t\t\tforeach ( array_slice( $sections, 1 ) as $section_contents ) {\n\t\t\t\t$lines = array_filter( array_map( 'trim', explode( \"\\n\", $section_contents ) ) );\n\t\t\t\t$section_type = $lines[0];\n\n\t\t\t\tforeach ( array_slice( $lines, 1 ) as $line ) {\n\t\t\t\t\t$entry = trim( str_replace( '(PRO)', '', str_replace( '*', '', $line ) ) );\n\t\t\t\t\t$core_or_pro = false === strpos( $line, '(PRO)' ) ? 'core' : 'pro';\n\n\t\t\t\t\tif ( ! isset( $changelog[ $version ][ $section_type ] ) ) {\n\t\t\t\t\t\t$changelog[ $version ][ $section_type ] = [\n\t\t\t\t\t\t\t$core_or_pro => [ $entry ],\n\t\t\t\t\t\t];\n\t\t\t\t\t} elseif ( ! isset( $changelog[ $version ][ $section_type ][ $core_or_pro ] ) ) {\n\t\t\t\t\t\t$changelog[ $version ][ $section_type ][ $core_or_pro ] = [ $entry ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$changelog[ $version ][ $section_type ][ $core_or_pro ][] = $entry;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$this->welcome_data['changelog'] = $changelog;\n\t}\n\n\t\/**\n\t * Retrieve banner information.\n\t *\n\t * @return array{\n\t *      key: string,\n\t *      start_datetime: ?DateTimeImmutable,\n\t *      end_datetime: ?DateTimeImmutable,\n\t *      text_free: string,\n\t *      action_url_free: string,\n\t *      action_label_free: string,\n\t *      text_pro: string,\n\t *      action_url_pro: string,\n\t *      action_label_pro: string                                                                                                                           tet\n\t *  }\n\t *\/\n\tpublic function get_banner(): array {\n\t\treturn $this->welcome_data['banner'] ?? [];\n\t}\n\n\t\/**\n\t * Retrieve hero information.\n\t *\n\t * @return array{\n\t *     name: string,\n\t *     follow_url: string,\n\t *     image_url: string\n\t * }\n\t *\/\n\tpublic function get_hero_item(): array {\n\t\treturn $this->welcome_data['hero-item'] ?? [];\n\t}\n\n\t\/**\n\t * Retrieve the list of features retrieved from the remote API.\n\t *\n\t * @return array{\n\t *     title: string,\n\t *     follow_url: string,\n\t *     image_url: string,\n\t *     category: string,\n\t *     description: string\n\t * }[] Feature details.\n\t *\/\n\tpublic function get_features(): array {\n\t\treturn $this->welcome_data['features'] ?? [];\n\t}\n\n\t\/**\n\t * Retrieve the list of partners retrieved from the remote API.\n\t *\n\t * @return array{\n\t *     title: string,\n\t *     follow_url: string,\n\t *     image_url: string\n\t * }[] Partner details.\n\t *\/\n\tpublic function get_partners(): array {\n\t\treturn $this->welcome_data['partners'] ?? [];\n\t}\n\n\t\/**\n\t * Retrieve a list of latest changes for display.\n\t *\n\t * @return array<string, array{\n\t *     'Added': ?array<'core' | 'pro', string>,\n\t *     'Fixed': ?array<'core' | 'pro', string>,\n\t *     'Improved': ?array<'core' | 'pro', string>,\n\t *     'Other': ?array<'core' | 'pro', string>\n\t * }>\n\t *\/\n\tpublic function get_changelog(): array {\n\t\treturn $this->welcome_data['changelog'] ?? [];\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/load.php","ext":"php","size":1331,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Initialise and load the plugin under the proper namespace.\n *\n * @package Code_Snippets\n *\/\n\nnamespace Code_Snippets;\n\n\/**\n * The version number for this release of the plugin.\n * This will later be used for upgrades and enqueuing files.\n *\n * This should be set to the 'Plugin Version' value defined\n * in the plugin header.\n *\n * @var string A PHP-standardized version number string.\n *\/\nconst PLUGIN_VERSION = CODE_SNIPPETS_VERSION;\n\n\/**\n * The full path to the main file of this plugin.\n *\n * This can later be used with functions such as\n * plugin_dir_path(), plugins_url() and plugin_basename()\n * to retrieve information about plugin paths.\n *\n * @var string\n *\/\nconst PLUGIN_FILE = CODE_SNIPPETS_FILE;\n\n\/**\n * Name of the group used for caching data.\n *\n * @var string\n *\/\nconst CACHE_GROUP = 'code_snippets';\n\n\/**\n * Namespace used for REST API endpoints.\n *\n * @var string\n *\/\nconst REST_API_NAMESPACE = 'code-snippets\/v';\n\n\/\/ Load dependencies with Composer.\nrequire_once dirname( __DIR__ ) . '\/vendor\/autoload.php';\n\n\/**\n * Retrieve the instance of the main plugin class.\n *\n * @return Plugin\n * @since 2.6.0\n *\/\nfunction code_snippets(): Plugin {\n\tstatic $plugin;\n\n\tif ( is_null( $plugin ) ) {\n\t\t$plugin = new Plugin( PLUGIN_VERSION, PLUGIN_FILE );\n\t}\n\n\treturn $plugin;\n}\n\ncode_snippets()->load_plugin();\n"},{"base":"plugins","rel":"code-snippets\/php\/views\/import.php","ext":"php","size":3494,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * HTML for the Import Snippets page.\n *\n * @package    Code_Snippets\n * @subpackage Views\n *\/\n\nnamespace Code_Snippets;\n\n\/**\n * Loaded from import menu.\n *\n * @var Import_Menu $this\n *\/\n\nif ( ! defined( 'ABSPATH' ) ) {\n\treturn;\n}\n\n$max_size_bytes = apply_filters( 'import_upload_size_limit', wp_max_upload_size() );\n\n?>\n<div class=\"wrap\">\n\t<h1>\n\t\t<?php\n\n\t\tesc_html_e( 'Import Snippets', 'code-snippets' );\n\n\t\tif ( code_snippets()->is_compact_menu() ) {\n\t\t\t$this->render_page_title_actions( [ 'manage', 'add', 'settings' ] );\n\t\t}\n\n\t\t?>\n\t<\/h1>\n\n\t<?php $this->print_messages(); ?>\n\n\t<div class=\"narrow\">\n\n\t\t<p><?php esc_html_e( 'Upload one or more Code Snippets export files and the snippets will be imported.', 'code-snippets' ); ?><\/p>\n\n\t\t<p>\n\t\t\t<?php\n\t\t\t\/* translators: %s: link to snippets admin menu *\/\n\t\t\t$text = __( 'Afterward, you will need to visit the <a href=\"%s\" >All Snippets<\/a> page to activate the imported snippets.', 'code-snippets' );\n\t\t\t$url = esc_url( code_snippets()->get_menu_url( 'manage' ) );\n\n\t\t\techo wp_kses(\n\t\t\t\tsprintf( $text, $url ),\n\t\t\t\tarray(\n\t\t\t\t\t'a' => array(\n\t\t\t\t\t\t'href'   => array(),\n\t\t\t\t\t\t'target' => array(),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t);\n\t\t\t?>\n\t\t<\/p>\n\n\t\t<form enctype=\"multipart\/form-data\" id=\"import-upload-form\" method=\"post\" class=\"wp-upload-form\"\n\t\t      name=\"code_snippets_import\">\n\t\t\t<?php wp_nonce_field( 'import_code_snippets_file' ); ?>\n\n\t\t\t<h2><?php esc_html_e( 'Duplicate Snippets', 'code-snippets' ); ?><\/h2>\n\n\t\t\t<p class=\"description\">\n\t\t\t\t<?php esc_html_e( 'What should happen if an existing snippet is found with an identical name to an imported snippet?', 'code-snippets' ); ?>\n\t\t\t<\/p>\n\n\t\t\t<fieldset>\n\t\t\t\t<p>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"radio\" name=\"duplicate_action\" value=\"ignore\" checked=\"checked\">\n\t\t\t\t\t\t<?php esc_html_e( 'Ignore any duplicate snippets: import all snippets from the file regardless and leave all existing snippets unchanged.', 'code-snippets' ); ?>\n\t\t\t\t\t<\/label>\n\t\t\t\t<\/p>\n\n\t\t\t\t<p>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"radio\" name=\"duplicate_action\" value=\"replace\">\n\t\t\t\t\t\t<?php esc_html_e( 'Replace any existing snippets with a newly imported snippet of the same name.', 'code-snippets' ); ?>\n\t\t\t\t\t<\/label>\n\t\t\t\t<\/p>\n\n\t\t\t\t<p>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"radio\" name=\"duplicate_action\" value=\"skip\">\n\t\t\t\t\t\t<?php esc_html_e( 'Do not import any duplicate snippets; leave all existing snippets unchanged.', 'code-snippets' ); ?>\n\t\t\t\t\t<\/label>\n\t\t\t\t<\/p>\n\t\t\t<\/fieldset>\n\n\t\t\t<h2><?php esc_html_e( 'Upload Files', 'code-snippets' ); ?><\/h2>\n\n\t\t\t<p class=\"description\">\n\t\t\t\t<?php esc_html_e( 'Choose one or more Code Snippets (.xml or .json) files to upload, then click \"Upload files and import\".', 'code-snippets' ); ?>\n\t\t\t<\/p>\n\n\t\t\t<fieldset>\n\t\t\t\t<p>\n\t\t\t\t\t<label for=\"upload\"><?php esc_html_e( 'Choose files from your computer:', 'code-snippets' ); ?><\/label>\n\t\t\t\t\t<?php\n\t\t\t\t\t\/* translators: %s: size in bytes *\/\n\t\t\t\t\tprintf( esc_html__( '(Maximum size: %s)', 'code-snippets' ), esc_html( size_format( $max_size_bytes ) ) ); ?>\n\t\t\t\t\t<input type=\"file\" id=\"upload\" name=\"code_snippets_import_files[]\" size=\"25\"\n\t\t\t\t\t       accept=\"application\/json,.json,text\/xml\" multiple=\"multiple\">\n\t\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"save\">\n\t\t\t\t\t<input type=\"hidden\" name=\"max_file_size\" value=\"<?php echo esc_attr( $max_size_bytes ); ?>\">\n\t\t\t\t<\/p>\n\t\t\t<\/fieldset>\n\n\t\t\t<?php\n\n\t\t\tdo_action( 'code_snippets\/admin\/import_form' );\n\t\t\tsubmit_button( __( 'Upload files and import', 'code-snippets' ) );\n\n\t\t\t?>\n\t\t<\/form>\n\t<\/div>\n<\/div>\n"},{"base":"plugins","rel":"code-snippets\/php\/views\/partials\/list-table-notices.php","ext":"php","size":2398,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * HTML for displaying notices for the manage table.\n *\n * @package    Code_Snippets\n * @subpackage Views\n *\/\n\nnamespace Code_Snippets;\n\n\/**\n * Loaded from the manage menu.\n *\n * @var Manage_Menu $this\n *\/\n\n\/**\n * Constant existence is checked with defined().\n *\n * @noinspection PhpUndefinedConstantInspection\n *\/\nif ( defined( 'CODE_SNIPPETS_SAFE_MODE' ) && CODE_SNIPPETS_SAFE_MODE ) {\n\t?>\n\t<div id=\"message\" class=\"notice notice-error fade is-dismissible\">\n\t\t<p>\n\t\t\t<strong><?php esc_html_e( 'Warning:', 'code-snippets' ); ?><\/strong>\n\t\t\t<?php\n\t\t\t\/\/ translators: 1: constant name, 2: file name.\n\t\t\t$text = __( 'Safe mode is active and snippets will not execute! Remove the %1$s constant from %2$s file to turn off safe mode.', 'code-snippets' );\n\t\t\tprintf( esc_html( $text ), '<code>CODE_SNIPPETS_SAFE_MODE<\/code>', '<code>wp-config.php<\/code>' );\n\t\t\t?>\n\n\t\t\t<a href=\"https:\/\/help.codesnippets.pro\/article\/12-safe-mode\" target=\"_blank\">\n\t\t\t\t<?php esc_html_e( 'Help', 'code-snippets' ); ?>\n\t\t\t<\/a>\n\t\t<\/p>\n\t<\/div>\n\t<?php\n}\n\nif ( empty( $_REQUEST['result'] ) ) {\n\treturn;\n}\n\n$result = sanitize_key( $_REQUEST['result'] );\n\n$result_messages = apply_filters(\n\t'code_snippets\/manage\/result_messages',\n\t[\n\t\t'executed'          => __( 'Snippet <strong>executed<\/strong>.', 'code-snippets' ),\n\t\t'activated'         => __( 'Snippet <strong>activated<\/strong>.', 'code-snippets' ),\n\t\t'activated-multi'   => __( 'Selected snippets <strong>activated<\/strong>.', 'code-snippets' ),\n\t\t'deactivated'       => __( 'Snippet <strong>deactivated<\/strong>.', 'code-snippets' ),\n\t\t'deactivated-multi' => __( 'Selected snippets <strong>deactivated<\/strong>.', 'code-snippets' ),\n\t\t'deleted'           => __( 'Snippet <strong>deleted<\/strong>.', 'code-snippets' ),\n\t\t'deleted-multi'     => __( 'Selected snippets <strong>deleted<\/strong>.', 'code-snippets' ),\n\t\t'cloned'            => __( 'Snippet <strong>cloned<\/strong>.', 'code-snippets' ),\n\t\t'cloned-multi'      => __( 'Selected snippets <strong>cloned<\/strong>.', 'code-snippets' ),\n\t\t'cloud-refreshed'   => __( 'Synced cloud data has been <strong>successfully<\/strong> refreshed.', 'code-snippets' ),\n\t]\n);\n\nif ( isset( $result_messages[ $result ] ) ) {\n\t$result_kses = [\n\t\t'strong' => [],\n\t];\n\n\tprintf(\n\t\t'<div id=\"message\" class=\"notice notice-success fade is-dismissible\"><p>%s<\/p><\/div>',\n\t\twp_kses( $result_messages[ $result ], $result_kses )\n\t);\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/views\/partials\/cloud-search.php","ext":"php","size":2563,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * HTML for the cloud search tab\n *\n * @package    Code_Snippets\n * @subpackage Views\n *\/\n\nnamespace Code_Snippets;\n\n\/**\n * Loaded from manage menu.\n *\n * @var Manage_Menu $this\n *\/\n\n$search_query = isset( $_REQUEST['cloud_search'] ) ? sanitize_text_field( wp_unslash( $_REQUEST['cloud_search'] ) ) : '';\n$cloud_select = sanitize_key( wp_unslash( $_REQUEST['cloud_select'] ?? '' ) );\n\n?>\n\n<p class=\"cloud-search-info\">\n\t<?php esc_html_e( 'Use the search bar below to search cloud snippets by entering either the name of a codevault or keywords.', 'code-snippets' ); ?>\n\n\t<small>\n\t\t<?php esc_html_e( '(Note: codevault name is case and spelling sensitive and only public snippets will be shown)', 'code-snippets' ); ?>\n\t<\/small>\n<\/p>\n\n<form method=\"get\" action=\"\" id=\"cloud-search-form\">\n\t<?php List_Table::required_form_fields( 'search_box' ); ?>\n\t<label class=\"screen-reader-text\" for=\"cloud_search\">\n\t\t<?php esc_html_e( 'Search cloud snippets', 'code-snippets' ); ?>\n\t<\/label>\n\t<?php\n\tif ( isset( $_REQUEST['type'] ) ) {\n\t\tprintf( '<input type=\"hidden\" name=\"type\" value=\"%s\">', esc_attr( sanitize_text_field( wp_unslash( $_REQUEST['type'] ) ) ) );\n\t}\n\t?>\n\t<div class=\"heading-box\">\n\t\t<p class=\"cloud-search-heading\">\n\t\t\t<label for=\"cloud-select-prepend\"><?php esc_html_e( 'Search Cloud', 'code-snippets' ); ?><\/label>\n\t\t<\/p>\n\t<\/div>\n\t<div class=\"input-group\">\n\t\t<select id=\"cloud-select-prepend\" class=\"select-prepend\" name=\"cloud_select\">\n\t\t\t<option value=\"term\"<?php selected( $cloud_select, 'term' ); ?>>\n\t\t\t\t<?php esc_html_e( 'Search by keyword(s)', 'code-snippets' ); ?>\n\t\t\t<\/option>\n\t\t\t<option value=\"codevault\"<?php selected( $cloud_select, 'codevault' ); ?>>\n\t\t\t\t<?php esc_html_e( 'Name of codevault', 'code-snippets' ); ?>\n\t\t\t<\/option>\n\t\t<\/select>\n\t\t<input type=\"text\" id=\"cloud_search\" name=\"cloud_search\" class=\"cloud_search\"\n\t\t       value=\"<?php echo esc_html( $search_query ); ?>\"\n\t\t       placeholder=\"<?php esc_attr_e( 'e.g. Remove unused javascript\u2026', 'code-snippets' ); ?>\">\n\n\t\t<button type=\"submit\" id=\"cloud-search-submit\" class=\"button\">\n\t\t\t<?php esc_html_e( 'Search Cloud', 'code-snippets' ); ?>\n\t\t\t<span class=\"dashicons dashicons-search cloud-search\"><\/span>\n\t\t<\/button>\n\t<\/div>\n<\/form>\n<form method=\"post\" action=\"\" id=\"cloud-search-results\">\n\t<input type=\"hidden\"\n\t       id=\"code_snippets_ajax_nonce\"\n\t       value=\"<?php echo esc_attr( wp_create_nonce( 'code_snippets_manage_ajax' ) ); ?>\">\n\t<?php\n\tList_Table::required_form_fields();\n\n\tif ( $search_query ) {\n\t\t$this->cloud_search_list_table->display();\n\t}\n\n\t?>\n<\/form>\n"},{"base":"plugins","rel":"code-snippets\/php\/views\/partials\/list-table.php","ext":"php","size":673,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * HTML for the all snippets and codevault list table\n *\n * @package    Code_Snippets\n * @subpackage Views\n *\/\n\nnamespace Code_Snippets;\n\n\/**\n * Loaded from the manage menu.\n *\n * @var Manage_Menu $this\n *\/\n\n?>\n\n<form method=\"get\" action=\"\">\n\t<?php\n\tList_Table::required_form_fields( 'search_box' );\n\t$this->list_table->search_box( __( 'Search Snippets', 'code-snippets' ), 'search_id' );\n\t?>\n<\/form>\n\n<form method=\"post\" action=\"\">\n\t<input type=\"hidden\" id=\"code_snippets_ajax_nonce\"\n\t       value=\"<?php echo esc_attr( wp_create_nonce( 'code_snippets_manage_ajax' ) ); ?>\">\n\t<?php\n\tList_Table::required_form_fields();\n\t$this->list_table->display();\n\t?>\n<\/form>\n"},{"base":"plugins","rel":"code-snippets\/php\/views\/welcome.php","ext":"php","size":6992,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * HTML for the welcome page.\n *\n * @package    Code_Snippets\n * @subpackage Views\n *\/\n\nnamespace Code_Snippets;\n\n\/**\n * Loaded from the Welcome_Menu class.\n *\n * @var Welcome_Menu $this\n *\/\n\nif ( ! defined( 'ABSPATH' ) ) {\n\treturn;\n}\n\n$hero = $this->api->get_hero_item();\n\n$changelog_sections = [\n\t'Added'    => [\n\t\t'title' => __( 'New features', 'code-snippets' ),\n\t\t'icon'  => 'lightbulb',\n\t],\n\t'Improved' => [\n\t\t'title' => __( 'Improvements', 'code-snippets' ),\n\t\t'icon'  => 'chart-line',\n\t],\n\t'Fixed'    => [\n\t\t'title' => __( 'Bug fixes', 'code-snippets' ),\n\t\t'icon'  => 'buddicons-replies',\n\t],\n\t'Other'    => [\n\t\t'title' => __( 'Other', 'code-snippets' ),\n\t\t'icon'  => 'open-folder',\n\t],\n];\n\n$plugin_types = [\n\t'core' => __( 'Core', 'code-snippets' ),\n\t'pro'  => __( 'Pro', 'code-snippets' ),\n];\n\n?>\n\n<div class=\"csp-welcome-wrap\">\n\t<div class=\"csp-welcome-header\">\n\t\t<header>\n\t\t\t<img width=\"50px\"\n\t\t\t     src=\"<?php echo esc_url( plugins_url( 'assets\/icon.svg', PLUGIN_FILE ) ); ?>\"\n\t\t\t     alt=\"<?php esc_attr_e( 'Code Snippets Logo', 'code-snippets' ); ?>\">\n\t\t\t<h1>\n\t\t\t\t<?php echo wp_kses( __( \"Resources and <span>What's New<\/span>\", 'code-snippets' ), [ 'span' => [] ] ); ?>\n\t\t\t<\/h1>\n\t\t<\/header>\n\t\t<nav>\n\t\t\t<ul>\n\t\t\t\t<?php foreach ( $this->get_header_links() as $link_name => $link_info ) { ?>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"<?php echo esc_url( $link_info['url'] ); ?>\" target=\"_blank\"\n\t\t\t\t\t\t   class=\"csp-link-<?php echo esc_attr( $link_name ); ?>\">\n\t\t\t\t\t\t\t<span><?php echo esc_html( $link_info['label'] ); ?><\/span>\n\n\t\t\t\t\t\t\t<?php if ( 'discord' === $link_info['icon'] ) { ?>\n\t\t\t\t\t\t\t\t<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 127.14 96.36\">\n\t\t\t\t\t\t\t\t\t<path d=\"M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z\" \/>\n\t\t\t\t\t\t\t\t<\/svg>\n\t\t\t\t\t\t\t<?php } else { ?>\n\t\t\t\t\t\t\t\t<span class=\"dashicons dashicons-<?php echo esc_attr( $link_info['icon'] ); ?>\"><\/span>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<?php } ?>\n\t\t\t<\/ul>\n\t\t<\/nav>\n\t<\/div>\n\n\t<section class=\"csp-section-changes\">\n\t\t<h1>\ud83d\udcf0 <?php esc_html_e( 'Latest news', 'code-snippets' ); ?><\/h1>\n\t\t<div class=\"csp-cards\">\n\t\t\t<a class=\"csp-card\" href=\"<?php echo esc_url( $hero['follow_url'] ); ?>\" target=\"_blank\"\n\t\t\t   title=\"<?php esc_attr_e( 'Read more', 'code-snippets' ); ?>\">\n\t\t\t\t<header>\n\t\t\t\t\t<span class=\"dashicons dashicons-external\"><\/span>\n\t\t\t\t\t<h2><?php echo esc_html( $hero['name'] ); ?><\/h2>\n\t\t\t\t<\/header>\n\t\t\t\t<figure>\n\t\t\t\t\t<div id=\"csp-loading-spinner\" class=\"csp-loading-spinner\"><\/div>\n\t\t\t\t\t<img id=\"csp-changes-img\"\n\t\t\t\t\t     onload=\"hideLoadingAnimation()\"\n\t\t\t\t\t     src=\"<?php echo esc_url( $hero['image_url'] ); ?>\"\n\t\t\t\t\t     alt=\"<?php esc_attr_e( 'Latest news image', 'code-snippets' ); ?>);\">\n\t\t\t\t<\/figure>\n\t\t\t<\/a>\n\n\t\t\t<a class=\"csp-card csp-changelog-wrapper\" href=\"https:\/\/wordpress.org\/plugins\/code-snippets\/changelog\" target=\"_blank\"\n\t\t\t   title=\"<?php esc_attr_e( 'Read the full changelog', 'code-snippets' ); ?>\">\n\t\t\t\t<header>\n\t\t\t\t\t<span class=\"dashicons dashicons-external\"><\/span>\n\t\t\t\t\t<h2><?php esc_html_e( 'Latest changes', 'code-snippets' ); ?><\/h2>\n\t\t\t\t<\/header>\n\t\t\t\t<div class=\"csp-section-changelog\">\n\t\t\t\t\t<?php foreach ( $this->api->get_changelog() as $version => $version_changes ) { ?>\n\t\t\t\t\t\t<h3><?php echo esc_html( $version ); ?><\/h3>\n\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\tforeach ( $changelog_sections as $section_key => $section ) {\n\t\t\t\t\t\t\t\tif ( empty( $version_changes[ $section_key ] ) ) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t<span class=\"dashicons dashicons-<?php echo esc_attr( $section['icon'] ); ?>\"><\/span>\n\t\t\t\t\t\t\t\t\t<?php echo esc_html( $section['title'] ); ?>\n\t\t\t\t\t\t\t\t<\/h4>\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\tforeach ( $plugin_types as $plugin_type => $type_label ) {\n\t\t\t\t\t\t\t\t\t\tif ( empty( $version_changes[ $section_key ][ $plugin_type ] ) ) {\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tforeach ( $version_changes[ $section_key ][ $plugin_type ] as $change ) {\n\t\t\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"badge <?php echo esc_attr( $plugin_type ); ?>-badge\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<?php echo esc_html( $type_label ); ?>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span><?php echo esc_html( $change ); ?><\/span>\n\t\t\t\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<?php } ?>\n\t\t\t\t\t\t<\/article>\n\t\t\t\t\t<?php } ?>\n\t\t\t\t<\/div>\n\t\t\t<\/a>\n\t\t<\/div>\n\t<\/section>\n\n\t<section class=\"csp-section-articles csp-section-links\">\n\t\t<h1>\ud83d\udedf <?php esc_html_e( 'Helpful articles', 'code-snippets' ); ?><\/h1>\n\t\t<div class=\"csp-cards\">\n\t\t\t<?php foreach ( $this->api->get_features() as $feature ) { ?>\n\t\t\t\t<a class=\"csp-card\"\n\t\t\t\t   href=\"<?php echo esc_url( $feature['follow_url'] ); ?>\" target=\"_blank\"\n\t\t\t\t   title=\"<?php esc_attr_e( 'Read more', 'code-snippets' ); ?>\">\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img src=\"<?php echo esc_url( $feature['image_url'] ); ?>\"\n\t\t\t\t\t\t     alt=\"<?php esc_attr_e( 'Feature image', 'code-snippets' ); ?>\">\n\t\t\t\t\t<\/figure>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<h2><?php echo esc_html( $feature['title'] ); ?><\/h2>\n\t\t\t\t\t\t<p class=\"csp-card-item-description\"><?php echo esc_html( $feature['description'] ); ?><\/p>\n\t\t\t\t\t<\/header>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<p class=\"csp-card-item-category\"><?php echo esc_html( $feature['category'] ); ?><\/p>\n\t\t\t\t\t\t<span class=\"dashicons dashicons-external\"><\/span>\n\t\t\t\t\t<\/footer>\n\t\t\t\t<\/a>\n\t\t\t<?php } ?>\n\t\t<\/div>\n\t<\/section>\n\n\t<section class=\"csp-section-links csp-section-partners\">\n\t\t<h1>\ud83d\ude80 <?php esc_html_e( 'Partners and apps', 'code-snippets' ); ?><\/h1>\n\t\t<div class=\"csp-cards\">\n\t\t\t<?php foreach ( $this->api->get_partners() as $partner ) { ?>\n\t\t\t\t<a class=\"csp-card\"\n\t\t\t\t   href=\"<?php echo esc_url( $partner['follow_url'] ); ?>\" target=\"_blank\"\n\t\t\t\t   title=\"<?php esc_attr_e( 'Go to Partner', 'code-snippets' ); ?>\">\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img src=\"<?php echo esc_url( $partner['image_url'] ); ?>\"\n\t\t\t\t\t\t     alt=\"<?php esc_attr_e( 'Partner image', 'code-snippets' ); ?>\">\n\t\t\t\t\t<\/figure>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<span class=\"dashicons dashicons-external\"><\/span>\n\t\t\t\t\t\t<h2><?php echo esc_html( $partner['title'] ); ?><\/h2>\n\t\t\t\t\t<\/header>\n\t\t\t\t<\/a>\n\t\t\t<?php } ?>\n\t\t<\/div>\n\t<\/section>\n<\/div>\n\n<script type=\"text\/javascript\">\n\tfunction hideLoadingAnimation() {\n\t\tconst spinner = document.getElementById<HTMLDivElement>('csp-loading-spinner')\n\t\tconst image = document.getElementById<HTMLDivElement>('csp-changes-img')\n\n\t\tspinner.style.display = 'none'\n\t\timage.style.display = 'block'\n\t}\n<\/script>\n"},{"base":"plugins","rel":"code-snippets\/php\/views\/manage.php","ext":"php","size":3982,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * HTML for the Manage Snippets page.\n *\n * @package    Code_Snippets\n * @subpackage Views\n *\/\n\nnamespace Code_Snippets;\n\nuse function Code_Snippets\\Settings\\get_setting;\n\n\/**\n * Loaded from the manage menu class.\n *\n * @var Manage_Menu $this\n *\/\n\nif ( ! defined( 'ABSPATH' ) ) {\n\treturn;\n}\n\n$types = array_merge( [ 'all' => __( 'All Snippets', 'code-snippets' ) ], Plugin::get_types() );\n$current_type = $this->get_current_type();\n\nif ( false !== strpos( code_snippets()->version, 'beta' ) ) {\n\techo '<div class=\"notice beta-test-notice\"><p id=\"beta-testing\">';\n\techo wp_kses(\n\t\t__( 'Thank you for testing this <span class=\"highlight-yellow\">beta version of Code Snippets<\/span>. We would love to hear your thoughts.', 'code-snippets' ),\n\t\t[ 'span' => [ 'class' => [ 'highlight-yellow' ] ] ]\n\t);\n\n\tprintf(\n\t\t' <a href=\"%s\" class=\"button button-secondary\" target=\"_blank\">%s<\/a>',\n\t\tesc_url( __( 'https:\/\/codesnippets.pro\/beta-testing\/feedback\/', 'code-snippets' ) ),\n\t\tesc_html__( 'Share feedback', 'code-snippets' )\n\t);\n\techo '<\/p><\/div>';\n}\n\n?>\n\n<div class=\"wrap\">\n\t<h1>\n\t\t<?php\n\t\tesc_html_e( 'Snippets', 'code-snippets' );\n\n\t\t$this->render_page_title_actions( code_snippets()->is_compact_menu() ? [ 'add', 'import', 'settings' ] : [ 'add', 'import' ] );\n\n\t\t$this->list_table->search_notice();\n\t\t?>\n\t<\/h1>\n\n\t<?php $this->print_messages(); ?>\n\n\t<h2 class=\"nav-tab-wrapper\" id=\"snippet-type-tabs\">\n\t\t<?php\n\n\t\tAdmin::render_snippet_type_tabs( $types, $current_type );\n\n\t\tif ( ! get_setting( 'general', 'hide_upgrade_menu' ) ) { ?>\n\t\t\t<a class=\"button button-large nav-tab-button nav-tab-inactive\"\n\t\t\t   href=\"https:\/\/codesnippets.pro\/pricing\/\" target=\"_blank\"\n\t\t\t   aria-label=\"<?php esc_attr_e( 'Find more about Pro (opens in external tab)', 'code-snippets' ); ?>\">\n\t\t\t\t<?php echo wp_kses( __( 'Upgrade to <span class=\"badge pro-badge small-badge\">Pro<\/span>', 'code-snippets' ), [ 'span' => [ 'class' => true ] ] ); ?>\n\t\t\t\t<span class=\"dashicons dashicons-external\"><\/span>\n\t\t\t<\/a>\n\t\t<?php } ?>\n\t<\/h2>\n\n\t<?php\n\n\t$type_info = [\n\t\t'php'   => [\n\t\t\t__( 'Function snippets are run on your site as if there were in a plugin or theme functions.php file.', 'code-snippets' ),\n\t\t\t__( 'Learn more about function snippets &rarr;', 'code-snippets' ),\n\t\t\t'https:\/\/codesnippets.pro\/learn-php\/',\n\t\t],\n\t\t'html'  => [\n\t\t\t__( 'Content snippets are bits of reusable PHP and HTML content that can be inserted into posts and pages.', 'code-snippets' ),\n\t\t\t__( 'Learn more about content snippets &rarr;', 'code-snippets' ),\n\t\t\t'https:\/\/codesnippets.pro\/learn-html\/',\n\t\t],\n\t\t'css'   => [\n\t\t\t__( 'Style snippets are written in CSS and loaded in the admin area or on the site front-end, just like the theme style.css.', 'code-snippets' ),\n\t\t\t__( 'Learn more about style snippets &rarr;', 'code-snippets' ),\n\t\t\t'https:\/\/codesnippets.pro\/learn-css\/',\n\t\t],\n\t\t'js'    => [\n\t\t\t__( 'Script snippets are loaded on the site front-end in a JavaScript file, either in the head or body sections.', 'code-snippets' ),\n\t\t\t__( 'Learn more about javascript snippets &rarr;', 'code-snippets' ),\n\t\t\t'https:\/\/codesnippets.pro\/learn-js\/',\n\t\t],\n\t\t'cloud' => [\n\t\t\t__( 'See all your public and private snippets that are stored in your Code Snippet Cloud codevault.', 'code-snippets' ),\n\t\t\t__( 'Learn more about Code Snippets Cloud &rarr;', 'code-snippets' ),\n\t\t\t'https:\/\/codesnippets.cloud\/getstarted\/',\n\t\t],\n\t];\n\n\n\tif ( isset( $type_info[ $current_type ] ) ) {\n\t\t$info = $type_info[ $current_type ];\n\n\t\tprintf(\n\t\t\t'<p class=\"snippet-type-description\">%s <a href=\"%s\" target=\"_blank\">%s<\/a><\/p>',\n\t\t\tesc_html( $info[0] ),\n\t\t\tesc_url( $info[2] ),\n\t\t\tesc_html( $info[1] )\n\t\t);\n\t}\n\n\tdo_action( 'code_snippets\/admin\/manage\/before_list_table' );\n\t$this->list_table->views();\n\n\tswitch ( $current_type ) {\n\t\tcase 'cloud_search':\n\t\t\tinclude_once 'partials\/cloud-search.php';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tinclude_once 'partials\/list-table.php';\n\t\t\tbreak;\n\t}\n\n\tdo_action( 'code_snippets\/admin\/manage', $current_type );\n\n\t?>\n<\/div>\n"},{"base":"plugins","rel":"code-snippets\/php\/snippet-ops.php","ext":"php","size":19103,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Functions to perform snippet operations\n *\n * @package Code_Snippets\n *\/\n\nnamespace Code_Snippets;\n\nuse ParseError;\nuse function Code_Snippets\\Settings\\get_self_option;\nuse function Code_Snippets\\Settings\\update_self_option;\n\n\/**\n * Clean the cache where active snippets are stored.\n *\n * @param string              $table_name Snippets table name.\n * @param array<string>|false $scopes     List of scopes. Optional. If not provided, will flush the cache for all scopes.\n *\n * @return void\n *\/\nfunction clean_active_snippets_cache( string $table_name, $scopes = false ) {\n\t$scope_groups = $scopes ? [ $scopes ] : [\n\t\t[ 'head-content', 'footer-content' ],\n\t\t[ 'global', 'single-use', 'front-end' ],\n\t\t[ 'global', 'single-use', 'admin' ],\n\t];\n\n\tforeach ( $scope_groups as $scopes ) {\n\t\twp_cache_delete( sprintf( 'active_snippets_%s_%s', sanitize_key( join( '_', $scopes ) ), $table_name ), CACHE_GROUP );\n\t}\n}\n\n\/**\n * Flush all snippets caches for a given database table.\n *\n * @param string $table_name Snippets table name.\n *\n * @return void\n *\/\nfunction clean_snippets_cache( string $table_name ) {\n\twp_cache_delete( \"all_snippet_tags_$table_name\", CACHE_GROUP );\n\twp_cache_delete( \"all_snippets_$table_name\", CACHE_GROUP );\n\tclean_active_snippets_cache( $table_name );\n}\n\n\/**\n * Retrieve a list of snippets from the database.\n * Read operation.\n *\n * @param array<string> $ids     The IDs of the snippets to fetch.\n * @param bool|null     $network Retrieve multisite-wide snippets (true) or site-wide snippets (false).\n *\n * @return array<Snippet> List of Snippet objects.\n *\n * @since 2.0\n *\/\nfunction get_snippets( array $ids = array(), ?bool $network = null ): array {\n\tglobal $wpdb;\n\n\t\/\/ If only one ID has been passed in, defer to the get_snippet() function.\n\t$ids_count = count( $ids );\n\tif ( 1 === $ids_count ) {\n\t\treturn array( get_snippet( $ids[0], $network ) );\n\t}\n\n\t$network = DB::validate_network_param( $network );\n\t$table_name = code_snippets()->db->get_table_name( $network );\n\n\t$snippets = wp_cache_get( \"all_snippets_$table_name\", CACHE_GROUP );\n\n\t\/\/ Fetch all snippets from the database if none are cached.\n\tif ( ! is_array( $snippets ) ) {\n\t\t$results = $wpdb->get_results( \"SELECT * FROM $table_name\", ARRAY_A );\n\n\t\t$snippets = $results ?\n\t\t\tarray_map(\n\t\t\t\tfunction ( $snippet_data ) use ( $network ) {\n\t\t\t\t\t$snippet_data['network'] = $network;\n\t\t\t\t\treturn new Snippet( $snippet_data );\n\t\t\t\t},\n\t\t\t\t$results\n\t\t\t) :\n\t\t\tarray();\n\n\t\t$snippets = apply_filters( 'code_snippets\/get_snippets', $snippets, $network );\n\n\t\tif ( 0 === $ids_count ) {\n\t\t\twp_cache_set( \"all_snippets_$table_name\", $snippets, CACHE_GROUP );\n\t\t}\n\t}\n\n\t\/\/ If a list of IDs are provided, narrow down the snippets list.\n\tif ( $ids_count > 0 ) {\n\t\t$ids = array_map( 'intval', $ids );\n\t\treturn array_values(\n\t\t\tarray_filter(\n\t\t\t\t$snippets,\n\t\t\t\tfunction ( Snippet $snippet ) use ( $ids ) {\n\t\t\t\t\treturn in_array( $snippet->id, $ids, true );\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t}\n\n\treturn $snippets;\n}\n\n\/**\n * Gets all used tags from the database.\n * Read operation.\n *\n * @since 2.0\n *\/\nfunction get_all_snippet_tags() {\n\tglobal $wpdb;\n\t$table_name = code_snippets()->db->get_table_name();\n\t$cache_key = \"all_snippet_tags_$table_name\";\n\n\t$tags = wp_cache_get( $cache_key, CACHE_GROUP );\n\tif ( $tags ) {\n\t\treturn $tags;\n\t}\n\n\t\/\/ Grab all tags from the database.\n\t$tags = array();\n\t$all_tags = $wpdb->get_col( \"SELECT tags FROM $table_name\" );\n\n\t\/\/ Merge all tags into a single array.\n\tforeach ( $all_tags as $snippet_tags ) {\n\t\t$snippet_tags = code_snippets_build_tags_array( $snippet_tags );\n\t\t$tags = array_merge( $snippet_tags, $tags );\n\t}\n\n\t\/\/ Remove duplicate tags.\n\t$tags = array_values( array_unique( $tags, SORT_REGULAR ) );\n\twp_cache_set( $cache_key, $tags, CACHE_GROUP );\n\treturn $tags;\n}\n\n\/**\n * Make sure that the tags are a valid array.\n *\n * @param array|string $tags The tags to convert into an array.\n *\n * @return array<string> The converted tags.\n *\n * @since 2.0.0\n *\/\nfunction code_snippets_build_tags_array( $tags ): array {\n\n\t\/* If there are no tags set, return an empty array. *\/\n\tif ( empty( $tags ) ) {\n\t\treturn array();\n\t}\n\n\t\/* If the tags are set as a string, convert them into an array. *\/\n\tif ( is_string( $tags ) ) {\n\t\t$tags = wp_strip_all_tags( $tags );\n\t\t$tags = str_replace( ', ', ',', $tags );\n\t\t$tags = explode( ',', $tags );\n\t}\n\n\t\/* If we still don't have an array, just convert whatever we do have into one. *\/\n\treturn (array) $tags;\n}\n\n\/**\n * Retrieve a single snippets from the database.\n * Will return empty snippet object if no snippet ID is specified.\n * Read operation.\n *\n * @param int       $id      The ID of the snippet to retrieve. 0 to build a new snippet.\n * @param bool|null $network Retrieve a multisite-wide snippet (true) or site-wide snippet (false).\n *\n * @return Snippet A single snippet object.\n *\n * @since 2.0.0\n *\/\nfunction get_snippet( int $id = 0, ?bool $network = null ): Snippet {\n\tglobal $wpdb;\n\n\t$id = absint( $id );\n\t$network = DB::validate_network_param( $network );\n\t$table_name = code_snippets()->db->get_table_name( $network );\n\n\tif ( 0 === $id ) {\n\t\t\/\/ If an invalid ID is provided, then return an empty snippet object.\n\t\t$snippet = new Snippet();\n\n\t} else {\n\t\t$cached_snippets = wp_cache_get( \"all_snippets_$table_name\", CACHE_GROUP );\n\n\t\t\/\/ Attempt to fetch snippet from the cached list, if it exists.\n\t\tif ( is_array( $cached_snippets ) ) {\n\t\t\tforeach ( $cached_snippets as $snippet ) {\n\t\t\t\tif ( $snippet->id === $id ) {\n\t\t\t\t\treturn apply_filters( 'code_snippets\/get_snippet', $snippet, $id, $network );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Otherwise, retrieve the snippet from the database.\n\t\t\/\/ phpcs:disable WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$snippet_data = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM $table_name WHERE id = %d\", $id ) );\n\t\t$snippet = new Snippet( $snippet_data );\n\t}\n\n\t$snippet->network = $network;\n\treturn apply_filters( 'code_snippets\/get_snippet', $snippet, $id, $network );\n}\n\n\n\/**\n * Ensure the list of shared network snippets is correct if one has been recently activated or deactivated.\n * Write operation.\n *\n * @access private\n *\n * @param Snippet[] $snippets Snippets that was recently updated.\n *\n * @return boolean Whether an update was performed.\n *\/\nfunction update_shared_network_snippets( array $snippets ): bool {\n\t$shared_ids = [];\n\t$unshared_ids = [];\n\n\tif ( ! is_multisite() ) {\n\t\treturn false;\n\t}\n\n\tforeach ( $snippets as $snippet ) {\n\t\tif ( $snippet->network ) {\n\t\t\tif ( $snippet->shared_network ) {\n\t\t\t\t$shared_ids[] = $snippet->id;\n\t\t\t} else {\n\t\t\t\t$unshared_ids[] = $snippet->id;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! $shared_ids && ! $unshared_ids ) {\n\t\treturn false;\n\t}\n\n\t$existing_shared_ids = get_site_option( 'shared_network_snippets', [] );\n\t$updated_shared_ids = array_values( array_diff( array_merge( $existing_shared_ids, $shared_ids ), $unshared_ids ) );\n\n\tif ( $existing_shared_ids === $updated_shared_ids ) {\n\t\treturn false;\n\t}\n\n\tupdate_site_option( 'shared_network_snippets', $updated_shared_ids );\n\n\t\/\/ Deactivate the snippet on all sites if necessary.\n\tif ( $unshared_ids ) {\n\t\t$sites = get_sites( [ 'fields' => 'ids' ] );\n\n\t\tforeach ( $sites as $site ) {\n\t\t\tswitch_to_blog( $site );\n\t\t\t$active_shared_ids = get_option( 'active_shared_network_snippets' );\n\n\t\t\tif ( is_array( $active_shared_ids ) ) {\n\t\t\t\t$active_shared_ids = array_diff( $active_shared_ids, $unshared_ids );\n\t\t\t\tupdate_option( 'active_shared_network_snippets', $active_shared_ids );\n\t\t\t}\n\n\t\t\tclean_active_snippets_cache( code_snippets()->db->ms_table );\n\t\t}\n\n\t\trestore_current_blog();\n\t}\n\n\treturn true;\n}\n\n\/**\n * Activates a snippet.\n * Write operation.\n *\n * @param int       $id      ID of the snippet to activate.\n * @param bool|null $network Whether the snippets are multisite-wide (true) or site-wide (false).\n *\n * @return Snippet|string Snippet object on success, error message on failure.\n * @since 2.0.0\n *\/\nfunction activate_snippet( int $id, ?bool $network = null ) {\n\tglobal $wpdb;\n\t$network = DB::validate_network_param( $network );\n\t$table_name = code_snippets()->db->get_table_name( $network );\n\n\t\/\/ Retrieve the snippet code from the database for validation before activating.\n\t$snippet = get_snippet( $id, $network );\n\n\tif ( 0 === $snippet->id ) {\n\t\t\/\/ translators: %d: snippet identifier.\n\t\treturn sprintf( __( 'Could not locate snippet with ID %d.', 'code-snippets' ), $id );\n\t}\n\n\t$validator = new Validator( $snippet->code );\n\tif ( $validator->validate() ) {\n\t\treturn __( 'Could not activate snippet: code did not pass validation.', 'code-snippets' );\n\t}\n\n\t$result = $wpdb->update(\n\t\t$table_name,\n\t\tarray( 'active' => '1' ),\n\t\tarray( 'id' => $id ),\n\t\tarray( '%d' ),\n\t\tarray( '%d' )\n\t);\n\n\tif ( ! $result ) {\n\t\treturn __( 'Could not activate snippet.', 'code-snippets' );\n\t}\n\n\tupdate_shared_network_snippets( [ $snippet ] );\n\tdo_action( 'code_snippets\/activate_snippet', $snippet );\n\tclean_snippets_cache( $table_name );\n\treturn $snippet;\n}\n\n\/**\n * Activates multiple snippets.\n * Write operation.\n *\n * @param array<integer> $ids     The IDs of the snippets to activate.\n * @param bool|null      $network Whether the snippets are multisite-wide (true) or site-wide (false).\n *\n * @return Snippet[]|null Snippets which were successfully activated, or null on failure.\n *\n * @since 2.0.0\n *\/\nfunction activate_snippets( array $ids, ?bool $network = null ): ?array {\n\tglobal $wpdb;\n\t$network = DB::validate_network_param( $network );\n\t$table_name = code_snippets()->db->get_table_name( $network );\n\n\t$snippets = get_snippets( $ids, $network );\n\n\tif ( ! $snippets ) {\n\t\treturn null;\n\t}\n\n\t\/\/ Loop through each snippet code and validate individually.\n\t$valid_ids = [];\n\t$valid_snippets = [];\n\n\tforeach ( $snippets as $snippet ) {\n\t\t$validator = new Validator( $snippet->code );\n\t\t$code_error = $validator->validate();\n\n\t\tif ( ! $code_error ) {\n\t\t\t$valid_ids[] = $snippet->id;\n\t\t\t$valid_snippets[] = $snippet;\n\t\t}\n\t}\n\n\t\/\/ If there are no valid snippets, then we're done.\n\tif ( ! $valid_ids ) {\n\t\treturn null;\n\t}\n\n\t\/\/ Build a SQL query containing all IDs, as wpdb::update does not support OR conditionals.\n\t$ids_format = implode( ',', array_fill( 0, count( $valid_ids ), '%d' ) );\n\n\t\/\/ phpcs:disable WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare\n\t$rows_updated = $wpdb->query( $wpdb->prepare( \"UPDATE $table_name SET active = 1 WHERE id IN ($ids_format)\", $valid_ids ) );\n\n\tif ( ! $rows_updated ) {\n\t\treturn null;\n\t}\n\n\tupdate_shared_network_snippets( $valid_snippets );\n\tdo_action( 'code_snippets\/activate_snippets', $valid_snippets, $table_name );\n\tclean_snippets_cache( $table_name );\n\treturn $valid_ids;\n}\n\n\/**\n * Deactivate a snippet.\n * Write operation.\n *\n * @param int       $id      ID of the snippet to deactivate.\n * @param bool|null $network Whether the snippets are multisite-wide (true) or site-wide (false).\n *\n * @return Snippet|null Snippet that was deactivated on success, or null on failure.\n *\n * @since 2.0.0\n *\/\nfunction deactivate_snippet( int $id, ?bool $network = null ): ?Snippet {\n\tglobal $wpdb;\n\t$network = DB::validate_network_param( $network );\n\t$table = code_snippets()->db->get_table_name( $network );\n\n\t\/\/ Set the snippet to active.\n\t$result = $wpdb->update(\n\t\t$table,\n\t\tarray( 'active' => '0' ),\n\t\tarray( 'id' => $id ),\n\t\tarray( '%d' ),\n\t\tarray( '%d' )\n\t);\n\n\tif ( ! $result ) {\n\t\treturn null;\n\t}\n\n\t\/\/ Update the recently active list.\n\t$snippet = get_snippet( $id );\n\t$recently_active = [ $id => time() ] + get_self_option( $network, 'recently_activated_snippets', [] );\n\tupdate_self_option( $network, 'recently_activated_snippets', $recently_active );\n\n\tupdate_shared_network_snippets( [ $snippet ] );\n\tdo_action( 'code_snippets\/deactivate_snippet', $id, $network );\n\tclean_snippets_cache( $table );\n\n\treturn $snippet;\n}\n\n\/**\n * Deletes a snippet from the database.\n * Write operation.\n *\n * @param int       $id      ID of the snippet to delete.\n * @param bool|null $network Delete from network-wide (true) or site-wide (false) table.\n *\n * @return bool Whether the snippet was deleted successfully.\n *\n * @since 2.0.0\n *\/\nfunction delete_snippet( int $id, ?bool $network = null ): bool {\n\tglobal $wpdb;\n\t$network = DB::validate_network_param( $network );\n\t$table = code_snippets()->db->get_table_name( $network );\n\n\t$result = $wpdb->delete(\n\t\t$table,\n\t\tarray( 'id' => $id ),\n\t\tarray( '%d' )\n\t);\n\n\tif ( $result ) {\n\t\tdo_action( 'code_snippets\/delete_snippet', $id, $network );\n\t\tclean_snippets_cache( $table );\n\t\tcode_snippets()->cloud_api->delete_snippet_from_transient_data( $id );\n\t}\n\n\treturn (bool) $result;\n}\n\n\n\/**\n * Test snippet code for errors, augmenting the snippet object.\n *\n * @param Snippet $snippet Snippet object.\n *\/\nfunction test_snippet_code( Snippet $snippet ) {\n\t$snippet->code_error = null;\n\n\tif ( 'php' !== $snippet->type ) {\n\t\treturn;\n\t}\n\n\t$validator = new Validator( $snippet->code );\n\t$result = $validator->validate();\n\n\tif ( $result ) {\n\t\t$snippet->code_error = [ $result['message'], $result['line'] ];\n\t}\n\n\tif ( ! $snippet->code_error && 'single-use' !== $snippet->scope ) {\n\t\t$result = execute_snippet( $snippet->code, $snippet->id, true );\n\n\t\tif ( $result instanceof ParseError ) {\n\t\t\t$snippet->code_error = [\n\t\t\t\tucfirst( rtrim( $result->getMessage(), '.' ) ) . '.',\n\t\t\t\t$result->getLine(),\n\t\t\t];\n\t\t}\n\t}\n}\n\n\/**\n * Saves a snippet to the database.\n * Write operation.\n *\n * @param Snippet|array<string, mixed> $snippet The snippet to add\/update to the database.\n *\n * @return Snippet|null Updated snippet.\n *\n * @since 2.0.0\n *\/\nfunction save_snippet( $snippet ) {\n\tglobal $wpdb;\n\t$table = code_snippets()->db->get_table_name( $snippet->network );\n\n\tif ( ! $snippet instanceof Snippet ) {\n\t\t$snippet = new Snippet( $snippet );\n\t}\n\n\t\/\/ Update the last modification date if necessary.\n\t$snippet->update_modified();\n\n\tif ( 'php' === $snippet->type ) {\n\t\t\/\/ Remove tags from beginning and end of snippet.\n\t\t$snippet->code = preg_replace( '|^\\s*<\\?(php)?|', '', $snippet->code );\n\t\t$snippet->code = preg_replace( '|\\?>\\s*$|', '', $snippet->code );\n\n\t\t\/\/ Deactivate snippet if code contains errors.\n\t\tif ( $snippet->active && 'single-use' !== $snippet->scope ) {\n\t\t\ttest_snippet_code( $snippet );\n\n\t\t\tif ( $snippet->code_error ) {\n\t\t\t\t$snippet->active = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Increment the revision number unless revision = 1 or revision is not set.\n\tif ( $snippet->revision && $snippet->revision > 1 ) {\n\t\t$snippet->increment_revision();\n\t}\n\n\t\/\/ Shared network snippets are always considered inactive.\n\t$snippet->active = $snippet->active && ! $snippet->shared_network;\n\n\t\/\/ Build the list of data to insert.\n\t$data = [\n\t\t'name'         => $snippet->name,\n\t\t'description'  => $snippet->desc,\n\t\t'code'         => $snippet->code,\n\t\t'tags'         => $snippet->tags_list,\n\t\t'scope'        => $snippet->scope,\n\t\t'condition_id' => intval( $snippet->condition_id ),\n\t\t'priority'     => $snippet->priority,\n\t\t'active'       => intval( $snippet->active ),\n\t\t'modified'     => $snippet->modified,\n\t\t'revision'     => $snippet->revision,\n\t\t'cloud_id'     => $snippet->cloud_id ? $snippet->cloud_id : null,\n\t];\n\n\t\/\/ Create a new snippet if the ID is not set.\n\tif ( 0 === $snippet->id ) {\n\t\t$result = $wpdb->insert( $table, $data, '%s' );\n\t\tif ( false === $result ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$snippet->id = $wpdb->insert_id;\n\t\tdo_action( 'code_snippets\/create_snippet', $snippet, $table );\n\t} else {\n\n\t\t\/\/ Otherwise, update the snippet data.\n\t\t$result = $wpdb->update( $table, $data, [ 'id' => $snippet->id ], null, [ '%d' ] );\n\t\tif ( false === $result ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdo_action( 'code_snippets\/update_snippet', $snippet, $table );\n\t}\n\n\tupdate_shared_network_snippets( [ $snippet ] );\n\tclean_snippets_cache( $table );\n\treturn $snippet;\n}\n\n\/**\n * Execute a snippet.\n * Execute operation.\n *\n * Code must NOT be escaped, as it will be executed directly.\n *\n * @param string  $code  Snippet code to execute.\n * @param integer $id    Snippet ID.\n * @param boolean $force Force snippet execution, even if save mode is active.\n *\n * @return ParseError|mixed Code error if encountered during execution, or result of snippet execution otherwise.\n *\n * @since 2.0.0\n *\/\nfunction execute_snippet( string $code, int $id = 0, bool $force = false ) {\n\t\/**\n\t * Do not continue if safe mode is active.\n\t *\n\t * @noinspection PhpUndefinedConstantInspection\n\t *\/\n\tif ( empty( $code ) || ( ! $force && defined( 'CODE_SNIPPETS_SAFE_MODE' ) && CODE_SNIPPETS_SAFE_MODE ) ) {\n\t\treturn false;\n\t}\n\n\tob_start();\n\n\ttry {\n\t\t$result = eval( $code );\n\t} catch ( ParseError $parse_error ) {\n\t\t$result = $parse_error;\n\t}\n\n\tob_end_clean();\n\n\tdo_action( 'code_snippets\/after_execute_snippet', $code, $id, $result );\n\treturn $result;\n}\n\n\/**\n * Retrieve a single snippets from the database using its cloud ID.\n *\n * Read operation.\n *\n * @param string       $cloud_id  The Cloud ID of the snippet to retrieve.\n * @param boolean|null $multisite Retrieve a multisite-wide snippet (true) or site-wide snippet (false).\n *\n * @return Snippet|null A single snippet object or null if no snippet was found.\n *\n * @since 3.5.0\n *\/\nfunction get_snippet_by_cloud_id( string $cloud_id, ?bool $multisite = null ): ?Snippet {\n\tglobal $wpdb;\n\n\t$multisite = DB::validate_network_param( $multisite );\n\t$table_name = code_snippets()->db->get_table_name( $multisite );\n\n\t$cached_snippets = wp_cache_get( \"all_snippets_$table_name\", CACHE_GROUP );\n\n\t\/\/ Attempt to fetch snippet from the cached list, if it exists.\n\tif ( is_array( $cached_snippets ) ) {\n\t\tforeach ( $cached_snippets as $snippet ) {\n\t\t\tif ( $snippet->cloud_id === $cloud_id ) {\n\t\t\t\treturn apply_filters( 'code_snippets\/get_snippet_by_cloud_id', $snippet, $cloud_id, $multisite );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Otherwise, search for the snippet from the database.\n\t$snippet_data = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM $table_name WHERE cloud_id = %s\", $cloud_id ) ); \/\/ cache pass, db call ok.\n\t$snippet = $snippet_data ? new Snippet( $snippet_data ) : null;\n\n\treturn apply_filters( 'code_snippets\/get_snippet_by_cloud_id', $snippet, $cloud_id, $multisite );\n}\n\n\/**\n * Update a snippet entry given a list of fields.\n * Write operation.\n *\n * @param int                  $snippet_id ID of the snippet to update.\n * @param array<string, mixed> $fields     An array of fields mapped to their values.\n * @param bool|null            $network    Update in network-wide (true) or site-wide (false) table.\n *\/\nfunction update_snippet_fields( int $snippet_id, array $fields, ?bool $network = null ) {\n\tglobal $wpdb;\n\n\t$table = code_snippets()->db->get_table_name( $network );\n\n\t\/\/ Build a new snippet object for the validation.\n\t$snippet = new Snippet();\n\t$snippet->id = $snippet_id;\n\n\t\/\/ Validate fields through the snippet class and copy them into a clean array.\n\t$clean_fields = array();\n\n\tforeach ( $fields as $field => $value ) {\n\n\t\tif ( $snippet->set_field( $field, $value ) ) {\n\t\t\t$clean_fields[ $field ] = $snippet->$field;\n\t\t}\n\t}\n\n\t\/\/ Update the snippet in the database.\n\t$wpdb->update( $table, $clean_fields, array( 'id' => $snippet->id ), null, array( '%d' ) );\n\n\tdo_action( 'code_snippets\/update_snippet', $snippet->id, $table );\n\tclean_snippets_cache( $table );\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/admin-menus\/class-welcome-menu.php","ext":"php","size":1881,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\n\/**\n * This class handles the welcome menu.\n *\n * @since   3.7.0\n * @package Code_Snippets\n *\/\nclass Welcome_Menu extends Admin_Menu {\n\n\t\/**\n\t * Instance of Welcome_API class.\n\t *\n\t * @var Welcome_API\n\t *\/\n\tprotected Welcome_API $api;\n\n\t\/**\n\t * Class constructor\n\t *\n\t * @param Welcome_API $api Instance of API class.\n\t *\/\n\tpublic function __construct( $api ) {\n\t\tparent::__construct(\n\t\t\t'welcome',\n\t\t\t_x( \"What's New\", 'menu label', 'code-snippets' ),\n\t\t\t__( 'Welcome to Code Snippets', 'code-snippets' )\n\t\t);\n\n\t\t$this->api = $api;\n\t}\n\n\t\/**\n\t * Enqueue assets necessary for the welcome menu.\n\t *\n\t * @return void\n\t *\/\n\tpublic function enqueue_assets() {\n\t\twp_enqueue_style(\n\t\t\t'code-snippets-welcome',\n\t\t\tplugins_url( 'dist\/welcome.css', PLUGIN_FILE ),\n\t\t\t[],\n\t\t\tPLUGIN_VERSION\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieve a list of links to display in the page header.\n\t *\n\t * @return array<string, array{url: string, icon: string, label: string}>\n\t *\/\n\tprotected function get_header_links(): array {\n\t\t$links = [\n\t\t\t'cloud'     => [\n\t\t\t\t'url'   => 'https:\/\/codesnippets.cloud',\n\t\t\t\t'icon'  => 'cloud',\n\t\t\t\t'label' => __( 'Cloud', 'code-snippets' ),\n\t\t\t],\n\t\t\t'resources' => [\n\t\t\t\t'url'   => 'https:\/\/help.codesnippets.pro\/',\n\t\t\t\t'icon'  => 'sos',\n\t\t\t\t'label' => __( 'Support', 'code-snippets' ),\n\t\t\t],\n\t\t\t'facebook'  => [\n\t\t\t\t'url'   => 'https:\/\/www.facebook.com\/groups\/282962095661875\/',\n\t\t\t\t'icon'  => 'facebook',\n\t\t\t\t'label' => __( 'Community', 'code-snippets' ),\n\t\t\t],\n\t\t\t'discord'   => [\n\t\t\t\t'url'   => 'https:\/\/snipco.de\/discord',\n\t\t\t\t'icon'  => 'discord',\n\t\t\t\t'label' => __( 'Discord', 'code-snippets' ),\n\t\t\t],\n\t\t];\n\n\t\tif ( ! code_snippets()->licensing->is_licensed() ) {\n\t\t\t$links['pro'] = [\n\t\t\t\t'url'   => 'https:\/\/codesnippets.pro\/pricing\/',\n\t\t\t\t'icon'  => 'cart',\n\t\t\t\t'label' => __( 'Upgrade to Pro', 'code-snippets' ),\n\t\t\t];\n\t\t}\n\n\t\treturn $links;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/admin-menus\/class-edit-menu.php","ext":"php","size":5937,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse function Code_Snippets\\Settings\\get_setting;\n\n\/**\n * This class handles the add\/edit menu.\n *\/\nclass Edit_Menu extends Admin_Menu {\n\n\t\/**\n\t * Handle for JavaScript asset file.\n\t *\/\n\tpublic const JS_HANDLE = 'code-snippets-edit-menu';\n\n\t\/**\n\t * Handle for CSS asset file.\n\t *\/\n\tpublic const CSS_HANDLE = 'code-snippets-edit';\n\n\t\/**\n\t * The snippet object currently being edited\n\t *\n\t * @var Snippet|null\n\t * @see Edit_Menu::load_snippet_data()\n\t *\/\n\tprotected ?Snippet $snippet = null;\n\n\t\/**\n\t * Constructor.\n\t *\n\t * @return void\n\t *\/\n\tpublic function __construct() {\n\t\tparent::__construct(\n\t\t\t'edit',\n\t\t\t_x( 'Edit Snippet', 'menu label', 'code-snippets' ),\n\t\t\t__( 'Edit Snippet', 'code-snippets' )\n\t\t);\n\t}\n\n\t\/**\n\t * Register action and filter hooks.\n\t *\n\t * @return void\n\t *\/\n\tpublic function run() {\n\t\tparent::run();\n\t\t$this->remove_debug_bar_codemirror();\n\t}\n\n\t\/**\n\t * Register the admin menu\n\t *\n\t * @return void\n\t *\/\n\tpublic function register() {\n\t\tparent::register();\n\n\t\t\/\/ Only preserve the edit menu if we are currently editing a snippet.\n\t\tif ( ! isset( $_REQUEST['page'] ) || $_REQUEST['page'] !== $this->slug ) {\n\t\t\tremove_submenu_page( $this->base_slug, $this->slug );\n\t\t}\n\n\t\t\/\/ Add New Snippet menu.\n\t\t$this->add_menu(\n\t\t\tcode_snippets()->get_menu_slug( 'add' ),\n\t\t\t_x( 'Add New', 'menu label', 'code-snippets' ),\n\t\t\t__( 'Create New Snippet', 'code-snippets' )\n\t\t);\n\t}\n\n\t\/**\n\t * Executed when the menu is loaded.\n\t *\n\t * @return void\n\t *\/\n\tpublic function load() {\n\t\tparent::load();\n\n\t\t$this->load_snippet_data();\n\t\t$this->ensure_correct_page();\n\n\t\t$contextual_help = new Contextual_Help( 'edit' );\n\t\t$contextual_help->load();\n\t}\n\n\t\/**\n\t * Disallow vising the Edit Snippet page without a valid ID.\n\t *\n\t * @return void\n\t *\/\n\tprotected function ensure_correct_page() {\n\t\t$screen = get_current_screen();\n\t\t$edit_hook = get_plugin_page_hookname( $this->slug, $this->base_slug );\n\t\t$edit_hook .= $screen->in_admin( 'network' ) ? '-network' : '';\n\n\t\t\/\/ Disallow visiting the edit snippet page without a valid ID.\n\t\tif ( $screen->base === $edit_hook && ( empty( $_REQUEST['id'] ) || 0 === $this->snippet->id || null === $this->snippet->id ) &&\n\t\t     ! isset( $_REQUEST['preview'] ) ) {\n\t\t\twp_safe_redirect( code_snippets()->get_menu_url( 'add' ) );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Render the edit menu interface.\n\t *\n\t * @return void\n\t *\/\n\tpublic function render() {\n\t\tprintf(\n\t\t\t'<div id=\"edit-snippet-form-container\">%s<\/div>',\n\t\t\tesc_html__( 'Loading edit page\u2026', 'code-snippets' )\n\t\t);\n\t}\n\n\t\/**\n\t * Load the data for the snippet currently being edited.\n\t *\/\n\tpublic function load_snippet_data() {\n\t\t$edit_id = isset( $_REQUEST['id'] ) ? absint( $_REQUEST['id'] ) : 0;\n\n\t\t$this->snippet = get_snippet( $edit_id );\n\n\t\tif ( 0 === $edit_id && isset( $_GET['type'] ) && sanitize_key( $_GET['type'] ) !== $this->snippet->type ) {\n\t\t\t$type = sanitize_key( $_GET['type'] );\n\n\t\t\t$default_scopes = [\n\t\t\t\t'php'  => 'global',\n\t\t\t\t'css'  => 'site-css',\n\t\t\t\t'html' => 'content',\n\t\t\t\t'js'   => 'site-head-js',\n\t\t\t\t'cond' => 'condition',\n\t\t\t];\n\n\t\t\tif ( isset( $default_scopes[ $type ] ) ) {\n\t\t\t\t$this->snippet->scope = $default_scopes[ $type ];\n\t\t\t}\n\t\t}\n\n\t\t$this->snippet = apply_filters( 'code_snippets\/admin\/load_snippet_data', $this->snippet );\n\t}\n\n\t\/**\n\t * Enqueue assets for the edit menu\n\t *\n\t * @return void\n\t *\/\n\tpublic function enqueue_assets() {\n\t\t$plugin = code_snippets();\n\t\t$rtl = is_rtl() ? '-rtl' : '';\n\n\t\t$settings = Settings\\get_settings_values();\n\t\t$tags_enabled = $settings['general']['enable_tags'];\n\t\t$desc_enabled = $settings['general']['enable_description'];\n\n\t\tenqueue_code_editor( $this->snippet->type );\n\n\t\twp_enqueue_style(\n\t\t\tself::CSS_HANDLE,\n\t\t\tplugins_url( \"dist\/edit$rtl.css\", $plugin->file ),\n\t\t\t[\n\t\t\t\t'code-editor',\n\t\t\t\t'wp-components',\n\t\t\t],\n\t\t\t$plugin->version\n\t\t);\n\n\t\twp_enqueue_script(\n\t\t\tself::JS_HANDLE,\n\t\t\tplugins_url( 'dist\/edit.js', $plugin->file ),\n\t\t\t[\n\t\t\t\t'code-snippets-code-editor',\n\t\t\t\t'react',\n\t\t\t\t'react-dom',\n\t\t\t\t'wp-url',\n\t\t\t\t'wp-i18n',\n\t\t\t\t'wp-element',\n\t\t\t\t'wp-components',\n\t\t\t],\n\t\t\t$plugin->version,\n\t\t\ttrue\n\t\t);\n\n\t\twp_set_script_translations( self::JS_HANDLE, 'code-snippets' );\n\n\t\tif ( $desc_enabled ) {\n\t\t\tremove_editor_styles();\n\t\t\twp_enqueue_editor();\n\t\t}\n\n\t\t$plugin->localize_script( self::JS_HANDLE );\n\n\t\twp_localize_script(\n\t\t\tself::JS_HANDLE,\n\t\t\t'CODE_SNIPPETS_EDIT',\n\t\t\t[\n\t\t\t\t'snippet'           => $this->snippet->get_fields(),\n\t\t\t\t'pageTitleActions'  => $plugin->is_compact_menu() ? $this->page_title_action_links( [ 'manage', 'import', 'settings' ] ) : [],\n\t\t\t\t'isPreview'         => isset( $_REQUEST['preview'] ),\n\t\t\t\t'activateByDefault' => get_setting( 'general', 'activate_by_default' ),\n\t\t\t\t'editorTheme'       => get_setting( 'editor', 'theme' ),\n\t\t\t\t'enableDownloads'   => apply_filters( 'code_snippets\/enable_downloads', true ),\n\t\t\t\t'enableDescription' => $desc_enabled,\n\t\t\t\t'hideUpsell'        => get_setting( 'general', 'hide_upgrade_menu' ),\n\t\t\t\t'tagOptions'        => apply_filters(\n\t\t\t\t\t'code_snippets\/tag_editor_options',\n\t\t\t\t\t[\n\t\t\t\t\t\t'enabled'       => $tags_enabled,\n\t\t\t\t\t\t'allowSpaces'   => true,\n\t\t\t\t\t\t'availableTags' => $tags_enabled ? get_all_snippet_tags() : [],\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\t'descEditorOptions' => [\n\t\t\t\t\t'rows' => $settings['general']['visual_editor_rows'],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Remove the old CodeMirror version used by the Debug Bar Console plugin that is messing up the snippet editor.\n\t *\/\n\tpublic function remove_debug_bar_codemirror() {\n\t\t\/\/ Try to discern if we are on the single snippet page as good as we can at this early time.\n\t\t$is_codemirror_page =\n\t\t\tis_admin() && 'admin.php' === $GLOBALS['pagenow'] && isset( $_GET['page'] ) && (\n\t\t\t\tcode_snippets()->get_menu_slug( 'edit' ) === $_GET['page'] ||\n\t\t\t\tcode_snippets()->get_menu_slug( 'settings' ) === $_GET['page']\n\t\t\t);\n\n\t\tif ( $is_codemirror_page ) {\n\t\t\tremove_action( 'debug_bar_enqueue_scripts', 'debug_bar_console_scripts' );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/admin-menus\/class-import-menu.php","ext":"php","size":4464,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\n\/**\n * This class handles the import admin menu.\n *\n * @since   2.4.0\n * @package Code_Snippets\n *\/\nclass Import_Menu extends Admin_Menu {\n\n\t\/**\n\t * Class constructor\n\t *\/\n\tpublic function __construct() {\n\t\tparent::__construct(\n\t\t\t'import',\n\t\t\t_x( 'Import', 'menu label', 'code-snippets' ),\n\t\t\t__( 'Import Snippets', 'code-snippets' )\n\t\t);\n\t}\n\n\t\/**\n\t * Register action and filter hooks\n\t *\/\n\tpublic function run() {\n\t\tparent::run();\n\t\tadd_action( 'admin_init', array( $this, 'register_importer' ) );\n\t\tadd_action( 'load-importer-code-snippets', array( $this, 'load' ) );\n\t}\n\n\t\/**\n\t * Executed when the menu is loaded\n\t *\/\n\tpublic function load() {\n\t\tparent::load();\n\n\t\t$contextual_help = new Contextual_Help( 'import' );\n\t\t$contextual_help->load();\n\n\t\t$this->process_import_files();\n\t}\n\n\t\/**\n\t * Process the uploaded import files\n\t *\/\n\tprivate function process_import_files() {\n\n\t\t\/\/ Ensure the import file exists.\n\t\tif ( ! isset(\n\t\t\t$_FILES['code_snippets_import_files']['name'],\n\t\t\t$_FILES['code_snippets_import_files']['type'],\n\t\t\t$_FILES['code_snippets_import_files']['tmp_name']\n\t\t) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_admin_referer( 'import_code_snippets_file' );\n\n\t\t\/\/ phpcs:disable WordPress.Security.ValidatedSanitizedInput.MissingUnslash,WordPress.Security.ValidatedSanitizedInput.InputNotSanitized\n\t\t$upload_files = $_FILES['code_snippets_import_files']['tmp_name'];\n\t\t\/\/ phpcs:disable WordPress.Security.ValidatedSanitizedInput.MissingUnslash,WordPress.Security.ValidatedSanitizedInput.InputNotSanitized\n\t\t$upload_filenames = $_FILES['code_snippets_import_files']['name'];\n\t\t$upload_mime_types = array_map( 'sanitize_mime_type', wp_unslash( $_FILES['code_snippets_import_files']['type'] ) );\n\n\t\t$count = 0;\n\t\t$network = is_network_admin();\n\t\t$error = false;\n\t\t$dup_action = isset( $_POST['duplicate_action'] ) ? sanitize_key( $_POST['duplicate_action'] ) : 'ignore';\n\n\t\t\/\/ Loop through the uploaded files and import the snippets.\n\t\tforeach ( $upload_files as $i => $import_file ) {\n\t\t\t$filename_info = pathinfo( $upload_filenames[ $i ] );\n\t\t\t$ext = $filename_info['extension'];\n\t\t\t$mime_type = $upload_mime_types[ $i ];\n\n\t\t\t$import = new Import( $import_file, $network, $dup_action );\n\n\t\t\tif ( 'json' === $ext || 'application\/json' === $mime_type ) {\n\t\t\t\t$result = $import->import_json();\n\t\t\t} elseif ( 'xml' === $ext || 'text\/xml' === $mime_type ) {\n\t\t\t\t$result = $import->import_xml();\n\t\t\t} else {\n\t\t\t\t$result = false;\n\t\t\t}\n\n\t\t\tif ( false === $result ) {\n\t\t\t\t$error = true;\n\t\t\t} else {\n\t\t\t\t$count += count( $result );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Send the amount of imported snippets to the page.\n\t\t$url = add_query_arg( $error ? array( 'error' => true ) : array( 'imported' => $count ) );\n\t\twp_safe_redirect( esc_url_raw( $url ) );\n\t\texit;\n\t}\n\n\t\/**\n\t * Add the importer to the Tools > Import menu\n\t *\/\n\tpublic function register_importer() {\n\n\t\t\/* Only register the importer if the current user can manage snippets *\/\n\t\tif ( ! defined( 'WP_LOAD_IMPORTERS' ) || ! code_snippets()->current_user_can() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/* Register the Code Snippets importer with WordPress *\/\n\t\tregister_importer(\n\t\t\t'code-snippets',\n\t\t\t__( 'Code Snippets', 'code-snippets' ),\n\t\t\t__( 'Import snippets from a code snippets export file', 'code-snippets' ),\n\t\t\tarray( $this, 'render' )\n\t\t);\n\t}\n\n\t\/**\n\t * Print the status and error messages\n\t *\/\n\tprotected function print_messages() {\n\n\t\tif ( ! empty( $_REQUEST['error'] ) ) {\n\t\t\techo '<div id=\"message\" class=\"error fade\"><p>';\n\t\t\tesc_html_e( 'An error occurred when processing the import files.', 'code-snippets' );\n\t\t\techo '<\/p><\/div>';\n\t\t}\n\n\t\tif ( isset( $_REQUEST['imported'] ) ) {\n\t\t\techo '<div id=\"message\" class=\"updated fade\"><p>';\n\n\t\t\t$imported = intval( $_REQUEST['imported'] );\n\n\t\t\tif ( 0 === $imported ) {\n\t\t\t\tesc_html_e( 'No snippets were imported.', 'code-snippets' );\n\n\t\t\t} else {\n\t\t\t\t\/* translators: %d: amount of snippets imported *\/\n\t\t\t\tprintf(\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Successfully imported %d snippet.',\n\t\t\t\t\t\t'Successfully imported %d snippets.',\n\t\t\t\t\t\t$imported,\n\t\t\t\t\t\t'code-snippets'\n\t\t\t\t\t),\n\t\t\t\t\t'<strong>' . number_format_i18n( $imported ) . '<\/strong>',\n\t\t\t\t);\n\n\t\t\t\tprintf(\n\t\t\t\t\t' <a href=\"%s\">%s<\/a>',\n\t\t\t\t\tesc_url( code_snippets()->get_menu_url( 'manage' ) ),\n\t\t\t\t\tesc_html__( 'Have fun!', 'code-snippets' )\n\t\t\t\t);\n\t\t\t}\n\n\t\t\techo '<\/p><\/div>';\n\t\t}\n\t}\n\n\t\/**\n\t * Empty implementation for enqueue_assets.\n\t *\n\t * @return void\n\t *\/\n\tpublic function enqueue_assets() {\n\t\t\/\/ none required.\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/admin-menus\/class-admin-menu.php","ext":"php","size":4726,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\n\/**\n * Base class for a plugin admin menu.\n *\/\nabstract class Admin_Menu {\n\n\t\/**\n\t * The snippet page short name.\n\t *\n\t * @var string\n\t *\/\n\tpublic string $name;\n\n\t\/**\n\t * The label shown in the admin menu.\n\t *\n\t * @var string\n\t *\/\n\tpublic string $label;\n\n\t\/**\n\t * The text used for the page title.\n\t *\n\t * @var string\n\t *\/\n\tpublic string $title;\n\n\t\/**\n\t * The base slug for the top-level admin menu.\n\t *\n\t * @var string\n\t *\/\n\tprotected string $base_slug;\n\n\t\/**\n\t * The slug for this admin menu.\n\t *\n\t * @var string\n\t *\/\n\tprotected string $slug;\n\n\t\/**\n\t * Constructor.\n\t *\n\t * @param string $name  The snippet page short name.\n\t * @param string $label The label shown in the admin menu.\n\t * @param string $title The text used for the page title.\n\t *\/\n\tpublic function __construct( string $name, string $label, string $title ) {\n\t\t$this->name = $name;\n\t\t$this->label = $label;\n\t\t$this->title = $title;\n\n\t\t$this->base_slug = code_snippets()->get_menu_slug();\n\t\t$this->slug = code_snippets()->get_menu_slug( $name );\n\t}\n\n\t\/**\n\t * Register action and filter hooks.\n\t *\n\t * @return void\n\t *\/\n\tpublic function run() {\n\t\tif ( ! code_snippets()->is_compact_menu() ) {\n\t\t\tadd_action( 'admin_menu', array( $this, 'register' ) );\n\t\t\tadd_action( 'network_admin_menu', array( $this, 'register' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Add a sub-menu to the Snippets menu.\n\t *\n\t * @param string $slug  Menu slug.\n\t * @param string $label Label shown in admin menu.\n\t * @param string $title Page title.\n\t *\n\t * @return void\n\t *\/\n\tpublic function add_menu( string $slug, string $label, string $title ) {\n\t\t$hook = add_submenu_page(\n\t\t\t$this->base_slug,\n\t\t\t$title,\n\t\t\t$label,\n\t\t\tcode_snippets()->get_cap(),\n\t\t\t$slug,\n\t\t\tarray( $this, 'render' )\n\t\t);\n\n\t\tadd_action( 'load-' . $hook, array( $this, 'load' ) );\n\t}\n\n\t\/**\n\t * Register the admin menu\n\t *\/\n\tpublic function register() {\n\t\t$this->add_menu( $this->slug, $this->label, $this->title );\n\t}\n\n\t\/**\n\t * Render the content of a vew template\n\t *\n\t * @param string $name Name of view template to render.\n\t *\/\n\tprotected function render_view( string $name ) {\n\t\tinclude dirname( PLUGIN_FILE ) . '\/php\/views\/' . $name . '.php';\n\t}\n\n\t\/**\n\t * Render the menu\n\t *\/\n\tpublic function render() {\n\t\t$this->render_view( $this->name );\n\t}\n\n\t\/**\n\t * Print the status and error messages\n\t *\/\n\tprotected function print_messages() {\n\t\t\/\/ None required by default.\n\t}\n\n\t\/**\n\t * Executed when the admin page is loaded\n\t *\/\n\tpublic function load() {\n\t\t\/\/ Make sure the user has permission to be here.\n\t\tif ( ! current_user_can( code_snippets()->get_cap() ) ) {\n\t\t\twp_die( esc_html__( 'You are not authorized to access this page.', 'code-snippets' ) );\n\t\t}\n\n\t\t\/\/ Create the snippet tables if they are missing.\n\t\t$db = code_snippets()->db;\n\n\t\tif ( is_multisite() ) {\n\t\t\t$db->create_missing_table( $db->ms_table );\n\t\t}\n\t\t$db->create_missing_table( $db->table );\n\n\t\tadd_action( 'admin_enqueue_scripts', array( $this, 'enqueue_assets' ) );\n\t}\n\n\t\/**\n\t * Enqueue scripts and stylesheets for the admin page, if necessary\n\t *\/\n\tabstract public function enqueue_assets();\n\n\t\/**\n\t * Generate a list of page title links for passing to React.\n\t *\n\t * @param array<string> $actions List of actions to convert into links, as array values.\n\t *\n\t * @return array<string, string> Link labels keyed to link URLs.\n\t *\/\n\tpublic function page_title_action_links( array $actions ): array {\n\t\t$plugin = code_snippets();\n\t\t$links = [];\n\n\t\tforeach ( $actions as $action ) {\n\t\t\tif ( 'settings' === $action && ! isset( $plugin->admin->menus['settings'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$url = $plugin->get_menu_url( $action );\n\n\t\t\tif ( isset( $_GET['type'] ) && in_array( $_GET['type'], Snippet::get_types(), true ) ) {\n\t\t\t\t$url = add_query_arg( 'type', sanitize_key( wp_unslash( $_GET['type'] ) ), $url );\n\t\t\t}\n\n\t\t\tswitch ( $action ) {\n\t\t\t\tcase 'manage':\n\t\t\t\t\t$label = _x( 'Manage', 'snippets', 'code-snippets' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'add':\n\t\t\t\t\t$label = _x( 'Add New', 'snippet', 'code-snippets' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'import':\n\t\t\t\t\t$label = _x( 'Import', 'snippets', 'code-snippets' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'settings':\n\t\t\t\t\t$label = _x( 'Settings', 'snippets', 'code-snippets' );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$label = '';\n\t\t\t}\n\n\t\t\tif ( $label && $url ) {\n\t\t\t\t$links[ $label ] = $url;\n\t\t\t}\n\t\t}\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Render a list of links to other pages in the page title\n\t *\n\t * @param array<string> $actions List of actions to render as links, as array values.\n\t *\/\n\tpublic function render_page_title_actions( array $actions ) {\n\t\tforeach ( $this->page_title_action_links( $actions ) as $label => $url ) {\n\t\t\tprintf( '<a href=\"%s\" class=\"page-title-action\">%s<\/a>', esc_url( $url ), esc_html( $label ) );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/admin-menus\/class-settings-menu.php","ext":"php","size":6054,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse const Code_Snippets\\Settings\\CACHE_KEY;\nuse const Code_Snippets\\Settings\\OPTION_GROUP;\nuse const Code_Snippets\\Settings\\OPTION_NAME;\n\n\/**\n * This class handles the settings admin menu\n *\n * @since   2.4.0\n * @package Code_Snippets\n *\/\nclass Settings_Menu extends Admin_Menu {\n\n\t\/**\n\t * Settings page name as registered with the Settings API.\n\t *\/\n\tpublic const SETTINGS_PAGE = 'code-snippets';\n\n\t\/**\n\t * Constructor\n\t *\/\n\tpublic function __construct() {\n\n\t\tparent::__construct(\n\t\t\t'settings',\n\t\t\t_x( 'Settings', 'menu label', 'code-snippets' ),\n\t\t\t__( 'Snippets Settings', 'code-snippets' )\n\t\t);\n\t}\n\n\t\/**\n\t * Executed when the admin page is loaded\n\t *\/\n\tpublic function load() {\n\t\tparent::load();\n\n\t\tif ( is_network_admin() ) {\n\t\t\tif ( Settings\\are_settings_unified() ) {\n\t\t\t\t$this->update_network_options();\n\t\t\t} else {\n\t\t\t\twp_safe_redirect( code_snippets()->get_menu_url( 'settings', 'admin' ) );\n\t\t\t\texit;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue the stylesheet for the settings menu\n\t *\/\n\tpublic function enqueue_assets() {\n\t\t$plugin = code_snippets();\n\n\t\tSettings\\enqueue_editor_preview_assets();\n\n\t\twp_enqueue_style(\n\t\t\t'code-snippets-settings',\n\t\t\tplugins_url( 'dist\/settings.css', $plugin->file ),\n\t\t\t[ 'code-editor' ],\n\t\t\t$plugin->version\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieve the list of settings sections.\n\t *\n\t * @return array<string, array<string, mixed>>\n\t *\/\n\tprivate function get_sections(): array {\n\t\tglobal $wp_settings_sections;\n\n\t\tif ( ! isset( $wp_settings_sections[ self::SETTINGS_PAGE ] ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn (array) $wp_settings_sections[ self::SETTINGS_PAGE ];\n\t}\n\n\t\/**\n\t * Retrieve the name of the settings section currently being viewed.\n\t *\n\t * @param string $default_section Name of the default tab displayed.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_current_section( string $default_section = 'general' ): string {\n\t\t$sections = $this->get_sections();\n\n\t\tif ( ! $sections ) {\n\t\t\treturn $default_section;\n\t\t}\n\n\t\t$active_tab = isset( $_REQUEST['section'] ) ? sanitize_text_field( wp_unslash( $_REQUEST['section'] ) ) : $default_section;\n\t\treturn isset( $sections[ $active_tab ] ) ? $active_tab : $default_section;\n\t}\n\n\t\/**\n\t * Render the admin screen\n\t *\/\n\tpublic function render() {\n\t\t$update_url = is_network_admin() ? add_query_arg( 'update_site_option', true ) : admin_url( 'options.php' );\n\t\t$current_section = $this->get_current_section();\n\n\t\t?>\n\t\t<div class=\"code-snippets-settings wrap\" data-active-tab=\"<?php echo esc_attr( $current_section ); ?>\">\n\t\t\t<h1>\n\t\t\t\t<?php\n\t\t\t\tesc_html_e( 'Settings', 'code-snippets' );\n\n\t\t\t\tif ( code_snippets()->is_compact_menu() ) {\n\t\t\t\t\t$actions = [\n\t\t\t\t\t\t_x( 'Manage', 'snippets', 'code-snippets' ) => code_snippets()->get_menu_url(),\n\t\t\t\t\t\t_x( 'Add New', 'snippet', 'code-snippets' ) => code_snippets()->get_menu_url( 'add' ),\n\t\t\t\t\t\t_X( 'Import', 'snippets', 'code-snippets' ) => code_snippets()->get_menu_url( 'import' ),\n\t\t\t\t\t];\n\n\t\t\t\t\tforeach ( $actions as $label => $url ) {\n\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t'<a href=\"%s\" class=\"page-title-action\">%s<\/a>',\n\t\t\t\t\t\t\tesc_url( $url ),\n\t\t\t\t\t\t\tesc_html( $label )\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t<\/h1>\n\n\t\t\t<?php settings_errors( OPTION_NAME ); ?>\n\n\t\t\t<form action=\"<?php echo esc_url( $update_url ); ?>\" method=\"post\">\n\t\t\t\t<input type=\"hidden\" name=\"section\" value=\"<?php echo esc_attr( $current_section ); ?>\">\n\t\t\t\t<?php\n\n\t\t\t\tsettings_fields( OPTION_GROUP );\n\t\t\t\t$this->do_settings_tabs();\n\t\t\t\t?>\n\t\t\t\t<p class=\"submit\">\n\t\t\t\t\t<?php\n\t\t\t\t\tsubmit_button( null, 'primary', 'submit', false );\n\n\t\t\t\t\tsubmit_button(\n\t\t\t\t\t\t__( 'Reset to Default', 'code-snippets' ),\n\t\t\t\t\t\t'secondary',\n\t\t\t\t\t\tsprintf( '%s[%s]', OPTION_NAME, 'reset_settings' ),\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\t?>\n\t\t\t\t<\/p>\n\t\t\t<\/form>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Output snippet settings in tabs\n\t *\/\n\tprotected function do_settings_tabs() {\n\t\t$sections = $this->get_sections();\n\t\t$active_tab = $this->get_current_section();\n\n\t\techo '<h2 class=\"nav-tab-wrapper\" id=\"settings-sections-tabs\">';\n\n\t\tforeach ( $sections as $section ) {\n\t\t\tprintf(\n\t\t\t\t'<a class=\"nav-tab%s\" data-section=\"%s\" href=\"%s\">%s<\/a>',\n\t\t\t\tesc_attr( $active_tab ) === $section['id'] ? ' nav-tab-active' : '',\n\t\t\t\tesc_attr( $section['id'] ),\n\t\t\t\tesc_url( add_query_arg( 'section', $section['id'] ) ),\n\t\t\t\tesc_html( $section['title'] )\n\t\t\t);\n\t\t}\n\n\t\techo '<\/h2>';\n\n\t\tforeach ( $sections as $section ) {\n\t\t\tif ( 'license' === $section['id'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( $section['title'] ) {\n\t\t\t\tprintf(\n\t\t\t\t\t'<h2 id=\"%s-settings\" class=\"settings-section-title\">%s<\/h2>' . \"\\n\",\n\t\t\t\t\tesc_attr( $section['id'] ),\n\t\t\t\t\tesc_html( $section['title'] )\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( $section['callback'] ) {\n\t\t\t\tcall_user_func( $section['callback'], $section );\n\t\t\t}\n\n\t\t\tprintf( '<div class=\"settings-section %s-settings\"><table class=\"form-table\">', esc_attr( $section['id'] ) );\n\n\t\t\tdo_settings_fields( self::SETTINGS_PAGE, $section['id'] );\n\t\t\techo '<\/table><\/div>';\n\t\t}\n\t}\n\n\t\/**\n\t * Fill in for the Settings API in the Network Admin\n\t *\/\n\tpublic function update_network_options() {\n\n\t\t\/\/ Ensure the settings have been saved.\n\t\tif ( empty( $_GET['update_site_option'] ) || empty( $_POST[ OPTION_NAME ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_admin_referer( 'code-snippets-options' );\n\n\t\t\/\/ Retrieve the saved options and save them to the database.\n\t\t$value = map_deep( wp_unslash( $_POST[ OPTION_NAME ] ), 'sanitize_key' );\n\t\tupdate_site_option( OPTION_NAME, $value );\n\t\twp_cache_delete( CACHE_KEY );\n\n\t\t\/\/ Add an updated notice.\n\t\tif ( ! count( get_settings_errors() ) ) {\n\t\t\tadd_settings_error( 'general', 'settings_updated', __( 'Settings saved.', 'code-snippets' ), 'updated' );\n\t\t}\n\n\t\tset_transient( 'settings_errors', get_settings_errors(), 30 );\n\n\t\t\/\/ Redirect back to the settings menu.\n\t\t$redirect = add_query_arg( 'settings-updated', 'true', remove_query_arg( 'update_site_option', wp_get_referer() ) );\n\t\twp_safe_redirect( esc_url_raw( $redirect ) );\n\t\texit;\n\t}\n\n\t\/**\n\t * Empty implementation for print_messages.\n\t *\n\t * @return void\n\t *\/\n\tprotected function print_messages() {\n\t\t\/\/ none required.\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/admin-menus\/class-manage-menu.php","ext":"php","size":8540,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse Code_Snippets\\Cloud\\Cloud_Search_List_Table;\nuse function Code_Snippets\\Settings\\get_setting;\n\n\/**\n * This class handles the manage snippets menu\n *\n * @since   2.4.0\n * @package Code_Snippets\n *\/\nclass Manage_Menu extends Admin_Menu {\n\n\t\/**\n\t * Instance of the list table class.\n\t *\n\t * @var List_Table\n\t *\/\n\tpublic List_Table $list_table;\n\n\t\/**\n\t * Instance of the cloud list table class for search results.\n\t *\n\t * @var Cloud_Search_List_Table\n\t *\/\n\tpublic Cloud_Search_List_Table $cloud_search_list_table;\n\n\t\/**\n\t * Class constructor\n\t *\/\n\tpublic function __construct() {\n\t\tparent::__construct(\n\t\t\t'manage',\n\t\t\t_x( 'All Snippets', 'menu label', 'code-snippets' ),\n\t\t\t__( 'Snippets', 'code-snippets' )\n\t\t);\n\t}\n\n\t\/**\n\t * Register action and filter hooks\n\t *\/\n\tpublic function run() {\n\t\tparent::run();\n\n\t\tif ( code_snippets()->is_compact_menu() ) {\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_compact_menu' ), 2 );\n\t\t\tadd_action( 'network_admin_menu', array( $this, 'register_compact_menu' ), 2 );\n\t\t}\n\n\t\tadd_action( 'admin_menu', array( $this, 'register_upgrade_menu' ), 500 );\n\t\tadd_filter( 'set-screen-option', array( $this, 'save_screen_option' ), 10, 3 );\n\t\tadd_action( 'admin_enqueue_scripts', [ $this, 'enqueue_menu_css' ] );\n\t\tadd_action( 'wp_ajax_update_code_snippet', array( $this, 'ajax_callback' ) );\n\t}\n\n\t\/**\n\t * Register the top-level 'Snippets' menu and associated 'Manage' subpage\n\t *\/\n\tpublic function register() {\n\t\tadd_menu_page(\n\t\t\t__( 'Snippets', 'code-snippets' ),\n\t\t\t_x( 'Snippets', 'top-level menu label', 'code-snippets' ),\n\t\t\tcode_snippets()->get_cap(),\n\t\t\tcode_snippets()->get_menu_slug(),\n\t\t\tarray( $this, 'render' ),\n\t\t\t'none', \/\/ Added through CSS as a mask to prevent loading 'blinking'.\n\t\t\tapply_filters( 'code_snippets\/admin\/menu_position', is_network_admin() ? 21 : 67 )\n\t\t);\n\n\t\t\/\/ Register the sub-menu.\n\t\tparent::register();\n\t}\n\n\t\/**\n\t * Register the 'upgrade' menu item.\n\t *\n\t * @return void\n\t *\/\n\tpublic function register_upgrade_menu() {\n\t\tif ( code_snippets()->licensing->is_licensed() || get_setting( 'general', 'hide_upgrade_menu' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$menu_title = sprintf(\n\t\t\t'<span class=\"button button-primary code-snippets-upgrade-button\">%s %s<\/span>',\n\t\t\t_x( 'Go Pro', 'top-level menu label', 'code-snippets' ),\n\t\t\t'<span class=\"dashicons dashicons-external\"><\/span>'\n\t\t);\n\n\t\t$hook = add_submenu_page(\n\t\t\tcode_snippets()->get_menu_slug(),\n\t\t\t__( 'Upgrade to Pro', 'code-snippets' ),\n\t\t\t$menu_title,\n\t\t\tcode_snippets()->get_cap(),\n\t\t\t'code_snippets_upgrade',\n\t\t\t'__return_empty_string',\n\t\t\t100\n\t\t);\n\n\t\tadd_action( \"load-$hook\", [ $this, 'load_upgrade_menu' ] );\n\t}\n\n\t\/**\n\t * Print CSS required for the admin menu icon.\n\t *\n\t * @return void\n\t *\/\n\tpublic function enqueue_menu_css() {\n\t\twp_enqueue_style(\n\t\t\t'code-snippets-menu',\n\t\t\tplugins_url( 'dist\/menu.css', PLUGIN_FILE ),\n\t\t\t[],\n\t\t\tPLUGIN_VERSION\n\t\t);\n\t}\n\n\t\/**\n\t * Redirect the user upon opening the upgrade menu.\n\t *\n\t * @return void\n\t *\/\n\tpublic function load_upgrade_menu() {\n\t\twp_safe_redirect( 'https:\/\/snipco.de\/JE2f' );\n\t\texit;\n\t}\n\n\t\/**\n\t * Add menu pages for the compact menu\n\t *\/\n\tpublic function register_compact_menu() {\n\n\t\tif ( ! code_snippets()->is_compact_menu() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$sub = code_snippets()->get_menu_slug( isset( $_GET['sub'] ) ? sanitize_key( $_GET['sub'] ) : 'snippets' );\n\n\t\t$classmap = array(\n\t\t\t'snippets'             => 'manage',\n\t\t\t'add-snippet'          => 'edit',\n\t\t\t'edit-snippet'         => 'edit',\n\t\t\t'import-code-snippets' => 'import',\n\t\t\t'snippets-settings'    => 'settings',\n\t\t);\n\n\t\t$menus = code_snippets()->admin->menus;\n\t\t$class = isset( $classmap[ $sub ], $menus[ $classmap[ $sub ] ] ) ? $menus[ $classmap[ $sub ] ] : $this;\n\n\t\t\/* Add a submenu to the Tools menu *\/\n\t\t$hook = add_submenu_page(\n\t\t\t'tools.php',\n\t\t\t__( 'Snippets', 'code-snippets' ),\n\t\t\t_x( 'Snippets', 'tools submenu label', 'code-snippets' ),\n\t\t\tcode_snippets()->get_cap(),\n\t\t\tcode_snippets()->get_menu_slug(),\n\t\t\tarray( $class, 'render' )\n\t\t);\n\n\t\tadd_action( 'load-' . $hook, array( $class, 'load' ) );\n\t}\n\n\t\/**\n\t * Executed when the admin page is loaded\n\t *\/\n\tpublic function load() {\n\t\tparent::load();\n\n\t\t$contextual_help = new Contextual_Help( 'manage' );\n\t\t$contextual_help->load();\n\n\t\t$this->cloud_search_list_table = new Cloud_Search_List_Table();\n\t\t$this->cloud_search_list_table->prepare_items();\n\n\t\t$this->list_table = new List_Table();\n\t\t$this->list_table->prepare_items();\n\t}\n\n\t\/**\n\t * Enqueue scripts and stylesheets for the admin page.\n\t *\/\n\tpublic function enqueue_assets() {\n\t\t$plugin = code_snippets();\n\t\t$rtl = is_rtl() ? '-rtl' : '';\n\n\t\twp_enqueue_style(\n\t\t\t'code-snippets-manage',\n\t\t\tplugins_url( \"dist\/manage$rtl.css\", $plugin->file ),\n\t\t\t[],\n\t\t\t$plugin->version\n\t\t);\n\n\t\twp_enqueue_script(\n\t\t\t'code-snippets-manage-js',\n\t\t\tplugins_url( 'dist\/manage.js', $plugin->file ),\n\t\t\t[ 'wp-i18n' ],\n\t\t\t$plugin->version,\n\t\t\ttrue\n\t\t);\n\n\t\twp_set_script_translations( 'code-snippets-manage-js', 'code-snippets' );\n\n\t\tif ( 'cloud' === $this->get_current_type() || 'cloud_search' === $this->get_current_type() ) {\n\t\t\tFront_End::enqueue_all_prism_themes();\n\t\t}\n\t}\n\n\t\/**\n\t * Get the currently displayed snippet type.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_current_type(): string {\n\t\t$types = Plugin::get_types();\n\t\t$current_type = isset( $_GET['type'] ) ? sanitize_key( wp_unslash( $_GET['type'] ) ) : 'all';\n\t\treturn isset( $types[ $current_type ] ) ? $current_type : 'all';\n\t}\n\n\t\/**\n\t * Print the status and error messages\n\t *\n\t * @return void\n\t *\/\n\tprotected function print_messages() {\n\t\t$this->render_view( 'partials\/list-table-notices' );\n\t}\n\n\t\/**\n\t * Handles saving the user's snippets per page preference\n\t *\n\t * @param mixed  $status Current screen option status.\n\t * @param string $option The screen option name.\n\t * @param mixed  $value  Screen option value.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function save_screen_option( $status, string $option, $value ) {\n\t\treturn 'snippets_per_page' === $option ? $value : $status;\n\t}\n\n\t\/**\n\t * Update the priority value for a snippet.\n\t *\n\t * @param Snippet $snippet Snippet to update.\n\t *\n\t * @return void\n\t *\/\n\tprivate function update_snippet_priority( Snippet $snippet ) {\n\t\tglobal $wpdb;\n\t\t$table = code_snippets()->db->get_table_name( $snippet->network );\n\n\t\t$wpdb->update(\n\t\t\t$table,\n\t\t\tarray( 'priority' => $snippet->priority ),\n\t\t\tarray( 'id' => $snippet->id ),\n\t\t\tarray( '%d' ),\n\t\t\tarray( '%d' )\n\t\t);\n\n\t\tclean_snippets_cache( $table );\n\t}\n\n\t\/**\n\t * Handle AJAX requests\n\t *\/\n\tpublic function ajax_callback() {\n\t\tcheck_ajax_referer( 'code_snippets_manage_ajax' );\n\n\t\tif ( ! isset( $_POST['field'], $_POST['snippet'] ) ) {\n\t\t\twp_send_json_error(\n\t\t\t\tarray(\n\t\t\t\t\t'type'    => 'param_error',\n\t\t\t\t\t'message' => 'incomplete request',\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized\n\t\t$snippet_data = array_map( 'sanitize_text_field', json_decode( wp_unslash( $_POST['snippet'] ), true ) );\n\n\t\t$snippet = new Snippet( $snippet_data );\n\t\t$field = sanitize_key( $_POST['field'] );\n\n\t\tif ( 'priority' === $field ) {\n\n\t\t\tif ( ! isset( $snippet_data['priority'] ) || ! is_numeric( $snippet_data['priority'] ) ) {\n\t\t\t\twp_send_json_error(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'    => 'param_error',\n\t\t\t\t\t\t'message' => 'missing snippet priority data',\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$this->update_snippet_priority( $snippet );\n\n\t\t} elseif ( 'active' === $field ) {\n\n\t\t\tif ( ! isset( $snippet_data['active'] ) ) {\n\t\t\t\twp_send_json_error(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'    => 'param_error',\n\t\t\t\t\t\t'message' => 'missing snippet active data',\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( $snippet->shared_network ) {\n\t\t\t\t$active_shared_snippets = get_option( 'active_shared_network_snippets', array() );\n\n\t\t\t\tif ( in_array( $snippet->id, $active_shared_snippets, true ) !== $snippet->active ) {\n\n\t\t\t\t\t$active_shared_snippets = $snippet->active ?\n\t\t\t\t\t\tarray_merge( $active_shared_snippets, array( $snippet->id ) ) :\n\t\t\t\t\t\tarray_diff( $active_shared_snippets, array( $snippet->id ) );\n\n\t\t\t\t\tupdate_option( 'active_shared_network_snippets', $active_shared_snippets );\n\t\t\t\t\tclean_active_snippets_cache( code_snippets()->db->ms_table );\n\t\t\t\t}\n\t\t\t} elseif ( $snippet->active ) {\n\t\t\t\t$result = activate_snippet( $snippet->id, $snippet->network );\n\t\t\t\tif ( is_string( $result ) ) {\n\t\t\t\t\twp_send_json_error(\n\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t'type'    => 'action_error',\n\t\t\t\t\t\t\t'message' => $result,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdeactivate_snippet( $snippet->id, $snippet->network );\n\t\t\t}\n\t\t}\n\n\t\twp_send_json_success();\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/cloud\/class-cloud-api.php","ext":"php","size":14117,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets\\Cloud;\n\nuse Code_Snippets\\Snippet;\nuse WP_Error;\nuse function Code_Snippets\\get_snippet_by_cloud_id;\nuse function Code_Snippets\\get_snippets;\nuse function Code_Snippets\\save_snippet;\nuse function Code_Snippets\\update_snippet_fields;\n\n\/**\n * Functions used to manage cloud synchronisation.\n *\n * @package Code_Snippets\n *\/\nclass Cloud_API {\n\n\t\/**\n\t * Key used to access the local-to-cloud map transient data.\n\t *\/\n\tprivate const CLOUD_MAP_TRANSIENT_KEY = 'cs_local_to_cloud_map';\n\n\t\/**\n\t * Days to cache data retrieved from API.\n\t *\/\n\tprivate const DAYS_TO_STORE_CS = 1;\n\n\t\/**\n\t * Token used for public API access.\n\t *\n\t * @var string\n\t *\/\n\tprivate const CLOUD_SEARCH_API_TOKEN = 'csc-1a2b3c4d5e6f7g8h9i0j';\n\n\t\/**\n\t * Cached list of cloud links.\n\t *\n\t * @var Cloud_Link[]|null\n\t *\/\n\tprivate ?array $cached_cloud_links = null;\n\n\t\/**\n\t * 'Private' status code.\n\t *\/\n\tpublic const STATUS_PRIVATE = 3;\n\n\t\/**\n\t * 'Public' status code.\n\t *\/\n\tpublic const STATUS_PUBLIC = 4;\n\n\t\/**\n\t * 'Public' status code.\n\t *\/\n\tpublic const STATUS_UNVERIFIED = 5;\n\n\t\/**\n\t * 'AI Verified' status code.\n\t *\/\n\tpublic const STATUS_AI_VERIFIED = 6;\n\n\t\/**\n\t * 'Pro Verified' status code.\n\t *\/\n\tpublic const STATUS_PRO_VERIFIED = 8;\n\n\t\/**\n\t * Retrieve the Cloud URL from wp-config or fallback to default.\n\t *\n\t * @return string\n\t *\n\t * @noinspection PhpUndefinedConstantInspection\n\t *\/\n\tpublic static function get_cloud_url(): string {\n\t\treturn defined( 'CS_CLOUD_URL' )\n\t\t\t? CS_CLOUD_URL\n\t\t\t: 'https:\/\/codesnippets.cloud\/';\n\t}\n\n\t\/**\n\t * Retrieve the Cloud API URL from wp-config or fallback to default.\n\t *\n\t * @return string\n\t *\n\t * @noinspection PhpUndefinedConstantInspection\n\t *\/\n\tpublic static function get_cloud_api_url(): string {\n\t\treturn defined( 'CS_CLOUD_API_URL' )\n\t\t\t? CS_CLOUD_API_URL\n\t\t\t: self::get_cloud_url() . 'api\/v1\/';\n\t}\n\n\t\/**\n\t * Retrieve the cloud local token.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_local_token(): string {\n\t\treturn self::CLOUD_SEARCH_API_TOKEN;\n\t}\n\n\t\/**\n\t * Check that the cloud key is valid and verified.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_cloud_key_verified(): bool {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if the API key is set and verified.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_cloud_connection_available(): bool {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Create local-to-cloud map to keep track of local snippets that have been synced to the cloud.\n\t *\n\t * @return Cloud_Link[]\n\t *\/\n\tprivate function get_cloud_links(): ?array {\n\t\t\/\/ Return the cached data if available.\n\t\tif ( is_array( $this->cached_cloud_links ) ) {\n\t\t\treturn $this->cached_cloud_links;\n\t\t}\n\n\t\t\/\/ Fetch data from the stored transient, if available.\n\t\t$transient_data = get_transient( self::CLOUD_MAP_TRANSIENT_KEY );\n\t\tif ( is_array( $transient_data ) ) {\n\t\t\t$this->cached_cloud_links = $transient_data;\n\t\t\treturn $this->cached_cloud_links;\n\t\t}\n\n\t\t\/\/ Otherwise, regenerate the local-to-cloud-map.\n\t\t$this->cached_cloud_links = [];\n\n\t\t\/\/ Fetch and iterate through all local snippets to create the map.\n\t\tforeach ( get_snippets() as $local_snippet ) {\n\t\t\t\/\/ Skip snippets that are only stored locally.\n\t\t\tif ( ! $local_snippet->cloud_id ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$link = new Cloud_Link();\n\t\t\t$cloud_id_owner = $this->get_cloud_id_and_ownership( $local_snippet->cloud_id );\n\t\t\t$cloud_id_int = intval( $cloud_id_owner['cloud_id'] );\n\t\t\t$link->local_id = $local_snippet->id;\n\t\t\t$link->cloud_id = $cloud_id_int;\n\t\t\t$link->is_owner = $cloud_id_owner['is_owner'];\n\t\t\t\/\/ Check if cloud id exists in cloud_id_rev array - this shows if the snippet is in the codevault.\n\t\t\t$link->in_codevault = $cloud_id_rev[ $cloud_id_int ] ?? false;\n\n\t\t\t\/\/ Get the cloud snippet revision if in codevault get from cloud_id_rev array otherwise get from cloud.\n\t\t\tif ( $link->in_codevault ) {\n\t\t\t\t$cloud_snippet_revision = $cloud_id_rev[ $cloud_id_int ] ?? $this->get_cloud_snippet_revision( $local_snippet->cloud_id );\n\t\t\t\t$link->update_available = $local_snippet->revision < $cloud_snippet_revision;\n\t\t\t}\n\n\t\t\t$this->cached_cloud_links[] = $link;\n\t\t}\n\n\t\tset_transient(\n\t\t\tself::CLOUD_MAP_TRANSIENT_KEY,\n\t\t\t$this->cached_cloud_links,\n\t\t\tDAY_IN_SECONDS * self::DAYS_TO_STORE_CS\n\t\t);\n\n\t\treturn $this->cached_cloud_links;\n\t}\n\n\t\/**\n\t * Get ownership and Cloud ID of a snippet.\n\t *\n\t * @param string $cloud_id Cloud ID.\n\t *\n\t * @return array<string, mixed>\n\t *\/\n\tpublic function get_cloud_id_and_ownership( string $cloud_id ): array {\n\t\t$cloud_id_owner = explode( '_', $cloud_id );\n\n\t\treturn [\n\t\t\t'cloud_id'        => (int) $cloud_id_owner[0] ?? '',\n\t\t\t'is_owner'        => isset( $cloud_id_owner[1] ) && $cloud_id_owner[1],\n\t\t\t'is_owner_string' => isset( $cloud_id_owner[1] ) && $cloud_id_owner[1] ? '1' : '0',\n\t\t];\n\t}\n\n\t\/**\n\t * Unpack JSON data from a request response.\n\t *\n\t * @param array|WP_Error $response Response from wp_request_*.\n\t *\n\t * @return array<string, mixed>|null Associative array of JSON data on success, null on failure.\n\t *\/\n\tprivate static function unpack_request_json( $response ): ?array {\n\t\t$body = wp_remote_retrieve_body( $response );\n\t\treturn $body ? json_decode( $body, true ) : null;\n\t}\n\n\t\/**\n\t * Search Code Snippets Cloud -> Static Function\n\t *\n\t * @param string  $search_method Search by name of codevault or keyword(s).\n\t * @param string  $search        Search query.\n\t * @param integer $page          Search result page to retrieve. Defaults to '0'.\n\t *\n\t * @return Cloud_Snippets Result of search query.\n\t *\/\n\tpublic static function fetch_search_results( string $search_method, string $search, int $page = 0 ): Cloud_Snippets {\n\t\t$api_url = add_query_arg(\n\t\t\t[\n\t\t\t\t's_method'   => $search_method,\n\t\t\t\t's'          => $search,\n\t\t\t\t'page'       => $page,\n\t\t\t\t'site_token' => self::get_local_token(),\n\t\t\t\t'site_host'  => wp_parse_url( get_site_url(), PHP_URL_HOST ),\n\t\t\t],\n\t\t\tself::get_cloud_api_url() . 'public\/search'\n\t\t);\n\n\t\t$results = self::unpack_request_json( wp_remote_get( $api_url ) );\n\n\t\t$results = new Cloud_Snippets( $results );\n\t\t$results->page = $page;\n\n\t\treturn $results;\n\t}\n\n\t\/**\n\t * Add a new link item to the local-to-cloud map.\n\t *\n\t * @param Cloud_Link $link Link to add.\n\t *\n\t * @return void\n\t *\/\n\tpublic function add_cloud_link( Cloud_Link $link ) {\n\t\t$local_to_cloud_map = get_transient( self::CLOUD_MAP_TRANSIENT_KEY );\n\t\t$local_to_cloud_map[] = $link;\n\n\t\tset_transient(\n\t\t\tself::CLOUD_MAP_TRANSIENT_KEY,\n\t\t\t$local_to_cloud_map,\n\t\t\tDAY_IN_SECONDS * self::DAYS_TO_STORE_CS\n\t\t);\n\t}\n\n\t\/**\n\t * Delete a snippet from local-to-cloud map.\n\t *\n\t * @param int $snippet_id Local snippet ID.\n\t *\n\t * @return void\n\t *\/\n\tpublic function delete_snippet_from_transient_data( int $snippet_id ) {\n\t\tif ( ! $this->cached_cloud_links ) {\n\t\t\t$this->get_cloud_links();\n\t\t}\n\n\t\tforeach ( $this->cached_cloud_links as $link ) {\n\t\t\tif ( $link->local_id === $snippet_id ) {\n\t\t\t\t\/\/ Remove the link from the local_to_cloud_map.\n\t\t\t\t$index = array_search( $link, $this->cached_cloud_links, true );\n\t\t\t\tunset( $this->cached_cloud_links[ $index ] );\n\n\t\t\t\t\/\/ Update the transient data.\n\t\t\t\tset_transient(\n\t\t\t\t\tself::CLOUD_MAP_TRANSIENT_KEY,\n\t\t\t\t\t$this->cached_cloud_links,\n\t\t\t\t\tDAY_IN_SECONDS * self::DAYS_TO_STORE_CS\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Retrieve a single cloud snippet from the API.\n\t *\n\t * @param int $cloud_id Remote cloud snippet ID.\n\t *\n\t * @return Cloud_Snippet Retrieved snippet.\n\t *\/\n\tpublic static function get_single_snippet_from_cloud( int $cloud_id ): Cloud_Snippet {\n\t\t$url = self::get_cloud_api_url() . sprintf( 'public\/getsnippet\/%s', $cloud_id );\n\t\t$response = wp_remote_get( $url );\n\t\t$cloud_snippet = self::unpack_request_json( $response );\n\t\treturn new Cloud_Snippet( $cloud_snippet['snippet'] );\n\t}\n\n\t\/**\n\t * Get the current revision of a single cloud snippet.\n\t *\n\t * @param string $cloud_id Cloud snippet ID.\n\t *\n\t * @return string|null Revision number on success, null otherwise.\n\t *\/\n\tpublic static function get_cloud_snippet_revision( string $cloud_id ): ?string {\n\t\t$api_url = self::get_cloud_api_url() . sprintf( 'public\/getsnippetrevision\/%s', $cloud_id );\n\t\t$body = wp_remote_retrieve_body( wp_remote_get( $api_url ) );\n\n\t\tif ( ! $body ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$cloud_snippet_revision = json_decode( $body, true );\n\t\treturn $cloud_snippet_revision['snippet_revision'] ?? null;\n\t}\n\n\t\/**\n\t * Download a snippet from the cloud.\n\t *\n\t * @param int|string $cloud_id The cloud ID of the snippet as string from query args.\n\t * @param string     $source   Unused in Core.\n\t * @param string     $action   The action to be performed: 'download' or 'update'.\n\t *\n\t * @return array<string, string|bool> Result of operation: an array with `success` and `error_message` keys.\n\t *\n\t * @noinspection PhpUnusedParameterInspection\n\t *\/\n\tpublic function download_or_update_snippet( int $cloud_id, string $source, string $action ): array {\n\t\t$cloud_id = intval( $cloud_id );\n\t\t$snippet_to_store = $this->get_single_snippet_from_cloud( $cloud_id );\n\n\t\tswitch ( $action ) {\n\t\t\tcase 'download':\n\t\t\t\treturn $this->download_snippet_from_cloud( $snippet_to_store );\n\t\t\tcase 'update':\n\t\t\t\treturn $this->update_snippet_from_cloud( $snippet_to_store );\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t\t'success' => false,\n\t\t\t\t\t'error'   => __( 'Invalid action.', 'code-snippets' ),\n\t\t\t\t];\n\t\t}\n\t}\n\n\t\/**\n\t * Download a snippet from the cloud.\n\t *\n\t * @param Cloud_Snippet $snippet_to_store The snippet to be downloaded.\n\t *\n\t * @return array The result of the download.\n\t *\/\n\tpublic function download_snippet_from_cloud( Cloud_Snippet $snippet_to_store ): array {\n\t\t$snippet = new Snippet( $snippet_to_store );\n\n\t\t\/\/ Set the snippet id to 0 to ensure that the snippet is saved as a new snippet.\n\t\t$ownership = $snippet_to_store->is_owner ? '1' : '0';\n\t\t$snippet->id = 0;\n\t\t$snippet->active = 0;\n\t\t$snippet->cloud_id = $snippet_to_store->id . '_' . $ownership;\n\t\t$snippet->desc = $snippet_to_store->description ? $snippet_to_store->description : '';\n\n\t\t\/\/ Save the snippet to the database.\n\t\t$new_snippet = save_snippet( $snippet );\n\n\t\t$link = new Cloud_Link();\n\t\t$link->local_id = $new_snippet->id;\n\t\t$link->cloud_id = $snippet_to_store->id;\n\t\t$link->is_owner = $snippet_to_store->is_owner;\n\t\t$link->in_codevault = false;\n\t\t$link->update_available = false;\n\n\t\t$this->add_cloud_link( $link );\n\n\t\treturn [\n\t\t\t'success'    => true,\n\t\t\t'action'     => 'Single Downloaded',\n\t\t\t'snippet_id' => $new_snippet->id,\n\t\t\t'link_id'    => $link->cloud_id,\n\t\t];\n\t}\n\n\t\/**\n\t * Update a snippet from the cloud.\n\t *\n\t * @param Cloud_Snippet $snippet_to_store Snippet to be updated.\n\t *\n\t * @return array The result of the update.\n\t *\/\n\tpublic function update_snippet_from_cloud( Cloud_Snippet $snippet_to_store ): array {\n\t\t$cloud_id = $snippet_to_store->id . '_' . ( $snippet_to_store->is_owner ? '1' : '0' );\n\n\t\t$local_snippet = get_snippet_by_cloud_id( sanitize_key( $cloud_id ) );\n\n\t\t\/\/ Only update the code, active and revision fields.\n\t\t$fields = [\n\t\t\t'code'     => $snippet_to_store->code,\n\t\t\t'active'   => false,\n\t\t\t'revision' => $snippet_to_store->revision,\n\t\t];\n\n\t\tupdate_snippet_fields( $local_snippet->id, $fields );\n\t\t$this->clear_caches();\n\n\t\treturn [\n\t\t\t'success' => true,\n\t\t\t'action'  => __( 'Updated', 'code-snippets' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Find the cloud link for a given cloud snippet identifier.\n\t *\n\t * @param int $cloud_id Cloud ID.\n\t *\n\t * @return Cloud_Link|null\n\t *\/\n\tpublic function get_link_for_cloud_id( int $cloud_id ): ?Cloud_Link {\n\t\t$cloud_links = $this->get_cloud_links();\n\n\t\tif ( $cloud_links ) {\n\t\t\tforeach ( $cloud_links as $cloud_link ) {\n\t\t\t\tif ( $cloud_link->cloud_id === $cloud_id ) {\n\t\t\t\t\treturn $cloud_link;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\t\/**\n\t * Find the cloud link for a given cloud snippet.\n\t *\n\t * @param Cloud_Snippet $cloud_snippet Cloud snippet.\n\t *\n\t * @return Cloud_Link|null\n\t *\/\n\tpublic function get_link_for_cloud_snippet( Cloud_Snippet $cloud_snippet ): ?Cloud_Link {\n\t\treturn $this->get_link_for_cloud_id( $cloud_snippet->id );\n\t}\n\n\t\/**\n\t * Translate a snippet scope to a type.\n\t *\n\t * @param string $scope The scope of the snippet.\n\t *\n\t * @return string The type of the snippet.\n\t *\/\n\tpublic static function get_type_from_scope( string $scope ): string {\n\t\tswitch ( $scope ) {\n\t\t\tcase 'global':\n\t\t\t\treturn 'php';\n\t\t\tcase 'site-css':\n\t\t\t\treturn 'css';\n\t\t\tcase 'site-footer-js':\n\t\t\t\treturn 'js';\n\t\t\tcase 'content':\n\t\t\t\treturn 'html';\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\t\/**\n\t * Get the label for a given cloud status.\n\t *\n\t * @param int $status Cloud status code.\n\t *\n\t * @return string The label for the status.\n\t *\/\n\tpublic static function get_status_label( int $status ): string {\n\t\t$labels = [\n\t\t\tself::STATUS_PRIVATE      => __( 'Private', 'code-snippets' ),\n\t\t\tself::STATUS_PUBLIC       => __( 'Public', 'code-snippets' ),\n\t\t\tself::STATUS_UNVERIFIED   => __( 'Unverified', 'code-snippets' ),\n\t\t\tself::STATUS_AI_VERIFIED  => __( 'AI Verified', 'code-snippets' ),\n\t\t\tself::STATUS_PRO_VERIFIED => __( 'Pro Verified', 'code-snippets' ),\n\t\t];\n\n\t\treturn $labels[ $status ] ?? __( 'Unknown', 'code-snippets' );\n\t}\n\n\t\/**\n\t * Get the badge class for a given cloud status.\n\t *\n\t * @param int $status Cloud status code.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_status_badge( int $status ): string {\n\t\t$badge_names = [\n\t\t\tself::STATUS_PRIVATE      => 'private',\n\t\t\tself::STATUS_PUBLIC       => 'public',\n\t\t\tself::STATUS_UNVERIFIED   => 'failure',\n\t\t\tself::STATUS_AI_VERIFIED  => 'success',\n\t\t\tself::STATUS_PRO_VERIFIED => 'info',\n\t\t];\n\n\t\treturn $badge_names[ $status ] ?? 'neutral';\n\t}\n\n\t\/**\n\t * Renders the html for the preview thickbox popup.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function render_cloud_snippet_thickbox() {\n\t\tadd_thickbox();\n\t\t?>\n\t\t<div id=\"show-code-preview\" style=\"display: none;\">\n\t\t\t<h3 id=\"snippet-name-thickbox\"><\/h3>\n\t\t\t<h4><?php esc_html_e( 'Snippet Code:', 'code-snippets' ); ?><\/h4>\n\t\t\t<pre class=\"thickbox-code-viewer\">\n\t\t\t\t<code id=\"snippet-code-thickbox\"><\/code>\n\t\t\t<\/pre>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Refresh the cached synced data.\n\t *\n\t * @return void\n\t *\/\n\tpublic function clear_caches() {\n\t\t$this->cached_cloud_links = null;\n\n\t\tdelete_transient( self::CLOUD_MAP_TRANSIENT_KEY );\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/cloud\/class-cloud-snippet.php","ext":"php","size":2662,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets\\Cloud;\n\nuse Code_Snippets\\Data_Item;\nuse function Code_Snippets\\code_snippets_build_tags_array;\n\n\/**\n * A snippet object as retrieved from the cloud API.\n *\n * @since   3.4.0\n * @package Code_Snippets\n *\n * @property int           $id               The remote ID.\n * @property string        $name             The snippet title.\n * @property string        $description      The formatted description.\n * @property string        $code             The executable code.\n * @property array<string> $tags             An array of the tags.\n * @property string        $scope            The scope name.\n * @property string        $codevault        Name of user codevault.\n * @property string        $total_votes      The total number of votes.\n * @property string        $vote_count       The number of actual votes.\n * @property string        $wp_tested        Tested with WP version.\n * @property string        $status           Snippet Status ID.\n * @property string        $created          The date and time when the snippet data was first created, in ISO format.\n * @property string        $updated          When the snippet was last updated, in ISO format.\n * @property integer       $revision         The update revision number.\n * @property bool          $is_owner         If user is owner or author of snippet.\n *\/\nclass Cloud_Snippet extends Data_Item {\n\n\t\/**\n\t * Constructor function.\n\t *\n\t * @param array<string, mixed>|null $initial_data Initial snippet data.\n\t *\/\n\tpublic function __construct( ?array $initial_data = null ) {\n\t\tparent::__construct(\n\t\t\t[\n\t\t\t\t'id'             => '',\n\t\t\t\t'cloud_id'       => '',\n\t\t\t\t'name'           => '',\n\t\t\t\t'description'    => '',\n\t\t\t\t'code'           => '',\n\t\t\t\t'tags'           => [],\n\t\t\t\t'scope'          => '',\n\t\t\t\t'status'         => '',\n\t\t\t\t'codevault'      => '',\n\t\t\t\t'total_votes'    => '',\n\t\t\t\t'vote_count'     => '',\n\t\t\t\t'wp_tested'      => '',\n\t\t\t\t'created'        => '',\n\t\t\t\t'updated'        => '',\n\t\t\t\t'revision'       => 0,\n\t\t\t\t'is_owner'       => false,\n\t\t\t\t'shared_network' => false,\n\t\t\t],\n\t\t\t$initial_data\n\t\t);\n\t}\n\n\t\/**\n\t * Prepare a value before it is stored.\n\t *\n\t * @param mixed  $value Value to prepare.\n\t * @param string $field Field name.\n\t *\n\t * @return mixed Value in the correct format.\n\t *\/\n\tprotected function prepare_field( $value, string $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'id':\n\t\t\tcase 'revision':\n\t\t\t\treturn absint( $value );\n\n\t\t\tcase 'is_owner':\n\t\t\t\treturn (bool) $value;\n\t\t\tcase 'description':\n\t\t\t\treturn ( null === $value ) ? '' : $value;\n\t\t\tcase 'tags':\n\t\t\t\treturn code_snippets_build_tags_array( $value );\n\n\t\t\tdefault:\n\t\t\t\treturn $value;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/cloud\/class-cloud-link.php","ext":"php","size":1593,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets\\Cloud;\n\nuse Code_Snippets\\Data_Item;\n\n\/**\n * A connection between a local snippet and remote cloud snippet.\n *\n * @package Code_Snippets\n *\n * @property integer $local_id         ID of local snippet as stored in WordPress database, if applicable.\n * @property integer $cloud_id         ID of remote snippet on cloud platform, if applicable.\n * @property boolean $is_owner         Ownership status of remote snippet on cloud platform.\n * @property boolean $in_codevault     Whether the remote snippet is stored in the users' codevault.\n * @property boolean $update_available If synchronised, whether there is an update available on the cloud platform.\n *\/\nclass Cloud_Link extends Data_Item {\n\n\t\/**\n\t * Constructor function\n\t *\n\t * @param array<string, mixed>|object $data Initial data fields.\n\t *\/\n\tpublic function __construct( $data = null ) {\n\t\tparent::__construct(\n\t\t\t[\n\t\t\t\t'local_id'         => 0,\n\t\t\t\t'cloud_id'         => 0,\n\t\t\t\t'is_owner'         => false,\n\t\t\t\t'in_codevault'     => false,\n\t\t\t\t'update_available' => false,\n\t\t\t],\n\t\t\t$data\n\t\t);\n\t}\n\n\t\/**\n\t * Prepare a value before it is stored.\n\t *\n\t * @param mixed  $value Value to prepare.\n\t * @param string $field Field name.\n\t *\n\t * @return mixed Value in the correct format.\n\t *\/\n\tprotected function prepare_field( $value, string $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'local_id':\n\t\t\tcase 'remote_id':\n\t\t\t\treturn absint( $value );\n\n\t\t\tcase 'is_owner':\n\t\t\tcase 'in_codevault':\n\t\t\tcase 'update_available':\n\t\t\t\treturn is_bool( $value ) ? $value : (bool) $value;\n\n\t\t\tdefault:\n\t\t\t\treturn $value;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/cloud\/class-cloud-snippets.php","ext":"php","size":2199,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets\\Cloud;\n\nuse Code_Snippets\\Data_Item;\n\n\/**\n * A list of snippets as retrieved from the cloud API.\n *\n * @since   3.4.0\n * @package Code_Snippets\n *\n * @property Cloud_Snippet[] $snippets        List of snippet items for the current page.\n * @property integer         $page            Page of data that this data belongs to.\n * @property integer         $total_pages     Total number of available pages of items.\n * @property integer         $total_snippets  Total number of available snippet items.\n * @property array           $cloud_id_rev    An array of all cloud snippet IDs and their revision numbers.\n * @property bool            $success         If the request has any results.\n *\/\nclass Cloud_Snippets extends Data_Item {\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param array<string, Cloud_Snippet[]|integer> $initial_data Initial data.\n\t *\/\n\tpublic function __construct( $initial_data = null ) {\n\t\tparent::__construct(\n\t\t\t[\n\t\t\t\t'snippets'       => [],\n\t\t\t\t'total_snippets' => 0,\n\t\t\t\t'total_pages'    => 0,\n\t\t\t\t'page'           => 0,\n\t\t\t\t'cloud_id_rev'   => [],\n\t\t\t],\n\t\t\t$initial_data,\n\t\t\t[\n\t\t\t\t'items'        => 'snippets',\n\t\t\t\t'total_items'  => 'total_snippets',\n\t\t\t\t'page'         => 'page',\n\t\t\t\t'cloud_id_rev' => 'cloud_id_rev',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Prepare a value before it is stored.\n\t *\n\t * @param mixed  $value Value to prepare.\n\t * @param string $field Field name.\n\t *\n\t * @return mixed Value in the correct format.\n\t *\/\n\tprotected function prepare_field( $value, string $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'page':\n\t\t\tcase 'total_pages':\n\t\t\tcase 'total_snippets':\n\t\t\t\treturn absint( $value );\n\n\t\t\tdefault:\n\t\t\t\treturn $value;\n\t\t}\n\t}\n\n\t\/**\n\t * Prepare the `snippets` field by ensuring it is a list of Cloud_Snippets objects.\n\t *\n\t * @param mixed $snippets The field as provided.\n\t *\n\t * @return Cloud_Snippets[] The field in the correct format.\n\t *\/\n\tprotected function prepare_snippets( $snippets ): array {\n\t\t$result = [];\n\t\t$snippets = is_array( $snippets ) ? $snippets : [ $snippets ];\n\n\t\tforeach ( $snippets as $snippet ) {\n\t\t\t$result[] = $snippet instanceof Cloud_Snippet ? $snippet : new Cloud_Snippet( $snippet );\n\t\t}\n\n\t\treturn $result;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/cloud\/class-cloud-search-list-table.php","ext":"php","size":11684,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Contains the class for handling the cloud search results table\n *\n * @package Code_Snippets\n *\/\n\nnamespace Code_Snippets\\Cloud;\n\nuse WP_Plugin_Install_List_Table;\nuse function Code_Snippets\\code_snippets;\n\nif ( ! class_exists( 'WP_Plugin_Install_List_Table' ) ) {\n\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-plugin-install-list-table.php';\n}\n\n\/**\n * Class for handling the cloud search results table.\n *\n * @property string $_pagination Pagination HTML.\n *\n * @package Code_Snippets\n *\/\nclass Cloud_Search_List_Table extends WP_Plugin_Install_List_Table {\n\n\t\/**\n\t * Instance of Cloud API class.\n\t *\n\t * @var Cloud_API\n\t *\/\n\tprotected Cloud_API $cloud_api;\n\n\t\/**\n\t * Items for the cloud list table.\n\t *\n\t * @var Cloud_Snippets\n\t *\/\n\tprotected Cloud_Snippets $cloud_snippets;\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t\/**\n\t\t * Declare global variable due to undeclared warning.\n\t\t *\n\t\t * @noinspection PhpUnusedLocalVariableInspection\n\t\t *\/\n\t\tglobal $tab;\n\n\t\tparent::__construct(\n\t\t\t[\n\t\t\t\t'singular' => 'cloud-snippet',\n\t\t\t\t'plural'   => 'cloud-snippets',\n\t\t\t\t'ajax'     => false,\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Strip the result query arg from the URL.\n\t\t$_SERVER['REQUEST_URI'] = remove_query_arg( [ 'result' ] );\n\n\t\t$this->cloud_api = code_snippets()->cloud_api;\n\t}\n\n\t\/**\n\t * Prepare items for the table.\n\t *\n\t * @return void\n\t *\/\n\tpublic function prepare_items() {\n\t\t$this->cloud_snippets = $this->fetch_snippets();\n\t\t$this->items = $this->cloud_snippets->snippets;\n\n\t\t$this->process_actions();\n\n\t\t$this->set_pagination_args(\n\t\t\t[\n\t\t\t\t'per_page'    => count( $this->cloud_snippets->snippets ),\n\t\t\t\t'total_items' => $this->cloud_snippets->total_snippets,\n\t\t\t\t'total_pages' => $this->cloud_snippets->total_pages,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Process any actions that have been submitted, such as downloading cloud snippets to the local database.\n\t *\n\t * @return void\n\t *\/\n\tpublic function process_actions() {\n\t\t$_SERVER['REQUEST_URI'] = remove_query_arg(\n\t\t\t[ 'action', 'snippet', '_wpnonce', 'source', 'cloud-bundle-run', 'cloud-bundle-show', 'bundle_share_name', 'cloud_bundles' ]\n\t\t);\n\n\t\t\/\/ Check request is coming form the cloud search page.\n\t\tif ( isset( $_REQUEST['type'] ) && 'cloud_search' === $_REQUEST['type'] ) {\n\t\t\tif ( isset( $_REQUEST['action'], $_REQUEST['snippet'], $_REQUEST['source'] ) ) {\n\t\t\t\tcloud_lts_process_download_action(\n\t\t\t\t\tsanitize_key( wp_unslash( $_REQUEST['action'] ) ),\n\t\t\t\t\tsanitize_key( wp_unslash( $_REQUEST['source'] ) ),\n\t\t\t\t\tsanitize_key( wp_unslash( $_REQUEST['snippet'] ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Output table rows.\n\t *\n\t * @return void\n\t *\/\n\tpublic function display_rows() {\n\t\t$status_descriptions = [\n\t\t\tCloud_API::STATUS_PUBLIC      =>\n\t\t\t\t__( 'Snippet has passed basic review.', 'code-snippets' ),\n\t\t\tCloud_API::STATUS_AI_VERIFIED =>\n\t\t\t\t__( 'Snippet has been tested by our AI bot.', 'code-snippets' ),\n\t\t\tCloud_API::STATUS_UNVERIFIED  =>\n\t\t\t\t__( 'Snippet has not undergone any review yet.', 'code-snippets' ),\n\t\t];\n\n\t\t\/**\n\t\t * The current table item.\n\t\t *\n\t\t * @var $item Cloud_Snippet\n\t\t *\/\n\t\tforeach ( $this->items as $item ) {\n\t\t\t?>\n\t\t\t<div class=\"plugin-card cloud-search-card plugin-card-<?php echo esc_attr( $item->id ); ?>\">\n\t\t\t\t<?php\n\t\t\t\tcloud_lts_display_column_hidden_input( 'code', $item );\n\t\t\t\tcloud_lts_display_column_hidden_input( 'name', $item );\n\t\t\t\t?>\n\t\t\t\t<div class=\"plugin-card-top\">\n\t\t\t\t\t<div class=\"name column-name\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t$link = code_snippets()->cloud_api->get_link_for_cloud_snippet( $item );\n\n\t\t\t\t\t\t\tif ( $link ) {\n\t\t\t\t\t\t\t\tprintf( '<a href=\"%s\">', esc_url( code_snippets()->get_snippet_edit_url( $link->local_id ) ) );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t'<a href=\"%s\" title=\"%s\" class=\"cloud-snippet-preview thickbox\" data-snippet=\"%s\" data-lang=\"%s\">',\n\t\t\t\t\t\t\t\t\t'#TB_inline?&width=700&height=500&inlineId=show-code-preview',\n\t\t\t\t\t\t\t\t\tesc_attr__( 'Preview this snippet', 'code-snippets' ),\n\t\t\t\t\t\t\t\t\tesc_attr( $item->id ),\n\t\t\t\t\t\t\t\t\tesc_attr( Cloud_API::get_type_from_scope( $item->scope ) )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\techo esc_html( $item->name );\n\n\t\t\t\t\t\t\t\/\/ Grab first tag in array of tags.\n\t\t\t\t\t\t\t$category = count( $item->tags ) > 0 ? strtolower( esc_attr( $item->tags[0] ) ) : 'general';\n\n\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t'<img src=\"%s\" class=\"plugin-icon\" alt=\"%s\">',\n\t\t\t\t\t\t\t\tesc_url( \"https:\/\/codesnippets.cloud\/images\/plugin-icons\/$category-logo.png\" ),\n\t\t\t\t\t\t\t\tesc_attr( $category )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\techo '<\/a>';\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t<\/h3>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"action-links\">\n\t\t\t\t\t\t<ul class=\"plugin-action-buttons\">\n\t\t\t\t\t\t\t<?php cloud_lts_render_action_buttons( $item, 'search' ); ?>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"desc column-description\">\n\t\t\t\t\t\t<p><?php echo wp_kses_post( $this->process_description( $item->description ) ); ?><\/p>\n\t\t\t\t\t\t<p class=\"authors\">\n\t\t\t\t\t\t\t<cite>\n\t\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t\t'%s <a target=\"_blank\" href=\"%s\">%s<\/a>',\n\t\t\t\t\t\t\t\t\tesc_html__( 'Codevault:', 'code-snippets' ),\n\t\t\t\t\t\t\t\t\tesc_url( sprintf( 'https:\/\/codesnippets.cloud\/codevault\/%s', $item->codevault ) ),\n\t\t\t\t\t\t\t\t\tesc_html( $item->codevault )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t\t<\/cite>\n\t\t\t\t\t\t<\/p>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"plugin-card-bottom cloud-search-card-bottom\">\n\t\t\t\t\t<div class=\"vers column-rating voted-info\">\n\t\t\t\t\t\t<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n\t\t\t\t\t\t     fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"thumbs-up\">\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n\t\t\t\t\t\t\t      d=\"M6.633 10.5c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75A2.25 2.25 0 0116.5 4.5c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23H5.904M14.25 9h2.25M5.904 18.75c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 01-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 10.203 4.167 9.75 5 9.75h1.053c.472 0 .745.556.5.96a8.958 8.958 0 00-1.302 4.665c0 1.194.232 2.333.654 3.375z\"><\/path>\n\t\t\t\t\t\t<\/svg>\n\t\t\t\t\t\t<span class=\"num-ratings\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\t\/\/ translators: 1: number of votes.\n\t\t\t\t\t\t\t$votes_text = _nx( '%d time', '%d times', $item->vote_count, 'vote count', 'code-snippets' );\n\t\t\t\t\t\t\t$votes_text = sprintf( $votes_text, number_format_i18n( $item->vote_count ) );\n\n\t\t\t\t\t\t\t\/\/ translators: 1: number of users.\n\t\t\t\t\t\t\t$users_text = _n( '%d user', '%d users', $item->total_votes, 'code-snippets' );\n\t\t\t\t\t\t\t$users_text = sprintf( $users_text, number_format_i18n( $item->total_votes ) );\n\n\t\t\t\t\t\t\t\/\/ translators: 1: number of votes with label, 2: number of users with label.\n\t\t\t\t\t\t\techo esc_html( sprintf( _x( '%1$s by %2$s', 'votes', 'code-snippets' ), $votes_text, $users_text ) );\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"column-updated\">\n\t\t\t\t\t\t<strong><?php esc_html_e( 'Last Updated:', 'code-snippets' ); ?><\/strong>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t\/\/ translators: %s: Human-readable time difference.\n\t\t\t\t\t\techo esc_html( sprintf( __( '%s ago', 'code-snippets' ), human_time_diff( strtotime( $item->updated ) ) ) );\n\t\t\t\t\t\t?>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"column-downloaded\">\n\t\t\t\t\t\t<div class=\"badge <?php echo esc_attr( $this->cloud_api->get_status_badge( $item->status ) ); ?>-badge tooltip tooltip-block tooltip-end\">\n\t\t\t\t\t\t\t<?php\n\n\t\t\t\t\t\t\techo esc_html( $this->cloud_api->get_status_label( $item->status ) );\n\n\t\t\t\t\t\t\tif ( isset( $status_descriptions[ $item->status ] ) ) {\n\t\t\t\t\t\t\t\techo '<span class=\"dashicons dashicons-info-outline\"><\/span>';\n\t\t\t\t\t\t\t\tprintf( '<div class=\"tooltip-content\">%s<\/div>', esc_html( $status_descriptions[ $item->status ] ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t?>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"column-compatibility\">\n\t\t\t\t\t\t<strong><?php esc_html_e( 'WP Compatibility:', 'code-snippets' ); ?><\/strong>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif ( empty( $wp_tested ) ) {\n\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t'<span class=\"compatibility-untested\">%s<\/span>',\n\t\t\t\t\t\t\t\tesc_html__( 'Not indicated by author', 'code-snippets' )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprintf(\n\t\t\t\t\t\t\t\t'<span class=\"compatibility-compatible\">%s<\/span>',\n\t\t\t\t\t\t\t\t\/\/ translators: %s: tested status.\n\t\t\t\t\t\t\t\tesc_html( sprintf( __( 'Author states %s', 'code-snippets' ), $wp_tested ) )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<?php\n\t\t}\n\t}\n\n\t\/**\n\t * Process the description text - limit to 150 characters.\n\t *\n\t * @param string|null $description Description as provided by the API.\n\t *\n\t * @return string formatted description string max 150 chars.\n\t *\/\n\tprotected function process_description( ?string $description ): string {\n\t\t$description = wp_strip_all_tags( $description );\n\t\treturn strlen( $description ) > 150 ? substr( $description, 0, 150 ) . '\u2026' : $description;\n\t}\n\n\t\/**\n\t * Text displayed when no snippet data is available.\n\t *\n\t * @return void\n\t *\/\n\tpublic function no_items() {\n\t\tif ( ! empty( $_REQUEST['cloud_search'] ) && count( $this->cloud_snippets->snippets ) < 1 ) {\n\t\t\techo '<p class=\"no-results\">',\n\t\t\tesc_html__( 'No snippets or codevault could be found with that search term. Please try again.', 'code-snippets' ),\n\t\t\t'<\/p>';\n\t\t} else {\n\t\t\techo '<p>', esc_html__( 'Please enter a term to start searching code snippets in the cloud.', 'code-snippets' ), '<\/p>';\n\t\t}\n\t}\n\n\t\/**\n\t * Fetch the snippets used to populate the table.\n\t *\n\t * @return Cloud_Snippets\n\t *\/\n\tpublic function fetch_snippets(): Cloud_Snippets {\n\t\t\/\/ Check if search term has been entered.\n\t\tif ( isset( $_REQUEST['type'], $_REQUEST['cloud_search'], $_REQUEST['cloud_select'] ) &&\n\t\t     'cloud_search' === sanitize_key( wp_unslash( $_REQUEST['type'] ) )\n\t\t) {\n\t\t\t\/\/ If we have a search query, then send a search request to cloud server API search endpoint.\n\t\t\t$search_query = sanitize_text_field( wp_unslash( $_REQUEST['cloud_search'] ) );\n\t\t\t$search_by = sanitize_text_field( wp_unslash( $_REQUEST['cloud_select'] ) );\n\n\t\t\treturn Cloud_API::fetch_search_results( $search_by, $search_query, $this->get_pagenum() - 1 );\n\t\t}\n\n\t\t\/\/ If no search results, then return empty object.\n\t\treturn new Cloud_Snippets();\n\t}\n\n\t\/**\n\t * Gets the current search result page number.\n\t *\n\t * @return integer\n\t *\/\n\tpublic function get_pagenum(): int {\n\t\t$page = isset( $_REQUEST['search_page'] ) ? absint( $_REQUEST['search_page'] ) : 0;\n\n\t\tif ( isset( $this->_pagination_args['total_pages'] ) && $page > $this->_pagination_args['total_pages'] ) {\n\t\t\t$page = $this->_pagination_args['total_pages'];\n\t\t}\n\n\t\treturn max( 1, $page );\n\t}\n\n\t\/**\n\t * Display the table.\n\t *\n\t * @return void\n\t *\/\n\tpublic function display() {\n\t\tCloud_API::render_cloud_snippet_thickbox();\n\t\tparent::display();\n\t}\n\n\t\/**\n\t * Displays the pagination.\n\t *\n\t * @param string $which Context where the pagination will be displayed.\n\t *\n\t * @return void\n\t *\/\n\tprotected function pagination( $which ) {\n\t\t$total_items = $this->_pagination_args['total_items'];\n\t\t$total_pages = $this->_pagination_args['total_pages'];\n\t\t$pagenum = $this->get_pagenum();\n\n\t\tif ( 'top' === $which && $total_pages > 1 ) {\n\t\t\t$this->screen->render_screen_reader_content( 'heading_pagination' );\n\t\t}\n\n\t\t$paginate = cloud_lts_pagination( $which, 'search', $total_items, $total_pages, $pagenum );\n\t\t$page_class = $paginate['page_class'];\n\t\t$output = $paginate['output'];\n\n\t\t$this->_pagination = \"<div class='tablenav-pages$page_class'>$output<\/div>\";\n\n\t\t\/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\t\techo $this->_pagination;\n\n\t\t\/\/ echo wp_kses_post( $this->_pagination ); TODO: This removes the top input box for page number.\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/cloud\/list-table-shared-ops.php","ext":"php","size":8058,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Functions to perform snippet operations\n *\n * @package Code_Snippets\n *\/\n\nnamespace Code_Snippets\\Cloud;\n\nuse function Code_Snippets\\code_snippets;\n\n\/**\n * Display a hidden input field for a certain column and snippet value.\n *\n * @param string        $column_name Column name.\n * @param Cloud_Snippet $snippet     Column item.\n *\n * @return void\n *\/\nfunction cloud_lts_display_column_hidden_input( string $column_name, Cloud_Snippet $snippet ) {\n\tprintf(\n\t\t'<input id=\"cloud-snippet-%s-%s\" class=\"cloud-snippet-item\" type=\"hidden\" name=\"%s\" value=\"%s\" \/>',\n\t\tesc_attr( $column_name ),\n\t\tesc_attr( $snippet->id ),\n\t\tesc_attr( $column_name ),\n\t\tesc_attr( $snippet->$column_name )\n\t);\n}\n\n\/**\n * Process the download snippet action\n *\n * @param string $action  Action - 'download' or 'update'.\n * @param string $source  Source - 'search' or 'cloud'.\n * @param string $snippet Snippet ID.\n *\n * @return void\n *\/\nfunction cloud_lts_process_download_action( string $action, string $source, string $snippet ) {\n\tif ( 'download' === $action || 'update' === $action ) {\n\t\t$result = code_snippets()->cloud_api->download_or_update_snippet( $snippet, $source, $action );\n\n\t\tif ( $result['success'] ) {\n\t\t\t$redirect_uri = $result['snippet_id'] ?\n\t\t\t\tcode_snippets()->get_snippet_edit_url( (int) $result['snippet_id'] ) :\n\t\t\t\tadd_query_arg( 'result', $result['action'] );\n\n\t\t\twp_safe_redirect( esc_url_raw( $redirect_uri ) );\n\t\t\texit;\n\t\t}\n\t}\n}\n\n\/**\n * Build action links for snippet.\n *\n * @param Cloud_Snippet $cloud_snippet Snippet\/Column item.\n * @param string        $source        Source - 'search' or 'codevault'.\n *\n * @return void\n *\/\nfunction cloud_lts_render_action_buttons( Cloud_Snippet $cloud_snippet, string $source ) {\n\t$lang = Cloud_API::get_type_from_scope( $cloud_snippet->scope );\n\t$link = code_snippets()->cloud_api->get_link_for_cloud_snippet( $cloud_snippet );\n\t$is_licensed = code_snippets()->licensing->is_licensed();\n\t$download = $is_licensed || ! in_array( $lang, [ 'css', 'js' ], true );\n\n\tif ( $link ) {\n\t\tif ( $is_licensed && $link->update_available ) {\n\t\t\t$update_url = add_query_arg(\n\t\t\t\t[\n\t\t\t\t\t'action'  => 'update',\n\t\t\t\t\t'snippet' => $cloud_snippet->id,\n\t\t\t\t\t'source'  => $source,\n\t\t\t\t]\n\t\t\t);\n\t\t\tprintf(\n\t\t\t\t'<li><a class=\"button button-primary\" href=\"%s\">%s<\/a><\/li>',\n\t\t\t\tesc_url( $update_url ),\n\t\t\t\tesc_html__( 'Update Available', 'code-snippets' )\n\t\t\t);\n\t\t} else {\n\t\t\tprintf(\n\t\t\t\t'<li><a class=\"button\" href=\"%s\">%s<\/a><\/li>',\n\t\t\t\tesc_url( code_snippets()->get_snippet_edit_url( $link->local_id ) ),\n\t\t\t\tesc_html__( 'View', 'code-snippets' )\n\t\t\t);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( $download ) {\n\t\t$download_url = add_query_arg(\n\t\t\t[\n\t\t\t\t'action'  => 'download',\n\t\t\t\t'snippet' => $cloud_snippet->id,\n\t\t\t\t'source'  => $source,\n\t\t\t]\n\t\t);\n\n\t\tprintf(\n\t\t\t'<li><a class=\"button button-primary\" href=\"%s\">%s<\/a><\/li>',\n\t\t\tesc_url( $download_url ),\n\t\t\tesc_html__( 'Download', 'code-snippets' )\n\t\t);\n\t} else {\n\t\tprintf(\n\t\t\t'<li><span class=\"%s\">%s <span class=\"tooltip-content\">%s<\/span><\/span><\/li>',\n\t\t\t'button button-primary button-disabled tooltip tooltip-block tooltip-end',\n\t\t\tesc_html__( 'Download', 'code-snippets' ),\n\t\t\tesc_html__( 'This snippet type is only available in Code Snippets Pro', 'code-snippets' )\n\t\t);\n\t}\n\n\tprintf(\n\t\t'<li><a href=\"%s\" aria-label=\"%s\" class=\"%s\" data-snippet=\"%s\" data-lang=\"%s\">%s<\/a><\/li>',\n\t\t'#TB_inline?&width=700&height=500&inlineId=show-code-preview',\n\t\tesc_attr( $cloud_snippet->name ),\n\t\t'cloud-snippet-preview thickbox',\n\t\tesc_attr( $cloud_snippet->id ),\n\t\tesc_attr( $lang ),\n\t\tesc_html__( 'Preview', 'code-snippets' )\n\t);\n}\n\n\/**\n * Build the pagination functionality\n *\n * @param string $which       Context where the pagination will be displayed.\n * @param string $source      Source - 'search' or 'cloud'.\n * @param int    $total_items Total number of items.\n * @param int    $total_pages Total number of pages.\n * @param int    $pagenum     Current page number.\n *\n * @return array\n *\/\nfunction cloud_lts_pagination( string $which, string $source, int $total_items, int $total_pages, int $pagenum ): array {\n\t\/* translators: %s: Number of items. *\/\n\t$num = sprintf( _n( '%s item', '%s items', $total_items, 'code-snippets' ), number_format_i18n( $total_items ) );\n\t$output = '<span class=\"displaying-num\">' . $num . '<\/span>';\n\n\t$current = isset( $_REQUEST['cloud_page'] ) ? (int) $_REQUEST['cloud_page'] : $pagenum;\n\t$current_url = remove_query_arg( wp_removable_query_args() ) . '#' . $source;\n\n\t$page_links = array();\n\n\t$html_current_page = '';\n\t$total_pages_before = '<span class=\"paging-input\">';\n\t$total_pages_after = '<\/span><\/span>';\n\n\t$disable_first = false;\n\t$disable_last = false;\n\t$disable_prev = false;\n\t$disable_next = false;\n\n\tif ( 1 === $current ) {\n\t\t$disable_first = true;\n\t\t$disable_prev = true;\n\t}\n\n\tif ( $total_pages === $current ) {\n\t\t$disable_last = true;\n\t\t$disable_next = true;\n\t}\n\n\tif ( $disable_first ) {\n\t\t$page_links[] = '<span class=\"tablenav-pages-navspan button disabled\" aria-hidden=\"true\">&laquo;<\/span>';\n\t} else {\n\t\t$page_links[] = sprintf(\n\t\t\t'<a class=\"first-page button\" href=\"%s\"><span class=\"screen-reader-text\">%s<\/span><span aria-hidden=\"true\">&laquo;<\/span><\/a>',\n\t\t\tesc_url( remove_query_arg( $source . '_page', $current_url ) ),\n\t\t\tesc_html__( 'First page', 'code-snippets' )\n\t\t);\n\t}\n\n\tif ( $disable_prev ) {\n\t\t$page_links[] = '<span class=\"tablenav-pages-navspan button disabled\" aria-hidden=\"true\">&lsaquo;<\/span>';\n\t} else {\n\t\t$page_links[] = sprintf(\n\t\t\t'<a class=\"prev-page button\" href=\"%s\"><span class=\"screen-reader-text\">%s<\/span><span aria-hidden=\"true\">&lsaquo;<\/span><\/a>',\n\t\t\tesc_url( add_query_arg( $source . '_page', max( 1, $current - 1 ), $current_url ) ),\n\t\t\tesc_html__( 'Previous page', 'code-snippets' )\n\t\t);\n\t}\n\n\tif ( 'bottom' === $which ) {\n\t\t$html_current_page = $current;\n\t\t$total_pages_before = sprintf( '<span class=\"screen-reader-text\">%s<\/span><span id=\"table-paging\" class=\"paging-input\"><span class=\"tablenav-paging-text\">', __( 'Current page', 'code-snippets' ) );\n\t}\n\n\tif ( 'top' === $which ) {\n\t\t$html_current_page = sprintf(\n\t\t\t'<label for=\"current-page-selector\" class=\"screen-reader-text\">%s<\/label><input class=\"current-page-selector\" id=\"current-page-selector\" type=\"text\" name=\"%s_page\" value=\"%s\" size=\"%d\" aria-describedby=\"table-paging\" \/><span class=\"tablenav-paging-text\">',\n\t\t\t__( 'Current page', 'code-snippets' ),\n\t\t\t$source,\n\t\t\t$current,\n\t\t\tstrlen( $total_pages )\n\t\t);\n\t}\n\n\t$html_total_pages = sprintf( '<span class=\"total-pages\">%s<\/span>', number_format_i18n( $total_pages ) );\n\n\t\/* translators: 1: Current page, 2: Total pages. *\/\n\t$current_html = _x( '%1$s of %2$s', 'paging', 'code-snippets' );\n\t$page_links[] = $total_pages_before . sprintf( $current_html, $html_current_page, $html_total_pages ) . $total_pages_after;\n\n\tif ( $disable_next ) {\n\t\t$page_links[] = '<span class=\"tablenav-pages-navspan button disabled\" aria-hidden=\"true\">&rsaquo;<\/span>';\n\t} else {\n\t\t$page_links[] = sprintf(\n\t\t\t'<a class=\"next-page button\" href=\"%s\"><span class=\"screen-reader-text\">%s<\/span><span aria-hidden=\"true\">%s<\/span><\/a>',\n\t\t\tesc_url( add_query_arg( $source . '_page', min( $total_pages, $current + 1 ), $current_url ) ),\n\t\t\tesc_html__( 'Next page', 'code-snippets' ),\n\t\t\t'&rsaquo;'\n\t\t);\n\t}\n\n\tif ( $disable_last ) {\n\t\t$page_links[] = '<span class=\"tablenav-pages-navspan button disabled\" aria-hidden=\"true\">&raquo;<\/span>';\n\t} else {\n\t\t$page_links[] = sprintf(\n\t\t\t'<a class=\"last-page button\" href=\"%s\"><span class=\"screen-reader-text\">%s<\/span><span aria-hidden=\"true\">%s<\/span><\/a>',\n\t\t\tesc_url( add_query_arg( $source . '_page', $total_pages, $current_url ) ),\n\t\t\tesc_html__( 'Last page', 'code-snippets' ),\n\t\t\t'&raquo;'\n\t\t);\n\t}\n\n\t$pagination_links_class = 'pagination-links';\n\tif ( ! empty( $infinite_scroll ) ) {\n\t\t$pagination_links_class .= ' hide-if-js';\n\t}\n\n\t$output .= \"\\n<span class='$pagination_links_class'>\" . implode( \"\\n\", $page_links ) . '<\/span>';\n\n\treturn [\n\t\t'output'     => $output,\n\t\t'page_class' => $total_pages ? ( $total_pages < 2 ? ' one-page' : '' ) : ' no-pages',\n\t];\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/class-db.php","ext":"php","size":9393,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\n\/**\n * Functions used to manage the database tables.\n *\n * @package Code_Snippets\n *\/\nclass DB {\n\n\t\/**\n\t * Unprefixed site-wide table name.\n\t *\/\n\tpublic const TABLE_NAME = 'snippets';\n\n\t\/**\n\t * Unprefixed network-wide table name.\n\t *\/\n\tpublic const MS_TABLE_NAME = 'ms_snippets';\n\n\t\/**\n\t * Side-wide table name.\n\t *\n\t * @var string\n\t *\/\n\tpublic string $table;\n\n\t\/**\n\t * Network-wide table name.\n\t *\n\t * @var string\n\t *\/\n\tpublic string $ms_table;\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->set_table_vars();\n\t}\n\n\t\/**\n\t * Register the snippet table names with WordPress.\n\t *\n\t * @since 2.0\n\t *\/\n\tpublic function set_table_vars() {\n\t\tglobal $wpdb;\n\n\t\t$this->table = $wpdb->prefix . self::TABLE_NAME;\n\t\t$this->ms_table = $wpdb->base_prefix . self::MS_TABLE_NAME;\n\n\t\t\/\/ Register the snippet table names with WordPress.\n\t\t$wpdb->snippets = $this->table;\n\t\t$wpdb->ms_snippets = $this->ms_table;\n\n\t\t$wpdb->tables[] = self::TABLE_NAME;\n\t\t$wpdb->ms_global_tables[] = self::MS_TABLE_NAME;\n\t}\n\n\t\/**\n\t * Validate a provided 'network' or 'multisite' param, converting it to a boolean.\n\t *\n\t * @param bool|null $network Network argument value.\n\t *\n\t * @return bool Sanitized value.\n\t *\/\n\tpublic static function validate_network_param( ?bool $network = null ): bool {\n\n\t\t\/\/ If multisite is not active, then assume the value is false.\n\t\tif ( ! is_multisite() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ If $multisite is null, try to base it on the current admin page.\n\t\tif ( is_null( $network ) && function_exists( 'is_network_admin' ) ) {\n\t\t\treturn is_network_admin();\n\t\t}\n\n\t\treturn (bool) $network;\n\t}\n\n\t\/**\n\t * Return the appropriate snippet table name\n\t *\n\t * @param bool|null $is_network Whether retrieve the multisite table name (true) or the site table name (false).\n\t *\n\t * @return string The snippet table name\n\t * @since 2.0\n\t *\/\n\tpublic function get_table_name( ?bool $is_network = null ): string {\n\t\t$is_network = is_bool( $is_network ) ? $is_network : self::validate_network_param( $is_network );\n\t\treturn $is_network ? $this->ms_table : $this->table;\n\t}\n\n\t\/**\n\t * Determine whether a database table exists.\n\t *\n\t * @param string  $table_name Name of database table to check.\n\t * @param boolean $refresh    Rerun the query, instead of using a cached value.\n\t *\n\t * @return bool Whether the database table exists.\n\t *\/\n\tpublic static function table_exists( string $table_name, bool $refresh = false ): bool {\n\t\tglobal $wpdb;\n\t\tstatic $checked = array();\n\n\t\tif ( $refresh || ! isset( $checked[ $table_name ] ) ) {\n\t\t\t\/\/ phpcs:disable WordPress.DB.DirectDatabaseQuery.NoCaching, caching is handled through $checked variable.\n\t\t\t$result = $wpdb->get_var( $wpdb->prepare( 'SHOW TABLES LIKE %s', $wpdb->esc_like( $table_name ) ) );\n\t\t\t$checked[ $table_name ] = $result === $table_name;\n\t\t}\n\n\t\treturn $checked[ $table_name ];\n\t}\n\n\t\/**\n\t * Create the snippet tables if they do not already exist\n\t *\/\n\tpublic function create_missing_tables() {\n\n\t\t\/\/ Create the network snippets table if it doesn't exist.\n\t\tif ( is_multisite() && ! self::table_exists( $this->ms_table ) ) {\n\t\t\t$this->create_table( $this->ms_table );\n\t\t}\n\n\t\t\/\/ Create the table if it doesn't exist.\n\t\tif ( ! self::table_exists( $this->table ) ) {\n\t\t\t$this->create_table( $this->table );\n\t\t}\n\t}\n\n\t\/**\n\t * Create the snippet tables, or upgrade them if they already exist\n\t *\/\n\tpublic function create_or_upgrade_tables() {\n\t\tif ( is_multisite() ) {\n\t\t\t$this->create_table( $this->ms_table );\n\t\t}\n\n\t\t$this->create_table( $this->table );\n\t}\n\n\t\/**\n\t * Create a snippet table if it does not already exist\n\t *\n\t * @param string $table_name Name of database table.\n\t *\/\n\tpublic static function create_missing_table( string $table_name ) {\n\t\tif ( ! self::table_exists( $table_name ) ) {\n\t\t\tself::create_table( $table_name );\n\t\t}\n\t}\n\n\t\/**\n\t * Create a single snippet table.\n\t *\n\t * @param string $table_name The name of the table to create.\n\t *\n\t * @return bool Whether the table creation was successful.\n\t * @since 1.6\n\t * @uses  dbDelta() to apply the SQL code\n\t *\/\n\tpublic static function create_table( string $table_name ): bool {\n\t\tglobal $wpdb;\n\t\t$charset_collate = $wpdb->get_charset_collate();\n\n\t\t\/* Create the database table *\/\n\t\t$sql = \"CREATE TABLE $table_name (\n\t\t\t\tid           BIGINT(20)   NOT NULL AUTO_INCREMENT,\n\t\t\t\tname         TINYTEXT     NOT NULL,\n\t\t\t\tdescription  TEXT         NOT NULL,\n\t\t\t\tcode         LONGTEXT     NOT NULL,\n\t\t\t\ttags         LONGTEXT     NOT NULL,\n\t\t\t\tscope        VARCHAR(15)  NOT NULL DEFAULT 'global',\n\t\t\t\tcondition_id BIGINT(20)   NOT NULL DEFAULT 0,\n\t\t\t\tpriority     SMALLINT     NOT NULL DEFAULT 10,\n\t\t\t\tactive       TINYINT(1)   NOT NULL DEFAULT 0,\n\t\t\t\tmodified     DATETIME     NOT NULL DEFAULT CURRENT_TIMESTAMP,\n\t\t\t\trevision     BIGINT(20)   NOT NULL DEFAULT 1,\n\t\t\t\tcloud_id     VARCHAR(255) NULL,\n\t\t\t\tPRIMARY KEY  (id),\n\t\t\t\tKEY scope (scope),\n\t\t\t\tKEY active (active)\n\t\t\t) $charset_collate;\";\n\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/upgrade.php';\n\t\tdbDelta( $sql );\n\n\t\t$success = empty( $wpdb->last_error );\n\n\t\tif ( $success ) {\n\t\t\tdo_action( 'code_snippets\/create_table', $table_name );\n\t\t}\n\n\t\treturn $success;\n\t}\n\n\t\/**\n\t * Fetch a list of active snippets from a database table.\n\t *\n\t * @param string        $table_name  Name of table to fetch snippets from.\n\t * @param array<string> $scopes      List of scopes to include in query.\n\t * @param boolean       $active_only Whether to only fetch active snippets from the table.\n\t *\n\t * @return array<string, array<string, mixed>>|false List of active snippets, if any could be retrieved.\n\t *\n\t * @phpcs:disable WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare\n\t *\/\n\tprivate static function fetch_snippets_from_table( string $table_name, array $scopes, bool $active_only = true ) {\n\t\tglobal $wpdb;\n\n\t\t$cache_key = sprintf( 'active_snippets_%s_%s', sanitize_key( join( '_', $scopes ) ), $table_name );\n\t\t$cached_snippets = wp_cache_get( $cache_key, CACHE_GROUP );\n\n\t\tif ( is_array( $cached_snippets ) ) {\n\t\t\treturn $cached_snippets;\n\t\t}\n\n\t\tif ( ! self::table_exists( $table_name ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$scopes_format = implode( ',', array_fill( 0, count( $scopes ), '%s' ) );\n\t\t$extra_where = $active_only ? 'AND active=1' : '';\n\n\t\t$snippets = $wpdb->get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"\n\t\t\t\tSELECT id, code, scope, active, priority\n\t\t\t\tFROM $table_name\n\t\t\t\tWHERE scope IN ($scopes_format) $extra_where\n\t\t\t\tORDER BY priority, id\",\n\t\t\t\t$scopes\n\t\t\t),\n\t\t\t'ARRAY_A'\n\t\t);\n\n\t\t\/\/ Cache the full list of snippets.\n\t\tif ( is_array( $snippets ) ) {\n\t\t\twp_cache_set( $cache_key, $snippets, CACHE_GROUP );\n\t\t\treturn $snippets;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Sort the active snippets by priority, table, and ID.\n\t *\n\t * @param array $active_snippets List of active snippets to sort.\n\t *\/\n\tprivate function sort_active_snippets( array &$active_snippets ): void {\n\t\t$comparisons = [\n\t\t\tfunction ( array $a, array $b ) {\n\t\t\t\treturn $a['priority'] <=> $b['priority'];\n\t\t\t},\n\t\t\tfunction ( array $a, array $b ) {\n\t\t\t\t$a_table = $a['table'] === $this->ms_table ? 0 : 1;\n\t\t\t\t$b_table = $b['table'] === $this->ms_table ? 0 : 1;\n\t\t\t\treturn $a_table <=> $b_table;\n\t\t\t},\n\t\t\tfunction ( array $a, array $b ) {\n\t\t\t\treturn $a['id'] <=> $b['id'];\n\t\t\t},\n\t\t];\n\n\t\tusort(\n\t\t\t$active_snippets,\n\t\t\tstatic function ( $a, $b ) use ( $comparisons ) {\n\t\t\t\tforeach ( $comparisons as $comparison ) {\n\t\t\t\t\t$result = $comparison( $a, $b );\n\t\t\t\t\tif ( 0 !== $result ) {\n\t\t\t\t\t\treturn $result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t);\n\t}\n\n\t\/**\n\t * Generate the SQL for fetching active snippets from the database.\n\t *\n\t * @param string[] $scopes List of scopes to retrieve in.\n\t *\n\t * @return array{\n\t *     id: int,\n\t *     code: string,\n\t *     scope: string,\n\t *     table: string,\n\t *     network: bool,\n\t *     priority: int,\n\t * } List of active snippets.\n\t *\/\n\tpublic function fetch_active_snippets( array $scopes ): array {\n\t\t$active_snippets = [];\n\n\t\t\/\/ Fetch the active snippets for the current site, if there are any.\n\t\t$snippets = $this->fetch_snippets_from_table( $this->table, $scopes, true );\n\t\tif ( $snippets ) {\n\t\t\tforeach ( $snippets as $snippet ) {\n\t\t\t\t$active_snippets[] = [\n\t\t\t\t\t'id'       => intval( $snippet['id'] ),\n\t\t\t\t\t'code'     => $snippet['code'],\n\t\t\t\t\t'scope'    => $snippet['scope'],\n\t\t\t\t\t'table'    => $this->table,\n\t\t\t\t\t'network'  => false,\n\t\t\t\t\t'priority' => intval( $snippet['priority'] ),\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\t\/\/ If multisite is enabled, fetch all snippets from the network table, and filter down to only active snippets.\n\t\tif ( is_multisite() ) {\n\t\t\t$ms_snippets = $this->fetch_snippets_from_table( $this->ms_table, $scopes, false );\n\n\t\t\tif ( $ms_snippets ) {\n\t\t\t\t$active_shared_ids = get_option( 'active_shared_network_snippets', [] );\n\t\t\t\t$active_shared_ids = is_array( $active_shared_ids )\n\t\t\t\t\t? array_map( 'intval', $active_shared_ids )\n\t\t\t\t\t: [];\n\n\t\t\t\tforeach ( $ms_snippets as $snippet ) {\n\t\t\t\t\t$id = intval( $snippet['id'] );\n\n\t\t\t\t\tif ( ! $snippet['active'] && ! in_array( $id, $active_shared_ids, true ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t$active_snippets[] = [\n\t\t\t\t\t\t'id'       => $id,\n\t\t\t\t\t\t'code'     => $snippet['code'],\n\t\t\t\t\t\t'scope'    => $snippet['scope'],\n\t\t\t\t\t\t'table'    => $this->ms_table,\n\t\t\t\t\t\t'network'  => true,\n\t\t\t\t\t\t'priority' => intval( $snippet['priority'] ),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\t$this->sort_active_snippets( $active_snippets );\n\t\t\t}\n\t\t}\n\n\t\treturn $active_snippets;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/class-licensing.php","ext":"php","size":314,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\n\/**\n * Empty class to better support interoperability between core and pro.\n *\n * @package Code_Snippets\n *\/\nclass Licensing {\n\n\t\/**\n\t * Determine whether the current site has an active license.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_licensed(): bool {\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/php\/class-data-item.php","ext":"php","size":6715,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Code_Snippets;\n\nuse WP_Exception;\n\n\/**\n * Base class for representing an item of data without needing to use direct access or individual getter and setter functions.\n *\n * @package Code_Snippets\n *\n * @since   3.4.0\n *\/\nabstract class Data_Item {\n\n\t\/**\n\t * List of data fields keyed to their current values. Will be initialised with default values.\n\t *\n\t * @var array<string, mixed>\n\t *\/\n\tprotected array $fields;\n\n\t\/**\n\t * List of default values provided for fields.\n\t *\n\t * @var array<string, mixed>\n\t *\/\n\tprotected array $default_values;\n\n\t\/**\n\t * Optional list of field name aliases to map when resolving a field name.\n\t *\n\t * @var array<string, string> Field alias names keyed to actual field names.\n\t *\/\n\tprotected array $field_aliases;\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * @param array<string, mixed>           $default_values List of valid fields mapped to their default values.\n\t * @param array<string, mixed>|Data_Item $initial_data   Optional initial data to populate fields.\n\t * @param array<string, string>          $field_aliases  Optional list of field name aliases to map when resolving a field name.\n\t *\/\n\tpublic function __construct( array $default_values, $initial_data = null, array $field_aliases = [] ) {\n\t\t$this->fields = $default_values;\n\t\t$this->default_values = $default_values;\n\t\t$this->field_aliases = $field_aliases;\n\n\t\t\/\/ If we've accidentally passed an existing object, then fetch its fields before constructing the new object.\n\t\tif ( is_object( $initial_data ) && method_exists( $initial_data, 'get_fields' ) ) {\n\t\t\t$initial_data = $initial_data->get_fields();\n\t\t}\n\n\t\t$this->set_fields( $initial_data );\n\t}\n\n\n\t\/**\n\t * Set all data fields from an array or object. Invalid fields will be ignored.\n\t *\n\t * @param array<string, mixed>|mixed $data List of data.\n\t *\/\n\tpublic function set_fields( $data ) {\n\t\t\/\/ Only accept arrays or objects.\n\t\tif ( ! $data || is_string( $data ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Convert objects into arrays.\n\t\tif ( is_object( $data ) ) {\n\t\t\t$data = get_object_vars( $data );\n\t\t}\n\n\t\t\/\/ Loop through the provided fields and set their values.\n\t\tforeach ( $data as $field => $value ) {\n\t\t\t$this->set_field( $field, $value );\n\t\t}\n\t}\n\n\t\/**\n\t * Retrieve list of current data fields.\n\t *\n\t * @return array<string, mixed> Field names keyed to current values.\n\t *\/\n\tpublic function get_fields(): array {\n\t\t$fields = [];\n\n\t\tforeach ( $this->get_allowed_fields() as $field_name ) {\n\t\t\t$fields[ $field_name ] = $this->$field_name;\n\t\t}\n\n\t\treturn $fields;\n\t}\n\n\t\/**\n\t * Retrieve a list of current data fields, excluding values that are unchanged from the default.\n\t *\n\t * @return array<string, mixed>\n\t *\/\n\tpublic function get_modified_fields(): array {\n\t\treturn array_filter(\n\t\t\t$this->get_fields(),\n\t\t\tfunction ( $value, $field ) {\n\t\t\t\treturn $value && $value !== $this->default_values[ $field ];\n\t\t\t},\n\t\t\tARRAY_FILTER_USE_BOTH\n\t\t);\n\t}\n\n\t\/**\n\t * Internal function for resolving the actual name of a field.\n\t *\n\t * @param string $field A field name, potentially a field alias.\n\t *\n\t * @return string The resolved field name.\n\t *\/\n\tprotected function resolve_field_name( string $field ): string {\n\t\treturn $this->field_aliases[ $field ] ?? $field;\n\t}\n\n\t\/**\n\t * Check if a field is set.\n\t *\n\t * @param string $field The field name.\n\t *\n\t * @return bool Whether the field is set.\n\t *\/\n\tpublic function __isset( string $field ) {\n\t\t$field = $this->resolve_field_name( $field );\n\t\treturn isset( $this->fields[ $field ] ) || method_exists( $this, 'get_' . $field );\n\t}\n\n\t\/**\n\t * Retrieve a field's value.\n\t *\n\t * @param string $field The field name.\n\t *\n\t * @return mixed The field value\n\t *\n\t * @throws WP_Exception If the field name is not allowed.\n\t *\/\n\tpublic function __get( string $field ) {\n\t\t$field = $this->resolve_field_name( $field );\n\n\t\tif ( method_exists( $this, 'get_' . $field ) ) {\n\t\t\treturn call_user_func( array( $this, 'get_' . $field ) );\n\t\t}\n\n\t\tif ( ! $this->is_allowed_field( $field ) ) {\n\t\t\tif ( function_exists( 'wp_trigger_error' ) ) {\n\t\t\t\t\/\/ translators: 1: class name, 2: field name.\n\t\t\t\t$message = sprintf( 'Trying to access invalid property on \"%1$s\" class: %2$s', get_class( $this ), $field );\n\t\t\t\twp_trigger_error( __FUNCTION__, $message, E_USER_WARNING );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn $this->fields[ $field ];\n\t}\n\n\t\/**\n\t * Set the value of a field.\n\t *\n\t * @param string $field The field name.\n\t * @param mixed  $value The field value.\n\t *\n\t * @throws WP_Exception If the field name is not allowed.\n\t *\/\n\tpublic function __set( string $field, $value ) {\n\t\t$field = $this->resolve_field_name( $field );\n\n\t\tif ( ! $this->is_allowed_field( $field ) ) {\n\t\t\tif ( function_exists( 'wp_trigger_error' ) ) {\n\t\t\t\t\/\/ translators: 1: class name, 2: field name.\n\t\t\t\t$message = sprintf( 'Trying to set invalid property on \"%s\" class: %s', get_class( $this ), $field );\n\t\t\t\twp_trigger_error( __FUNCTION__, $message, E_USER_ERROR );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t$value = method_exists( $this, 'prepare_' . $field ) ?\n\t\t\tcall_user_func( array( $this, 'prepare_' . $field ), $value ) :\n\t\t\t$this->prepare_field( $value, $field );\n\n\t\t$this->fields[ $field ] = $value;\n\t}\n\n\t\/**\n\t * Prepare a value before it is stored.\n\t *\n\t * @param mixed  $value Value to prepare.\n\t * @param string $field Field name.\n\t *\n\t * @return mixed Value in the correct format.\n\t *\/\n\tabstract protected function prepare_field( $value, string $field );\n\n\t\/**\n\t * Retrieve the list of fields that can be written to.\n\t *\n\t * @return array<string> List of field names.\n\t *\/\n\tpublic function get_allowed_fields(): array {\n\t\treturn array_keys( $this->fields ) + array_keys( $this->field_aliases );\n\t}\n\n\t\/**\n\t * Determine whether a field is allowed to be written to\n\t *\n\t * @param string $field The field name.\n\t *\n\t * @return bool true if the is allowed, false if invalid.\n\t *\/\n\tpublic function is_allowed_field( string $field ): bool {\n\t\treturn ( $this->fields && array_key_exists( $field, $this->fields ) ) ||\n\t\t       ( $this->field_aliases && array_key_exists( $field, $this->field_aliases ) );\n\t}\n\n\t\/**\n\t * Safely set the value for a field.\n\t * If the field name is invalid, false will be returned instead of an error thrown.\n\t *\n\t * @param string $field The field name.\n\t * @param mixed  $value The field value.\n\t *\n\t * @return bool true if the field was set successfully, false if the field name is invalid.\n\t *\n\t * @noinspection PhpDocMissingThrowsInspection\n\t *\/\n\tpublic function set_field( string $field, $value ): bool {\n\t\tif ( ! $this->is_allowed_field( $field ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Above is_allowed_field check should bypass exception.\n\t\t *\n\t\t * @noinspection PhpUnhandledExceptionInspection\n\t\t *\/\n\t\t$this->__set( $field, $value );\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"code-snippets\/code-snippets.php","ext":"php","size":1839,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Plugin Name:  Code Snippets\n * Plugin URI:   https:\/\/codesnippets.pro\n * Description:  An easy, clean and simple way to run code snippets on your site. No need to edit to your theme's functions.php file again!\n * Author:       Code Snippets Pro\n * Author URI:   https:\/\/codesnippets.pro\n * License:      GPL-2.0-or-later\n * License URI:  license.txt\n * Text Domain:  code-snippets\n * Version:      3.7.0\n * Requires PHP: 7.4\n * Requires at least: 5.0\n *\n * @version   3.7.0\n * @package   Code_Snippets\n * @author    Shea Bunge <shea@codesnippets.pro>\n * @copyright 2012-2024 Code Snippets Pro\n * @license   GPL-2.0-or-later https:\/\/spdx.org\/licenses\/GPL-2.0-or-later.html\n * @link      https:\/\/github.com\/codesnippetspro\/code-snippets\n *\n * phpcs:disable Modernize.FunctionCalls.Dirname.FileConstant\n *\/\n\n\/\/ Exit if accessed directly.\nif ( ! defined( 'ABSPATH' ) ) {\n\treturn;\n}\n\n\/\/ Halt loading here if the plugin is already loaded, or we're running an incompatible version of PHP.\nif ( ! defined( 'CODE_SNIPPETS_FILE' ) && version_compare( phpversion(), '7.4', '>=' ) ) {\n\n\t\/**\n\t * The current plugin version.\n\t *\n\t * Should be set to the same value as set above.\n\t *\n\t * @const string\n\t *\/\n\tdefine( 'CODE_SNIPPETS_VERSION', '3.7.0' );\n\n\t\/**\n\t * The full path to the main file of this plugin.\n\t *\n\t * This can later be passed to functions such as plugin_dir_path(), plugins_url() and plugin_basename()\n\t * to retrieve information about plugin paths.\n\t *\n\t * @since 2.0.0\n\t * @const string\n\t *\/\n\tdefine( 'CODE_SNIPPETS_FILE', __FILE__ );\n\n\t\/**\n\t * Used to determine which version of Code Snippets is running.\n\t *\n\t * @since 3.0.0\n\t * @onst  boolean\n\t *\/\n\tdefine( 'CODE_SNIPPETS_PRO', false );\n\n\trequire_once dirname( __FILE__ ) . '\/php\/load.php';\n} else {\n\trequire_once dirname( __FILE__ ) . '\/php\/deactivation-notice.php';\n}\n"},{"base":"plugins","rel":"code-snippets\/readme.txt","ext":"txt","size":14154,"mtime":1757312769,"type":"text","content":"=== Code Snippets ===\nContributors: bungeshea, ver3, lightbulbman, 0aksmith, johnpixle\nDonate link: https:\/\/codesnippets.pro\nTags: code, snippets, multisite, php, css\nLicense: GPL-2.0-or-later\nLicense URI: license.txt\nStable tag: 3.7.0\nTested up to: 6.8.2\n\nAn easy, clean and simple way to enhance your site with code snippets.\n\n== Description ==\n\n**\u2702 Code Snippets** provides an effortless way to enhance your WordPress site.\n\n**\ud83d\ude80 Upgrade to Code Snippets Pro** for complete CSS, JavaScript, Gutenberg, Elementor and cloud synchronisation integrations. **[Elevate your snippets experience now!](https:\/\/codesnippets.pro\/pricing)**\n\nSay goodbye to the hassle of tweaking your theme's `functions.php` file and downloading endless plugins \u2013 Code Snippets simplifies the process!\n\nA snippet is like a mini-plugin for your WordPress site, providing added functionality without the clutter.\n\nUnlike other solutions that involve dumping code into your `functions.php` file, Code Snippets offers an intuitive graphical interface for seamless integration and real-time execution. Managing snippets is as easy as activating and deactivating plugins, only without the bloat and overhead.\n\n**\ud83c\udfa5 Watch a quick overview by Imran Siddiq:**\n\nhttps:\/\/youtu.be\/uzND-wdSCMQ\n\n\u2601\ufe0f Each copy of Code Snippets includes full integration with the community-powered [Code Snippets Cloud](https:\/\/codesnippets.cloud\/) platform, providing easy access to hundreds of tweaks and enhancements ready to power-up any WordPress site.\n\n**\ud83c\udf10 Connect with us:**\n\n* [Support Forum](https:\/\/wordpress.org\/support\/plugin\/code-snippets)\n* [Facebook Community](https:\/\/facebook.com\/groups\/codesnippetsplugin)\n* [Discord Community](https:\/\/snipco.de\/discord)\n* [GitHub Repository](https:\/\/github.com\/codesnippetspro\/code-snippets)\n\n\ud83c\udf1f Like our plugin? Find it useful? Please consider sharing your experience by [leaving a review on WordPress.org](https:\/\/wordpress.org\/support\/view\/plugin-reviews\/code-snippets). Your feedback is instrumental to shaping our future growth!\n\n\ud83c\udf0d We'd like to thank the wonderful people who have helped contribute translations to allow Code Snippets to be used in different languages. [You can find a full list here](https:\/\/github.com\/codesnippetspro\/code-snippets\/blob\/core\/CREDITS.md#translators).\n\n== Installation ==\n\n= Automatic installation =\n\n1. Log into your WordPress admin\n2. Click __Plugins__\n\n3. Click __Add New__\n\n4. Search for __Code Snippets__\n\n5. Click __Install Now__ under \"Code Snippets\"\n6. Activate the plugin\n\n= Manual installation =\n\n1. Download the plugin\n2. Extract the contents of the zip file\n3. Upload the contents of the zip file to the `wp-content\/plugins\/` folder of your WordPress installation\n4. Activate the Code Snippets plugin from 'Plugins' page.\n\nNetwork Activating Code Snippets through the Network Dashboard will enable a special interface for running snippets across the entire network.\n\n== Frequently Asked Questions ==\n\nA full list of our Frequently Asked Questions can be found at [help.codesnippets.pro](https:\/\/help.codesnippets.pro\/collection\/3-faq).\n\n= How can I recover my site if it is crashed by a buggy snippet? =\nYou can recover your site by enabling the Code Snippets safe mode feature. Instructions for how to turn it on are available here: <https:\/\/help.codesnippets.pro\/article\/12-safe-mode>.\n\n= Will I lose my snippets if I change the theme or upgrade WordPress? =\nNo, the snippets are stored in the WordPress database, independent of the theme and unaffected by WordPress upgrades.\n\n= Can the plugin be completely uninstalled? =\nIf you enable the 'Complete Uninstall' option on the plugin settings page, Code Snippets will clean up all of its data when deleted through the WordPress 'Plugins' menu. This includes all stored snippets. If you would like to preserve the snippets, ensure they are exported first.\n\n= Can I copy snippets that I have created to another WordPress site? =\nYes! You can individually export a single snippet using the link below the snippet name on the 'Manage Snippets' page or bulk export multiple snippets using the 'Bulk Actions' feature. Snippets can later be imported using the 'Import Snippets' page by uploading the export file.\n\n= Can I export my snippets to PHP for a site where I'm not using the Code Snippets plugin? =\nYes. Click the checkboxes next to the snippets you want to export, and then choose **Export to PHP** from the Bulk Actions menu and click Apply. The generated PHP file will contain the exported snippets' code, as well as their name and description in comments.\n\n= Can I run network-wide snippets on a multisite installation? =\nYou can run snippets across an entire multisite network by **Network Activating** Code Snippets through the Network Dashboard. You can also activate Code Snippets just on the main site, and then individually on other sites of your choice.\n\n= Where are the snippets stored in my WordPress database? =\nSnippets are stored in the `wp_snippets` table in the WordPress database. The table name may differ depending on what your table prefix is set to.\n\n= Where can I go for help or suggest new features? =\nYou can get help with Code Snippets, report bugs or errors, and suggest new features and improvements either on the [WordPress Support Forums](https:\/\/wordpress.org\/support\/plugin\/code-snippets) or on [GitHub](https:\/\/github.com\/codesnippetspro\/code-snippets).\n\n= How can I help contribute to the development of the Code Snippets plugin? =\nThe best way to do this is to fork the [repository on GitHub](https:\/\/github.com\/codesnippetspro\/code-snippets) and send a pull request.\n\n= How can I report security bugs found in this plugin? =\nYou can report security bugs found in the source code of this plugin through the [Patchstack Vulnerability Disclosure Program](https:\/\/patchstack.com\/database\/vdp\/code-snippets). The Patchstack team will assist with verification, triage, and notification of security vulnerabilities.\n\n== Screenshots ==\n\n1. Managing existing snippets\n2. Adding a new snippet\n3. Editing a snippet\n4. Importing snippets from an export file\n\n== Changelog ==\n\n= 3.7.0 (2025-08-29) =\n\n__Added__\n\n* New 'conditions' feature: control where and when snippets execute with a powerful logic builder. (PRO)\n\n__Changed__\n\n* Redesigned edit menu with refreshed look and functionality.\n* Updated snippet type badges to be more visually distinct.\n* Redesigned tooltips used throughout the plugin.\n* Moved content snippet shortcode options into separate modal window.\n* Updated snippet tag editor to use built-in WordPress tag editor.\n* Created proper form for sharing beta feedback.\n* Improved UX of snippet activation toggle.\n\n__Fixed__\n\n* Fetching active snippets on a multisite network now respects the 'priority' field above all else when ordering snippets.\n* Cloud search appears correctly and allows downloading snippets in the free version of Code Snippets.\n* Improved performance of loading admin menu icon.\n\n= 3.6.9 (2025-02-17) =\n\n__Changed__\n\n* Updated `Cloud_API::get_bundles()` to properly check bundle data and return an empty array if no valid bundles are present.\n* Refactored `Cloud_List_Table::fetch_snippets()` to always return a valid `Cloud_Snippets` instance.\n* Cleaned up bundle iteration code and improved translation handling in the bundles view.\n\n__Fixed__\n\n* Fixed errors in bundle iteration by adding a check for the bundles array before iterating.\n\n= 3.6.8 (2025-02-14) =\n\n__Added__\n\n* `code_snippets\/hide_welcome_banner` filter hook for hiding welcome banner in dashboard.\n\n__Changed__\n\n* Updated Freemius SDK to the latest version. (PRO)\n\n__Removed__\n\n* Functionality allowing `[code_snippet]` shortcodes to be embedded recursively \u2013 it will be re-added in a future version.\n\n__Fixed__\n\n* Shortcodes embedded within `[code_snippet]` shortcodes not evaluating correctly.\n* Translation functions being called too early in some instances when loading plugin settings.\n* 'Generate' button not appearing on some sites. (PRO)\n* Incorrect arrow entity used in cloud list table (props to [brandonjp]).\n* Removed reference to missing plugins.css file in core plugin version.\n\n= 3.6.7 (2025-01-24) =\n\n__Added__\n\n* Generated snippet shortcode tags will include the snippet name, for easier identification.\n* Admin notices will dismiss automatically after five seconds. ([#208](https:\/\/github.com\/codesnippetspro\/code-snippets\/issues\/208))\n\n__Changed__\n\n* Updated CSS to use latest Sass features.\n* Moved theme selector to just above editor preview on settings page (thanks to brandonjp). ([#206](https:\/\/github.com\/codesnippetspro\/code-snippets\/issues\/206))\n* `[code_snippet]` shortcodes can now be nested within each other. ([#198](https:\/\/github.com\/codesnippetspro\/code-snippets\/issues\/198))\n\n__Fixed__\n\n* Save buttons above editor did not follow usual validation process in Pro. (PRO) ([#197](https:\/\/github.com\/codesnippetspro\/code-snippets\/issues\/197))\n* Minor inconsistencies in consistent UI elements between Core and Pro.\n* Tags input not allowing input. ([#211](https:\/\/github.com\/codesnippetspro\/code-snippets\/issues\/211))\n* Issue with Elementor source code widget. (PRO) ([#205](https:\/\/github.com\/codesnippetspro\/code-snippets\/issues\/205))\n* Snippet descriptions not visible when viewing cloud search results.\n* Snippet import page not displaying number of successfully imported snippets.\n* Use UTC time when deciding when to display campaign notices.\n\n= 3.6.6.1 (2024-11-27) =\n\n__Fixed__\n\n* Redeployment of v3.6.6 to overcome issue with initial build.\n* Type issue when caching cloud links. (PRO)\n\n= 3.6.6 (2024-11-27) =\n\n__Changed__\n\n* Improved compatability with modern versions of PHP.\n* Extended welcome API to include admin notices.\n\n__Fixed__\n\n* Memory issue from checking aggregate posts while loading front-end syntax highlighter.\n* Translation functions being called too early on upgrade, resulting in localisation loading errors.\n* Bug preventing the 'share on network' status of network snippets from correctly updating.\n* Incorrect logic controlling when to display 'Save Changes' or 'Save Changes and Activate' buttons.\n* Old notices persisting when switching between editing and creating snippets.\n\n= 3.6.5.1 (2024-05-24) =\n\n* Redeployment of v3.6.5 to overcome issue with initial build.\n\n= 3.6.5 (2024-05-24) =\n\n__Added__\n\n* New admin menu providing useful resources and updates on the Code Snippets plugin and community.\n\n= 3.6.4 (2024-03-15) =\n\n__Added__\n\n* AI generation for all snippet types: HTML, CSS, JS. (PRO)\n* Button to create a cloud connection directly from the Snippets menu when disconnected. (PRO)\n\n__Changed__\n\n* Increment the revision number of CSS and JS snippet when using the 'Reset Caches' debug action. (PRO)\n* UX in generate dialog, such as allowing 'Enter' to submit the form. (PRO)\n\n__Fixed__\n\n* Minor type compatability issue with newer versions of PHP.\n* Undefined array key issue when initiating cloud sync. (PRO)\n* Bug preventing downloading a single snippet from a bundle. (PRO)\n* Translations not loading for strings in JavaScript files.\n\n= 3.6.3 (2023-11-13) =\n\n__Added__\n\n* Added debug action for resetting snippets caches.\n\n__Fixed__\n\n* Import error when initialising cloud sync configuration. (PRO)\n\n= 3.6.2 (2023-11-11) =\n\n__Removed__\n\n* Removed automatic encoding of code content.\n\n__Fixed__\n\n* Error when attempting to save shared network snippets marked as active.\n* Type error when rendering checkbox fields without a stored or default value.\n* Label for snippet sharing input incorrectly linked to input field.\n* Error when attempting to download export files from Edit menu.\n* Issue loading Freemius string overrides too early. (PRO)\n* Fix redirect URL when connecting with OAuth on subdirectory or HTTPS sites. (PRO)\n* Import error when attempting to completely uninstall the plugin.\n\n= 3.6.1 (2023-11-07) =\n\n__Fixed__\n\n* Issue accessing fields on Snippets class.\n\n= 3.6.0 (2023-11-07) =\n\n__Added__\n\n* Ability to authenticate with Code Snippets Cloud using OAuth. (PRO)\n* Integration with GPT AI for generating snippets. (PRO)\n* Ability to generate line-by-line descriptions of snippet code with GPT AI. (PRO)\n* Ability to generate tags and description text from existing snippet code with GPT AI. (PRO)\n* Added debug settings menu for manually performing problem-solving actions.\n* Filter to disable scroll-into-view functionality for edit page notices.\n\n__Changed__\n\n* Updated minimum PHP requirement to 7.4.\n* Ensure that the URL of the edit snippet page changes when adding a new snippet.\n* Snippet tags will automatically be added when focus is lost on the tags field.\n\n__Fixed__\n\n* Moved active status border on edit name field to left-hand side.\n* New notices will not scroll if already at top of page.\n* Potential CSRF vulnerability allowing an authenticated user to reset settings.\n\n= 3.5.1 (2023-09-15) =\n\n__Fixed__\n\n* Undefined array key error when accessing plugin settings page. (PRO)\n* Issue registering API endpoints affecting edit post screen. (PRO)\n* Snippet ID instead of snippet object being passed to `code_snippets\/update_snippet` action hook.\n\n= 3.5.0 (2023-09-13) =\n\n__Added__\n\n* Support for the Code Snippets Cloud API.\n* Search and download public snippets.\n* Codevault back-up and synchronisation. (PRO)\n* Synchronised local snippets are automatically updated in Cloud. (PRO)\n* Bulk actions - 'update' and 'download'.\n* Download snippets from public and private codevaults. (PRO)\n* Search and download any publicly viewable snippet in Code Snippet Cloud by keyword or name of codevault. (PRO)\n* Deploy snippets to plugin from Code Snippets Cloud app. (PRO)\n* Bundles of Joy! Search and download Snippet Bundles in one go direct from Code Snippets Cloud. (PRO)\n\n__Changed__\n\n* Redirect to snippets table when deleting snippet from the edit menu.\n* Scroll new notices into view on edit menu.\n\n__Fixed__\n\n* Error when attempting to update network shared snippets after saving. [[#](https:\/\/wordpress.org\/support\/topic\/activating-snippets-breaks-on-wordpress-6-3\/)]\n\n**[The full changelog is available on GitHub](https:\/\/github.com\/codesnippetspro\/code-snippets\/blob\/core\/CHANGELOG.md)**\n"},{"base":"plugins","rel":"code-snippets\/vendor\/autoload.php","ext":"php","size":748,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ autoload.php @generated by Composer\n\nif (PHP_VERSION_ID < 50600) {\n    if (!headers_sent()) {\n        header('HTTP\/1.1 500 Internal Server Error');\n    }\n    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via \"composer self-update --2.2\". Aborting.'.PHP_EOL;\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, $err);\n        } elseif (!headers_sent()) {\n            echo $err;\n        }\n    }\n    throw new RuntimeException($err);\n}\n\nrequire_once __DIR__ . '\/composer\/autoload_real.php';\n\nreturn ComposerAutoloaderInit32c628976156f02e2f24b767297ff314::getLoader();\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installed.json","ext":"json","size":4946,"mtime":1756479860,"type":"text","content":"{\n    \"packages\": [\n        {\n            \"name\": \"composer\/installers\",\n            \"version\": \"v2.3.0\",\n            \"version_normalized\": \"2.3.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https:\/\/github.com\/composer\/installers.git\",\n                \"reference\": \"12fb2dfe5e16183de69e784a7b84046c43d97e8e\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https:\/\/api.github.com\/repos\/composer\/installers\/zipball\/12fb2dfe5e16183de69e784a7b84046c43d97e8e\",\n                \"reference\": \"12fb2dfe5e16183de69e784a7b84046c43d97e8e\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer-plugin-api\": \"^1.0 || ^2.0\",\n                \"php\": \"^7.2 || ^8.0\"\n            },\n            \"require-dev\": {\n                \"composer\/composer\": \"^1.10.27 || ^2.7\",\n                \"composer\/semver\": \"^1.7.2 || ^3.4.0\",\n                \"phpstan\/phpstan\": \"^1.11\",\n                \"phpstan\/phpstan-phpunit\": \"^1\",\n                \"symfony\/phpunit-bridge\": \"^7.1.1\",\n                \"symfony\/process\": \"^5 || ^6 || ^7\"\n            },\n            \"time\": \"2024-06-24T20:46:46+00:00\",\n            \"type\": \"composer-plugin\",\n            \"extra\": {\n                \"class\": \"Composer\\\\Installers\\\\Plugin\",\n                \"branch-alias\": {\n                    \"dev-main\": \"2.x-dev\"\n                },\n                \"plugin-modifies-install-path\": true\n            },\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Composer\\\\Installers\\\\\": \"src\/Composer\/Installers\"\n                }\n            },\n            \"notification-url\": \"https:\/\/packagist.org\/downloads\/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Kyle Robinson Young\",\n                    \"email\": \"kyle@dontkry.com\",\n                    \"homepage\": \"https:\/\/github.com\/shama\"\n                }\n            ],\n            \"description\": \"A multi-framework Composer library installer\",\n            \"homepage\": \"https:\/\/composer.github.io\/installers\/\",\n            \"keywords\": [\n                \"Dolibarr\",\n                \"Eliasis\",\n                \"Hurad\",\n                \"ImageCMS\",\n                \"Kanboard\",\n                \"Lan Management System\",\n                \"MODX Evo\",\n                \"MantisBT\",\n                \"Mautic\",\n                \"Maya\",\n                \"OXID\",\n                \"Plentymarkets\",\n                \"Porto\",\n                \"RadPHP\",\n                \"SMF\",\n                \"Starbug\",\n                \"Thelia\",\n                \"Whmcs\",\n                \"WolfCMS\",\n                \"agl\",\n                \"annotatecms\",\n                \"attogram\",\n                \"bitrix\",\n                \"cakephp\",\n                \"chef\",\n                \"cockpit\",\n                \"codeigniter\",\n                \"concrete5\",\n                \"concreteCMS\",\n                \"croogo\",\n                \"dokuwiki\",\n                \"drupal\",\n                \"eZ Platform\",\n                \"elgg\",\n                \"expressionengine\",\n                \"fuelphp\",\n                \"grav\",\n                \"installer\",\n                \"itop\",\n                \"known\",\n                \"kohana\",\n                \"laravel\",\n                \"lavalite\",\n                \"lithium\",\n                \"magento\",\n                \"majima\",\n                \"mako\",\n                \"matomo\",\n                \"mediawiki\",\n                \"miaoxing\",\n                \"modulework\",\n                \"modx\",\n                \"moodle\",\n                \"osclass\",\n                \"pantheon\",\n                \"phpbb\",\n                \"piwik\",\n                \"ppi\",\n                \"processwire\",\n                \"puppet\",\n                \"pxcms\",\n                \"reindex\",\n                \"roundcube\",\n                \"shopware\",\n                \"silverstripe\",\n                \"sydes\",\n                \"sylius\",\n                \"tastyigniter\",\n                \"wordpress\",\n                \"yawik\",\n                \"zend\",\n                \"zikula\"\n            ],\n            \"support\": {\n                \"issues\": \"https:\/\/github.com\/composer\/installers\/issues\",\n                \"source\": \"https:\/\/github.com\/composer\/installers\/tree\/v2.3.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https:\/\/packagist.com\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https:\/\/github.com\/composer\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https:\/\/tidelift.com\/funding\/github\/packagist\/composer\/composer\",\n                    \"type\": \"tidelift\"\n                }\n            ],\n            \"install-path\": \".\/installers\"\n        }\n    ],\n    \"dev\": false,\n    \"dev-package-names\": []\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/autoload_psr4.php","ext":"php","size":233,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Composer\\\\Installers\\\\' => array($vendorDir . '\/composer\/installers\/src\/Composer\/Installers'),\n);\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/InstalledVersions.php","ext":"php","size":17395,"mtime":1756479860,"type":"text","content":"<?php\n\n\/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n\/**\n * This class is copied in every Composer installed project and available to all\n *\n * See also https:\/\/getcomposer.org\/doc\/07-runtime.md#installed-versions\n *\n * To require its presence, you can require `composer-runtime-api ^2.0`\n *\n * @final\n *\/\nclass InstalledVersions\n{\n    \/**\n     * @var string|null if set (by reflection by Composer), this should be set to the path where this class is being copied to\n     * @internal\n     *\/\n    private static $selfDir = null;\n\n    \/**\n     * @var mixed[]|null\n     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null\n     *\/\n    private static $installed;\n\n    \/**\n     * @var bool\n     *\/\n    private static $installedIsLocalDir;\n\n    \/**\n     * @var bool|null\n     *\/\n    private static $canGetVendors;\n\n    \/**\n     * @var array[]\n     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    private static $installedByVendor = array();\n\n    \/**\n     * Returns a list of all package names which are present, either by being installed, replaced or provided\n     *\n     * @return string[]\n     * @psalm-return list<string>\n     *\/\n    public static function getInstalledPackages()\n    {\n        $packages = array();\n        foreach (self::getInstalled() as $installed) {\n            $packages[] = array_keys($installed['versions']);\n        }\n\n        if (1 === \\count($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    \/**\n     * Returns a list of all package names with a specific type e.g. 'library'\n     *\n     * @param  string   $type\n     * @return string[]\n     * @psalm-return list<string>\n     *\/\n    public static function getInstalledPackagesByType($type)\n    {\n        $packagesByType = array();\n\n        foreach (self::getInstalled() as $installed) {\n            foreach ($installed['versions'] as $name => $package) {\n                if (isset($package['type']) && $package['type'] === $type) {\n                    $packagesByType[] = $name;\n                }\n            }\n        }\n\n        return $packagesByType;\n    }\n\n    \/**\n     * Checks whether the given package is installed\n     *\n     * This also returns true if the package name is provided or replaced by another package\n     *\n     * @param  string $packageName\n     * @param  bool   $includeDevRequirements\n     * @return bool\n     *\/\n    public static function isInstalled($packageName, $includeDevRequirements = true)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (isset($installed['versions'][$packageName])) {\n                return $includeDevRequirements || !isset($installed['versions'][$packageName]['dev_requirement']) || $installed['versions'][$packageName]['dev_requirement'] === false;\n            }\n        }\n\n        return false;\n    }\n\n    \/**\n     * Checks whether the given package satisfies a version constraint\n     *\n     * e.g. If you want to know whether version 2.3+ of package foo\/bar is installed, you would call:\n     *\n     *   Composer\\InstalledVersions::satisfies(new VersionParser, 'foo\/bar', '^2.3')\n     *\n     * @param  VersionParser $parser      Install composer\/semver to have access to this class and functionality\n     * @param  string        $packageName\n     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer\/semver is required by your package\n     * @return bool\n     *\/\n    public static function satisfies(VersionParser $parser, $packageName, $constraint)\n    {\n        $constraint = $parser->parseConstraints((string) $constraint);\n        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\n        return $provided->matches($constraint);\n    }\n\n    \/**\n     * Returns a version constraint representing all the range(s) which are installed for a given package\n     *\n     * It is easier to use this via isInstalled() with the $constraint argument if you need to check\n     * whether a given version of a package is installed, and not just whether it exists\n     *\n     * @param  string $packageName\n     * @return string Version constraint usable with composer\/semver\n     *\/\n    public static function getVersionRanges($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            $ranges = array();\n            if (isset($installed['versions'][$packageName]['pretty_version'])) {\n                $ranges[] = $installed['versions'][$packageName]['pretty_version'];\n            }\n            if (array_key_exists('aliases', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n            }\n            if (array_key_exists('replaced', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n            }\n            if (array_key_exists('provided', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n            }\n\n            return implode(' || ', $ranges);\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     *\/\n    public static function getVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     *\/\n    public static function getPrettyVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['pretty_version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['pretty_version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference\n     *\/\n    public static function getReference($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['reference'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['reference'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.\n     *\/\n    public static function getInstallPath($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @return array\n     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}\n     *\/\n    public static function getRootPackage()\n    {\n        $installed = self::getInstalled();\n\n        return $installed[0]['root'];\n    }\n\n    \/**\n     * Returns the raw installed.php data for custom implementations\n     *\n     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.\n     * @return array[]\n     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}\n     *\/\n    public static function getRawData()\n    {\n        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);\n\n        if (null === self::$installed) {\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '\/installed.php';\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        return self::$installed;\n    }\n\n    \/**\n     * Returns the raw data of all installed.php which are currently loaded for custom implementations\n     *\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    public static function getAllRawData()\n    {\n        return self::getInstalled();\n    }\n\n    \/**\n     * Lets you reload the static array from another file\n     *\n     * This is only useful for complex integrations in which a project needs to use\n     * this class but then also needs to execute another project's autoloader in process,\n     * and wants to ensure both projects have access to their version of installed.php.\n     *\n     * A typical case would be PHPUnit, where it would need to make sure it reads all\n     * the data it needs from this class, then call reload() with\n     * `require $CWD\/vendor\/composer\/installed.php` (or similar) as input to make sure\n     * the project in which it runs can then also use this class safely, without\n     * interference between PHPUnit's dependencies and the project's dependencies.\n     *\n     * @param  array[] $data A vendor\/composer\/installed.php data set\n     * @return void\n     *\n     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data\n     *\/\n    public static function reload($data)\n    {\n        self::$installed = $data;\n        self::$installedByVendor = array();\n\n        \/\/ when using reload, we disable the duplicate protection to ensure that self::$installed data is\n        \/\/ always returned, but we cannot know whether it comes from the installed.php in __DIR__ or not,\n        \/\/ so we have to assume it does not, and that may result in duplicate data being returned when listing\n        \/\/ all installed packages for example\n        self::$installedIsLocalDir = false;\n    }\n\n    \/**\n     * @return string\n     *\/\n    private static function getSelfDir()\n    {\n        if (self::$selfDir === null) {\n            self::$selfDir = strtr(__DIR__, '\\\\', '\/');\n        }\n\n        return self::$selfDir;\n    }\n\n    \/**\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    private static function getInstalled()\n    {\n        if (null === self::$canGetVendors) {\n            self::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n        }\n\n        $installed = array();\n        $copiedLocalDir = false;\n\n        if (self::$canGetVendors) {\n            $selfDir = self::getSelfDir();\n            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\n                $vendorDir = strtr($vendorDir, '\\\\', '\/');\n                if (isset(self::$installedByVendor[$vendorDir])) {\n                    $installed[] = self::$installedByVendor[$vendorDir];\n                } elseif (is_file($vendorDir.'\/composer\/installed.php')) {\n                    \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\n                    $required = require $vendorDir.'\/composer\/installed.php';\n                    self::$installedByVendor[$vendorDir] = $required;\n                    $installed[] = $required;\n                    if (self::$installed === null && $vendorDir.'\/composer' === $selfDir) {\n                        self::$installed = $required;\n                        self::$installedIsLocalDir = true;\n                    }\n                }\n                if (self::$installedIsLocalDir && $vendorDir.'\/composer' === $selfDir) {\n                    $copiedLocalDir = true;\n                }\n            }\n        }\n\n        if (null === self::$installed) {\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\n                $required = require __DIR__ . '\/installed.php';\n                self::$installed = $required;\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        if (self::$installed !== array() && !$copiedLocalDir) {\n            $installed[] = self::$installed;\n        }\n\n        return $installed;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/bootstrap.php","ext":"php","size":544,"mtime":1756479860,"type":"text","content":"<?php\n\nuse Composer\\Autoload\\ClassLoader;\n\nfunction includeIfExists(string $file): ?ClassLoader\n{\n    if (file_exists($file)) {\n        return include $file;\n    }\n\n    return null;\n}\nif ((!$loader = includeIfExists(__DIR__ . '\/..\/vendor\/autoload.php')) && (!$loader = includeIfExists(__DIR__ . '\/..\/..\/..\/autoload.php'))) {\n    die('You must set up the project dependencies, run the following commands:'.PHP_EOL.\n        'curl -s http:\/\/getcomposer.org\/installer | php'.PHP_EOL.\n        'php composer.phar install'.PHP_EOL);\n}\nreturn $loader;\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/VgmcpInstaller.php","ext":"php","size":1607,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass VgmcpInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'bundle' => 'src\/{$vendor}\/{$name}\/',\n        'theme' => 'themes\/{$name}\/'\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type vgmcp-bundle, cut off a trailing '-bundle' if present.\n     *\n     * For package type vgmcp-theme, cut off a trailing '-theme' if present.\n     *\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'vgmcp-bundle') {\n            return $this->inflectPluginVars($vars);\n        }\n\n        if ($vars['type'] === 'vgmcp-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectPluginVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-bundle$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-theme$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/TheliaInstaller.php","ext":"php","size":427,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass TheliaInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'                => 'local\/modules\/{$name}\/',\n        'frontoffice-template'  => 'templates\/frontOffice\/{$name}\/',\n        'backoffice-template'   => 'templates\/backOffice\/{$name}\/',\n        'email-template'        => 'templates\/email\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/DframeInstaller.php","ext":"php","size":217,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass DframeInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'  => 'modules\/{$vendor}\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/OsclassInstaller.php","ext":"php","size":327,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass OsclassInstaller extends BaseInstaller\n{\n    \n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'oc-content\/plugins\/{$name}\/',\n        'theme' => 'oc-content\/themes\/{$name}\/',\n        'language' => 'oc-content\/languages\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MODXEvoInstaller.php","ext":"php","size":520,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * An installer to handle MODX Evolution specifics when installing packages.\n *\/\nclass MODXEvoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'snippet'       => 'assets\/snippets\/{$name}\/',\n        'plugin'        => 'assets\/plugins\/{$name}\/',\n        'module'        => 'assets\/modules\/{$name}\/',\n        'template'      => 'assets\/templates\/{$name}\/',\n        'lib'           => 'assets\/lib\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PantheonInstaller.php","ext":"php","size":294,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PantheonInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'script' => 'web\/private\/scripts\/quicksilver\/{$name}',\n        'module' => 'web\/private\/scripts\/quicksilver\/{$name}',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ConcreteCMSInstaller.php","ext":"php","size":407,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ConcreteCMSInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'core'       => 'concrete\/',\n        'block'      => 'application\/blocks\/{$name}\/',\n        'package'    => 'packages\/{$name}\/',\n        'theme'      => 'application\/themes\/{$name}\/',\n        'update'     => 'updates\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PiwikInstaller.php","ext":"php","size":667,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * Class PiwikInstaller\n *\n * @package Composer\\Installers\n *\/\nclass PiwikInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/EzPlatformInstaller.php","ext":"php","size":275,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass EzPlatformInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'meta-assets' => 'web\/assets\/ezplatform\/',\n        'assets' => 'web\/assets\/ezplatform\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/SyDESInstaller.php","ext":"php","size":1456,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass SyDESInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'app\/modules\/{$name}\/',\n        'theme'  => 'themes\/{$name}\/',\n    );\n\n    \/**\n     * Format module name.\n     *\n     * Strip `sydes-` prefix and a trailing '-theme' or '-module' from package name if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] == 'sydes-module') {\n            return $this->inflectModuleVars($vars);\n        }\n\n        if ($vars['type'] === 'sydes-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    public function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/(^sydes-|-module$)\/i', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/(^sydes-|-theme$)\/', '', $vars['name']);\n        $vars['name'] = strtolower($vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PPIInstaller.php","ext":"php","size":203,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PPIInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/CiviCrmInstaller.php","ext":"php","size":202,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass CiviCrmInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'ext'    => 'ext\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ChefInstaller.php","ext":"php","size":260,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ChefInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'cookbook'  => 'Chef\/{$vendor}\/{$name}\/',\n        'role'      => 'Chef\/roles\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ZikulaInstaller.php","ext":"php","size":264,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ZikulaInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$vendor}-{$name}\/',\n        'theme'  => 'themes\/{$vendor}-{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/AnnotateCmsInstaller.php","ext":"php","size":325,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass AnnotateCmsInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'    => 'addons\/modules\/{$name}\/',\n        'component' => 'addons\/components\/{$name}\/',\n        'service'   => 'addons\/services\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/KodiCMSInstaller.php","ext":"php","size":259,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass KodiCMSInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'cms\/plugins\/{$name}\/',\n        'media'  => 'cms\/media\/vendor\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/CakePHPInstaller.php","ext":"php","size":1953,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\DependencyResolver\\Pool;\nuse Composer\\Semver\\Constraint\\Constraint;\n\nclass CakePHPInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'Plugin\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($this->matchesCakeVersion('>=', '3.0.0')) {\n            return $vars;\n        }\n\n        $nameParts = explode('\/', $vars['name']);\n        foreach ($nameParts as &$value) {\n            $value = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $value));\n            $value = str_replace(array('-', '_'), ' ', $value);\n            $value = str_replace(' ', '', ucwords($value));\n        }\n        $vars['name'] = implode('\/', $nameParts);\n\n        return $vars;\n    }\n\n    \/**\n     * Change the default plugin location when cakephp >= 3.0\n     *\/\n    public function getLocations(string $frameworkType): array\n    {\n        if ($this->matchesCakeVersion('>=', '3.0.0')) {\n            $this->locations['plugin'] =  $this->composer->getConfig()->get('vendor-dir') . '\/{$vendor}\/{$name}\/';\n        }\n        return $this->locations;\n    }\n\n    \/**\n     * Check if CakePHP version matches against a version\n     *\n     * @phpstan-param '='|'=='|'<'|'<='|'>'|'>='|'<>'|'!=' $matcher\n     *\/\n    protected function matchesCakeVersion(string $matcher, string $version): bool\n    {\n        $repositoryManager = $this->composer->getRepositoryManager();\n        \/** @phpstan-ignore-next-line *\/\n        if (!$repositoryManager) {\n            return false;\n        }\n\n        $repos = $repositoryManager->getLocalRepository();\n        \/** @phpstan-ignore-next-line *\/\n        if (!$repos) {\n            return false;\n        }\n\n        return $repos->findPackage('cakephp\/cakephp', new Constraint($matcher, $version)) !== null;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/LavaLiteInstaller.php","ext":"php","size":267,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass LavaLiteInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'package' => 'packages\/{$vendor}\/{$name}\/',\n        'theme'   => 'public\/themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/OctoberInstaller.php","ext":"php","size":1564,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass OctoberInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'    => 'modules\/{$name}\/',\n        'plugin'    => 'plugins\/{$vendor}\/{$name}\/',\n        'theme'     => 'themes\/{$vendor}-{$name}\/'\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type october-plugin, cut off a trailing '-plugin' if present.\n     *\n     * For package type october-theme, cut off a trailing '-theme' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'october-plugin') {\n            return $this->inflectPluginVars($vars);\n        }\n\n        if ($vars['type'] === 'october-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectPluginVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^oc-|-plugin$\/', '', $vars['name']);\n        $vars['vendor'] = $this->pregReplace('\/[^a-z0-9_]\/i', '', $vars['vendor']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^oc-|-theme$\/', '', $vars['name']);\n        $vars['vendor'] = $this->pregReplace('\/[^a-z0-9_]\/i', '', $vars['vendor']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/BaseInstaller.php","ext":"php","size":4175,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\IO\\IOInterface;\nuse Composer\\Composer;\nuse Composer\\Package\\PackageInterface;\n\nabstract class BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array();\n    \/** @var Composer *\/\n    protected $composer;\n    \/** @var PackageInterface *\/\n    protected $package;\n    \/** @var IOInterface *\/\n    protected $io;\n\n    \/**\n     * Initializes base installer.\n     *\/\n    public function __construct(PackageInterface $package, Composer $composer, IOInterface $io)\n    {\n        $this->composer = $composer;\n        $this->package = $package;\n        $this->io = $io;\n    }\n\n    \/**\n     * Return the install path based on package type.\n     *\/\n    public function getInstallPath(PackageInterface $package, string $frameworkType = ''): string\n    {\n        $type = $this->package->getType();\n\n        $prettyName = $this->package->getPrettyName();\n        if (strpos($prettyName, '\/') !== false) {\n            list($vendor, $name) = explode('\/', $prettyName);\n        } else {\n            $vendor = '';\n            $name = $prettyName;\n        }\n\n        $availableVars = $this->inflectPackageVars(compact('name', 'vendor', 'type'));\n\n        $extra = $package->getExtra();\n        if (!empty($extra['installer-name'])) {\n            $availableVars['name'] = $extra['installer-name'];\n        }\n\n        $extra = $this->composer->getPackage()->getExtra();\n        if (!empty($extra['installer-paths'])) {\n            $customPath = $this->mapCustomInstallPaths($extra['installer-paths'], $prettyName, $type, $vendor);\n            if ($customPath !== false) {\n                return $this->templatePath($customPath, $availableVars);\n            }\n        }\n\n        $packageType = substr($type, strlen($frameworkType) + 1);\n        $locations = $this->getLocations($frameworkType);\n        if (!isset($locations[$packageType])) {\n            throw new \\InvalidArgumentException(sprintf('Package type \"%s\" is not supported', $type));\n        }\n\n        return $this->templatePath($locations[$packageType], $availableVars);\n    }\n\n    \/**\n     * For an installer to override to modify the vars per installer.\n     *\n     * @param  array<string, string> $vars This will normally receive array{name: string, vendor: string, type: string}\n     * @return array<string, string>\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        return $vars;\n    }\n\n    \/**\n     * Gets the installer's locations\n     *\n     * @return array<string, string> map of package types => install path\n     *\/\n    public function getLocations(string $frameworkType)\n    {\n        return $this->locations;\n    }\n\n    \/**\n     * Replace vars in a path\n     *\n     * @param  array<string, string> $vars\n     *\/\n    protected function templatePath(string $path, array $vars = array()): string\n    {\n        if (strpos($path, '{') !== false) {\n            extract($vars);\n            preg_match_all('@\\{\\$([A-Za-z0-9_]*)\\}@i', $path, $matches);\n            if (!empty($matches[1])) {\n                foreach ($matches[1] as $var) {\n                    $path = str_replace('{$' . $var . '}', $$var, $path);\n                }\n            }\n        }\n\n        return $path;\n    }\n\n    \/**\n     * Search through a passed paths array for a custom install path.\n     *\n     * @param  array<string, string[]|string> $paths\n     * @return string|false\n     *\/\n    protected function mapCustomInstallPaths(array $paths, string $name, string $type, ?string $vendor = null)\n    {\n        foreach ($paths as $path => $names) {\n            $names = (array) $names;\n            if (in_array($name, $names) || in_array('type:' . $type, $names) || in_array('vendor:' . $vendor, $names)) {\n                return $path;\n            }\n        }\n\n        return false;\n    }\n\n    protected function pregReplace(string $pattern, string $replacement, string $subject): string\n    {\n        $result = preg_replace($pattern, $replacement, $subject);\n        if (null === $result) {\n            throw new \\RuntimeException('Failed to run preg_replace with '.$pattern.': '.preg_last_error());\n        }\n\n        return $result;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ModxInstaller.php","ext":"php","size":283,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * An installer to handle MODX specifics when installing packages.\n *\/\nclass ModxInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'extra' => 'core\/packages\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/KnownInstaller.php","ext":"php","size":304,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass KnownInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'    => 'IdnoPlugins\/{$name}\/',\n        'theme'     => 'Themes\/{$name}\/',\n        'console'   => 'ConsolePlugins\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/RoundcubeInstaller.php","ext":"php","size":454,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass RoundcubeInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n    );\n\n    \/**\n     * Lowercase name and changes the name to a underscores\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower(str_replace('-', '_', $vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PlentymarketsInstaller.php","ext":"php","size":678,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PlentymarketsInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'   => '{$name}\/'\n    );\n\n    \/**\n     * Remove hyphen, \"plugin\" and format to camelcase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $nameBits = explode(\"-\", $vars['name']);\n        foreach ($nameBits as $key => $name) {\n            $nameBits[$key] = ucfirst($name);\n            if (strcasecmp($name, \"Plugin\") == 0) {\n                unset($nameBits[$key]);\n            }\n        }\n        $vars['name'] = implode('', $nameBits);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/VanillaInstaller.php","ext":"php","size":252,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass VanillaInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'    => 'plugins\/{$name}\/',\n        'theme'     => 'themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/DokuWikiInstaller.php","ext":"php","size":1541,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass DokuWikiInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'lib\/plugins\/{$name}\/',\n        'template' => 'lib\/tpl\/{$name}\/',\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type dokuwiki-plugin, cut off a trailing '-plugin',\n     * or leading dokuwiki_ if present.\n     *\n     * For package type dokuwiki-template, cut off a trailing '-template' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'dokuwiki-plugin') {\n            return $this->inflectPluginVars($vars);\n        }\n\n        if ($vars['type'] === 'dokuwiki-template') {\n            return $this->inflectTemplateVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectPluginVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-plugin$\/', '', $vars['name']);\n        $vars['name'] = $this->pregReplace('\/^dokuwiki_?-?\/', '', $vars['name']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectTemplateVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-template$\/', '', $vars['name']);\n        $vars['name'] = $this->pregReplace('\/^dokuwiki_?-?\/', '', $vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/CroogoInstaller.php","ext":"php","size":555,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass CroogoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'Plugin\/{$name}\/',\n        'theme' => 'View\/Themed\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower(str_replace(array('-', '_'), ' ', $vars['name']));\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/UserFrostingInstaller.php","ext":"php","size":220,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass UserFrostingInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'sprinkle' => 'app\/sprinkles\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/HuradInstaller.php","ext":"php","size":760,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass HuradInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n        'theme' => 'plugins\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $nameParts = explode('\/', $vars['name']);\n        foreach ($nameParts as &$value) {\n            $value = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $value));\n            $value = str_replace(array('-', '_'), ' ', $value);\n            $value = str_replace(' ', '', ucwords($value));\n        }\n        $vars['name'] = implode('\/', $nameParts);\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/TaoInstaller.php","ext":"php","size":839,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * An installer to handle TAO extensions.\n *\/\nclass TaoInstaller extends BaseInstaller\n{\n    const EXTRA_TAO_EXTENSION_NAME = 'tao-extension-name';\n\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'extension' => '{$name}'\n    );\n    \n    public function inflectPackageVars(array $vars): array\n    {\n        $extra = $this->package->getExtra();\n\n        if (array_key_exists(self::EXTRA_TAO_EXTENSION_NAME, $extra)) {\n            $vars['name'] = $extra[self::EXTRA_TAO_EXTENSION_NAME];\n            return $vars;\n        }\n\n        $vars['name'] = str_replace('extension-', '', $vars['name']);\n        $vars['name'] = str_replace('-', ' ', $vars['name']);\n        $vars['name'] = lcfirst(str_replace(' ', '', ucwords($vars['name'])));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/KanboardInstaller.php","ext":"php","size":335,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n *\n * Installer for kanboard plugins\n *\n * kanboard.net\n *\n * Class KanboardInstaller\n * @package Composer\\Installers\n *\/\nclass KanboardInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'  => 'plugins\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MatomoInstaller.php","ext":"php","size":669,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * Class MatomoInstaller\n *\n * @package Composer\\Installers\n *\/\nclass MatomoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/LanManagementSystemInstaller.php","ext":"php","size":782,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass LanManagementSystemInstaller extends BaseInstaller\n{\n\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n        'template' => 'templates\/{$name}\/',\n        'document-template' => 'documents\/templates\/{$name}\/',\n        'userpanel-module' => 'userpanel\/modules\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ItopInstaller.php","ext":"php","size":213,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ItopInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'extension'    => 'extensions\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ImageCMSInstaller.php","ext":"php","size":331,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ImageCMSInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'template'    => 'templates\/{$name}\/',\n        'module'      => 'application\/modules\/{$name}\/',\n        'library'     => 'application\/libraries\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/Plugin.php","ext":"php","size":696,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Composer;\nuse Composer\\IO\\IOInterface;\nuse Composer\\Plugin\\PluginInterface;\n\nclass Plugin implements PluginInterface\n{\n    \/** @var Installer *\/\n    private $installer;\n\n    public function activate(Composer $composer, IOInterface $io): void\n    {\n        $this->installer = new Installer($io, $composer);\n        $composer->getInstallationManager()->addInstaller($this->installer);\n    }\n\n    public function deactivate(Composer $composer, IOInterface $io): void\n    {\n        $composer->getInstallationManager()->removeInstaller($this->installer);\n    }\n\n    public function uninstall(Composer $composer, IOInterface $io): void\n    {\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/RedaxoInstaller.php","ext":"php","size":306,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass RedaxoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'addon'          => 'redaxo\/include\/addons\/{$name}\/',\n        'bestyle-plugin' => 'redaxo\/include\/addons\/be_style\/plugins\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MayaInstaller.php","ext":"php","size":950,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MayaInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type maya-module, cut off a trailing '-module' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'maya-module') {\n            return $this->inflectModuleVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-module$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/LithiumInstaller.php","ext":"php","size":261,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass LithiumInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'library' => 'libraries\/{$name}\/',\n        'source'  => 'libraries\/_source\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PxcmsInstaller.php","ext":"php","size":2156,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PxcmsInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'app\/Modules\/{$name}\/',\n        'theme' => 'themes\/{$name}\/',\n    );\n\n    \/**\n     * Format package name.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'pxcms-module') {\n            return $this->inflectModuleVars($vars);\n        }\n\n        if ($vars['type'] === 'pxcms-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * For package type pxcms-module, cut off a trailing '-plugin' if present.\n     *\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = str_replace('pxcms-', '', $vars['name']);       \/\/ strip out pxcms- just incase (legacy)\n        $vars['name'] = str_replace('module-', '', $vars['name']);      \/\/ strip out module-\n        $vars['name'] = $this->pregReplace('\/-module$\/', '', $vars['name']);  \/\/ strip out -module\n        $vars['name'] = str_replace('-', '_', $vars['name']);           \/\/ make -'s be _'s\n        $vars['name'] = ucwords($vars['name']);                         \/\/ make module name camelcased\n\n        return $vars;\n    }\n\n    \/**\n     * For package type pxcms-module, cut off a trailing '-plugin' if present.\n     *\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = str_replace('pxcms-', '', $vars['name']);       \/\/ strip out pxcms- just incase (legacy)\n        $vars['name'] = str_replace('theme-', '', $vars['name']);       \/\/ strip out theme-\n        $vars['name'] = $this->pregReplace('\/-theme$\/', '', $vars['name']);   \/\/ strip out -theme\n        $vars['name'] = str_replace('-', '_', $vars['name']);           \/\/ make -'s be _'s\n        $vars['name'] = ucwords($vars['name']);                         \/\/ make module name camelcased\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MediaWikiInstaller.php","ext":"php","size":1569,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MediaWikiInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'core' => 'core\/',\n        'extension' => 'extensions\/{$name}\/',\n        'skin' => 'skins\/{$name}\/',\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type mediawiki-extension, cut off a trailing '-extension' if present and transform\n     * to CamelCase keeping existing uppercase chars.\n     *\n     * For package type mediawiki-skin, cut off a trailing '-skin' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'mediawiki-extension') {\n            return $this->inflectExtensionVars($vars);\n        }\n\n        if ($vars['type'] === 'mediawiki-skin') {\n            return $this->inflectSkinVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectExtensionVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-extension$\/', '', $vars['name']);\n        $vars['name'] = str_replace('-', ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectSkinVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-skin$\/', '', $vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/AttogramInstaller.php","ext":"php","size":208,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass AttogramInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/CodeIgniterInstaller.php","ext":"php","size":348,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass CodeIgniterInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'library'     => 'application\/libraries\/{$name}\/',\n        'third-party' => 'application\/third_party\/{$name}\/',\n        'module'      => 'application\/modules\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/BitrixInstaller.php","ext":"php","size":4324,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Util\\Filesystem;\n\n\/**\n * Installer for Bitrix Framework. Supported types of extensions:\n * - `bitrix-d7-module` \u2014 copy the module to directory `bitrix\/modules\/<vendor>.<name>`.\n * - `bitrix-d7-component` \u2014 copy the component to directory `bitrix\/components\/<vendor>\/<name>`.\n * - `bitrix-d7-template` \u2014 copy the template to directory `bitrix\/templates\/<vendor>_<name>`.\n *\n * You can set custom path to directory with Bitrix kernel in `composer.json`:\n *\n * ```json\n * {\n *      \"extra\": {\n *          \"bitrix-dir\": \"s1\/bitrix\"\n *      }\n * }\n * ```\n *\n * @author Nik Samokhvalov <nik@samokhvalov.info>\n * @author Denis Kulichkin <onexhovia@gmail.com>\n *\/\nclass BitrixInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'    => '{$bitrix_dir}\/modules\/{$name}\/',    \/\/ deprecated, remove on the major release (Backward compatibility will be broken)\n        'component' => '{$bitrix_dir}\/components\/{$name}\/', \/\/ deprecated, remove on the major release (Backward compatibility will be broken)\n        'theme'     => '{$bitrix_dir}\/templates\/{$name}\/',  \/\/ deprecated, remove on the major release (Backward compatibility will be broken)\n        'd7-module'    => '{$bitrix_dir}\/modules\/{$vendor}.{$name}\/',\n        'd7-component' => '{$bitrix_dir}\/components\/{$vendor}\/{$name}\/',\n        'd7-template'     => '{$bitrix_dir}\/templates\/{$vendor}_{$name}\/',\n    );\n\n    \/**\n     * @var string[] Storage for informations about duplicates at all the time of installation packages.\n     *\/\n    private static $checkedDuplicates = array();\n\n    public function inflectPackageVars(array $vars): array\n    {\n        \/** @phpstan-ignore-next-line *\/\n        if ($this->composer->getPackage()) {\n            $extra = $this->composer->getPackage()->getExtra();\n\n            if (isset($extra['bitrix-dir'])) {\n                $vars['bitrix_dir'] = $extra['bitrix-dir'];\n            }\n        }\n\n        if (!isset($vars['bitrix_dir'])) {\n            $vars['bitrix_dir'] = 'bitrix';\n        }\n\n        return parent::inflectPackageVars($vars);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    protected function templatePath(string $path, array $vars = array()): string\n    {\n        $templatePath = parent::templatePath($path, $vars);\n        $this->checkDuplicates($templatePath, $vars);\n\n        return $templatePath;\n    }\n\n    \/**\n     * Duplicates search packages.\n     *\n     * @param array<string, string> $vars\n     *\/\n    protected function checkDuplicates(string $path, array $vars = array()): void\n    {\n        $packageType = substr($vars['type'], strlen('bitrix') + 1);\n        $localDir = explode('\/', $vars['bitrix_dir']);\n        array_pop($localDir);\n        $localDir[] = 'local';\n        $localDir = implode('\/', $localDir);\n\n        $oldPath = str_replace(\n            array('{$bitrix_dir}', '{$name}'),\n            array($localDir, $vars['name']),\n            $this->locations[$packageType]\n        );\n\n        if (in_array($oldPath, static::$checkedDuplicates)) {\n            return;\n        }\n\n        if ($oldPath !== $path && file_exists($oldPath) && $this->io->isInteractive()) {\n            $this->io->writeError('    <error>Duplication of packages:<\/error>');\n            $this->io->writeError('    <info>Package ' . $oldPath . ' will be called instead package ' . $path . '<\/info>');\n\n            while (true) {\n                switch ($this->io->ask('    <info>Delete ' . $oldPath . ' [y,n,?]?<\/info> ', '?')) {\n                    case 'y':\n                        $fs = new Filesystem();\n                        $fs->removeDirectory($oldPath);\n                        break 2;\n\n                    case 'n':\n                        break 2;\n\n                    case '?':\n                    default:\n                        $this->io->writeError(array(\n                            '    y - delete package ' . $oldPath . ' and to continue with the installation',\n                            '    n - don\\'t delete and to continue with the installation',\n                        ));\n                        $this->io->writeError('    ? - print help');\n                        break;\n                }\n            }\n        }\n\n        static::$checkedDuplicates[] = $oldPath;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PortoInstaller.php","ext":"php","size":215,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PortoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'container' => 'app\/Containers\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ExpressionEngineInstaller.php","ext":"php","size":797,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Package\\PackageInterface;\n\nclass ExpressionEngineInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    private $ee2Locations = array(\n        'addon'   => 'system\/expressionengine\/third_party\/{$name}\/',\n        'theme'   => 'themes\/third_party\/{$name}\/',\n    );\n\n    \/** @var array<string, string> *\/\n    private $ee3Locations = array(\n        'addon'   => 'system\/user\/addons\/{$name}\/',\n        'theme'   => 'themes\/user\/{$name}\/',\n    );\n\n    public function getLocations(string $frameworkType): array\n    {\n        if ($frameworkType === 'ee2') {\n            $this->locations = $this->ee2Locations;\n        } else {\n            $this->locations = $this->ee3Locations;\n        }\n\n        return $this->locations;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MiaoxingInstaller.php","ext":"php","size":208,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MiaoxingInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/TastyIgniterInstaller.php","ext":"php","size":2413,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass TastyIgniterInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = [\n        'module' => 'app\/{$name}\/',\n        'extension' => 'extensions\/{$vendor}\/{$name}\/',\n        'theme' => 'themes\/{$name}\/',\n    ];\n\n    \/**\n     * Format package name.\n     *\n     * Cut off leading 'ti-ext-' or 'ti-theme-' if present.\n     * Strip vendor name of characters that is not alphanumeric or an underscore\n     *\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $extra = $this->package->getExtra();\n\n        if ($vars['type'] === 'tastyigniter-module') {\n            return $this->inflectModuleVars($vars);\n        }\n\n        if ($vars['type'] === 'tastyigniter-extension') {\n            return $this->inflectExtensionVars($vars, $extra);\n        }\n\n        if ($vars['type'] === 'tastyigniter-theme') {\n            return $this->inflectThemeVars($vars, $extra);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^ti-module-\/', '', $vars['name']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @param array<string, mixed> $extra\n     * @return array<string, string>\n     *\/\n    protected function inflectExtensionVars(array $vars, array $extra): array\n    {\n        if (!empty($extra['tastyigniter-extension']['code'])) {\n            $parts = explode('.', $extra['tastyigniter-extension']['code']);\n            $vars['vendor'] = (string)$parts[0];\n            $vars['name'] = (string)($parts[1] ?? '');\n        }\n\n        $vars['vendor'] = $this->pregReplace('\/[^a-z0-9_]\/i', '', $vars['vendor']);\n        $vars['name'] = $this->pregReplace('\/^ti-ext-\/', '', $vars['name']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @param array<string, mixed> $extra\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars, array $extra): array\n    {\n        if (!empty($extra['tastyigniter-theme']['code'])) {\n            $vars['name'] = $extra['tastyigniter-theme']['code'];\n        }\n\n        $vars['name'] = $this->pregReplace('\/^ti-theme-\/', '', $vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/SMFInstaller.php","ext":"php","size":241,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass SMFInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'Sources\/{$name}\/',\n        'theme' => 'Themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/OxidInstaller.php","ext":"php","size":1462,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Package\\PackageInterface;\n\nclass OxidInstaller extends BaseInstaller\n{\n    const VENDOR_PATTERN = '\/^modules\\\/(?P<vendor>.+)\\\/.+\/';\n\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'    => 'modules\/{$name}\/',\n        'theme'  => 'application\/views\/{$name}\/',\n        'out'    => 'out\/{$name}\/',\n    );\n\n    public function getInstallPath(PackageInterface $package, string $frameworkType = ''): string\n    {\n        $installPath = parent::getInstallPath($package, $frameworkType);\n        $type = $this->package->getType();\n        if ($type === 'oxid-module') {\n            $this->prepareVendorDirectory($installPath);\n        }\n        return $installPath;\n    }\n\n    \/**\n     * Makes sure there is a vendormetadata.php file inside\n     * the vendor folder if there is a vendor folder.\n     *\/\n    protected function prepareVendorDirectory(string $installPath): void\n    {\n        $matches = '';\n        $hasVendorDirectory = preg_match(self::VENDOR_PATTERN, $installPath, $matches);\n        if (!$hasVendorDirectory) {\n            return;\n        }\n\n        $vendorDirectory = $matches['vendor'];\n        $vendorPath = getcwd() . '\/modules\/' . $vendorDirectory;\n        if (!file_exists($vendorPath)) {\n            mkdir($vendorPath, 0755, true);\n        }\n\n        $vendorMetaDataPath = $vendorPath . '\/vendormetadata.php';\n        touch($vendorMetaDataPath);\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/OntoWikiInstaller.php","ext":"php","size":794,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass OntoWikiInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'extension' => 'extensions\/{$name}\/',\n        'theme' => 'extensions\/themes\/{$name}\/',\n        'translation' => 'extensions\/translations\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to lower case and remove \".ontowiki\" suffix\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($vars['name']);\n        $vars['name'] = $this->pregReplace('\/.ontowiki$\/', '', $vars['name']);\n        $vars['name'] = $this->pregReplace('\/-theme$\/', '', $vars['name']);\n        $vars['name'] = $this->pregReplace('\/-translation$\/', '', $vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/WHMCSInstaller.php","ext":"php","size":876,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass WHMCSInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'addons' => 'modules\/addons\/{$vendor}_{$name}\/',\n        'fraud' => 'modules\/fraud\/{$vendor}_{$name}\/',\n        'gateways' => 'modules\/gateways\/{$vendor}_{$name}\/',\n        'notifications' => 'modules\/notifications\/{$vendor}_{$name}\/',\n        'registrars' => 'modules\/registrars\/{$vendor}_{$name}\/',\n        'reports' => 'modules\/reports\/{$vendor}_{$name}\/',\n        'security' => 'modules\/security\/{$vendor}_{$name}\/',\n        'servers' => 'modules\/servers\/{$vendor}_{$name}\/',\n        'social' => 'modules\/social\/{$vendor}_{$name}\/',\n        'support' => 'modules\/support\/{$vendor}_{$name}\/',\n        'templates' => 'templates\/{$vendor}_{$name}\/',\n        'includes' => 'includes\/{$vendor}_{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/Concrete5Installer.php","ext":"php","size":405,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass Concrete5Installer extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'core'       => 'concrete\/',\n        'block'      => 'application\/blocks\/{$name}\/',\n        'package'    => 'packages\/{$name}\/',\n        'theme'      => 'application\/themes\/{$name}\/',\n        'update'     => 'updates\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ZendInstaller.php","ext":"php","size":293,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ZendInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'library' => 'library\/{$name}\/',\n        'extra'   => 'extras\/library\/{$name}\/',\n        'module'  => 'module\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PrestashopInstaller.php","ext":"php","size":249,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PrestashopInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n        'theme'  => 'themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/DrupalInstaller.php","ext":"php","size":955,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass DrupalInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'core'             => 'core\/',\n        'module'           => 'modules\/{$name}\/',\n        'theme'            => 'themes\/{$name}\/',\n        'library'          => 'libraries\/{$name}\/',\n        'profile'          => 'profiles\/{$name}\/',\n        'database-driver'  => 'drivers\/lib\/Drupal\/Driver\/Database\/{$name}\/',\n        'drush'            => 'drush\/{$name}\/',\n        'custom-theme'     => 'themes\/custom\/{$name}\/',\n        'custom-module'    => 'modules\/custom\/{$name}\/',\n        'custom-profile'   => 'profiles\/custom\/{$name}\/',\n        'drupal-multisite' => 'sites\/{$name}\/',\n        'console'          => 'console\/{$name}\/',\n        'console-language' => 'console\/language\/{$name}\/',\n        'config'           => 'config\/sync\/',\n        'recipe'           => 'recipes\/{$name}',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/AglInstaller.php","ext":"php","size":674,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass AglInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'More\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $name = preg_replace_callback('\/(?:^|_|-)(.?)\/', function ($matches) {\n            return strtoupper($matches[1]);\n        }, $vars['name']);\n\n        if (null === $name) {\n            throw new \\RuntimeException('Failed to run preg_replace_callback: '.preg_last_error());\n        }\n\n        $vars['name'] = $name;\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MagentoInstaller.php","ext":"php","size":312,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MagentoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'theme'   => 'app\/design\/frontend\/{$name}\/',\n        'skin'    => 'skin\/frontend\/default\/{$name}\/',\n        'library' => 'lib\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/SiteDirectInstaller.php","ext":"php","size":908,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass SiteDirectInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$vendor}\/{$name}\/',\n        'plugin' => 'plugins\/{$vendor}\/{$name}\/'\n    );\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        return $this->parseVars($vars);\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function parseVars(array $vars): array\n    {\n        $vars['vendor'] = strtolower($vars['vendor']) == 'sitedirect' ? 'SiteDirect' : $vars['vendor'];\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ForkCMSInstaller.php","ext":"php","size":1840,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ForkCMSInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = [\n        'module'    => 'src\/Modules\/{$name}\/',\n        'theme'     => 'src\/Themes\/{$name}\/'\n    ];\n\n    \/**\n     * Format package name.\n     *\n     * For package type fork-cms-module, cut off a trailing '-plugin' if present.\n     *\n     * For package type fork-cms-theme, cut off a trailing '-theme' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'fork-cms-module') {\n            return $this->inflectModuleVars($vars);\n        }\n\n        if ($vars['type'] === 'fork-cms-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^fork-cms-|-module|ForkCMS|ForkCms|Forkcms|forkcms|Module$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']); \/\/ replace hyphens with spaces\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name'])); \/\/ make module name camelcased\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^fork-cms-|-theme|ForkCMS|ForkCms|Forkcms|forkcms|Theme$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']); \/\/ replace hyphens with spaces\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name'])); \/\/ make theme name camelcased\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/StarbugInstaller.php","ext":"php","size":344,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass StarbugInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n        'theme' => 'themes\/{$name}\/',\n        'custom-module' => 'app\/modules\/{$name}\/',\n        'custom-theme' => 'app\/themes\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/EliasisInstaller.php","ext":"php","size":344,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass EliasisInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'component' => 'components\/{$name}\/',\n        'module'    => 'modules\/{$name}\/',\n        'plugin'    => 'plugins\/{$name}\/',\n        'template'  => 'templates\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/LaravelInstaller.php","ext":"php","size":210,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass LaravelInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'library' => 'libraries\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/WolfCMSInstaller.php","ext":"php","size":212,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass WolfCMSInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'wolf\/plugins\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/CockpitInstaller.php","ext":"php","size":803,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass CockpitInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'cockpit\/modules\/addons\/{$name}\/',\n    );\n\n    \/**\n     * Format module name.\n     *\n     * Strip `module-` prefix from package name.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] == 'cockpit-module') {\n            return $this->inflectModuleVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    public function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = ucfirst($this->pregReplace('\/cockpit-\/i', '', $vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MantisBTInstaller.php","ext":"php","size":642,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\DependencyResolver\\Pool;\n\nclass MantisBTInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/BotbleInstaller.php","ext":"php","size":271,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass BotbleInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'     => 'platform\/plugins\/{$name}\/',\n        'theme'      => 'platform\/themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MicroweberInstaller.php","ext":"php","size":5270,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MicroweberInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'userfiles\/modules\/{$install_item_dir}\/',\n        'module-skin' => 'userfiles\/modules\/{$install_item_dir}\/templates\/',\n        'template' => 'userfiles\/templates\/{$install_item_dir}\/',\n        'element' => 'userfiles\/elements\/{$install_item_dir}\/',\n        'vendor' => 'vendor\/{$install_item_dir}\/',\n        'components' => 'components\/{$install_item_dir}\/'\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type microweber-module, cut off a trailing '-module' if present\n     *\n     * For package type microweber-template, cut off a trailing '-template' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($this->package->getTargetDir() !== null && $this->package->getTargetDir() !== '') {\n            $vars['install_item_dir'] = $this->package->getTargetDir();\n        } else {\n            $vars['install_item_dir'] = $vars['name'];\n            if ($vars['type'] === 'microweber-template') {\n                return $this->inflectTemplateVars($vars);\n            }\n            if ($vars['type'] === 'microweber-templates') {\n                return $this->inflectTemplatesVars($vars);\n            }\n            if ($vars['type'] === 'microweber-core') {\n                return $this->inflectCoreVars($vars);\n            }\n            if ($vars['type'] === 'microweber-adapter') {\n                return $this->inflectCoreVars($vars);\n            }\n            if ($vars['type'] === 'microweber-module') {\n                return $this->inflectModuleVars($vars);\n            }\n            if ($vars['type'] === 'microweber-modules') {\n                return $this->inflectModulesVars($vars);\n            }\n            if ($vars['type'] === 'microweber-skin') {\n                return $this->inflectSkinVars($vars);\n            }\n            if ($vars['type'] === 'microweber-element' or $vars['type'] === 'microweber-elements') {\n                return $this->inflectElementVars($vars);\n            }\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectTemplateVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-template$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/template-$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectTemplatesVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-templates$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/templates-$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectCoreVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-providers$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/-provider$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/-adapter$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModuleVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-module$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/module-$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModulesVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-modules$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/modules-$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectSkinVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-skin$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/skin-$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectElementVars(array $vars): array\n    {\n        $vars['install_item_dir'] = $this->pregReplace('\/-elements$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/elements-$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/-element$\/', '', $vars['install_item_dir']);\n        $vars['install_item_dir'] = $this->pregReplace('\/element-$\/', '', $vars['install_item_dir']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ReIndexInstaller.php","ext":"php","size":251,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ReIndexInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'theme'     => 'themes\/{$name}\/',\n        'plugin'    => 'plugins\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/FuelphpInstaller.php","ext":"php","size":214,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass FuelphpInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'component'  => 'components\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/RadPHPInstaller.php","ext":"php","size":717,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass RadPHPInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'bundle' => 'src\/{$name}\/'\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $nameParts = explode('\/', $vars['name']);\n        foreach ($nameParts as &$value) {\n            $value = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $value));\n            $value = str_replace(array('-', '_'), ' ', $value);\n            $value = str_replace(' ', '', ucwords($value));\n        }\n        $vars['name'] = implode('\/', $nameParts);\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/BonefishInstaller.php","ext":"php","size":222,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass BonefishInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'package'    => 'Packages\/{$vendor}\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MakoInstaller.php","ext":"php","size":210,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MakoInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'package' => 'app\/packages\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/DolibarrInstaller.php","ext":"php","size":393,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * Class DolibarrInstaller\n *\n * @package Composer\\Installers\n * @author  Rapha\u00ebl Doursenaud <rdoursenaud@gpcsolutions.fr>\n *\/\nclass DolibarrInstaller extends BaseInstaller\n{\n    \/\/TODO: Add support for scripts and themes\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'htdocs\/custom\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/AsgardInstaller.php","ext":"php","size":1599,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass AsgardInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'Modules\/{$name}\/',\n        'theme' => 'Themes\/{$name}\/'\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type asgard-module, cut off a trailing '-plugin' if present.\n     *\n     * For package type asgard-theme, cut off a trailing '-theme' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'asgard-module') {\n            return $this->inflectPluginVars($vars);\n        }\n\n        if ($vars['type'] === 'asgard-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectPluginVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-module$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/-theme$\/', '', $vars['name']);\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/DecibelInstaller.php","ext":"php","size":225,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass DecibelInstaller extends BaseInstaller\n{\n    \/** @var array *\/\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'app'    => 'app\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/TuskInstaller.php","ext":"php","size":404,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * Composer installer for 3rd party Tusk utilities\n * @author Drew Ewing <drew@phenocode.com>\n *\/\nclass TuskInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'task'    => '.tusk\/tasks\/{$name}\/',\n        'command' => '.tusk\/commands\/{$name}\/',\n        'asset'   => 'assets\/tusk\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/SyliusInstaller.php","ext":"php","size":204,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass SyliusInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'theme' => 'themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MajimaInstaller.php","ext":"php","size":1127,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * Plugin\/theme installer for majima\n * @author David Neustadt\n *\/\nclass MajimaInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'plugins\/{$name}\/',\n    );\n\n    \/**\n     * Transforms the names\n     *\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        return $this->correctPluginName($vars);\n    }\n\n    \/**\n     * Change hyphenated names to camelcase\n     *\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    private function correctPluginName(array $vars): array\n    {\n        $camelCasedName = preg_replace_callback('\/(-[a-z])\/', function ($matches) {\n            return strtoupper($matches[0][1]);\n        }, $vars['name']);\n\n        if (null === $camelCasedName) {\n            throw new \\RuntimeException('Failed to run preg_replace_callback: '.preg_last_error());\n        }\n\n        $vars['name'] = ucfirst($camelCasedName);\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MODULEWorkInstaller.php","ext":"php","size":213,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MODULEWorkInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'    => 'modules\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/WordPressInstaller.php","ext":"php","size":379,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass WordPressInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'    => 'wp-content\/plugins\/{$name}\/',\n        'theme'     => 'wp-content\/themes\/{$name}\/',\n        'muplugin'  => 'wp-content\/mu-plugins\/{$name}\/',\n        'dropin'    => 'wp-content\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/Redaxo5Installer.php","ext":"php","size":299,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass Redaxo5Installer extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'addon'          => 'redaxo\/src\/addons\/{$name}\/',\n        'bestyle-plugin' => 'redaxo\/src\/addons\/be_style\/plugins\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MoodleInstaller.php","ext":"php","size":3882,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass MoodleInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'mod'                => 'mod\/{$name}\/',\n        'admin_report'       => 'admin\/report\/{$name}\/',\n        'atto'               => 'lib\/editor\/atto\/plugins\/{$name}\/',\n        'tool'               => 'admin\/tool\/{$name}\/',\n        'assignment'         => 'mod\/assignment\/type\/{$name}\/',\n        'assignsubmission'   => 'mod\/assign\/submission\/{$name}\/',\n        'assignfeedback'     => 'mod\/assign\/feedback\/{$name}\/',\n        'antivirus'          => 'lib\/antivirus\/{$name}\/',\n        'auth'               => 'auth\/{$name}\/',\n        'availability'       => 'availability\/condition\/{$name}\/',\n        'block'              => 'blocks\/{$name}\/',\n        'booktool'           => 'mod\/book\/tool\/{$name}\/',\n        'cachestore'         => 'cache\/stores\/{$name}\/',\n        'cachelock'          => 'cache\/locks\/{$name}\/',\n        'calendartype'       => 'calendar\/type\/{$name}\/',\n        'communication'      => 'communication\/provider\/{$name}\/',\n        'customfield'        => 'customfield\/field\/{$name}\/',\n        'fileconverter'      => 'files\/converter\/{$name}\/',\n        'format'             => 'course\/format\/{$name}\/',\n        'coursereport'       => 'course\/report\/{$name}\/',\n        'contenttype'        => 'contentbank\/contenttype\/{$name}\/',\n        'customcertelement'  => 'mod\/customcert\/element\/{$name}\/',\n        'datafield'          => 'mod\/data\/field\/{$name}\/',\n        'dataformat'         => 'dataformat\/{$name}\/',\n        'datapreset'         => 'mod\/data\/preset\/{$name}\/',\n        'editor'             => 'lib\/editor\/{$name}\/',\n        'enrol'              => 'enrol\/{$name}\/',\n        'filter'             => 'filter\/{$name}\/',\n        'forumreport'        => 'mod\/forum\/report\/{$name}\/',\n        'gradeexport'        => 'grade\/export\/{$name}\/',\n        'gradeimport'        => 'grade\/import\/{$name}\/',\n        'gradereport'        => 'grade\/report\/{$name}\/',\n        'gradingform'        => 'grade\/grading\/form\/{$name}\/',\n        'h5plib'             => 'h5p\/h5plib\/{$name}\/',\n        'local'              => 'local\/{$name}\/',\n        'logstore'           => 'admin\/tool\/log\/store\/{$name}\/',\n        'ltisource'          => 'mod\/lti\/source\/{$name}\/',\n        'ltiservice'         => 'mod\/lti\/service\/{$name}\/',\n        'media'              => 'media\/player\/{$name}\/',\n        'message'            => 'message\/output\/{$name}\/',\n        'mlbackend'          => 'lib\/mlbackend\/{$name}\/',\n        'mnetservice'        => 'mnet\/service\/{$name}\/',\n        'paygw'              => 'payment\/gateway\/{$name}\/',\n        'plagiarism'         => 'plagiarism\/{$name}\/',\n        'portfolio'          => 'portfolio\/{$name}\/',\n        'qbank'              => 'question\/bank\/{$name}\/',\n        'qbehaviour'         => 'question\/behaviour\/{$name}\/',\n        'qformat'            => 'question\/format\/{$name}\/',\n        'qtype'              => 'question\/type\/{$name}\/',\n        'quizaccess'         => 'mod\/quiz\/accessrule\/{$name}\/',\n        'quiz'               => 'mod\/quiz\/report\/{$name}\/',\n        'report'             => 'report\/{$name}\/',\n        'repository'         => 'repository\/{$name}\/',\n        'scormreport'        => 'mod\/scorm\/report\/{$name}\/',\n        'search'             => 'search\/engine\/{$name}\/',\n        'theme'              => 'theme\/{$name}\/',\n        'tiny'               => 'lib\/editor\/tiny\/plugins\/{$name}\/',\n        'tinymce'            => 'lib\/editor\/tinymce\/plugins\/{$name}\/',\n        'profilefield'       => 'user\/profile\/field\/{$name}\/',\n        'webservice'         => 'webservice\/{$name}\/',\n        'workshopallocation' => 'mod\/workshop\/allocation\/{$name}\/',\n        'workshopeval'       => 'mod\/workshop\/eval\/{$name}\/',\n        'workshopform'       => 'mod\/workshop\/form\/{$name}\/'\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PuppetInstaller.php","ext":"php","size":207,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PuppetInstaller extends BaseInstaller\n{\n\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/GravInstaller.php","ext":"php","size":710,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass GravInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'user\/plugins\/{$name}\/',\n        'theme'  => 'user\/themes\/{$name}\/',\n    );\n\n    \/**\n     * Format package name\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $restrictedWords = implode('|', array_keys($this->locations));\n\n        $vars['name'] = strtolower($vars['name']);\n        $vars['name'] = $this->pregReplace(\n            '\/^(?:grav-)?(?:(?:'.$restrictedWords.')-)?(.*?)(?:-(?:'.$restrictedWords.'))?$\/ui',\n            '$1',\n            $vars['name']\n        );\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/MauticInstaller.php","ext":"php","size":1167,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Package\\PackageInterface;\n\nclass MauticInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin'           => 'plugins\/{$name}\/',\n        'theme'            => 'themes\/{$name}\/',\n        'core'             => 'app\/',\n    );\n\n    private function getDirectoryName(): string\n    {\n        $extra = $this->package->getExtra();\n        if (!empty($extra['install-directory-name'])) {\n            return $extra['install-directory-name'];\n        }\n\n        return $this->toCamelCase($this->package->getPrettyName());\n    }\n\n    private function toCamelCase(string $packageName): string\n    {\n        return str_replace(' ', '', ucwords(str_replace('-', ' ', basename($packageName))));\n    }\n\n    \/**\n     * Format package name of mautic-plugins to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] == 'mautic-plugin' || $vars['type'] == 'mautic-theme') {\n            $directoryName = $this->getDirectoryName();\n            $vars['name'] = $directoryName;\n        }\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ProcessWireInstaller.php","ext":"php","size":612,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ProcessWireInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'  => 'site\/modules\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ElggInstaller.php","ext":"php","size":200,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ElggInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'plugin' => 'mod\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/WinterInstaller.php","ext":"php","size":1863,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass WinterInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'    => 'modules\/{$name}\/',\n        'plugin'    => 'plugins\/{$vendor}\/{$name}\/',\n        'theme'     => 'themes\/{$name}\/'\n    );\n\n    \/**\n     * Format package name.\n     *\n     * For package type winter-plugin, cut off a trailing '-plugin' if present.\n     *\n     * For package type winter-theme, cut off a trailing '-theme' if present.\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'winter-module') {\n            return $this->inflectModuleVars($vars);\n        }\n        \n        if ($vars['type'] === 'winter-plugin') {\n            return $this->inflectPluginVars($vars);\n        }\n\n        if ($vars['type'] === 'winter-theme') {\n            return $this->inflectThemeVars($vars);\n        }\n\n        return $vars;\n    }\n    \n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectModuleVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^wn-|-module$\/', '', $vars['name']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectPluginVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^wn-|-plugin$\/', '', $vars['name']);\n        $vars['vendor'] = $this->pregReplace('\/[^a-z0-9_]\/i', '', $vars['vendor']);\n\n        return $vars;\n    }\n\n    \/**\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    protected function inflectThemeVars(array $vars): array\n    {\n        $vars['name'] = $this->pregReplace('\/^wn-|-theme$\/', '', $vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/FuelInstaller.php","ext":"php","size":310,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass FuelInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'  => 'fuel\/app\/modules\/{$name}\/',\n        'package' => 'fuel\/packages\/{$name}\/',\n        'theme'   => 'fuel\/app\/themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/Installer.php","ext":"php","size":10267,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Composer;\nuse Composer\\Installer\\BinaryInstaller;\nuse Composer\\Installer\\LibraryInstaller;\nuse Composer\\IO\\IOInterface;\nuse Composer\\Package\\Package;\nuse Composer\\Package\\PackageInterface;\nuse Composer\\Repository\\InstalledRepositoryInterface;\nuse Composer\\Util\\Filesystem;\nuse React\\Promise\\PromiseInterface;\n\nclass Installer extends LibraryInstaller\n{\n    \/**\n     * Package types to installer class map\n     *\n     * @var array<string, string>\n     *\/\n    private $supportedTypes = array(\n        'akaunting'    => 'AkauntingInstaller',\n        'asgard'       => 'AsgardInstaller',\n        'attogram'     => 'AttogramInstaller',\n        'agl'          => 'AglInstaller',\n        'annotatecms'  => 'AnnotateCmsInstaller',\n        'bitrix'       => 'BitrixInstaller',\n        'botble'       => 'BotbleInstaller',\n        'bonefish'     => 'BonefishInstaller',\n        'cakephp'      => 'CakePHPInstaller',\n        'chef'         => 'ChefInstaller',\n        'civicrm'      => 'CiviCrmInstaller',\n        'ccframework'  => 'ClanCatsFrameworkInstaller',\n        'cockpit'      => 'CockpitInstaller',\n        'codeigniter'  => 'CodeIgniterInstaller',\n        'concrete5'    => 'Concrete5Installer',\n        'concretecms'  => 'ConcreteCMSInstaller',\n        'croogo'       => 'CroogoInstaller',\n        'dframe'       => 'DframeInstaller',\n        'dokuwiki'     => 'DokuWikiInstaller',\n        'dolibarr'     => 'DolibarrInstaller',\n        'decibel'      => 'DecibelInstaller',\n        'drupal'       => 'DrupalInstaller',\n        'elgg'         => 'ElggInstaller',\n        'eliasis'      => 'EliasisInstaller',\n        'ee3'          => 'ExpressionEngineInstaller',\n        'ee2'          => 'ExpressionEngineInstaller',\n        'ezplatform'   => 'EzPlatformInstaller',\n        'fork'         => 'ForkCMSInstaller',\n        'fuel'         => 'FuelInstaller',\n        'fuelphp'      => 'FuelphpInstaller',\n        'grav'         => 'GravInstaller',\n        'hurad'        => 'HuradInstaller',\n        'tastyigniter' => 'TastyIgniterInstaller',\n        'imagecms'     => 'ImageCMSInstaller',\n        'itop'         => 'ItopInstaller',\n        'kanboard'     => 'KanboardInstaller',\n        'known'\t       => 'KnownInstaller',\n        'kodicms'      => 'KodiCMSInstaller',\n        'kohana'       => 'KohanaInstaller',\n        'lms'          => 'LanManagementSystemInstaller',\n        'laravel'      => 'LaravelInstaller',\n        'lavalite'     => 'LavaLiteInstaller',\n        'lithium'      => 'LithiumInstaller',\n        'magento'      => 'MagentoInstaller',\n        'majima'       => 'MajimaInstaller',\n        'mantisbt'     => 'MantisBTInstaller',\n        'mako'         => 'MakoInstaller',\n        'matomo'       => 'MatomoInstaller',\n        'maya'         => 'MayaInstaller',\n        'mautic'       => 'MauticInstaller',\n        'mediawiki'    => 'MediaWikiInstaller',\n        'miaoxing'     => 'MiaoxingInstaller',\n        'microweber'   => 'MicroweberInstaller',\n        'modulework'   => 'MODULEWorkInstaller',\n        'modx'         => 'ModxInstaller',\n        'modxevo'      => 'MODXEvoInstaller',\n        'moodle'       => 'MoodleInstaller',\n        'october'      => 'OctoberInstaller',\n        'ontowiki'     => 'OntoWikiInstaller',\n        'oxid'         => 'OxidInstaller',\n        'osclass'      => 'OsclassInstaller',\n        'pxcms'        => 'PxcmsInstaller',\n        'phpbb'        => 'PhpBBInstaller',\n        'piwik'        => 'PiwikInstaller',\n        'plentymarkets'=> 'PlentymarketsInstaller',\n        'ppi'          => 'PPIInstaller',\n        'puppet'       => 'PuppetInstaller',\n        'radphp'       => 'RadPHPInstaller',\n        'phifty'       => 'PhiftyInstaller',\n        'porto'        => 'PortoInstaller',\n        'processwire'  => 'ProcessWireInstaller',\n        'quicksilver'  => 'PantheonInstaller',\n        'redaxo'       => 'RedaxoInstaller',\n        'redaxo5'      => 'Redaxo5Installer',\n        'reindex'      => 'ReIndexInstaller',\n        'roundcube'    => 'RoundcubeInstaller',\n        'shopware'     => 'ShopwareInstaller',\n        'sitedirect'   => 'SiteDirectInstaller',\n        'silverstripe' => 'SilverStripeInstaller',\n        'smf'          => 'SMFInstaller',\n        'starbug'      => 'StarbugInstaller',\n        'sydes'        => 'SyDESInstaller',\n        'sylius'       => 'SyliusInstaller',\n        'tao'          => 'TaoInstaller',\n        'thelia'       => 'TheliaInstaller',\n        'tusk'         => 'TuskInstaller',\n        'userfrosting' => 'UserFrostingInstaller',\n        'vanilla'      => 'VanillaInstaller',\n        'whmcs'        => 'WHMCSInstaller',\n        'winter'       => 'WinterInstaller',\n        'wolfcms'      => 'WolfCMSInstaller',\n        'wordpress'    => 'WordPressInstaller',\n        'yawik'        => 'YawikInstaller',\n        'zend'         => 'ZendInstaller',\n        'zikula'       => 'ZikulaInstaller',\n        'prestashop'   => 'PrestashopInstaller'\n    );\n\n    \/**\n     * Disables installers specified in main composer extra installer-disable\n     * list\n     *\/\n    public function __construct(\n        IOInterface $io,\n        Composer $composer,\n        string $type = 'library',\n        ?Filesystem $filesystem = null,\n        ?BinaryInstaller $binaryInstaller = null\n    ) {\n        parent::__construct($io, $composer, $type, $filesystem, $binaryInstaller);\n        $this->removeDisabledInstallers();\n    }\n\n    \/**\n     * {@inheritDoc}\n     *\/\n    public function getInstallPath(PackageInterface $package)\n    {\n        $type = $package->getType();\n        $frameworkType = $this->findFrameworkType($type);\n\n        if ($frameworkType === false) {\n            throw new \\InvalidArgumentException(\n                'Sorry the package type of this package is not yet supported.'\n            );\n        }\n\n        $class = 'Composer\\\\Installers\\\\' . $this->supportedTypes[$frameworkType];\n        \/**\n         * @var BaseInstaller\n         *\/\n        $installer = new $class($package, $this->composer, $this->getIO());\n\n        $path = $installer->getInstallPath($package, $frameworkType);\n        if (!$this->filesystem->isAbsolutePath($path)) {\n            $path = getcwd() . '\/' . $path;\n        }\n\n        return $path;\n    }\n\n    public function uninstall(InstalledRepositoryInterface $repo, PackageInterface $package)\n    {\n        $installPath = $this->getPackageBasePath($package);\n        $io = $this->io;\n        $outputStatus = function () use ($io, $installPath) {\n            $io->write(sprintf('Deleting %s - %s', $installPath, !file_exists($installPath) ? '<comment>deleted<\/comment>' : '<error>not deleted<\/error>'));\n        };\n\n        $promise = parent::uninstall($repo, $package);\n\n        \/\/ Composer v2 might return a promise here\n        if ($promise instanceof PromiseInterface) {\n            return $promise->then($outputStatus);\n        }\n\n        \/\/ If not, execute the code right away as parent::uninstall executed synchronously (composer v1, or v2 without async)\n        $outputStatus();\n\n        return null;\n    }\n\n    \/**\n     * {@inheritDoc}\n     *\n     * @param string $packageType\n     *\/\n    public function supports($packageType)\n    {\n        $frameworkType = $this->findFrameworkType($packageType);\n\n        if ($frameworkType === false) {\n            return false;\n        }\n\n        $locationPattern = $this->getLocationPattern($frameworkType);\n\n        return preg_match('#' . $frameworkType . '-' . $locationPattern . '#', $packageType, $matches) === 1;\n    }\n\n    \/**\n     * Finds a supported framework type if it exists and returns it\n     *\n     * @return string|false\n     *\/\n    protected function findFrameworkType(string $type)\n    {\n        krsort($this->supportedTypes);\n\n        foreach ($this->supportedTypes as $key => $val) {\n            if ($key === substr($type, 0, strlen($key))) {\n                return substr($type, 0, strlen($key));\n            }\n        }\n\n        return false;\n    }\n\n    \/**\n     * Get the second part of the regular expression to check for support of a\n     * package type\n     *\/\n    protected function getLocationPattern(string $frameworkType): string\n    {\n        $pattern = null;\n        if (!empty($this->supportedTypes[$frameworkType])) {\n            $frameworkClass = 'Composer\\\\Installers\\\\' . $this->supportedTypes[$frameworkType];\n            \/** @var BaseInstaller $framework *\/\n            $framework = new $frameworkClass(new Package('dummy\/pkg', '1.0.0.0', '1.0.0'), $this->composer, $this->getIO());\n            $locations = array_keys($framework->getLocations($frameworkType));\n            if ($locations) {\n                $pattern = '(' . implode('|', $locations) . ')';\n            }\n        }\n\n        return $pattern ?: '(\\w+)';\n    }\n\n    private function getIO(): IOInterface\n    {\n        return $this->io;\n    }\n\n    \/**\n     * Look for installers set to be disabled in composer's extra config and\n     * remove them from the list of supported installers.\n     *\n     * Globals:\n     *  - true, \"all\", and \"*\" - disable all installers.\n     *  - false - enable all installers (useful with\n     *     wikimedia\/composer-merge-plugin or similar)\n     *\/\n    protected function removeDisabledInstallers(): void\n    {\n        $extra = $this->composer->getPackage()->getExtra();\n\n        if (!isset($extra['installer-disable']) || $extra['installer-disable'] === false) {\n            \/\/ No installers are disabled\n            return;\n        }\n\n        \/\/ Get installers to disable\n        $disable = $extra['installer-disable'];\n\n        \/\/ Ensure $disabled is an array\n        if (!is_array($disable)) {\n            $disable = array($disable);\n        }\n\n        \/\/ Check which installers should be disabled\n        $all = array(true, \"all\", \"*\");\n        $intersect = array_intersect($all, $disable);\n        if (!empty($intersect)) {\n            \/\/ Disable all installers\n            $this->supportedTypes = array();\n            return;\n        }\n\n        \/\/ Disable specified installers\n        foreach ($disable as $key => $installer) {\n            if (is_string($installer) && key_exists($installer, $this->supportedTypes)) {\n                unset($this->supportedTypes[$installer]);\n            }\n        }\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ClanCatsFrameworkInstaller.php","ext":"php","size":272,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass ClanCatsFrameworkInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'ship'      => 'CCF\/orbit\/{$name}\/',\n        'theme'     => 'CCF\/app\/themes\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/AkauntingInstaller.php","ext":"php","size":603,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass AkauntingInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/SilverStripeInstaller.php","ext":"php","size":1048,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nuse Composer\\Package\\PackageInterface;\n\nclass SilverStripeInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => '{$name}\/',\n        'theme'  => 'themes\/{$name}\/',\n    );\n\n    \/**\n     * Return the install path based on package type.\n     *\n     * Relies on built-in BaseInstaller behaviour with one exception: silverstripe\/framework\n     * must be installed to 'sapphire' and not 'framework' if the version is <3.0.0\n     *\/\n    public function getInstallPath(PackageInterface $package, string $frameworkType = ''): string\n    {\n        if (\n            $package->getName() == 'silverstripe\/framework'\n            && preg_match('\/^\\d+\\.\\d+\\.\\d+\/', $package->getVersion())\n            && version_compare($package->getVersion(), '2.999.999') < 0\n        ) {\n            return $this->templatePath($this->locations['module'], array('name' => 'sapphire'));\n        }\n\n        return parent::getInstallPath($package, $frameworkType);\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PhiftyInstaller.php","ext":"php","size":295,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PhiftyInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'bundle' => 'bundles\/{$name}\/',\n        'library' => 'libraries\/{$name}\/',\n        'framework' => 'frameworks\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/ShopwareInstaller.php","ext":"php","size":1895,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\n\/**\n * Plugin\/theme installer for shopware\n * @author Benjamin Boit\n *\/\nclass ShopwareInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'backend-plugin'    => 'engine\/Shopware\/Plugins\/Local\/Backend\/{$name}\/',\n        'core-plugin'       => 'engine\/Shopware\/Plugins\/Local\/Core\/{$name}\/',\n        'frontend-plugin'   => 'engine\/Shopware\/Plugins\/Local\/Frontend\/{$name}\/',\n        'theme'             => 'templates\/{$name}\/',\n        'plugin'            => 'custom\/plugins\/{$name}\/',\n        'frontend-theme'    => 'themes\/Frontend\/{$name}\/',\n    );\n\n    \/**\n     * Transforms the names\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        if ($vars['type'] === 'shopware-theme') {\n            return $this->correctThemeName($vars);\n        }\n\n        return $this->correctPluginName($vars);\n    }\n\n    \/**\n     * Changes the name to a camelcased combination of vendor and name\n     *\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    private function correctPluginName(array $vars): array\n    {\n        $camelCasedName = preg_replace_callback('\/(-[a-z])\/', function ($matches) {\n            return strtoupper($matches[0][1]);\n        }, $vars['name']);\n\n        if (null === $camelCasedName) {\n            throw new \\RuntimeException('Failed to run preg_replace_callback: '.preg_last_error());\n        }\n\n        $vars['name'] = ucfirst($vars['vendor']) . ucfirst($camelCasedName);\n\n        return $vars;\n    }\n\n    \/**\n     * Changes the name to a underscore separated name\n     *\n     * @param array<string, string> $vars\n     * @return array<string, string>\n     *\/\n    private function correctThemeName(array $vars): array\n    {\n        $vars['name'] = str_replace('-', '_', $vars['name']);\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/PhpBBInstaller.php","ext":"php","size":300,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass PhpBBInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'extension' => 'ext\/{$vendor}\/{$name}\/',\n        'language'  => 'language\/{$name}\/',\n        'style'     => 'styles\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/KohanaInstaller.php","ext":"php","size":206,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass KohanaInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module' => 'modules\/{$name}\/',\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/src\/Composer\/Installers\/YawikInstaller.php","ext":"php","size":600,"mtime":1756479860,"type":"text","content":"<?php\n\nnamespace Composer\\Installers;\n\nclass YawikInstaller extends BaseInstaller\n{\n    \/** @var array<string, string> *\/\n    protected $locations = array(\n        'module'  => 'module\/{$name}\/',\n    );\n\n    \/**\n     * Format package name to CamelCase\n     *\/\n    public function inflectPackageVars(array $vars): array\n    {\n        $vars['name'] = strtolower($this->pregReplace('\/(?<=\\\\w)([A-Z])\/', '_\\\\1', $vars['name']));\n        $vars['name'] = str_replace(array('-', '_'), ' ', $vars['name']);\n        $vars['name'] = str_replace(' ', '', ucwords($vars['name']));\n\n        return $vars;\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installers\/composer.json","ext":"json","size":2717,"mtime":1756479860,"type":"text","content":"{\n    \"name\": \"composer\/installers\",\n    \"type\": \"composer-plugin\",\n    \"license\": \"MIT\",\n    \"description\": \"A multi-framework Composer library installer\",\n    \"keywords\": [\n        \"installer\",\n        \"AGL\",\n        \"AnnotateCms\",\n        \"Attogram\",\n        \"Bitrix\",\n        \"CakePHP\",\n        \"Chef\",\n        \"Cockpit\",\n        \"CodeIgniter\",\n        \"concrete5\",\n        \"ConcreteCMS\",\n        \"Croogo\",\n        \"DokuWiki\",\n        \"Dolibarr\",\n        \"Drupal\",\n        \"Elgg\",\n        \"Eliasis\",\n        \"ExpressionEngine\",\n        \"eZ Platform\",\n        \"FuelPHP\",\n        \"Grav\",\n        \"Hurad\",\n        \"ImageCMS\",\n        \"iTop\",\n        \"Kanboard\",\n        \"Known\",\n        \"Kohana\",\n        \"Lan Management System\",\n        \"Laravel\",\n        \"Lavalite\",\n        \"Lithium\",\n        \"Magento\",\n        \"majima\",\n        \"Mako\",\n        \"MantisBT\",\n        \"Matomo\",\n        \"Mautic\",\n        \"Maya\",\n        \"MODX\",\n        \"MODX Evo\",\n        \"MediaWiki\",\n        \"Miaoxing\",\n        \"OXID\",\n        \"osclass\",\n        \"MODULEWork\",\n        \"Moodle\",\n        \"Pantheon\",\n        \"Piwik\",\n        \"pxcms\",\n        \"phpBB\",\n        \"Plentymarkets\",\n        \"PPI\",\n        \"Puppet\",\n        \"Porto\",\n        \"ProcessWire\",\n        \"RadPHP\",\n        \"ReIndex\",\n        \"Roundcube\",\n        \"shopware\",\n        \"SilverStripe\",\n        \"SMF\",\n        \"Starbug\",\n        \"SyDES\",\n        \"Sylius\",\n        \"TastyIgniter\",\n        \"Thelia\",\n        \"WHMCS\",\n        \"WolfCMS\",\n        \"WordPress\",\n        \"YAWIK\",\n        \"Zend\",\n        \"Zikula\"\n    ],\n    \"homepage\": \"https:\/\/composer.github.io\/installers\/\",\n    \"authors\": [\n        {\n            \"name\": \"Kyle Robinson Young\",\n            \"email\": \"kyle@dontkry.com\",\n            \"homepage\": \"https:\/\/github.com\/shama\"\n        }\n    ],\n    \"autoload\": {\n        \"psr-4\": { \"Composer\\\\Installers\\\\\": \"src\/Composer\/Installers\" }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": { \"Composer\\\\Installers\\\\Test\\\\\": \"tests\/Composer\/Installers\/Test\" }\n    },\n    \"extra\": {\n        \"class\": \"Composer\\\\Installers\\\\Plugin\",\n        \"branch-alias\": {\n            \"dev-main\": \"2.x-dev\"\n        },\n        \"plugin-modifies-install-path\": true\n    },\n    \"require\": {\n        \"php\": \"^7.2 || ^8.0\",\n        \"composer-plugin-api\": \"^1.0 || ^2.0\"\n    },\n    \"require-dev\": {\n        \"composer\/composer\": \"^1.10.27 || ^2.7\",\n        \"composer\/semver\": \"^1.7.2 || ^3.4.0\",\n        \"symfony\/phpunit-bridge\": \"^7.1.1\",\n        \"phpstan\/phpstan\": \"^1.11\",\n        \"symfony\/process\": \"^5 || ^6 || ^7\",\n        \"phpstan\/phpstan-phpunit\": \"^1\"\n    },\n    \"scripts\": {\n        \"test\": \"@php vendor\/bin\/simple-phpunit\",\n        \"phpstan\": \"@php vendor\/bin\/phpstan analyse\"\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/autoload_classmap.php","ext":"php","size":2762,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Code_Snippets\\\\Admin' => $baseDir . '\/php\/class-admin.php',\n    'Code_Snippets\\\\Admin_Menu' => $baseDir . '\/php\/admin-menus\/class-admin-menu.php',\n    'Code_Snippets\\\\Cloud\\\\Cloud_API' => $baseDir . '\/php\/cloud\/class-cloud-api.php',\n    'Code_Snippets\\\\Cloud\\\\Cloud_Link' => $baseDir . '\/php\/cloud\/class-cloud-link.php',\n    'Code_Snippets\\\\Cloud\\\\Cloud_Search_List_Table' => $baseDir . '\/php\/cloud\/class-cloud-search-list-table.php',\n    'Code_Snippets\\\\Cloud\\\\Cloud_Snippet' => $baseDir . '\/php\/cloud\/class-cloud-snippet.php',\n    'Code_Snippets\\\\Cloud\\\\Cloud_Snippets' => $baseDir . '\/php\/cloud\/class-cloud-snippets.php',\n    'Code_Snippets\\\\Contextual_Help' => $baseDir . '\/php\/class-contextual-help.php',\n    'Code_Snippets\\\\DB' => $baseDir . '\/php\/class-db.php',\n    'Code_Snippets\\\\Data_Item' => $baseDir . '\/php\/class-data-item.php',\n    'Code_Snippets\\\\Edit_Menu' => $baseDir . '\/php\/admin-menus\/class-edit-menu.php',\n    'Code_Snippets\\\\Export' => $baseDir . '\/php\/export\/class-export.php',\n    'Code_Snippets\\\\Export_Attachment' => $baseDir . '\/php\/export\/class-export-attachment.php',\n    'Code_Snippets\\\\Front_End' => $baseDir . '\/php\/front-end\/class-front-end.php',\n    'Code_Snippets\\\\Import' => $baseDir . '\/php\/export\/class-import.php',\n    'Code_Snippets\\\\Import_Menu' => $baseDir . '\/php\/admin-menus\/class-import-menu.php',\n    'Code_Snippets\\\\Licensing' => $baseDir . '\/php\/class-licensing.php',\n    'Code_Snippets\\\\List_Table' => $baseDir . '\/php\/class-list-table.php',\n    'Code_Snippets\\\\Manage_Menu' => $baseDir . '\/php\/admin-menus\/class-manage-menu.php',\n    'Code_Snippets\\\\Plugin' => $baseDir . '\/php\/class-plugin.php',\n    'Code_Snippets\\\\REST_API\\\\Snippets_REST_Controller' => $baseDir . '\/php\/rest-api\/class-snippets-rest-controller.php',\n    'Code_Snippets\\\\Settings\\\\Setting_Field' => $baseDir . '\/php\/settings\/class-setting-field.php',\n    'Code_Snippets\\\\Settings_Menu' => $baseDir . '\/php\/admin-menus\/class-settings-menu.php',\n    'Code_Snippets\\\\Snippet' => $baseDir . '\/php\/class-snippet.php',\n    'Code_Snippets\\\\Upgrade' => $baseDir . '\/php\/class-upgrade.php',\n    'Code_Snippets\\\\Validator' => $baseDir . '\/php\/class-validator.php',\n    'Code_Snippets\\\\Welcome_API' => $baseDir . '\/php\/class-welcome-api.php',\n    'Code_Snippets\\\\Welcome_Menu' => $baseDir . '\/php\/admin-menus\/class-welcome-menu.php',\n    'Composer\\\\InstalledVersions' => $vendorDir . '\/composer\/InstalledVersions.php',\n    'Evaluation\\\\Evaluate_Content' => $baseDir . '\/php\/evaluation\/class-evaluate-content.php',\n    'Evaluation\\\\Evaluate_Functions' => $baseDir . '\/php\/evaluation\/class-evaluate-functions.php',\n);\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/installed.php","ext":"php","size":1173,"mtime":1756479860,"type":"text","content":"<?php return array(\n    'root' => array(\n        'name' => 'codesnippetspro\/code-snippets',\n        'pretty_version' => 'dev-master',\n        'version' => 'dev-master',\n        'reference' => 'cba6f08a36f8fbc37cc21fc2977f0106d6cdb4fd',\n        'type' => 'wordpress-plugin',\n        'install_path' => __DIR__ . '\/..\/..\/',\n        'aliases' => array(),\n        'dev' => false,\n    ),\n    'versions' => array(\n        'codesnippetspro\/code-snippets' => array(\n            'pretty_version' => 'dev-master',\n            'version' => 'dev-master',\n            'reference' => 'cba6f08a36f8fbc37cc21fc2977f0106d6cdb4fd',\n            'type' => 'wordpress-plugin',\n            'install_path' => __DIR__ . '\/..\/..\/',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'composer\/installers' => array(\n            'pretty_version' => 'v2.3.0',\n            'version' => '2.3.0.0',\n            'reference' => '12fb2dfe5e16183de69e784a7b84046c43d97e8e',\n            'type' => 'composer-plugin',\n            'install_path' => __DIR__ . '\/.\/installers',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n    ),\n);\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/autoload_namespaces.php","ext":"php","size":139,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/ClassLoader.php","ext":"php","size":16378,"mtime":1756479860,"type":"text","content":"<?php\n\n\/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Composer\\Autoload;\n\n\/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     \/\/ register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'\/component');\n *     $loader->add('Symfony',           __DIR__.'\/framework');\n *\n *     \/\/ activate the autoloader\n *     $loader->register();\n *\n *     \/\/ to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component\/\n * directory, and it will then fallback to the framework\/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https:\/\/www.php-fig.org\/psr\/psr-0\/\n * @see    https:\/\/www.php-fig.org\/psr\/psr-4\/\n *\/\nclass ClassLoader\n{\n    \/** @var \\Closure(string):void *\/\n    private static $includeFile;\n\n    \/** @var string|null *\/\n    private $vendorDir;\n\n    \/\/ PSR-4\n    \/**\n     * @var array<string, array<string, int>>\n     *\/\n    private $prefixLengthsPsr4 = array();\n    \/**\n     * @var array<string, list<string>>\n     *\/\n    private $prefixDirsPsr4 = array();\n    \/**\n     * @var list<string>\n     *\/\n    private $fallbackDirsPsr4 = array();\n\n    \/\/ PSR-0\n    \/**\n     * List of PSR-0 prefixes\n     *\n     * Structured as array('F (first letter)' => array('Foo\\Bar (full prefix)' => array('path', 'path2')))\n     *\n     * @var array<string, array<string, list<string>>>\n     *\/\n    private $prefixesPsr0 = array();\n    \/**\n     * @var list<string>\n     *\/\n    private $fallbackDirsPsr0 = array();\n\n    \/** @var bool *\/\n    private $useIncludePath = false;\n\n    \/**\n     * @var array<string, string>\n     *\/\n    private $classMap = array();\n\n    \/** @var bool *\/\n    private $classMapAuthoritative = false;\n\n    \/**\n     * @var array<string, bool>\n     *\/\n    private $missingClasses = array();\n\n    \/** @var string|null *\/\n    private $apcuPrefix;\n\n    \/**\n     * @var array<string, self>\n     *\/\n    private static $registeredLoaders = array();\n\n    \/**\n     * @param string|null $vendorDir\n     *\/\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n        self::initializeIncludeClosure();\n    }\n\n    \/**\n     * @return array<string, list<string>>\n     *\/\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    \/**\n     * @return array<string, list<string>>\n     *\/\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    \/**\n     * @return list<string>\n     *\/\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    \/**\n     * @return list<string>\n     *\/\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    \/**\n     * @return array<string, string> Array of classname => path\n     *\/\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    \/**\n     * @param array<string, string> $classMap Class to filename map\n     *\n     * @return void\n     *\/\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string              $prefix  The prefix\n     * @param list<string>|string $paths   The PSR-0 root directories\n     * @param bool                $prepend Whether to prepend the directories\n     *\n     * @return void\n     *\/\n    public function add($prefix, $paths, $prepend = false)\n    {\n        $paths = (array) $paths;\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                $paths\n            );\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string              $prefix  The prefix\/namespace, with trailing '\\\\'\n     * @param list<string>|string $paths   The PSR-4 base directories\n     * @param bool                $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     *\/\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        $paths = (array) $paths;\n        if (!$prefix) {\n            \/\/ Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            \/\/ Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = $paths;\n        } elseif ($prepend) {\n            \/\/ Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            \/\/ Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                $paths\n            );\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string              $prefix The prefix\n     * @param list<string>|string $paths  The PSR-0 base directories\n     *\n     * @return void\n     *\/\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string              $prefix The prefix\/namespace, with trailing '\\\\'\n     * @param list<string>|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     *\/\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    \/**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     *\n     * @return void\n     *\/\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    \/**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     *\/\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    \/**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     *\n     * @return void\n     *\/\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    \/**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     *\/\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    \/**\n     * APCu prefix to use to cache found\/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     *\n     * @return void\n     *\/\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    \/**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     *\/\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    \/**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     *\n     * @return void\n     *\/\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            return;\n        }\n\n        if ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    \/**\n     * Unregisters this instance as an autoloader.\n     *\n     * @return void\n     *\/\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    \/**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return true|null True if loaded, null otherwise\n     *\/\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            $includeFile = self::$includeFile;\n            $includeFile($file);\n\n            return true;\n        }\n\n        return null;\n    }\n\n    \/**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     *\/\n    public function findFile($class)\n    {\n        \/\/ class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        \/\/ Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            \/\/ Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    \/**\n     * Returns the currently registered loaders keyed by their corresponding vendor directories.\n     *\n     * @return array<string, self>\n     *\/\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    \/**\n     * @param  string       $class\n     * @param  string       $ext\n     * @return string|false\n     *\/\n    private function findFileWithExtension($class, $ext)\n    {\n        \/\/ PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        \/\/ PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        \/\/ PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            \/\/ namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            \/\/ PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        \/\/ PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        \/\/ PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n\n    \/**\n     * @return void\n     *\/\n    private static function initializeIncludeClosure()\n    {\n        if (self::$includeFile !== null) {\n            return;\n        }\n\n        \/**\n         * Scope isolated include.\n         *\n         * Prevents access to $this\/self from included files.\n         *\n         * @param  string $file\n         * @return void\n         *\/\n        self::$includeFile = \\Closure::bind(static function($file) {\n            include $file;\n        }, null, null);\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/autoload_static.php","ext":"php","size":4073,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInit32c628976156f02e2f24b767297ff314\n{\n    public static $prefixLengthsPsr4 = array (\n        'C' => \n        array (\n            'Composer\\\\Installers\\\\' => 20,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'Composer\\\\Installers\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/composer\/installers\/src\/Composer\/Installers',\n        ),\n    );\n\n    public static $classMap = array (\n        'Code_Snippets\\\\Admin' => __DIR__ . '\/..\/..' . '\/php\/class-admin.php',\n        'Code_Snippets\\\\Admin_Menu' => __DIR__ . '\/..\/..' . '\/php\/admin-menus\/class-admin-menu.php',\n        'Code_Snippets\\\\Cloud\\\\Cloud_API' => __DIR__ . '\/..\/..' . '\/php\/cloud\/class-cloud-api.php',\n        'Code_Snippets\\\\Cloud\\\\Cloud_Link' => __DIR__ . '\/..\/..' . '\/php\/cloud\/class-cloud-link.php',\n        'Code_Snippets\\\\Cloud\\\\Cloud_Search_List_Table' => __DIR__ . '\/..\/..' . '\/php\/cloud\/class-cloud-search-list-table.php',\n        'Code_Snippets\\\\Cloud\\\\Cloud_Snippet' => __DIR__ . '\/..\/..' . '\/php\/cloud\/class-cloud-snippet.php',\n        'Code_Snippets\\\\Cloud\\\\Cloud_Snippets' => __DIR__ . '\/..\/..' . '\/php\/cloud\/class-cloud-snippets.php',\n        'Code_Snippets\\\\Contextual_Help' => __DIR__ . '\/..\/..' . '\/php\/class-contextual-help.php',\n        'Code_Snippets\\\\DB' => __DIR__ . '\/..\/..' . '\/php\/class-db.php',\n        'Code_Snippets\\\\Data_Item' => __DIR__ . '\/..\/..' . '\/php\/class-data-item.php',\n        'Code_Snippets\\\\Edit_Menu' => __DIR__ . '\/..\/..' . '\/php\/admin-menus\/class-edit-menu.php',\n        'Code_Snippets\\\\Export' => __DIR__ . '\/..\/..' . '\/php\/export\/class-export.php',\n        'Code_Snippets\\\\Export_Attachment' => __DIR__ . '\/..\/..' . '\/php\/export\/class-export-attachment.php',\n        'Code_Snippets\\\\Front_End' => __DIR__ . '\/..\/..' . '\/php\/front-end\/class-front-end.php',\n        'Code_Snippets\\\\Import' => __DIR__ . '\/..\/..' . '\/php\/export\/class-import.php',\n        'Code_Snippets\\\\Import_Menu' => __DIR__ . '\/..\/..' . '\/php\/admin-menus\/class-import-menu.php',\n        'Code_Snippets\\\\Licensing' => __DIR__ . '\/..\/..' . '\/php\/class-licensing.php',\n        'Code_Snippets\\\\List_Table' => __DIR__ . '\/..\/..' . '\/php\/class-list-table.php',\n        'Code_Snippets\\\\Manage_Menu' => __DIR__ . '\/..\/..' . '\/php\/admin-menus\/class-manage-menu.php',\n        'Code_Snippets\\\\Plugin' => __DIR__ . '\/..\/..' . '\/php\/class-plugin.php',\n        'Code_Snippets\\\\REST_API\\\\Snippets_REST_Controller' => __DIR__ . '\/..\/..' . '\/php\/rest-api\/class-snippets-rest-controller.php',\n        'Code_Snippets\\\\Settings\\\\Setting_Field' => __DIR__ . '\/..\/..' . '\/php\/settings\/class-setting-field.php',\n        'Code_Snippets\\\\Settings_Menu' => __DIR__ . '\/..\/..' . '\/php\/admin-menus\/class-settings-menu.php',\n        'Code_Snippets\\\\Snippet' => __DIR__ . '\/..\/..' . '\/php\/class-snippet.php',\n        'Code_Snippets\\\\Upgrade' => __DIR__ . '\/..\/..' . '\/php\/class-upgrade.php',\n        'Code_Snippets\\\\Validator' => __DIR__ . '\/..\/..' . '\/php\/class-validator.php',\n        'Code_Snippets\\\\Welcome_API' => __DIR__ . '\/..\/..' . '\/php\/class-welcome-api.php',\n        'Code_Snippets\\\\Welcome_Menu' => __DIR__ . '\/..\/..' . '\/php\/admin-menus\/class-welcome-menu.php',\n        'Composer\\\\InstalledVersions' => __DIR__ . '\/..' . '\/composer\/InstalledVersions.php',\n        'Evaluation\\\\Evaluate_Content' => __DIR__ . '\/..\/..' . '\/php\/evaluation\/class-evaluate-content.php',\n        'Evaluation\\\\Evaluate_Functions' => __DIR__ . '\/..\/..' . '\/php\/evaluation\/class-evaluate-functions.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInit32c628976156f02e2f24b767297ff314::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInit32c628976156f02e2f24b767297ff314::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInit32c628976156f02e2f24b767297ff314::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/platform_check.php","ext":"php","size":917,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ platform_check.php @generated by Composer\n\n$issues = array();\n\nif (!(PHP_VERSION_ID >= 70400)) {\n    $issues[] = 'Your Composer dependencies require a PHP version \">= 7.4.0\". You are running ' . PHP_VERSION . '.';\n}\n\nif ($issues) {\n    if (!headers_sent()) {\n        header('HTTP\/1.1 500 Internal Server Error');\n    }\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . implode(PHP_EOL, $issues) . PHP_EOL.PHP_EOL);\n        } elseif (!headers_sent()) {\n            echo 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . str_replace('You are running '.PHP_VERSION.'.', '', implode(PHP_EOL, $issues)) . PHP_EOL.PHP_EOL;\n        }\n    }\n    throw new \\RuntimeException(\n        'Composer detected issues in your platform: ' . implode(' ', $issues)\n    );\n}\n"},{"base":"plugins","rel":"code-snippets\/vendor\/composer\/autoload_real.php","ext":"php","size":1137,"mtime":1756479860,"type":"text","content":"<?php\n\n\/\/ autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInit32c628976156f02e2f24b767297ff314\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '\/ClassLoader.php';\n        }\n    }\n\n    \/**\n     * @return \\Composer\\Autoload\\ClassLoader\n     *\/\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        require __DIR__ . '\/platform_check.php';\n\n        spl_autoload_register(array('ComposerAutoloaderInit32c628976156f02e2f24b767297ff314', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(__DIR__));\n        spl_autoload_unregister(array('ComposerAutoloaderInit32c628976156f02e2f24b767297ff314', 'loadClassLoader'));\n\n        require __DIR__ . '\/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInit32c628976156f02e2f24b767297ff314::getInitializer($loader));\n\n        $loader->register(true);\n\n        return $loader;\n    }\n}\n"},{"base":"plugins","rel":"wtp-url-tester\/wtp-url-tester.php","ext":"php","size":9863,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Plugin Name: WTP URL Tester\n * Description: Test URLs (status, redirects, response time) with optional hreflang extraction. Admin UI + REST API + JSON export. Mobile-first. Includes one-click REST self-test.\n * Version: 1.2.1\n * Author: WeekTopPick Autopilot\n * License: GPLv2 or later\n *\/\n\nif ( ! defined( 'ABSPATH' ) ) exit;\n\nclass WTP_URL_Tester {\n    const SLUG = 'wtp-url-tester';\n    const CAP  = 'edit_posts';\n    const REST_NS = 'wtp\/v1';\n    const REST_ROUTE = '\/urltester';\n\n    public function __construct() {\n        add_action('admin_menu', [$this, 'admin_menu']);\n        add_action('admin_enqueue_scripts', [$this, 'enqueue']);\n        add_action('rest_api_init', [$this, 'register_rest']);\n    }\n\n    public function admin_menu() {\n        add_menu_page(\n            'WTP URL Tester',\n            'WTP URL Tester',\n            self::CAP,\n            self::SLUG,\n            [$this, 'render_page'],\n            'dashicons-admin-links',\n            56\n        );\n    }\n\n    public function enqueue($hook) {\n        if ($hook !== 'toplevel_page_' . self::SLUG) return;\n        wp_enqueue_style(self::SLUG, plugins_url('admin.css', __FILE__), [], '1.2.1');\n        wp_enqueue_script(self::SLUG, plugins_url('admin.js', __FILE__), ['wp-api-fetch'], '1.2.1', true);\n        wp_localize_script(self::SLUG, 'WTPURLTester', [\n            'restUrl' => esc_url_raw( rest_url( self::REST_NS . self::REST_ROUTE ) ),\n            'nonce'   => wp_create_nonce('wp_rest'),\n            'home'    => home_url('\/'),\n        ]);\n    }\n\n    public function render_page() { ?>\n        <div class=\"wrap wtp-url-tester\">\n            <h1>WTP URL Tester<\/h1>\n\n            <div class=\"notice notice-info\">\n                <p>Enter relative paths (e.g., <code>\/<\/code>, <code>\/pl\/<\/code>, <code>\/sitemap_index.xml<\/code>) or absolute URLs. The tester will resolve paths against <strong><?php echo esc_html(home_url('\/')); ?><\/strong>, follow redirects (up to 10), measure response times, and optionally extract <code>hreflang<\/code> from the final page.<\/p>\n            <\/div>\n\n            <label for=\"wtp-urls\" class=\"screen-reader-text\">Paths or URLs<\/label>\n            <textarea id=\"wtp-urls\" rows=\"6\" placeholder=\"\/\n\/pl\/\n\/sitemap_index.xml\"><\/textarea>\n\n            <p class=\"checkbox\">\n                <label><input type=\"checkbox\" id=\"wtp-hreflang\" \/> Extract hreflang tags from the final page (if HTML)<\/label>\n            <\/p>\n\n            <p class=\"actions\">\n                <button id=\"wtp-run\" class=\"button button-primary\">Test URLs<\/button>\n                <button id=\"wtp-download\" class=\"button\" disabled>Download JSON<\/button>\n                <button id=\"wtp-selftest\" class=\"button\">REST self-test<\/button>\n                <span id=\"wtp-status\" class=\"status\"><\/span>\n            <\/p>\n\n            <div id=\"wtp-selftest-result\" class=\"selftest hidden\"><\/div>\n\n            <div id=\"wtp-results\" class=\"results is-empty\">\n                <table class=\"widefat fixed striped\">\n                    <thead>\n                        <tr>\n                            <th>Input<\/th>\n                            <th>Final URL<\/th>\n                            <th>Status<\/th>\n                            <th class=\"col-time\">Time (ms)<\/th>\n                            <th class=\"col-chain\">Redirects<\/th>\n                            <th class=\"col-hreflang\">Hreflang (count)<\/th>\n                        <\/tr>\n                    <\/thead>\n                    <tbody><\/tbody>\n                <\/table>\n            <\/div>\n\n            <p class=\"help\">\n                REST: <code><?php echo esc_html( rest_url( self::REST_NS . self::REST_ROUTE ) ); ?><\/code><br>\n                Method: <code>POST<\/code>, Body: <code>{\"urls\":[\"\/\",\"\/pl\/\"],\"hreflang\":true}<\/code> (requires capability <code><?php echo esc_html(self::CAP); ?><\/code>)\n            <\/p>\n        <\/div>\n    <?php }\n\n    public function register_rest() {\n        register_rest_route(self::REST_NS, self::REST_ROUTE, [\n            'methods'  => 'POST',\n            'callback' => [$this, 'rest_test_urls'],\n            'permission_callback' => function() {\n                return current_user_can(self::CAP);\n            }\n        ]);\n    }\n\n    private function is_absolute_url($url) {\n        return (bool) preg_match('#^https?:\/\/#i', $url);\n    }\n\n    private function resolve_url($input) {\n        $input = trim($input);\n        if ($input === '') return '';\n        if ($this->is_absolute_url($input)) return $input;\n        $home = home_url('\/');\n        if ($input[0] === '\/') {\n            return esc_url_raw( rtrim($home, '\/') . $input );\n        }\n        return esc_url_raw( $home . ltrim($input, '\/') );\n    }\n\n    private function fetch_once($url, $method='GET') {\n        $start = microtime(true);\n        $resp = wp_remote_request($url, [\n            'method' => $method,\n            'timeout' => 10,\n            'redirection' => 0,\n            'headers' => [\n                'User-Agent' => 'WTP-URL-Tester\/1.2.1 (+'.home_url('\/').')'\n            ]\n        ]);\n        $elapsed = (int) round((microtime(true) - $start) * 1000);\n        if (is_wp_error($resp)) {\n            return [\n                'error' => $resp->get_error_message(),\n                'time_ms' => $elapsed,\n                'status' => 0,\n                'headers' => []\n            ];\n        }\n        return [\n            'response' => $resp,\n            'time_ms'  => $elapsed,\n            'status'   => intval(wp_remote_retrieve_response_code($resp)),\n            'headers'  => wp_remote_retrieve_headers($resp),\n            'body'     => wp_remote_retrieve_body($resp),\n        ];\n    }\n\n    private function follow_redirects($url, $max=10) {\n        $chain = [];\n        $total_time = 0;\n        $current = $url;\n        for ($i=0; $i<$max; $i++) {\n            $res = $this->fetch_once($current, 'GET');\n            $time = isset($res['time_ms']) ? intval($res['time_ms']) : 0;\n            $total_time += $time;\n            $status = isset($res['status']) ? intval($res['status']) : 0;\n            $location = '';\n            if (isset($res['headers']['location'])) {\n                $location = $res['headers']['location'];\n                if (! $this->is_absolute_url($location)) {\n                    $p = wp_parse_url($current);\n                    $scheme = isset($p['scheme']) ? $p['scheme'] : 'https';\n                    $host = $p['host'];\n                    $port = isset($p['port']) ? ':'.$p['port'] : '';\n                    if (strpos($location, '\/') === 0) {\n                        $location = $scheme.':\/\/'.$host.$port.$location;\n                    } else {\n                        $base = trailingslashit($current);\n                        $location = $base . ltrim($location, '\/');\n                    }\n                }\n            }\n            $chain[] = [\n                'url' => $current,\n                'status' => $status,\n                'time_ms' => $time,\n                'location' => $location,\n            ];\n            if ($status >= 300 && $status < 400 && !empty($location)) {\n                $current = $location;\n                continue;\n            }\n            $final = $current;\n            $body  = isset($res['body']) ? $res['body'] : '';\n            return [\n                'final_url' => $final,\n                'status' => $status,\n                'total_time_ms' => $total_time,\n                'chain' => $chain,\n                'body' => $body,\n                'error' => isset($res['error']) ? $res['error'] : null\n            ];\n        }\n        return [\n            'final_url' => $current,\n            'status' => 310,\n            'total_time_ms' => $total_time,\n            'chain' => $chain,\n            'body' => '',\n            'error' => 'Too many redirects'\n        ];\n    }\n\n    private function parse_hreflang($html) {\n        $out = [];\n        if (!is_string($html) || $html === '') return $out;\n        if (preg_match_all('#<link[^>]+rel=[\"\\']alternate[\"\\'][^>]*>#i', $html, $links)) {\n            foreach ($links[0] as $tag) {\n                $hreflang = '';\n                $href = '';\n                if (preg_match('#hreflang=[\"\\']([^\"\\']+)#i', $tag, $m1)) $hreflang = trim($m1[1]);\n                if (preg_match('#href=[\"\\']([^\"\\']+)#i', $tag, $m2)) $href = trim($m2[1]);\n                if ($hreflang && $href) $out[] = ['hreflang' => $hreflang, 'href' => $href];\n            }\n        }\n        return $out;\n    }\n\n    public function rest_test_urls(\\WP_REST_Request $req) {\n        $urls = $req->get_param('urls');\n        $want_hreflang = (bool) $req->get_param('hreflang');\n        if (!is_array($urls) || empty($urls)) {\n            return new \\WP_Error('bad_request', 'Provide non-empty array of URLs', ['status' => 400]);\n        }\n        $results = [];\n        foreach ($urls as $raw) {\n            $input = trim((string)$raw);\n            if ($input === '') continue;\n            $resolved = $this->resolve_url($input);\n            $follow = $this->follow_redirects($resolved, 10);\n            $entry = [\n                'input' => $input,\n                'resolved' => $resolved,\n                'final_url' => $follow['final_url'],\n                'status' => $follow['status'],\n                'time_ms' => $follow['total_time_ms'],\n                'chain' => $follow['chain'],\n                'error' => $follow['error'],\n            ];\n            if ($want_hreflang && $follow['status'] == 200 && !empty($follow['body'])) {\n                $entry['hreflang'] = $this->parse_hreflang($follow['body']);\n            }\n            $results[] = $entry;\n        }\n        return [\n            'site' => home_url('\/'),\n            'generated_at' => gmdate('c'),\n            'hreflang' => $want_hreflang,\n            'count' => count($results),\n            'results' => $results\n        ];\n    }\n}\n\nnew WTP_URL_Tester();\n"},{"base":"plugins","rel":"wtp-url-tester\/admin.js","ext":"js","size":3757,"mtime":1757312769,"type":"text","content":"(function(){\n  const $ = (sel)=>document.querySelector(sel);\n\n  function parseTextarea(val){ return val.split(\/\\r?\\n\/).map(s=>s.trim()).filter(Boolean); }\n  function setStatus(msg){ $('#wtp-status').textContent = msg || ''; }\n\n  async function postJson(url, body){\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {'Content-Type':'application\/json','X-WP-Nonce': WTPURLTester.nonce},\n      body: JSON.stringify(body||{})\n    });\n    if (!res.ok){ throw new Error('REST '+res.status+': '+await res.text()); }\n    return res.json();\n  }\n\n  async function run(){\n    const urls = parseTextarea($('#wtp-urls').value);\n    if (!urls.length){ alert('Please enter at least one URL path or absolute URL.'); return; }\n    setStatus('Running\u2026'); $('#wtp-download').disabled = true;\n    try {\n      const data = await postJson(WTPURLTester.restUrl, { urls, hreflang: $('#wtp-hreflang').checked });\n      render(data); window._wtp_last_json = data; $('#wtp-download').disabled = false; setStatus('Done');\n    } catch(e){ console.error(e); alert(e.message||e); setStatus('Error'); }\n  }\n\n  function render(data){\n    const tbody = document.querySelector('#wtp-results tbody'); tbody.innerHTML='';\n    (data.results||[]).forEach(r=>{\n      const tr = document.createElement('tr');\n      tr.innerHTML = `\n        <td><code>${esc(r.input)}<\/code><\/td>\n        <td><a href=\"${attr(r.final_url)}\" target=\"_blank\" rel=\"noopener\">${esc(r.final_url)}<\/a><\/td>\n        <td class=\"${r.status===200?'ok':'fail'}\">${r.status}<\/td>\n        <td class=\"col-time\">${r.time_ms ?? ''}<\/td>\n        <td class=\"col-chain\">${(r.chain||[]).map(c=>`${c.status} \u2192 ${esc(c.location||'')}`).join('<br>')}<\/td>\n        <td class=\"col-hreflang\">${(r.hreflang||[]).length||''}<\/td>`;\n      tbody.appendChild(tr);\n    });\n    document.querySelector('#wtp-results').classList.toggle('is-empty',(data.results||[]).length===0);\n  }\n\n  function esc(s){ return String(s||'').replace(\/[&<>\"']\/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;'}[m])); }\n  function attr(s){ return esc(s).replace(\/\"\/g,'&quot;'); }\n\n  function download(){\n    const data = window._wtp_last_json; if (!data){ alert('Run a test first.'); return; }\n    const blob = new Blob([JSON.stringify(data,null,2)],{type:'application\/json'});\n    const url = URL.createObjectURL(blob); const a = document.createElement('a');\n    a.href = url; a.download = `wtp-url-tester-results-${new Date().toISOString().replace(\/[:.]\/g,'-')}.json`;\n    document.body.appendChild(a); a.click(); setTimeout(()=>{ URL.revokeObjectURL(url); a.remove(); },0);\n  }\n\n  async function selftest(){\n    setStatus('Self-testing\u2026'); const el = $('#wtp-selftest-result'); el.classList.add('hidden'); el.classList.remove('error');\n    try {\n      const data = await postJson(WTPURLTester.restUrl, { urls: ['\/','\/robots.txt'], hreflang: false });\n      const ok = data && data.results && data.results.length===2 && data.results.every(r=>typeof r.status==='number');\n      el.textContent = ok ? 'REST self-test: PASS (endpoint responds to POST with valid JSON).' : 'REST self-test: FAIL (unexpected response).';\n      el.classList.toggle('error', !ok); el.classList.remove('hidden'); setStatus('Done');\n    } catch(e){\n      el.textContent = 'REST self-test: FAIL \u2014 ' + (e.message||e);\n      el.classList.add('error'); el.classList.remove('hidden'); setStatus('Error');\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', function(){\n    $('#wtp-run').addEventListener('click', run);\n    $('#wtp-download').addEventListener('click', download);\n    $('#wtp-selftest').addEventListener('click', selftest);\n    if (!$('#wtp-urls').value.trim()){ $('#wtp-urls').value = \"\/\\n\/pl\/\\n\/sitemap_index.xml\\n\/robots.txt\"; }\n  });\n})();"},{"base":"plugins","rel":"wtp-url-tester\/admin.css","ext":"css","size":854,"mtime":1757312769,"type":"text","content":"\/* Mobile-first *\/\n.wtp-url-tester textarea#wtp-urls { width: 100%; max-width: 900px; }\n.wtp-url-tester .checkbox { margin-top: 8px; }\n.wtp-url-tester .actions { margin-top: 8px; }\n.wtp-url-tester .actions .status { margin-left: 8px; opacity: .8; }\n.wtp-url-tester .results { margin-top: 12px; }\n.wtp-url-tester .results.is-empty { display:none; }\n.wtp-url-tester table.widefat td.ok { color: #25821b; font-weight: 600; }\n.wtp-url-tester table.widefat td.fail { color: #b32d2e; font-weight: 600; }\n.wtp-url-tester .selftest { margin-top: 10px; padding: 10px; border-left: 4px solid #46b450; background: #f6fff5; }\n.wtp-url-tester .selftest.error { border-color: #b32d2e; background: #fff5f5; }\n.wtp-url-tester .selftest.hidden { display: none; }\n@media (max-width: 782px) {\n  .wtp-url-tester .col-chain, .wtp-url-tester .col-hreflang { display: none; }\n}"},{"base":"plugins","rel":"wtp-url-tester\/readme.txt","ext":"txt","size":308,"mtime":1757312769,"type":"text","content":"WTP URL Tester v1.2.1\n======================\nAdds a one-click \"REST self-test\" in the admin screen.\n\nREST:\nPOST \/wp-json\/wtp\/v1\/urltester\nBody: {\"urls\":[\"\/\",\"\/pl\/\"], \"hreflang\": true}\nRequires capability: edit_posts\n\nAdmin UI:\n- Test URLs\n- Download JSON\n- REST self-test (verifies POST endpoint end-to-end)\n"},{"base":"plugins","rel":"WTP-AI-Remediator\/wtp-AI-remediator.php","ext":"php","size":18446,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Plugin Name: WTP AI Remediator\n * Description: Analyze & patch files with OpenAI. Dry-run, preview, backup & restore. Auto mode: skanuje logi, proponuje poprawki, mo\u017ce auto-stosowa\u0107 z rollbackiem po nieudanym healthchecku.\n * Version: 0.2.1\n * Author: WTP\n *\/\nif (!defined('ABSPATH')) exit;\n\ndefine('WTP_AIR_VER','0.2.1');\n\n\/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Helpers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 *\/\nfunction wtp_air_bases() {\n  return [\n    'theme'   => get_stylesheet_directory(),\n    'plugins' => WP_PLUGIN_DIR,\n    'mu'      => defined('WPMU_PLUGIN_DIR') ? WPMU_PLUGIN_DIR : WP_CONTENT_DIR.'\/mu-plugins',\n  ];\n}\nfunction wtp_air_settings(){\n  $opt = get_option('wtp_air_settings',[]);\n  $def = [\n    'api_base'   => 'https:\/\/api.openai.com\/v1',\n    'api_key'    => '',\n    'model'      => 'gpt-4o-mini',\n    'auto_mode'  => 0,      \/\/ 0 off, 1 propose, 2 auto-apply\n    'scan_every' => 5,      \/\/ minutes\n    'log_php'    => '\/home\/u493676300\/php_errors.log',\n    'log_wp'     => WP_CONTENT_DIR.'\/debug.log',\n    'health_url' => home_url('\/?wtp-air-health=1'),\n  ];\n  return wp_parse_args($opt,$def);\n}\nfunction wtp_air_resolve($base,$rel){\n  $bases=wtp_air_bases();\n  if(!isset($bases[$base])) return [null,'Invalid base'];\n  $root=wp_normalize_path($bases[$base]);\n  $rel =ltrim(str_replace('\\\\','\/',$rel),'\/');\n  $abs =wp_normalize_path(trailingslashit($root).$rel);\n  if(strpos($abs,$root)!==0) return [null,'Traversal'];\n  return [$abs,null];\n}\nfunction wtp_air_list_files($base,$filter='',$limit=1000){\n  $out=[]; $bases=wtp_air_bases();\n  if(!isset($bases[$base])) return $out;\n  $root=trailingslashit($bases[$base]);\n  try{\n    $it=new RecursiveIteratorIterator(new RecursiveDirectoryIterator($root,FilesystemIterator::SKIP_DOTS));\n    foreach($it as $f){\n      if(!$f->isFile()) continue;\n      $p=wp_normalize_path($f->getPathname());\n      $rel=ltrim(str_replace($root,'',$p),'\/');\n      if($filter && stripos($rel,$filter)===false) continue;\n      if(preg_match('#^uploads\/#',$rel)) continue;\n      if(preg_match('#\\.(log|zip|png|jpg|gif|webp|svg|ico|map)$#i',$rel)) continue;\n      $out[]=$rel; if(count($out)>=$limit) break;\n    }\n    sort($out);\n  }catch(Throwable $e){}\n  return $out;\n}\nfunction wtp_air_backup($abs){\n  $dir=WP_CONTENT_DIR.'\/uploads\/wtp-air-backups';\n  if(!is_dir($dir)) wp_mkdir_p($dir);\n  $tag=function_exists('wp_date')?wp_date('Ymd_His'):date('Ymd_His');\n  $dst=trailingslashit($dir).sanitize_file_name(basename($abs).'-'.$tag.'.bak');\n  @copy($abs,$dst);\n  return $dst;\n}\nfunction wtp_air_tail($file,$lines=200){\n  $f=@fopen($file,'rb'); if(!$f) return '';\n  $buf=''; $pos=-1; $cnt=0; fseek($f,0,SEEK_END); $size=ftell($f);\n  while($cnt<$lines && -$pos<$size){ $pos--; fseek($f,$pos,SEEK_END); $c=fgetc($f); if($c===\"\\n\") $cnt++; $buf=$c.$buf; }\n  fclose($f); return $buf;\n}\nfunction wtp_air_collect_logs($s,$tail=200){\n  $buf='';\n  foreach(['log_php','log_wp'] as $k){\n    $file=$s[$k]??''; if($file && @is_file($file) && @is_readable($file)){\n      $buf.=\"=== \".$k.\" (\".$file.\") ===\\n\";\n      $buf.=wtp_air_tail($file,$tail).\"\\n\\n\";\n    }\n  }\n  return $buf;\n}\nfunction wtp_air_healthcheck($url){\n  if(!$url) return false;\n  $res=wp_remote_get($url,['timeout'=>10,'sslverify'=>false]);\n  if(is_wp_error($res)) return false;\n  $code=wp_remote_retrieve_response_code($res);\n  if($code!=200) return false;\n  $body=wp_remote_retrieve_body($res);\n  return (strpos($body,'data-wtp-air=\"ok\"')!==false)|| (strpos($body,'<html')!==false);\n}\nfunction wtp_air_call_ai($settings,$base,$rel,$current_code,$notes){\n  $api=trailingslashit($settings['api_base']).'chat\/completions';\n  $key=$settings['api_key']; $model=$settings['model'];\n  if(empty($key)) return ['ok'=>false,'error'=>'API key missing'];\n  $sys=\"You are a senior WordPress\/PHP engineer. Given a single source file and context notes (errors from logs), produce a corrected FULL file content. Keep style and plugin headers. Output only the corrected file content, no explanations.\";\n  $usr=\"Base: {$base}\\nRel: {$rel}\\nNotes:\\n{$notes}\\n\\n---FILE START---\\n{$current_code}\\n---FILE END---\";\n  $body=[\n    \"model\"=>$model,\n    \"messages\"=>[\n      [\"role\"=>\"system\",\"content\"=>$sys],\n      [\"role\"=>\"user\",\"content\"=>$usr],\n    ],\n    \"temperature\"=>0.1,\n    \"max_tokens\"=>4096\n  ];\n  $args=['headers'=>[\n      'Authorization'=>'Bearer '.$key,\n      'Content-Type'=>'application\/json'\n    ],\n    'body'=>json_encode($body),'timeout'=>60\n  ];\n  $res=wp_remote_post($api,$args);\n  if(is_wp_error($res)) return ['ok'=>false,'error'=>$res->get_error_message()];\n  $code=wp_remote_retrieve_response_code($res);\n  $json=json_decode(wp_remote_retrieve_body($res),true);\n  if($code<200||$code>=300){\n    $err=$json['error']['message']??('HTTP '.$code);\n    return ['ok'=>false,'error'=>$err];\n  }\n  $text=$json['choices'][0]['message']['content']??'';\n  if(preg_match('~^```(?:php)?\\s*(.+?)```~s',$text,$m)) $text=$m[1];\n  return ['ok'=>true,'proposal'=>$text];\n}\n\n\/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Menu & Settings \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 *\/\nadd_action('admin_menu', function(){\n  add_management_page('WTP AI Remediator','WTP AI Remediator','manage_options','wtp-ai-remediator','wtp_air_render_admin');\n});\nadd_action('admin_init', function(){ register_setting('wtp_air','wtp_air_settings'); });\n\n\/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Cron \/ Auto mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 *\/\nadd_filter('cron_schedules', function($s){\n  $s['five_minutes']=['interval'=>300,'display'=>'Every 5 minutes']; return $s;\n});\nregister_activation_hook(__FILE__, function(){\n  if(!wp_next_scheduled('wtp_air_cron_tick')) wp_schedule_event(time()+60,'five_minutes','wtp_air_cron_tick');\n});\nregister_deactivation_hook(__FILE__, function(){ wp_clear_scheduled_hook('wtp_air_cron_tick'); });\nadd_action('wtp_air_cron_tick', function(){\n  $s=wtp_air_settings(); if(empty($s['auto_mode'])) return;\n  $last=(int)get_option('wtp_air_last_scan',0);\n  if(time()-$last < max(60,intval($s['scan_every'])*60)) return;\n  update_option('wtp_air_last_scan',time(),false);\n  wtp_air_scan_and_remediate($s);\n});\nfunction wtp_air_scan_and_remediate($s,$force=false){\n  $logs=wtp_air_collect_logs($s,200); if(!$logs) return 'no logs';\n  if(!preg_match('~Fatal error: .* in .*?\/wp-content\/(themes|plugins)\/[^\\s:]+~i',$logs,$pm)) return 'no fatal found';\n  $path=$pm[0]; $is_theme=strpos($path,'\/themes\/')!==false;\n  $base=$is_theme?'theme':'plugins';\n  $root=$is_theme?get_stylesheet_directory():WP_PLUGIN_DIR;\n  $m=preg_match('~\/wp-content\/(themes|plugins)\/(.+)~',$path,$mm); if(!$m) return 'no path';\n  $abs=ABSPATH.$mm[1]; $rel=ltrim(str_replace(wp_normalize_path(trailingslashit($root)),'',wp_normalize_path($abs)),'\/');\n  list($resolved,$err)=wtp_air_resolve($base,$rel); if($err||!is_file($resolved)) return 'path not resolvable';\n  $code=file_get_contents($resolved);\n  $notes=\"Auto-mode detected fatal. Log tail:\\n\".mb_substr($logs,-5000);\n  $ai=wtp_air_call_ai($s,$base,$rel,$code,$notes);\n  if(!$ai['ok']) return 'ai error: '.$ai['error'];\n  update_option('wtp_air_last_ai',['time'=>time(),'base'=>$base,'rel'=>$rel,'orig_md5'=>md5($code),'proposal'=>$ai['proposal']],false);\n  if(intval($s['auto_mode'])===2){\n    $bak=wtp_air_backup($resolved);\n    $ok=@file_put_contents($resolved,(string)$ai['proposal']);\n    if($ok===false) return 'write failed';\n    $good=wtp_air_healthcheck($s['health_url']);\n    if(!$good){ @copy($bak,$resolved); return 'applied then rolled back (healthcheck failed)'; }\n    return 'applied (healthcheck ok)';\n  }\n  return 'proposal queued';\n}\n\n\/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Health endpoint \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 *\/\nadd_action('init', function(){\n  if(isset($_GET['wtp-air-health'])){\n    add_action('wp_head', function(){ echo '<meta data-wtp-air=\"ok\" \/>'; });\n    status_header(200); exit;\n  }\n});\n\n\/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 One-click hotfix (j\u0119zyki) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 *\/\nfunction wtp_air_hotfix_langs(){\n  $fn=wp_normalize_path(trailingslashit(get_stylesheet_directory()).'functions.php');\n  if(!@is_file($fn) || !@is_readable($fn)) return ['ok'=>false,'error'=>'functions.php not found'];\n  $code=@file_get_contents($fn); if($code===false) return ['ok'=>false,'error'=>'read failed'];\n  if(strpos($code,'WTP Language guards')!==false) return ['ok'=>true,'backup'=>'(already)'];\n  $guard = <<<'PHP'\n\n\/\/ --- WTP Language guards & defaults (auto) ---------------------\nif (!isset($WTP_LANGS) || !is_array($WTP_LANGS)) {\n    $WTP_LANGS = [\n        'pl' => 'Polski',\n        'en' => 'English',\n        'es' => 'Espa\u00f1ol',\n        'pt' => 'Portugu\u00eas',\n        'cs' => '\u010ce\u0161tina',\n        'sk' => 'Sloven\u010dina',\n        'de' => 'Deutsch',\n        'fr' => 'Fran\u00e7ais',\n    ];\n}\nif (!isset($WTP_LABELS) || !is_array($WTP_LABELS)) {\n    $WTP_LABELS = $WTP_LANGS;\n}\n$WTP_LANG_KEYS = array_keys($WTP_LANGS);\n\/\/ ---------------------------------------------------------------\n\nPHP;\n  $pos=strpos($code,'<?php'); $pos = ($pos===false)?0:$pos+5;\n  $new=substr($code,0,$pos).$guard.substr($code,$pos);\n  $bak=wtp_air_backup($fn);\n  $ok=@file_put_contents($fn,$new);\n  if($ok===false) return ['ok'=>false,'error'=>'write failed'];\n  return ['ok'=>true,'backup'=>basename($bak)];\n}\n\n\/* \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Admin UI \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 *\/\nfunction wtp_air_render_admin(){\n  if(!current_user_can('manage_options')) wp_die('Forbidden',403);\n  $s=wtp_air_settings(); $bases=wtp_air_bases(); $msg='';\n  if($_SERVER['REQUEST_METHOD']==='POST' && isset($_POST['_wpnonce']) && wp_verify_nonce($_POST['_wpnonce'],'wtp_air')){\n    if(isset($_POST['save_settings'])){\n      $new=[\n        'api_base'=>sanitize_text_field($_POST['api_base']??''),\n        'api_key'=>sanitize_text_field($_POST['api_key']??''),\n        'model'=>sanitize_text_field($_POST['model']??''),\n        'auto_mode'=>intval($_POST['auto_mode']??0),\n        'scan_every'=>intval($_POST['scan_every']??5),\n        'log_php'=>sanitize_text_field($_POST['log_php']??''),\n        'log_wp'=>sanitize_text_field($_POST['log_wp']??''),\n        'health_url'=>esc_url_raw($_POST['health_url']??home_url('\/?wtp-air-health=1')),\n      ];\n      update_option('wtp_air_settings',$new);\n      $s=wtp_air_settings(); $msg='Settings saved.';\n    }\n    if(isset($_POST['apply_hotfix'])){\n      $res=wtp_air_hotfix_langs();\n      $msg=$res['ok']?('Hotfix applied. Backup: '.$res['backup']):('Hotfix error: '.$res['error']);\n    }\n    if(isset($_POST['attach_logs'])){\n      $logs=wtp_air_collect_logs($s,200);\n      update_option('wtp_air_attached_logs',$logs,false);\n      $msg='Attached last log tail.';\n    }\n    if(isset($_POST['analyze']) || isset($_POST['apply_ai'])){\n      $base=sanitize_text_field($_POST['base']??'theme');\n      $rel =sanitize_text_field($_POST['rel']??'');\n      $notes=(string)($_POST['notes']??'');\n      $attached=get_option('wtp_air_attached_logs','');\n      if($attached && strpos($notes,'[logs]')===false){ $notes.=\"\\n\\n[logs]\\n\".$attached; }\n      list($abs,$err)=wtp_air_resolve($base,$rel);\n      if($err){ $msg='Path error: '.$err; }\n      else{\n        $current=@is_file($abs)?@file_get_contents($abs):'';\n        if(isset($_POST['analyze'])){\n          $ai=wtp_air_call_ai($s,$base,$rel,$current,$notes);\n          if($ai['ok']){\n            update_option('wtp_air_last_ai',[\n              'time'=>time(),'base'=>$base,'rel'=>$rel,'orig_md5'=>md5($current),'proposal'=>$ai['proposal']\n            ],false);\n            $msg='AI proposal ready.';\n          }else $msg='AI error: '.$ai['error'];\n        }\n        if(isset($_POST['apply_ai'])){\n          $last=get_option('wtp_air_last_ai',null);\n          if($last && $last['base']===$base && $last['rel']===$rel){\n            $bak=wtp_air_backup($abs);\n            $ok=@file_put_contents($abs,(string)$last['proposal']);\n            if($ok!==false) $msg='Saved. Backup: '.basename($bak);\n            else $msg='Write failed.';\n          } else $msg='No AI proposal cached. Analyze first.';\n        }\n      }\n    }\n    if(isset($_POST['run_scan_now'])){\n      $rep=wtp_air_scan_and_remediate($s,true);\n      $msg='Scan done: '.$rep;\n    }\n  }\n\n  $base=sanitize_text_field($_GET['base']??'theme');\n  $rel =sanitize_text_field($_GET['rel']??'');\n  $filter=sanitize_text_field($_GET['q']??'');\n  $files=wtp_air_list_files($base,$filter,1000);\n  $last_ai=get_option('wtp_air_last_ai',null);\n  $attached=get_option('wtp_air_attached_logs','');\n  ?>\n  <div class=\"wrap\">\n    <h1>WTP AI Remediator <small style=\"font-size:12px;color:#666;\">v<?php echo esc_html(WTP_AIR_VER) ?><\/small><\/h1>\n    <?php if($msg): ?><div class=\"notice notice-info\"><p><?php echo esc_html($msg) ?><\/p><\/div><?php endif; ?>\n\n    <h2>Settings<\/h2>\n    <form method=\"post\"><?php wp_nonce_field('wtp_air'); ?>\n      <table class=\"form-table\">\n        <tr><th>API base<\/th><td><input type=\"text\" name=\"api_base\" value=\"<?php echo esc_attr($s['api_base']) ?>\" class=\"regular-text\"><\/td><\/tr>\n        <tr><th>Model<\/th><td><input type=\"text\" name=\"model\" value=\"<?php echo esc_attr($s['model']) ?>\" class=\"regular-text\"><\/td><\/tr>\n        <tr><th>API key<\/th><td><input type=\"password\" name=\"api_key\" value=\"<?php echo esc_attr($s['api_key']) ?>\" class=\"regular-text\" autocomplete=\"off\"><\/td><\/tr>\n        <tr><th>Auto mode<\/th><td>\n          <select name=\"auto_mode\">\n            <option value=\"0\" <?php selected(0,$s['auto_mode']) ?>>Off<\/option>\n            <option value=\"1\" <?php selected(1,$s['auto_mode']) ?>>Propose only (queue)<\/option>\n            <option value=\"2\" <?php selected(2,$s['auto_mode']) ?>>Auto-apply (healthcheck+rollback)<\/option>\n          <\/select>\n        <\/td><\/tr>\n        <tr><th>Scan every (min)<\/th><td><input type=\"number\" name=\"scan_every\" value=\"<?php echo esc_attr($s['scan_every']) ?>\" min=\"1\" max=\"60\"><\/td><\/tr>\n        <tr><th>PHP error log<\/th><td><input type=\"text\" name=\"log_php\" value=\"<?php echo esc_attr($s['log_php']) ?>\" class=\"regular-text\"><\/td><\/tr>\n        <tr><th>WP debug log<\/th><td><input type=\"text\" name=\"log_wp\" value=\"<?php echo esc_attr($s['log_wp']) ?>\" class=\"regular-text\"><\/td><\/tr>\n        <tr><th>Health URL<\/th><td><input type=\"text\" name=\"health_url\" value=\"<?php echo esc_attr($s['health_url']) ?>\" class=\"regular-text\"><\/td><\/tr>\n      <\/table>\n      <p><button class=\"button button-primary\" name=\"save_settings\" value=\"1\">Save settings<\/button><\/p>\n    <\/form>\n\n    <h2>Logs<\/h2>\n    <form method=\"post\"><?php wp_nonce_field('wtp_air'); ?>\n      <button class=\"button\" name=\"attach_logs\" value=\"1\">Attach last 200 lines (auto)<\/button>\n      <button class=\"button\" name=\"run_scan_now\" value=\"1\">Run scan now<\/button>\n    <\/form>\n    <?php if($attached): ?>\n      <p><strong>Attached logs preview:<\/strong><\/p>\n      <textarea rows=\"8\" style=\"width:100%;font-family:monospace;\"><?php echo esc_textarea(mb_substr($attached,-4000)) ?><\/textarea>\n    <?php endif; ?>\n\n    <h2>One-click Hotfix<\/h2>\n    <form method=\"post\"><?php wp_nonce_field('wtp_air'); ?>\n      <button class=\"button\" name=\"apply_hotfix\" value=\"1\">Apply language guards in functions.php<\/button>\n    <\/form>\n\n    <hr>\n    <h2>Analyze & Propose Fix<\/h2>\n    <form method=\"get\" action=\"\">\n      <input type=\"hidden\" name=\"page\" value=\"wtp-ai-remediator\">\n      <label><strong>Base:<\/strong>\n        <select name=\"base\">\n          <?php foreach(wtp_air_bases() as $k=>$p): ?>\n            <option value=\"<?php echo esc_attr($k) ?>\" <?php selected($k,$base) ?>><?php echo esc_html($k.' \u2014 '.$p) ?><\/option>\n          <?php endforeach; ?>\n        <\/select>\n      <\/label>\n      &nbsp;\n      <label><strong>Filter:<\/strong> <input type=\"text\" name=\"q\" value=\"<?php echo esc_attr($filter) ?>\" placeholder=\"functions.php or .php\"><\/label>\n      <button class=\"button\">Search<\/button>\n      <br><br>\n      <label style=\"min-width:520px;display:block;\"><strong>File:<\/strong>\n        <select name=\"rel\" style=\"min-width:520px\">\n          <?php foreach($files as $f): ?>\n            <option value=\"<?php echo esc_attr($f) ?>\" <?php selected($f,$rel) ?>><?php echo esc_html($f) ?><\/option>\n          <?php endforeach; ?>\n        <\/select>\n      <\/label>\n    <\/form>\n\n    <?php if($rel):\n      list($abs,$err)=wtp_air_resolve($base,$rel);\n      $current=(!$err && is_file($abs))?file_get_contents($abs):'';\n    ?>\n      <h3>Selected: <code><?php echo esc_html($rel) ?><\/code><\/h3>\n      <form method=\"post\">\n        <?php wp_nonce_field('wtp_air'); ?>\n        <input type=\"hidden\" name=\"base\" value=\"<?php echo esc_attr($base) ?>\">\n        <input type=\"hidden\" name=\"rel\"  value=\"<?php echo esc_attr($rel) ?>\">\n        <p><label><strong>Notes (logs auto-attached):<\/strong><br>\n          <textarea name=\"notes\" rows=\"6\" style=\"width:100%\" placeholder=\"Add context; or just click Attach logs wy\u017cej.\"><\/textarea><\/label><\/p>\n        <p>\n          <label><input type=\"checkbox\" name=\"dryrun\" value=\"1\" checked> Dry-run (preview only)<\/label>\n          <button class=\"button button-primary\" name=\"analyze\" value=\"1\">Analyze with AI<\/button>\n        <\/p>\n      <\/form>\n\n      <?php $last_ai=get_option('wtp_air_last_ai',null);\n      if($last_ai && $last_ai['rel']===$rel && $last_ai['base']===$base): ?>\n        <h3>AI Proposal (preview)<\/h3>\n        <div style=\"display:flex;gap:16px;flex-wrap:wrap\">\n          <div style=\"flex:1 1 360px;min-width:320px\">\n            <h4>Current<\/h4>\n            <textarea rows=\"18\" style=\"width:100%;font-family:monospace;\"><?php echo esc_textarea($current) ?><\/textarea>\n          <\/div>\n          <div style=\"flex:1 1 360px;min-width:320px\">\n            <h4>Proposed<\/h4>\n            <textarea rows=\"18\" style=\"width:100%;font-family:monospace;\"><?php echo esc_textarea($last_ai['proposal']) ?><\/textarea>\n          <\/div>\n        <\/div>\n        <form method=\"post\">\n          <?php wp_nonce_field('wtp_air'); ?>\n          <input type=\"hidden\" name=\"base\" value=\"<?php echo esc_attr($base) ?>\">\n          <input type=\"hidden\" name=\"rel\"  value=\"<?php echo esc_attr($rel) ?>\">\n          <button class=\"button button-primary\" name=\"apply_ai\" value=\"1\">Apply proposed fix (backup + write)<\/button>\n        <\/form>\n      <?php endif; ?>\n\n    <?php endif; ?>\n\n    <hr>\n    <h2>Selftest<\/h2>\n    <p>Wejd\u017a na: <code>\/?wtp-air-health=1<\/code> \u2014 je\u015bli 200 + w \u017ar\u00f3dle meta <code>data-wtp-air=\"ok\"<\/code>, to jest OK.<\/p>\n  <\/div>\n  <?php\n}"},{"base":"plugins","rel":"wtp-hello-world\/wtp-hello-world.php","ext":"php","size":319,"mtime":1757332265,"type":"text","content":"<?php\n\/*\nPlugin Name: WTP Hello World\nDescription: Testowa wtyczka Hello World dla WeekTopPick.\nVersion: 1.0.0\nAuthor: WeekTopPick Autopilot\n*\/\nif (!defined('ABSPATH')) exit;\nadd_action('admin_notices', function(){\n    echo '<div class=\"notice notice-success\"><p><strong>Hello World!<\/strong> from WTP.<\/p><\/div>';\n});\n"},{"base":"plugins","rel":"wtp-language-core-0.1.0\/wtp-language-core.php","ext":"php","size":10972,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Plugin Name: WTP Language Core\n * Description: Centralizes language detection & selection for WeekTopPick. Supports pinning the selected language to the first position, Accept-Language parsing, country fallback, cookie override, and a self-test endpoint. Provides a [wtp_lang_switcher] shortcode.\n * Version: 0.1.0\n * Author: WTP\n *\/\n\nif (!defined('ABSPATH')) exit;\n\n\/* --------------------------------------------------------------------------\n * Config\n * -------------------------------------------------------------------------- *\/\nfunction wtp_langcore_supported() {\n    \/\/ label and flag (emoji for now; can be swapped to SVG\/CSS flags later)\n    return array(\n        'pl' => array('label' => 'Polski',      'flag' => '\ud83c\uddf5\ud83c\uddf1'),\n        'en' => array('label' => 'English',     'flag' => '\ud83c\uddec\ud83c\udde7'),\n        'es' => array('label' => 'Espa\u00f1ol',     'flag' => '\ud83c\uddea\ud83c\uddf8'),\n        'pt' => array('label' => 'Portugu\u00eas',   'flag' => '\ud83c\uddf5\ud83c\uddf9'),\n        'cs' => array('label' => '\u010ce\u0161tina',     'flag' => '\ud83c\udde8\ud83c\uddff'),\n        'sk' => array('label' => 'Sloven\u010dina',  'flag' => '\ud83c\uddf8\ud83c\uddf0'),\n        'de' => array('label' => 'Deutsch',     'flag' => '\ud83c\udde9\ud83c\uddea'),\n        'fr' => array('label' => 'Fran\u00e7ais',    'flag' => '\ud83c\uddeb\ud83c\uddf7'),\n    );\n}\n\nfunction wtp_langcore_default() {\n    return 'en';\n}\n\nfunction wtp_langcore_cookie_name() {\n    return 'wtp_lang';\n}\n\n\/* --------------------------------------------------------------------------\n * Helpers\n * -------------------------------------------------------------------------- *\/\nfunction wtp_langcore_is_supported($code) {\n    $langs = wtp_langcore_supported();\n    return isset($langs[$code]);\n}\n\nfunction wtp_langcore_simplify_lang($raw) {\n    \/\/ Converts \"en-US\" -> \"en\", \"pl_PL\" -> \"pl\"\n    $raw = strtolower(trim((string)$raw));\n    $raw = str_replace(array('_', '.'), '-', $raw);\n    if ($raw === '') return '';\n    $parts = explode('-', $raw);\n    return preg_replace('~[^a-z]~', '', $parts[0]);\n}\n\nfunction wtp_langcore_parse_accept_language($header) {\n    \/\/ Very simple parser: q-values are ignored; we prefer order.\n    \/\/ Example: \"pl-PL,pl;q=0.9,en-US;q=0.8,en;q=0.7\"\n    $out = array();\n    foreach (explode(',', (string)$header) as $chunk) {\n        $lang = trim(explode(';', $chunk)[0]);\n        $simp = wtp_langcore_simplify_lang($lang);\n        if ($simp !== '') $out[] = $simp;\n    }\n    return array_values(array_unique($out));\n}\n\nfunction wtp_langcore_country_guess() {\n    \/\/ Try common hosting\/CDN headers; map to language (very rough, fallback to default)\n    $country = '';\n    if (!empty($_SERVER['HTTP_CF_IPCOUNTRY'])) $country = $_SERVER['HTTP_CF_IPCOUNTRY'];\n    elseif (!empty($_SERVER['GEOIP_COUNTRY_CODE'])) $country = $_SERVER['GEOIP_COUNTRY_CODE'];\n    elseif (!empty($_SERVER['HTTP_X_APPENGINE_COUNTRY'])) $country = $_SERVER['HTTP_X_APPENGINE_COUNTRY']; \/\/ GAE\n    $country = strtoupper($country);\n    $map = array(\n        'PL' => 'pl',\n        'CZ' => 'cs',\n        'SK' => 'sk',\n        'DE' => 'de',\n        'AT' => 'de',\n        'CH' => 'de',\n        'FR' => 'fr',\n        'ES' => 'es',\n        'PT' => 'pt',\n        'BR' => 'pt',\n        'US' => 'en',\n        'GB' => 'en',\n        'IE' => 'en',\n        'AU' => 'en',\n        'NZ' => 'en',\n        'CA' => 'en',\n    );\n    return isset($map[$country]) ? $map[$country] : '';\n}\n\n\/* --------------------------------------------------------------------------\n * Get\/Set language\n * -------------------------------------------------------------------------- *\/\nfunction wtp_get_lang() {\n    static $cached = null;\n    if ($cached !== null) return $cached;\n\n    $supported = wtp_langcore_supported();\n    $default   = wtp_langcore_default();\n\n    \/\/ 1) Manual cookie override\n    $cookie = isset($_COOKIE[wtp_langcore_cookie_name()]) ? wtp_langcore_simplify_lang($_COOKIE[wtp_langcore_cookie_name()]) : '';\n    if ($cookie && isset($supported[$cookie])) {\n        return $cached = $cookie;\n    }\n\n    \/\/ 2) Accept-Language header\n    $al = isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) ? $_SERVER['HTTP_ACCEPT_LANGUAGE'] : '';\n    foreach (wtp_langcore_parse_accept_language($al) as $lang) {\n        if (isset($supported[$lang])) return $cached = $lang;\n    }\n\n    \/\/ 3) Country guess\n    $guess = wtp_langcore_country_guess();\n    if ($guess && isset($supported[$guess])) return $cached = $guess;\n\n    \/\/ 4) Fallback\n    return $cached = $default;\n}\n\nfunction wtp_set_lang($code) {\n    $code = wtp_langcore_simplify_lang($code);\n    if (!wtp_langcore_is_supported($code)) return false;\n    \/\/ 180 days\n    $ttl = time() + 60*60*24*180;\n    $secure = is_ssl();\n    setcookie(wtp_langcore_cookie_name(), $code, $ttl, COOKIEPATH ?: '\/', COOKIE_DOMAIN ?: '', $secure, true);\n    $_COOKIE[wtp_langcore_cookie_name()] = $code; \/\/ update runtime\n    return true;\n}\n\n\/* --------------------------------------------------------------------------\n * Init: handle ?wtp-set-lang=xx (with nonce)\n * -------------------------------------------------------------------------- *\/\nadd_action('init', function () {\n    if (!empty($_GET['wtp-set-lang'])) {\n        $code = wtp_langcore_simplify_lang($_GET['wtp-set-lang']);\n        \/\/ Nonce is optional but recommended; if present, verify\n        if (!empty($_GET['_wpnonce'])) {\n            if (!wp_verify_nonce($_GET['_wpnonce'], 'wtp_langcore_set')) {\n                \/\/ Nonce invalid \u2192 ignore and continue\n                return;\n            }\n        }\n        if (wtp_set_lang($code)) {\n            \/\/ Redirect back without query to avoid duplicate actions\n            $url = remove_query_arg(array('wtp-set-lang','_wpnonce'));\n            if (empty($url)) $url = home_url('\/');\n            wp_safe_redirect($url);\n            exit;\n        }\n    }\n});\n\n\/* --------------------------------------------------------------------------\n * Shortcode: [wtp_lang_switcher]\n * Renders horizontally scrollable chips with flags. Active language pinned first.\n * -------------------------------------------------------------------------- *\/\nfunction wtp_langcore_order_langs($active) {\n    $supported = wtp_langcore_supported();\n    $keys = array_keys($supported);\n    \/\/ Move active to front\n    $ordered = array();\n    if (isset($supported[$active])) $ordered[] = $active;\n    foreach ($keys as $k) if ($k !== $active) $ordered[] = $k;\n    return $ordered;\n}\n\nfunction wtp_langcore_switcher_shortcode($atts = array()) {\n    $atts = shortcode_atts(array(\n        'class' => '',\n    ), $atts, 'wtp_lang_switcher');\n\n    $supported = wtp_langcore_supported();\n    $active = wtp_get_lang();\n    $order = wtp_langcore_order_langs($active);\n\n    \/\/ Build base URL without set params\n    $base = remove_query_arg(array('wtp-set-lang','_wpnonce'));\n\n    \/\/ Nonce for links\n    $nonce = wp_create_nonce('wtp_langcore_set');\n\n    \/\/ Minimal CSS inline (self-contained to avoid extra assets)\n    ob_start();\n    ?>\n    <div class=\"wtp-lang-sw <?php echo esc_attr($atts['class']); ?>\" role=\"navigation\" aria-label=\"Language switcher\">\n      <style>\n        .wtp-lang-sw{display:flex;gap:.5rem;overflow-x:auto;padding:.25rem .5rem;scrollbar-width:thin;-webkit-overflow-scrolling:touch}\n        .wtp-lang-chip{display:inline-flex;align-items:center;gap:.4rem;border:1px solid rgba(0,0,0,.12);border-radius:999px;padding:.35rem .6rem;font-size:14px;line-height:1;white-space:nowrap;text-decoration:none}\n        .wtp-lang-chip[aria-current=\"true\"]{border-color:rgba(0,0,0,.35);font-weight:600;box-shadow:0 0 0 2px rgba(0,0,0,.06) inset}\n        .wtp-lang-flag{font-size:16px;line-height:1}\n      <\/style>\n      <?php foreach ($order as $code): \n            $is_active = ($code === $active);\n            $url = esc_url(add_query_arg(array('wtp-set-lang'=>$code,'_wpnonce'=>$nonce), $base ?: home_url(add_query_arg(array()))));\n            $flag = $supported[$code]['flag'];\n            $label = $supported[$code]['label'];\n      ?>\n        <a class=\"wtp-lang-chip\" href=\"<?php echo $url; ?>\" <?php echo $is_active ? 'aria-current=\"true\"' : ''; ?>>\n            <span class=\"wtp-lang-flag\" aria-hidden=\"true\"><?php echo esc_html($flag); ?><\/span>\n            <span class=\"wtp-lang-label\"><?php echo esc_html($label); ?><\/span>\n        <\/a>\n      <?php endforeach; ?>\n    <\/div>\n    <?php\n    return ob_get_clean();\n}\nadd_shortcode('wtp_lang_switcher', 'wtp_langcore_switcher_shortcode');\n\n\/* --------------------------------------------------------------------------\n * Filter helper (optional): get ordered list for theme integration\n * -------------------------------------------------------------------------- *\/\nfunction wtp_langcore_get_ordered_for_theme() {\n    $supported = wtp_langcore_supported();\n    $active = wtp_get_lang();\n    $order = wtp_langcore_order_langs($active);\n    $out = array();\n    foreach ($order as $code) {\n        $out[$code] = $supported[$code];\n        $out[$code]['active'] = ($code === $active);\n    }\n    return $out;\n}\n\n\/* --------------------------------------------------------------------------\n * Self-test: \/?wtp-selftest=1\n * -------------------------------------------------------------------------- *\/\nadd_action('template_redirect', function () {\n    if (isset($_GET['wtp-selftest']) && $_GET['wtp-selftest'] === '1') {\n        $supported = wtp_langcore_supported();\n        $active = wtp_get_lang();\n        $cookie = isset($_COOKIE[wtp_langcore_cookie_name()]) ? $_COOKIE[wtp_langcore_cookie_name()] : '';\n        $al     = isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) ? $_SERVER['HTTP_ACCEPT_LANGUAGE'] : '';\n        $al_parsed = wtp_langcore_parse_accept_language($al);\n        $guess  = wtp_langcore_country_guess();\n\n        \/\/ Minimal valid HTML with PASS marker\n        header('Content-Type: text\/html; charset=utf-8');\n        ?>\n<!doctype html>\n<html lang=\"en\" data-wtp-selftest=\"pass\">\n<meta charset=\"utf-8\"\/>\n<title>WTP Language Core Selftest<\/title>\n<style>\n  body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,'Helvetica Neue',Arial,sans-serif;padding:24px}\n  code{background:#f6f8fa;border-radius:4px;padding:2px 4px}\n  .ok{color:#0a7a3c}.warn{color:#a66c00}.muted{color:#6b7280}\n<\/style>\n<h1>WTP Language Core \u2014 Selftest<\/h1>\n<ul>\n  <li>Status: <strong class=\"ok\">PASS<\/strong><\/li>\n  <li>Active: <code><?php echo esc_html($active); ?><\/code><\/li>\n  <li>Cookie: <code><?php echo esc_html($cookie); ?><\/code><\/li>\n  <li>Accept-Language: <code><?php echo esc_html($al); ?><\/code><\/li>\n  <li>Parsed: <code><?php echo esc_html(implode(',', $al_parsed)); ?><\/code><\/li>\n  <li>Geo guess: <code><?php echo esc_html($guess); ?><\/code><\/li>\n  <li>Supported: <code><?php echo esc_html(implode(',', array_keys($supported))); ?><\/code><\/li>\n<\/ul>\n<p class=\"muted\">Use shortcode <code>[wtp_lang_switcher]<\/code> anywhere to render the switcher. Selected language is pinned first. Links include a nonce and set cookie <code><?php echo esc_html(wtp_langcore_cookie_name()); ?><\/code> for 180 days.<\/p>\n<\/html>\n        <?php\n        exit;\n    }\n});\n"},{"base":"plugins","rel":"wtp-language-core-0.1.0\/readme.txt","ext":"txt","size":595,"mtime":1757312769,"type":"text","content":"WTP Language Core 0.1.0\n===========================\nPurpose\n-------\nCentralizes language detection & selection for WeekTopPick.\n- Supported languages: pl, en, es, pt, cs, sk, de, fr\n- Order of resolution: manual cookie > Accept-Language > country guess > default\n- Selected language is pinned to the first position in the switcher\n- Shortcode: [wtp_lang_switcher]\n- Selftest: \/?wtp-selftest=1 \u2192 <html data-wtp-selftest=\"pass\">\n\nUsage\n-----\n1) Upload and activate the plugin.\n2) Place [wtp_lang_switcher] in a widget, header, or page builder block.\n3) Verify selftest: \/?wtp-selftest=1 (PASS).\n"},{"base":"plugins","rel":"hostinger\/changelog.txt","ext":"txt","size":7438,"mtime":1757312769,"type":"text","content":"Changelog\n=========\n\n1.2.0 (2023-03-22)\n\n- Updated How To videos\n- Added Lithuanian language translations\n- Updated assets\n- Redirect from Hostinger dashboard into plugin\n\n1.3.0 (2023-04-11)\n\n- Autocomplete onboarding steps\n- Redirect Hosting clients by segment\n- Hide logo upload step if theme not support\n- Updated How To videos\n- Updated translations\n- Updated onboarding steps\n\n1.4.0 (2023-04-17)\n\n- Added new \"Add product\" step\n- Adjusted onboarding steps by website type\n- Updated logo upload step\n- Autocomplete site title step on settings change\n\n1.4.1 (2023-05-15)\n\n- Fix site health session warning\n\n1.5.0 (2023-05-23)\n\n- Add onboarding steps autocomplete date\n\n1.6.0 (2023-06-08)\n\n- Add plugin update feature\n\n1.6.1 (2023-06-13)\n\n- Fixed unused assets\n- Fixed maintenance mode cache\n\n1.6.2 (2023-06-15)\n\n- Fixed maintenance mode conflicts with other plugins\n\n1.6.3 (2023-07-11)\n\n- Add AI assistant\n\n1.6.4 (2023-08-08)\n\n- Add additional AI assistant buttons\n\n1.6.5 (2023-08-14)\n\n- Add translations\n\n1.6.6 (2023-08-17)\n\n- Add additional submenu items\n\n1.6.7 (2023-09-08)\n\n- Bugfixes\n- Redirect all users from hPanel\n- Text changes\n\n1.7.0 (2023-09-08)\n\n- Add CSAT survey\n\n1.7.1 (2023-09-20)\n\n- Add additional request header\n\n1.7.2 (2023-09-22)\n\n- Hide notices in Hostinger page\n\n1.8.0 (2023-09-27)\n\n- Additional amplitude events\n\n1.8.1 (2023-10-03)\n\n- Remove video iframes\n\n1.8.2 (2023-10-05)\n\n- Adjust CSAT survey\n\n1.8.3 (2023-10-13)\n\n- Add domain connection step\n- Hide preview banner\n\n1.8.4 (2023-10-20)\n\n- Added regenerate website tab\n- Style corrections\n\n1.8.5 (2023-10-20)\n\n- Text corrections\n\n1.8.6 (2023-10-23)\n\n- Translations\n\n1.8.7 (2023-10-30)\n\n- Add WooCommerce onboarding survey\n\n1.8.8 (2023-11-13)\n\n- Bugfixes\n\n1.8.9 (2023-11-14)\n\n- Added onboarding survey\n- Fix onboarding steps duplicates\n\n1.9.0 (2023-11-15)\n\n- Fix survey transients\n\n1.9.1 (2023-11-15)\n\n- Add translations\n\n1.9.2 (2023-11-19)\n\n- Fixes\n\n1.9.3 (2023-11-21)\n\n- Fixed RTL survey issues\n- Added survey close button\n\n1.9.4 (2023-11-23)\n\n- Fix survey requests\n\n1.9.5 (2023-11-27)\n\n- Hide notices in Hostinger page\n- Remove surveys\n\n1.9.6 (2023-12-01)\n\n- Added filter for tabs \/ tab content\n\n1.9.7 (2023-12-13)\n\n- Added tests, adjusted assets loading\n- Fixed maintenance security issue\n\n1.9.8 (2023-12-14)\n\n- Version mismatch fix\n\n1.9.9 (2023-12-18)\n\n- Fixed assets load on subfolder installations\n\n2.0.0 (2024-01-10)\n\n- Increased minimal WordPress version\n\n2.0.1 (2024-01-16)\n\n- Added onboarding step for affiliate plugin\n\n2.0.2 (2024-01-19)\n\n- Updated internal services\n\n2.0.3 (2024-01-19)\n\n- Fixes\n- Added promotional banner\n\n2.0.4 (2024-02-02)\n\n- Added jump to hPanel\n- Redesign tabs section\n\n2.0.5 (2024-02-06)\n\n- Added surveys\n\n2.0.6 (2024-02-09)\n\n- Added affiliate surveys\n- Internal services improvements\n\n2.0.7 (2024-02-13)\n\n- Survey adjustments\n\n2.0.8 (2024-02-14)\n\n- Fixed files loading\n\n2.0.9 (2024-02-20)\n\n- Astra theme compatibility\n- Internal services improvements\n\n2.1.0 (2024-03-04)\n\n- Lower WordPress version requirement\n- Added \"Omnisend\" plugin upgrade promo message\n\n2.1.1 (2024-03-08)\n\n- Changed \"Omnisend\" promo appearance conditions\n\n2.1.2 (2024-03-13)\n\n- Removed sessions\n\n2.1.3 (2024-03-14)\n\n- Refactored codebase\n\n2.1.4 (2024-03-14)\n\n- Removed vendors\n\n2.1.5 (2024-03-16)\n\n- Fixed Namespace issues\n\n2.1.6 (2024-03-18)\n\n- CSS fixes\n\n2.1.7 (2024-03-27)\n\n- Improved internal services\n- Added links to hPanel in admin bar\n- Fixed hPanel redirect to subdomain\n\n2.1.8 (2024-03-29)\n\n- Assets compatibility fix\n\n2.1.9 (2024-04-03)\n\n- CSAT survey improvements\n\n2.2.0 (2024-04-15)\n\n- Compatibility fixes\n\n2.2.1 (2024-04-16)\n\n- Fixed loading issues\n\n2.2.2 (2024-04-17)\n\n- \"Omnisend\" authentication fix\n\n2.2.3 (2024-05-08)\n\n- Increased minimum PHP version\n\n2.2.4 (2024-05-13)\n\n- Update prebuilt websites\n\n3.0.0 (2024-05-30)\n\n- Renamed plugin to Hostinger Tools\n- Added check WordPress and PHP versions\n- Added ability to enable\/disable maintenance mode and get bypass link\n- Added ability to enable\/disable XML-RPC\n- Added ability to force redirects to HTTPS and WWW URLs\n- Moved Onboarding steps and Learning section to separate plugin Hostinger Easy Onboarding\n\n3.0.1 (2024-06-06)\n\n- Added skeleton loader for UI\n- Removed hPanel links from admin bar menu\n\n3.0.2 (2024-06-19)\n\n- Updated menu package\n\n3.0.3 (2024-07-02)\n\n- Added tests\n\n3.0.4 (2024-07-09)\n\n- Vendor autoload fix\n\n3.0.5 (2024-07-24)\n\n- PHP version card change\n- Translations\n\n3.0.6 (2024-07-30)\n\n- Added CLI commands descriptions\n\n3.0.8 (2024-08-27)\n\n- Updated recommended PHP version\n\n3.0.9 (2024-08-04)\n\n- Added conditional check for maintenance class CLI\n\n3.0.10 (2024-09-11)\n\n- Update packages\n\n3.0.11 (2024-09-13)\n\n- Fix logo visibility\n\n3.0.12 (2024-10-01)\n\n- Fix maintenance mode cache issue\n\n3.0.13 (2024-10-09)\n\n- Fix `force www` row not being shown when user is not eligible to adjust it\n\n3.0.14 (2024-10-11)\n\n- Add tutorial link\n\n3.0.15 (2024-10-18)\n\n- WooCommerce coming soon mode cache flush\n\n3.0.16 (2024-10-22)\n\n- Fix cache LiteSpeed cleaning\n\n3.0.17 (2024-10-24)\n\n- Updated plugin URL by locale\n\n3.0.18 (2024-11-08)\n\n- Remove unused assets\n- Remove flush cache duplicates\n\n3.0.19 (2024-11-13)\n\n- Dismiss plugin split notice after close\n\n3.0.20 (2024-12-03)\n\n- Updated packages\n\n3.0.21 (2024-12-09)\n\n- Added recommended PHP version\n\n3.0.22 (2025-01-08)\n\n- Added preview website link in navbar\n\n3.0.23 (2025-02-07)\n\n- Added ability to enable or disable Authorize application page\n\n3.0.24 (2025-02-10)\n\n- Fixed bypass input field visibility\n\n3.0.25 (2025-02-10)\n\n- Added new translations\n\n3.0.26 (2025-02-10)\n\n- Fixed settings update\n\n3.0.27 (2025-02-11)\n\n- Fixed bypass code regeneration\n\n3.0.28 (2025-02-12)\n- Added correct reseller link to PHP update\n\n3.0.29 (2025-02-21)\n- Update packages\n\n3.0.30 (2025-02-24)\n- Enhanced WordPress application security settings\n\n3.0.31 (2025-02-24)\n- Fixed assets load issue\n\n3.0.32 (2025-03-04)\n- Updated compatibility\n\n3.0.33 (2024-04-04)\n- Remove hardcoded references\n\n3.0.34 (2024-04-10)\n- Add preview and site edit buttons\n\n3.0.35 (2024-04-28)\n- Add edit site button support for block themes\n\n3.0.36 (2024-04-29)\n- Style corrections\n\n3.0.37 (2024-05-12)\n- Remove unused assets\n- Fixed Jetpack autoloader issue\n- Added LLMS.txt generation functionality\n- Added few new Spanish locales (es_AR, es_CO, es_MX)\n\n3.0.38 (2025-06-09)\n- Tweaks the UI for PHP and WordPress version under Tools\n- Fallback to Site URL when no Blog Title is set in LLMS.txt\n- Clear cache on settings change\n\n3.0.39 (2025-06-12)\n- Updated logic to detect 3rd Party LLMs files\n- Updated UI and Copy for LLMS section\n- Add support for WooCommerce products in LLMS.txt\n- Added check for main plugin class to prevent class not found issues\n- Update readme.txt tags\n\n3.0.40 (2025-06-17)\n- Added latest translations\n- Provide visual feedback to user when changing settings\n- Fixed www urls rewrite\n\n3.0.41 (2025-06-19)\n- Update translations for ES, MX and CO\n\n3.0.42 (2025-07-03)\n- Menu translations\n\n3.0.43 (2025-07-22)\n- Add Web2MCP feature\n- Fix Settings state on failure\n- Bump dependencies version\n\n3.0.44 (2025-07-23)\n- Update translations\n\n3.0.45 (2025-07-28)\n- Update WP helper package\n\n3.0.46 (2025-08-05)\n- Fixed empty lines in llms.txt\n\n3.0.47 (2025-08-08)\n- Add MCP choice\n- Updated translations\n\n3.0.48 (2025-08-21)\n- Support for MCP optional entry in llms.txt\n- Add Learn More in MCP section\n- Generate llms.txt entries in the background\n"},{"base":"plugins","rel":"hostinger\/assets\/js\/hostinger-global-scripts.min.js","ext":"js","size":1790,"mtime":1757312769,"type":"text","content":"(()=>{var e,n={329:()=>{},838:()=>{document.addEventListener(\"DOMContentLoaded\",function(){var e=document.getElementById(\"plugin-split-close\");e&&e.addEventListener(\"click\",function(){var e=document.getElementById(\"hts_close_plugin_split_nonce\");if(e){var n=e.value;fetch(ajaxurl,{method:\"POST\",headers:{\"Content-Type\":\"application\/x-www-form-urlencoded\"},body:new URLSearchParams({action:\"hostinger_dismiss_plugin_split_notice\",nonce:n})}).then(function(e){if(!e.ok)throw new Error(\"Network response was not ok \"+e.statusText);return e.json()}).then(function(e){document.getElementById(\"hostinger-plugin-split-notice\").style.display=\"none\"}).catch(function(e){console.error(\"Error:\",e)})}else console.error(\"Nonce element not found.\")})})},875:()=>{},918:()=>{}},o={};function t(e){var r=o[e];if(void 0!==r)return r.exports;var i=o[e]={exports:{}};return n[e](i,i.exports,t),i.exports}t.m=n,e=[],t.O=(n,o,r,i)=>{if(!o){var s=1\/0;for(d=0;d<e.length;d++){for(var[o,r,i]=e[d],l=!0,a=0;a<o.length;a++)(!1&i||s>=i)&&Object.keys(t.O).every(e=>t.O[e](o[a]))?o.splice(a--,1):(l=!1,i<s&&(s=i));if(l){e.splice(d--,1);var c=r();void 0!==c&&(n=c)}}return n}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[o,r,i]},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e={358:0,436:0,40:0,498:0};t.O.j=n=>0===e[n];var n=(n,o)=>{var r,i,[s,l,a]=o,c=0;if(s.some(n=>0!==e[n])){for(r in l)t.o(l,r)&&(t.m[r]=l[r]);if(a)var d=a(t)}for(n&&n(o);c<s.length;c++)i=s[c],t.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return t.O(d)},o=self.webpackChunk=self.webpackChunk||[];o.forEach(n.bind(null,0)),o.push=n.bind(null,o.push.bind(o))})(),t.O(void 0,[436,40,498],()=>t(838)),t.O(void 0,[436,40,498],()=>t(329)),t.O(void 0,[436,40,498],()=>t(875));var r=t.O(void 0,[436,40,498],()=>t(918));r=t.O(r)})();"},{"base":"plugins","rel":"hostinger\/assets\/images\/logo-black.svg","ext":"svg","size":7105,"mtime":1757312769,"type":"text","content":"<svg width=\"150\" height=\"30\" viewBox=\"0 0 150 30\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n<path d=\"M116.794 12.1443C117.377 11.4191 118.324 11.0564 119.634 11.0564C120.224 11.0564 120.768 11.1311 121.267 11.281C121.766 11.4311 122.208 11.6077 122.593 11.8114L123.404 9.56366C123.308 9.5038 123.149 9.41956 122.926 9.31168C122.704 9.20354 122.421 9.09867 122.078 8.99708C121.735 8.89498 121.327 8.8052 120.852 8.72699C120.377 8.64928 119.845 8.6098 119.256 8.6098C118.39 8.6098 117.575 8.75415 116.812 9.04209C116.048 9.32978 115.384 9.75226 114.819 10.3098C114.253 10.8671 113.809 11.5481 113.484 12.351C113.159 13.1545 112.997 14.0777 112.997 15.1211C112.997 16.1521 113.144 17.0695 113.439 17.8722C113.734 18.6754 114.152 19.3532 114.692 19.9044C115.233 20.4561 115.886 20.8754 116.65 21.1636C117.413 21.451 118.264 21.5951 119.201 21.5951C120.296 21.5951 121.216 21.5196 121.961 21.37C122.707 21.2204 123.248 21.0798 123.585 20.9478V14.7793H120.771V19.1133C120.603 19.1495 120.407 19.1734 120.185 19.1852C119.962 19.197 119.694 19.203 119.382 19.203C118.804 19.203 118.3 19.1042 117.867 18.9065C117.434 18.7086 117.074 18.4297 116.785 18.0699C116.496 17.71 116.28 17.2815 116.135 16.7843C115.991 16.2869 115.919 15.7319 115.919 15.1211C115.919 13.8617 116.211 12.8698 116.794 12.1443Z\" fill=\"#1D1E20\"\/>\n<path d=\"M72.0958 19.1221C71.8373 19.1885 71.5096 19.2212 71.1129 19.2212C70.3195 19.2212 69.6488 19.1402 69.102 18.978C68.5545 18.8166 68.0944 18.634 67.7222 18.4298L66.9282 20.6597C67.0967 20.756 67.304 20.8576 67.5504 20.9657C67.7971 21.0736 68.0919 21.1754 68.4344 21.2712C68.7772 21.3671 69.1709 21.4478 69.6158 21.5142C70.0607 21.5801 70.5598 21.6133 71.1129 21.6133C72.7601 21.6133 73.9927 21.2924 74.8103 20.6506C75.628 20.0093 76.0371 19.107 76.0371 17.9439C76.0371 17.3449 75.9587 16.8357 75.8028 16.4157C75.6462 15.996 75.4086 15.6301 75.0903 15.3185C74.7715 15.0069 74.3715 14.7341 73.8908 14.5002C73.4096 14.2663 72.8444 14.0297 72.1954 13.7895C71.8824 13.6817 71.5967 13.577 71.3386 13.4749C71.0799 13.3733 70.8514 13.2592 70.6529 13.1334C70.4546 13.0074 70.301 12.8666 70.1931 12.7107C70.0849 12.5553 70.0304 12.3632 70.0304 12.1351C70.0304 11.7518 70.178 11.4669 70.4726 11.2811C70.7671 11.0955 71.2511 11.0019 71.9248 11.0019C72.5258 11.0019 73.0398 11.0713 73.4668 11.2089C73.8933 11.3469 74.2812 11.5059 74.6303 11.6857L75.4416 9.47369C75.0449 9.25792 74.5397 9.05976 73.9268 8.87995C73.3135 8.7004 72.5858 8.60986 71.7442 8.60986C71.0345 8.60986 70.3974 8.69738 69.8322 8.8709C69.267 9.04517 68.7863 9.29338 68.3895 9.61728C67.9926 9.94144 67.6861 10.3337 67.4695 10.7955C67.2531 11.2569 67.1449 11.7755 67.1449 12.3511C67.1449 12.9267 67.247 13.4151 67.4516 13.8165C67.6559 14.2186 67.9207 14.5603 68.245 14.842C68.5696 15.1239 68.9363 15.3578 69.3452 15.5433C69.754 15.7289 70.1628 15.8942 70.5719 16.0375C71.5096 16.3498 72.1709 16.6403 72.5558 16.9104C72.9404 17.1797 73.1331 17.519 73.1331 17.9263C73.1331 18.1182 73.1031 18.2922 73.0428 18.4479C72.9826 18.6038 72.8741 18.7386 72.718 18.852C72.5619 18.9667 72.3543 19.0565 72.0958 19.1221Z\" fill=\"#1D1E20\"\/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.0374 15.1209C64.0374 16.1877 63.8778 17.1262 63.5597 17.935C63.2407 18.7445 62.8046 19.4219 62.2518 19.9671C61.6987 20.5131 61.0401 20.9235 60.2767 21.1991C59.5133 21.4753 58.6923 21.6131 57.8149 21.6131C56.9609 21.6131 56.1556 21.4753 55.3979 21.1991C54.6403 20.9235 53.9787 20.5131 53.4138 19.9671C52.8483 19.4219 52.4039 18.7445 52.0791 17.935C51.7545 17.1262 51.5918 16.1877 51.5918 15.1209C51.5918 14.0537 51.7603 13.1154 52.097 12.3064C52.4334 11.4969 52.8877 10.8164 53.4589 10.2649C54.0297 9.71341 54.6912 9.29998 55.4431 9.02411C56.1942 8.74799 56.9851 8.60992 57.8149 8.60992C58.6684 8.60992 59.4739 8.74799 60.2318 9.02411C60.9892 9.29998 61.6505 9.71341 62.2157 10.2649C62.7807 10.8164 63.2258 11.4969 63.5504 12.3064C63.8753 13.1154 64.0374 14.0537 64.0374 15.1209ZM54.4953 15.1209C54.4953 15.732 54.5703 16.2835 54.7206 16.7752C54.8709 17.267 55.0875 17.6895 55.3703 18.0431C55.6522 18.3972 55.9983 18.6695 56.4074 18.8612C56.8159 19.0535 57.2848 19.1496 57.8142 19.1496C58.331 19.1496 58.7971 19.0535 59.2122 18.8612C59.6266 18.6695 59.9757 18.3972 60.2579 18.0431C60.5404 17.6895 60.7573 17.267 60.9076 16.7752C61.0579 16.2835 61.1331 15.732 61.1331 15.1209C61.1331 14.5091 61.0579 13.9546 60.9076 13.4569C60.7573 12.9595 60.5404 12.5342 60.2579 12.1802C59.9757 11.8266 59.6266 11.5535 59.2122 11.3621C58.7971 11.1702 58.331 11.0744 57.8142 11.0744C57.2848 11.0744 56.8159 11.1732 56.4074 11.3709C55.9983 11.5688 55.6522 11.8447 55.3703 12.1985C55.0875 12.5521 54.8709 12.9776 54.7206 13.475C54.5703 13.9729 54.4953 14.5214 54.4953 15.1209Z\" fill=\"#1D1E20\"\/>\n<path d=\"M45.1119 8.89819H47.9258V21.3612H45.1119V16.0739H40.3862V21.3612H37.5723V8.89819H40.3862V13.6637H45.1119V8.89819Z\" fill=\"#1D1E20\"\/>\n<path d=\"M88.4331 8.89832V11.2904H84.6633V21.3613H81.8497V11.2904H78.0796V8.89832H88.4331Z\" fill=\"#1D1E20\"\/>\n<path d=\"M94.372 21.3615H91.5581V8.89832H94.372V21.3615Z\" fill=\"#1D1E20\"\/>\n<path d=\"M106.968 21.3613C106.162 19.9347 105.291 18.5261 104.352 17.135C103.414 15.744 102.416 14.4313 101.358 13.1963V21.3613H98.5806V8.89832H100.871C101.268 9.29364 101.707 9.77924 102.188 10.3549C102.669 10.9305 103.158 11.5451 103.658 12.1985C104.157 12.8518 104.653 13.5293 105.146 14.2304C105.639 14.9318 106.102 15.606 106.535 16.2535V8.89832H109.331V21.3613H106.968Z\" fill=\"#1D1E20\"\/>\n<path d=\"M127.522 21.3613V8.89832H135.963V11.2542H130.336V13.6998H135.332V16.0021H130.336V19.0054H136.378V21.3613H127.522Z\" fill=\"#1D1E20\"\/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M147.746 9.75226C146.748 9.0866 145.311 8.75415 143.435 8.75415C142.918 8.75415 142.332 8.77804 141.677 8.82632C141.021 8.87385 140.387 8.95835 139.774 9.07755V21.3612H142.587V16.8107H143.977C144.217 17.0989 144.459 17.4196 144.701 17.7736C144.942 18.1272 145.187 18.5014 145.434 18.8972C145.682 19.2931 145.923 19.701 146.158 20.1204C146.393 20.5401 146.626 20.9536 146.855 21.3612H150C149.784 20.9058 149.55 20.4413 149.297 19.9673C149.045 19.494 148.783 19.0386 148.513 18.601C148.242 18.1634 147.968 17.7437 147.692 17.3419C147.415 16.9402 147.151 16.5836 146.898 16.2716C147.656 15.9602 148.236 15.5312 148.639 14.986C149.042 14.4406 149.243 13.7296 149.243 12.8547C149.243 11.4517 148.744 10.4177 147.746 9.75226ZM143.047 11.1641C143.209 11.1522 143.392 11.1462 143.597 11.1462C144.498 11.1462 145.18 11.2752 145.643 11.5325C146.106 11.791 146.338 12.225 146.338 12.8366C146.338 13.4724 146.109 13.9223 145.652 14.1856C145.196 14.4496 144.438 14.5809 143.38 14.5809H142.587V11.2C142.731 11.1885 142.885 11.1764 143.047 11.1641Z\" fill=\"#1D1E20\"\/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.000249566 14.046V0.000497794L7.08916 3.78046V10.1086L16.4735 10.1132L23.6774 14.046H0.000249566ZM18.3925 8.95058V0L25.6725 3.6859V13.1797L18.3925 8.95058ZM18.3924 26.1177V19.8441L8.93577 19.8375C8.9446 19.8793 1.6123 15.8418 1.6123 15.8418L25.6725 15.9547V30L18.3924 26.1177ZM0 26.1177L0.000252212 16.9393L7.08916 21.0683V29.8033L0 26.1177Z\" fill=\"#1D1E20\"\/>\n<\/svg>\n"},{"base":"plugins","rel":"hostinger\/assets\/css\/hostinger-global.min.css","ext":"css","size":969,"mtime":1757312769,"type":"text","content":"@font-face{font-display:fallback;font-family:DMSans;font-weight:400;src:url(..\/fonts\/DMSans-Regular.ttf)}@font-face{font-display:fallback;font-family:DMSans;font-weight:500;src:url(..\/fonts\/DMSans-Medium.ttf)}@font-face{font-display:fallback;font-family:DMSans;font-weight:700;src:url(..\/fonts\/DMSans-Bold.ttf)}.hts-plugin-split{background:#fff;border:none;font-family:DMSans,serif;margin:20px 0;padding:20px 30px}.hts-plugin-split h2{font-size:20px;font-weight:700;line-height:32px;margin-bottom:10px;margin-top:0}.hts-plugin-split p,.hts-plugin-split ul{color:#727586;font-size:14px;font-weight:400;line-height:24px;padding:0}.hts-plugin-split ul{list-style-type:circle;padding-left:17px}.hts-plugin-split button{background-color:#673de6;border-radius:8px;color:#fff;font-size:14px;font-weight:700;line-height:24px;margin-top:15px;padding:8px 24px;position:static;transition:.3s}.hts-plugin-split button:hover{opacity:.8}.hts-plugin-split button:before{display:none}\n"},{"base":"plugins","rel":"hostinger\/assets\/css\/coming-soon.min.css","ext":"css","size":1008,"mtime":1757312769,"type":"text","content":"@font-face{font-display:fallback;font-family:DMSans;font-weight:400;src:url(..\/fonts\/DMSans-Regular.ttf)}@font-face{font-display:fallback;font-family:DMSans;font-weight:500;src:url(..\/fonts\/DMSans-Medium.ttf)}@font-face{font-display:fallback;font-family:DMSans;font-weight:700;src:url(..\/fonts\/DMSans-Bold.ttf)}.hsr-coming-soon-body{align-items:center;color:#1d1e20;display:flex;flex-direction:column;font-family:DMSans,serif;font-size:14px;height:564px;line-height:24px;width:650px}.hsr-coming-soon-illustration{margin-bottom:32px;width:650px}body.hostinger{align-items:center;background:#f4f5ff;display:flex;height:100vh;justify-content:center;overflow:hidden}.hsr-logo{height:30px;margin-bottom:32px;width:150px}.hsr-coming-soon-body h3{font-size:24px;font-weight:700;line-height:32px;margin-bottom:8px}.hsr-coming-soon-body p{color:#727586;font-size:16px;font-weight:400;line-height:24px}@media only screen and (max-width:768px){.hsr-coming-soon-body{width:80%}.hsr-coming-soon-illustration{width:100%}}\n"},{"base":"plugins","rel":"hostinger\/assets\/css\/plugin-rating.min.css","ext":"css","size":445,"mtime":1757312769,"type":"text","content":".hsr-plugin-rating{align-items:center;bottom:35px;display:flex;left:180px;position:absolute;z-index:9999}@media (max-width:960px){.hsr-plugin-rating{left:57px}}@media (max-width:782px){.hsr-plugin-rating{bottom:15px}}@media (max-width:780px){.hsr-plugin-rating{left:10px}}.hsr-plugin-rating p{font-size:14px}.hsr-plugin-rating .hsr-rate-stars{align-items:center;display:flex;margin:0 4px}.hsr-plugin-rating a{color:#673de6;text-decoration:none}\n"},{"base":"plugins","rel":"hostinger\/assets\/css\/global.min.css","ext":"css","size":318,"mtime":1757312769,"type":"text","content":".hts-plugin-split{background:#fff;border:none;margin:20px 0;padding:20px 30px}.hts-plugin-split h2{margin-top:0}.hts-plugin-split button{background-color:#673de6;border-radius:8px;color:#fff;font-size:14px;font-weight:700;line-height:24px;padding:8px 24px;position:static}.hts-plugin-split button:before{display:none}\n"},{"base":"plugins","rel":"hostinger\/webpack.mix.js","ext":"js","size":555,"mtime":1757312769,"type":"text","content":"let mix = require(\"laravel-mix\");\n\nmix\n  .setPublicPath(\".\/assets\")\n  .sass(\"src\/css\/components\/plugin-rating.scss\", \"assets\/css\/plugin-rating.min.css\")\n  .sass(\"src\/css\/components\/coming-soon.scss\", \"assets\/css\/coming-soon.min.css\")\n  .sass(\"src\/css\/global.scss\", \"assets\/css\/hostinger-global.min.css\")\n  .js(\"src\/js\/global-scripts.js\", \"assets\/js\/hostinger-global-scripts.min.js\")\n  .options({\n    processCssUrls: false,\n  })\n  .copy(\"src\/images\/**\/*.{jpg,jpeg,png,gif,svg}\", \"assets\/images\")\n  .copy(\"src\/fonts\/**\/*.{ttf,woff2,woff}\", \"assets\/fonts\");\n"},{"base":"plugins","rel":"hostinger\/includes\/Hostinger.php","ext":"php","size":1120,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\nuse Hostinger\\Bootstrap;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Hostinger {\n    protected string $plugin_name = 'Hostinger';\n    protected string $version;\n\n    \/**\n     * @return void\n     *\/\n    public function bootstrap(): void {\n        $this->version = $this->get_plugin_version();\n        $bootstrap     = new Bootstrap();\n        $bootstrap->run();\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function run(): void {\n        $this->bootstrap();\n    }\n    \/** PHPCS:disable WordPress.NamingConventions.PrefixAllGlobals.VariableConstantNameFound *\/\n    \/**\n     * Define constant\n     *\n     * @param string $name Constant name.\n     * @param string|bool $value Constant value.\n     *\/\n    private function define( string $name, $value ): void {\n        if ( ! defined( $name ) ) {\n            define( $name, $value );\n        }\n    }\n    \/** PHPCS:enable *\/\n    \/**\n     * @return string\n     *\/\n    private function get_plugin_version(): string {\n        if ( defined( 'HOSTINGER_VERSION' ) ) {\n            return HOSTINGER_VERSION;\n        }\n\n        return '1.0.0';\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Views\/ComingSoon.php","ext":"php","size":1255,"mtime":1757312769,"type":"text","content":"<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n    <head>\n        <meta charset=\"<?php bloginfo( 'charset' ); ?>\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\/>\n        <title><?php echo esc_html__( 'Coming Soon', 'hostinger' ); ?><\/title>\n        <style>\n            html *:not(body):not(.hsr-coming-soon-body > *) {\n                display: none;\n            }\n\n            .hsr-coming-soon-body {\n                display: flex !important;\n            }\n        <\/style>\n    <\/head>\n    <body class=\"hostinger\">\n        <div class=\"hsr-coming-soon-body\">\n            <img alt=\"logo\" class=\"hsr-logo\"\n                src=\"<?php echo esc_url( HOSTINGER_PLUGIN_URL . 'assets\/images\/logo-black.svg' ); ?>\">\n            <img alt=\"illustration\" class=\"hsr-coming-soon-illustration\"\n                src=\"<?php echo esc_url( HOSTINGER_PLUGIN_URL . 'assets\/images\/illustration.png' ); ?>\">\n            <h3>\n                <?php echo esc_html__( 'Coming Soon', 'hostinger' ); ?>\n            <\/h3>\n            <p>\n                <?php echo esc_html__( 'New WordPress website is being built and will be published soon', 'hostinger' ); ?>\n            <\/p>\n        <\/div>\n\n        <?php wp_footer(); ?>\n    <\/body>\n<\/html>\n"},{"base":"plugins","rel":"hostinger\/includes\/Loader.php","ext":"php","size":2428,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Loader {\n    protected array $actions;\n    protected array $filters;\n\n    public function __construct() {\n        $this->actions = array();\n        $this->filters = array();\n    }\n\n    \/**\n     * @param string $hook\n     * @param mixed  $component\n     * @param string $callback\n     * @param int    $priority\n     * @param int    $accepted_args\n     *\n     * @return void\n     *\/\n    public function add_action( string $hook, $component, string $callback, int $priority = 10, int $accepted_args = 1 ) {\n        $this->actions = $this->add( $this->actions, $hook, $component, $callback, $priority, $accepted_args );\n    }\n\n    \/**\n     * @param string $hook\n     * @param mixed  $component\n     * @param string $callback\n     * @param int    $priority\n     * @param int    $accepted_args\n     *\n     * @return void\n     *\/\n    public function add_filter( string $hook, $component, string $callback, int $priority = 10, int $accepted_args = 1 ) {\n        $this->filters = $this->add( $this->filters, $hook, $component, $callback, $priority, $accepted_args );\n    }\n\n    \/**\n     * @param array  $hooks\n     * @param string $hook\n     * @param mixed  $component\n     * @param string $callback\n     * @param int    $priority\n     * @param int    $accepted_args\n     *\n     * @return array\n     *\/\n    private function add(\n        array $hooks,\n        string $hook,\n        $component,\n        string $callback,\n        int $priority,\n        int $accepted_args\n    ): array {\n        $hooks[] = array(\n            'hook'          => $hook,\n            'component'     => $component,\n            'callback'      => $callback,\n            'priority'      => $priority,\n            'accepted_args' => $accepted_args,\n        );\n\n        return $hooks;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function run(): void {\n        foreach ( $this->filters as $hook ) {\n            add_filter(\n                $hook['hook'],\n                array( $hook['component'], $hook['callback'] ),\n                $hook['priority'],\n                $hook['accepted_args']\n            );\n        }\n\n        foreach ( $this->actions as $hook ) {\n            add_action(\n                $hook['hook'],\n                array( $hook['component'], $hook['callback'] ),\n                $hook['priority'],\n                $hook['accepted_args']\n            );\n        }\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Redirects.php","ext":"php","size":1065,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin;\n\nuse Hostinger\\Settings;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Redirects {\n    private string $platform;\n    public const PLATFORM_HPANEL = 'hpanel';\n\n    public function __construct() {\n\n        if ( ! Settings::get_setting( 'first_login_at' ) ) {\n            Settings::update_setting( 'first_login_at', gmdate( 'Y-m-d H:i:s' ) );\n        }\n        \/** PHPCS:disable WordPress.Security.NonceVerification.Recommended *\/\n        if ( ! isset( $_GET['platform'] ) ) {\n            return;\n        }\n\n        $this->platform = sanitize_text_field( $_GET['platform'] );\n        $this->login_redirect();\n        \/** PHPCS:enable *\/\n    }\n\n    public function login_redirect(): void {\n        if ( $this->platform === self::PLATFORM_HPANEL ) {\n            add_action(\n                'init',\n                static function () {\n                    $redirect_url = admin_url( 'admin.php?page=hostinger' );\n                    wp_safe_redirect( $redirect_url );\n                    exit;\n                }\n            );\n        }\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Menu.php","ext":"php","size":1430,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin;\n\nuse Hostinger\\Admin\\PluginSettings;\nuse Hostinger\\WpHelper\\Utils;\nuse Hostinger\\WpMenuManager\\Menus;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Menu {\n    public const MENU_SLUG = 'hostinger-tools';\n\n    public function __construct() {\n        add_filter( 'hostinger_admin_menu_bar_items', array( $this, 'add_admin_bar_items' ) );\n        add_filter( 'hostinger_menu_subpages', array( $this, 'sub_menu' ) );\n    }\n\n    public function add_admin_bar_items( $menu_items ): array {\n        $menu_items[] = array(\n            'id'    => 'hostinger-tools-admin-bar',\n            'title' => __( 'Tools', 'hostinger' ),\n            'href'  => admin_url( 'admin.php?page=' . self::MENU_SLUG ),\n        );\n\n        return $menu_items;\n    }\n\n    public function sub_menu( $submenus ): array {\n        $tools_submenu = array(\n            'page_title' => __( 'Tools', 'hostinger' ),\n            'menu_title' => __( 'Tools', 'hostinger' ),\n            'capability' => 'manage_options',\n            'menu_slug'  => self::MENU_SLUG,\n            'callback'   => array( $this, 'render_tools_menu_page' ),\n            'menu_order' => 10,\n        );\n\n        $submenus[] = $tools_submenu;\n\n        return $submenus;\n    }\n\n    public function render_tools_menu_page(): void {\n        echo wp_kses( Menus::renderMenuNavigation(), 'post' );\n        ?>\n        <div id=\"hostinger-tools-vue-app\"\/>\n\n\n        <?php\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Views\/Partials\/RateUs.php","ext":"php","size":2461,"mtime":1757312769,"type":"text","content":"<div class=\"hostinger hsr-plugin-rating\">\n    <p><?php echo esc_html__( 'Rate this plugin', 'hostinger' ); ?><\/p>\n    <div class=\"hsr-rate-stars\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n            <path fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z\"\n                    fill=\"#673DE6\"\/>\n        <\/svg>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n            <path fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z\"\n                    fill=\"#673DE6\"\/>\n        <\/svg>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n            <path fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z\"\n                    fill=\"#673DE6\"\/>\n        <\/svg>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n            <path fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z\"\n                    fill=\"#673DE6\"\/>\n        <\/svg>\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n            <path fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z\"\n                    fill=\"#673DE6\"\/>\n        <\/svg>\n    <\/div>\n    <p>\n        <?php\n        echo wp_kses(\n            __(\n                'on <a href=\"https:\/\/wordpress.org\/support\/plugin\/hostinger\/reviews\/#new-post\" target=\"_blank\" rel=\"noopener noreferrer\">WordPress.org<\/a>',\n                'hostinger'\n            ),\n            array(\n                'a' => array(\n                    'href'   => array(),\n                    'target' => array(),\n                    'rel'    => array(),\n                ),\n            ),\n        );\n        ?>\n        <\/p>\n<\/div>\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/PluginSettings.php","ext":"php","size":1526,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Avoid possibility to get file accessed directly\n *\/\n\nnamespace Hostinger\\Admin;\n\nuse Hostinger\\Admin\\Options\\PluginOptions;\n\nif ( ! defined( 'ABSPATH' ) ) {\n    die;\n}\n\n\/**\n * Class for handling Settings\n *\/\nclass PluginSettings {\n\n    \/**\n     * @var PluginOptions\n     *\/\n    private ?PluginOptions $plugin_options = null;\n\n    \/**\n     * @param PluginOptions|null $plugin_options\n     *\/\n    public function __construct( PluginOptions $plugin_options = null ) {\n        if ( ! empty( $plugin_options ) ) {\n            $this->plugin_options = $plugin_options;\n        }\n    }\n\n    \/**\n     * Return plugin settings\n     *\n     * @return PluginOptions\n     *\/\n    public function get_plugin_settings(): PluginOptions {\n\n        if ( ! empty( $this->plugin_options ) ) {\n            $settings = $this->plugin_options;\n        } else {\n            $settings = get_option(\n                HOSTINGER_PLUGIN_SETTINGS_OPTION,\n                array()\n            );\n\n            $settings = new PluginOptions( $settings );\n        }\n\n        return $settings;\n    }\n\n    \/**\n     * @param PluginOptions $plugin_options plugin settings.\n     *\n     * @return PluginOptions\n     *\/\n    public function save_plugin_settings( PluginOptions $plugin_options ): PluginOptions {\n        $existing_settings = $this->get_plugin_settings();\n\n        $update = update_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, $plugin_options->to_array(), false );\n\n        return ! empty( $update ) ? $plugin_options : $existing_settings;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Proxy.php","ext":"php","size":1670,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin;\n\nuse Hostinger\\Mcp\\EventHandlerFactory;\nuse Hostinger\\WpHelper\\Requests\\Client;\nuse Hostinger\\WpHelper\\Utils;\nuse WP_Error;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Proxy {\n\n    public const HOSTINGER_FREE_SUBDOMAIN_URL     = 'hostingersite.com';\n    public const HOSTINGER_DEV_FREE_SUBDOMAIN_URL = 'hostingersite.dev';\n\n\n    private Client $client;\n    private Utils $utils;\n    private string $rest_base;\n\n    public function __construct( Client $client, Utils $utils ) {\n        $this->client    = $client;\n        $this->utils     = $utils;\n        $this->rest_base = '\/api\/v1\/events\/trigger';\n    }\n\n    public function trigger_event( string $event, array $params = array() ): array|WP_Error {\n        if ( $this->is_free_subdomain() || ! $_SERVER['H_PLATFORM'] ) {\n            return new WP_Error( 'domain-not_allowed', 'This domain is not eligible for triggering Hostinger events' );\n        }\n\n        $args = array(\n            'domain' => $this->remove_www( $this->utils->getHostInfo() ),\n            'event'  => array(\n                'name'   => $event,\n                'params' => $params,\n            ),\n        );\n\n        return $this->client->post( $this->rest_base, $args );\n    }\n\n    private function is_free_subdomain(): bool {\n        return str_contains( $this->utils->getHostInfo(), self::HOSTINGER_FREE_SUBDOMAIN_URL ) ||\n                str_contains( $this->utils->getHostInfo(), self::HOSTINGER_DEV_FREE_SUBDOMAIN_URL );\n    }\n\n    private function remove_www( string $url ): string {\n        if ( str_starts_with( $url, 'www.' ) ) {\n            return substr( $url, 4 );\n        }\n\n        return $url;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Ajax.php","ext":"php","size":1105,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Ajax {\n    private const TWO_DAYS                = 86400 * 2;\n    public const AJAX_METHOD_PREFIX       = 'wp_ajax_hostinger_';\n    public const HIDE_PLUGIN_SPLIT_NOTICE = 'hts_plugin_split_notice_hidden';\n\n    public const AJAX_EVENTS = array(\n        'dismiss_plugin_split_notice',\n    );\n\n    public function __construct() {\n        add_action( 'admin_init', array( $this, 'define_ajax_events' ), 0 );\n    }\n\n    public function define_ajax_events(): void {\n        foreach ( self::AJAX_EVENTS as $event ) {\n            add_action( self::AJAX_METHOD_PREFIX . $event, array( $this, $event ) );\n        }\n    }\n\n    public function dismiss_plugin_split_notice(): void {\n        $nonce = isset( $_POST['nonce'] ) ? sanitize_text_field( $_POST['nonce'] ) : '';\n        \/\/ @codeCoverageIgnoreStart\n        if ( ! wp_verify_nonce( $nonce, 'hts_close_plugin_split' ) ) {\n            wp_send_json_error( 'Invalid nonce' );\n        }\n        \/\/ @codeCoverageIgnoreEnd\n        update_option( self::HIDE_PLUGIN_SPLIT_NOTICE, true );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Hooks.php","ext":"php","size":2827,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin;\n\nuse Hostinger\\Helper;\nuse Hostinger\\WpHelper\\Utils;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Hooks {\n    \/**\n     * @var Helper\n     *\/\n    private Helper $helper;\n\n    \/**\n     * @var Utils\n     *\/\n    private Utils $utils;\n\n    public function __construct( $utils ) {\n        $this->helper = new Helper();\n        $this->utils  = $utils ?? new Utils();\n        add_action( 'admin_footer', array( $this, 'rate_plugin' ) );\n        add_action( 'admin_init', array( $this, 'message_about_plugin_split' ) );\n        add_filter( 'wp_kses_allowed_html', array( $this, 'custom_kses_allowed_html' ), 10, 1 );\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function rate_plugin(): void {\n        $admin_path = parse_url( admin_url(), PHP_URL_PATH );\n\n        if ( ! $this->utils->isThisPage( $admin_path . 'admin.php?page=' . Menu::MENU_SLUG ) ) {\n            return;\n        }\n\n        require_once HOSTINGER_ABSPATH . 'includes\/Admin\/Views\/Partials\/RateUs.php';\n    }\n\n    public function message_about_plugin_split(): void {\n        if ( $this->helper->should_plugin_split_notice_shown() ) {\n            add_action( 'admin_notices', array( $this, 'custom_admin_notice' ) );\n        }\n    }\n\n    public function custom_admin_notice() {\n        ?>\n        <div id=\"hostinger-plugin-split-notice\" class=\"hts-plugin-split notice is-dismissible\">\n            <h2><?php echo esc_html__( 'Hostinger plugin updates', 'hostinger' ); ?><\/h2>\n            <p><?php echo esc_html__( 'The Hostinger plugin has been split into two different plugins:', 'hostinger' ); ?><\/p>\n            <ul>\n                <li><strong><?php echo esc_html__( 'Hostinger Tools', 'hostinger' ); ?><\/strong> <?php echo esc_html__( 'offers a toolkit for easier site maintenance.', 'hostinger' ); ?><\/li>\n                <li><strong><?php echo esc_html__( 'Hostinger Easy Onboarding', 'hostinger' ); ?><\/strong> <?php echo esc_html__( 'provides guidance and learning resources for beginners to get started with building a site using WordPress.', 'hostinger' ); ?><\/li>\n            <\/ul>\n            <button id=\"plugin-split-close\" type=\"button\" class=\"plugin-split-close notice-dismiss\"><?php echo esc_html__( 'Got it', 'hostinger' ); ?><\/button>\n        <\/div>\n        <?php\n        wp_nonce_field( 'hts_close_plugin_split', 'hts_close_plugin_split_nonce', true );\n    }\n\n    public function custom_kses_allowed_html( $allowed ) {\n        $allowed['svg']  = array(\n            'xmlns'   => true,\n            'width'   => true,\n            'height'  => true,\n            'viewBox' => true,\n            'fill'    => true,\n            'style'   => true,\n            'class'   => true,\n        );\n        $allowed['path'] = array(\n            'd'    => true,\n            'fill' => true,\n        );\n\n        return $allowed;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/AbstractBatchedJob.php","ext":"php","size":2463,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin\\Jobs;\n\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtParser;\n\ndefined( 'ABSPATH' ) || exit;\n\nabstract class AbstractBatchedJob extends AbstractJob {\n\n    public function init(): void {\n        add_action( $this->get_create_batch_hook(), array( $this, 'handle_create_batch_action' ), 10, 2 );\n        parent::init();\n    }\n\n    protected function get_create_batch_hook(): string {\n        return \"{$this->get_hook_base_name()}create_batch\";\n    }\n\n    public function schedule( array $args = array() ): void {\n        $this->schedule_create_batch_action( 1, $args );\n    }\n\n    public function handle_create_batch_action( int $batch_number, array $args ): void {\n        $items = $this->get_batch( $batch_number, $args );\n\n        if ( empty( $items ) ) {\n            $this->handle_complete( $batch_number, $args );\n        } else {\n            $this->schedule_process_action( $items, $args );\n            $this->schedule_create_batch_action( $batch_number + 1, $args );\n        }\n    }\n\n    protected function get_batch_size(): int {\n        return apply_filters( 'hostinger_batch_item_limit', LlmsTxtParser::DEFAULT_LIMIT );\n    }\n\n    protected function get_query_offset( int $batch_number ): int {\n        return $this->get_batch_size() * ( $batch_number - 1 );\n    }\n\n    protected function schedule_create_batch_action( int $batch_number, array $args ): void {\n        if ( $this->can_schedule( array( $batch_number ) ) ) {\n            $this->action_scheduler->schedule_immediate(\n                $this->get_create_batch_hook(),\n                array(\n                    $batch_number,\n                    $args,\n                )\n            );\n        }\n    }\n\n    protected function schedule_process_action( array $items = array(), array $args = array() ): void {\n        $job_data = array(\n            'items' => $items,\n            'args'  => $args,\n        );\n        if ( ! $this->is_processing( $job_data ) ) {\n            $this->action_scheduler->schedule_immediate( $this->get_process_item_hook(), array( $job_data ) );\n        }\n    }\n\n    protected function is_processing( array $args = array() ): bool {\n        return $this->action_scheduler->has_scheduled_action( $this->get_process_item_hook(), array( $args ) );\n    }\n\n    protected function handle_complete( int $final_batch_number, array $args ): void {\n        return;\n    }\n\n    abstract protected function get_batch( int $batch_number, array $args ): array;\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/AbstractJob.php","ext":"php","size":1541,"mtime":1757312769,"type":"text","content":"<?php\ndeclare( strict_types=1 );\n\nnamespace Hostinger\\Admin\\Jobs;\n\nuse Exception;\n\ndefined( 'ABSPATH' ) || exit;\n\nabstract class AbstractJob implements JobInterface {\n\n    protected ActionScheduler $action_scheduler;\n\n    public function __construct( ActionScheduler $action_scheduler ) {\n        $this->action_scheduler = $action_scheduler;\n    }\n\n    public function init(): void {\n        add_action( $this->get_process_item_hook(), array( $this, 'handle_process_items_action' ) );\n        add_action(\n            $this->get_start_hook(),\n            function ( $args ) {\n                $this->schedule( $args );\n            }\n        );\n    }\n\n    public function can_schedule( $args = array() ): bool {\n        return ! $this->is_running( $args );\n    }\n\n    public function handle_process_items_action( array $args = array() ): void {\n        $this->process_items( $args );\n    }\n\n    public function get_process_item_hook(): string {\n        return \"{$this->get_hook_base_name()}process_item\";\n    }\n\n    public function get_start_hook(): string {\n        return $this->get_name();\n    }\n\n    protected function is_running( ?array $args = array() ): bool {\n        return $this->action_scheduler->has_scheduled_action( $this->get_process_item_hook(), array( $args ) );\n    }\n\n    protected function get_hook_base_name(): string {\n        return \"{$this->action_scheduler->get_group()}\/jobs\/{$this->get_name()}\/\";\n    }\n\n    abstract public function get_name(): string;\n    abstract protected function process_items( array $args );\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/ActionScheduler.php","ext":"php","size":1250,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin\\Jobs;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass ActionScheduler {\n\n    public const STATUS_PENDING  = 'pending';\n    public const STATUS_COMPLETE = 'complete';\n    public const STATUS_FAILED   = 'failed';\n\n    public function get_group(): string {\n        return defined( 'HOSTINGER_PLUGIN_SETTINGS_OPTION' ) ? HOSTINGER_PLUGIN_SETTINGS_OPTION : 'hostinger_tools';\n    }\n\n    public function schedule_single( int $timestamp, string $hook, $args = array() ): int {\n        if ( ! function_exists( 'as_schedule_single_action' ) ) {\n            return 0;\n        }\n\n        return as_schedule_single_action( $timestamp, $hook, $args, $this->get_group() );\n    }\n\n    public function schedule_immediate( string $hook, $args = array() ): int {\n        if ( ! function_exists( 'as_schedule_single_action' ) ) {\n            return 0;\n        }\n\n        return as_schedule_single_action( gmdate( 'U' ) - 1, $hook, $args, $this->get_group() );\n    }\n\n    public function has_scheduled_action( string $hook, $args = array() ): bool {\n        if ( ! function_exists( 'as_next_scheduled_action' ) ) {\n            return false;\n        }\n\n        return as_next_scheduled_action( $hook, $args, $this->get_group() ) !== false;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/JobInterface.php","ext":"php","size":385,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin\\Jobs;\n\ndefined( 'ABSPATH' ) || exit;\n\ninterface JobInterface {\n    public function get_name(): string;\n    public function get_process_item_hook(): string;\n    public function get_start_hook(): string;\n    public function can_schedule( array $args = array() ): bool;\n    public function schedule( array $args = array() );\n    public function init();\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/LlmsTxtInjectContentJob.php","ext":"php","size":3156,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin\\Jobs;\n\nuse Hostinger\\Admin\\PluginSettings;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtFileHelper;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtGenerator;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtParser;\n\nclass LlmsTxtInjectContentJob extends AbstractBatchedJob {\n\n    public const JOB_NAME = 'generate_llmstxt';\n\n    protected LlmsTxtParser $llms_txt_parser;\n    protected LlmsTxtFileHelper $llms_txt_file_helper;\n    protected PluginSettings $plugin_settings;\n\n    public function __construct( ActionScheduler $action_scheduler, LlmsTxtParser $llms_txt_parser, LlmsTxtFileHelper $llms_txt_file_helper, PluginSettings $plugin_settings ) {\n        parent::__construct( $action_scheduler );\n        $this->llms_txt_parser      = $llms_txt_parser;\n        $this->llms_txt_file_helper = $llms_txt_file_helper;\n        $this->plugin_settings      = $plugin_settings;\n    }\n\n    protected function get_batch( int $batch_number, $args ): array {\n        if ( ! isset( $args['post_type'] ) ) {\n            return array();\n        }\n\n        $offset = $this->get_query_offset( $batch_number );\n        $limit  = $this->get_batch_size();\n\n        return $this->llms_txt_parser->get_by_post_type( $args['post_type'], $limit, $offset );\n    }\n\n    public function get_name(): string {\n        return self::JOB_NAME;\n    }\n\n    protected function process_items( array $args = array() ): void {\n        if ( ! $this->is_llms_txt_enabled() ) {\n            return;\n        }\n\n        $items    = $args['items'] ?? array();\n        $job_args = $args['args'] ?? array();\n\n        if ( ! isset( $job_args['post_type'] ) || empty( $items ) ) {\n            return;\n        }\n\n        $content = $this->llms_txt_parser->get_items( $items );\n        $this->inject_content( $job_args['post_type'], $content );\n    }\n\n    public function schedule( array $args = array() ): void {\n        \/\/ Initiate as 2, as the first batch will be created when the user toggles on the option.\n        $this->schedule_create_batch_action( 2, $args );\n    }\n\n    public function can_schedule( $args = array() ): bool {\n        return parent::can_schedule( $args ) && $this->is_llms_txt_enabled();\n    }\n\n    public function is_llms_txt_enabled(): bool {\n        $settings = $this->plugin_settings->get_plugin_settings();\n        return $settings->get_enable_llms_txt();\n    }\n\n    public function inject_content( $post_type, $new_content ): void {\n        $content         = $this->llms_txt_file_helper->get_content();\n        $section         = LlmsTxtGenerator::HOSTINGER_LLMSTXT_SUPPORTED_POST_TYPES[ $post_type ];\n        $header          = \"## $section\\n\\n\";\n        $header_position = strpos( $content, $header );\n        $header_length   = strlen( $header );\n        if ( $header_position === false ) {\n            return;\n        }\n\n        $before_injection_slot = substr( $content, 0, $header_position + $header_length );\n        $after_injection_slot  = substr( $content, $header_position + $header_length );\n\n        $final_content = $before_injection_slot . $new_content . $after_injection_slot;\n        $this->llms_txt_file_helper->create( $final_content );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/NotifyMcpJob.php","ext":"php","size":1513,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin\\Jobs;\nuse Hostinger\\Mcp\\EventHandlerFactory;\nuse Hostinger\\Mcp\\Handlers\\EventHandler;\nuse PHPUnit\\Exception;\n\nclass NotifyMcpJob extends AbstractJob implements JobInterface {\n\n    public const JOB_NAME = 'notify_mcp';\n\n    private EventHandlerFactory $event_handler_factory;\n\n    public function __construct( ActionScheduler $action_scheduler, EventHandlerFactory $event_handler_factory ) {\n        $this->event_handler_factory = $event_handler_factory;\n        parent::__construct( $action_scheduler );\n    }\n\n    public function get_name(): string {\n        return self::JOB_NAME;\n    }\n\n    public function event_handler( string $event ): EventHandler {\n        return $this->event_handler_factory->get_handler( $event );\n    }\n\n    public function process_items( array $args = array() ): void {\n        $handler = $this->event_handler( $args['event'] );\n        $handler->send( $args );\n    }\n\n    public function schedule( array $args = array() ): void {\n        if ( $this->can_schedule( $args ) ) {\n            $this->action_scheduler->schedule_immediate( $this->get_process_item_hook(), array( $args ) );\n        }\n    }\n\n    public function can_schedule( $args = array() ): bool {\n        if ( ! parent::can_schedule( $args ) ) {\n            return false;\n        }\n\n        try {\n            $handler = $this->event_handler( $args['event'] );\n            return $handler->can_send( $args );\n        } catch ( Exception $e ) {\n            return false;\n        }\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Jobs\/JobInitializer.php","ext":"php","size":688,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin\\Jobs;\n\nuse Hostinger\\Admin\\PluginSettings;\nuse Hostinger\\Admin\\Proxy;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtFileHelper;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtParser;\nuse Hostinger\\Mcp\\EventHandlerFactory;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass JobInitializer {\n\n    public function __construct( Proxy $proxy ) {\n        $jobs   = array();\n        $jobs[] = new NotifyMcpJob( new ActionScheduler(), new EventHandlerFactory( $proxy ) );\n        $jobs[] = new LlmsTxtInjectContentJob( new ActionScheduler(), new LlmsTxtParser(), new LlmsTxtFileHelper(), new PluginSettings() );\n\n        foreach ( $jobs as $job ) {\n            $job->init();\n        }\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Options\/PluginOptions.php","ext":"php","size":4746,"mtime":1757312769,"type":"text","content":"<?php\nnamespace Hostinger\\Admin\\Options;\n\nif ( ! defined( 'ABSPATH' ) ) {\n    die;\n}\n\n\/**\n * Class for handling plugin options\n *\/\nclass PluginOptions {\n    \/**\n     * @var bool\n     *\/\n    private bool $maintenance_mode = false;\n\n    \/**\n     * @var string\n     *\/\n    private string $bypass_code = '';\n\n    \/**\n     * @var bool\n     *\/\n    private bool $disable_xml_rpc = false;\n\n    \/**\n     * @var bool\n     *\/\n    private bool $force_https = false;\n\n    \/**\n     * @var bool\n     *\/\n    private bool $force_www = false;\n\n    \/**\n     * @var bool\n     *\/\n    private bool $disable_authentication_password = false;\n\n    \/**\n     * @var bool\n     *\/\n    private bool $enable_llms_txt = false;\n\n    \/**\n     * @var bool\n     *\/\n    private bool $optin_mcp = false;\n\n    \/**\n     * @param array $settings plugin settings array.\n     *\/\n    public function __construct( array $settings = array() ) {\n        $this->maintenance_mode                = ! empty( $settings['maintenance_mode'] );\n        $this->bypass_code                     = ! empty( $settings['bypass_code'] ) ? $settings['bypass_code'] : '';\n        $this->disable_xml_rpc                 = ! empty( $settings['disable_xml_rpc'] );\n        $this->force_https                     = ! empty( $settings['force_https'] );\n        $this->force_www                       = ! empty( $settings['force_www'] );\n        $this->disable_authentication_password = ! empty( $settings['disable_authentication_password'] );\n        $this->enable_llms_txt                 = ! empty( $settings['enable_llms_txt'] );\n        $this->optin_mcp                       = ! empty( $settings['optin_mcp'] );\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function get_maintenance_mode(): bool {\n        return $this->maintenance_mode;\n    }\n\n    \/**\n     * @param bool $maintenance_mode\n     *\n     * @return void\n     *\/\n    public function set_maintenance_mode( bool $maintenance_mode ): void {\n        $this->maintenance_mode = $maintenance_mode;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function get_bypass_code(): string {\n        return $this->bypass_code;\n    }\n\n    \/**\n     * @param string $bypass_code\n     *\n     * @return void\n     *\/\n    public function set_bypass_code( string $bypass_code ): void {\n        $this->bypass_code = $bypass_code;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function get_disable_xml_rpc(): bool {\n        return $this->disable_xml_rpc;\n    }\n\n    \/**\n     * @param bool $disable_xml_rpc\n     *\n     * @return void\n     *\/\n    public function set_disable_xml_rpc( bool $disable_xml_rpc ): void {\n        $this->disable_xml_rpc = $disable_xml_rpc;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function get_force_https(): bool {\n        return $this->force_https;\n    }\n\n    \/**\n     * @param bool $force_https\n     *\n     * @return void\n     *\/\n    public function set_force_https( bool $force_https ): void {\n        $this->force_https = $force_https;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function get_force_www(): bool {\n        return $this->force_www;\n    }\n\n    \/**\n     * @param bool $force_www\n     *\n     * @return void\n     *\/\n    public function set_force_www( bool $force_www ): void {\n        $this->force_www = $force_www;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function get_disable_authentication_password(): bool {\n        return $this->disable_authentication_password;\n    }\n\n    \/**\n     * @param bool $authentication_password\n     *\n     * @return void\n     *\/\n    public function set_disable_authentication_password( bool $authentication_password ): void {\n        $this->disable_authentication_password = $authentication_password;\n    }\n\n    public function get_enable_llms_txt(): bool {\n        return $this->enable_llms_txt;\n    }\n\n    public function get_optin_mcp(): bool {\n        return $this->optin_mcp;\n    }\n\n    public function set_optin_mcp( bool $optin_mcp ): void {\n        $this->optin_mcp = $optin_mcp;\n    }\n\n    \/**\n     * @return array\n     *\/\n    public function to_array(): array {\n        return array(\n            'maintenance_mode'                => $this->get_maintenance_mode(),\n            'bypass_code'                     => $this->get_bypass_code(),\n            'disable_xml_rpc'                 => $this->get_disable_xml_rpc(),\n            'force_https'                     => $this->get_force_https(),\n            'force_www'                       => $this->get_force_www(),\n            'disable_authentication_password' => $this->get_disable_authentication_password(),\n            'enable_llms_txt'                 => $this->get_enable_llms_txt(),\n            'optin_mcp'                       => $this->get_optin_mcp(),\n        );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Admin\/Assets.php","ext":"php","size":14214,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Admin;\n\nuse Hostinger\\Admin\\Menu;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtFileHelper;\nuse Hostinger\\WpMenuManager\\Menus;\nuse Hostinger\\Helper;\nuse Hostinger\\WpHelper\\Utils;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Class Hostinger_Admin_Assets\n *\n * Handles the enqueueing of styles and scripts for the Hostinger admin pages.\n *\/\nclass Assets {\n    \/**\n     * @var Helper Instance of the Hostinger_Helper class.\n     *\/\n    private Helper $helper;\n\n    \/**\n     * @var LlmsTxtFileHelper\n     *\/\n    private LlmsTxtFileHelper $llms_txt_file_helper;\n\n    \/**\n     * @var Utils\n     *\/\n    private Utils $utils;\n\n    public function __construct() {\n        $this->llms_txt_file_helper = new LlmsTxtFileHelper();\n        $this->helper               = new Helper();\n        $this->utils                = new Utils();\n        $admin_path                 = parse_url( admin_url(), PHP_URL_PATH );\n\n        \/\/ Load assets only on Hostinger admin pages.\n        if ( $this->utils->isThisPage( $admin_path . 'admin.php?page=' . Menu::MENU_SLUG ) || $this->utils->isThisPage( $admin_path . 'admin.php?page=' . Menus::MENU_SLUG ) ) {\n            add_action( 'admin_enqueue_scripts', array( $this, 'admin_styles' ) );\n            add_action( 'admin_enqueue_scripts', array( $this, 'admin_scripts' ) );\n        }\n        if ( is_admin() ) {\n            add_action( 'admin_enqueue_scripts', array( $this, 'global_styles' ) );\n            add_action( 'admin_enqueue_scripts', array( $this, 'global_scripts' ) );\n        }\n    }\n\n    \/**\n     * Enqueues styles for the Hostinger admin pages.\n     *\/\n    public function admin_styles(): void {\n        \/\/ Vue frontend styles.\n        wp_enqueue_style(\n            'hostinger_tools_styles',\n            HOSTINGER_VUE_ASSETS_URL . '\/main.min.css',\n            array(),\n            HOSTINGER_VERSION\n        );\n\n        \/\/ Plugin rating styles.\n        wp_enqueue_style(\n            'hostinger_rating_styles',\n            HOSTINGER_ASSETS_URL . '\/css\/plugin-rating.min.css',\n            array(),\n            HOSTINGER_VERSION\n        );\n    }\n\n    public function global_styles(): void {\n        wp_enqueue_style(\n            'hostinger_tools_global_styles',\n            HOSTINGER_ASSETS_URL . 'css\/hostinger-global.min.css',\n            array(),\n            HOSTINGER_VERSION\n        );\n    }\n\n    public function global_scripts(): void {\n        wp_enqueue_script(\n            'hostinger_tools_global_scripts',\n            HOSTINGER_ASSETS_URL . 'js\/hostinger-global-scripts.min.js',\n            array(),\n            HOSTINGER_VERSION,\n            array(\n                'in_footer' => true,\n            )\n        );\n    }\n\n    \/**\n     * Enqueues scripts for the Hostinger admin pages.\n     *\/\n    public function admin_scripts(): void {\n        global $wp_version;\n\n        wp_enqueue_script(\n            'hostinger_tools_main_scripts',\n            HOSTINGER_VUE_ASSETS_URL . '\/main.min.js',\n            array(\n                'jquery',\n                'wp-i18n',\n            ),\n            HOSTINGER_VERSION,\n            false\n        );\n\n        wp_localize_script(\n            'hostinger_tools_main_scripts',\n            'hostinger_tools_data',\n            array(\n                'home_url'                     => home_url(),\n                'site_url'                     => get_site_url(),\n                'plugin_url'                   => $this->helper->get_hostinger_plugin_url(),\n                'asset_url'                    => HOSTINGER_PLUGIN_URL,\n                'hplatform'                    => ! empty( $_SERVER['H_PLATFORM'] ) ? 1 : 0,\n                'plugin_split_notice'          => $this->helper->should_plugin_split_notice_shown() ? 1 : 0,\n                'hts_close_plugin_split_nonce' => wp_create_nonce( 'hts_close_plugin_split' ),\n                'edit_site_url'                => $this->helper->get_edit_site_url(),\n                'llmstxt_file_url'             => $this->llms_txt_file_helper->get_llmstxt_file_url(),\n                'llmstxt_file_user_generated'  => $this->llms_txt_file_helper->is_user_generated_file(),\n                'translations'                 => array(\n                    'routes_tools'                                            => __( 'Tools', 'hostinger' ),\n                    'hostinger_tools_open_guide'                              => __( 'Open guide', 'hostinger' ),\n                    'hostinger_tools_preview_site'                            => __( 'Preview site', 'hostinger' ),\n                    'hostinger_tools_edit_site'                               => __( 'Edit site', 'hostinger' ),\n                    'hostinger_tools_disable_public_access'                   => __( 'Disable public access to the site (WordPress admins will still be able to access)', 'hostinger' ),\n                    'hostinger_tools_skip_link_maintenance_mode'              => __( 'Skip-link that bypasses the maintenance mode', 'hostinger' ),\n                    'hostinger_tools_reset_link'                              => __( 'Reset link', 'hostinger' ),\n                    'hostinger_tools_disable_xml_rpc'                         => __( 'Disable XML-RPC', 'hostinger' ),\n                    'hostinger_tools_xml_rpc_description'                     => __( 'XML-RPC allows apps to connect to your WordPress site, but might expose your site\\'s security. Disable this feature if you don\\'t need it', 'hostinger' ),\n                    'hostinger_tools_disable_authentication_password'         => __( 'Disable application passwords', 'hostinger' ),\n                    'hostinger_tools_authentication_password_description'     => __( 'WordPress application passwords allow users to authenticate API requests without using their main login credentials, allowing for third-party integrations.', 'hostinger' ),\n\n                    'hostinger_tools_force_https'                             => __( 'Force HTTPS', 'hostinger' ),\n                    'hostinger_tools_force_https_description'                 => __( 'Redirects all HTTP URLs to HTTPS sites', 'hostinger' ),\n                    'hostinger_tools_force_www'                               => __( 'Force WWW', 'hostinger' ),\n                    'hostinger_tools_force_www_description'                   => __( 'Redirects all WWW URLs to non-WWW ones', 'hostinger' ),\n                    'hostinger_tools_force_www_description_not_available'     => __( 'WWW and non-WWW domain records are not pointing to the same host. Redirect not possible.', 'hostinger' ),\n                    'hostinger_tools_php_version'                             => __( 'PHP version', 'hostinger' ),\n                    'hostinger_tools_wordpress_version'                       => __( 'WordPress version', 'hostinger' ),\n                    'hostinger_tools_php_version_description'                 => __( 'Various updates and fixes available in the newest version.', 'hostinger' ),\n                    'hostinger_tools_running_latest_version'                  => __( 'Running the latest version', 'hostinger' ),\n                    'hostinger_tools_update'                                  => __( 'Update', 'hostinger' ),\n                    'hostinger_tools_update_to'                               => __( 'Update to', 'hostinger' ),\n                    'hostinger_tools_update_to_recommended'                   => __( 'is recommended', 'hostinger' ),\n                    'hostinger_tools_update_to_wordpress_version_description' => __( 'For improved security, ensure you use the latest version of WordPress', 'hostinger' ),\n                    'hostinger_tools_maintenance'                             => __( 'Maintenance', 'hostinger' ),\n                    'hostinger_tools_preview_my_website'                      => __( 'Preview my website', 'hostinger' ),\n                    'hostinger_tools_security'                                => __( 'Security', 'hostinger' ),\n                    'hostinger_tools_redirects'                               => __( 'Redirects', 'hostinger' ),\n                    'hostinger_tools_ai'                                      => __( 'AI Tools', 'hostinger' ),\n                    'hostinger_tools_llms'                                    => __( 'LLM Optimization', 'hostinger' ),\n                    'hostinger_tools_enable_llms_txt'                         => __( 'Create LLMs.txt file', 'hostinger' ),\n                    'hostinger_tools_llms_txt_description'                    => __( 'Let AI explore, understand, and interact with your WordPress site.', 'hostinger' ),\n                    'hostinger_tools_optin_mcp'                               => __( 'Web 2 Agent', 'hostinger' ),\n                    'hostinger_tools_optin_mcp_description'                   => __( 'Make your website easier for AI tools to understand. Website content updates will be tracked to keep the AI discovery service up to date.', 'hostinger' ),\n                    'hostinger_tools_llms_txt_learn_more'                     => __( 'Learn more', 'hostinger' ),\n                    'hostinger_tools_llms_txt_check_validity'                 => __( 'Check validity', 'hostinger' ),\n                    'hostinger_tools_llms_txt_llmstxt'                        => __( 'LLMS.txt', 'hostinger' ),\n                    'hostinger_tools_llms_txt_external_file_found'            => __( 'An external LLMs.txt file was found. Switching on the toggle will replace it with a new one.', 'hostinger' ),\n                    'hostinger_tools_llms_txt_modal_title'                    => __( 'Create new LLMs.txt file?', 'hostinger' ),\n                    'hostinger_tools_llms_txt_modal_description'              => __( 'This will replace the existing LLMs.txt file with a new one by Hostinger Tools. The original file can\u2019t be restored.', 'hostinger' ),\n                    'hostinger_tools_llms_txt_modal_cancel'                   => __( 'Cancel', 'hostinger' ),\n                    'hostinger_tools_llms_txt_modal_create_file'              => __( 'Create file', 'hostinger' ),\n                    'hostinger_tools_maintenance_mode'                        => __( 'Maintenance mode', 'hostinger' ),\n                    'hostinger_tools_bypass_link'                             => __( 'Bypass link', 'hostinger' ),\n                    'hostinger_tools_split_title'                             => __( 'We\u2019re splitting Hostinger plugin into two: Hostinger Tools and Hostinger Easy Onboarding', 'hostinger' ),\n                    'hostinger_tools_split_body'                              => __( 'Hostinger Tools will offer new tools to simplify your site management. And Hostinger Easy Onboarding will guide you through the steps of building a website.', 'hostinger' ),\n                    'hostinger_tools_split_got_it'                            => __( 'Got it', 'hostinger' ),\n                    'xml_security_modal_description'                          => __( ' Turning on XML-RPC might make your site less secure. Do you want to proceed?', 'hostinger' ),\n                    'xml_security_modal_title'                                => __( 'Disclaimer', 'hostinger' ),\n                    'xml_security_modal_cancel'                               => __( 'Cancel', 'hostinger' ),\n                    'xml_security_modal_proceed_anyway'                       => __( 'Proceed anyway', 'hostinger' ),\n                    'bypass_link_reset_modal_title'                           => __( 'Bypass link reset', 'hostinger' ),\n                    'bypass_link_reset_modal_description'                     => __( 'This will invalidate the currently generated link in use. This action cannot be undone, are you sure you want to proceed?', 'hostinger' ),\n                    'bypass_link_reset_modal_cancel'                          => __( 'Cancel', 'hostinger' ),\n                    'bypass_link_reset_modal_reset_link'                      => __( 'Reset link', 'hostinger' ),\n                    'bypass_link_reset_success'                               => __( 'Link has been reset', 'hostinger' ),\n                    'hostinger_tools_settings_updated'                        => __( 'Your settings have been updated', 'hostinger' ),\n                    'hostinger_tools_settings_error'                          => __( 'It was an error updating your settings', 'hostinger' ),\n                    'hostinger_tools_mcp_choice'                              => __( 'Allow Kodee to manage your site', 'hostinger' ),\n                    'hostinger_tools_mcp_description'                         => __( 'Let Kodee manage your site on your behalf. This allows Kodee to perform actions like creating pages or updating settings. We will install and pre-configure the WordPress MCP plugin for you.', 'hostinger' ),\n                ),\n                'rest_base_url'                => esc_url_raw( rest_url() ),\n                'nonce'                        => wp_create_nonce( 'wp_rest' ),\n                'wp_version'                   => $wp_version,\n                'php_version'                  => phpversion(),\n                'recommended_php_version'      => $this->helper->get_recommended_php_version(),\n                'mcp_choice'                   => get_option( 'hostinger_mcp_choice', 0 ),\n                'ai_plugin_compatibility'      => $this->check_ai_mcp_compatibility(),\n            )\n        );\n    }\n\n    public function check_ai_mcp_compatibility(): bool {\n        if ( ! function_exists( 'is_plugin_active' ) ) {\n            require_once ABSPATH . 'wp-admin\/includes\/plugin.php';\n        }\n\n        $plugin_path      = 'hostinger-ai-assistant\/hostinger-ai-assistant.php';\n        $required_version = '3.0.0';\n\n        if ( is_plugin_active( $plugin_path ) ) {\n            $plugin_file = WP_PLUGIN_DIR . '\/' . $plugin_path;\n            if ( file_exists( $plugin_file ) ) {\n                $plugin_data    = get_plugin_data( $plugin_file, false, false );\n                $active_version = isset( $plugin_data['Version'] ) ? $plugin_data['Version'] : '';\n\n                if ( $active_version && version_compare( $active_version, $required_version, '>=' ) ) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/DefaultOptions.php","ext":"php","size":2332,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\nuse Hostinger\\Admin\\Options\\PluginOptions;\nuse Hostinger\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass DefaultOptions {\n    \/**\n     * @return void\n     *\/\n    public function add_options(): void {\n        $this->configure_security_settings();\n\n        foreach ( $this->options() as $key => $option ) {\n            update_option( $key, $option );\n        }\n    }\n\n    public function configure_security_settings(): void {\n        $hostinger_plugin_settings = get_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, array() );\n\n        if ( empty( $hostinger_plugin_settings['bypass_code'] ) ) {\n            $hostinger_plugin_settings['bypass_code'] = Helper::generate_bypass_code( 16 );\n            $this->update_plugin_settings( $hostinger_plugin_settings );\n        }\n\n        $this->configure_authentication_password();\n    }\n\n    public function configure_authentication_password(): void {\n        global $wpdb;\n        $hostinger_plugin_settings = get_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, array() );\n\n        $existing_passwords = (int) $wpdb->get_var( $wpdb->prepare( \"SELECT COUNT(*) FROM {$wpdb->usermeta} WHERE meta_key = %s\", '_application_passwords' ) );\n\n        if ( $existing_passwords === 0 ) {\n            $hostinger_plugin_settings['disable_authentication_password'] = true;\n            $this->update_plugin_settings( $hostinger_plugin_settings );\n        }\n    }\n\n    private function update_plugin_settings( array $settings ): void {\n        $plugin_options = new PluginOptions( $settings );\n        update_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, $plugin_options->to_array(), false );\n    }\n\n    \/**\n     * @return string[]\n     *\/\n    private function options(): array {\n        $options = array(\n            'optin_monster_api_activation_redirect_disabled' => 'true',\n            'wpforms_activation_redirect'                    => 'true',\n            'aioseo_activation_redirect'                     => 'false',\n        );\n\n        if ( Helper::is_plugin_active( 'astra-sites' ) ) {\n            $options = array_merge( $options, $this->get_astra_options() );\n        }\n\n        return $options;\n    }\n\n    \/**\n     * @return string[]\n     *\/\n    private function get_astra_options(): array {\n        return array(\n            'astra_sites_settings' => 'gutenberg',\n        );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Settings.php","ext":"php","size":2671,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Settings {\n    public const MYSELF                    = 'myself';\n    public const FREELANCER                = 'freelancer';\n    public const DEVELOPER                 = 'developer';\n    public const OTHER                     = 'other';\n    public const BUSINESS_BEGINNER_SEGMENT = 'business_beginner';\n    public const LEARNER_SEGMENT           = 'learner';\n    public const BUSINESS_OWNER_SEGMENT    = 'business_owner';\n    public const WEBSITE_TYPE_BUSINESS     = 'business';\n    public const WEBSITE_TYPE_PORTFOLIO    = 'portfolio';\n    public const WEBSITE_TYPE_BLOG         = 'blog';\n    public const SITE_TITLE_OPTION         = 'blogname';\n\n    public function __construct() {\n        if ( ! $this->get_setting( 'user_segment' ) ) {\n            $this->set_user_segment();\n        }\n    }\n\n    public function set_user_segment(): void {\n        $created_by  = self::get_setting( 'survey.website.created_by' );\n        $created_for = self::get_setting( 'survey.website.for' );\n        $need_help   = self::get_setting( 'survey.website.need_help' );\n        $work_at     = self::get_setting( 'survey.work_at' );\n\n        if ( $this->is_business_beginner( $created_by, $created_for, $need_help ) ) {\n            self::update_setting( 'user_segment', self::BUSINESS_BEGINNER_SEGMENT );\n        }\n\n        if ( $this->is_learner( $work_at, $need_help ) ) {\n            self::update_setting( 'user_segment', self::LEARNER_SEGMENT );\n        }\n\n        if ( $this->is_bussiness_owner( $created_for, $created_by ) ) {\n            self::update_setting( 'user_segment', self::BUSINESS_OWNER_SEGMENT );\n        }\n    }\n\n    private function is_business_beginner( string $created_by, string $created_for, bool $need_help ): bool {\n        return $created_by === self::MYSELF && $created_for === self::MYSELF && $need_help;\n    }\n\n    private function is_learner( string $work_at, bool $need_help ): bool {\n        return $work_at === self::FREELANCER && $need_help;\n    }\n\n    private function is_bussiness_owner( string $created_for, string $created_by ): bool {\n        return $created_for === self::MYSELF && ( $created_by === self::DEVELOPER || $created_by === self::OTHER );\n    }\n\n    public static function get_setting( string $setting ): string {\n\n        if ( $setting ) {\n            return get_option( 'hostinger_' . $setting, '' );\n        }\n\n        return '';\n    }\n\n    public static function update_setting( string $setting, $value, $autoload = null ): void {\n\n        if ( $setting ) {\n            update_option( 'hostinger_' . $setting, $value, $autoload );\n        }\n    }\n}\n\nnew Settings();\n"},{"base":"plugins","rel":"hostinger\/includes\/Deactivator.php","ext":"php","size":136,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Deactivator {\n    public static function deactivate(): void {\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Activator.php","ext":"php","size":734,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Activator {\n    public const INSTALLATION_OPTION_NAME = 'hts_new_installation';\n    \/**\n     * @return void\n     *\/\n    public static function activate(): void {\n        $options = new DefaultOptions();\n        $options->add_options();\n\n        self::update_installation_state_on_activation();\n    }\n\n    \/**\n     * Saves installation state.\n     *\n     * @return void\n     *\/\n    public static function update_installation_state_on_activation(): void {\n        $installation_state = get_option( self::INSTALLATION_OPTION_NAME, false );\n\n        if ( $installation_state !== 'old' ) {\n            add_option( self::INSTALLATION_OPTION_NAME, 'new' );\n        }\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Cli\/Commands\/Maintenance.php","ext":"php","size":4584,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Cli\\Commands;\n\nuse Hostinger\\Admin\\PluginSettings;\nuse WP_CLI;\nuse Hostinger\\Settings;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Maintenance {\n\n    public static function define_command(): void {\n        if ( class_exists( '\\WP_CLI' ) ) {\n            WP_CLI::add_command(\n                'hostinger',\n                self::class,\n                array(\n                    'shortdesc' => 'List of Hostinger commands.',\n                    'longdesc'  => 'Available Hostinger commands:' . \"\\n\\n\" .\n                                '  wp hostinger maintenance mode <0|1>' . \"\\n\" .\n                                '  Manage the maintenance mode of the site. Use 1 to enable and 0 to disable maintenance mode.' . \"\\n\\n\" .\n                                '  wp hostinger maintenance status' . \"\\n\" .\n                                '  Display the current maintenance mode status.' . \"\\n\\n\" .\n                                '## SUBCOMMANDS' . \"\\n\\n\" .\n                                '* mode <0|1>' . \"\\n\" .\n                                ': Enable (1) or disable (0) maintenance mode.' . \"\\n\\n\" .\n                                '* status' . \"\\n\" .\n                                ': Display the current maintenance mode status.' . \"\\n\\n\" .\n                                '## EXAMPLES' . \"\\n\\n\" .\n                                '  wp hostinger maintenance mode 1' . \"\\n\" .\n                                '  Enables the maintenance mode.' . \"\\n\\n\" .\n                                '  wp hostinger maintenance mode 0' . \"\\n\" .\n                                '  Disables the maintenance mode.' . \"\\n\\n\" .\n                                '  wp hostinger maintenance status' . \"\\n\" .\n                                '  Returns whether maintenance mode is enabled or disabled.' . \"\\n\",\n                )\n            );\n\n            WP_CLI::add_command(\n                'hostinger maintenance',\n                self::class,\n                array(\n                    'shortdesc' => 'Manage the maintenance mode of the site.',\n                    'longdesc'  => 'This command allows you to enable or disable maintenance mode for the site.' . \"\\n\\n\" .\n                                '## OPTIONS' . \"\\n\\n\" .\n                                'mode <0|1>' . \"\\n\" .\n                                ': Enable (1) or disable (0) maintenance mode.' . \"\\n\\n\" .\n                                '## EXAMPLES' . \"\\n\\n\" .\n                                '  wp hostinger maintenance mode 1' . \"\\n\" .\n                                '  Enables the maintenance mode.' . \"\\n\\n\" .\n                                '  wp hostinger maintenance mode 0' . \"\\n\" .\n                                '  Disables the maintenance mode.' . \"\\n\\n\" .\n                                '  wp hostinger maintenance status' . \"\\n\" .\n                                '  Returns whether maintenance mode is enabled or disabled.' . \"\\n\",\n                )\n            );\n        }\n    }\n\n    \/**\n     * Command allows enable\/disable maintenance mode.\n     *\n     * @param array $args\n     *\n     * @return void\n     * @throws \\Exception\n     *\/\n    public function mode( array $args ): void {\n        if ( empty( $args ) ) {\n            WP_CLI::error( 'Arguments cannot be empty. Use 0 or 1' );\n        }\n\n        $plugin_settings = new PluginSettings();\n        $plugin_options  = $plugin_settings->get_plugin_settings();\n\n        switch ( $args[0] ) {\n            case '1':\n                $plugin_options->set_maintenance_mode( true );\n                WP_CLI::success( 'Maintenance mode ENABLED' );\n                break;\n            case '0':\n                $plugin_options->set_maintenance_mode( false );\n                WP_CLI::success( 'Maintenance mode DISABLED' );\n                break;\n            default:\n                throw new \\Exception( 'Invalid maintenance mode value' );\n        }\n\n        $plugin_settings->save_plugin_settings( $plugin_options );\n\n        if ( has_action( 'litespeed_purge_all' ) ) {\n            do_action( 'litespeed_purge_all' );\n        }\n    }\n\n    \/**\n     * Command return maintenance mode status.\n     *\n     * @return bool\n     *\/\n    public function status(): bool {\n        $plugin_settings = new PluginSettings();\n        $plugin_options  = $plugin_settings->get_plugin_settings();\n\n        if ( $plugin_options->get_maintenance_mode() ) {\n            WP_CLI::success( 'Maintenance mode ENABLED' );\n        } else {\n            WP_CLI::success( 'Maintenance mode DISABLED' );\n        }\n\n        return (bool) $plugin_options->get_maintenance_mode();\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Mcp\/EventHandlerFactory.php","ext":"php","size":1156,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Mcp;\n\nuse Hostinger\\Admin\\Proxy;\nuse Hostinger\\Mcp\\Handlers\\WebsiteMcpOptInToggled;\nuse Hostinger\\Mcp\\Handlers\\WebsitePageUpdated;\nuse Hostinger\\Mcp\\Handlers\\WebsiteUpdated;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass EventHandlerFactory {\n\n    public const MCP_EVENT_UPDATED       = 'wordpress.website.updated';\n    public const MCP_EVENT_PAGE_UPDATED  = 'wordpress.website.page_updated';\n    public const MCP_EVENT_OPTIN_TOGGLED = 'wordpress.website.mcp.opt_in_toggled';\n\n    private array $handlers;\n    private Proxy $proxy;\n\n    public function __construct( Proxy $proxy ) {\n        $this->proxy    = $proxy;\n        $this->handlers = array(\n            self::MCP_EVENT_UPDATED       => WebsiteUpdated::class,\n            self::MCP_EVENT_PAGE_UPDATED  => WebsitePageUpdated::class,\n            self::MCP_EVENT_OPTIN_TOGGLED => WebsiteMcpOptInToggled::class,\n        );\n    }\n\n    public function get_handler( string $event ) {\n        $handler = $this->handlers[ $event ] ?? false;\n        if ( ! $handler ) {\n            throw new \\WP_Exception( 'Invalid event' );\n        }\n\n        return new $handler( $this->proxy );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Mcp\/Handlers\/WebsiteMcpOptInToggled.php","ext":"php","size":230,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Mcp\\Handlers;\n\ndefined( 'ABSPATH' ) || exit;\nclass WebsiteMcpOptInToggled extends EventHandler {\n\n    public function send( array $args = array() ): void {\n        $this->send_to_proxy( $args );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Mcp\/Handlers\/EventHandler.php","ext":"php","size":1999,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Mcp\\Handlers;\n\nuse Hostinger\\Admin\\Proxy;\nuse Hostinger\\Mcp\\EventHandlerFactory;\n\ndefined( 'ABSPATH' ) || exit;\n\nabstract class EventHandler {\n\n    public Proxy $proxy;\n\n    public function __construct( Proxy $proxy ) {\n        $this->proxy = $proxy;\n    }\n\n    protected function send_to_proxy( array $args = array() ): bool {\n        if ( ! $this->can_send( $args ) ) {\n            $this->debug_mcp( 'Event failed: User is not opted in' . ' -- ' . print_r( $args, true ) );\n            return false;\n        }\n\n        $event   = $args['event'];\n        $request = $this->proxy->trigger_event( $event, $args );\n        if ( is_wp_error( $request ) ) {\n            $this->debug_mcp( 'Event failed: ' . $event . $request->get_error_message() . ' -- ' . print_r( $args, true ) );\n            return false;\n        }\n\n        $response_code = wp_remote_retrieve_response_code( $request );\n        if ( $response_code < 300 ) {\n            $this->debug_mcp( 'Event sent: ' . $event . ' -- ' . print_r( $args, true ) );\n            return true;\n        }\n\n        $this->debug_mcp( 'Event failed: ' . $event . ' --' . $response_code . ' -- ' . print_r( $args, true ) );\n        return false;\n    }\n\n    public function can_send( array $args = array() ): bool {\n        return isset( $args['event'] ) && ( $this->is_optin_event( $args['event'] ) || $this->is_opted_in() );\n    }\n\n    private function is_opted_in(): bool {\n        $settings = get_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, array() );\n        return $settings['optin_mcp'] ?? false;\n    }\n\n    private function is_optin_event( $event ): bool {\n        return $event === EventHandlerFactory::MCP_EVENT_OPTIN_TOGGLED;\n    }\n\n    private function debug_mcp( string $msg ): void {\n        if ( defined( 'WP_DEBUG' ) && WP_DEBUG ) {\n            error_log( 'Hostinger Tools MCP: ' . $msg . PHP_EOL, 3, WP_CONTENT_DIR . '\/mcp.log' );\n        }\n    }\n\n    abstract public function send( array $args = array() ): void;\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Mcp\/Handlers\/WebsitePageUpdated.php","ext":"php","size":857,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Mcp\\Handlers;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass WebsitePageUpdated extends EventHandler {\n\n    const ALLOWED_POST_TYPES = array( 'post', 'product', 'page' );\n\n    public function send( array $args = array() ): void {\n        if ( ! $this->can_send( $args ) ) {\n            return;\n        }\n\n        $post        = get_post( $args['post_id'] );\n        $args['url'] = get_permalink( $post );\n        $this->send_to_proxy( $args );\n    }\n\n    public function can_send( array $args = array() ): bool {\n        $post_id = $args['post_id'] ?? false;\n\n        if ( ! $post_id ) {\n            return false;\n        }\n\n        $post = get_post( $post_id );\n        if ( ! $post ) {\n            return false;\n        }\n\n        return parent::can_send( $args ) && in_array( $post->post_type, self::ALLOWED_POST_TYPES, true );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Mcp\/Handlers\/WebsiteUpdated.php","ext":"php","size":882,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Mcp\\Handlers;\n\n\nuse Hostinger\\Admin\\Jobs\\ActionScheduler;\n\ndefined( 'ABSPATH' ) || exit;\nclass WebsiteUpdated extends EventHandler {\n\n    const MCP_SITE_TRANSIENT          = 'hostinger_mcp_site_status';\n    const MCP_SITE_TRANSIENT_LIFETIME = 1200; \/\/ 20 mins\n\n    public function send( array $args = array() ): void {\n        if ( ! $this->can_send( $args ) ) {\n            return;\n        }\n\n        $status = ActionScheduler::STATUS_FAILED;\n\n        if ( $this->send_to_proxy( $args ) ) {\n            $status = ActionScheduler::STATUS_COMPLETE;\n        }\n\n        set_transient( self::MCP_SITE_TRANSIENT, $status, self::MCP_SITE_TRANSIENT_LIFETIME );\n    }\n\n    public function can_send( array $args = array() ): bool {\n        return parent::can_send( $args ) && get_transient( self::MCP_SITE_TRANSIENT ) !== ActionScheduler::STATUS_COMPLETE;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Hooks.php","ext":"php","size":5972,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\nuse Hostinger\\Admin\\PluginSettings;\nuse Hostinger\\Admin\\Jobs\\NotifyMcpJob;\nuse Hostinger\\Mcp\\EventHandlerFactory;\nuse Hostinger\\WpHelper\\Utils;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Hooks {\n    public function __construct() {\n        add_filter( 'xmlrpc_enabled', array( $this, 'check_xmlrpc_enabled' ) );\n        add_filter( 'wp_is_application_passwords_available', array( $this, 'check_authentication_password_enabled' ) );\n        add_filter( 'wp_headers', array( $this, 'check_pingback' ) );\n        add_filter( 'plugins_loaded', array( $this, 'plugins_loaded' ) );\n        add_action( 'update_option_woocommerce_coming_soon', array( $this, 'litespeed_flush_cache' ) );\n        add_action( 'update_option_woocommerce_store_pages_only', array( $this, 'litespeed_flush_cache' ) );\n        add_action( 'upgrader_process_complete', array( $this, 'disable_auth_passwords_on_update' ), 10, 2 );\n        add_action( 'transition_post_status', array( $this, 'handle_transition_post_status' ), 10, 3 );\n        add_action( 'updated_option', array( $this, 'handle_updated_option' ), 10, 3 );\n    }\n\n    public function handle_transition_post_status( string $new_status, string $old_status, \\WP_Post $post ): void {\n        if ( $new_status === 'publish' || $old_status === 'publish' ) {\n            do_action(\n                NotifyMcpJob::JOB_NAME,\n                array(\n                    'event'   => EventHandlerFactory::MCP_EVENT_PAGE_UPDATED,\n                    'post_id' => $post->ID,\n                )\n            );\n        }\n    }\n\n    public function handle_updated_option( string $option, mixed $old_value, mixed $value ): void {\n        if ( $option === 'cron' || $this->is_transient( $option ) ) {\n            return;\n        }\n\n        if ( $old_value !== $value ) {\n            do_action( NotifyMcpJob::JOB_NAME, array( 'event' => EventHandlerFactory::MCP_EVENT_UPDATED ) );\n        }\n\n        if ( $option === HOSTINGER_PLUGIN_SETTINGS_OPTION && isset( $value['optin_mcp'] ) && isset( $old_value['optin_mcp'] ) ) {\n            if ( $old_value['optin_mcp'] !== $value['optin_mcp'] ) {\n                do_action(\n                    NotifyMcpJob::JOB_NAME,\n                    array(\n                        'event' => EventHandlerFactory::MCP_EVENT_OPTIN_TOGGLED,\n                        'value' => $value['optin_mcp'],\n                    )\n                );\n            }\n        }\n    }\n\n    public function disable_auth_passwords_on_update( \\WP_Upgrader $upgrader_object, array $options ): void {\n        if ( $options['action'] !== 'update' || $options['type'] !== 'plugin' || empty( $options['plugins'] ) ) {\n            return;\n        }\n\n        if ( ! in_array( 'hostinger\/hostinger.php', $options['plugins'], true ) ) {\n            return;\n        }\n\n        $settings = get_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, array() );\n\n        if ( ! empty( $settings['disable_authentication_password'] ) ) {\n            return;\n        }\n\n        $options = new DefaultOptions();\n        $options->configure_authentication_password();\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function plugins_loaded() {\n        $utils           = new Utils();\n        $plugin_settings = new PluginSettings();\n        $settings        = $plugin_settings->get_plugin_settings();\n\n        if ( defined( 'WP_CLI' ) && \\WP_CLI ) {\n            return;\n        }\n\n        \/\/ Xmlrpc.\n        if ( $settings->get_disable_xml_rpc() && $utils->isThisPage( 'xmlrpc.php' ) ) {\n            exit( 'Disabled' );\n        }\n\n        \/\/ SSL redirect.\n        if ( $settings->get_force_https() && ! is_ssl() ) {\n            if ( isset( $_SERVER['HTTP_HOST'] ) && isset( $_SERVER['REQUEST_URI'] ) ) {\n                $host = sanitize_text_field( wp_unslash( $_SERVER['HTTP_HOST'] ) );\n\n                if ( $settings->get_force_www() && strpos( $host, 'www.' ) === false ) {\n                    $host = 'www.' . $host;\n                }\n\n                wp_safe_redirect( 'https:\/\/' . $host . sanitize_text_field( wp_unslash( $_SERVER['REQUEST_URI'] ) ), 301 );\n                exit;\n            }\n        }\n\n        \/\/ Force www.\n        if ( $settings->get_force_www() ) {\n            if ( isset( $_SERVER['HTTP_HOST'] ) && isset( $_SERVER['REQUEST_URI'] ) ) {\n                $host = sanitize_text_field( wp_unslash( $_SERVER['HTTP_HOST'] ) );\n\n                if ( strpos( $host, 'www.' ) === false ) {\n                    wp_safe_redirect( 'https:\/\/www.' . $host . sanitize_text_field( wp_unslash( $_SERVER['REQUEST_URI'] ) ), 301 );\n                    exit;\n                }\n            }\n        }\n    }\n\n    \/**\n     * @param mixed $headers\n     *\n     * @return mixed\n     *\/\n    public function check_pingback( $headers ) {\n        $plugin_settings = new PluginSettings();\n        $settings        = $plugin_settings->get_plugin_settings();\n\n        if ( $settings->get_disable_xml_rpc() ) {\n            unset( $headers['X-Pingback'] );\n        }\n\n        return $headers;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function check_xmlrpc_enabled(): bool {\n        $plugin_settings = new PluginSettings();\n        $settings        = $plugin_settings->get_plugin_settings();\n\n        if ( $settings->get_disable_xml_rpc() ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function check_authentication_password_enabled(): bool {\n        $plugin_settings = new PluginSettings();\n        $settings        = $plugin_settings->get_plugin_settings();\n\n        if ( $settings->get_disable_authentication_password() ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    public function litespeed_flush_cache(): void {\n        if ( has_action( 'litespeed_purge_all' ) ) {\n            do_action( 'litespeed_purge_all' );\n        }\n    }\n\n    private function is_transient( $option ): bool {\n        return str_contains( $option, '_transient' );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/I18n.php","ext":"php","size":389,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass I18n {\n    \/**\n     * Load the plugin text domain for translation.\n     *\n     * @since    1.2.0\n     *\/\n    public function load_plugin_textdomain(): void {\n        load_plugin_textdomain(\n            'hostinger',\n            false,\n            dirname( plugin_basename( __FILE__ ), 2 ) . '\/languages\/'\n        );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Rest\/Routes.php","ext":"php","size":2882,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Rest;\n\nif ( ! defined( 'ABSPATH' ) ) {\n    die;\n}\n\n\/**\n * Class for handling Rest Api Routes\n *\/\nclass Routes {\n    \/**\n     * @var Settings\n     *\/\n    private SettingsRoutes $settings_routes;\n\n    \/**\n     * @param SettingsRoutes $settings_routes Settings route class.\n     *\/\n    public function __construct( SettingsRoutes $settings_routes ) {\n        $this->settings_routes = $settings_routes;\n    }\n\n    \/**\n     * Init rest routes\n     *\n     * @return void\n     *\/\n    public function init(): void {\n        add_action( 'rest_api_init', array( $this, 'register_routes' ) );\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function register_routes() {\n        \/\/ Register Settings Rest API Routes.\n        $this->register_settings_routes();\n    }\n\n    \/**\n     *\n     * @return void\n     *\/\n    private function register_settings_routes(): void {\n        \/\/ Return settings.\n        register_rest_route(\n            HOSTINGER_PLUGIN_REST_API_BASE,\n            'get-settings',\n            array(\n                'methods'             => 'GET',\n                'callback'            => array( $this->settings_routes, 'get_settings' ),\n                'permission_callback' => array( $this, 'permission_check' ),\n            )\n        );\n\n        \/\/ Update settings.\n        register_rest_route(\n            HOSTINGER_PLUGIN_REST_API_BASE,\n            'update-settings',\n            array(\n                'methods'             => 'POST',\n                'callback'            => array( $this->settings_routes, 'update_settings' ),\n                'permission_callback' => array( $this, 'permission_check' ),\n            )\n        );\n\n        \/\/ Regenerate bypass link.\n        register_rest_route(\n            HOSTINGER_PLUGIN_REST_API_BASE,\n            'regenerate-bypass-code',\n            array(\n                'methods'             => 'GET',\n                'callback'            => array( $this->settings_routes, 'regenerate_bypass_code' ),\n                'permission_callback' => array( $this, 'permission_check' ),\n            )\n        );\n    }\n\n    \/**\n     * @param WP_REST_Request $request WordPress rest request.\n     *\n     * @return bool\n     *\/\n    \/** PHPCS:disable Generic.CodeAnalysis.UnusedFunctionParameter.Found *\/\n    public function permission_check( $request ): bool {\n        \/\/ Workaround if Rest Api endpoint cache is enabled.\n        \/\/ We don't want to cache these requests.\n        if ( has_action( 'litespeed_control_set_nocache' ) ) {\n            do_action(\n                'litespeed_control_set_nocache',\n                'Custom Rest API endpoint, not cacheable.'\n            );\n        }\n\n        if ( empty( is_user_logged_in() ) ) {\n            return false;\n        }\n\n        \/\/ Implement custom capabilities when needed.\n        return current_user_can( 'manage_options' );\n    }\n}\n\/** PHPCS:enable *\/\n"},{"base":"plugins","rel":"hostinger\/includes\/Rest\/SettingsRoutes.php","ext":"php","size":9419,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\Rest;\n\nif ( ! defined( 'ABSPATH' ) ) {\n    die;\n}\n\nuse Hostinger\\Admin\\Options\\PluginOptions;\nuse Hostinger\\Admin\\PluginSettings;\nuse Hostinger\\Helper;\n\n\/**\n * Class for handling Settings Rest API\n *\/\nclass SettingsRoutes {\n\n\n    \/**\n     * @var PluginSettings plugin settings.\n     *\/\n    private PluginSettings $plugin_settings;\n\n    \/**\n     * Construct class with dependencies\n     *\n     * @param PluginSettings $plugin_settings instance.\n     *\/\n    public function __construct( PluginSettings $plugin_settings ) {\n        $this->plugin_settings = $plugin_settings;\n    }\n\n    \/**\n     * Return all stored plugin settings\n     *\n     * @param WP_REST_Request $request WordPress rest request.\n     *\n     * @return \\WP_REST_Response\n     *\/\n\n    \/** PHPCS:disable Generic.CodeAnalysis.UnusedFunctionParameter.Found *\/\n    public function get_settings( \\WP_REST_Request $request ): \\WP_REST_Response {\n        global $wp_version;\n        $plugin_settings = $this->plugin_settings->get_plugin_settings();\n\n        $data = array(\n            'newest_wp_version'        => $this->get_latest_wordpress_version(),\n            'current_wp_version'       => $wp_version,\n            'php_version'              => phpversion(),\n            'newest_php_version'       => '8.2', \/\/ Will be refactored.\n            'is_eligible_www_redirect' => $this->is_eligible_www_redirect(),\n            'optin_mcp'                => $plugin_settings->get_optin_mcp(),\n        );\n\n        $hostinger_plugin_settings = get_option( HOSTINGER_PLUGIN_SETTINGS_OPTION, array() );\n\n        if ( empty( $plugin_settings->get_bypass_code() ) ) {\n            if ( empty( $hostinger_plugin_settings['bypass_code'] ) ) {\n                $hostinger_plugin_settings['bypass_code'] = Helper::generate_bypass_code( 16 );\n            }\n        }\n\n        $plugin_settings = $plugin_settings->to_array();\n\n        $response = array(\n            'data' => array_merge( $data, $plugin_settings ),\n        );\n\n        $response = new \\WP_REST_Response( $response );\n\n        $response->set_headers( array( 'Cache-Control' => 'no-cache' ) );\n\n        $response->set_status( \\WP_Http::OK );\n\n        return $response;\n    }\n\n    \/**\n     * @param \\WP_REST_Request $request\n     *\n     * @return \\WP_REST_Response\n     *\/\n    public function regenerate_bypass_code( \\WP_REST_Request $request ): \\WP_REST_Response {\n        $settings = $this->plugin_settings->get_plugin_settings();\n\n        $settings->set_bypass_code( Helper::generate_bypass_code( 16 ) );\n\n        $new_settings = $settings->to_array();\n\n        $new_plugin_options = new PluginOptions( $new_settings );\n\n        $response = new \\WP_REST_Response( array( 'data' => $this->plugin_settings->save_plugin_settings( $new_plugin_options )->to_array() ) );\n\n        $response->set_headers( array( 'Cache-Control' => 'no-cache' ) );\n\n        $response->set_status( \\WP_Http::OK );\n\n        return $response;\n    }\n\n    \/**\n     * @param \\WP_REST_Request $request\n     *\n     * @return \\WP_REST_Response\n     *\/\n    public function update_settings( \\WP_REST_Request $request ): \\WP_REST_Response {\n        $settings = $this->plugin_settings->get_plugin_settings();\n\n        $new_settings = array();\n\n        $parameters = $request->get_params();\n\n        foreach ( $settings->to_array() as $field_key => $field_value ) {\n            if ( $field_key === 'bypass_code' ) {\n                $new_settings[ $field_key ] = $field_value;\n                continue;\n            }\n\n            if ( isset( $parameters[ $field_key ] ) ) {\n                $new_settings[ $field_key ] = ! empty( $parameters[ $field_key ] );\n            } else {\n                $new_settings[ $field_key ] = $field_value;\n            }\n\n            if ( $this->has_changed( $field_key, $new_settings[ $field_key ] ) ) {\n                do_action( \"hostinger_tools_setting_{$field_key}_update\", $new_settings[ $field_key ] );\n            }\n        }\n\n        $new_plugin_options = new PluginOptions( $new_settings );\n\n        $response = new \\WP_REST_Response( array( 'data' => $this->plugin_settings->save_plugin_settings( $new_plugin_options )->to_array() ) );\n\n        $this->update_urls( $new_plugin_options );\n\n        $response->set_headers( array( 'Cache-Control' => 'no-cache' ) );\n\n        $response->set_status( \\WP_Http::OK );\n\n        if ( has_action( 'litespeed_purge_all' ) ) {\n            do_action( 'litespeed_purge_all' );\n        }\n\n        do_action( 'hostinger_tools_settings_saved', $new_settings );\n\n        return $response;\n    }\n    \/** PHPCS:enable *\/\n    \/**\n     * @param PluginOptions $plugin_options\n     *\n     * @return bool\n     *\/\n    private function update_urls( PluginOptions $plugin_options ): bool {\n        $siteurl = get_option( 'siteurl' );\n        $home    = get_option( 'home' );\n\n        if ( empty( $siteurl ) || empty( $home ) ) {\n            return false;\n        }\n\n        if ( $plugin_options->get_force_https() ) {\n            $siteurl = str_replace( 'http:\/\/', 'https:\/\/', $siteurl );\n            $home    = str_replace( 'http:\/\/', 'https:\/\/', $home );\n        }\n\n        if ( $this->is_eligible_www_redirect() ) {\n            if ( $plugin_options->get_force_www() ) {\n                $siteurl = $this->add_www_to_url( $siteurl );\n                $home    = $this->add_www_to_url( $home );\n            } else {\n                $siteurl = str_replace( 'www.', '', $siteurl );\n                $home    = str_replace( 'www.', '', $home );\n            }\n        }\n\n        update_option( 'siteurl', $siteurl );\n        update_option( 'home', $home );\n\n        return true;\n    }\n\n    \/**\n     * @param string $url\n     *\n     * @return mixed\n     *\/\n    private function add_www_to_url( string $url ): string {\n        $parsed_url = wp_parse_url( $url );\n\n        if ( isset( $parsed_url['host'] ) ) {\n            $host = $parsed_url['host'];\n\n            if ( strpos( $host, 'www.' ) !== 0 ) {\n                $host = 'www.' . $host;\n            }\n\n            $parsed_url['host'] = $host;\n\n            return $this->rebuild_url( $parsed_url );\n        }\n\n        return $url;\n    }\n\n    \/**\n     * @param array $params\n     *\n     * @return string\n     *\/\n    private function rebuild_url( array $params ): string {\n        $scheme   = isset( $params['scheme'] ) ? $params['scheme'] . ':\/\/' : '';\n        $host     = isset( $params['host'] ) ? $params['host'] : '';\n        $path     = isset( $params['path'] ) ? $params['path'] : '';\n        $query    = isset( $params['query'] ) ? '?' . $params['query'] : '';\n        $fragment = isset( $params['fragment'] ) ? '#' . $params['fragment'] : '';\n\n        return \"$scheme$host$path$query$fragment\";\n    }\n\n    \/**\n     * @return string\n     *\/\n    private function get_latest_wordpress_version(): string {\n        $newest_wordpress_version = get_transient( 'hostinger_newest_wordpress_version' );\n\n        if ( $newest_wordpress_version !== false ) {\n            return $newest_wordpress_version;\n        }\n\n        $newest_wordpress_version = $this->fetch_wordpress_version();\n\n        if ( ! empty( $newest_wordpress_version ) ) {\n            set_transient( 'hostinger_newest_wordpress_version', $newest_wordpress_version, 86400 );\n\n            return $newest_wordpress_version;\n        }\n\n        return '';\n    }\n\n    \/**\n     * @return string\n     *\/\n    private function fetch_wordpress_version(): string {\n        $url      = 'https:\/\/api.wordpress.org\/core\/version-check\/1.7\/';\n        $response = wp_remote_get( $url );\n\n        if ( is_wp_error( $response ) ) {\n            return '';\n        }\n\n        $response_body = wp_remote_retrieve_body( $response );\n\n        if ( $response_body === false ) {\n            return '';\n        }\n\n        $data = json_decode( $response_body, true );\n\n        if ( json_last_error() !== JSON_ERROR_NONE || empty( $data['offers'][0]['current'] ) ) {\n            return '';\n        }\n\n        return $data['offers'][0]['current'];\n    }\n\n    \/**\n     * @return bool\n     *\/\n    private function is_eligible_www_redirect(): bool {\n        $is_eligible_www_redirect = get_transient( 'hostinger_is_eligible_www_redirect' );\n\n        if ( $is_eligible_www_redirect !== false ) {\n            return $is_eligible_www_redirect;\n        }\n\n        $domain     = str_replace( 'www.', '', get_option( 'siteurl' ) );\n        $www_domain = $this->add_www_to_url( $domain );\n\n        $is_eligible_www_redirect = $this->check_domain_records( $domain, $www_domain );\n\n        if ( isset( $is_eligible_www_redirect ) ) {\n            set_transient( 'hostinger_is_eligible_www_redirect', $is_eligible_www_redirect, 120 );\n\n            return $is_eligible_www_redirect;\n        }\n\n        return '';\n    }\n\n    \/**\n     * Check if the field has changed.\n     *\/\n    private function has_changed( string $field, mixed $new_value ): bool {\n        $settings = $this->plugin_settings->get_plugin_settings();\n        $settings = $settings->to_array();\n\n        if ( ! array_key_exists( $field, $settings ) ) {\n            return false;\n        }\n\n        return $new_value !== $settings[ $field ];\n    }\n\n    \/**\n     * @param string $domain_a\n     * @param string $domain_b\n     *\n     * @return bool\n     *\/\n    public function check_domain_records( string $domain_a, string $domain_b ): bool {\n        return ( gethostbyname( $domain_a ) === gethostbyname( $domain_b ) );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Bootstrap.php","ext":"php","size":2744,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\nuse Hostinger\\Admin\\Ajax as AdminAjax;\nuse Hostinger\\Admin\\PluginSettings;\nuse Hostinger\\Admin\\Jobs\\JobInitializer;\nuse Hostinger\\Admin\\Proxy;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtFileHelper;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtParser;\nuse Hostinger\\Rest\\Routes;\nuse Hostinger\\Rest\\SettingsRoutes;\nuse Hostinger\\Admin\\Assets as AdminAssets;\nuse Hostinger\\Admin\\Hooks as AdminHooks;\nuse Hostinger\\Admin\\Menu as AdminMenu;\nuse Hostinger\\Admin\\Redirects as AdminRedirects;\nuse Hostinger\\WpHelper\\Config;\nuse Hostinger\\WpHelper\\Requests\\Client;\nuse Hostinger\\WpHelper\\Utils;\nuse Hostinger\\LlmsTxtGenerator\\LlmsTxtGenerator;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Bootstrap {\n\n    protected Loader $loader;\n    protected Utils $utils;\n    protected Config $config;\n\n    public function __construct() {\n        $this->loader = new Loader();\n        $this->utils  = new Utils();\n        $this->config = new Config();\n    }\n\n    public function run(): void {\n        $this->load_dependencies();\n        $this->set_locale();\n        $this->loader->run();\n    }\n\n    private function load_dependencies(): void {\n        $this->load_public_dependencies();\n\n        if ( is_admin() ) {\n            $this->load_admin_dependencies();\n        }\n\n        if ( defined( 'WP_CLI' ) && WP_CLI ) {\n            new Cli();\n        }\n\n        $plugin_settings = new PluginSettings();\n        $plugin_options  = $plugin_settings->get_plugin_settings();\n\n        if ( $plugin_options->get_maintenance_mode() ) {\n            require_once HOSTINGER_ABSPATH . 'includes\/ComingSoon.php';\n        }\n    }\n\n    private function set_locale() {\n        $plugin_i18n = new I18n();\n        $this->loader->add_action( 'plugins_loaded', $plugin_i18n, 'load_plugin_textdomain' );\n    }\n\n    private function load_admin_dependencies(): void {\n        new AdminAssets();\n        new AdminHooks( $this->utils );\n        new AdminMenu();\n        new AdminRedirects();\n        new AdminRedirects();\n        new AdminAjax();\n    }\n\n    private function load_public_dependencies(): void {\n\n        $client = new Client(\n            'https:\/\/wh-wordpress-proxy-api.hostinger.io',\n            array(\n                Config::TOKEN_HEADER  => $this->utils->getApiToken(),\n                Config::DOMAIN_HEADER => $this->utils->getHostInfo(),\n            )\n        );\n\n        new JobInitializer( new Proxy( $client, $this->utils ) );\n        new Hooks();\n\n        $plugin_settings = new PluginSettings();\n\n        new LlmsTxtGenerator( $plugin_settings, new LlmsTxtFileHelper(), new LlmsTxtParser() );\n\n        $settings_routes = new SettingsRoutes( $plugin_settings );\n        $routes          = new Routes( $settings_routes );\n        $routes->init();\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/Cli.php","ext":"php","size":589,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\nuse WP_CLI;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Cli {\n    \/**\n     * Load required files and hooks to make the CLI work.\n     *\/\n    public function __construct() {\n        $this->hooks();\n    }\n\n    \/**\n     * Sets up and hooks WP CLI to our CLI code.\n     *\n     * @return void\n     *\/\n    private function hooks(): void {\n\n        if ( class_exists( '\\WP_CLI' ) && class_exists( '\\Hostinger\\Cli\\Commands\\Maintenance' ) ) {\n            WP_CLI::add_hook( 'after_wp_load', array( 'Hostinger\\Cli\\Commands\\Maintenance', 'define_command' ) );\n        }\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/LlmsTxtGenerator\/LlmsTxtGenerator.php","ext":"php","size":5910,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\LlmsTxtGenerator;\n\nuse Hostinger\\Admin\\Jobs\\LlmsTxtInjectContentJob;\nuse Hostinger\\Admin\\PluginSettings;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass LlmsTxtGenerator {\n\n    public const HOSTINGER_LLMSTXT_SIGNATURE            = '[comment]: # (Generated by Hostinger Tools Plugin)';\n    protected const UTF8_BOM                            = \"\\xEF\\xBB\\xBF\";\n    public const HOSTINGER_LLMSTXT_SUPPORTED_POST_TYPES = array(\n        'post'    => 'Posts',\n        'page'    => 'Pages',\n        'product' => 'Products',\n    );\n\n    \/**\n     * Activation and deactivation hooks appears too early,\n     * so the plugin status is not available yet.\n     *\n     * That's why we use a flag this->woocommerce_status to know the plugin status.\n     *\n     * @var string|null\n     *\/\n    protected ?string $woocommerce_status = null;\n    protected PluginSettings $plugin_settings;\n    protected LlmsTxtFileHelper $file_helper;\n    protected LlmsTxtParser $parser;\n\n    public function __construct( PluginSettings $plugin_settings, LlmsTxtFileHelper $llmstxt_file_helper, LlmsTxtParser $llms_txt_parser ) {\n        $this->plugin_settings = $plugin_settings;\n        $this->file_helper     = $llmstxt_file_helper;\n        $this->parser          = $llms_txt_parser;\n        add_action( 'init', array( $this, 'init' ) );\n    }\n\n    public function on_woocommerce_activation(): void {\n        $this->woocommerce_status = 'active';\n        $this->generate();\n    }\n\n    public function on_woocommerce_deactivation(): void {\n        $this->woocommerce_status = 'inactive';\n        $this->generate();\n    }\n\n    public function init(): void {\n        if ( wp_doing_ajax() || wp_doing_cron() || ! current_user_can( 'manage_options' ) ) {\n            return;\n        }\n\n        $settings = $this->plugin_settings->get_plugin_settings();\n\n        if ( $settings->get_enable_llms_txt() && ! $this->file_helper->llmstxt_file_exists() ) {\n            $this->generate();\n        }\n\n        $this->init_hooks();\n    }\n\n    public function on_settings_update( bool $is_enabled ): void {\n        if ( $is_enabled ) {\n            $this->generate();\n        } else {\n            $this->delete();\n        }\n    }\n\n    public function on_post_status_change( string $new_status, string $old_status, \\WP_Post $post ): void {\n        if ( ! $this->is_post_type_supported( $post->post_type ) ) {\n            return;\n        }\n\n        if ( $new_status === 'publish' || $old_status === 'publish' ) {\n            $this->generate();\n        }\n    }\n\n    public function on_blog_change( mixed $old_value, mixed $new_value ): void {\n        if ( $old_value !== $new_value ) {\n            $this->generate();\n        }\n    }\n\n    public function get_content(): string {\n        $content  = self::UTF8_BOM;\n        $content .= $this->parser->inject_title();\n        $content .= $this->parser->inject_site_description();\n        $content .= $this->parser->inject_items( $this->parser->get_by_post_type( 'post' ), 'Posts' );\n        $content .= $this->parser->inject_items( $this->parser->get_by_post_type( 'page' ), 'Pages' );\n        $content .= $this->maybe_inject_woocommerce_products();\n        $content .= $this->maybe_inject_optional_entries();\n        $content .= $this->parser->inject_signature();\n\n        return $content;\n    }\n\n    public function init_hooks(): void {\n        add_action( 'transition_post_status', array( $this, 'on_post_status_change' ), 10, 3 );\n        add_action( 'hostinger_tools_settings_saved', array( $this, 'on_settings_saved' ) );\n        add_action( 'update_option_blogname', array( $this, 'on_blog_change' ), 10, 2 );\n        add_action( 'update_option_blogdescription', array( $this, 'on_blog_change' ), 10, 2 );\n        add_action( 'activate_woocommerce\/woocommerce.php', array( $this, 'on_woocommerce_activation' ) );\n        add_action( 'deactivate_woocommerce\/woocommerce.php', array( $this, 'on_woocommerce_deactivation' ) );\n    }\n\n    public function on_settings_saved( array $settings ): void {\n        if ( $settings['enable_llms_txt'] ) {\n            $this->generate();\n        } else {\n            $this->delete();\n        }\n    }\n\n    public function generate(): void {\n        $this->file_helper->create( $this->get_content() );\n        do_action( LlmsTxtInjectContentJob::JOB_NAME, array( 'post_type' => 'post' ) );\n        do_action( LlmsTxtInjectContentJob::JOB_NAME, array( 'post_type' => 'page' ) );\n\n        if ( $this->is_woocommerce_active() ) {\n            do_action( LlmsTxtInjectContentJob::JOB_NAME, array( 'post_type' => 'product' ) );\n        }\n    }\n\n    protected function delete(): void {\n        $this->file_helper->delete();\n    }\n\n    protected function is_post_type_supported( string $post_type ): bool {\n        return array_key_exists( $post_type, self::HOSTINGER_LLMSTXT_SUPPORTED_POST_TYPES );\n    }\n\n    protected function is_woocommerce_active(): bool {\n        return ( is_null( $this->woocommerce_status ) && is_plugin_active( 'woocommerce\/woocommerce.php' ) ) || $this->woocommerce_status === 'active';\n    }\n\n    protected function maybe_inject_woocommerce_products(): string {\n        if ( ! $this->is_woocommerce_active() ) {\n            return '';\n        }\n\n        return $this->parser->inject_items( $this->parser->get_by_post_type( 'product' ), 'Products' );\n    }\n\n    protected function maybe_inject_optional_entries(): string {\n        $entries   = array();\n        $mcp_entry = $this->maybe_inject_mcp_agent_entry();\n\n        if ( $mcp_entry ) {\n            $entries[] = $mcp_entry;\n        }\n\n        return $this->parser->inject_optional_entries( $entries );\n    }\n\n    protected function maybe_inject_mcp_agent_entry(): string {\n        $settings = $this->plugin_settings->get_plugin_settings();\n        if ( ! $settings->get_optin_mcp() ) {\n            return '';\n        }\n\n        return $this->parser->inject_mcp_agent_entry();\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/LlmsTxtGenerator\/LlmsTxtFileHelper.php","ext":"php","size":1725,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\LlmsTxtGenerator;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass LlmsTxtFileHelper {\n\n    public const HOSTINGER_LLMSTXT_FILENAME = 'llms.txt';\n\n    public function is_user_generated_file(): bool {\n        if ( ! $this->llmstxt_file_exists() ) {\n            return false;\n        }\n\n        $content = $this->get_content();\n\n        if ( $content === false ) {\n            return false;\n        }\n\n        return ! str_contains( $content, LlmsTxtGenerator::HOSTINGER_LLMSTXT_SIGNATURE );\n    }\n\n    public function get_content(): string {\n        global $wp_filesystem;\n        $this->init_wp_filesystem();\n        return $wp_filesystem->get_contents( $this->get_llmstxt_file_path() );\n    }\n\n    public function create( string $content ): void {\n        global $wp_filesystem;\n        $this->init_wp_filesystem();\n        $wp_filesystem->put_contents( $this->get_llmstxt_file_path(), $content );\n    }\n\n    public function delete(): void {\n        if ( $this->llmstxt_file_exists() && ! $this->is_user_generated_file() ) {\n            global $wp_filesystem;\n            $this->init_wp_filesystem();\n            $wp_filesystem->delete( $this->get_llmstxt_file_path() );\n        }\n    }\n\n    public function get_llmstxt_file_path(): string {\n        return ABSPATH . self::HOSTINGER_LLMSTXT_FILENAME;\n    }\n\n    public function get_llmstxt_file_url(): string {\n        return site_url( LlmsTxtFileHelper::HOSTINGER_LLMSTXT_FILENAME );\n    }\n\n    public function llmstxt_file_exists(): bool {\n        return file_exists( $this->get_llmstxt_file_path() );\n    }\n\n    protected function init_wp_filesystem(): void {\n        require_once ABSPATH . '\/wp-admin\/includes\/file.php';\n        WP_Filesystem();\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/LlmsTxtGenerator\/LlmsTxtParser.php","ext":"php","size":2630,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger\\LlmsTxtGenerator;\n\n\ndefined( 'ABSPATH' ) || exit;\n\nclass LlmsTxtParser {\n\n    public const DEFAULT_LIMIT               = 100;\n    public const HOSTINGER_LLMSTXT_SIGNATURE = '[comment]: # (Generated by Hostinger Tools Plugin)';\n\n    public function get_by_post_type( string $post_type, int $limit = self::DEFAULT_LIMIT, int $offset = 0 ): array {\n        $limit = apply_filters( 'hostinger_batch_item_limit', $limit );\n        $args  = array(\n            'post_type'      => $post_type,\n            'post_status'    => 'publish',\n            'fields'         => 'ids',\n            'posts_per_page' => $limit,\n            'offset'         => $offset,\n        );\n\n        return get_posts( $args );\n    }\n\n    public function get_items( array $items ): string {\n        $content = '';\n        foreach ( $items as $item ) {\n            $post      = get_post( $item );\n            $title     = $post->post_title;\n            $permalink = get_permalink( $post );\n            $excerpt   = $this->prepare_excerpt( $post );\n\n            $content .= \"- [$title]($permalink)\";\n            if ( $excerpt ) {\n                $content .= \": $excerpt\";\n            }\n\n            $content .= \"\\n\";\n        }\n\n        return $content;\n    }\n\n    public function inject_site_description(): string {\n        $description = get_bloginfo( 'description' );\n\n        return $description ? \"> $description\\n\\n\" : '';\n    }\n\n    public function inject_title(): string {\n        $title = get_bloginfo( 'name' ) ? get_bloginfo( 'name' ) : site_url();\n\n        return \"# $title\\n\\n\";\n    }\n\n    public function inject_signature(): string {\n        return \"\\n\\n\" . self::HOSTINGER_LLMSTXT_SIGNATURE;\n    }\n\n    public function inject_mcp_agent_entry(): string {\n        $domain = parse_url( site_url(), PHP_URL_HOST );\n\n        return \"- [Agent (MCP protocol)](websites-agents.hostinger.com\/$domain\/mcp)\";\n    }\n\n    public function inject_items( array $items, string $title ): string {\n        if ( empty( $items ) ) {\n            return '';\n        }\n\n        $content  = \"\\n## $title\\n\\n\";\n        $content .= $this->get_items( $items );\n\n        return $content;\n    }\n\n    public function inject_optional_entries( array $entries ): string {\n        $output = '';\n\n        if ( ! empty( $entries ) ) {\n            $output  = \"\\n## Optional\\n\\n\";\n            $output .= implode( \"\\n\", $entries );\n        }\n\n        return $output;\n    }\n\n    public function prepare_excerpt( \\WP_Post $item ): string {\n        return str_replace( array( \"\\r\", \"\\n\" ), ' ', strip_tags( wp_trim_excerpt( $item->post_excerpt, $item ) ) );\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/includes\/ComingSoon.php","ext":"php","size":2693,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\nuse Hostinger\\Admin\\Options\\PluginOptions;\nuse Hostinger\\Admin\\PluginSettings;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass ComingSoon {\n    \/**\n     * @var PluginOptions\n     *\/\n    private PluginOptions $plugin_options;\n\n    public function __construct() {\n        $plugin_settings      = new PluginSettings();\n        $this->plugin_options = $plugin_settings->get_plugin_settings();\n\n        add_action( 'wp_footer', array( $this, 'register_styles' ) );\n        add_action( 'template_redirect', array( $this, 'coming_soon' ) );\n        add_filter( 'wp_headers', array( $this, 'modify_headers' ) );\n\n        \/\/ Fix deprecated warning.\n        if ( has_action( 'wp_footer', 'the_block_template_skip_link' ) ) {\n            remove_action( 'wp_footer', 'the_block_template_skip_link' );\n        }\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function coming_soon(): void {\n        \/\/ Do not cache coming soon page.\n        if ( has_action( 'litespeed_purge_all' ) && ! defined( 'DONOTCACHEPAGE' ) ) {\n            define( 'DONOTCACHEPAGE', true );\n        }\n\n        if ( ! $this->can_bypass_coming_soon() ) {\n            include_once HOSTINGER_ABSPATH . 'includes\/Views\/ComingSoon.php';\n            die;\n        }\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function register_styles(): void {\n        wp_enqueue_style(\n            'hostinger_main_styles',\n            HOSTINGER_ASSETS_URL . '\/css\/coming-soon.min.css',\n            array(),\n            HOSTINGER_VERSION\n        );\n    }\n\n    \/**\n     * @param array $headers\n     *\n     * @return array\n     *\/\n    public function modify_headers( array $headers ): array {\n        $headers['Cache-Control'] = 'no-cache';\n\n        return $headers;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    \/** PHPCS:disable WordPress.Security.NonceVerification.Recommended *\/\n    private function can_bypass_coming_soon(): bool {\n        $bypass_code = isset( $_COOKIE['hostinger_bypass_code'] ) ? sanitize_text_field( $_COOKIE['hostinger_bypass_code'] ) : '';\n\n        if ( isset( $_GET['bypass_code'] ) && $this->plugin_options->get_bypass_code() === $_GET['bypass_code'] ) {\n            setcookie( 'hostinger_bypass_code', $this->plugin_options->get_bypass_code() );\n            $bypass_code = $this->plugin_options->get_bypass_code();\n        }\n\n        if ( is_admin() ) {\n            return true;\n        }\n\n        if ( current_user_can( 'update_plugins' ) ) {\n            return true;\n        }\n\n        if ( ! empty( $bypass_code ) && $bypass_code === $this->plugin_options->get_bypass_code() ) {\n            return true;\n        }\n\n        return false;\n    }\n    \/** PHPCS:enable *\/\n}\n\nnew ComingSoon();\n"},{"base":"plugins","rel":"hostinger\/includes\/Errors.php","ext":"php","size":1325,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Errors {\n    \/**\n     * @var array[]\n     *\/\n    private array $error_messages = array();\n\n    public function __construct() {\n        $this->error_messages = array(\n            'action_failed'    => array(\n                'default' => __( 'Action Failed. Try again or contact support. Apologies.', 'hostinger' ),\n            ),\n            'unexpected_error' => array(\n                'default' => __( 'An unexpected error occurred. Please try again or contact support.', 'hostinger' ),\n            ),\n            'server_error'     => array(\n                'default' => __( 'We apologize for the inconvenience. The AI content generation process encountered a server error. Please try again later, and if the issue persists, kindly contact our support team for assistance.', 'hostinger' ),\n            ),\n        );\n    }\n\n    \/**\n     * @param string $error_code\n     *\n     * @return mixed\n     *\/\n    public function get_error_message( string $error_code ) {\n        if ( array_key_exists( $error_code, $this->error_messages ) ) {\n            $message_data = $this->error_messages[ $error_code ];\n\n            return $message_data['default'];\n        } else {\n            return __( 'Unknown error code.', 'hostinger' );\n        }\n    }\n}\n\nnew Errors();\n"},{"base":"plugins","rel":"hostinger\/includes\/Helper.php","ext":"php","size":5780,"mtime":1757312769,"type":"text","content":"<?php\n\nnamespace Hostinger;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Helper {\n    const HOSTINGER_LOCALES = array(\n        'lt_LT' => 'hostinger.lt',\n        'uk_UA' => 'hostinger.com.ua',\n        'id_ID' => 'hostinger.co.id',\n        'en_US' => 'hostinger.com',\n        'es_ES' => 'hostinger.es',\n        'es_AR' => 'hostinger.com.ar',\n        'es_MX' => 'hostinger.mx',\n        'es_CO' => 'hostinger.co',\n        'pt_BR' => 'hostinger.com.br',\n        'ro_RO' => 'hostinger.ro',\n        'fr_FR' => 'hostinger.fr',\n        'it_IT' => 'hostinger.it',\n        'pl_PL' => 'hostinger.pl',\n        'en_PH' => 'hostinger.ph',\n        'ar_AE' => 'hostinger.ae',\n        'ms_MY' => 'hostinger.my',\n        'ko_KR' => 'hostinger.kr',\n        'vi_VN' => 'hostinger.vn',\n        'th_TH' => 'hostinger.in.th',\n        'tr_TR' => 'hostinger.web.tr',\n        'pt_PT' => 'hostinger.pt',\n        'de_DE' => 'hostinger.de',\n        'en_IN' => 'hostinger.in',\n        'ja_JP' => 'hostinger.jp',\n        'nl_NL' => 'hostinger.nl',\n        'en_GB' => 'hostinger.co.uk',\n        'el_GR' => 'hostinger.gr',\n        'cs_CZ' => 'hostinger.cz',\n        'hu_HU' => 'hostinger.hu',\n        'sv_SE' => 'hostinger.se',\n        'da_DK' => 'hostinger.dk',\n        'fi_FI' => 'hostinger.fi',\n        'sk_SK' => 'hostinger.sk',\n        'no_NO' => 'hostinger.no',\n        'hr_HR' => 'hostinger.hr',\n        'zh_HK' => 'hostinger.com.hk',\n        'he_IL' => 'hostinger.co.il',\n        'lv_LV' => 'hostinger.lv',\n        'et_EE' => 'hostinger.ee',\n        'ur_PK' => 'hostinger.pk',\n    );\n\n    public const HOMEPAGE_DISPLAY = 'page';\n\n    \/**\n     *\n     * Check if plugin is active\n     *\n     * @since    1.0.0\n     * @access   public\n     *\/\n    public static function is_plugin_active( $plugin_slug ): bool {\n        $active_plugins = (array) get_option( 'active_plugins', array() );\n        foreach ( $active_plugins as $active_plugin ) {\n            if ( strpos( $active_plugin, $plugin_slug . '.php' ) !== false ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public function is_preview_domain( $headers = null ): bool {\n        \/\/ @codeCoverageIgnoreStart\n        if ( $headers === null && function_exists( 'getallheaders' ) ) {\n            $headers = getallheaders();\n        }\n        \/\/ @codeCoverageIgnoreEnd\n        if ( isset( $headers['X-Preview-Indicator'] ) && $headers['X-Preview-Indicator'] ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public static function woocommerce_onboarding_choice(): bool {\n        return (bool) get_option( 'hostinger_woo_onboarding_choice', false );\n    }\n\n    public static function generate_bypass_code( $length ) {\n        $characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n        $code       = '';\n        $max_index  = strlen( $characters ) - 1;\n\n        for ( $i = 0; $i < $length; $i++ ) {\n            $random_index = wp_rand( 0, $max_index );\n            $code        .= $characters[ $random_index ];\n        }\n\n        return $code;\n    }\n\n    public function should_plugin_split_notice_shown() {\n        $plugin_split_notice_hidden = get_option( 'hts_plugin_split_notice_hidden', false );\n\n        if ( $plugin_split_notice_hidden !== false ) {\n            return false;\n        }\n\n        if ( ! version_compare( HOSTINGER_VERSION, '3.0.0', '>=' ) ) {\n            return false;\n        }\n\n        if ( is_plugin_active( 'hostinger-easy-onboarding\/hostinger-easy-onboarding.php' ) ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    public function get_hostinger_plugin_url(): string {\n        $website_locale  = get_locale() ?? 'en_US';\n        $reseller_locale = get_option( 'hostinger_reseller', null );\n        $base_domain     = $reseller_locale ?? ( self::HOSTINGER_LOCALES[ $website_locale ] ?? 'hostinger.com' );\n\n        $plugin_url  = rtrim( $base_domain, '\/' ) . '\/';\n        $plugin_url .= str_replace( ABSPATH, '', HOSTINGER_ABSPATH );\n\n        return $plugin_url;\n    }\n\n    public function get_recommended_php_version(): string {\n        $wp_version = get_bloginfo( 'version' );\n\n        if ( empty( $wp_version ) ) {\n            return '8.2';\n        }\n\n        \/\/ Remove any additional version info (like -RC1, -beta1, etc.).\n        $wp_version = preg_replace( '\/[-+].*$\/', '', $wp_version );\n\n        if ( version_compare( $wp_version, '6.6', '>=' ) ) {\n            return '8.2';\n        }\n\n        if ( version_compare( $wp_version, '6.3', '>=' ) ) {\n            return '8.1';\n        }\n\n        if ( version_compare( $wp_version, '5.3', '>=' ) ) {\n            return '7.4';\n        }\n\n        if ( version_compare( $wp_version, '5.0', '>=' ) ) {\n            return '7.3';\n        }\n\n        if ( version_compare( $wp_version, '4.9', '=' ) ) {\n            return '7.2';\n        }\n\n        if ( version_compare( $wp_version, '4.7', '>=' ) ) {\n            return '7.1';\n        }\n\n        if ( version_compare( $wp_version, '4.4', '>=' ) ) {\n            return '7.0';\n        }\n\n        return '5.6';\n    }\n\n    public function get_edit_site_url(): string {\n        if ( wp_is_block_theme() ) {\n            return add_query_arg(\n                array(\n                    'canvas' => 'edit',\n                ),\n                admin_url( 'site-editor.php' )\n            );\n        }\n\n        $show_on_front = get_option( 'show_on_front' );\n        $front_page_id = get_option( 'page_on_front' );\n\n        if ( $show_on_front === self::HOMEPAGE_DISPLAY && $front_page_id ) {\n            return add_query_arg(\n                array(\n                    'post'   => $front_page_id,\n                    'action' => 'edit',\n                ),\n                admin_url( 'post.php' )\n            );\n        }\n\n        return '';\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/uninstall.php","ext":"php","size":49,"mtime":1757312769,"type":"text","content":"<?php\n\ndefined( 'WP_UNINSTALL_PLUGIN' ) || exit;\n"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/105.min.js","ext":"js","size":1625,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[105],{105:function(e,l,n){n.r(l),n.d(l,{default:function(){return o}});var C=n(641);const r={width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http:\/\/www.w3.org\/2000\/svg\"};const u={};var o=(0,n(262).A)(u,[[\"render\",function(e,l){return(0,C.uX)(),(0,C.CE)(\"svg\",r,l[0]||(l[0]=[(0,C.Lk)(\"path\",{\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",d:\"M7.99998 6.23374C7.02266 6.23374 6.2304 7.02601 6.2304 8.00332C6.2304 8.98063 7.02266 9.7729 7.99998 9.7729C8.97729 9.7729 9.76956 8.98063 9.76956 8.00332C9.76956 7.02601 8.97729 6.23374 7.99998 6.23374ZM4.69123 8.00332C4.69123 6.17595 6.17261 4.69457 7.99998 4.69457C9.82735 4.69457 11.3087 6.17595 11.3087 8.00332C11.3087 9.83069 9.82735 11.3121 7.99998 11.3121C6.17261 11.3121 4.69123 9.83069 4.69123 8.00332Z\",fill:\"currentColor\"},null,-1),(0,C.Lk)(\"path\",{\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",d:\"M7.99508 3.92088C6.23615 3.92088 3.12832 4.78339 1.55391 7.93872C1.5343 7.97801 1.53407 8.02604 1.55433 8.06651C3.12861 11.2094 6.1426 12.0858 8.00495 12.0858C9.76389 12.0858 12.8717 11.2233 14.4461 8.06799C14.4657 8.0287 14.466 7.98067 14.4457 7.9402C12.8714 4.79726 9.85743 3.92088 7.99508 3.92088ZM0.176668 7.25152C2.09445 3.40802 5.86487 2.38171 7.99508 2.38171C10.2434 2.38171 13.909 3.43186 15.8219 7.25088C16.0585 7.72326 16.0598 8.28126 15.8234 8.75519C13.9056 12.5987 10.1352 13.625 8.00495 13.625C5.7566 13.625 2.09108 12.5749 0.178153 8.75583C-0.058457 8.28345 -0.0598124 7.72545 0.176668 7.25152Z\",fill:\"currentColor\"},null,-1)]))}]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/227.min.js","ext":"js","size":1969,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[227,121],{121:function(t,l,e){e.r(l),e.d(l,{default:function(){return u}});var o=e(641),a=e(33),s=e(635);const n={class:\"base-modal\"},i={class:\"base-modal__title-container\"},_={key:1,class:\"base-modal__title text-heading-2\"},r={key:0,class:\"base-modal__subtitle\"};var c=(0,o.pM)({__name:\"BaseModal\",props:{title:{},subtitle:{},titleIcon:{}},setup(t){return(t,l)=>((0,o.uX)(),(0,o.CE)(\"div\",n,[(0,o.Lk)(\"span\",i,[t.titleIcon?((0,o.uX)(),(0,o.Wv)(s.A,{key:0,class:\"h-mr-12\",name:t.titleIcon.name,color:t.titleIcon.color},null,8,[\"name\",\"color\"])):(0,o.Q3)(\"v-if\",!0),t.title?((0,o.uX)(),(0,o.CE)(\"h2\",_,(0,a.v_)(t.title),1)):(0,o.Q3)(\"v-if\",!0)]),t.subtitle?((0,o.uX)(),(0,o.CE)(\"p\",r,(0,a.v_)(t.subtitle),1)):(0,o.Q3)(\"v-if\",!0),(0,o.RG)(t.$slots,\"default\")]))}});var u=(0,e(262).A)(c,[[\"__scopeId\",\"data-v-5b1f1386\"]])},227:function(t,l,e){e.r(l),e.d(l,{default:function(){return d}});var o=e(641),a=e(953),s=e(33),n=e(121),i=e(469),_=e(485),r=e(716);const c={class:\"h-mb-24 text-gray\"},u={class:\"d-flex justify-content-end\"};var d=(0,o.pM)({__name:\"EnableLlmsTxtModal\",props:{data:{}},setup(t){const l=t,{closeModal:e}=(0,i.hS)(),d=()=>{l.data.onConfirm&&l.data.onConfirm(),e()};return(t,l)=>((0,o.uX)(),(0,o.Wv)(n.default,{titleIcon:{name:\"icon-info\",color:\"danger\"},title:(0,a.R1)(_.Tl)(\"hostinger_tools_llms_txt_modal_title\")},{default:(0,o.k6)((()=>[(0,o.Lk)(\"p\",c,(0,s.v_)((0,a.R1)(_.Tl)(\"hostinger_tools_llms_txt_modal_description\")),1),(0,o.Lk)(\"div\",u,[(0,o.bF)(r.A,{color:\"danger\",variant:\"text\",class:\"h-mr-16\",onClick:(0,a.R1)(e)},{default:(0,o.k6)((()=>[(0,o.eW)((0,s.v_)((0,a.R1)(_.Tl)(\"hostinger_tools_llms_txt_modal_cancel\")),1)])),_:1},8,[\"onClick\"]),(0,o.bF)(r.A,{color:\"danger\",onClick:d},{default:(0,o.k6)((()=>[(0,o.eW)((0,s.v_)((0,a.R1)(_.Tl)(\"hostinger_tools_llms_txt_modal_create_file\")),1)])),_:1})])])),_:1},8,[\"title\"]))}})}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/src_components_Modals_DeleteTableModal_vue.css","ext":"css","size":1114,"mtime":1756373567,"type":"text","content":"\/*!**************************************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** css .\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true ***!\n  \\**************************************************************************************************************************************************************************************************************************************************************************************************\/\n.base-modal__title[data-v-8740fa32] {\n  font-size: 20px;\n  color: var(--dark);\n  font-weight: 700;\n}\n.base-modal__subtitle[data-v-8740fa32] {\n  font-size: 14px;\n  margin-top: 4px;\n  margin-bottom: 24px;\n  color: var(--gray);\n}\n"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/src_components_Modals_Base_BaseModal_vue.js","ext":"js","size":15955,"mtime":1756373567,"type":"text","content":"\"use strict\";\n\/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https:\/\/webpack.js.org\/configuration\/devtool\/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https:\/\/webpack.js.org\/configuration\/mode\/).\n *\/\n(self[\"webpackChunkhostinger_affiliate_plugin_vue\"] = self[\"webpackChunkhostinger_affiliate_plugin_vue\"] || []).push([[\"src_components_Modals_Base_BaseModal_vue\"],{\n\n\/***\/ \".\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\":\n\/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true ***!\n  \\****************************************************************************************************************************************************************************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/\/ extracted by mini-css-extract-plugin\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?.\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\":\n\/*!********************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true ***!\n  \\********************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! vue *\/ \\\".\/node_modules\/vue\/dist\/vue.runtime.esm-bundler.js\\\");\\n\\n\/* harmony default export *\/ __webpack_exports__[\\\"default\\\"] = (\/*#__PURE__*\/(0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({\\n    __name: 'BaseModal',\\n    props: {\\n        title: { type: String, required: false },\\n        subtitle: { type: String, required: false },\\n        titleIcon: { type: Object, required: false }\\n    },\\n    setup(__props, { expose: __expose }) {\\n        __expose();\\n        const __returned__ = {};\\n        Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true });\\n        return __returned__;\\n    }\\n}));\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?.\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\":\n\/*!*********************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true ***!\n  \\*********************************************************************************************************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   render: function() { return \/* binding *\/ render; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! vue *\/ \\\".\/node_modules\/vue\/dist\/vue.runtime.esm-bundler.js\\\");\\n\\nconst _withScopeId = n => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.pushScopeId)(\\\"data-v-8740fa32\\\"), n = n(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.popScopeId)(), n);\\nconst _hoisted_1 = { class: \\\"base-modal\\\" };\\nconst _hoisted_2 = { class: \\\"base-modal__title-container\\\" };\\nconst _hoisted_3 = [\\\"icon\\\", \\\"color\\\"];\\nconst _hoisted_4 = {\\n    key: 1,\\n    class: \\\"base-modal__title\\\"\\n};\\nconst _hoisted_5 = {\\n    key: 0,\\n    class: \\\"base-modal__subtitle\\\"\\n};\\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\\n    return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"div\\\", _hoisted_1, [\\n        (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\\\"span\\\", _hoisted_2, [\\n            ($props.titleIcon)\\n                ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"hp-icon\\\", {\\n                    key: 0,\\n                    class: \\\"h-mr-12\\\",\\n                    icon: $props.titleIcon.name,\\n                    color: $props.titleIcon.color\\n                }, null, 8 \/* PROPS *\/, _hoisted_3))\\n                : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\\\"v-if\\\", true),\\n            ($props.title)\\n                ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"h2\\\", _hoisted_4, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.title), 1 \/* TEXT *\/))\\n                : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\\\"v-if\\\", true)\\n        ]),\\n        ($props.subtitle)\\n            ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"p\\\", _hoisted_5, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.subtitle), 1 \/* TEXT *\/))\\n            : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\\\"v-if\\\", true),\\n        (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \\\"default\\\", {}, undefined, true)\\n    ]));\\n}\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?.\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue\":\n\/*!**************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue ***!\n  \\**************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var _BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! .\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\\\");\\n\/* harmony import *\/ var _BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\/*! .\/BaseModal.vue?vue&type=script&lang=ts&setup=true *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\\\");\\n\/* harmony import *\/ var _BaseModal_vue_vue_type_style_index_0_id_8740fa32_lang_scss_scoped_true__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\/*! .\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\\\");\\n\/* harmony import *\/ var _node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\/*! ..\/..\/..\/..\/node_modules\/vue-loader\/dist\/exportHelper.js *\/ \\\".\/node_modules\/vue-loader\/dist\/exportHelper.js\\\");\\n\\n\\n\\n\\n;\\n\\n\\nconst __exports__ = \/*#__PURE__*\/(0,_node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(_BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"], [['render',_BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__.render],['__scopeId',\\\"data-v-8740fa32\\\"],['__file',\\\"src\/components\/Modals\/Base\/BaseModal.vue\\\"]])\\n\/* hot reload *\/\\nif (false) {}\\n\\n\\n\/* harmony default export *\/ __webpack_exports__[\\\"default\\\"] = (__exports__);\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\":\n\/*!***********************************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true ***!\n  \\***********************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var _node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_style_index_0_id_8740fa32_lang_scss_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/..\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!..\/..\/..\/..\/node_modules\/css-loader\/dist\/cjs.js!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/stylePostLoader.js!..\/..\/..\/..\/node_modules\/sass-loader\/dist\/cjs.js!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true *\/ \\\".\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\\\");\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\":\n\/*!*************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true ***!\n  \\*************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   \\\"default\\\": function() { return \/* reexport safe *\/ _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/..\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/BaseModal.vue?vue&type=script&lang=ts&setup=true *\/ \\\".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\\\");\\n \\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\":\n\/*!****************************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true ***!\n  \\****************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   render: function() { return \/* reexport safe *\/ _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__.render; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/..\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true *\/ \\\".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\\\");\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ })\n\n}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/821.min.js","ext":"js","size":1811,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[821],{821:function(C,n,t){t.r(n),t.d(n,{default:function(){return o}});var u=t(641);const e={d:\"M12 17C12.2833 17 12.5208 16.9042 12.7125 16.7125C12.9042 16.5208 13 16.2833 13 16V12C13 11.7167 12.9042 11.4792 12.7125 11.2875C12.5208 11.0958 12.2833 11 12 11C11.7167 11 11.4792 11.0958 11.2875 11.2875C11.0958 11.4792 11 11.7167 11 12V16C11 16.2833 11.0958 16.5208 11.2875 16.7125C11.4792 16.9042 11.7167 17 12 17ZM12 9C12.2833 9 12.5208 8.90417 12.7125 8.7125C12.9042 8.52083 13 8.28333 13 8C13 7.71667 12.9042 7.47917 12.7125 7.2875C12.5208 7.09583 12.2833 7 12 7C11.7167 7 11.4792 7.09583 11.2875 7.2875C11.0958 7.47917 11 7.71667 11 8C11 8.28333 11.0958 8.52083 11.2875 8.7125C11.4792 8.90417 11.7167 9 12 9ZM12 22C10.6167 22 9.31667 21.7375 8.1 21.2125C6.88333 20.6875 5.825 19.975 4.925 19.075C4.025 18.175 3.3125 17.1167 2.7875 15.9C2.2625 14.6833 2 13.3833 2 12C2 10.6167 2.2625 9.31667 2.7875 8.1C3.3125 6.88333 4.025 5.825 4.925 4.925C5.825 4.025 6.88333 3.3125 8.1 2.7875C9.31667 2.2625 10.6167 2 12 2C13.3833 2 14.6833 2.2625 15.9 2.7875C17.1167 3.3125 18.175 4.025 19.075 4.925C19.975 5.825 20.6875 6.88333 21.2125 8.1C21.7375 9.31667 22 10.6167 22 12C22 13.3833 21.7375 14.6833 21.2125 15.9C20.6875 17.1167 19.975 18.175 19.075 19.075C18.175 19.975 17.1167 20.6875 15.9 21.2125C14.6833 21.7375 13.3833 22 12 22ZM12 20C14.2333 20 16.125 19.225 17.675 17.675C19.225 16.125 20 14.2333 20 12C20 9.76667 19.225 7.875 17.675 6.325C16.125 4.775 14.2333 4 12 4C9.76667 4 7.875 4.775 6.325 6.325C4.775 7.875 4 9.76667 4 12C4 14.2333 4.775 16.125 6.325 17.675C7.875 19.225 9.76667 20 12 20Z\"};const r={};var o=(0,t(262).A)(r,[[\"render\",function(C,n){return(0,u.uX)(),(0,u.CE)(\"path\",e)}]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/121.min.css","ext":"css","size":296,"mtime":1756373567,"type":"text","content":".base-modal__title-container[data-v-5b1f1386]{align-items:center;display:flex;margin-bottom:8px}.base-modal__title[data-v-5b1f1386]{color:var(--dark);font-size:20px;font-weight:700;margin:0}.base-modal__subtitle[data-v-5b1f1386]{color:var(--gray);font-size:14px;margin-bottom:24px;margin-top:4px}"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/main.min.js","ext":"js","size":268306,"mtime":1756373567},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/main.min.css","ext":"css","size":225300,"mtime":1756373567},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/257.min.js","ext":"js","size":1343,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[257],{257:function(e,n,C){C.r(n),C.d(n,{default:function(){return o}});var l=C(641);const t={width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http:\/\/www.w3.org\/2000\/svg\"};const u={};var o=(0,C(262).A)(u,[[\"render\",function(e,n){return(0,l.uX)(),(0,l.CE)(\"svg\",t,n[0]||(n[0]=[(0,l.Lk)(\"path\",{\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",d:\"M2.5 5.2478C2.5 3.72902 3.73122 2.4978 5.25 2.4978H6C6.41421 2.4978 6.75 2.83359 6.75 3.2478C6.75 3.66202 6.41421 3.9978 6 3.9978H5.25C4.55964 3.9978 4 4.55745 4 5.2478V10.6859C4 11.3763 4.55964 11.9359 5.25 11.9359H10.7508C11.4411 11.9359 12.0008 11.3763 12.0008 10.6859V10C12.0008 9.58579 12.3366 9.25 12.7508 9.25C13.165 9.25 13.5008 9.58579 13.5008 10V10.6859C13.5008 12.2047 12.2696 13.4359 10.7508 13.4359H5.25C3.73122 13.4359 2.5 12.2047 2.5 10.6859V5.2478ZM12 5.06077L8.03033 9.03044C7.73744 9.32333 7.26256 9.32333 6.96967 9.03044C6.67678 8.73754 6.67678 8.26267 6.96967 7.96977L10.9393 4.00011H9C8.58579 4.00011 8.25 3.66432 8.25 3.2501C8.25 2.83589 8.58579 2.50011 9 2.50011L12.25 2.50011C12.9404 2.50011 13.5 3.05975 13.5 3.75011V7.0001C13.5 7.41432 13.1642 7.7501 12.75 7.7501C12.3358 7.7501 12 7.41432 12 7.0001V5.06077Z\",fill:\"currentColor\"},null,-1)]))}]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/494.min.js","ext":"js","size":2331,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[494],{494:function(C,e,l){l.r(e),l.d(e,{default:function(){return o}});var n=l(641);const r={width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http:\/\/www.w3.org\/2000\/svg\"};const u={};var o=(0,l(262).A)(u,[[\"render\",function(C,e){return(0,n.uX)(),(0,n.CE)(\"svg\",r,e[0]||(e[0]=[(0,n.Lk)(\"path\",{\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",d:\"M6.85691 14.1816C6.85691 13.7674 7.14483 13.4316 7.5 13.4316H13.6069C13.9621 13.4316 14.25 13.7674 14.25 14.1816C14.25 14.5958 13.9621 14.9316 13.6069 14.9316H7.5C7.14483 14.9316 6.85691 14.5958 6.85691 14.1816Z\",fill:\"currentColor\"},null,-1),(0,n.Lk)(\"path\",{\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",d:\"M4.29084 12.6658L13.0587 3.80312C13.0835 3.77806 13.1068 3.75446 13.1289 3.7321C13.1066 3.70997 13.083 3.68661 13.0579 3.66183L12.2098 2.82257C12.1847 2.79775 12.1611 2.77438 12.1387 2.75227C12.1165 2.77459 12.0932 2.7982 12.0683 2.82325L6.68596 8.25301L3.29957 11.6881C3.29328 11.6945 3.28738 11.7004 3.28183 11.7061C3.27962 11.7137 3.27728 11.7217 3.27478 11.7303L2.87798 13.0951L4.24799 12.6914C4.25676 12.6888 4.26497 12.6864 4.27271 12.6841C4.27839 12.6784 4.28441 12.6723 4.29084 12.6658ZM5.61974 7.19793L2.23046 10.6359C2.12466 10.7432 2.07176 10.7969 2.02795 10.857C1.98904 10.9104 1.95553 10.9675 1.9279 11.0275C1.89679 11.0951 1.87576 11.1674 1.8337 11.3121L1.24307 13.3436C1.05693 13.9838 0.963865 14.3039 1.04577 14.5217C1.11715 14.7115 1.26745 14.8611 1.45773 14.9316C1.67608 15.0125 1.99607 14.9182 2.63606 14.7296L4.67252 14.1295C4.81992 14.086 4.89362 14.0643 4.96229 14.0322C5.02327 14.0036 5.0812 13.969 5.13522 13.9288C5.19605 13.8836 5.25007 13.829 5.3581 13.7198L14.1259 4.85713C14.5195 4.45935 14.7162 4.26046 14.7891 4.03197C14.8533 3.83099 14.8521 3.61488 14.7859 3.41459C14.7105 3.1869 14.5117 2.99011 14.1139 2.59653L13.2658 1.75727C12.8677 1.36333 12.6687 1.16637 12.4399 1.09331C12.2386 1.02905 12.0222 1.03009 11.8216 1.09629C11.5935 1.17155 11.3964 1.37042 11.0021 1.76817L5.61974 7.19793ZM12.4708 2.43329L12.4689 2.43476L12.4708 2.43329ZM11.8055 2.43797L11.8035 2.43651L11.8055 2.43797ZM13.4478 4.06357L13.4463 4.06157L13.4478 4.06357ZM13.4428 3.39923L13.4443 3.39725L13.4428 3.39923Z\",fill:\"currentColor\"},null,-1)]))}]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/601.min.js","ext":"js","size":1922,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[601,121],{121:function(t,e,l){l.r(e),l.d(e,{default:function(){return _}});var a=l(641),o=l(33),n=l(635);const s={class:\"base-modal\"},i={class:\"base-modal__title-container\"},c={key:1,class:\"base-modal__title text-heading-2\"},r={key:0,class:\"base-modal__subtitle\"};var u=(0,a.pM)({__name:\"BaseModal\",props:{title:{},subtitle:{},titleIcon:{}},setup(t){return(t,e)=>((0,a.uX)(),(0,a.CE)(\"div\",s,[(0,a.Lk)(\"span\",i,[t.titleIcon?((0,a.uX)(),(0,a.Wv)(n.A,{key:0,class:\"h-mr-12\",name:t.titleIcon.name,color:t.titleIcon.color},null,8,[\"name\",\"color\"])):(0,a.Q3)(\"v-if\",!0),t.title?((0,a.uX)(),(0,a.CE)(\"h2\",c,(0,o.v_)(t.title),1)):(0,a.Q3)(\"v-if\",!0)]),t.subtitle?((0,a.uX)(),(0,a.CE)(\"p\",r,(0,o.v_)(t.subtitle),1)):(0,a.Q3)(\"v-if\",!0),(0,a.RG)(t.$slots,\"default\")]))}});var _=(0,l(262).A)(u,[[\"__scopeId\",\"data-v-5b1f1386\"]])},601:function(t,e,l){l.r(e),l.d(e,{default:function(){return d}});var a=l(641),o=l(953),n=l(33),s=l(121),i=l(469),c=l(485),r=l(716);const u={class:\"h-mb-24 text-gray\"},_={class:\"d-flex justify-content-end\"};var d=(0,a.pM)({__name:\"XmlSecurityModal\",props:{data:{}},setup(t){const e=t,{closeModal:l}=(0,i.hS)(),d=()=>{e.data.onConfirm&&e.data.onConfirm(),l()};return(t,e)=>((0,a.uX)(),(0,a.Wv)(s.default,{titleIcon:{name:\"icon-info\",color:\"danger\"},title:(0,o.R1)(c.Tl)(\"xml_security_modal_title\")},{default:(0,a.k6)((()=>[(0,a.Lk)(\"p\",u,(0,n.v_)((0,o.R1)(c.Tl)(\"xml_security_modal_description\")),1),(0,a.Lk)(\"div\",_,[(0,a.bF)(r.A,{color:\"danger\",variant:\"text\",class:\"h-mr-16\",onClick:(0,o.R1)(l)},{default:(0,a.k6)((()=>[(0,a.eW)((0,n.v_)((0,o.R1)(c.Tl)(\"xml_security_modal_cancel\")),1)])),_:1},8,[\"onClick\"]),(0,a.bF)(r.A,{color:\"danger\",onClick:d},{default:(0,a.k6)((()=>[(0,a.eW)((0,n.v_)((0,o.R1)(c.Tl)(\"xml_security_modal_proceed_anyway\")),1)])),_:1})])])),_:1},8,[\"title\"]))}})}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/main.css","ext":"css","size":236515,"mtime":1756373567},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/src_components_Modals_DeleteTableModal_vue.js","ext":"js","size":25585,"mtime":1756373567,"type":"text","content":"\"use strict\";\n\/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https:\/\/webpack.js.org\/configuration\/devtool\/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https:\/\/webpack.js.org\/configuration\/mode\/).\n *\/\n(self[\"webpackChunkhostinger_affiliate_plugin_vue\"] = self[\"webpackChunkhostinger_affiliate_plugin_vue\"] || []).push([[\"src_components_Modals_DeleteTableModal_vue\"],{\n\n\/***\/ \".\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\":\n\/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true ***!\n  \\****************************************************************************************************************************************************************************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/\/ extracted by mini-css-extract-plugin\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?.\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\":\n\/*!********************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true ***!\n  \\********************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! vue *\/ \\\".\/node_modules\/vue\/dist\/vue.runtime.esm-bundler.js\\\");\\n\\n\/* harmony default export *\/ __webpack_exports__[\\\"default\\\"] = (\/*#__PURE__*\/(0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({\\n    __name: 'BaseModal',\\n    props: {\\n        title: { type: String, required: false },\\n        subtitle: { type: String, required: false }\\n    },\\n    setup(__props, { expose: __expose }) {\\n        __expose();\\n        const __returned__ = {};\\n        Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true });\\n        return __returned__;\\n    }\\n}));\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?.\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true\":\n\/*!**********************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true ***!\n  \\**********************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! vue *\/ \\\".\/node_modules\/vue\/dist\/vue.runtime.esm-bundler.js\\\");\\n\/* harmony import *\/ var vue_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\/*! vue-router *\/ \\\".\/node_modules\/vue-router\/dist\/vue-router.mjs\\\");\\n\/* harmony import *\/ var _components_Modals_Base_BaseModal_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\/*! @\/components\/Modals\/Base\/BaseModal.vue *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue\\\");\\n\/* harmony import *\/ var _composables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\/*! @\/composables *\/ \\\".\/src\/composables\/index.ts\\\");\\n\\n\\n\\n\\n\\n\/* harmony default export *\/ __webpack_exports__[\\\"default\\\"] = (\/*#__PURE__*\/(0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({\\n    __name: 'DeleteTableModal',\\n    props: {\\n        data: { type: Object, required: true }\\n    },\\n    setup(__props, { expose: __expose }) {\\n        __expose();\\n        const props = __props;\\n        const route = (0,vue_router__WEBPACK_IMPORTED_MODULE_3__.useRoute)();\\n        const { closeModal } = (0,_composables__WEBPACK_IMPORTED_MODULE_2__.useModal)();\\n        const isDeleteButtonLoading = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(false);\\n        const __returned__ = { props, route, closeModal, isDeleteButtonLoading, BaseModal: _components_Modals_Base_BaseModal_vue__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"] };\\n        Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true });\\n        return __returned__;\\n    }\\n}));\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/DeleteTableModal.vue?.\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\":\n\/*!*********************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true ***!\n  \\*********************************************************************************************************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   render: function() { return \/* binding *\/ render; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! vue *\/ \\\".\/node_modules\/vue\/dist\/vue.runtime.esm-bundler.js\\\");\\n\\nconst _withScopeId = n => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.pushScopeId)(\\\"data-v-8740fa32\\\"), n = n(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.popScopeId)(), n);\\nconst _hoisted_1 = { class: \\\"base-modal\\\" };\\nconst _hoisted_2 = {\\n    key: 0,\\n    class: \\\"base-modal__title\\\"\\n};\\nconst _hoisted_3 = {\\n    key: 1,\\n    class: \\\"base-modal__subtitle\\\"\\n};\\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\\n    return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"div\\\", _hoisted_1, [\\n        ($props.title)\\n            ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"h2\\\", _hoisted_2, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.title), 1 \/* TEXT *\/))\\n            : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\\\"v-if\\\", true),\\n        ($props.subtitle)\\n            ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\\\"p\\\", _hoisted_3, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.subtitle), 1 \/* TEXT *\/))\\n            : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\\\"v-if\\\", true),\\n        (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot)(_ctx.$slots, \\\"default\\\", {}, undefined, true)\\n    ]));\\n}\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?.\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true\":\n\/*!***********************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** .\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true ***!\n  \\***********************************************************************************************************************************************************************************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   render: function() { return \/* binding *\/ render; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! vue *\/ \\\".\/node_modules\/vue\/dist\/vue.runtime.esm-bundler.js\\\");\\n\\nconst _hoisted_1 = \/*#__PURE__*\/ (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\\\"div\\\", { class: \\\"d-flex justify-content-end\\\" }, null, -1 \/* HOISTED *\/);\\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\\n    return ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createBlock)($setup[\\\"BaseModal\\\"], { title: \\\"hi\\\" }, {\\n        default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [\\n            _hoisted_1\\n        ]),\\n        _: 1 \/* STABLE *\/\\n    }));\\n}\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/DeleteTableModal.vue?.\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet%5B1%5D.rules%5B2%5D!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet%5B0%5D\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue\":\n\/*!**************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue ***!\n  \\**************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var _BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! .\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\\\");\\n\/* harmony import *\/ var _BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\/*! .\/BaseModal.vue?vue&type=script&lang=ts&setup=true *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\\\");\\n\/* harmony import *\/ var _BaseModal_vue_vue_type_style_index_0_id_8740fa32_lang_scss_scoped_true__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\/*! .\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true *\/ \\\".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\\\");\\n\/* harmony import *\/ var _node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\/*! ..\/..\/..\/..\/node_modules\/vue-loader\/dist\/exportHelper.js *\/ \\\".\/node_modules\/vue-loader\/dist\/exportHelper.js\\\");\\n\\n\\n\\n\\n;\\n\\n\\nconst __exports__ = \/*#__PURE__*\/(0,_node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_3__[\\\"default\\\"])(_BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"], [['render',_BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__.render],['__scopeId',\\\"data-v-8740fa32\\\"],['__file',\\\"src\/components\/Modals\/Base\/BaseModal.vue\\\"]])\\n\/* hot reload *\/\\nif (false) {}\\n\\n\\n\/* harmony default export *\/ __webpack_exports__[\\\"default\\\"] = (__exports__);\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/DeleteTableModal.vue\":\n\/*!****************************************************!*\\\n  !*** .\/src\/components\/Modals\/DeleteTableModal.vue ***!\n  \\****************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var _DeleteTableModal_vue_vue_type_template_id_11623bb3_ts_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! .\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true *\/ \\\".\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true\\\");\\n\/* harmony import *\/ var _DeleteTableModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\/*! .\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true *\/ \\\".\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true\\\");\\n\/* harmony import *\/ var _node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\/*! ..\/..\/..\/node_modules\/vue-loader\/dist\/exportHelper.js *\/ \\\".\/node_modules\/vue-loader\/dist\/exportHelper.js\\\");\\n\\n\\n\\n\\n;\\nconst __exports__ = \/*#__PURE__*\/(0,_node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_2__[\\\"default\\\"])(_DeleteTableModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_1__[\\\"default\\\"], [['render',_DeleteTableModal_vue_vue_type_template_id_11623bb3_ts_true__WEBPACK_IMPORTED_MODULE_0__.render],['__file',\\\"src\/components\/Modals\/DeleteTableModal.vue\\\"]])\\n\/* hot reload *\/\\nif (false) {}\\n\\n\\n\/* harmony default export *\/ __webpack_exports__[\\\"default\\\"] = (__exports__);\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/DeleteTableModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\":\n\/*!***********************************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true ***!\n  \\***********************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony import *\/ var _node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_sass_loader_dist_cjs_js_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_style_index_0_id_8740fa32_lang_scss_scoped_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/..\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!..\/..\/..\/..\/node_modules\/css-loader\/dist\/cjs.js!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/stylePostLoader.js!..\/..\/..\/..\/node_modules\/sass-loader\/dist\/cjs.js!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true *\/ \\\".\/node_modules\/mini-css-extract-plugin\/dist\/loader.js!.\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true\\\");\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\":\n\/*!*************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true ***!\n  \\*************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   \\\"default\\\": function() { return \/* reexport safe *\/ _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/..\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/BaseModal.vue?vue&type=script&lang=ts&setup=true *\/ \\\".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=script&lang=ts&setup=true\\\");\\n \\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true\":\n\/*!***************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true ***!\n  \\***************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   \\\"default\\\": function() { return \/* reexport safe *\/ _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_index_js_ruleSet_0_DeleteTableModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"]; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_index_js_ruleSet_0_DeleteTableModal_vue_vue_type_script_lang_ts_setup_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true *\/ \\\".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=script&lang=ts&setup=true\\\");\\n \\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/DeleteTableModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\":\n\/*!****************************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true ***!\n  \\****************************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   render: function() { return \/* reexport safe *\/ _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__.render; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_BaseModal_vue_vue_type_template_id_8740fa32_scoped_true_ts_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/..\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!..\/..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true *\/ \\\".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=template&id=8740fa32&scoped=true&ts=true\\\");\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/Base\/BaseModal.vue?\");\n\n\/***\/ }),\n\n\/***\/ \".\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true\":\n\/*!******************************************************************************************!*\\\n  !*** .\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true ***!\n  \\******************************************************************************************\/\n\/***\/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\neval(\"__webpack_require__.r(__webpack_exports__);\\n\/* harmony export *\/ __webpack_require__.d(__webpack_exports__, {\\n\/* harmony export *\/   render: function() { return \/* reexport safe *\/ _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_DeleteTableModal_vue_vue_type_template_id_11623bb3_ts_true__WEBPACK_IMPORTED_MODULE_0__.render; }\\n\/* harmony export *\/ });\\n\/* harmony import *\/ var _node_modules_ts_loader_index_js_clonedRuleSet_1_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_DeleteTableModal_vue_vue_type_template_id_11623bb3_ts_true__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\/*! -!..\/..\/..\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!..\/..\/..\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!..\/..\/..\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true *\/ \\\".\/node_modules\/ts-loader\/index.js??clonedRuleSet-1!.\/node_modules\/vue-loader\/dist\/templateLoader.js??ruleSet[1].rules[2]!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/DeleteTableModal.vue?vue&type=template&id=11623bb3&ts=true\\\");\\n\\n\\n\/\/# sourceURL=webpack:\/\/hostinger-affiliate-plugin-vue\/.\/src\/components\/Modals\/DeleteTableModal.vue?\");\n\n\/***\/ })\n\n}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/398.css","ext":"css","size":191,"mtime":1756373567,"type":"text","content":".base-modal__title[data-v-7ecd8511]{color:var(--dark);font-size:20px;font-weight:700}.base-modal__subtitle[data-v-7ecd8511]{color:var(--gray);font-size:14px;margin-bottom:24px;margin-top:4px}"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/main.min.js.LICENSE.txt","ext":"txt","size":844,"mtime":1756373567,"type":"text","content":"\/*!\n  * vue-router v4.4.3\n  * (c) 2024 Eduardo San Martin Morote\n  * @license MIT\n  *\/\n\n\/*!\n * pinia v2.2.2\n * (c) 2024 Eduardo San Martin Morote\n * @license MIT\n *\/\n\n\/*! #__NO_SIDE_EFFECTS__ *\/\n\n\/**\n * @license\n * Lodash <https:\/\/lodash.com\/>\n * Copyright OpenJS Foundation and other contributors <https:\/\/openjsf.org\/>\n * Released under MIT license <https:\/\/lodash.com\/license>\n * Based on Underscore.js 1.8.3 <http:\/\/underscorejs.org\/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n *\/\n\n\/**\n* @vue\/reactivity v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**\/\n\n\/**\n* @vue\/runtime-dom v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**\/\n\n\/**\n* @vue\/shared v3.5.3\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**\/\n"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/src_components_Modals_Base_BaseModal_vue.css","ext":"css","size":1239,"mtime":1756373567,"type":"text","content":"\/*!**************************************************************************************************************************************************************************************************************************************************************************************************!*\\\n  !*** css .\/node_modules\/css-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/stylePostLoader.js!.\/node_modules\/sass-loader\/dist\/cjs.js!.\/node_modules\/vue-loader\/dist\/index.js??ruleSet[0]!.\/src\/components\/Modals\/Base\/BaseModal.vue?vue&type=style&index=0&id=8740fa32&lang=scss&scoped=true ***!\n  \\**************************************************************************************************************************************************************************************************************************************************************************************************\/\n.base-modal__title-container[data-v-8740fa32] {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n}\n.base-modal__title[data-v-8740fa32] {\n  font-size: 20px;\n  color: var(--dark);\n  margin: 0;\n  font-weight: 700;\n}\n.base-modal__subtitle[data-v-8740fa32] {\n  font-size: 14px;\n  margin-top: 4px;\n  margin-bottom: 24px;\n  color: var(--gray);\n}\n"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/121.js","ext":"js","size":926,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_affiliate_plugin_vue=self.webpackChunkhostinger_affiliate_plugin_vue||[]).push([[121],{121:function(t,e,l){l.r(e),l.d(e,{default:function(){return r}});var s=l(641),a=l(33);const i={class:\"base-modal\"},o={class:\"base-modal__title-container\"},n=[\"icon\",\"color\"],u={key:1,class:\"base-modal__title\"},c={key:0,class:\"base-modal__subtitle\"};var _=(0,s.pM)({__name:\"BaseModal\",props:{title:{},subtitle:{},titleIcon:{}},setup(t){return(t,e)=>((0,s.uX)(),(0,s.CE)(\"div\",i,[(0,s.Lk)(\"span\",o,[t.titleIcon?((0,s.uX)(),(0,s.CE)(\"hp-icon\",{key:0,class:\"h-mr-8\",icon:t.titleIcon.name,color:t.titleIcon.color},null,8,n)):(0,s.Q3)(\"v-if\",!0),t.title?((0,s.uX)(),(0,s.CE)(\"h2\",u,(0,a.v_)(t.title),1)):(0,s.Q3)(\"v-if\",!0)]),t.subtitle?((0,s.uX)(),(0,s.CE)(\"p\",c,(0,a.v_)(t.subtitle),1)):(0,s.Q3)(\"v-if\",!0),(0,s.RG)(t.$slots,\"default\")]))}});var r=(0,l(262).A)(_,[[\"__scopeId\",\"data-v-402b6790\"]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/426.min.js","ext":"js","size":758,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[426],{426:function(n,t,e){e.r(t),e.d(t,{default:function(){return l}});var u=e(641);const o={xmlns:\"http:\/\/www.w3.org\/2000\/svg\",width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"none\"};const r={};var l=(0,e(262).A)(r,[[\"render\",function(n,t){return(0,u.uX)(),(0,u.CE)(\"svg\",o,t[0]||(t[0]=[(0,u.Lk)(\"path\",{d:\"M4.5 21C4.1 21 3.75 20.85 3.45 20.55C3.15 20.25 3 19.9 3 19.5V4.5C3 4.1 3.15 3.75 3.45 3.45C3.75 3.15 4.1 3 4.5 3H11.475V4.5H4.5V19.5H19.5V12.525H21V19.5C21 19.9 20.85 20.25 20.55 20.55C20.25 20.85 19.9 21 19.5 21H4.5ZM9.55 15.525L8.5 14.45L18.45 4.5H12.975V3H21V11.025H19.5V5.575L9.55 15.525Z\",fill:\"currentColor\"},null,-1)]))}]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/121.css","ext":"css","size":296,"mtime":1756373567,"type":"text","content":".base-modal__title-container[data-v-66a1a2dd]{align-items:center;display:flex;margin-bottom:8px}.base-modal__title[data-v-66a1a2dd]{color:var(--dark);font-size:20px;font-weight:700;margin:0}.base-modal__subtitle[data-v-66a1a2dd]{color:var(--gray);font-size:14px;margin-bottom:24px;margin-top:4px}"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/121.min.js","ext":"js","size":933,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[121],{121:function(t,e,l){l.r(e),l.d(e,{default:function(){return r}});var s=l(641),a=l(33),o=l(635);const i={class:\"base-modal\"},n={class:\"base-modal__title-container\"},u={key:1,class:\"base-modal__title text-heading-2\"},c={key:0,class:\"base-modal__subtitle\"};var _=(0,s.pM)({__name:\"BaseModal\",props:{title:{},subtitle:{},titleIcon:{}},setup(t){return(t,e)=>((0,s.uX)(),(0,s.CE)(\"div\",i,[(0,s.Lk)(\"span\",n,[t.titleIcon?((0,s.uX)(),(0,s.Wv)(o.A,{key:0,class:\"h-mr-12\",name:t.titleIcon.name,color:t.titleIcon.color},null,8,[\"name\",\"color\"])):(0,s.Q3)(\"v-if\",!0),t.title?((0,s.uX)(),(0,s.CE)(\"h2\",u,(0,a.v_)(t.title),1)):(0,s.Q3)(\"v-if\",!0)]),t.subtitle?((0,s.uX)(),(0,s.CE)(\"p\",c,(0,a.v_)(t.subtitle),1)):(0,s.Q3)(\"v-if\",!0),(0,s.RG)(t.$slots,\"default\")]))}});var r=(0,l(262).A)(_,[[\"__scopeId\",\"data-v-5b1f1386\"]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/main.js","ext":"js","size":2848924,"mtime":1756373567},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/398.js","ext":"js","size":1095,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_affiliate_plugin_vue=self.webpackChunkhostinger_affiliate_plugin_vue||[]).push([[398,121],{121:function(e,t,l){l.r(t),l.d(t,{default:function(){return o}});var a=l(641),s=l(33);const u={class:\"base-modal\"},i={key:0,class:\"base-modal__title\"},n={key:1,class:\"base-modal__subtitle\"};var d=(0,a.pM)({__name:\"BaseModal\",props:{title:{},subtitle:{}},setup(e){return(e,t)=>((0,a.uX)(),(0,a.CE)(\"div\",u,[e.title?((0,a.uX)(),(0,a.CE)(\"h2\",i,(0,s.v_)(e.title),1)):(0,a.Q3)(\"v-if\",!0),e.subtitle?((0,a.uX)(),(0,a.CE)(\"p\",n,(0,s.v_)(e.subtitle),1)):(0,a.Q3)(\"v-if\",!0),(0,a.RG)(e.$slots,\"default\")]))}});var o=(0,l(262).A)(d,[[\"__scopeId\",\"data-v-7ecd8511\"]])},398:function(e,t,l){l.r(t),l.d(t,{default:function(){return o}});var a=l(641),s=l(953),u=l(220),i=l(121),n=l(469);const d=(0,a.Lk)(\"div\",{class:\"d-flex justify-content-end\"},null,-1);var o=(0,a.pM)({__name:\"DeleteTableModal\",props:{data:{}},setup(e){(0,u.lq)();const{closeModal:t}=(0,n.h)();(0,s.KR)(!1);return(e,t)=>((0,a.uX)(),(0,a.Wv)(i.default,{title:\"hi\"},{default:(0,a.k6)((()=>[d])),_:1}))}})}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/500.min.js","ext":"js","size":1942,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[500,121],{121:function(t,e,l){l.r(e),l.d(e,{default:function(){return u}});var a=l(641),s=l(33),n=l(635);const o={class:\"base-modal\"},i={class:\"base-modal__title-container\"},_={key:1,class:\"base-modal__title text-heading-2\"},r={key:0,class:\"base-modal__subtitle\"};var c=(0,a.pM)({__name:\"BaseModal\",props:{title:{},subtitle:{},titleIcon:{}},setup(t){return(t,e)=>((0,a.uX)(),(0,a.CE)(\"div\",o,[(0,a.Lk)(\"span\",i,[t.titleIcon?((0,a.uX)(),(0,a.Wv)(n.A,{key:0,class:\"h-mr-12\",name:t.titleIcon.name,color:t.titleIcon.color},null,8,[\"name\",\"color\"])):(0,a.Q3)(\"v-if\",!0),t.title?((0,a.uX)(),(0,a.CE)(\"h2\",_,(0,s.v_)(t.title),1)):(0,a.Q3)(\"v-if\",!0)]),t.subtitle?((0,a.uX)(),(0,a.CE)(\"p\",r,(0,s.v_)(t.subtitle),1)):(0,a.Q3)(\"v-if\",!0),(0,a.RG)(t.$slots,\"default\")]))}});var u=(0,l(262).A)(c,[[\"__scopeId\",\"data-v-5b1f1386\"]])},500:function(t,e,l){l.r(e),l.d(e,{default:function(){return d}});var a=l(641),s=l(953),n=l(33),o=l(121),i=l(469),_=l(485),r=l(716);const c={class:\"h-mb-24 text-gray\"},u={class:\"d-flex justify-content-end\"};var d=(0,a.pM)({__name:\"ByPassLinkResetModal\",props:{data:{}},setup(t){const e=t,{closeModal:l}=(0,i.hS)(),d=()=>{e.data.onConfirm&&e.data.onConfirm(),l()};return(t,e)=>((0,a.uX)(),(0,a.Wv)(o.default,{titleIcon:{name:\"icon-info\",color:\"danger\"},title:(0,s.R1)(_.Tl)(\"bypass_link_reset_modal_title\")},{default:(0,a.k6)((()=>[(0,a.Lk)(\"p\",c,(0,n.v_)((0,s.R1)(_.Tl)(\"bypass_link_reset_modal_description\")),1),(0,a.Lk)(\"div\",u,[(0,a.bF)(r.A,{color:\"danger\",variant:\"text\",class:\"h-mr-16\",onClick:(0,s.R1)(l)},{default:(0,a.k6)((()=>[(0,a.eW)((0,n.v_)((0,s.R1)(_.Tl)(\"bypass_link_reset_modal_cancel\")),1)])),_:1},8,[\"onClick\"]),(0,a.bF)(r.A,{color:\"danger\",onClick:d},{default:(0,a.k6)((()=>[(0,a.eW)((0,n.v_)((0,s.R1)(_.Tl)(\"bypass_link_reset_modal_reset_link\")),1)])),_:1})])])),_:1},8,[\"title\"]))}})}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/227.min.css","ext":"css","size":296,"mtime":1756373567,"type":"text","content":".base-modal__title-container[data-v-5b1f1386]{align-items:center;display:flex;margin-bottom:8px}.base-modal__title[data-v-5b1f1386]{color:var(--dark);font-size:20px;font-weight:700;margin:0}.base-modal__subtitle[data-v-5b1f1386]{color:var(--gray);font-size:14px;margin-bottom:24px;margin-top:4px}"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/main.js.LICENSE.txt","ext":"txt","size":1211,"mtime":1756373567,"type":"text","content":"\/*!\n  * vue-router v4.3.2\n  * (c) 2024 Eduardo San Martin Morote\n  * @license MIT\n  *\/\n\n\/*!\n * XRegExp 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2007-present MIT License\n *\/\n\n\/*!\n * XRegExp Unicode Categories 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n *\/\n\n\/*!\n * XRegExp Unicode Properties 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n *\/\n\n\/*!\n * XRegExp Unicode Scripts 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2010-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n *\/\n\n\/*!\n * XRegExp.build 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n *\/\n\n\/*!\n * XRegExp.matchRecursive 5.1.1\n * <xregexp.com>\n * Steven Levithan (c) 2009-present MIT License\n *\/\n\n\/*! #__NO_SIDE_EFFECTS__ *\/\n\n\/**\n* @vue\/reactivity v3.4.24\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**\/\n\n\/**\n* @vue\/runtime-dom v3.4.24\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**\/\n\n\/**\n* @vue\/shared v3.4.24\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**\/\n"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/991.min.js","ext":"js","size":503,"mtime":1756373567,"type":"text","content":"\"use strict\";(self.webpackChunkhostinger_tools_plugin_vue=self.webpackChunkhostinger_tools_plugin_vue||[]).push([[991],{991:function(e,n,u){u.r(n),u.d(n,{default:function(){return l}});var t=u(641);const r={\"fill-rule\":\"evenodd\",\"clip-rule\":\"evenodd\",d:\"M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM19 21H8V7H19V21Z\"};const o={};var l=(0,u(262).A)(o,[[\"render\",function(e,n){return(0,t.uX)(),(0,t.CE)(\"path\",r)}]])}}]);"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/601.min.css","ext":"css","size":296,"mtime":1756373567,"type":"text","content":".base-modal__title-container[data-v-5b1f1386]{align-items:center;display:flex;margin-bottom:8px}.base-modal__title[data-v-5b1f1386]{color:var(--dark);font-size:20px;font-weight:700;margin:0}.base-modal__subtitle[data-v-5b1f1386]{color:var(--gray);font-size:14px;margin-bottom:24px;margin-top:4px}"},{"base":"plugins","rel":"hostinger\/vue-frontend\/dist\/500.min.css","ext":"css","size":296,"mtime":1756373567,"type":"text","content":".base-modal__title-container[data-v-5b1f1386]{align-items:center;display:flex;margin-bottom:8px}.base-modal__title[data-v-5b1f1386]{color:var(--dark);font-size:20px;font-weight:700;margin:0}.base-modal__subtitle[data-v-5b1f1386]{color:var(--gray);font-size:14px;margin-bottom:24px;margin-top:4px}"},{"base":"plugins","rel":"hostinger\/vue-frontend\/src\/assets\/images\/icons\/icon-php.svg","ext":"svg","size":2782,"mtime":1757312769,"type":"text","content":"<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n<g clip-path=\"url(#clip0_814_31010)\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 18.6249C5.37269 18.6249 0 15.7987 0 12.3124C0 8.82625 5.37269 6 12 6C18.6273 6 24 8.82625 24 12.3124C24 15.7987 18.6273 18.6249 12 18.6249ZM13.0236 14.2957C12.9847 14.2957 12.9478 14.2783 12.9231 14.2483C12.8983 14.2183 12.8883 14.1788 12.8957 14.1406L13.4396 11.3416C13.4913 11.0754 13.4786 10.8844 13.4037 10.8037C13.3579 10.7543 13.2202 10.6715 12.8131 10.6715H11.8278L11.144 14.1903C11.1321 14.2515 11.0785 14.2957 11.0162 14.2957H9.64899C9.6101 14.2957 9.57325 14.2783 9.54851 14.2483C9.52377 14.2183 9.51375 14.1788 9.52117 14.1406L10.7507 7.81464C10.7626 7.75349 10.8162 7.7093 10.8785 7.7093H12.2457C12.2846 7.7093 12.3214 7.72666 12.3462 7.75665C12.3709 7.78669 12.3809 7.82614 12.3735 7.86434L12.0768 9.39116H13.1368C13.9443 9.39116 14.4919 9.53352 14.8108 9.8264C15.1359 10.1252 15.2373 10.6029 15.1123 11.2465L14.5403 14.1903C14.5284 14.2515 14.4748 14.2957 14.4124 14.2957H13.0236ZM6.51972 13.037C7.04337 13.037 7.4343 12.9404 7.68165 12.75C7.92635 12.5616 8.09536 12.2352 8.18395 11.7799C8.26655 11.3543 8.23508 11.0571 8.09046 10.8967C7.94259 10.7329 7.62288 10.6498 7.14024 10.6498H6.3034L5.83947 13.037H6.51972ZM3.78261 15.9775C3.74377 15.9775 3.70687 15.9602 3.68218 15.9301C3.65744 15.9001 3.64741 15.8606 3.65483 15.8225L4.88435 9.4965C4.89624 9.43534 4.94984 9.39116 5.01217 9.39116H7.66208C8.49489 9.39116 9.11476 9.61729 9.50439 10.0633C9.8961 10.5117 10.0171 11.1385 9.8639 11.9262C9.80157 12.2471 9.69436 12.5452 9.54528 12.812C9.39601 13.0792 9.19875 13.3264 8.95886 13.5468C8.67171 13.8156 8.34671 14.0105 7.99376 14.1251C7.64641 14.2383 7.20031 14.2957 6.66789 14.2957H5.59489L5.28847 15.8721C5.27658 15.9333 5.22302 15.9775 5.16069 15.9775H3.78261ZM18.4375 12.75C18.1902 12.9404 17.7992 13.037 17.2756 13.037H16.5953L17.0593 10.6498H17.8961C18.3787 10.6498 18.6984 10.7329 18.8463 10.8967C18.991 11.0571 19.0224 11.3543 18.9399 11.7799C18.8512 12.2352 18.6822 12.5617 18.4375 12.75ZM14.4381 15.9301C14.4628 15.9602 14.4997 15.9775 14.5385 15.9775H15.9165C15.9789 15.9775 16.0325 15.9333 16.0444 15.8721L16.3507 14.2957H17.4238C17.9562 14.2957 18.4023 14.2383 18.7496 14.1251C19.1026 14.0105 19.4276 13.8156 19.7147 13.5468C19.9546 13.3264 20.1519 13.0792 20.3011 12.812C20.4502 12.5452 20.5574 12.2471 20.6198 11.9262C20.7729 11.1385 20.652 10.5117 20.2603 10.0633C19.8706 9.61729 19.2508 9.39116 18.4179 9.39116H15.7681C15.7057 9.39116 15.6521 9.43534 15.6402 9.4965L14.4107 15.8225C14.4033 15.8606 14.4133 15.9001 14.4381 15.9301Z\" fill=\"#727586\"\/>\n<\/g>\n<defs>\n<clipPath id=\"clip0_814_31010\">\n<rect width=\"24\" height=\"24\" fill=\"white\"\/>\n<\/clipPath>\n<\/defs>\n<\/svg>\n"},{"base":"plugins","rel":"hostinger\/vue-frontend\/src\/assets\/images\/icons\/icon-wordpress-light.svg","ext":"svg","size":1662,"mtime":1757312769,"type":"text","content":"<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n<path d=\"M12 2C6.4879 2 2 6.48387 2 12C2 17.5121 6.4879 22 12 22C17.5121 22 22 17.5121 22 12C22 6.48387 17.5121 2 12 2ZM3.00806 12C3.00806 10.6976 3.28629 9.45968 3.78629 8.34274L8.07661 20.0927C5.07661 18.6331 3.00806 15.5565 3.00806 12ZM12 20.9919C11.1169 20.9919 10.2661 20.8629 9.45968 20.625L12.1573 12.7863L14.9194 20.3589C14.9395 20.4032 14.9597 20.4435 14.9839 20.4839C14.0524 20.8105 13.0484 20.9919 12 20.9919ZM13.2379 7.78629C13.7782 7.75806 14.2661 7.70161 14.2661 7.70161C14.75 7.64516 14.6935 6.93145 14.2097 6.95968C14.2097 6.95968 12.754 7.07258 11.8145 7.07258C10.9315 7.07258 9.44758 6.95968 9.44758 6.95968C8.96371 6.93145 8.90726 7.67339 9.39113 7.70161C9.39113 7.70161 9.85081 7.75806 10.3347 7.78629L11.7339 11.625L9.76613 17.5242L6.49194 7.78629C7.03226 7.75806 7.52016 7.70161 7.52016 7.70161C8.00403 7.64516 7.94758 6.93145 7.46371 6.95968C7.46371 6.95968 6.00806 7.07258 5.06855 7.07258C4.89919 7.07258 4.70161 7.06855 4.4879 7.06048C6.09677 4.62097 8.85887 3.00806 12 3.00806C14.3387 3.00806 16.4718 3.90323 18.0726 5.36694C18.0323 5.3629 17.996 5.35887 17.9556 5.35887C17.0726 5.35887 16.4476 6.12903 16.4476 6.95564C16.4476 7.69758 16.875 8.32258 17.3306 9.06452C17.6734 9.66129 18.0726 10.4315 18.0726 11.5444C18.0726 12.3145 17.7782 13.2056 17.3871 14.4516L16.4919 17.4476L13.2379 7.78629ZM16.5202 19.7702L19.2661 11.8306C19.7782 10.5484 19.9516 9.52419 19.9516 8.60887C19.9516 8.27823 19.9315 7.97177 19.8911 7.68548C20.5927 8.96774 20.9919 10.4355 20.9919 12C20.9919 15.3185 19.1935 18.2137 16.5202 19.7702Z\" fill=\"#727586\"\/>\n<\/svg>\n"},{"base":"plugins","rel":"hostinger\/index.php","ext":"php","size":33,"mtime":1757312769,"type":"text","content":"<?php\n\/** Silence is golden. **\/\n"},{"base":"plugins","rel":"hostinger\/hostinger.php","ext":"php","size":4443,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Plugin Name: Hostinger Tools\n * Plugin URI: https:\/\/hostinger.com\n * Description: Hostinger WordPress plugin.\n * Version: 3.0.48\n * Requires at least: 5.5\n * Requires PHP: 8.0\n * Author: Hostinger\n * License: GPL v3\n * License URI: https:\/\/www.gnu.org\/licenses\/gpl-3.0.html\n * Author URI: https:\/\/www.hostinger.com\n * Text Domain: hostinger\n * Domain Path: \/languages\n *\n * @package Hostinger\n *\/\n\nuse Hostinger\\Hostinger;\nuse Hostinger\\Activator;\nuse Hostinger\\Deactivator;\nuse Hostinger\\WpMenuManager\\Manager;\n\ndefined( 'ABSPATH' ) || exit;\n\nif ( ! defined( 'HOSTINGER_VERSION' ) ) {\n    define( 'HOSTINGER_VERSION', '3.0.48' );\n}\n\nif ( ! defined( 'HOSTINGER_ABSPATH' ) ) {\n    define( 'HOSTINGER_ABSPATH', plugin_dir_path( __FILE__ ) );\n}\n\nif ( ! defined( 'HOSTINGER_PLUGIN_FILE' ) ) {\n    define( 'HOSTINGER_PLUGIN_FILE', __FILE__ );\n}\n\nif ( ! defined( 'HOSTINGER_PLUGIN_URL' ) ) {\n    define( 'HOSTINGER_PLUGIN_URL', plugin_dir_url( __FILE__ ) );\n}\n\nif ( ! defined( 'HOSTINGER_ASSETS_URL' ) ) {\n    define( 'HOSTINGER_ASSETS_URL', plugin_dir_url( __FILE__ ) . 'assets\/' );\n}\n\nif ( ! defined( 'HOSTINGER_VUE_ASSETS_URL' ) ) {\n    define( 'HOSTINGER_VUE_ASSETS_URL', plugin_dir_url( __FILE__ ) . 'vue-frontend\/dist' );\n}\n\nif ( ! defined( 'HOSTINGER_WP_CONFIG_PATH' ) ) {\n    define( 'HOSTINGER_WP_CONFIG_PATH', ABSPATH . '.private\/config.json' );\n}\n\nif ( ! defined( 'HOSTINGER_WP_TOKEN' ) ) {\n    $hostinger_dir_parts        = explode( '\/', __DIR__ );\n    $hostinger_server_root_path = '\/' . $hostinger_dir_parts[1] . '\/' . $hostinger_dir_parts[2];\n    define( 'HOSTINGER_WP_TOKEN', $hostinger_server_root_path . '\/.api_token' );\n}\n\nif ( ! defined( 'HOSTINGER_REST_URI' ) ) {\n    define( 'HOSTINGER_REST_URI', 'https:\/\/rest-hosting.hostinger.com' );\n}\n\nif ( ! defined( 'HOSTINGER_PLUGIN_SETTINGS_OPTION' ) ) {\n    define( 'HOSTINGER_PLUGIN_SETTINGS_OPTION', 'hostinger_tools' );\n}\n\nif ( ! defined( 'HOSTINGER_PLUGIN_REST_API_BASE' ) ) {\n    define( 'HOSTINGER_PLUGIN_REST_API_BASE', 'hostinger-tools-plugin\/v1' );\n}\n\nif ( ! defined( 'HOSTINGER_PLUGIN_MINIMUM_PHP_VERSION' ) ) {\n    define( 'HOSTINGER_PLUGIN_MINIMUM_PHP_VERSION', '8.0' );\n}\n\nif ( ! version_compare( phpversion(), HOSTINGER_PLUGIN_MINIMUM_PHP_VERSION, '>=' ) ) {\n    add_action(\n        'admin_notices',\n        function () {\n            ?>\n            <div class=\"notice notice-error is-dismissible hts-theme-settings\">\n                <p>\n                    <?php \/* translators: %s: PHP version *\/ ?>\n                    <strong><?php echo esc_html__( 'Attention:', 'hostinger' ); ?><\/strong> <?php printf( wp_kses( 'The Hostinger plugin requires minimum PHP version of <b>%s<\/b>.', 'hostinger' ), esc_html( HOSTINGER_PLUGIN_MINIMUM_PHP_VERSION ) ); ?>\n                <\/p>\n                <p>\n                    <?php \/* translators: %s: PHP version *\/ ?>\n                    <?php printf( wp_kses( 'You are running <b>%s<\/b> PHP version.', 'hostinger' ), esc_html( phpversion() ) ); ?>\n                <\/p>\n            <\/div>\n            <?php\n        }\n    );\n\n    return;\n}\n\n$vendor_file = __DIR__ . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'autoload_packages.php';\n\nif ( file_exists( $vendor_file ) ) {\n    require_once $vendor_file;\n} else {\n    return;\n}\n\n\/\/ Action Scheduler should be loaded before plugins_loaded hook.\n$action_scheduler = __DIR__ . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'woocommerce' . DIRECTORY_SEPARATOR . 'action-scheduler' . DIRECTORY_SEPARATOR . 'action-scheduler.php';\nif ( file_exists( $action_scheduler ) ) {\n    require_once $action_scheduler;\n}\n\n\/**\n * Plugin activation hook.\n *\/\nfunction hostinger_activate(): void {\n    Activator::activate();\n}\n\n\/**\n * Plugin deactivation hook.\n *\/\nfunction hostinger_deactivate(): void {\n    Deactivator::deactivate();\n}\n\nregister_activation_hook( __FILE__, 'hostinger_activate' );\nregister_deactivation_hook( __FILE__, 'hostinger_deactivate' );\n\nif ( ! function_exists( 'hostinger_load_menus' ) ) {\n    function hostinger_load_menus(): void {\n        $manager = Manager::getInstance();\n        $manager->boot();\n    }\n}\n\nif ( ! has_action( 'plugins_loaded', 'hostinger_load_menus' ) ) {\n    add_action( 'plugins_loaded', 'hostinger_load_menus' );\n}\n\n\nfunction load_plugin() {\n    if ( class_exists( 'Hostinger\\Hostinger' ) ) {\n        $hostinger = new Hostinger();\n        $hostinger->run();\n    }\n}\nadd_action( 'plugins_loaded', 'load_plugin' );\n\n\n\n"},{"base":"plugins","rel":"hostinger\/readme.txt","ext":"txt","size":11684,"mtime":1757312769,"type":"text","content":"=== Hostinger Tools ===\nTags: hostinger, tools, maintenance, security, redirects, https, xml-rpc, llms\nRequires at least: 5.5\nTested up to: 6.8\nRequires PHP: 8.0\nStable tag: 3.0.48\nLicense: GPLv3\nLicense URI: https:\/\/www.gnu.org\/licenses\/gpl-3.0.html\n\n== Description ==\n\nHostinger Tools is an all-in-one plugin designed to streamline essential tasks for WordPress site administrators. This plugin offers a range of features to help you manage your site's information, maintenance mode, security, and redirects effectively.\n\n# **Features:**\n\n# *Basic Info*\n- Displays the current WordPress version with automatic update checks.\n- Shows the current PHP version with automatic update checks.\n\n# *Maintenance Mode*\n- Easily enable or disable maintenance mode for your site.\n- Provide a URL to bypass maintenance mode for selected users.\n\n# *Security*\n- Enable or disable XML-RPC requests to enhance your site's security.\n- Enable or disable Authorize application page to enhance your site's security.\n\n# *Redirects*\n- Force all URLs to use HTTPS for secure browsing.\n- Force all URLs to use WWW to ensure consistency in site access.\n\n# *LLMs.txt Generation*\n- Automatically generate a structured LLMs.txt file in Markdown format.\n- Include website title, description, posts, pages, and products (if WooCommerce is active).\n- Keep the file updated when content changes or new content is published.\n- Help AI-powered tools better understand and interact with your website content.\n\nHostinger Tools is the new version of the previous Hostinger plugin, offering an updated and enhanced experience.\nThe Onboarding assistant and the Learning section previously included in this plugin were moved to the separate plugin Hostinger Easy Onboarding.\n\n== Frequently Asked Questions ==\n\n= How Do I Install the Plugin =\n\nIf you set up a WordPress site on Hostinger's managed WordPress hosting account, this plugin will be automatically installed.\n\nAlternatively, you can install the plugin directly from your WordPress dashboard. Just go to **Plugins > Add New Plugins**, search for \"Hostinger Tools\" in the plugin repository, click Install, and then Activate.\n\n= Is There a Cost Associated With Using the Hostinger Tools Plugin? =\n\nThe Hostinger Tools Plugin is available for free. However, the AI Assistant features for content creation are distributed with a different plugin exclusive to our Business and Cloud hosting plans customers.\n\n= Are There Any Specific Hosting Requirements for This Plugin? =\n\nThe Hostinger Tools Plugin is designed to work seamlessly on any hosting platform, ensuring wide compatibility and ease of use. However, the plugin requires these minimum requirements:\n* PHP 8.0 or greater\n* MySQL 5.6 or greater\n\n= Can I Access Educational Resources Outside This Plugin? =\n\nYes, the educational resources you can find in this plugin are available on our [Hostinger Academy YouTube channel](https:\/\/www.youtube.com\/@HostingerAcademy) and [Hostinger Tutorials website](https:\/\/www.hostinger.com\/tutorials\/wordpress).\n\n== Installation ==\n\n# **Minimum Requirements**\n\n* PHP 8.0 or greater is recommended\n* MySQL 5.6 or greater is recommended\n\n# **Automatic installation**\n\nIf you set up a WordPress site on Hostinger's managed WordPress hosting account, this plugin will be automatically installed.\n\nAlternatively, you can use the automatic installation from the dashboard, and WordPress will handle the file transfer - you won't need to leave your web browser. To do an automatic install of the Hostinger plugin, log in to your WordPress dashboard, navigate to the Plugins menu, and click **Add New**.\n\nIn the search field, type **Hostinger**, then click **Search Plugins**. Once you find us, you can view details about it, such as the point release, rating, and description. Most importantly, of course, you can install it by clicking **Install Now**, and WordPress will take it from there.\n\n# **Manual installation**\n\nThe manual installation method requires downloading the Hostinger plugin and uploading it to your web server via your favorite FTP application. The WordPress codex contains instructions on how to do this here.\n\n# **Updating**\n\nAutomatic updates should work smoothly, but we still recommend you back up your site.\n\n== Changelog ==\n\n1.2.0 (2023-03-22)\n\n- Updated How To videos\n- Added Lithuanian language translations\n- Updated assets\n- Redirect from Hostinger dashboard into plugin\n\n1.3.0 (2023-04-11)\n\n- Autocomplete onboarding steps\n- Redirect Hosting clients by segment\n- Hide logo upload step if theme not support\n- Updated How To videos\n- Updated translations\n- Updated onboarding steps\n\n1.4.0 (2023-04-17)\n\n- Added new \"Add product\" step\n- Adjusted onboarding steps by website type\n- Updated logo upload step\n- Autocomplete site title step on settings change\n\n1.4.1 (2023-05-15)\n\n- Fix site health session warning\n\n1.5.0 (2023-05-23)\n\n- Add onboarding steps autocomplete date\n\n1.6.0 (2023-06-08)\n\n- Add plugin update feature\n\n1.6.1 (2023-06-13)\n\n- Fixed unused assets\n- Fixed maintenance mode cache\n\n1.6.2 (2023-06-15)\n\n- Fixed maintenance mode conflicts with other plugins\n\n1.6.3 (2023-07-11)\n\n- Add AI assistant\n\n1.6.4 (2023-08-08)\n\n- Add additional AI assistant buttons\n\n1.6.5 (2023-08-14)\n\n- Add translations\n\n1.6.6 (2023-08-17)\n\n- Add additional submenu items\n\n1.6.7 (2023-09-08)\n\n- Bugfixes\n- Redirect all users from hPanel\n- Text changes\n\n1.7.0 (2023-09-08)\n\n- Add CSAT survey\n\n1.7.1 (2023-09-20)\n\n- Add additional request header\n\n1.7.2 (2023-09-22)\n\n- Hide notices in Hostinger page\n\n1.8.0 (2023-09-27)\n\n- Additional amplitude events\n\n1.8.1 (2023-10-03)\n\n- Remove video iframes\n\n1.8.2 (2023-10-05)\n\n- Adjust CSAT survey\n\n1.8.3 (2023-10-13)\n\n- Add domain connection step\n- Hide preview banner\n\n1.8.4 (2023-10-20)\n\n- Added regenerate website tab\n- Style corrections\n\n1.8.5 (2023-10-20)\n\n- Text corrections\n\n1.8.6 (2023-10-23)\n\n- Translations\n\n1.8.7 (2023-10-30)\n\n- Add WooCommerce onboarding survey\n\n1.8.8 (2023-11-13)\n\n- Bugfixes\n\n1.8.9 (2023-11-14)\n\n- Added onboarding survey\n- Fix onboarding steps duplicates\n\n1.9.0 (2023-11-15)\n\n- Fix survey transients\n\n1.9.1 (2023-11-15)\n\n- Add translations\n\n1.9.2 (2023-11-19)\n\n- Fixes\n\n1.9.3 (2023-11-21)\n\n- Fixed RTL survey issues\n- Added survey close button\n\n1.9.4 (2023-11-23)\n\n- Fix survey requests\n\n1.9.5 (2023-11-27)\n\n- Hide notices in Hostinger page\n- Remove surveys\n\n1.9.6 (2023-12-01)\n\n- Added filter for tabs \/ tab content\n\n1.9.7 (2023-12-13)\n\n- Added tests, adjusted assets loading\n- Fixed maintenance security issue\n\n1.9.8 (2023-12-14)\n\n- Version mismatch fix\n\n1.9.9 (2023-12-18)\n\n- Fixed assets load on subfolder installations\n\n2.0.0 (2024-01-10)\n\n- Increased minimal WordPress version\n\n2.0.1 (2024-01-16)\n\n- Added onboarding step for affiliate plugin\n\n2.0.2 (2024-01-19)\n\n- Updated internal services\n\n2.0.3 (2024-01-19)\n\n- Fixes\n- Added promotional banner\n\n2.0.4 (2024-02-02)\n\n- Added jump to hPanel\n- Redesign tabs section\n\n2.0.5 (2024-02-06)\n\n- Added surveys\n\n2.0.6 (2024-02-09)\n\n- Added affiliate surveys\n- Internal services improvements\n\n2.0.7 (2024-02-13)\n\n- Survey adjustments\n\n2.0.8 (2024-02-14)\n\n- Fixed files loading\n\n2.0.9 (2024-02-20)\n\n- Astra theme compatibility\n- Internal services improvements\n\n2.1.0 (2024-03-04)\n\n- Lower WordPress version requirement\n- Added \"Omnisend\" plugin upgrade promo message\n\n2.1.1 (2024-03-08)\n\n- Changed \"Omnisend\" promo appearance conditions\n\n2.1.2 (2024-03-13)\n\n- Removed sessions\n\n2.1.3 (2024-03-14)\n\n- Refactored codebase\n\n2.1.4 (2024-03-14)\n\n- Removed vendors\n\n2.1.5 (2024-03-16)\n\n- Fixed Namespace issues\n\n2.1.6 (2024-03-18)\n\n- CSS fixes\n\n2.1.7 (2024-03-27)\n\n- Improved internal services\n- Added links to hPanel in admin bar\n- Fixed hPanel redirect to subdomain\n\n2.1.8 (2024-03-29)\n\n- Assets compatibility fix\n\n2.1.9 (2024-04-03)\n\n- CSAT survey improvements\n\n2.2.0 (2024-04-15)\n\n- Compatibility fixes\n\n2.2.1 (2024-04-16)\n\n- Fixed loading issues\n\n2.2.2 (2024-04-17)\n\n- \"Omnisend\" authentication fix\n\n2.2.3 (2024-05-08)\n\n- Increased minimum PHP version\n\n2.2.4 (2024-05-13)\n\n- Update prebuilt websites\n\n3.0.0 (2024-05-30)\n\n- Renamed plugin to Hostinger Tools\n- Added check WordPress and PHP versions\n- Added ability to enable\/disable maintenance mode and get bypass link\n- Added ability to enable\/disable XML-RPC\n- Added ability to force redirects to HTTPS and WWW URLs\n- Moved Onboarding steps and Learning section to separate plugin Hostinger Easy Onboarding\n\n3.0.1 (2024-06-06)\n\n- Added skeleton loader for UI\n- Removed hPanel links from admin bar menu\n\n3.0.2 (2024-06-19)\n\n- Updated menu package\n\n3.0.3 (2024-07-02)\n\n- Added tests\n\n3.0.4 (2024-07-09)\n\n- Vendor autoload fix\n\n3.0.5 (2024-07-24)\n\n- PHP version card change\n- Translations\n\n3.0.6 (2024-07-30)\n\n- Added CLI commands descriptions\n\n3.0.8 (2024-08-27)\n\n- Updated recommended PHP version\n\n3.0.9 (2024-08-04)\n\n- Added conditional check for maintenance class CLI\n\n3.0.10 (2024-09-11)\n\n- Update packages\n\n3.0.11 (2024-09-13)\n\n- Fix logo visibility\n\n3.0.12 (2024-10-01)\n\n- Fix maintenance mode cache issue\n\n3.0.13 (2024-10-09)\n\n- Fix `force www` row not being shown when user is not eligible to adjust it\n\n3.0.14 (2024-10-11)\n\n- Add tutorial link\n\n3.0.15 (2024-10-18)\n\n- WooCommerce coming soon mode cache flush\n\n3.0.16 (2024-10-22)\n\n- Fix cache LiteSpeed cleaning\n\n3.0.17 (2024-10-24)\n\n- Updated plugin URL by locale\n\n3.0.18 (2024-11-08)\n\n- Remove unused assets\n- Remove flush cache duplicates\n\n3.0.19 (2024-11-13)\n\n- Dismiss plugin split notice after close\n\n3.0.20 (2024-12-03)\n\n- Updated packages\n\n3.0.21 (2024-12-09)\n\n- Added recommended PHP version\n\n3.0.22 (2025-01-08)\n\n- Added preview website link in navbar\n\n3.0.23 (2025-02-07)\n\n- Added ability to enable or disable Authorize application page\n\n3.0.24 (2025-02-10)\n\n- Fixed bypass input field visibility\n\n3.0.25 (2025-02-10)\n\n- Added new translations\n\n3.0.26 (2025-02-10)\n\n- Fixed settings update\n\n3.0.27 (2025-02-11)\n\n- Fixed bypass code regeneration\n\n3.0.28 (2025-02-12)\n\n- Added correct reseller link to PHP update\n\n3.0.29 (2025-02-21)\n\n- Update packages\n\n3.0.30 (2025-02-24)\n\n- Enhanced WordPress application security settings\n\n3.0.31 (2025-02-24)\n\n- Fixed assets load issue\n\n3.0.32 (2025-03-04)\n\n- Updated compatibility\n\n3.0.33 (2025-04-04)\n\n- Remove hardcoded references\n\n3.0.34 (2024-04-10)\n\n- Add preview and site edit buttons\n\n3.0.35 (2024-04-28)\n\n- Add edit site button support for block themes\n\n3.0.36 (2024-04-29)\n\n- Style corrections\n\n3.0.37 (2024-05-12)\n\n- Remove unused assets\n- Fixed Jetpack autoloader issue\n- Added LLMS.txt generation functionality\n- Added few new Spanish locales (es_AR, es_CO, es_MX)\n\n3.0.38 (2025-06-09)\n\n- Tweaks the UI for PHP and WordPress version under Tools\n- Fallback to Site URL when no Blog Title is set in LLMS.txt\n- Clear cache on settings change\n\n3.0.39 (2025-06-12)\n\n- Updated logic to detect 3rd Party LLMs files\n- Updated UI and Copy for LLMS section\n- Add support for WooCommerce products in LLMS.txt\n- Added check for main plugin class to prevent class not found issues\n- Update readme.txt tags\n\n3.0.40 (2025-06-17)\n- Added latest translations\n- Provide visual feedback to user when changing settings\n- Fixed www urls rewrite\n\n3.0.41 (2025-06-19)\n- Update translations for ES, MX and CO\n\n3.0.42 (2025-07-03)\n- Menu translations\n\n3.0.43 (2025-07-22)\n- Add Web2MCP feature\n- Fix Settings state on failure\n- Bump dependencies version\n\n3.0.44 (2025-07-23)\n- Update translations\n\n3.0.45 (2025-07-28)\n- Update WP helper package\n\n3.0.46 (2025-08-05)\n- Fixed empty lines in llms.txt\n\n3.0.47 (2025-08-08)\n- Add MCP choice\n- Updated translations\n\n3.0.48 (2025-08-21)\n- Support for MCP optional entry in llms.txt\n- Add Learn More in MCP section\n- Generate llms.txt entries in the background\n"},{"base":"plugins","rel":"hostinger\/src\/js\/global-scripts.js","ext":"js","size":1395,"mtime":1757312769,"type":"text","content":"document.addEventListener('DOMContentLoaded', function() {\n\n    const pluginSplitClose = document.getElementById('plugin-split-close');\n\n    if(pluginSplitClose) {\n        pluginSplitClose.addEventListener('click', function () {\n            let nonceElement = document.getElementById('hts_close_plugin_split_nonce');\n\n            if (!nonceElement) {\n                console.error('Nonce element not found.');\n                return;\n            }\n\n            let nonce = nonceElement.value;\n\n            fetch(ajaxurl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application\/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({\n                    'action': 'hostinger_dismiss_plugin_split_notice',\n                    'nonce': nonce\n                }),\n            })\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok ' + response.statusText);\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    document.getElementById('hostinger-plugin-split-notice').style.display = 'none';\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                });\n        });\n    }\n});\n"},{"base":"plugins","rel":"hostinger\/src\/images\/logo-black.svg","ext":"svg","size":7105,"mtime":1757312769,"type":"text","content":"<svg width=\"150\" height=\"30\" viewBox=\"0 0 150 30\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n<path d=\"M116.794 12.1443C117.377 11.4191 118.324 11.0564 119.634 11.0564C120.224 11.0564 120.768 11.1311 121.267 11.281C121.766 11.4311 122.208 11.6077 122.593 11.8114L123.404 9.56366C123.308 9.5038 123.149 9.41956 122.926 9.31168C122.704 9.20354 122.421 9.09867 122.078 8.99708C121.735 8.89498 121.327 8.8052 120.852 8.72699C120.377 8.64928 119.845 8.6098 119.256 8.6098C118.39 8.6098 117.575 8.75415 116.812 9.04209C116.048 9.32978 115.384 9.75226 114.819 10.3098C114.253 10.8671 113.809 11.5481 113.484 12.351C113.159 13.1545 112.997 14.0777 112.997 15.1211C112.997 16.1521 113.144 17.0695 113.439 17.8722C113.734 18.6754 114.152 19.3532 114.692 19.9044C115.233 20.4561 115.886 20.8754 116.65 21.1636C117.413 21.451 118.264 21.5951 119.201 21.5951C120.296 21.5951 121.216 21.5196 121.961 21.37C122.707 21.2204 123.248 21.0798 123.585 20.9478V14.7793H120.771V19.1133C120.603 19.1495 120.407 19.1734 120.185 19.1852C119.962 19.197 119.694 19.203 119.382 19.203C118.804 19.203 118.3 19.1042 117.867 18.9065C117.434 18.7086 117.074 18.4297 116.785 18.0699C116.496 17.71 116.28 17.2815 116.135 16.7843C115.991 16.2869 115.919 15.7319 115.919 15.1211C115.919 13.8617 116.211 12.8698 116.794 12.1443Z\" fill=\"#1D1E20\"\/>\n<path d=\"M72.0958 19.1221C71.8373 19.1885 71.5096 19.2212 71.1129 19.2212C70.3195 19.2212 69.6488 19.1402 69.102 18.978C68.5545 18.8166 68.0944 18.634 67.7222 18.4298L66.9282 20.6597C67.0967 20.756 67.304 20.8576 67.5504 20.9657C67.7971 21.0736 68.0919 21.1754 68.4344 21.2712C68.7772 21.3671 69.1709 21.4478 69.6158 21.5142C70.0607 21.5801 70.5598 21.6133 71.1129 21.6133C72.7601 21.6133 73.9927 21.2924 74.8103 20.6506C75.628 20.0093 76.0371 19.107 76.0371 17.9439C76.0371 17.3449 75.9587 16.8357 75.8028 16.4157C75.6462 15.996 75.4086 15.6301 75.0903 15.3185C74.7715 15.0069 74.3715 14.7341 73.8908 14.5002C73.4096 14.2663 72.8444 14.0297 72.1954 13.7895C71.8824 13.6817 71.5967 13.577 71.3386 13.4749C71.0799 13.3733 70.8514 13.2592 70.6529 13.1334C70.4546 13.0074 70.301 12.8666 70.1931 12.7107C70.0849 12.5553 70.0304 12.3632 70.0304 12.1351C70.0304 11.7518 70.178 11.4669 70.4726 11.2811C70.7671 11.0955 71.2511 11.0019 71.9248 11.0019C72.5258 11.0019 73.0398 11.0713 73.4668 11.2089C73.8933 11.3469 74.2812 11.5059 74.6303 11.6857L75.4416 9.47369C75.0449 9.25792 74.5397 9.05976 73.9268 8.87995C73.3135 8.7004 72.5858 8.60986 71.7442 8.60986C71.0345 8.60986 70.3974 8.69738 69.8322 8.8709C69.267 9.04517 68.7863 9.29338 68.3895 9.61728C67.9926 9.94144 67.6861 10.3337 67.4695 10.7955C67.2531 11.2569 67.1449 11.7755 67.1449 12.3511C67.1449 12.9267 67.247 13.4151 67.4516 13.8165C67.6559 14.2186 67.9207 14.5603 68.245 14.842C68.5696 15.1239 68.9363 15.3578 69.3452 15.5433C69.754 15.7289 70.1628 15.8942 70.5719 16.0375C71.5096 16.3498 72.1709 16.6403 72.5558 16.9104C72.9404 17.1797 73.1331 17.519 73.1331 17.9263C73.1331 18.1182 73.1031 18.2922 73.0428 18.4479C72.9826 18.6038 72.8741 18.7386 72.718 18.852C72.5619 18.9667 72.3543 19.0565 72.0958 19.1221Z\" fill=\"#1D1E20\"\/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.0374 15.1209C64.0374 16.1877 63.8778 17.1262 63.5597 17.935C63.2407 18.7445 62.8046 19.4219 62.2518 19.9671C61.6987 20.5131 61.0401 20.9235 60.2767 21.1991C59.5133 21.4753 58.6923 21.6131 57.8149 21.6131C56.9609 21.6131 56.1556 21.4753 55.3979 21.1991C54.6403 20.9235 53.9787 20.5131 53.4138 19.9671C52.8483 19.4219 52.4039 18.7445 52.0791 17.935C51.7545 17.1262 51.5918 16.1877 51.5918 15.1209C51.5918 14.0537 51.7603 13.1154 52.097 12.3064C52.4334 11.4969 52.8877 10.8164 53.4589 10.2649C54.0297 9.71341 54.6912 9.29998 55.4431 9.02411C56.1942 8.74799 56.9851 8.60992 57.8149 8.60992C58.6684 8.60992 59.4739 8.74799 60.2318 9.02411C60.9892 9.29998 61.6505 9.71341 62.2157 10.2649C62.7807 10.8164 63.2258 11.4969 63.5504 12.3064C63.8753 13.1154 64.0374 14.0537 64.0374 15.1209ZM54.4953 15.1209C54.4953 15.732 54.5703 16.2835 54.7206 16.7752C54.8709 17.267 55.0875 17.6895 55.3703 18.0431C55.6522 18.3972 55.9983 18.6695 56.4074 18.8612C56.8159 19.0535 57.2848 19.1496 57.8142 19.1496C58.331 19.1496 58.7971 19.0535 59.2122 18.8612C59.6266 18.6695 59.9757 18.3972 60.2579 18.0431C60.5404 17.6895 60.7573 17.267 60.9076 16.7752C61.0579 16.2835 61.1331 15.732 61.1331 15.1209C61.1331 14.5091 61.0579 13.9546 60.9076 13.4569C60.7573 12.9595 60.5404 12.5342 60.2579 12.1802C59.9757 11.8266 59.6266 11.5535 59.2122 11.3621C58.7971 11.1702 58.331 11.0744 57.8142 11.0744C57.2848 11.0744 56.8159 11.1732 56.4074 11.3709C55.9983 11.5688 55.6522 11.8447 55.3703 12.1985C55.0875 12.5521 54.8709 12.9776 54.7206 13.475C54.5703 13.9729 54.4953 14.5214 54.4953 15.1209Z\" fill=\"#1D1E20\"\/>\n<path d=\"M45.1119 8.89819H47.9258V21.3612H45.1119V16.0739H40.3862V21.3612H37.5723V8.89819H40.3862V13.6637H45.1119V8.89819Z\" fill=\"#1D1E20\"\/>\n<path d=\"M88.4331 8.89832V11.2904H84.6633V21.3613H81.8497V11.2904H78.0796V8.89832H88.4331Z\" fill=\"#1D1E20\"\/>\n<path d=\"M94.372 21.3615H91.5581V8.89832H94.372V21.3615Z\" fill=\"#1D1E20\"\/>\n<path d=\"M106.968 21.3613C106.162 19.9347 105.291 18.5261 104.352 17.135C103.414 15.744 102.416 14.4313 101.358 13.1963V21.3613H98.5806V8.89832H100.871C101.268 9.29364 101.707 9.77924 102.188 10.3549C102.669 10.9305 103.158 11.5451 103.658 12.1985C104.157 12.8518 104.653 13.5293 105.146 14.2304C105.639 14.9318 106.102 15.606 106.535 16.2535V8.89832H109.331V21.3613H106.968Z\" fill=\"#1D1E20\"\/>\n<path d=\"M127.522 21.3613V8.89832H135.963V11.2542H130.336V13.6998H135.332V16.0021H130.336V19.0054H136.378V21.3613H127.522Z\" fill=\"#1D1E20\"\/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M147.746 9.75226C146.748 9.0866 145.311 8.75415 143.435 8.75415C142.918 8.75415 142.332 8.77804 141.677 8.82632C141.021 8.87385 140.387 8.95835 139.774 9.07755V21.3612H142.587V16.8107H143.977C144.217 17.0989 144.459 17.4196 144.701 17.7736C144.942 18.1272 145.187 18.5014 145.434 18.8972C145.682 19.2931 145.923 19.701 146.158 20.1204C146.393 20.5401 146.626 20.9536 146.855 21.3612H150C149.784 20.9058 149.55 20.4413 149.297 19.9673C149.045 19.494 148.783 19.0386 148.513 18.601C148.242 18.1634 147.968 17.7437 147.692 17.3419C147.415 16.9402 147.151 16.5836 146.898 16.2716C147.656 15.9602 148.236 15.5312 148.639 14.986C149.042 14.4406 149.243 13.7296 149.243 12.8547C149.243 11.4517 148.744 10.4177 147.746 9.75226ZM143.047 11.1641C143.209 11.1522 143.392 11.1462 143.597 11.1462C144.498 11.1462 145.18 11.2752 145.643 11.5325C146.106 11.791 146.338 12.225 146.338 12.8366C146.338 13.4724 146.109 13.9223 145.652 14.1856C145.196 14.4496 144.438 14.5809 143.38 14.5809H142.587V11.2C142.731 11.1885 142.885 11.1764 143.047 11.1641Z\" fill=\"#1D1E20\"\/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.000249566 14.046V0.000497794L7.08916 3.78046V10.1086L16.4735 10.1132L23.6774 14.046H0.000249566ZM18.3925 8.95058V0L25.6725 3.6859V13.1797L18.3925 8.95058ZM18.3924 26.1177V19.8441L8.93577 19.8375C8.9446 19.8793 1.6123 15.8418 1.6123 15.8418L25.6725 15.9547V30L18.3924 26.1177ZM0 26.1177L0.000252212 16.9393L7.08916 21.0683V29.8033L0 26.1177Z\" fill=\"#1D1E20\"\/>\n<\/svg>\n"},{"base":"plugins","rel":"hostinger\/package.json","ext":"json","size":1401,"mtime":1757312769,"type":"text","content":"{\n  \"main\": \"webpack.mix.js\",\n  \"scripts\": {\n    \"auth:gcp\": \"gcloud auth application-default login\",\n    \"auth:gca\": \"npx google-artifactregistry-auth\",\n    \"dev\": \"npm run development\",\n    \"development\": \"cross-env NODE_ENV=development node_modules\/webpack\/bin\/webpack.js --progress --config=node_modules\/laravel-mix\/setup\/webpack.config.js\",\n    \"prod\": \"npm run production\",\n    \"watch\": \"npm run development -- --watch\",\n    \"production\": \"cross-env NODE_ENV=production node_modules\/webpack\/bin\/webpack.js --config=node_modules\/laravel-mix\/setup\/webpack.config.js\",\n    \"prepare\": \"husky\",\n    \"lint:php\": \"vendor\/bin\/phpcs\"\n  },\n  \"lint-staged\": {\n    \"*.php\": [\n      \"npm run lint:php\"\n    ]\n  },\n  \"devDependencies\": {\n    \"cross-env\": \"^7.0.3\",\n    \"css-loader\": \"^6.7.3\",\n    \"husky\": \"^9.1.7\",\n    \"laravel-mix\": \"^6.0.49\",\n    \"lint-staged\": \"^16.1.0\",\n    \"resolve-url-loader\": \"^5.0.0\",\n    \"sass\": \"^1.75.0\",\n    \"sass-loader\": \"^14.1.1\",\n    \"style-loader\": \"^3.3.4\",\n    \"ts-loader\": \"^9.5.1\",\n    \"video.js\": \"^8.10.0\",\n    \"vue\": \"^3.4.21\",\n    \"vue-loader\": \"^16.8.3\",\n    \"webpack\": \"^5.94.0\",\n    \"webpack-cli\": \"^6.0.1\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^1.7.4\",\n    \"pinia\": \"^2.1.7\",\n    \"pinia-plugin-persistedstate\": \"^3.2.1\",\n    \"survey-core\": \"^1.9.104\",\n    \"survey-jquery\": \"^1.9.104\",\n    \"survey-knockout-ui\": \"^1.9.104\",\n    \"videojs-youtube\": \"^3.0.1\"\n  }\n}\n"},{"base":"plugins","rel":"hostinger\/changelog.md","ext":"md","size":7441,"mtime":1757312769,"type":"text","content":"Changelog\n=========\n\n1.2.0 (2023-03-22)\n\n- Updated How To videos\n- Added Lithuanian language translations\n- Updated assets\n- Redirect from Hostinger dashboard into plugin\n\n1.3.0 (2023-04-11)\n\n- Autocomplete onboarding steps\n- Redirect Hosting clients by segment\n- Hide logo upload step if theme not support\n- Updated How To videos\n- Updated translations\n- Updated onboarding steps\n\n1.4.0 (2023-04-17)\n\n- Added new \"Add product\" step\n- Adjusted onboarding steps by website type\n- Updated logo upload step\n- Autocomplete site title step on settings change\n\n1.4.1 (2023-05-15)\n\n- Fix site health session warning\n\n1.5.0 (2023-05-23)\n\n- Add onboarding steps autocomplete date\n\n1.6.0 (2023-06-08)\n\n- Add plugin update feature\n\n1.6.1 (2023-06-13)\n\n- Fixed unused assets\n- Fixed maintenance mode cache\n\n1.6.2 (2023-06-15)\n\n- Fixed maintenance mode conflicts with other plugins\n\n1.6.3 (2023-07-11)\n\n- Add AI assistant\n\n1.6.4 (2023-08-08)\n\n- Add additional AI assistant buttons\n\n1.6.5 (2023-08-14)\n\n- Add translations\n\n1.6.6 (2023-08-17)\n\n- Add additional submenu items\n\n1.6.7 (2023-09-08)\n\n- Bugfixes\n- Redirect all users from hPanel\n- Text changes\n\n1.7.0 (2023-09-08)\n\n- Add CSAT survey\n\n1.7.1 (2023-09-20)\n\n- Add additional request header\n\n1.7.2 (2023-09-22)\n\n- Hide notices in Hostinger page\n\n1.8.0 (2023-09-27)\n\n- Additional amplitude events\n\n1.8.1 (2023-10-03)\n\n- Remove video iframes\n\n1.8.2 (2023-10-05)\n\n- Adjust CSAT survey\n\n1.8.3 (2023-10-13)\n\n- Add domain connection step\n- Hide preview banner\n\n1.8.4 (2023-10-20)\n\n- Added regenerate website tab\n- Style corrections\n\n1.8.5 (2023-10-20)\n\n- Text corrections\n\n1.8.6 (2023-10-23)\n\n- Translations\n\n1.8.7 (2023-10-30)\n\n- Add WooCommerce onboarding survey\n\n1.8.8 (2023-11-13)\n\n- Bugfixes\n\n1.8.9 (2023-11-14)\n\n- Added onboarding survey\n- Fix onboarding steps duplicates\n\n1.9.0 (2023-11-15)\n\n- Fix survey transients\n\n1.9.1 (2023-11-15)\n\n- Add translations\n\n1.9.2 (2023-11-19)\n\n- Fixes\n\n1.9.3 (2023-11-21)\n\n- Fixed RTL survey issues\n- Added survey close button\n\n1.9.4 (2023-11-23)\n\n- Fix survey requests\n\n1.9.5 (2023-11-27)\n\n- Hide notices in Hostinger page\n- Remove surveys\n\n1.9.6 (2023-12-01)\n\n- Added filter for tabs \/ tab content\n\n1.9.7 (2023-12-13)\n\n- Added tests, adjusted assets loading\n- Fixed maintenance security issue\n\n1.9.8 (2023-12-14)\n\n- Version mismatch fix\n\n1.9.9 (2023-12-18)\n\n- Fixed assets load on subfolder installations\n\n2.0.0 (2024-01-10)\n\n- Increased minimal WordPress version\n\n2.0.1 (2024-01-16)\n\n- Added onboarding step for affiliate plugin\n\n2.0.2 (2024-01-19)\n\n- Updated internal services\n\n2.0.3 (2024-01-19)\n\n- Fixes\n- Added promotional banner\n\n2.0.4 (2024-02-02)\n\n- Added jump to hPanel\n- Redesign tabs section\n\n2.0.5 (2024-02-06)\n\n- Added surveys\n\n2.0.6 (2024-02-09)\n\n- Added affiliate surveys\n- Internal services improvements\n\n2.0.7 (2024-02-13)\n\n- Survey adjustments\n\n2.0.8 (2024-02-14)\n\n- Fixed files loading\n\n2.0.9 (2024-02-20)\n\n- Astra theme compatibility\n- Internal services improvements\n\n2.1.0 (2024-03-04)\n\n- Lower WordPress version requirement\n- Added \"Omnisend\" plugin upgrade promo message\n\n2.1.1 (2024-03-08)\n\n- Changed \"Omnisend\" promo appearance conditions\n\n2.1.2 (2024-03-13)\n\n- Removed sessions\n\n2.1.3 (2024-03-14)\n\n- Refactored codebase\n\n2.1.4 (2024-03-14)\n\n- Removed vendors\n\n2.1.5 (2024-03-16)\n\n- Fixed Namespace issues\n\n2.1.6 (2024-03-18)\n\n- CSS fixes\n\n2.1.7 (2024-03-27)\n\n- Improved internal services\n- Added links to hPanel in admin bar\n- Fixed hPanel redirect to subdomain\n\n2.1.8 (2024-03-29)\n\n- Assets compatibility fix\n\n2.1.9 (2024-04-03)\n\n- CSAT survey improvements\n\n2.2.0 (2024-04-15)\n\n- Compatibility fixes\n\n2.2.1 (2024-04-16)\n\n- Fixed loading issues\n\n2.2.2 (2024-04-17)\n\n- \"Omnisend\" authentication fix\n\n2.2.3 (2024-05-08)\n\n- Increased minimum PHP version\n\n2.2.4 (2024-05-13)\n\n- Update prebuilt websites\n\n3.0.0 (2024-05-30)\n\n- Renamed plugin to Hostinger Tools\n- Added check WordPress and PHP versions\n- Added ability to enable\/disable maintenance mode and get bypass link\n- Added ability to enable\/disable XML-RPC\n- Added ability to force redirects to HTTPS and WWW URLs\n- Moved Onboarding steps and Learning section to separate plugin Hostinger Easy Onboarding\n\n3.0.1 (2024-06-06)\n\n- Added skeleton loader for UI\n- Removed hPanel links from admin bar menu\n\n3.0.2 (2024-06-19)\n\n- Updated menu package\n\n3.0.3 (2024-07-02)\n\n- Added tests\n\n3.0.4 (2024-07-09)\n\n- Vendor autoload fix\n\n3.0.5 (2024-07-24)\n\n- PHP version card change\n- Translations\n\n3.0.6 (2024-07-30)\n\n- Added CLI commands descriptions\n\n3.0.8 (2024-08-27)\n\n- Updated recommended PHP version\n\n3.0.9 (2024-08-04)\n\n- Added conditional check for maintenance class CLI\n\n3.0.10 (2024-09-11)\n\n- Update packages\n\n3.0.11 (2024-09-13)\n\n- Fix logo visibility\n\n3.0.12 (2024-10-01)\n\n- Fix maintenance mode cache issue\n\n3.0.13 (2024-10-09)\n\n- Fix `force www` row not being shown when user is not eligible to adjust it\n\n3.0.14 (2024-10-11)\n\n- Add tutorial link\n\n3.0.15 (2024-10-18)\n\n- WooCommerce coming soon mode cache flush\n\n3.0.16 (2024-10-22)\n\n- Fix cache LiteSpeed cleaning\n\n3.0.17 (2024-10-24)\n\n- Updated plugin URL by locale\n\n3.0.18 (2024-11-08)\n\n- Remove unused assets\n- Remove flush cache duplicates\n\n3.0.19 (2024-11-13)\n\n- Dismiss plugin split notice after close\n\n3.0.20 (2024-12-03)\n\n- Updated packages\n\n3.0.21 (2024-12-09)\n\n- Added recommended PHP version\n\n3.0.22 (2025-01-08)\n\n- Added preview website link in navbar\n\n3.0.23 (2025-02-07)\n\n- Added ability to enable or disable Authorize application page\n\n3.0.24 (2025-02-10)\n\n- Fixed bypass input field visibility\n\n3.0.25 (2025-02-10)\n\n- Added new translations\n\n3.0.26 (2025-02-10)\n\n- Fixed settings update\n\n3.0.27 (2025-02-11)\n\n- Fixed bypass code regeneration\n\n3.0.28 (2025-02-12)\n- Added correct reseller link to PHP update\n\n3.0.29 (2025-02-21)\n- Update packages\n\n3.0.30 (2025-02-24)\n- Enhanced WordPress application security settings\n\n3.0.31 (2025-02-24)\n- Fixed assets load issue\n\n3.0.32 (2025-03-04)\n- Updated compatibility\n\n3.0.33 (2024-04-04)\n- Remove hardcoded references\n\n3.0.34 (2024-04-10)\n- Add preview and site edit buttons\n\n3.0.35 (2024-04-28)\n- Add edit site button support for block themes\n\n3.0.36 (2024-04-29)\n- Style corrections\n\n3.0.37 (2024-05-12)\n- Remove unused assets\n- Fixed Jetpack autoloader issue\n- Added LLMS.txt generation functionality\n- Added few new Spanish locales (es_AR, es_CO, es_MX)\n\n3.0.38 (2025-06-09)\n- Tweaks the UI for PHP and WordPress version under Tools\n- Fallback to Site URL when no Blog Title is set in LLMS.txt\n- Clear cache on settings change\n\n3.0.39 (2025-06-12)\n- Updated logic to detect 3rd Party LLMs files\n- Updated UI and Copy for LLMS section\n- Add support for WooCommerce products in LLMS.txt\n- Added check for main plugin class to prevent class not found issues\n- Update readme.txt tags\n\n3.0.40 (2025-06-17)\n- Added latest translations\n- Provide visual feedback to user when changing settings \n- Fixed www urls rewrite\n\n3.0.41 (2025-06-19)\n- Update translations for ES, MX and CO\n\n3.0.42 (2025-07-03)\n- Menu translations \n\n3.0.43 (2025-07-22)\n- Add Web2MCP feature\n- Fix Settings state on failure\n- Bump dependencies version\n\n3.0.44 (2025-07-23)\n- Update translations\n\n3.0.45 (2025-07-28)\n- Update WP helper package\n\n3.0.46 (2025-08-05)\n- Fixed empty lines in llms.txt\n\n\n3.0.47 (2025-08-08)\n- Add MCP choice\n- Updated translations\n\n3.0.48 (2025-08-21)\n- Support for MCP optional entry in llms.txt\n- Add Learn More in MCP section\n- Generate llms.txt entries in the background\n"},{"base":"plugins","rel":"hostinger\/composer.json","ext":"json","size":1297,"mtime":1757312769,"type":"text","content":"{\n  \"name\": \"hostinger\/hostinger\",\n  \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"git@github.com:hostinger\/hostinger-wp-menu-manager.git\"\n    },\n    {\n      \"type\": \"vcs\",\n      \"url\": \"git@github.com:hostinger\/hostinger-wp-helper.git\"\n    }\n  ],\n  \"require\": {\n    \"php\": \">=8.0\",\n    \"hostinger\/hostinger-wp-menu-manager\": \"^1.2\",\n    \"automattic\/jetpack-autoloader\": \"^5.0\",\n    \"woocommerce\/action-scheduler\": \"^3.9\",\n    \"hostinger\/hostinger-wp-helper\": \"^1.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Hostinger\\\\\": \"includes\/\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Hostinger\\\\Tests\\\\\": \"tests\/phpunit\"\n    }\n  },\n  \"require-dev\": {\n    \"phpunit\/phpunit\": \"^9.6\",\n    \"yoast\/phpunit-polyfills\": \"^2.0\",\n    \"squizlabs\/php_codesniffer\": \"^3.7\",\n    \"dealerdirect\/phpcodesniffer-composer-installer\": \"^0.7\",\n    \"phpcompatibility\/phpcompatibility-wp\": \"*\",\n    \"wp-coding-standards\/wpcs\": \"^3.0\",\n    \"phpunit\/php-code-coverage\": \"^9.2\"\n  },\n  \"scripts\": {\n    \"phpunit\": \"phpunit\"\n  },\n  \"config\": {\n    \"platform-check\": false,\n    \"allow-plugins\": {\n      \"dealerdirect\/phpcodesniffer-composer-installer\": true,\n      \"alleyinteractive\/composer-wordpress-autoloader\": true,\n      \"automattic\/jetpack-autoloader\": true\n    }\n  },\n  \"minimum-stability\": \"dev\"\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/autoload.php","ext":"php","size":748,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ autoload.php @generated by Composer\n\nif (PHP_VERSION_ID < 50600) {\n    if (!headers_sent()) {\n        header('HTTP\/1.1 500 Internal Server Error');\n    }\n    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via \"composer self-update --2.2\". Aborting.'.PHP_EOL;\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, $err);\n        } elseif (!headers_sent()) {\n            echo $err;\n        }\n    }\n    throw new RuntimeException($err);\n}\n\nrequire_once __DIR__ . '\/composer\/autoload_real.php';\n\nreturn ComposerAutoloaderInit5eb612593a2ef67b85ad25c07c19e821::getLoader();\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/WP_Async_Request.php","ext":"php","size":3718,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * WP Async Request\n *\n * @package WP-Background-Processing\n *\/\n\n\/*\nLibrary URI: https:\/\/github.com\/deliciousbrains\/wp-background-processing\/blob\/fbbc56f2480910d7959972ec9ec0819a13c6150a\/classes\/wp-async-request.php\nAuthor: Delicious Brains Inc.\nAuthor URI: https:\/\/deliciousbrains.com\/\nLicense: GNU General Public License v2.0\nLicense URI: https:\/\/github.com\/deliciousbrains\/wp-background-processing\/commit\/126d7945dd3d39f39cb6488ca08fe1fb66cb351a\n*\/\n\nif ( ! class_exists( 'WP_Async_Request' ) ) {\n\n\t\/**\n\t * Abstract WP_Async_Request class.\n\t *\n\t * @abstract\n\t *\/\n\tabstract class WP_Async_Request {\n\n\t\t\/**\n\t\t * Prefix\n\t\t *\n\t\t * (default value: 'wp')\n\t\t *\n\t\t * @var string\n\t\t *\/\n\t\tprotected $prefix = 'wp';\n\n\t\t\/**\n\t\t * Action\n\t\t *\n\t\t * (default value: 'async_request')\n\t\t *\n\t\t * @var string\n\t\t *\/\n\t\tprotected $action = 'async_request';\n\n\t\t\/**\n\t\t * Identifier\n\t\t *\n\t\t * @var mixed\n\t\t *\/\n\t\tprotected $identifier;\n\n\t\t\/**\n\t\t * Data\n\t\t *\n\t\t * (default value: array())\n\t\t *\n\t\t * @var array\n\t\t *\/\n\t\tprotected $data = array();\n\n\t\t\/**\n\t\t * Initiate new async request\n\t\t *\/\n\t\tpublic function __construct() {\n\t\t\t$this->identifier = $this->prefix . '_' . $this->action;\n\n\t\t\tadd_action( 'wp_ajax_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t\tadd_action( 'wp_ajax_nopriv_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t}\n\n\t\t\/**\n\t\t * Set data used during the request\n\t\t *\n\t\t * @param array $data Data.\n\t\t *\n\t\t * @return $this\n\t\t *\/\n\t\tpublic function data( $data ) {\n\t\t\t$this->data = $data;\n\n\t\t\treturn $this;\n\t\t}\n\n\t\t\/**\n\t\t * Dispatch the async request\n\t\t *\n\t\t * @return array|WP_Error\n\t\t *\/\n\t\tpublic function dispatch() {\n\t\t\t$url  = add_query_arg( $this->get_query_args(), $this->get_query_url() );\n\t\t\t$args = $this->get_post_args();\n\n\t\t\treturn wp_remote_post( esc_url_raw( $url ), $args );\n\t\t}\n\n\t\t\/**\n\t\t * Get query args\n\t\t *\n\t\t * @return array\n\t\t *\/\n\t\tprotected function get_query_args() {\n\t\t\tif ( property_exists( $this, 'query_args' ) ) {\n\t\t\t\treturn $this->query_args;\n\t\t\t}\n\n\t\t\t$args = array(\n\t\t\t\t'action' => $this->identifier,\n\t\t\t\t'nonce'  => wp_create_nonce( $this->identifier ),\n\t\t\t);\n\n\t\t\t\/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param array $url\n\t\t\t *\/\n\t\t\treturn apply_filters( $this->identifier . '_query_args', $args );\n\t\t}\n\n\t\t\/**\n\t\t * Get query URL\n\t\t *\n\t\t * @return string\n\t\t *\/\n\t\tprotected function get_query_url() {\n\t\t\tif ( property_exists( $this, 'query_url' ) ) {\n\t\t\t\treturn $this->query_url;\n\t\t\t}\n\n\t\t\t$url = admin_url( 'admin-ajax.php' );\n\n\t\t\t\/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param string $url\n\t\t\t *\/\n\t\t\treturn apply_filters( $this->identifier . '_query_url', $url );\n\t\t}\n\n\t\t\/**\n\t\t * Get post args\n\t\t *\n\t\t * @return array\n\t\t *\/\n\t\tprotected function get_post_args() {\n\t\t\tif ( property_exists( $this, 'post_args' ) ) {\n\t\t\t\treturn $this->post_args;\n\t\t\t}\n\n\t\t\t$args = array(\n\t\t\t\t'timeout'   => 0.01,\n\t\t\t\t'blocking'  => false,\n\t\t\t\t'body'      => $this->data,\n\t\t\t\t'cookies'   => $_COOKIE,\n\t\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', false ),\n\t\t\t);\n\n\t\t\t\/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param array $args\n\t\t\t *\/\n\t\t\treturn apply_filters( $this->identifier . '_post_args', $args );\n\t\t}\n\n\t\t\/**\n\t\t * Maybe handle\n\t\t *\n\t\t * Check for correct nonce and pass to handler.\n\t\t *\/\n\t\tpublic function maybe_handle() {\n\t\t\t\/\/ Don't lock up other requests while processing.\n\t\t\tsession_write_close();\n\n\t\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t\t$this->handle();\n\n\t\t\twp_die();\n\t\t}\n\n\t\t\/**\n\t\t * Handle\n\t\t *\n\t\t * Override this method to perform any actions required\n\t\t * during the async request.\n\t\t *\/\n\t\tabstract protected function handle();\n\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_MinutesField.php","ext":"php","size":761,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Minutes field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_MinutesField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('i'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 minute');\n        } else {\n            $date->modify('+1 minute');\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_FieldInterface.php","ext":"php","size":1138,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * CRON field interface\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\ninterface CronExpression_FieldInterface\n{\n    \/**\n     * Check if the respective value of a DateTime field satisfies a CRON exp\n     *\n     * @param DateTime $date  DateTime object to check\n     * @param string   $value CRON expression to test against\n     *\n     * @return bool Returns TRUE if satisfied, FALSE otherwise\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value);\n\n    \/**\n     * When a CRON expression is not satisfied, this method is used to increment\n     * or decrement a DateTime object by the unit of the cron field\n     *\n     * @param DateTime $date   DateTime object to change\n     * @param bool     $invert (optional) Set to TRUE to decrement\n     *\n     * @return CronExpression_FieldInterface\n     *\/\n    public function increment(DateTime $date, $invert = false);\n\n    \/**\n     * Validates a CRON expression for a given field\n     *\n     * @param string $value CRON expression value to validate\n     *\n     * @return bool Returns TRUE if valid, FALSE otherwise\n     *\/\n    public function validate($value);\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression.php","ext":"php","size":11615,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * CRON expression parser that can determine whether or not a CRON expression is\n * due to run, the next run date and previous run date of a CRON expression.\n * The determinations made by this class are accurate if checked run once per\n * minute (seconds are dropped from date time comparisons).\n *\n * Schedule parts must map to:\n * minute [0-59], hour [0-23], day of month, month [1-12|JAN-DEC], day of week\n * [1-7|MON-SUN], and an optional year.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n * @link http:\/\/en.wikipedia.org\/wiki\/Cron\n *\/\nclass CronExpression\n{\n    const MINUTE = 0;\n    const HOUR = 1;\n    const DAY = 2;\n    const MONTH = 3;\n    const WEEKDAY = 4;\n    const YEAR = 5;\n\n    \/**\n     * @var array CRON expression parts\n     *\/\n    private $cronParts;\n\n    \/**\n     * @var CronExpression_FieldFactory CRON field factory\n     *\/\n    private $fieldFactory;\n\n    \/**\n     * @var array Order in which to test of cron parts\n     *\/\n    private static $order = array(self::YEAR, self::MONTH, self::DAY, self::WEEKDAY, self::HOUR, self::MINUTE);\n\n    \/**\n     * Factory method to create a new CronExpression.\n     *\n     * @param string $expression The CRON expression to create.  There are\n     *      several special predefined values which can be used to substitute the\n     *      CRON expression:\n     *\n     *      @yearly, @annually) - Run once a year, midnight, Jan. 1 - 0 0 1 1 *\n     *      @monthly - Run once a month, midnight, first of month - 0 0 1 * *\n     *      @weekly - Run once a week, midnight on Sun - 0 0 * * 0\n     *      @daily - Run once a day, midnight - 0 0 * * *\n     *      @hourly - Run once an hour, first minute - 0 * * * *\n     *\n*@param CronExpression_FieldFactory $fieldFactory (optional) Field factory to use\n     *\n     * @return CronExpression\n     *\/\n    public static function factory($expression, ?CronExpression_FieldFactory $fieldFactory = null)\n    {\n        $mappings = array(\n            '@yearly' => '0 0 1 1 *',\n            '@annually' => '0 0 1 1 *',\n            '@monthly' => '0 0 1 * *',\n            '@weekly' => '0 0 * * 0',\n            '@daily' => '0 0 * * *',\n            '@hourly' => '0 * * * *'\n        );\n\n        if (isset($mappings[$expression])) {\n            $expression = $mappings[$expression];\n        }\n\n        return new self($expression, $fieldFactory ? $fieldFactory : new CronExpression_FieldFactory());\n    }\n\n    \/**\n     * Parse a CRON expression\n     *\n     * @param string       $expression   CRON expression (e.g. '8 * * * *')\n     * @param CronExpression_FieldFactory $fieldFactory Factory to create cron fields\n     *\/\n    public function __construct($expression, CronExpression_FieldFactory $fieldFactory)\n    {\n        $this->fieldFactory = $fieldFactory;\n        $this->setExpression($expression);\n    }\n\n    \/**\n     * Set or change the CRON expression\n     *\n     * @param string $value CRON expression (e.g. 8 * * * *)\n     *\n     * @return CronExpression\n     * @throws InvalidArgumentException if not a valid CRON expression\n     *\/\n    public function setExpression($value)\n    {\n        $this->cronParts = preg_split('\/\\s\/', $value, -1, PREG_SPLIT_NO_EMPTY);\n        if (count($this->cronParts) < 5) {\n            throw new InvalidArgumentException(\n                $value . ' is not a valid CRON expression'\n            );\n        }\n\n        foreach ($this->cronParts as $position => $part) {\n            $this->setPart($position, $part);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * Set part of the CRON expression\n     *\n     * @param int    $position The position of the CRON expression to set\n     * @param string $value    The value to set\n     *\n     * @return CronExpression\n     * @throws InvalidArgumentException if the value is not valid for the part\n     *\/\n    public function setPart($position, $value)\n    {\n        if (!$this->fieldFactory->getField($position)->validate($value)) {\n            throw new InvalidArgumentException(\n                'Invalid CRON field value ' . $value . ' as position ' . $position\n            );\n        }\n\n        $this->cronParts[$position] = $value;\n\n        return $this;\n    }\n\n    \/**\n     * Get a next run date relative to the current date or a specific date\n     *\n     * @param string|DateTime $currentTime (optional) Relative calculation date\n     * @param int             $nth         (optional) Number of matches to skip before returning a\n     *     matching next run date.  0, the default, will return the current\n     *     date and time if the next run date falls on the current date and\n     *     time.  Setting this value to 1 will skip the first match and go to\n     *     the second match.  Setting this value to 2 will skip the first 2\n     *     matches and so on.\n     * @param bool $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     *\/\n    public function getNextRunDate($currentTime = 'now', $nth = 0, $allowCurrentDate = false)\n    {\n        return $this->getRunDate($currentTime, $nth, false, $allowCurrentDate);\n    }\n\n    \/**\n     * Get a previous run date relative to the current date or a specific date\n     *\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param int             $nth              (optional) Number of matches to skip before returning\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     * @see CronExpression::getNextRunDate\n     *\/\n    public function getPreviousRunDate($currentTime = 'now', $nth = 0, $allowCurrentDate = false)\n    {\n        return $this->getRunDate($currentTime, $nth, true, $allowCurrentDate);\n    }\n\n    \/**\n     * Get multiple run dates starting at the current date or a specific date\n     *\n     * @param int             $total            Set the total number of dates to calculate\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param bool            $invert           (optional) Set to TRUE to retrieve previous dates\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return array Returns an array of run dates\n     *\/\n    public function getMultipleRunDates($total, $currentTime = 'now', $invert = false, $allowCurrentDate = false)\n    {\n        $matches = array();\n        for ($i = 0; $i < max(0, $total); $i++) {\n            $matches[] = $this->getRunDate($currentTime, $i, $invert, $allowCurrentDate);\n        }\n\n        return $matches;\n    }\n\n    \/**\n     * Get all or part of the CRON expression\n     *\n     * @param string $part (optional) Specify the part to retrieve or NULL to\n     *      get the full cron schedule string.\n     *\n     * @return string|null Returns the CRON expression, a part of the\n     *      CRON expression, or NULL if the part was specified but not found\n     *\/\n    public function getExpression($part = null)\n    {\n        if (null === $part) {\n            return implode(' ', $this->cronParts);\n        } elseif (array_key_exists($part, $this->cronParts)) {\n            return $this->cronParts[$part];\n        }\n\n        return null;\n    }\n\n    \/**\n     * Helper method to output the full expression.\n     *\n     * @return string Full CRON expression\n     *\/\n    public function __toString()\n    {\n        return $this->getExpression();\n    }\n\n    \/**\n     * Determine if the cron is due to run based on the current date or a\n     * specific date.  This method assumes that the current number of\n     * seconds are irrelevant, and should be called once per minute.\n     *\n     * @param string|DateTime $currentTime (optional) Relative calculation date\n     *\n     * @return bool Returns TRUE if the cron is due to run or FALSE if not\n     *\/\n    public function isDue($currentTime = 'now')\n    {\n        if ('now' === $currentTime) {\n            $currentDate = date('Y-m-d H:i');\n            $currentTime = strtotime($currentDate);\n        } elseif ($currentTime instanceof DateTime) {\n            $currentDate = $currentTime->format('Y-m-d H:i');\n            $currentTime = strtotime($currentDate);\n        } else {\n            $currentTime = new DateTime($currentTime);\n            $currentTime->setTime($currentTime->format('H'), $currentTime->format('i'), 0);\n            $currentDate = $currentTime->format('Y-m-d H:i');\n            $currentTime = (int)($currentTime->getTimestamp());\n        }\n\n        return $this->getNextRunDate($currentDate, 0, true)->getTimestamp() == $currentTime;\n    }\n\n    \/**\n     * Get the next or previous run date of the expression relative to a date\n     *\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param int             $nth              (optional) Number of matches to skip before returning\n     * @param bool            $invert           (optional) Set to TRUE to go backwards in time\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     *\/\n    protected function getRunDate($currentTime = null, $nth = 0, $invert = false, $allowCurrentDate = false)\n    {\n        if ($currentTime instanceof DateTime) {\n            $currentDate = $currentTime;\n        } else {\n            $currentDate = new DateTime($currentTime ? $currentTime : 'now');\n            $currentDate->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        }\n\n        $currentDate->setTime($currentDate->format('H'), $currentDate->format('i'), 0);\n        $nextRun = clone $currentDate;\n        $nth = (int) $nth;\n\n        \/\/ Set a hard limit to bail on an impossible date\n        for ($i = 0; $i < 1000; $i++) {\n\n            foreach (self::$order as $position) {\n                $part = $this->getExpression($position);\n                if (null === $part) {\n                    continue;\n                }\n\n                $satisfied = false;\n                \/\/ Get the field object used to validate this part\n                $field = $this->fieldFactory->getField($position);\n                \/\/ Check if this is singular or a list\n                if (strpos($part, ',') === false) {\n                    $satisfied = $field->isSatisfiedBy($nextRun, $part);\n                } else {\n                    foreach (array_map('trim', explode(',', $part)) as $listPart) {\n                        if ($field->isSatisfiedBy($nextRun, $listPart)) {\n                            $satisfied = true;\n                            break;\n                        }\n                    }\n                }\n\n                \/\/ If the field is not satisfied, then start over\n                if (!$satisfied) {\n                    $field->increment($nextRun, $invert);\n                    continue 2;\n                }\n            }\n\n            \/\/ Skip this match if needed\n            if ((!$allowCurrentDate && $nextRun == $currentDate) || --$nth > -1) {\n                $this->fieldFactory->getField(0)->increment($nextRun, $invert);\n                continue;\n            }\n\n            return $nextRun;\n        }\n\n        \/\/ @codeCoverageIgnoreStart\n        throw new RuntimeException('Impossible CRON expression');\n        \/\/ @codeCoverageIgnoreEnd\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_HoursField.php","ext":"php","size":1157,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Hours field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_HoursField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('H'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        \/\/ Change timezone to UTC temporarily. This will\n        \/\/ allow us to go back or forwards and hour even\n        \/\/ if DST will be changed between the hours.\n        $timezone = $date->getTimezone();\n        $date->setTimezone(new DateTimeZone('UTC'));\n        if ($invert) {\n            $date->modify('-1 hour');\n            $date->setTime($date->format('H'), 59);\n        } else {\n            $date->modify('+1 hour');\n            $date->setTime($date->format('H'), 0);\n        }\n        $date->setTimezone($timezone);\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_DayOfMonthField.php","ext":"php","size":3596,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Day of month field.  Allows: * , \/ - ? L W\n *\n * 'L' stands for \"last\" and specifies the last day of the month.\n *\n * The 'W' character is used to specify the weekday (Monday-Friday) nearest the\n * given day. As an example, if you were to specify \"15W\" as the value for the\n * day-of-month field, the meaning is: \"the nearest weekday to the 15th of the\n * month\". So if the 15th is a Saturday, the trigger will fire on Friday the\n * 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If\n * the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you\n * specify \"1W\" as the value for day-of-month, and the 1st is a Saturday, the\n * trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary\n * of a month's days. The 'W' character can only be specified when the\n * day-of-month is a single day, not a range or list of days.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_DayOfMonthField extends CronExpression_AbstractField\n{\n    \/**\n     * Get the nearest day of the week for a given day in a month\n     *\n     * @param int $currentYear  Current year\n     * @param int $currentMonth Current month\n     * @param int $targetDay    Target day of the month\n     *\n     * @return DateTime Returns the nearest date\n     *\/\n    private static function getNearestWeekday($currentYear, $currentMonth, $targetDay)\n    {\n        $tday = str_pad($targetDay, 2, '0', STR_PAD_LEFT);\n        $target = new DateTime(\"$currentYear-$currentMonth-$tday\");\n        $currentWeekday = (int) $target->format('N');\n\n        if ($currentWeekday < 6) {\n            return $target;\n        }\n\n        $lastDayOfMonth = $target->format('t');\n\n        foreach (array(-1, 1, -2, 2) as $i) {\n            $adjusted = $targetDay + $i;\n            if ($adjusted > 0 && $adjusted <= $lastDayOfMonth) {\n                $target->setDate($currentYear, $currentMonth, $adjusted);\n                if ($target->format('N') < 6 && $target->format('m') == $currentMonth) {\n                    return $target;\n                }\n            }\n        }\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        \/\/ ? states that the field value is to be skipped\n        if ($value == '?') {\n            return true;\n        }\n\n        $fieldValue = $date->format('d');\n\n        \/\/ Check to see if this is the last day of the month\n        if ($value == 'L') {\n            return $fieldValue == $date->format('t');\n        }\n\n        \/\/ Check to see if this is the nearest weekday to a particular value\n        if (strpos($value, 'W')) {\n            \/\/ Parse the target day\n            $targetDay = substr($value, 0, strpos($value, 'W'));\n            \/\/ Find out if the current day is the nearest day of the week\n            return $date->format('j') == self::getNearestWeekday(\n                $date->format('Y'),\n                $date->format('m'),\n                $targetDay\n            )->format('j');\n        }\n\n        return $this->isSatisfied($date->format('d'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('previous day');\n            $date->setTime(23, 59);\n        } else {\n            $date->modify('next day');\n            $date->setTime(0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-\\?LW0-9A-Za-z]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_MonthField.php","ext":"php","size":1399,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Month field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_MonthField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        \/\/ Convert text month values to integers\n        $value = str_ireplace(\n            array(\n                'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN',\n                'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'\n            ),\n            range(1, 12),\n            $value\n        );\n\n        return $this->isSatisfied($date->format('m'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            \/\/ $date->modify('last day of previous month'); \/\/ remove for php 5.2 compat\n            $date->modify('previous month');\n            $date->modify($date->format('Y-m-t'));\n            $date->setTime(23, 59);\n        } else {\n            \/\/$date->modify('first day of next month'); \/\/ remove for php 5.2 compat\n            $date->modify('next month');\n            $date->modify($date->format('Y-m-01'));\n            $date->setTime(0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9A-Z]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_FieldFactory.php","ext":"php","size":1745,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * CRON field factory implementing a flyweight factory\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n * @link http:\/\/en.wikipedia.org\/wiki\/Cron\n *\/\nclass CronExpression_FieldFactory\n{\n    \/**\n     * @var array Cache of instantiated fields\n     *\/\n    private $fields = array();\n\n    \/**\n     * Get an instance of a field object for a cron expression position\n     *\n     * @param int $position CRON expression position value to retrieve\n     *\n     * @return CronExpression_FieldInterface\n     * @throws InvalidArgumentException if a position is not valid\n     *\/\n    public function getField($position)\n    {\n        if (!isset($this->fields[$position])) {\n            switch ($position) {\n                case 0:\n                    $this->fields[$position] = new CronExpression_MinutesField();\n                    break;\n                case 1:\n                    $this->fields[$position] = new CronExpression_HoursField();\n                    break;\n                case 2:\n                    $this->fields[$position] = new CronExpression_DayOfMonthField();\n                    break;\n                case 3:\n                    $this->fields[$position] = new CronExpression_MonthField();\n                    break;\n                case 4:\n                    $this->fields[$position] = new CronExpression_DayOfWeekField();\n                    break;\n                case 5:\n                    $this->fields[$position] = new CronExpression_YearField();\n                    break;\n                default:\n                    throw new InvalidArgumentException(\n                        $position . ' is not a valid position'\n                    );\n            }\n        }\n\n        return $this->fields[$position];\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_DayOfWeekField.php","ext":"php","size":3921,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Day of week field.  Allows: * \/ , - ? L #\n *\n * Days of the week can be represented as a number 0-7 (0|7 = Sunday)\n * or as a three letter string: SUN, MON, TUE, WED, THU, FRI, SAT.\n *\n * 'L' stands for \"last\". It allows you to specify constructs such as\n * \"the last Friday\" of a given month.\n *\n * '#' is allowed for the day-of-week field, and must be followed by a\n * number between one and five. It allows you to specify constructs such as\n * \"the second Friday\" of a given month.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_DayOfWeekField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        if ($value == '?') {\n            return true;\n        }\n\n        \/\/ Convert text day of the week values to integers\n        $value = str_ireplace(\n            array('SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'),\n            range(0, 6),\n            $value\n        );\n\n        $currentYear = $date->format('Y');\n        $currentMonth = $date->format('m');\n        $lastDayOfMonth = $date->format('t');\n\n        \/\/ Find out if this is the last specific weekday of the month\n        if (strpos($value, 'L')) {\n            $weekday = str_replace('7', '0', substr($value, 0, strpos($value, 'L')));\n            $tdate = clone $date;\n            $tdate->setDate($currentYear, $currentMonth, $lastDayOfMonth);\n            while ($tdate->format('w') != $weekday) {\n                $tdate->setDate($currentYear, $currentMonth, --$lastDayOfMonth);\n            }\n\n            return $date->format('j') == $lastDayOfMonth;\n        }\n\n        \/\/ Handle # hash tokens\n        if (strpos($value, '#')) {\n            list($weekday, $nth) = explode('#', $value);\n            \/\/ Validate the hash fields\n            if ($weekday < 1 || $weekday > 5) {\n                throw new InvalidArgumentException(\"Weekday must be a value between 1 and 5. {$weekday} given\");\n            }\n            if ($nth > 5) {\n                throw new InvalidArgumentException('There are never more than 5 of a given weekday in a month');\n            }\n            \/\/ The current weekday must match the targeted weekday to proceed\n            if ($date->format('N') != $weekday) {\n                return false;\n            }\n\n            $tdate = clone $date;\n            $tdate->setDate($currentYear, $currentMonth, 1);\n            $dayCount = 0;\n            $currentDay = 1;\n            while ($currentDay < $lastDayOfMonth + 1) {\n                if ($tdate->format('N') == $weekday) {\n                    if (++$dayCount >= $nth) {\n                        break;\n                    }\n                }\n                $tdate->setDate($currentYear, $currentMonth, ++$currentDay);\n            }\n\n            return $date->format('j') == $currentDay;\n        }\n\n        \/\/ Handle day of the week values\n        if (strpos($value, '-')) {\n            $parts = explode('-', $value);\n            if ($parts[0] == '7') {\n                $parts[0] = '0';\n            } elseif ($parts[1] == '0') {\n                $parts[1] = '7';\n            }\n            $value = implode('-', $parts);\n        }\n\n        \/\/ Test to see which Sunday to use -- 0 == 7 == Sunday\n        $format = in_array(7, str_split($value)) ? 'N' : 'w';\n        $fieldValue = $date->format($format);\n\n        return $this->isSatisfied($fieldValue, $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 day');\n            $date->setTime(23, 59, 0);\n        } else {\n            $date->modify('+1 day');\n            $date->setTime(0, 0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9A-Z]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_YearField.php","ext":"php","size":937,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Year field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_YearField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('Y'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 year');\n            $date->setDate($date->format('Y'), 12, 31);\n            $date->setTime(23, 59, 0);\n        } else {\n            $date->modify('+1 year');\n            $date->setDate($date->format('Y'), 1, 1);\n            $date->setTime(0, 0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_AbstractField.php","ext":"php","size":2576,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Abstract CRON expression field\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nabstract class CronExpression_AbstractField implements CronExpression_FieldInterface\n{\n    \/**\n     * Check to see if a field is satisfied by a value\n     *\n     * @param string $dateValue Date value to check\n     * @param string $value     Value to test\n     *\n     * @return bool\n     *\/\n    public function isSatisfied($dateValue, $value)\n    {\n        if ($this->isIncrementsOfRanges($value)) {\n            return $this->isInIncrementsOfRanges($dateValue, $value);\n        } elseif ($this->isRange($value)) {\n            return $this->isInRange($dateValue, $value);\n        }\n\n        return $value == '*' || $dateValue == $value;\n    }\n\n    \/**\n     * Check if a value is a range\n     *\n     * @param string $value Value to test\n     *\n     * @return bool\n     *\/\n    public function isRange($value)\n    {\n        return strpos($value, '-') !== false;\n    }\n\n    \/**\n     * Check if a value is an increments of ranges\n     *\n     * @param string $value Value to test\n     *\n     * @return bool\n     *\/\n    public function isIncrementsOfRanges($value)\n    {\n        return strpos($value, '\/') !== false;\n    }\n\n    \/**\n     * Test if a value is within a range\n     *\n     * @param string $dateValue Set date value\n     * @param string $value     Value to test\n     *\n     * @return bool\n     *\/\n    public function isInRange($dateValue, $value)\n    {\n        $parts = array_map('trim', explode('-', $value, 2));\n\n        return $dateValue >= $parts[0] && $dateValue <= $parts[1];\n    }\n\n    \/**\n     * Test if a value is within an increments of ranges (offset[-to]\/step size)\n     *\n     * @param string $dateValue Set date value\n     * @param string $value     Value to test\n     *\n     * @return bool\n     *\/\n    public function isInIncrementsOfRanges($dateValue, $value)\n    {\n        $parts = array_map('trim', explode('\/', $value, 2));\n        $stepSize = isset($parts[1]) ? $parts[1] : 0;\n        if ($parts[0] == '*' || $parts[0] === '0') {\n            return (int) $dateValue % $stepSize == 0;\n        }\n\n        $range = explode('-', $parts[0], 2);\n        $offset = $range[0];\n        $to = isset($range[1]) ? $range[1] : $dateValue;\n        \/\/ Ensure that the date value is within the range\n        if ($dateValue < $offset || $dateValue > $to) {\n            return false;\n        }\n\n        for ($i = $offset; $i <= $to; $i+= $stepSize) {\n            if ($i == $dateValue) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/changelog.txt","ext":"txt","size":9546,"mtime":1756373567,"type":"text","content":"*** Changelog ***\n\n= 3.9.3 - 2025-07-15 =\n* Add hook 'action_scheduler_ensure_recurring_actions' specifically for scheduling recurring actions.\n* Assume an action is valid until proven otherwise.\n* Implement SKIP LOCKED during action claiming.\n* Import `get_flag_value()` from `WP_CLI\\Utils` before using.\n* Make `$unique` available to all pre-creation\/short-circuit hooks.\n* Make version\/source information available via new class.\n* Only release claims on pending actions.\n* Tweak - WP 6.8 compatibility.\n* Update minimum supported php and phpunit versions.\n* Update readme.txt.\n* WP CLI get action command: correct parentheses\/nesting of conditional checks.\n\n= 3.9.2 - 2025-02-03 =\n* Fixed fatal errors by moving version info methods to a new class and deprecating conflicting ones in ActionScheduler_Versions\n\n= 3.9.1 - 2025-01-21 =\n* A number of new WP CLI commands have been added, making it easier to manage actions in the terminal and from scripts.\n* New wp action-scheduler source command to help determine how Action Scheduler is being loaded.\n* Additional information about the active instance of Action Scheduler is now available in the Help pull-down drawer.\n* Make some other nullable parameters explicitly nullable.\n* Set option value to `no` rather than deleting.\n\n= 3.9.0 - 2024-11-14 =  \n* Minimum required version of PHP is now 7.1.  \n* Performance improvements for the `as_pending_actions_due()` function.  \n* Existing filter hook `action_scheduler_claim_actions_order_by` enhanced to provide callbacks with additional information.  \n* Improved compatibility with PHP 8.4, specifically by making implicitly nullable parameters explicitly nullable.  \n* A large number of coding standards-enhancements, to help reduce friction when submitting plugins to marketplaces and plugin directories. Special props @crstauf for this effort.  \n* Minor documentation tweaks and improvements.\n\n= 3.8.2 - 2024-09-12 =\n* Add missing parameter to the `pre_as_enqueue_async_action` hook.\n* Bump minimum PHP version to 7.0.\n* Bump minimum WordPress version to 6.4.\n* Make the batch size adjustable during processing.\n\n= 3.8.1 - 2024-06-20 =\n* Fix typos.\n* Improve the messaging in our unidentified action exceptions.\n\n= 3.8.0 - 2024-05-22 =\n* Documentation - Fixed typos in perf.md.\n* Update - We now require WordPress 6.3 or higher.\n* Update - We now require PHP 7.0 or higher.\n\n= 3.7.4 - 2024-04-05 =\n* Give a clear description of how the $unique parameter works.\n* Preserve the tab field if set.\n* Tweak - WP 6.5 compatibility.\n\n= 3.7.3 - 2024-03-20 =\n* Do not iterate over all of GET when building form in list table.\n* Fix a few issues reported by PCP (Plugin Check Plugin).\n* Try to save actions as unique even when the store doesn't support it.\n* Tweak - WP 6.4 compatibility.\n* Update \"Tested up to\" tag to WordPress 6.5.\n* update version in package-lock.json.\n\n= 3.7.2 - 2024-02-14 =\n* No longer user variables in `_n()` translation function.\n\n= 3.7.1 - 2023-12-13 =\n* update semver to 5.7.2 because of a security vulnerability in 5.7.1.\n\n= 3.7.0 - 2023-11-20 =\n* Important: starting with this release, Action Scheduler follows an L-2 version policy (WordPress, and consequently PHP).\n* Add extended indexes for hook_status_scheduled_date_gmt and status_scheduled_date_gmt.\n* Catch and log exceptions thrown when actions can't be created, e.g. under a corrupt database schema.\n* Tweak - WP 6.4 compatibility.\n* Update unit tests for upcoming dependency version policy.\n* make sure hook action_scheduler_failed_execution can access original exception object.\n* mention dependency version policy in usage.md.\n\n= 3.6.4 - 2023-10-11 =\n* Performance improvements when bulk cancelling actions.\n* Dev-related fixes.\n\n= 3.6.3 - 2023-09-13 =\n* Use `_doing_it_wrong` in initialization check.\n\n= 3.6.2 - 2023-08-09 =\n* Add guidance about passing arguments.\n* Atomic option locking.\n* Improve bulk delete handling.\n* Include database error in the exception message.\n* Tweak - WP 6.3 compatibility.\n\n= 3.6.1 - 2023-06-14 =\n* Document new optional `$priority` arg for various API functions.\n* Document the new `--exclude-groups` WP CLI option.\n* Document the new `action_scheduler_init` hook.\n* Ensure actions within each claim are executed in the expected order.\n* Fix incorrect text domain.\n* Remove SHOW TABLES usage when checking if tables exist.\n\n= 3.6.0 - 2023-05-10 =\n* Add $unique parameter to function signatures.\n* Add a cast-to-int for extra safety before forming new DateTime object.\n* Add a hook allowing exceptions for consistently failing recurring actions.\n* Add action priorities.\n* Add init hook.\n* Always raise the time limit.\n* Bump minimatch from 3.0.4 to 3.0.8.\n* Bump yaml from 2.2.1 to 2.2.2.\n* Defensive coding relating to gaps in declared schedule types.\n* Do not process an action if it cannot be set to `in-progress`.\n* Filter view labels (status names) should be translatable | #919.\n* Fix WPCLI progress messages.\n* Improve data-store initialization flow.\n* Improve error handling across all supported PHP versions.\n* Improve logic for flushing the runtime cache.\n* Support exclusion of multiple groups.\n* Update lint-staged and Node\/NPM requirements.\n* add CLI clean command.\n* add CLI exclude-group filter.\n* exclude past-due from list table all filter count.\n* throwing an exception if as_schedule_recurring_action interval param is not of type integer.\n\n= 3.5.4 - 2023-01-17 =\n* Add pre filters during action registration.\n* Async scheduling.\n* Calculate timeouts based on total actions.\n* Correctly order the parameters for `ActionScheduler_ActionFactory`'s calls to `single_unique`.\n* Fetch action in memory first before releasing claim to avoid deadlock.\n* PHP 8.2: declare property to fix creation of dynamic property warning.\n* PHP 8.2: fix \"Using ${var} in strings is deprecated, use {$var} instead\".\n* Prevent `undefined variable` warning for `$num_pastdue_actions`.\n\n= 3.5.3 - 2022-11-09 =\n* Query actions with partial match.\n\n= 3.5.2 - 2022-09-16 =\n* Fix - erroneous 3.5.1 release.\n\n= 3.5.1 - 2022-09-13 =\n* Maintenance on A\/S docs.\n* fix: PHP 8.2 deprecated notice.\n\n= 3.5.0 - 2022-08-25 =\n* Add - The active view link within the \"Tools > Scheduled Actions\" screen is now clickable.\n* Add - A warning when there are past-due actions.\n* Enhancement - Added the ability to schedule unique actions via an atomic operation.\n* Enhancement - Improvements to cache invalidation when processing batches (when running on WordPress 6.0+).\n* Enhancement - If a recurring action is found to be consistently failing, it will stop being rescheduled.\n* Enhancement - Adds a new \"Past Due\" view to the scheduled actions list table.\n\n= 3.4.2 - 2022-06-08 =\n* Fix - Change the include for better linting.\n* Fix - update: Added Action scheduler completed action hook.\n\n= 3.4.1 - 2022-05-24 =\n* Fix - Change the include for better linting.\n* Fix - Fix the documented return type.\n\n= 3.4.0 - 2021-10-29 =\n* Enhancement - Number of items per page can now be set for the Scheduled Actions view (props @ovidiul). #771\n* Fix - Do not lower the max_execution_time if it is already set to 0 (unlimited) (props @barryhughes). #755\n* Fix - Avoid triggering autoloaders during the version resolution process (props @olegabr). #731 & #776\n* Dev - ActionScheduler_wcSystemStatus PHPCS fixes (props @ovidiul). #761\n* Dev - ActionScheduler_DBLogger.php PHPCS fixes (props @ovidiul). #768\n* Dev - Fixed phpcs for ActionScheduler_Schedule_Deprecated (props @ovidiul). #762\n* Dev - Improve actions table indices (props @glagonikas). #774 & #777\n* Dev - PHPCS fixes for ActionScheduler_DBStore.php (props @ovidiul). #769 & #778\n* Dev - PHPCS Fixes for ActionScheduler_Abstract_ListTable (props @ovidiul). #763 & #779\n* Dev - Adds new filter action_scheduler_claim_actions_order_by to allow tuning of the claim query (props @glagonikas). #773\n* Dev - PHPCS fixes for ActionScheduler_WpPostStore class (props @ovidiul). #780\n\n= 3.3.0 - 2021-09-15 =\n* Enhancement - Adds as_has_scheduled_action() to provide a performant way to test for existing actions. #645\n* Fix - Improves compatibility with environments where NO_ZERO_DATE is enabled. #519\n* Fix - Adds safety checks to guard against errors when our database tables cannot be created. #645\n* Dev - Now supports queries that use multiple statuses. #649\n* Dev - Minimum requirements for WordPress and PHP bumped (to 5.2 and 5.6 respectively). #723\n\n= 3.2.1 - 2021-06-21 =\n* Fix - Add extra safety\/account for different versions of AS and different loading patterns. #714\n* Fix - Handle hidden columns (Tools \u2192 Scheduled Actions) | #600.\n\n= 3.2.0 - 2021-06-03 =\n* Fix - Add \"no ordering\" option to as_next_scheduled_action().\n* Fix - Add secondary scheduled date checks when claiming actions (DBStore) | #634.\n* Fix - Add secondary scheduled date checks when claiming actions (wpPostStore) | #634.\n* Fix - Adds a new index to the action table, reducing the potential for deadlocks (props: @glagonikas).\n* Fix - Fix unit tests infrastructure and adapt tests to PHP 8.\n* Fix - Identify in-use data store.\n* Fix - Improve test_migration_is_scheduled.\n* Fix - PHP notice on list table.\n* Fix - Speed up clean up and batch selects.\n* Fix - Update pending dependencies.\n* Fix - [PHP 8.0] Only pass action arg values through to do_action_ref_array().\n* Fix - [PHP 8] Set the PHP version to 7.1 in composer.json for PHP 8 compatibility.\n* Fix - add is_initialized() to docs.\n* Fix - fix file permissions.\n* Fix - fixes #664 by replacing __ with esc_html__.\n\n= 3.1.6 - 2020-05-12 =\n* Change log starts.\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/functions.php","ext":"php","size":19736,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * General API functions for scheduling actions\n *\n * @package ActionScheduler.\n *\/\n\n\/**\n * Enqueue an action to run one time, as soon as possible\n *\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_enqueue_async_action( $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing async\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the enqueued action ID (enqueued using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priority   Action priority.\n\t * @param bool     $unique     Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_enqueue_async_action', null, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'async',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Schedule an action to run one time\n *\n * @param int    $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_schedule_single_action( $timestamp, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing single\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param int      $timestamp  When the action will run.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priorities Action priority.\n\t * @param bool     $unique     Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_schedule_single_action', null, $timestamp, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'single',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Schedule a recurring action\n *\n * @param int    $timestamp When the first instance of the job will run.\n * @param int    $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t$interval = (int) $interval_in_seconds;\n\n\t\/\/ We expect an integer and allow it to be passed using float and string types, but otherwise\n\t\/\/ should reject unexpected values.\n\t\/\/ phpcs:ignore WordPress.PHP.StrictComparisons.LooseComparison\n\tif ( ! is_numeric( $interval_in_seconds ) || $interval_in_seconds != $interval ) {\n\t\t_doing_it_wrong(\n\t\t\t__METHOD__,\n\t\t\tsprintf(\n\t\t\t\t\/* translators: 1: provided value 2: provided type. *\/\n\t\t\t\tesc_html__( 'An integer was expected but \"%1$s\" (%2$s) was received.', 'action-scheduler' ),\n\t\t\t\tesc_html( $interval_in_seconds ),\n\t\t\t\tesc_html( gettype( $interval_in_seconds ) )\n\t\t\t),\n\t\t\t'3.6.0'\n\t\t);\n\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing recurring\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option          The value to return instead of the option value.\n\t * @param int      $timestamp           When the action will run.\n\t * @param int      $interval_in_seconds How long to wait between runs.\n\t * @param string   $hook                Action hook.\n\t * @param array    $args                Action arguments.\n\t * @param string   $group               Action group.\n\t * @param int      $priority            Action priority.\n\t * @param bool     $unique              Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_schedule_recurring_action', null, $timestamp, $interval_in_seconds, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'recurring',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'pattern'   => $interval_in_seconds,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int    $timestamp The first instance of the action will be scheduled\n *           to run at a time calculated after this timestamp matching the cron\n *           expression. This can be used to delay the first instance of the action.\n * @param string $schedule A cron-link schedule string.\n * @see http:\/\/en.wikipedia.org\/wiki\/Cron\n *   *    *    *    *    *    *\n *   \u252c    \u252c    \u252c    \u252c    \u252c    \u252c\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing cron\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param int      $timestamp  When the action will run.\n\t * @param string   $schedule   Cron-like schedule string.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priority   Action priority.\n\t * @param bool     $unique     Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_schedule_cron_action', null, $timestamp, $schedule, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'cron',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'pattern'   => $schedule,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Cancel the next occurrence of a scheduled action.\n *\n * While only the next instance of a recurring or cron action is unscheduled by this method, that will also prevent\n * all future instances of that recurring or cron action from being run. Recurring and cron actions are scheduled in\n * a sequence instead of all being scheduled at once. Each successive occurrence of a recurring action is scheduled\n * only after the former action is run. If the next instance is never run, because it's unscheduled by this function,\n * then the following instance will never be scheduled (or exist), which is effectively the same as being unscheduled\n * by this method also.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n *\n * @return int|null The scheduled action ID if a scheduled action was found, or null if no matching action found.\n *\/\nfunction as_unschedule_action( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => ActionScheduler_Store::STATUS_PENDING,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $params );\n\n\tif ( $action_id ) {\n\t\ttry {\n\t\t\tActionScheduler::store()->cancel_action( $action_id );\n\t\t} catch ( Exception $exception ) {\n\t\t\tActionScheduler::logger()->log(\n\t\t\t\t$action_id,\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: %1$s is the name of the hook to be cancelled, %2$s is the exception message. *\/\n\t\t\t\t\t__( 'Caught exception while cancelling action \"%1$s\": %2$s', 'action-scheduler' ),\n\t\t\t\t\t$hook,\n\t\t\t\t\t$exception->getMessage()\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$action_id = null;\n\t\t}\n\t}\n\n\treturn $action_id;\n}\n\n\/**\n * Cancel all occurrences of a scheduled action.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n *\/\nfunction as_unschedule_all_actions( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn;\n\t}\n\tif ( empty( $args ) ) {\n\t\tif ( ! empty( $hook ) && empty( $group ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_hook( $hook );\n\t\t\treturn;\n\t\t}\n\t\tif ( ! empty( $group ) && empty( $hook ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_group( $group );\n\t\t\treturn;\n\t\t}\n\t}\n\tdo {\n\t\t$unscheduled_action = as_unschedule_action( $hook, $args, $group );\n\t} while ( ! empty( $unscheduled_action ) );\n}\n\n\/**\n * Check if there is an existing action in the queue with a given hook, args and group combination.\n *\n * An action in the queue could be pending, in-progress or async. If the is pending for a time in\n * future, its scheduled date will be returned as a timestamp. If it is currently being run, or an\n * async action sitting in the queue waiting to be processed, in which case boolean true will be\n * returned. Or there may be no async, in-progress or pending action for this hook, in which case,\n * boolean false will be the return value.\n *\n * @param string $hook Name of the hook to search for.\n * @param array  $args Arguments of the action to be searched.\n * @param string $group Group of the action to be searched.\n *\n * @return int|bool The timestamp for the next occurrence of a pending scheduled action, true for an async or in-progress action or false if there is no matching action.\n *\/\nfunction as_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_RUNNING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( $action_id ) {\n\t\treturn true;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_PENDING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( null === $action_id ) {\n\t\treturn false;\n\t}\n\n\t$action         = ActionScheduler::store()->fetch_action( $action_id );\n\t$scheduled_date = $action->get_schedule()->get_date();\n\tif ( $scheduled_date ) {\n\t\treturn (int) $scheduled_date->format( 'U' );\n\t} elseif ( null === $scheduled_date ) { \/\/ pending async action with NullSchedule.\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\/**\n * Check if there is a scheduled action in the queue but more efficiently than as_next_scheduled_action().\n *\n * It's recommended to use this function when you need to know whether a specific action is currently scheduled\n * (pending or in-progress).\n *\n * @since 3.3.0\n *\n * @param string $hook  The hook of the action.\n * @param array  $args  Args that have been passed to the action. Null will matches any args.\n * @param string $group The group the job is assigned to.\n *\n * @return bool True if a matching action is pending or in-progress, false otherwise.\n *\/\nfunction as_has_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$query_args = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => array( ActionScheduler_Store::STATUS_RUNNING, ActionScheduler_Store::STATUS_PENDING ),\n\t\t'group'   => $group,\n\t\t'orderby' => 'none',\n\t);\n\n\tif ( null !== $args ) {\n\t\t$query_args['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $query_args );\n\n\treturn null !== $action_id;\n}\n\n\/**\n * Find scheduled actions\n *\n * @param array  $args Possible arguments, with their default values.\n *         'hook' => '' - the name of the action that will be triggered.\n *         'args' => NULL - the args array that will be passed with the action.\n *         'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *         'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='.\n *         'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *         'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='.\n *         'group' => '' - the group the action belongs to.\n *         'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING.\n *         'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID.\n *         'per_page' => 5 - Number of results to return.\n *         'offset' => 0.\n *         'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', 'date' or 'none'.\n *         'order' => 'ASC'.\n *\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @return array\n *\/\nfunction as_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn array();\n\t}\n\t$store = ActionScheduler::store();\n\tforeach ( array( 'date', 'modified' ) as $key ) {\n\t\tif ( isset( $args[ $key ] ) ) {\n\t\t\t$args[ $key ] = as_get_datetime_object( $args[ $key ] );\n\t\t}\n\t}\n\t$ids = $store->query_actions( $args );\n\n\tif ( 'ids' === $return_format || 'int' === $return_format ) {\n\t\treturn $ids;\n\t}\n\n\t$actions = array();\n\tforeach ( $ids as $action_id ) {\n\t\t$actions[ $action_id ] = $store->fetch_action( $action_id );\n\t}\n\n\tif ( ARRAY_A === $return_format ) {\n\t\tforeach ( $actions as $action_id => $action_object ) {\n\t\t\t$actions[ $action_id ] = get_object_vars( $action_object );\n\t\t}\n\t}\n\n\treturn $actions;\n}\n\n\/**\n * Helper function to create an instance of DateTime based on a given\n * string and timezone. By default, will return the current date\/time\n * in the UTC timezone.\n *\n * Needed because new DateTime() called without an explicit timezone\n * will create a date\/time in PHP's timezone, but we need to have\n * assurance that a date\/time uses the right timezone (which we almost\n * always want to be UTC), which means we need to always include the\n * timezone when instantiating datetimes rather than leaving it up to\n * the PHP default.\n *\n * @param mixed  $date_string A date\/time string. Valid formats are explained in http:\/\/php.net\/manual\/en\/datetime.formats.php.\n * @param string $timezone A timezone identifier, like UTC or Europe\/Lisbon. The list of valid identifiers is available http:\/\/php.net\/manual\/en\/timezones.php.\n *\n * @return ActionScheduler_DateTime\n *\/\nfunction as_get_datetime_object( $date_string = null, $timezone = 'UTC' ) {\n\tif ( is_object( $date_string ) && $date_string instanceof DateTime ) {\n\t\t$date = new ActionScheduler_DateTime( $date_string->format( 'Y-m-d H:i:s' ), new DateTimeZone( $timezone ) );\n\t} elseif ( is_numeric( $date_string ) ) {\n\t\t$date = new ActionScheduler_DateTime( '@' . $date_string, new DateTimeZone( $timezone ) );\n\t} else {\n\t\t$date = new ActionScheduler_DateTime( null === $date_string ? 'now' : $date_string, new DateTimeZone( $timezone ) );\n\t}\n\treturn $date;\n}\n\n\/**\n * Check if a specific feature is supported by the current version of Action Scheduler.\n *\n * @since 3.9.3\n *\n * @param string $feature The feature to check support for.\n *\n * @return bool True if the feature is supported, false otherwise.\n *\/\nfunction as_supports( string $feature ): bool {\n\t$supported_features = array( 'ensure_recurring_actions_hook' );\n\n\treturn in_array( $feature, $supported_features, true );\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/license.txt","ext":"txt","size":35149,"mtime":1756373567,"type":"text","content":"                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https:\/\/fsf.org\/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and\/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and\/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND\/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND\/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and\/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https:\/\/www.gnu.org\/licenses\/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https:\/\/www.gnu.org\/licenses\/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https:\/\/www.gnu.org\/licenses\/why-not-lgpl.html>.\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/action-scheduler.php","ext":"php","size":3023,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Plugin Name: Action Scheduler\n * Plugin URI: https:\/\/actionscheduler.org\n * Description: A robust scheduling library for use in WordPress plugins.\n * Author: Automattic\n * Author URI: https:\/\/automattic.com\/\n * Version: 3.9.3\n * License: GPLv3\n * Requires at least: 6.5\n * Tested up to: 6.8\n * Requires PHP: 7.2\n *\n * Copyright 2019 Automattic, Inc.  (https:\/\/automattic.com\/contact\/)\n *\n * This program is free software: you can redistribute it and\/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https:\/\/www.gnu.org\/licenses\/>.\n *\n * @package ActionScheduler\n *\/\n\nif ( ! function_exists( 'action_scheduler_register_3_dot_9_dot_3' ) && function_exists( 'add_action' ) ) { \/\/ WRCS: DEFINED_VERSION.\n\n\tif ( ! class_exists( 'ActionScheduler_Versions', false ) ) {\n\t\trequire_once __DIR__ . '\/classes\/ActionScheduler_Versions.php';\n\t\tadd_action( 'plugins_loaded', array( 'ActionScheduler_Versions', 'initialize_latest_version' ), 1, 0 );\n\t}\n\n\tadd_action( 'plugins_loaded', 'action_scheduler_register_3_dot_9_dot_3', 0, 0 ); \/\/ WRCS: DEFINED_VERSION.\n\n\t\/\/ phpcs:disable Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace\n\t\/**\n\t * Registers this version of Action Scheduler.\n\t *\/\n\tfunction action_scheduler_register_3_dot_9_dot_3() { \/\/ WRCS: DEFINED_VERSION.\n\t\t$versions = ActionScheduler_Versions::instance();\n\t\t$versions->register( '3.9.3', 'action_scheduler_initialize_3_dot_9_dot_3' ); \/\/ WRCS: DEFINED_VERSION.\n\t}\n\n\t\/\/ phpcs:disable Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace\n\t\/**\n\t * Initializes this version of Action Scheduler.\n\t *\/\n\tfunction action_scheduler_initialize_3_dot_9_dot_3() { \/\/ WRCS: DEFINED_VERSION.\n\t\t\/\/ A final safety check is required even here, because historic versions of Action Scheduler\n\t\t\/\/ followed a different pattern (in some unusual cases, we could reach this point and the\n\t\t\/\/ ActionScheduler class is already defined\u2014so we need to guard against that).\n\t\tif ( ! class_exists( 'ActionScheduler', false ) ) {\n\t\t\trequire_once __DIR__ . '\/classes\/abstracts\/ActionScheduler.php';\n\t\t\tActionScheduler::init( __FILE__ );\n\t\t}\n\t}\n\n\t\/\/ Support usage in themes - load this version if no plugin has loaded a version yet.\n\tif ( did_action( 'plugins_loaded' ) && ! doing_action( 'plugins_loaded' ) && ! class_exists( 'ActionScheduler', false ) ) {\n\t\taction_scheduler_initialize_3_dot_9_dot_3(); \/\/ WRCS: DEFINED_VERSION.\n\t\tdo_action( 'action_scheduler_pre_theme_init' );\n\t\tActionScheduler_Versions::initialize_latest_version();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_Schedule_Deprecated.php","ext":"php","size":832,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Abstract_Schedule\n *\/\nabstract class ActionScheduler_Schedule_Deprecated implements ActionScheduler_Schedule {\n\n\t\/**\n\t * Get the date & time this schedule was created to run, or calculate when it should be run\n\t * after a given date & time.\n\t *\n\t * @param DateTime $after DateTime to calculate against.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function next( ?DateTime $after = null ) {\n\t\tif ( empty( $after ) ) {\n\t\t\t$return_value       = $this->get_date();\n\t\t\t$replacement_method = 'get_date()';\n\t\t} else {\n\t\t\t$return_value       = $this->get_next( $after );\n\t\t\t$replacement_method = 'get_next( $after )';\n\t\t}\n\n\t\t_deprecated_function( __METHOD__, '3.0.0', __CLASS__ . '::' . $replacement_method ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\n\t\treturn $return_value;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/deprecated\/functions.php","ext":"php","size":5273,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Deprecated API functions for scheduling actions\n *\n * Functions with the wc prefix were deprecated to avoid confusion with\n * Action Scheduler being included in WooCommerce core, and it providing\n * a different set of APIs for working with the action queue.\n *\n * @package ActionScheduler\n *\/\n\n\/**\n * Schedule an action to run one time.\n *\n * @param int    $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @return string The job ID\n *\/\nfunction wc_schedule_single_action( $timestamp, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_single_action()' );\n\treturn as_schedule_single_action( $timestamp, $hook, $args, $group );\n}\n\n\/**\n * Schedule a recurring action.\n *\n * @param int    $timestamp When the first instance of the job will run.\n * @param int    $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @deprecated 2.1.0\n *\n * @return string The job ID\n *\/\nfunction wc_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_recurring_action()' );\n\treturn as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args, $group );\n}\n\n\/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int    $timestamp The schedule will start on or after this time.\n * @param string $schedule A cron-link schedule string.\n * @see http:\/\/en.wikipedia.org\/wiki\/Cron\n *   *    *    *    *    *    *\n *   \u252c    \u252c    \u252c    \u252c    \u252c    \u252c\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @deprecated 2.1.0\n *\n * @return string The job ID\n *\/\nfunction wc_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_cron_action()' );\n\treturn as_schedule_cron_action( $timestamp, $schedule, $hook, $args, $group );\n}\n\n\/**\n * Cancel the next occurrence of a job.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group Action's group.\n *\n * @deprecated 2.1.0\n *\/\nfunction wc_unschedule_action( $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_unschedule_action()' );\n\tas_unschedule_action( $hook, $args, $group );\n}\n\n\/**\n * Get next scheduled action.\n *\n * @param string $hook Action's hook.\n * @param array  $args Action's args.\n * @param string $group Action's group.\n *\n * @deprecated 2.1.0\n *\n * @return int|bool The timestamp for the next occurrence, or false if nothing was found\n *\/\nfunction wc_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_next_scheduled_action()' );\n\treturn as_next_scheduled_action( $hook, $args, $group );\n}\n\n\/**\n * Find scheduled actions\n *\n * @param array  $args Possible arguments, with their default values:\n *        'hook' => '' - the name of the action that will be triggered\n *        'args' => NULL - the args array that will be passed with the action\n *        'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'group' => '' - the group the action belongs to\n *        'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING\n *        'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID\n *        'per_page' => 5 - Number of results to return\n *        'offset' => 0\n *        'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', or 'date'\n *        'order' => 'ASC'.\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @deprecated 2.1.0\n *\n * @return array\n *\/\nfunction wc_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_get_scheduled_actions()' );\n\treturn as_get_scheduled_actions( $args, $return_format );\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_AdminView_Deprecated.php","ext":"php","size":5466,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_AdminView_Deprecated\n *\n * Store deprecated public functions previously found in the ActionScheduler_AdminView class.\n * Keeps them out of the way of the main class.\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_AdminView_Deprecated {\n\n\t\/**\n\t * Adjust parameters for custom post type.\n\t *\n\t * @param array $args Args.\n\t *\/\n\tpublic function action_scheduler_post_type_args( $args ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Customise the post status related views displayed on the Scheduled Actions administration screen.\n\t *\n\t * @param array $views An associative array of views and view labels which can be used to filter the 'scheduled-action' posts displayed on the Scheduled Actions administration screen.\n\t * @return array $views An associative array of views and view labels which can be used to filter the 'scheduled-action' posts displayed on the Scheduled Actions administration screen.\n\t *\/\n\tpublic function list_table_views( $views ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $views;\n\t}\n\n\t\/**\n\t * Do not include the \"Edit\" action for the Scheduled Actions administration screen.\n\t *\n\t * Hooked to the 'bulk_actions-edit-action-scheduler' filter.\n\t *\n\t * @param array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t * @return array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t *\/\n\tpublic function bulk_actions( $actions ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Completely customer the columns displayed on the Scheduled Actions administration screen.\n\t *\n\t * Because we can't filter the content of the default title and date columns, we need to recreate our own\n\t * custom columns for displaying those post fields. For the column content, @see self::list_table_column_content().\n\t *\n\t * @param array $columns An associative array of columns that are use for the table on the Scheduled Actions administration screen.\n\t * @return array $columns An associative array of columns that are use for the table on the Scheduled Actions administration screen.\n\t *\/\n\tpublic function list_table_columns( $columns ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Make our custom title & date columns use defaulting title & date sorting.\n\t *\n\t * @param array $columns An associative array of columns that can be used to sort the table on the Scheduled Actions administration screen.\n\t * @return array $columns An associative array of columns that can be used to sort the table on the Scheduled Actions administration screen.\n\t *\/\n\tpublic static function list_table_sortable_columns( $columns ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Print the content for our custom columns.\n\t *\n\t * @param string $column_name The key for the column for which we should output our content.\n\t * @param int    $post_id The ID of the 'scheduled-action' post for which this row relates.\n\t *\/\n\tpublic static function list_table_column_content( $column_name, $post_id ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Hide the inline \"Edit\" action for all 'scheduled-action' posts.\n\t *\n\t * Hooked to the 'post_row_actions' filter.\n\t *\n\t * @param array   $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t * @param WP_Post $post The 'scheduled-action' post object.\n\t * @return array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t *\/\n\tpublic static function row_actions( $actions, $post ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Run an action when triggered from the Action Scheduler administration screen.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function maybe_execute_action() {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Convert an interval of seconds into a two part human friendly string.\n\t *\n\t * The WordPress human_time_diff() function only calculates the time difference to one degree, meaning\n\t * even if an action is 1 day and 11 hours away, it will display \"1 day\". This function goes one step\n\t * further to display two degrees of accuracy.\n\t *\n\t * Based on Crontrol::interval() function by Edward Dale: https:\/\/wordpress.org\/plugins\/wp-crontrol\/\n\t *\n\t * @return void\n\t *\/\n\tpublic static function admin_notices() {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Filter search queries to allow searching by Claim ID (i.e. post_password).\n\t *\n\t * @param string   $orderby MySQL orderby string.\n\t * @param WP_Query $query Instance of a WP_Query object.\n\t * @return void\n\t *\/\n\tpublic function custom_orderby( $orderby, $query ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Filter search queries to allow searching by Claim ID (i.e. post_password).\n\t *\n\t * @param string   $search MySQL search string.\n\t * @param WP_Query $query Instance of a WP_Query object.\n\t * @return void\n\t *\/\n\tpublic function search_post_password( $search, $query ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Change messages when a scheduled action is updated.\n\t *\n\t * @param  array $messages Messages.\n\t * @return array\n\t *\/\n\tpublic function post_updated_messages( $messages ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $messages;\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_Abstract_QueueRunner_Deprecated.php","ext":"php","size":852,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Abstract class with common Queue Cleaner functionality.\n *\/\nabstract class ActionScheduler_Abstract_QueueRunner_Deprecated {\n\n\t\/**\n\t * Get the maximum number of seconds a batch can run for.\n\t *\n\t * @deprecated 2.1.1\n\t * @return int The number of seconds.\n\t *\/\n\tprotected function get_maximum_execution_time() {\n\t\t_deprecated_function( __METHOD__, '2.1.1', 'ActionScheduler_Abstract_QueueRunner::get_time_limit()' );\n\n\t\t$maximum_execution_time = 30;\n\n\t\t\/\/ Apply deprecated filter.\n\t\tif ( has_filter( 'action_scheduler_maximum_execution_time' ) ) {\n\t\t\t_deprecated_function( 'action_scheduler_maximum_execution_time', '2.1.1', 'action_scheduler_queue_runner_time_limit' );\n\t\t\t$maximum_execution_time = apply_filters( 'action_scheduler_maximum_execution_time', $maximum_execution_time );\n\t\t}\n\n\t\treturn absint( $maximum_execution_time );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_Store_Deprecated.php","ext":"php","size":1059,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Store_Deprecated\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler_Store_Deprecated {\n\n\t\/**\n\t * Mark an action that failed to fetch correctly as failed.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param int $action_id The ID of the action.\n\t *\/\n\tpublic function mark_failed_fetch_action( $action_id ) {\n\t\t_deprecated_function( __METHOD__, '3.0.0', 'ActionScheduler_Store::mark_failure()' );\n\t\tself::$store->mark_failure( $action_id );\n\t}\n\n\t\/**\n\t * Add base hooks\n\t *\n\t * @since 2.2.6\n\t *\/\n\tprotected static function hook() {\n\t\t_deprecated_function( __METHOD__, '3.0.0' );\n\t}\n\n\t\/**\n\t * Remove base hooks\n\t *\n\t * @since 2.2.6\n\t *\/\n\tprotected static function unhook() {\n\t\t_deprecated_function( __METHOD__, '3.0.0' );\n\t}\n\n\t\/**\n\t * Get the site's local time.\n\t *\n\t * @deprecated 2.1.0\n\t * @return DateTimeZone\n\t *\/\n\tprotected function get_local_timezone() {\n\t\t_deprecated_function( __FUNCTION__, '2.1.0', 'ActionScheduler_TimezoneHelper::set_local_timezone()' );\n\t\treturn ActionScheduler_TimezoneHelper::get_local_timezone();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/readme.txt","ext":"txt","size":12314,"mtime":1756373567,"type":"text","content":"=== Action Scheduler ===\nContributors: Automattic, wpmuguru, claudiosanches, peterfabian1000, vedjain, jamosova, obliviousharmony, konamiman, sadowski, royho, barryhughes-1\nTags: scheduler, cron\nStable tag: 3.9.3\nLicense: GPLv3\nRequires at least: 6.5\nTested up to: 6.8\nRequires PHP: 7.2\n\nAction Scheduler - Job Queue for WordPress\n\n== Description ==\n\nAction Scheduler is a scalable, traceable job queue for background processing large sets of actions in WordPress. It's specially designed to be distributed in WordPress plugins.\n\nAction Scheduler works by triggering an action hook to run at some time in the future. Each hook can be scheduled with unique data, to allow callbacks to perform operations on that data. The hook can also be scheduled to run on one or more occasions.\n\nThink of it like an extension to `do_action()` which adds the ability to delay and repeat a hook.\n\n## Battle-Tested Background Processing\n\nEvery month, Action Scheduler processes millions of payments for [Subscriptions](https:\/\/woocommerce.com\/products\/woocommerce-subscriptions\/), webhooks for [WooCommerce](https:\/\/wordpress.org\/plugins\/woocommerce\/), as well as emails and other events for a range of other plugins.\n\nIt's been seen on live sites processing queues in excess of 50,000 jobs and doing resource intensive operations, like processing payments and creating orders, at a sustained rate of over 10,000 \/ hour without negatively impacting normal site operations.\n\nThis is all on infrastructure and WordPress sites outside the control of the plugin author.\n\nIf your plugin needs background processing, especially of large sets of tasks, Action Scheduler can help.\n\n## Learn More\n\nTo learn more about how Action Scheduler works, and how to use it in your plugin, check out the docs on [ActionScheduler.org](https:\/\/actionscheduler.org).\n\nThere you will find:\n\n* [Usage guide](https:\/\/actionscheduler.org\/usage\/): instructions on installing and using Action Scheduler\n* [WP CLI guide](https:\/\/actionscheduler.org\/wp-cli\/): instructions on running Action Scheduler at scale via WP CLI\n* [API Reference](https:\/\/actionscheduler.org\/api\/): complete reference guide for all API functions\n* [Administration Guide](https:\/\/actionscheduler.org\/admin\/): guide to managing scheduled actions via the administration screen\n* [Guide to Background Processing at Scale](https:\/\/actionscheduler.org\/perf\/): instructions for running Action Scheduler at scale via the default WP Cron queue runner\n\n## Credits\n\nAction Scheduler is developed and maintained by [Automattic](http:\/\/automattic.com\/) with significant early development completed by [Flightless](https:\/\/flightless.us\/).\n\nCollaboration is cool. We'd love to work with you to improve Action Scheduler. [Pull Requests](https:\/\/github.com\/woocommerce\/action-scheduler\/pulls) welcome.\n\n== Changelog ==\n\n= 3.9.3 - 2025-07-15 =\n* Add hook 'action_scheduler_ensure_recurring_actions' specifically for scheduling recurring actions.\n* Assume an action is valid until proven otherwise.\n* Implement SKIP LOCKED during action claiming.\n* Import `get_flag_value()` from `WP_CLI\\Utils` before using.\n* Make `$unique` available to all pre-creation\/short-circuit hooks.\n* Make version\/source information available via new class.\n* Only release claims on pending actions.\n* Tweak - WP 6.8 compatibility.\n* Update minimum supported php and phpunit versions.\n* Update readme.txt.\n* WP CLI get action command: correct parentheses\/nesting of conditional checks.\n\n= 3.9.2 - 2025-02-03 =\n* Fixed fatal errors by moving version info methods to a new class and deprecating conflicting ones in ActionScheduler_Versions\n\n= 3.9.1 - 2025-01-21 =\n* A number of new WP CLI commands have been added, making it easier to manage actions in the terminal and from scripts.\n* New wp action-scheduler source command to help determine how Action Scheduler is being loaded.\n* Additional information about the active instance of Action Scheduler is now available in the Help pull-down drawer.\n* Make some other nullable parameters explicitly nullable.\n* Set option value to `no` rather than deleting.\n\n= 3.9.0 - 2024-11-14 =  \n* Minimum required version of PHP is now 7.1.  \n* Performance improvements for the `as_pending_actions_due()` function.  \n* Existing filter hook `action_scheduler_claim_actions_order_by` enhanced to provide callbacks with additional information.  \n* Improved compatibility with PHP 8.4, specifically by making implicitly nullable parameters explicitly nullable.  \n* A large number of coding standards-enhancements, to help reduce friction when submitting plugins to marketplaces and plugin directories. Special props @crstauf for this effort.  \n* Minor documentation tweaks and improvements.\n\n= 3.8.2 - 2024-09-12 =\n* Add missing parameter to the `pre_as_enqueue_async_action` hook.\n* Bump minimum PHP version to 7.0.\n* Bump minimum WordPress version to 6.4.\n* Make the batch size adjustable during processing.\n\n= 3.8.1 - 2024-06-20 =\n* Fix typos.\n* Improve the messaging in our unidentified action exceptions.\n\n= 3.8.0 - 2024-05-22 =\n* Documentation - Fixed typos in perf.md.\n* Update - We now require WordPress 6.3 or higher.\n* Update - We now require PHP 7.0 or higher.\n\n= 3.7.4 - 2024-04-05 =\n* Give a clear description of how the $unique parameter works.\n* Preserve the tab field if set.\n* Tweak - WP 6.5 compatibility.\n\n= 3.7.3 - 2024-03-20 =\n* Do not iterate over all of GET when building form in list table.\n* Fix a few issues reported by PCP (Plugin Check Plugin).\n* Try to save actions as unique even when the store doesn't support it.\n* Tweak - WP 6.4 compatibility.\n* Update \"Tested up to\" tag to WordPress 6.5.\n* update version in package-lock.json.\n\n= 3.7.2 - 2024-02-14 =\n* No longer user variables in `_n()` translation function.\n\n= 3.7.1 - 2023-12-13 =\n* update semver to 5.7.2 because of a security vulnerability in 5.7.1.\n\n= 3.7.0 - 2023-11-20 =\n* Important: starting with this release, Action Scheduler follows an L-2 version policy (WordPress, and consequently PHP).\n* Add extended indexes for hook_status_scheduled_date_gmt and status_scheduled_date_gmt.\n* Catch and log exceptions thrown when actions can't be created, e.g. under a corrupt database schema.\n* Tweak - WP 6.4 compatibility.\n* Update unit tests for upcoming dependency version policy.\n* make sure hook action_scheduler_failed_execution can access original exception object.\n* mention dependency version policy in usage.md.\n\n= 3.6.4 - 2023-10-11 =\n* Performance improvements when bulk cancelling actions.\n* Dev-related fixes.\n\n= 3.6.3 - 2023-09-13 =\n* Use `_doing_it_wrong` in initialization check.\n\n= 3.6.2 - 2023-08-09 =\n* Add guidance about passing arguments.\n* Atomic option locking.\n* Improve bulk delete handling.\n* Include database error in the exception message.\n* Tweak - WP 6.3 compatibility.\n\n= 3.6.1 - 2023-06-14 =\n* Document new optional `$priority` arg for various API functions.\n* Document the new `--exclude-groups` WP CLI option.\n* Document the new `action_scheduler_init` hook.\n* Ensure actions within each claim are executed in the expected order.\n* Fix incorrect text domain.\n* Remove SHOW TABLES usage when checking if tables exist.\n\n= 3.6.0 - 2023-05-10 =\n* Add $unique parameter to function signatures.\n* Add a cast-to-int for extra safety before forming new DateTime object.\n* Add a hook allowing exceptions for consistently failing recurring actions.\n* Add action priorities.\n* Add init hook.\n* Always raise the time limit.\n* Bump minimatch from 3.0.4 to 3.0.8.\n* Bump yaml from 2.2.1 to 2.2.2.\n* Defensive coding relating to gaps in declared schedule types.\n* Do not process an action if it cannot be set to `in-progress`.\n* Filter view labels (status names) should be translatable | #919.\n* Fix WPCLI progress messages.\n* Improve data-store initialization flow.\n* Improve error handling across all supported PHP versions.\n* Improve logic for flushing the runtime cache.\n* Support exclusion of multiple groups.\n* Update lint-staged and Node\/NPM requirements.\n* add CLI clean command.\n* add CLI exclude-group filter.\n* exclude past-due from list table all filter count.\n* throwing an exception if as_schedule_recurring_action interval param is not of type integer.\n\n= 3.5.4 - 2023-01-17 =\n* Add pre filters during action registration.\n* Async scheduling.\n* Calculate timeouts based on total actions.\n* Correctly order the parameters for `ActionScheduler_ActionFactory`'s calls to `single_unique`.\n* Fetch action in memory first before releasing claim to avoid deadlock.\n* PHP 8.2: declare property to fix creation of dynamic property warning.\n* PHP 8.2: fix \"Using ${var} in strings is deprecated, use {$var} instead\".\n* Prevent `undefined variable` warning for `$num_pastdue_actions`.\n\n= 3.5.3 - 2022-11-09 =\n* Query actions with partial match.\n\n= 3.5.2 - 2022-09-16 =\n* Fix - erroneous 3.5.1 release.\n\n= 3.5.1 - 2022-09-13 =\n* Maintenance on A\/S docs.\n* fix: PHP 8.2 deprecated notice.\n\n= 3.5.0 - 2022-08-25 =\n* Add - The active view link within the \"Tools > Scheduled Actions\" screen is now clickable.\n* Add - A warning when there are past-due actions.\n* Enhancement - Added the ability to schedule unique actions via an atomic operation.\n* Enhancement - Improvements to cache invalidation when processing batches (when running on WordPress 6.0+).\n* Enhancement - If a recurring action is found to be consistently failing, it will stop being rescheduled.\n* Enhancement - Adds a new \"Past Due\" view to the scheduled actions list table.\n\n= 3.4.2 - 2022-06-08 =\n* Fix - Change the include for better linting.\n* Fix - update: Added Action scheduler completed action hook.\n\n= 3.4.1 - 2022-05-24 =\n* Fix - Change the include for better linting.\n* Fix - Fix the documented return type.\n\n= 3.4.0 - 2021-10-29 =\n* Enhancement - Number of items per page can now be set for the Scheduled Actions view (props @ovidiul). #771\n* Fix - Do not lower the max_execution_time if it is already set to 0 (unlimited) (props @barryhughes). #755\n* Fix - Avoid triggering autoloaders during the version resolution process (props @olegabr). #731 & #776\n* Dev - ActionScheduler_wcSystemStatus PHPCS fixes (props @ovidiul). #761\n* Dev - ActionScheduler_DBLogger.php PHPCS fixes (props @ovidiul). #768\n* Dev - Fixed phpcs for ActionScheduler_Schedule_Deprecated (props @ovidiul). #762\n* Dev - Improve actions table indices (props @glagonikas). #774 & #777\n* Dev - PHPCS fixes for ActionScheduler_DBStore.php (props @ovidiul). #769 & #778\n* Dev - PHPCS Fixes for ActionScheduler_Abstract_ListTable (props @ovidiul). #763 & #779\n* Dev - Adds new filter action_scheduler_claim_actions_order_by to allow tuning of the claim query (props @glagonikas). #773\n* Dev - PHPCS fixes for ActionScheduler_WpPostStore class (props @ovidiul). #780\n\n= 3.3.0 - 2021-09-15 =\n* Enhancement - Adds as_has_scheduled_action() to provide a performant way to test for existing actions. #645\n* Fix - Improves compatibility with environments where NO_ZERO_DATE is enabled. #519\n* Fix - Adds safety checks to guard against errors when our database tables cannot be created. #645\n* Dev - Now supports queries that use multiple statuses. #649\n* Dev - Minimum requirements for WordPress and PHP bumped (to 5.2 and 5.6 respectively). #723\n\n= 3.2.1 - 2021-06-21 =\n* Fix - Add extra safety\/account for different versions of AS and different loading patterns. #714\n* Fix - Handle hidden columns (Tools \u2192 Scheduled Actions) | #600.\n\n= 3.2.0 - 2021-06-03 =\n* Fix - Add \"no ordering\" option to as_next_scheduled_action().\n* Fix - Add secondary scheduled date checks when claiming actions (DBStore) | #634.\n* Fix - Add secondary scheduled date checks when claiming actions (wpPostStore) | #634.\n* Fix - Adds a new index to the action table, reducing the potential for deadlocks (props: @glagonikas).\n* Fix - Fix unit tests infrastructure and adapt tests to PHP 8.\n* Fix - Identify in-use data store.\n* Fix - Improve test_migration_is_scheduled.\n* Fix - PHP notice on list table.\n* Fix - Speed up clean up and batch selects.\n* Fix - Update pending dependencies.\n* Fix - [PHP 8.0] Only pass action arg values through to do_action_ref_array().\n* Fix - [PHP 8] Set the PHP version to 7.1 in composer.json for PHP 8 compatibility.\n* Fix - add is_initialized() to docs.\n* Fix - fix file permissions.\n* Fix - fixes #664 by replacing __ with esc_html__.\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_ActionClaim.php","ext":"php","size":652,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_ActionClaim\n *\/\nclass ActionScheduler_ActionClaim {\n\t\/**\n\t * Claim ID.\n\t *\n\t * @var string\n\t *\/\n\tprivate $id = '';\n\n\t\/**\n\t * Claimed action IDs.\n\t *\n\t * @var int[]\n\t *\/\n\tprivate $action_ids = array();\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string $id Claim ID.\n\t * @param int[]  $action_ids Action IDs.\n\t *\/\n\tpublic function __construct( $id, array $action_ids ) {\n\t\t$this->id         = $id;\n\t\t$this->action_ids = $action_ids;\n\t}\n\n\t\/**\n\t * Get claim ID.\n\t *\/\n\tpublic function get_id() {\n\t\treturn $this->id;\n\t}\n\n\t\/**\n\t * Get IDs of claimed actions.\n\t *\/\n\tpublic function get_actions() {\n\t\treturn $this->action_ids;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_LogEntry.php","ext":"php","size":1942,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_LogEntry\n *\/\nclass ActionScheduler_LogEntry {\n\n\t\/**\n\t * Action's ID for log entry.\n\t *\n\t * @var int $action_id\n\t *\/\n\tprotected $action_id = '';\n\n\t\/**\n\t * Log entry's message.\n\t *\n\t * @var string $message\n\t *\/\n\tprotected $message = '';\n\n\t\/**\n\t * Log entry's date.\n\t *\n\t * @var Datetime $date\n\t *\/\n\tprotected $date;\n\n\t\/**\n\t * Constructor\n\t *\n\t * @param mixed    $action_id Action ID.\n\t * @param string   $message   Message.\n\t * @param Datetime $date      Datetime object with the time when this log entry was created. If this parameter is\n\t *                            not provided a new Datetime object (with current time) will be created.\n\t *\/\n\tpublic function __construct( $action_id, $message, $date = null ) {\n\t\t\/*\n\t\t * ActionScheduler_wpCommentLogger::get_entry() previously passed a 3rd param of $comment->comment_type\n\t\t * to ActionScheduler_LogEntry::__construct(), goodness knows why, and the Follow-up Emails plugin\n\t\t * hard-codes loading its own version of ActionScheduler_wpCommentLogger with that out-dated method,\n\t\t * goodness knows why, so we need to guard against that here instead of using a DateTime type declaration\n\t\t * for the constructor's 3rd param of $date and causing a fatal error with older versions of FUE.\n\t\t *\/\n\t\tif ( null !== $date && ! is_a( $date, 'DateTime' ) ) {\n\t\t\t_doing_it_wrong( __METHOD__, 'The third parameter must be a valid DateTime instance, or null.', '2.0.0' );\n\t\t\t$date = null;\n\t\t}\n\n\t\t$this->action_id = $action_id;\n\t\t$this->message   = $message;\n\t\t$this->date      = $date ? $date : new Datetime();\n\t}\n\n\t\/**\n\t * Returns the date when this log entry was created\n\t *\n\t * @return Datetime\n\t *\/\n\tpublic function get_date() {\n\t\treturn $this->date;\n\t}\n\n\t\/**\n\t * Get action ID of log entry.\n\t *\/\n\tpublic function get_action_id() {\n\t\treturn $this->action_id;\n\t}\n\n\t\/**\n\t * Get log entry message.\n\t *\/\n\tpublic function get_message() {\n\t\treturn $this->message;\n\t}\n}\n\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_NullLogEntry.php","ext":"php","size":330,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_NullLogEntry\n *\/\nclass ActionScheduler_NullLogEntry extends ActionScheduler_LogEntry {\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string $action_id Action ID.\n\t * @param string $message   Log entry.\n\t *\/\n\tpublic function __construct( $action_id = '', $message = '' ) {\n\t\t\/\/ nothing to see here.\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_DataController.php","ext":"php","size":5769,"mtime":1756373567,"type":"text","content":"<?php\n\nuse Action_Scheduler\\Migration\\Controller;\n\n\/**\n * Class ActionScheduler_DataController\n *\n * The main plugin\/initialization class for the data stores.\n *\n * Responsible for hooking everything up with WordPress.\n *\n * @package Action_Scheduler\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_DataController {\n\t\/** Action data store class name. *\/\n\tconst DATASTORE_CLASS = 'ActionScheduler_DBStore';\n\n\t\/** Logger data store class name. *\/\n\tconst LOGGER_CLASS = 'ActionScheduler_DBLogger';\n\n\t\/** Migration status option name. *\/\n\tconst STATUS_FLAG = 'action_scheduler_migration_status';\n\n\t\/** Migration status option value. *\/\n\tconst STATUS_COMPLETE = 'complete';\n\n\t\/** Migration minimum required PHP version. *\/\n\tconst MIN_PHP_VERSION = '5.5';\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var ActionScheduler_DataController\n\t *\/\n\tprivate static $instance;\n\n\t\/**\n\t * Sleep time in seconds.\n\t *\n\t * @var int\n\t *\/\n\tprivate static $sleep_time = 0;\n\n\t\/**\n\t * Tick count required for freeing memory.\n\t *\n\t * @var int\n\t *\/\n\tprivate static $free_ticks = 50;\n\n\t\/**\n\t * Get a flag indicating whether the migration environment dependencies are met.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function dependencies_met() {\n\t\t$php_support = version_compare( PHP_VERSION, self::MIN_PHP_VERSION, '>=' );\n\t\treturn $php_support && apply_filters( 'action_scheduler_migration_dependencies_met', true );\n\t}\n\n\t\/**\n\t * Get a flag indicating whether the migration is complete.\n\t *\n\t * @return bool Whether the flag has been set marking the migration as complete\n\t *\/\n\tpublic static function is_migration_complete() {\n\t\treturn get_option( self::STATUS_FLAG ) === self::STATUS_COMPLETE;\n\t}\n\n\t\/**\n\t * Mark the migration as complete.\n\t *\/\n\tpublic static function mark_migration_complete() {\n\t\tupdate_option( self::STATUS_FLAG, self::STATUS_COMPLETE );\n\t}\n\n\t\/**\n\t * Unmark migration when a plugin is de-activated. Will not work in case of silent activation, for example in an update.\n\t * We do this to mitigate the bug of lost actions which happens if there was an AS 2.x to AS 3.x migration in the past, but that plugin is now\n\t * deactivated and the site was running on AS 2.x again.\n\t *\/\n\tpublic static function mark_migration_incomplete() {\n\t\tdelete_option( self::STATUS_FLAG );\n\t}\n\n\t\/**\n\t * Set the action store class name.\n\t *\n\t * @param string $class Classname of the store class.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function set_store_class( $class ) {\n\t\treturn self::DATASTORE_CLASS;\n\t}\n\n\t\/**\n\t * Set the action logger class name.\n\t *\n\t * @param string $class Classname of the logger class.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function set_logger_class( $class ) {\n\t\treturn self::LOGGER_CLASS;\n\t}\n\n\t\/**\n\t * Set the sleep time in seconds.\n\t *\n\t * @param integer $sleep_time The number of seconds to pause before resuming operation.\n\t *\/\n\tpublic static function set_sleep_time( $sleep_time ) {\n\t\tself::$sleep_time = (int) $sleep_time;\n\t}\n\n\t\/**\n\t * Set the tick count required for freeing memory.\n\t *\n\t * @param integer $free_ticks The number of ticks to free memory on.\n\t *\/\n\tpublic static function set_free_ticks( $free_ticks ) {\n\t\tself::$free_ticks = (int) $free_ticks;\n\t}\n\n\t\/**\n\t * Free memory if conditions are met.\n\t *\n\t * @param int $ticks Current tick count.\n\t *\/\n\tpublic static function maybe_free_memory( $ticks ) {\n\t\tif ( self::$free_ticks && 0 === $ticks % self::$free_ticks ) {\n\t\t\tself::free_memory();\n\t\t}\n\t}\n\n\t\/**\n\t * Reduce memory footprint by clearing the database query and object caches.\n\t *\/\n\tpublic static function free_memory() {\n\t\tif ( 0 < self::$sleep_time ) {\n\t\t\t\/* translators: %d: amount of time *\/\n\t\t\t\\WP_CLI::warning( sprintf( _n( 'Stopped the insanity for %d second', 'Stopped the insanity for %d seconds', self::$sleep_time, 'action-scheduler' ), self::$sleep_time ) );\n\t\t\tsleep( self::$sleep_time );\n\t\t}\n\n\t\t\\WP_CLI::warning( __( 'Attempting to reduce used memory...', 'action-scheduler' ) );\n\n\t\t\/**\n\t\t * Globals.\n\t\t *\n\t\t * @var $wpdb            \\wpdb\n\t\t * @var $wp_object_cache \\WP_Object_Cache\n\t\t *\/\n\t\tglobal $wpdb, $wp_object_cache;\n\n\t\t$wpdb->queries = array();\n\n\t\tif ( ! is_a( $wp_object_cache, 'WP_Object_Cache' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Not all drop-ins support these props, however, there may be existing installations that rely on these being cleared.\n\t\tif ( property_exists( $wp_object_cache, 'group_ops' ) ) {\n\t\t\t$wp_object_cache->group_ops = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'stats' ) ) {\n\t\t\t$wp_object_cache->stats = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'memcache_debug' ) ) {\n\t\t\t$wp_object_cache->memcache_debug = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'cache' ) ) {\n\t\t\t$wp_object_cache->cache = array();\n\t\t}\n\n\t\tif ( is_callable( array( $wp_object_cache, '__remoteset' ) ) ) {\n\t\t\tcall_user_func( array( $wp_object_cache, '__remoteset' ) ); \/\/ important!\n\t\t}\n\t}\n\n\t\/**\n\t * Connect to table datastores if migration is complete.\n\t * Otherwise, proceed with the migration if the dependencies have been met.\n\t *\/\n\tpublic static function init() {\n\t\tif ( self::is_migration_complete() ) {\n\t\t\tadd_filter( 'action_scheduler_store_class', array( 'ActionScheduler_DataController', 'set_store_class' ), 100 );\n\t\t\tadd_filter( 'action_scheduler_logger_class', array( 'ActionScheduler_DataController', 'set_logger_class' ), 100 );\n\t\t\tadd_action( 'deactivate_plugin', array( 'ActionScheduler_DataController', 'mark_migration_incomplete' ) );\n\t\t} elseif ( self::dependencies_met() ) {\n\t\t\tController::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler\/progress_tick', array( 'ActionScheduler_DataController', 'maybe_free_memory' ) );\n\t}\n\n\t\/**\n\t * Singleton factory.\n\t *\/\n\tpublic static function instance() {\n\t\tif ( ! isset( self::$instance ) ) {\n\t\t\tself::$instance = new static();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_ActionFactory.php","ext":"php","size":16303,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_ActionFactory\n *\/\nclass ActionScheduler_ActionFactory {\n\n\t\/**\n\t * Return stored actions for given params.\n\t *\n\t * @param string                        $status The action's status in the data store.\n\t * @param string                        $hook The hook to trigger when this action runs.\n\t * @param array                         $args Args to pass to callbacks when the hook is triggered.\n\t * @param ActionScheduler_Schedule|null $schedule The action's schedule.\n\t * @param string                        $group A group to put the action in.\n\t * phpcs:ignore Squiz.Commenting.FunctionComment.ExtraParamComment\n\t * @param int                           $priority The action priority.\n\t *\n\t * @return ActionScheduler_Action An instance of the stored action.\n\t *\/\n\tpublic function get_stored_action( $status, $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\t\/\/ The 6th parameter ($priority) is not formally declared in the method signature to maintain compatibility with\n\t\t\/\/ third-party subclasses created before this param was added.\n\t\t$priority = func_num_args() >= 6 ? (int) func_get_arg( 5 ) : 10;\n\n\t\tswitch ( $status ) {\n\t\t\tcase ActionScheduler_Store::STATUS_PENDING:\n\t\t\t\t$action_class = 'ActionScheduler_Action';\n\t\t\t\tbreak;\n\t\t\tcase ActionScheduler_Store::STATUS_CANCELED:\n\t\t\t\t$action_class = 'ActionScheduler_CanceledAction';\n\t\t\t\tif ( ! is_null( $schedule ) && ! is_a( $schedule, 'ActionScheduler_CanceledSchedule' ) && ! is_a( $schedule, 'ActionScheduler_NullSchedule' ) ) {\n\t\t\t\t\t$schedule = new ActionScheduler_CanceledSchedule( $schedule->get_date() );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$action_class = 'ActionScheduler_FinishedAction';\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$action_class = apply_filters( 'action_scheduler_stored_action_class', $action_class, $status, $hook, $args, $schedule, $group );\n\n\t\t$action = new $action_class( $hook, $args, $schedule, $group );\n\t\t$action->set_priority( $priority );\n\n\t\t\/**\n\t\t * Allow 3rd party code to change the instantiated action for a given hook, args, schedule and group.\n\t\t *\n\t\t * @param ActionScheduler_Action   $action The instantiated action.\n\t\t * @param string                   $hook The instantiated action's hook.\n\t\t * @param array                    $args The instantiated action's args.\n\t\t * @param ActionScheduler_Schedule $schedule The instantiated action's schedule.\n\t\t * @param string                   $group The instantiated action's group.\n\t\t * @param int                      $priority The action priority.\n\t\t *\/\n\t\treturn apply_filters( 'action_scheduler_stored_action_instance', $action, $hook, $args, $schedule, $group, $priority );\n\t}\n\n\t\/**\n\t * Enqueue an action to run one time, as soon as possible (rather a specific scheduled time).\n\t *\n\t * This method creates a new action using the NullSchedule. In practice, this results in an action scheduled to\n\t * execute \"now\". Therefore, it will generally run as soon as possible but is not prioritized ahead of other actions\n\t * that are already past-due.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function async( $hook, $args = array(), $group = '' ) {\n\t\treturn $this->async_unique( $hook, $args, $group, false );\n\t}\n\n\t\/**\n\t * Same as async, but also supports $unique param.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether to ensure the action is unique.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function async_unique( $hook, $args = array(), $group = '', $unique = true ) {\n\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action, $unique ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create single action.\n\t *\n\t * @param string $hook  The hook to trigger when this action runs.\n\t * @param array  $args  Args to pass when the hook is triggered.\n\t * @param int    $when  Unix timestamp when the action will run.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function single( $hook, $args = array(), $when = null, $group = '' ) {\n\t\treturn $this->single_unique( $hook, $args, $when, $group, false );\n\t}\n\n\t\/**\n\t * Create single action only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $when Unix timestamp when the action will run.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function single_unique( $hook, $args = array(), $when = null, $group = '', $unique = true ) {\n\t\t$date     = as_get_datetime_object( $when );\n\t\t$schedule = new ActionScheduler_SimpleSchedule( $date );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create the first instance of an action recurring on a given interval.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $first Unix timestamp for the first run.\n\t * @param int    $interval Seconds between runs.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function recurring( $hook, $args = array(), $first = null, $interval = null, $group = '' ) {\n\t\treturn $this->recurring_unique( $hook, $args, $first, $interval, $group, false );\n\t}\n\n\t\/**\n\t * Create the first instance of an action recurring on a given interval only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $first Unix timestamp for the first run.\n\t * @param int    $interval Seconds between runs.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function recurring_unique( $hook, $args = array(), $first = null, $interval = null, $group = '', $unique = true ) {\n\t\tif ( empty( $interval ) ) {\n\t\t\treturn $this->single_unique( $hook, $args, $first, $group, $unique );\n\t\t}\n\t\t$date     = as_get_datetime_object( $first );\n\t\t$schedule = new ActionScheduler_IntervalSchedule( $date, $interval );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create the first instance of an action recurring on a Cron schedule.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $base_timestamp The first instance of the action will be scheduled\n\t *        to run at a time calculated after this timestamp matching the cron\n\t *        expression. This can be used to delay the first instance of the action.\n\t * @param int    $schedule A cron definition string.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function cron( $hook, $args = array(), $base_timestamp = null, $schedule = null, $group = '' ) {\n\t\treturn $this->cron_unique( $hook, $args, $base_timestamp, $schedule, $group, false );\n\t}\n\n\n\t\/**\n\t * Create the first instance of an action recurring on a Cron schedule only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $base_timestamp The first instance of the action will be scheduled\n\t *        to run at a time calculated after this timestamp matching the cron\n\t *        expression. This can be used to delay the first instance of the action.\n\t * @param int    $schedule A cron definition string.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t **\/\n\tpublic function cron_unique( $hook, $args = array(), $base_timestamp = null, $schedule = null, $group = '', $unique = true ) {\n\t\tif ( empty( $schedule ) ) {\n\t\t\treturn $this->single_unique( $hook, $args, $base_timestamp, $group, $unique );\n\t\t}\n\t\t$date     = as_get_datetime_object( $base_timestamp );\n\t\t$cron     = CronExpression::factory( $schedule );\n\t\t$schedule = new ActionScheduler_CronSchedule( $date, $cron );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create a successive instance of a recurring or cron action.\n\t *\n\t * Importantly, the action will be rescheduled to run based on the current date\/time.\n\t * That means when the action is scheduled to run in the past, the next scheduled date\n\t * will be pushed forward. For example, if a recurring action set to run every hour\n\t * was scheduled to run 5 seconds ago, it will be next scheduled for 1 hour in the\n\t * future, which is 1 hour and 5 seconds from when it was last scheduled to run.\n\t *\n\t * Alternatively, if the action is scheduled to run in the future, and is run early,\n\t * likely via manual intervention, then its schedule will change based on the time now.\n\t * For example, if a recurring action set to run every day, and is run 12 hours early,\n\t * it will run again in 24 hours, not 36 hours.\n\t *\n\t * This slippage is less of an issue with Cron actions, as the specific run time can\n\t * be set for them to run, e.g. 1am each day. In those cases, and entire period would\n\t * need to be missed before there was any change is scheduled, e.g. in the case of an\n\t * action scheduled for 1am each day, the action would need to run an entire day late.\n\t *\n\t * @param ActionScheduler_Action $action The existing action.\n\t *\n\t * @return string The ID of the stored action\n\t * @throws InvalidArgumentException If $action is not a recurring action.\n\t *\/\n\tpublic function repeat( $action ) {\n\t\t$schedule = $action->get_schedule();\n\t\t$next     = $schedule->get_next( as_get_datetime_object() );\n\n\t\tif ( is_null( $next ) || ! $schedule->is_recurring() ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid action - must be a recurring action.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$schedule_class = get_class( $schedule );\n\t\t$new_schedule   = new $schedule( $next, $schedule->get_recurrence(), $schedule->get_first_date() );\n\t\t$new_action     = new ActionScheduler_Action( $action->get_hook(), $action->get_args(), $new_schedule, $action->get_group() );\n\t\t$new_action->set_priority( $action->get_priority() );\n\t\treturn $this->store( $new_action );\n\t}\n\n\t\/**\n\t * Creates a scheduled action.\n\t *\n\t * This general purpose method can be used in place of specific methods such as async(),\n\t * async_unique(), single() or single_unique(), etc.\n\t *\n\t * @internal Not intended for public use, should not be overridden by subclasses.\n\t *\n\t * @param array $options {\n\t *     Describes the action we wish to schedule.\n\t *\n\t *     @type string     $type      Must be one of 'async', 'cron', 'recurring', or 'single'.\n\t *     @type string     $hook      The hook to be executed.\n\t *     @type array      $arguments Arguments to be passed to the callback.\n\t *     @type string     $group     The action group.\n\t *     @type bool       $unique    If the action should be unique.\n\t *     @type int        $when      Timestamp. Indicates when the action, or first instance of the action in the case\n\t *                                 of recurring or cron actions, becomes due.\n\t *     @type int|string $pattern   Recurrence pattern. This is either an interval in seconds for recurring actions\n\t *                                 or a cron expression for cron actions.\n\t *     @type int        $priority  Lower values means higher priority. Should be in the range 0-255.\n\t * }\n\t *\n\t * @return int The action ID. Zero if there was an error scheduling the action.\n\t *\/\n\tpublic function create( array $options = array() ) {\n\t\t$defaults = array(\n\t\t\t'type'      => 'single',\n\t\t\t'hook'      => '',\n\t\t\t'arguments' => array(),\n\t\t\t'group'     => '',\n\t\t\t'unique'    => false,\n\t\t\t'when'      => time(),\n\t\t\t'pattern'   => null,\n\t\t\t'priority'  => 10,\n\t\t);\n\n\t\t$options = array_merge( $defaults, $options );\n\n\t\t\/\/ Cron\/recurring actions without a pattern are treated as single actions (this gives calling code the ability\n\t\t\/\/ to use functions like as_schedule_recurring_action() to schedule recurring as well as single actions).\n\t\tif ( ( 'cron' === $options['type'] || 'recurring' === $options['type'] ) && empty( $options['pattern'] ) ) {\n\t\t\t$options['type'] = 'single';\n\t\t}\n\n\t\tswitch ( $options['type'] ) {\n\t\t\tcase 'async':\n\t\t\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t\t\tbreak;\n\n\t\t\tcase 'cron':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$cron     = CronExpression::factory( $options['pattern'] );\n\t\t\t\t$schedule = new ActionScheduler_CronSchedule( $date, $cron );\n\t\t\t\tbreak;\n\n\t\t\tcase 'recurring':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$schedule = new ActionScheduler_IntervalSchedule( $date, $options['pattern'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'single':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$schedule = new ActionScheduler_SimpleSchedule( $date );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\t\terror_log( \"Unknown action type '{$options['type']}' specified when trying to create an action for '{$options['hook']}'.\" );\n\t\t\t\treturn 0;\n\t\t}\n\n\t\t$action = new ActionScheduler_Action( $options['hook'], $options['arguments'], $schedule, $options['group'] );\n\t\t$action->set_priority( $options['priority'] );\n\n\t\t$action_id = 0;\n\t\ttry {\n\t\t\t$action_id = $options['unique'] ? $this->store_unique_action( $action ) : $this->store( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\terror_log(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: %1$s is the name of the hook to be enqueued, %2$s is the exception message. *\/\n\t\t\t\t\t__( 'Caught exception while enqueuing action \"%1$s\": %2$s', 'action-scheduler' ),\n\t\t\t\t\t$options['hook'],\n\t\t\t\t\t$e->getMessage()\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn $action_id;\n\t}\n\n\t\/**\n\t * Save action to database.\n\t *\n\t * @param ActionScheduler_Action $action Action object to save.\n\t *\n\t * @return int The ID of the stored action\n\t *\/\n\tprotected function store( ActionScheduler_Action $action ) {\n\t\t$store = ActionScheduler_Store::instance();\n\t\treturn $store->save_action( $action );\n\t}\n\n\t\/**\n\t * Store action if it's unique.\n\t *\n\t * @param ActionScheduler_Action $action Action object to store.\n\t *\n\t * @return int ID of the created action. Will be 0 if action was not created.\n\t *\/\n\tprotected function store_unique_action( ActionScheduler_Action $action ) {\n\t\t$store = ActionScheduler_Store::instance();\n\t\tif ( method_exists( $store, 'save_unique_action' ) ) {\n\t\t\treturn $store->save_unique_action( $action );\n\t\t} else {\n\t\t\t\/**\n\t\t\t * Fallback to non-unique action if the store doesn't support unique actions.\n\t\t\t * We try to save the action as unique, accepting that there might be a race condition.\n\t\t\t * This is likely still better than giving up on unique actions entirely.\n\t\t\t *\/\n\t\t\t$existing_action_id = (int) $store->find_action(\n\t\t\t\t$action->get_hook(),\n\t\t\t\tarray(\n\t\t\t\t\t'args'   => $action->get_args(),\n\t\t\t\t\t'status' => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t\t\t'group'  => $action->get_group(),\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ( $existing_action_id > 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn $store->save_action( $action );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_AdminView.php","ext":"php","size":10627,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_AdminView\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_AdminView extends ActionScheduler_AdminView_Deprecated {\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var null|self\n\t *\/\n\tprivate static $admin_view = null;\n\n\t\/**\n\t * Screen ID.\n\t *\n\t * @var string\n\t *\/\n\tprivate static $screen_id = 'tools_page_action-scheduler';\n\n\t\/**\n\t * ActionScheduler_ListTable instance.\n\t *\n\t * @var ActionScheduler_ListTable\n\t *\/\n\tprotected $list_table;\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_AdminView\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function instance() {\n\n\t\tif ( empty( self::$admin_view ) ) {\n\t\t\t$class            = apply_filters( 'action_scheduler_admin_view_class', 'ActionScheduler_AdminView' );\n\t\t\tself::$admin_view = new $class();\n\t\t}\n\n\t\treturn self::$admin_view;\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\tif ( is_admin() && ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) ) {\n\n\t\t\tif ( class_exists( 'WooCommerce' ) ) {\n\t\t\t\tadd_action( 'woocommerce_admin_status_content_action-scheduler', array( $this, 'render_admin_ui' ) );\n\t\t\t\tadd_action( 'woocommerce_system_status_report', array( $this, 'system_status_report' ) );\n\t\t\t\tadd_filter( 'woocommerce_admin_status_tabs', array( $this, 'register_system_status_tab' ) );\n\t\t\t}\n\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_menu' ) );\n\t\t\tadd_action( 'admin_notices', array( $this, 'maybe_check_pastdue_actions' ) );\n\t\t\tadd_action( 'current_screen', array( $this, 'add_help_tabs' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Print system status report.\n\t *\/\n\tpublic function system_status_report() {\n\t\t$table = new ActionScheduler_wcSystemStatus( ActionScheduler::store() );\n\t\t$table->render();\n\t}\n\n\t\/**\n\t * Registers action-scheduler into WooCommerce > System status.\n\t *\n\t * @param array $tabs An associative array of tab key => label.\n\t * @return array $tabs An associative array of tab key => label, including Action Scheduler's tabs\n\t *\/\n\tpublic function register_system_status_tab( array $tabs ) {\n\t\t$tabs['action-scheduler'] = __( 'Scheduled Actions', 'action-scheduler' );\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Include Action Scheduler's administration under the Tools menu.\n\t *\n\t * A menu under the Tools menu is important for backward compatibility (as that's\n\t * where it started), and also provides more convenient access than the WooCommerce\n\t * System Status page, and for sites where WooCommerce isn't active.\n\t *\/\n\tpublic function register_menu() {\n\t\t$hook_suffix = add_submenu_page(\n\t\t\t'tools.php',\n\t\t\t__( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t__( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t'manage_options',\n\t\t\t'action-scheduler',\n\t\t\tarray( $this, 'render_admin_ui' )\n\t\t);\n\t\tadd_action( 'load-' . $hook_suffix, array( $this, 'process_admin_ui' ) );\n\t}\n\n\t\/**\n\t * Triggers processing of any pending actions.\n\t *\/\n\tpublic function process_admin_ui() {\n\t\t$this->get_list_table();\n\t}\n\n\t\/**\n\t * Renders the Admin UI\n\t *\/\n\tpublic function render_admin_ui() {\n\t\t$table = $this->get_list_table();\n\t\t$table->display_page();\n\t}\n\n\t\/**\n\t * Get the admin UI object and process any requested actions.\n\t *\n\t * @return ActionScheduler_ListTable\n\t *\/\n\tprotected function get_list_table() {\n\t\tif ( null === $this->list_table ) {\n\t\t\t$this->list_table = new ActionScheduler_ListTable( ActionScheduler::store(), ActionScheduler::logger(), ActionScheduler::runner() );\n\t\t\t$this->list_table->process_actions();\n\t\t}\n\n\t\treturn $this->list_table;\n\t}\n\n\t\/**\n\t * Action: admin_notices\n\t *\n\t * Maybe check past-due actions, and print notice.\n\t *\n\t * @uses $this->check_pastdue_actions()\n\t *\/\n\tpublic function maybe_check_pastdue_actions() {\n\n\t\t\/\/ Filter to prevent checking actions (ex: inappropriate user).\n\t\tif ( ! apply_filters( 'action_scheduler_check_pastdue_actions', current_user_can( 'manage_options' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Get last check transient.\n\t\t$last_check = get_transient( 'action_scheduler_last_pastdue_actions_check' );\n\n\t\t\/\/ If transient exists, we're within interval, so bail.\n\t\tif ( ! empty( $last_check ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Perform the check.\n\t\t$this->check_pastdue_actions();\n\t}\n\n\t\/**\n\t * Check past-due actions, and print notice.\n\t *\/\n\tprotected function check_pastdue_actions() {\n\n\t\t\/\/ Set thresholds.\n\t\t$threshold_seconds = (int) apply_filters( 'action_scheduler_pastdue_actions_seconds', DAY_IN_SECONDS );\n\t\t$threshold_min     = (int) apply_filters( 'action_scheduler_pastdue_actions_min', 1 );\n\n\t\t\/\/ Set fallback value for past-due actions count.\n\t\t$num_pastdue_actions = 0;\n\n\t\t\/\/ Allow third-parties to preempt the default check logic.\n\t\t$check = apply_filters( 'action_scheduler_pastdue_actions_check_pre', null );\n\n\t\t\/\/ If no third-party preempted and there are no past-due actions, return early.\n\t\tif ( ! is_null( $check ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Scheduled actions query arguments.\n\t\t$query_args = array(\n\t\t\t'date'     => as_get_datetime_object( time() - $threshold_seconds ),\n\t\t\t'status'   => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t'per_page' => $threshold_min,\n\t\t);\n\n\t\t\/\/ If no third-party preempted, run default check.\n\t\tif ( is_null( $check ) ) {\n\t\t\t$store               = ActionScheduler_Store::instance();\n\t\t\t$num_pastdue_actions = (int) $store->query_actions( $query_args, 'count' );\n\n\t\t\t\/\/ Check if past-due actions count is greater than or equal to threshold.\n\t\t\t$check = ( $num_pastdue_actions >= $threshold_min );\n\t\t\t$check = (bool) apply_filters( 'action_scheduler_pastdue_actions_check', $check, $num_pastdue_actions, $threshold_seconds, $threshold_min );\n\t\t}\n\n\t\t\/\/ If check failed, set transient and abort.\n\t\tif ( ! boolval( $check ) ) {\n\t\t\t$interval = apply_filters( 'action_scheduler_pastdue_actions_check_interval', round( $threshold_seconds \/ 4 ), $threshold_seconds );\n\t\t\tset_transient( 'action_scheduler_last_pastdue_actions_check', time(), $interval );\n\n\t\t\treturn;\n\t\t}\n\n\t\t$actions_url = add_query_arg(\n\t\t\tarray(\n\t\t\t\t'page'   => 'action-scheduler',\n\t\t\t\t'status' => 'past-due',\n\t\t\t\t'order'  => 'asc',\n\t\t\t),\n\t\t\tadmin_url( 'tools.php' )\n\t\t);\n\n\t\t\/\/ Print notice.\n\t\techo '<div class=\"notice notice-warning\"><p>';\n\t\tprintf(\n\t\t\twp_kses(\n\t\t\t\t\/\/ translators: 1) is the number of affected actions, 2) is a link to an admin screen.\n\t\t\t\t_n(\n\t\t\t\t\t'<strong>Action Scheduler:<\/strong> %1$d <a href=\"%2$s\">past-due action<\/a> found; something may be wrong. <a href=\"https:\/\/actionscheduler.org\/faq\/#my-site-has-past-due-actions-what-can-i-do\" target=\"_blank\">Read documentation &raquo;<\/a>',\n\t\t\t\t\t'<strong>Action Scheduler:<\/strong> %1$d <a href=\"%2$s\">past-due actions<\/a> found; something may be wrong. <a href=\"https:\/\/actionscheduler.org\/faq\/#my-site-has-past-due-actions-what-can-i-do\" target=\"_blank\">Read documentation &raquo;<\/a>',\n\t\t\t\t\t$num_pastdue_actions,\n\t\t\t\t\t'action-scheduler'\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'strong' => array(),\n\t\t\t\t\t'a'      => array(\n\t\t\t\t\t\t'href'   => true,\n\t\t\t\t\t\t'target' => true,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t),\n\t\t\tabsint( $num_pastdue_actions ),\n\t\t\tesc_attr( esc_url( $actions_url ) )\n\t\t);\n\t\techo '<\/p><\/div>';\n\n\t\t\/\/ Facilitate third-parties to evaluate and print notices.\n\t\tdo_action( 'action_scheduler_pastdue_actions_extra_notices', $query_args );\n\t}\n\n\t\/**\n\t * Provide more information about the screen and its data in the help tab.\n\t *\/\n\tpublic function add_help_tabs() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( ! $screen || self::$screen_id !== $screen->id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$as_version       = ActionScheduler_Versions::instance()->latest_version();\n\t\t$as_source        = ActionScheduler_SystemInformation::active_source();\n\t\t$as_source_path   = ActionScheduler_SystemInformation::active_source_path();\n\t\t$as_source_markup = sprintf( '<code>%s<\/code>', esc_html( $as_source_path ) );\n\n\t\tif ( ! empty( $as_source ) ) {\n\t\t\t$as_source_markup = sprintf(\n\t\t\t\t'%s: <abbr title=\"%s\">%s<\/abbr>',\n\t\t\t\tucfirst( $as_source['type'] ),\n\t\t\t\tesc_attr( $as_source_path ),\n\t\t\t\tesc_html( $as_source['name'] )\n\t\t\t);\n\t\t}\n\n\t\t$screen->add_help_tab(\n\t\t\tarray(\n\t\t\t\t'id'      => 'action_scheduler_about',\n\t\t\t\t'title'   => __( 'About', 'action-scheduler' ),\n\t\t\t\t'content' =>\n\t\t\t\t\t\/\/ translators: %s is the Action Scheduler version.\n\t\t\t\t\t'<h2>' . sprintf( __( 'About Action Scheduler %s', 'action-scheduler' ), $as_version ) . '<\/h2>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\t__( 'Action Scheduler is a scalable, traceable job queue for background processing large sets of actions. Action Scheduler works by triggering an action hook to run at some time in the future. Scheduled actions can also be scheduled to run on a recurring schedule.', 'action-scheduler' ) .\n\t\t\t\t\t'<\/p>' .\n\t\t\t\t\t'<h3>' . esc_html__( 'Source', 'action-scheduler' ) . '<\/h3>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\tesc_html__( 'Action Scheduler is currently being loaded from the following location. This can be useful when debugging, or if requested by the support team.', 'action-scheduler' ) .\n\t\t\t\t\t'<\/p>' .\n\t\t\t\t\t'<p>' . $as_source_markup . '<\/p>' .\n\t\t\t\t\t'<h3>' . esc_html__( 'WP CLI', 'action-scheduler' ) . '<\/h3>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\/* translators: %1$s is WP CLI command (not translatable) *\/\n\t\t\t\t\t\t\tesc_html__( 'WP CLI commands are available: execute %1$s for a list of available commands.', 'action-scheduler' ),\n\t\t\t\t\t\t\t'<code>wp help action-scheduler<\/code>'\n\t\t\t\t\t\t) .\n\t\t\t\t\t'<\/p>',\n\t\t\t)\n\t\t);\n\n\t\t$screen->add_help_tab(\n\t\t\tarray(\n\t\t\t\t'id'      => 'action_scheduler_columns',\n\t\t\t\t'title'   => __( 'Columns', 'action-scheduler' ),\n\t\t\t\t'content' =>\n\t\t\t\t\t'<h2>' . __( 'Scheduled Action Columns', 'action-scheduler' ) . '<\/h2>' .\n\t\t\t\t\t'<ul>' .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Hook', 'action-scheduler' ), __( 'Name of the action hook that will be triggered.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Status', 'action-scheduler' ), __( 'Action statuses are Pending, Complete, Canceled, Failed', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Arguments', 'action-scheduler' ), __( 'Optional data array passed to the action hook.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Group', 'action-scheduler' ), __( 'Optional action group.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Recurrence', 'action-scheduler' ), __( 'The action\\'s schedule frequency.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Scheduled', 'action-scheduler' ), __( 'The date\/time the action is\/was scheduled to run.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Log', 'action-scheduler' ), __( 'Activity log for the action.', 'action-scheduler' ) ) .\n\t\t\t\t\t'<\/ul>',\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_RecurringActionScheduler.php","ext":"php","size":3123,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_RecurringActionScheduler\n *\n * This class ensures that the `action_scheduler_ensure_recurring_actions` hook is triggered on a daily interval. This\n * simplifies the process for other plugins to register their recurring actions without requiring each plugin to query\n * or schedule actions independently on every request.\n *\/\nclass ActionScheduler_RecurringActionScheduler {\n\n\t\/**\n\t * @var string The hook of the scheduled recurring action that is run to trigger the\n\t *      `action_scheduler_ensure_recurring_actions` hook that plugins should use.  We can't directly have the\n\t *      scheduled action hook be the hook plugins should use because the actions will show as failed if no plugin\n\t *      was actively hooked into it.\n\t *\/\n\tprivate const RUN_SCHEDULED_RECURRING_ACTIONS_HOOK = 'action_scheduler_run_recurring_actions_schedule_hook';\n\n\t\/**\n\t * Initialize the instance.  Should only be run on a single instance per request.\n\t *\n\t * @return void\n\t *\/\n\tpublic function init(): void {\n\t\tadd_action( self::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK, array( $this, 'run_recurring_scheduler_hook' ) );\n\t\tif ( is_admin() && ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) ) {\n\t\t\tadd_action( 'action_scheduler_init', array( $this, 'schedule_recurring_scheduler_hook' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Schedule the recurring `action_scheduler_ensure_recurring_actions` action if not already scheduled.\n\t *\n\t * @return void\n\t *\/\n\tpublic function schedule_recurring_scheduler_hook(): void {\n\t\tif ( false === wp_cache_get( 'as_is_ensure_recurring_actions_scheduled' ) ) {\n\t\t\tif ( ! as_has_scheduled_action( self::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK ) ) {\n\t\t\t\tas_schedule_recurring_action(\n\t\t\t\t\ttime(),\n\t\t\t\t\tDAY_IN_SECONDS,\n\t\t\t\t\tself::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK,\n\t\t\t\t\t[],\n\t\t\t\t\t'ActionScheduler',\n\t\t\t\t\ttrue,\n\t\t\t\t\t20\n\t\t\t\t);\n\t\t\t}\n\t\t\twp_cache_set( 'as_is_ensure_recurring_actions_scheduled', true, HOUR_IN_SECONDS );\n\t\t}\n\t}\n\n\t\/**\n\t * Trigger the hook to allow other plugins to schedule their recurring actions.\n\t *\n\t * @return void\n\t *\/\n\tpublic function run_recurring_scheduler_hook(): void {\n\t\t\/**\n\t\t * Fires to allow extensions to verify and ensure their recurring actions are scheduled.\n\t\t *\n\t\t * This action is scheduled to trigger once every 24 hrs for the purpose of having 3rd party plugins verify that\n\t\t * any previously scheduled recurring actions are still scheduled. Because recurring actions could stop getting\n\t\t * rescheduled by default due to excessive failures, database issues, or other interruptions, extensions can use\n\t\t * this hook to check for the existence of their recurring actions and reschedule them if necessary.\n\t\t *\n\t\t * Example usage:\n\t\t *\n\t\t * add_action('action_scheduler_ensure_recurring_actions', function() {\n\t\t *     \/\/ Check if the recurring action is scheduled, and reschedule if missing.\n\t\t *     if ( ! as_has_scheduled_action('my_recurring_action') ) {\n\t\t *         as_schedule_recurring_action( time(), HOUR_IN_SECONDS, 'my_recurring_action' );\n\t\t *     }\n\t\t * });\n\t\t *\n\t\t * @since 3.9.3\n\t\t *\/\n\t\tdo_action( 'action_scheduler_ensure_recurring_actions' );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_QueueRunner.php","ext":"php","size":9720,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_QueueRunner\n *\/\nclass ActionScheduler_QueueRunner extends ActionScheduler_Abstract_QueueRunner {\n\tconst WP_CRON_HOOK = 'action_scheduler_run_queue';\n\n\tconst WP_CRON_SCHEDULE = 'every_minute';\n\n\t\/**\n\t * ActionScheduler_AsyncRequest_QueueRunner instance.\n\t *\n\t * @var ActionScheduler_AsyncRequest_QueueRunner\n\t *\/\n\tprotected $async_request;\n\n\t\/**\n\t * ActionScheduler_QueueRunner instance.\n\t *\n\t * @var ActionScheduler_QueueRunner\n\t *\/\n\tprivate static $runner = null;\n\n\t\/**\n\t * Number of processed actions.\n\t *\n\t * @var int\n\t *\/\n\tprivate $processed_actions_count = 0;\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_QueueRunner\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$runner ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_queue_runner_class', 'ActionScheduler_QueueRunner' );\n\t\t\tself::$runner = new $class();\n\t\t}\n\n\t\treturn self::$runner;\n\t}\n\n\t\/**\n\t * ActionScheduler_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null                    $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null        $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null             $cleaner Cleaner object.\n\t * @param ActionScheduler_AsyncRequest_QueueRunner|null $async_request Async request runner object.\n\t *\/\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null, ?ActionScheduler_AsyncRequest_QueueRunner $async_request = null ) {\n\t\tparent::__construct( $store, $monitor, $cleaner );\n\n\t\tif ( is_null( $async_request ) ) {\n\t\t\t$async_request = new ActionScheduler_AsyncRequest_QueueRunner( $this->store );\n\t\t}\n\n\t\t$this->async_request = $async_request;\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\n\t\tadd_filter( 'cron_schedules', array( self::instance(), 'add_wp_cron_schedule' ) ); \/\/ phpcs:ignore WordPress.WP.CronInterval.CronSchedulesInterval\n\n\t\t\/\/ Check for and remove any WP Cron hook scheduled by Action Scheduler < 3.0.0, which didn't include the $context param.\n\t\t$next_timestamp = wp_next_scheduled( self::WP_CRON_HOOK );\n\t\tif ( $next_timestamp ) {\n\t\t\twp_unschedule_event( $next_timestamp, self::WP_CRON_HOOK );\n\t\t}\n\n\t\t$cron_context = array( 'WP Cron' );\n\n\t\tif ( ! wp_next_scheduled( self::WP_CRON_HOOK, $cron_context ) ) {\n\t\t\t$schedule = apply_filters( 'action_scheduler_run_schedule', self::WP_CRON_SCHEDULE );\n\t\t\twp_schedule_event( time(), $schedule, self::WP_CRON_HOOK, $cron_context );\n\t\t}\n\n\t\tadd_action( self::WP_CRON_HOOK, array( self::instance(), 'run' ) );\n\t\t$this->hook_dispatch_async_request();\n\t}\n\n\t\/**\n\t * Hook check for dispatching an async request.\n\t *\/\n\tpublic function hook_dispatch_async_request() {\n\t\tadd_action( 'shutdown', array( $this, 'maybe_dispatch_async_request' ) );\n\t}\n\n\t\/**\n\t * Unhook check for dispatching an async request.\n\t *\/\n\tpublic function unhook_dispatch_async_request() {\n\t\tremove_action( 'shutdown', array( $this, 'maybe_dispatch_async_request' ) );\n\t}\n\n\t\/**\n\t * Check if we should dispatch an async request to process actions.\n\t *\n\t * This method is attached to 'shutdown', so is called frequently. To avoid slowing down\n\t * the site, it mitigates the work performed in each request by:\n\t * 1. checking if it's in the admin context and then\n\t * 2. haven't run on the 'shutdown' hook within the lock time (60 seconds by default)\n\t * 3. haven't exceeded the number of allowed batches.\n\t *\n\t * The order of these checks is important, because they run from a check on a value:\n\t * 1. in memory - is_admin() maps to $GLOBALS or the WP_ADMIN constant\n\t * 2. in memory - transients use autoloaded options by default\n\t * 3. from a database query - has_maximum_concurrent_batches() run the query\n\t *    $this->store->get_claim_count() to find the current number of claims in the DB.\n\t *\n\t * If all of these conditions are met, then we request an async runner check whether it\n\t * should dispatch a request to process pending actions.\n\t *\/\n\tpublic function maybe_dispatch_async_request() {\n\t\t\/\/ Only start an async queue at most once every 60 seconds.\n\t\tif (\n\t\t\tis_admin()\n\t\t\t&& ! ActionScheduler::lock()->is_locked( 'async-request-runner' )\n\t\t\t&& ActionScheduler::lock()->set( 'async-request-runner' )\n\t\t) {\n\t\t\t$this->async_request->maybe_dispatch();\n\t\t}\n\t}\n\n\t\/**\n\t * Process actions in the queue. Attached to self::WP_CRON_HOOK i.e. 'action_scheduler_run_queue'\n\t *\n\t * The $context param of this method defaults to 'WP Cron', because prior to Action Scheduler 3.0.0\n\t * that was the only context in which this method was run, and the self::WP_CRON_HOOK hook had no context\n\t * passed along with it. New code calling this method directly, or by triggering the self::WP_CRON_HOOK,\n\t * should set a context as the first parameter. For an example of this, refer to the code seen in\n\t *\n\t * @see ActionScheduler_AsyncRequest_QueueRunner::handle()\n\t *\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t *\/\n\tpublic function run( $context = 'WP Cron' ) {\n\t\tActionScheduler_Compatibility::raise_memory_limit();\n\t\tActionScheduler_Compatibility::raise_time_limit( $this->get_time_limit() );\n\t\tdo_action( 'action_scheduler_before_process_queue' );\n\t\t$this->run_cleanup();\n\n\t\t$this->processed_actions_count = 0;\n\t\tif ( false === $this->has_maximum_concurrent_batches() ) {\n\t\t\tdo {\n\t\t\t\t$batch_size                     = apply_filters( 'action_scheduler_queue_runner_batch_size', 25 );\n\t\t\t\t$processed_actions_in_batch     = $this->do_batch( $batch_size, $context );\n\t\t\t\t$this->processed_actions_count += $processed_actions_in_batch;\n\t\t\t} while ( $processed_actions_in_batch > 0 && ! $this->batch_limits_exceeded( $this->processed_actions_count ) ); \/\/ keep going until we run out of actions, time, or memory.\n\t\t}\n\n\t\tdo_action( 'action_scheduler_after_process_queue' );\n\t\treturn $this->processed_actions_count;\n\t}\n\n\t\/**\n\t * Process a batch of actions pending in the queue.\n\t *\n\t * Actions are processed by claiming a set of pending actions then processing each one until either the batch\n\t * size is completed, or memory or time limits are reached, defined by @see $this->batch_limits_exceeded().\n\t *\n\t * @param int    $size The maximum number of actions to process in the batch.\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *                        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t *\/\n\tprotected function do_batch( $size = 100, $context = '' ) {\n\t\t$claim = $this->store->stake_claim( $size );\n\t\t$this->monitor->attach( $claim );\n\t\t$processed_actions = 0;\n\n\t\tforeach ( $claim->get_actions() as $action_id ) {\n\t\t\t\/\/ bail if we lost the claim.\n\t\t\tif ( ! in_array( $action_id, $this->store->find_actions_by_claim_id( $claim->get_id() ), true ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$this->process_action( $action_id, $context );\n\t\t\t$processed_actions++;\n\n\t\t\tif ( $this->batch_limits_exceeded( $processed_actions + $this->processed_actions_count ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$this->store->release_claim( $claim );\n\t\t$this->monitor->detach();\n\t\t$this->clear_caches();\n\t\treturn $processed_actions;\n\t}\n\n\t\/**\n\t * Flush the cache if possible (intended for use after a batch of actions has been processed).\n\t *\n\t * This is useful because running large batches can eat up memory and because invalid data can accrue in the\n\t * runtime cache, which may lead to unexpected results.\n\t *\/\n\tprotected function clear_caches() {\n\t\t\/*\n\t\t * Calling wp_cache_flush_runtime() lets us clear the runtime cache without invalidating the external object\n\t\t * cache, so we will always prefer this method (as compared to calling wp_cache_flush()) when it is available.\n\t\t *\n\t\t * However, this function was only introduced in WordPress 6.0. Additionally, the preferred way of detecting if\n\t\t * it is supported changed in WordPress 6.1 so we use two different methods to decide if we should utilize it.\n\t\t *\/\n\t\t$flushing_runtime_cache_explicitly_supported = function_exists( 'wp_cache_supports' ) && wp_cache_supports( 'flush_runtime' );\n\t\t$flushing_runtime_cache_implicitly_supported = ! function_exists( 'wp_cache_supports' ) && function_exists( 'wp_cache_flush_runtime' );\n\n\t\tif ( $flushing_runtime_cache_explicitly_supported || $flushing_runtime_cache_implicitly_supported ) {\n\t\t\twp_cache_flush_runtime();\n\t\t} elseif (\n\t\t\t! wp_using_ext_object_cache()\n\t\t\t\/**\n\t\t\t * When an external object cache is in use, and when wp_cache_flush_runtime() is not available, then\n\t\t\t * normally the cache will not be flushed after processing a batch of actions (to avoid a performance\n\t\t\t * penalty for other processes).\n\t\t\t *\n\t\t\t * This filter makes it possible to override this behavior and always flush the cache, even if an external\n\t\t\t * object cache is in use.\n\t\t\t *\n\t\t\t * @since 1.0\n\t\t\t *\n\t\t\t * @param bool $flush_cache If the cache should be flushed.\n\t\t\t *\/\n\t\t\t|| apply_filters( 'action_scheduler_queue_runner_flush_cache', false )\n\t\t) {\n\t\t\twp_cache_flush();\n\t\t}\n\t}\n\n\t\/**\n\t * Add schedule to WP cron.\n\t *\n\t * @param array<string, array<string, int|string>> $schedules Schedules.\n\t * @return array<string, array<string, int|string>>\n\t *\/\n\tpublic function add_wp_cron_schedule( $schedules ) {\n\t\t$schedules['every_minute'] = array(\n\t\t\t'interval' => 60, \/\/ in seconds.\n\t\t\t'display'  => __( 'Every minute', 'action-scheduler' ),\n\t\t);\n\n\t\treturn $schedules;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_SystemInformation.php","ext":"php","size":2497,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Provides information about active and registered instances of Action Scheduler.\n *\/\nclass ActionScheduler_SystemInformation {\n\t\/**\n\t * Returns information about the plugin or theme which contains the current active version\n\t * of Action Scheduler.\n\t *\n\t * If this cannot be determined, or if Action Scheduler is being loaded via some other\n\t * method, then it will return an empty array. Otherwise, if populated, the array will\n\t * look like the following:\n\t *\n\t *     [\n\t *         'type' => 'plugin', # or 'theme'\n\t *         'name' => 'Name',\n\t *     ]\n\t *\n\t * @return array\n\t *\/\n\tpublic static function active_source(): array {\n\t\t$plugins      = get_plugins();\n\t\t$plugin_files = array_keys( $plugins );\n\n\t\tforeach ( $plugin_files as $plugin_file ) {\n\t\t\t$plugin_path = trailingslashit( WP_PLUGIN_DIR ) . dirname( $plugin_file );\n\t\t\t$plugin_file = trailingslashit( WP_PLUGIN_DIR ) . $plugin_file;\n\n\t\t\tif ( 0 !== strpos( dirname( __DIR__ ), $plugin_path ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$plugin_data = get_plugin_data( $plugin_file );\n\n\t\t\tif ( ! is_array( $plugin_data ) || empty( $plugin_data['Name'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'type' => 'plugin',\n\t\t\t\t'name' => $plugin_data['Name'],\n\t\t\t);\n\t\t}\n\n\t\t$themes = (array) search_theme_directories();\n\n\t\tforeach ( $themes as $slug => $data ) {\n\t\t\t$needle = trailingslashit( $data['theme_root'] ) . $slug . '\/';\n\n\t\t\tif ( 0 !== strpos( __FILE__, $needle ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$theme = wp_get_theme( $slug );\n\n\t\t\tif ( ! is_object( $theme ) || ! is_a( $theme, \\WP_Theme::class ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'type' => 'theme',\n\t\t\t\t\/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t\t\t'name' => $theme->Name,\n\t\t\t);\n\t\t}\n\n\t\treturn array();\n\t}\n\n\t\/**\n\t * Returns the directory path for the currently active installation of Action Scheduler.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function active_source_path(): string {\n\t\treturn trailingslashit( dirname( __DIR__ ) );\n\t}\n\n\t\/**\n\t * Get registered sources.\n\t *\n\t * It is not always possible to obtain this information. For instance, if earlier versions (<=3.9.0) of\n\t * Action Scheduler register themselves first, then the necessary data about registered sources will\n\t * not be available.\n\t *\n\t * @return array<string, string>\n\t *\/\n\tpublic static function get_sources() {\n\t\t$versions = ActionScheduler_Versions::instance();\n\t\treturn method_exists( $versions, 'get_sources' ) ? $versions->get_sources() : array();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_Exception.php","ext":"php","size":207,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * ActionScheduler Exception Interface.\n *\n * Facilitates catching Exceptions unique to Action Scheduler.\n *\n * @package ActionScheduler\n * @since 2.1.0\n *\/\ninterface ActionScheduler_Exception {}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_DateTime.php","ext":"php","size":2060,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * ActionScheduler DateTime class.\n *\n * This is a custom extension to DateTime that\n *\/\nclass ActionScheduler_DateTime extends DateTime {\n\n\t\/**\n\t * UTC offset.\n\t *\n\t * Only used when a timezone is not set. When a timezone string is\n\t * used, this will be set to 0.\n\t *\n\t * @var int\n\t *\/\n\tprotected $utcOffset = 0; \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase\n\n\t\/**\n\t * Get the unix timestamp of the current object.\n\t *\n\t * Missing in PHP 5.2 so just here so it can be supported consistently.\n\t *\n\t * @return int\n\t *\/\n\t#[\\ReturnTypeWillChange]\n\tpublic function getTimestamp() {\n\t\treturn method_exists( 'DateTime', 'getTimestamp' ) ? parent::getTimestamp() : $this->format( 'U' );\n\t}\n\n\t\/**\n\t * Set the UTC offset.\n\t *\n\t * This represents a fixed offset instead of a timezone setting.\n\t *\n\t * @param string|int $offset UTC offset value.\n\t *\/\n\tpublic function setUtcOffset( $offset ) {\n\t\t$this->utcOffset = intval( $offset ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t}\n\n\t\/**\n\t * Returns the timezone offset.\n\t *\n\t * @return int\n\t * @link http:\/\/php.net\/manual\/en\/datetime.getoffset.php\n\t *\/\n\t#[\\ReturnTypeWillChange]\n\tpublic function getOffset() {\n\t\treturn $this->utcOffset ? $this->utcOffset : parent::getOffset(); \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t}\n\n\t\/**\n\t * Set the TimeZone associated with the DateTime\n\t *\n\t * @param DateTimeZone $timezone Timezone object.\n\t *\n\t * @return static\n\t * @link http:\/\/php.net\/manual\/en\/datetime.settimezone.php\n\t *\/\n\t#[\\ReturnTypeWillChange]\n\tpublic function setTimezone( $timezone ) {\n\t\t$this->utcOffset = 0; \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\tparent::setTimezone( $timezone );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Get the timestamp with the WordPress timezone offset added or subtracted.\n\t *\n\t * @since  3.0.0\n\t * @return int\n\t *\/\n\tpublic function getOffsetTimestamp() {\n\t\treturn $this->getTimestamp() + $this->getOffset();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_IntervalSchedule.php","ext":"php","size":2633,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_IntervalSchedule\n *\/\nclass ActionScheduler_IntervalSchedule extends ActionScheduler_Abstract_RecurringSchedule implements ActionScheduler_Schedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $start_timestamp = null;\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $interval_in_seconds = null;\n\n\t\/**\n\t * Calculate when this schedule should start after a given date & time using\n\t * the number of seconds between recurrences.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime\n\t *\/\n\tprotected function calculate_next( DateTime $after ) {\n\t\t$after->modify( '+' . (int) $this->get_recurrence() . ' seconds' );\n\t\treturn $after;\n\t}\n\n\t\/**\n\t * Schedule interval in seconds.\n\t *\n\t * @return int\n\t *\/\n\tpublic function interval_in_seconds() {\n\t\t_deprecated_function( __METHOD__, '3.0.0', '(int)ActionScheduler_Abstract_RecurringSchedule::get_recurrence()' );\n\t\treturn (int) $this->get_recurrence();\n\t}\n\n\t\/**\n\t * Serialize interval schedules with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, recurring schedules used different property names to\n\t * refer to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * possibility of infinite loops if downgrading to Action Scheduler < 3.0.0, we need to\n\t * also store the data with the old property names so if it's unserialized in AS < 3.0,\n\t * the schedule doesn't end up with a null\/false\/0 recurrence.\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->start_timestamp     = $this->scheduled_timestamp;\n\t\t$this->interval_in_seconds = $this->recurrence;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'start_timestamp',\n\t\t\t\t'interval_in_seconds',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize interval schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * For more background, @see ActionScheduler_Abstract_RecurringSchedule::__wakeup().\n\t *\/\n\tpublic function __wakeup() {\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->start_timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->start_timestamp;\n\t\t\tunset( $this->start_timestamp );\n\t\t}\n\n\t\tif ( is_null( $this->recurrence ) && ! is_null( $this->interval_in_seconds ) ) {\n\t\t\t$this->recurrence = $this->interval_in_seconds;\n\t\t\tunset( $this->interval_in_seconds );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_CanceledSchedule.php","ext":"php","size":1647,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_SimpleSchedule\n *\/\nclass ActionScheduler_CanceledSchedule extends ActionScheduler_SimpleSchedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $timestamp = null;\n\n\t\/**\n\t * Calculate when the next instance of this schedule would run based on a given date & time.\n\t *\n\t * @param DateTime $after Timestamp.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function calculate_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Cancelled actions should never have a next schedule, even if get_next()\n\t * is called with $after < $this->scheduled_date.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Action is not recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring() {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Unserialize recurring schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To maintain backward\n\t * compatibility with schedules serialized and stored prior to 3.0, we need to correctly\n\t * map the old property names with matching visibility.\n\t *\/\n\tpublic function __wakeup() {\n\t\tif ( ! is_null( $this->timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->timestamp;\n\t\t\tunset( $this->timestamp );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_NullSchedule.php","ext":"php","size":709,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_NullSchedule\n *\/\nclass ActionScheduler_NullSchedule extends ActionScheduler_SimpleSchedule {\n\n\t\/**\n\t * DateTime instance.\n\t *\n\t * @var DateTime|null\n\t *\/\n\tprotected $scheduled_date;\n\n\t\/**\n\t * Make the $date param optional and default to null.\n\t *\n\t * @param null|DateTime $date The date & time to run the action.\n\t *\/\n\tpublic function __construct( ?DateTime $date = null ) {\n\t\t$this->scheduled_date = null;\n\t}\n\n\t\/**\n\t * This schedule has no scheduled DateTime, so we need to override the parent __sleep().\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\t\treturn array();\n\t}\n\n\t\/**\n\t * Wakeup.\n\t *\/\n\tpublic function __wakeup() {\n\t\t$this->scheduled_date = null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_CronSchedule.php","ext":"php","size":3831,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_CronSchedule\n *\/\nclass ActionScheduler_CronSchedule extends ActionScheduler_Abstract_RecurringSchedule implements ActionScheduler_Schedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $start_timestamp = null;\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $cron = null;\n\n\t\/**\n\t * Wrapper for parent constructor to accept a cron expression string and map it to a CronExpression for this\n\t * objects $recurrence property.\n\t *\n\t * @param DateTime              $start The date & time to run the action at or after. If $start aligns with the CronSchedule passed via $recurrence, it will be used. If it does not align, the first matching date after it will be used.\n\t * @param CronExpression|string $recurrence The CronExpression used to calculate the schedule's next instance.\n\t * @param DateTime|null         $first (Optional) The date & time the first instance of this interval schedule ran. Default null, meaning this is the first instance.\n\t *\/\n\tpublic function __construct( DateTime $start, $recurrence, ?DateTime $first = null ) {\n\t\tif ( ! is_a( $recurrence, 'CronExpression' ) ) {\n\t\t\t$recurrence = CronExpression::factory( $recurrence );\n\t\t}\n\n\t\t\/\/ For backward compatibility, we need to make sure the date is set to the first matching cron date, not whatever date is passed in. Importantly, by passing true as the 3rd param, if $start matches the cron expression, then it will be used. This was previously handled in the now deprecated next() method.\n\t\t$date = $recurrence->getNextRunDate( $start, 0, true );\n\n\t\t\/\/ parent::__construct() will set this to $date by default, but that may be different to $start now.\n\t\t$first = empty( $first ) ? $start : $first;\n\n\t\tparent::__construct( $date, $recurrence, $first );\n\t}\n\n\t\/**\n\t * Calculate when an instance of this schedule would start based on a given\n\t * date & time using its the CronExpression.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime\n\t *\/\n\tprotected function calculate_next( DateTime $after ) {\n\t\treturn $this->recurrence->getNextRunDate( $after, 0, false );\n\t}\n\n\t\/**\n\t * Get the schedule's recurrence.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_recurrence() {\n\t\treturn strval( $this->recurrence );\n\t}\n\n\t\/**\n\t * Serialize cron schedules with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, recurring schedules used different property names to\n\t * refer to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * possibility of infinite loops if downgrading to Action Scheduler < 3.0.0, we need to\n\t * also store the data with the old property names so if it's unserialized in AS < 3.0,\n\t * the schedule doesn't end up with a null recurrence.\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->start_timestamp = $this->scheduled_timestamp;\n\t\t$this->cron            = $this->recurrence;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'start_timestamp',\n\t\t\t\t'cron',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize cron schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * For more background, @see ActionScheduler_Abstract_RecurringSchedule::__wakeup().\n\t *\/\n\tpublic function __wakeup() {\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->start_timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->start_timestamp;\n\t\t\tunset( $this->start_timestamp );\n\t\t}\n\n\t\tif ( is_null( $this->recurrence ) && ! is_null( $this->cron ) ) {\n\t\t\t$this->recurrence = $this->cron;\n\t\t\tunset( $this->cron );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_Schedule.php","ext":"php","size":456,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Schedule\n *\/\ninterface ActionScheduler_Schedule {\n\t\/**\n\t * Get the date & time this schedule was created to run, or calculate when it should be run\n\t * after a given date & time.\n\t *\n\t * @param null|DateTime $after Timestamp.\n\t * @return DateTime|null\n\t *\/\n\tpublic function next( ?DateTime $after = null );\n\n\t\/**\n\t * Identify the schedule as (not) recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring();\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_SimpleSchedule.php","ext":"php","size":2367,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_SimpleSchedule\n *\/\nclass ActionScheduler_SimpleSchedule extends ActionScheduler_Abstract_Schedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null|DateTime\n\t *\/\n\tprivate $timestamp = null;\n\n\t\/**\n\t * Calculate when this schedule should start after a given date & time using\n\t * the number of seconds between recurrences.\n\t *\n\t * @param DateTime $after Timestamp.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function calculate_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Schedule is not recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring() {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Serialize schedule with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * scheduled date for single actions always being seen as \"now\" if downgrading to\n\t * Action Scheduler < 3.0.0, we need to also store the data with the old property names\n\t * so if it's unserialized in AS < 3.0, the schedule doesn't end up with a null recurrence.\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->timestamp = $this->scheduled_timestamp;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'timestamp',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize recurring schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To maintain backward\n\t * compatibility with schedules serialized and stored prior to 3.0, we need to correctly\n\t * map the old property names with matching visibility.\n\t *\/\n\tpublic function __wakeup() {\n\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->timestamp;\n\t\t\tunset( $this->timestamp );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_QueueRunner.php","ext":"php","size":13770,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Abstract class with common Queue Cleaner functionality.\n *\/\nabstract class ActionScheduler_Abstract_QueueRunner extends ActionScheduler_Abstract_QueueRunner_Deprecated {\n\n\t\/**\n\t * ActionScheduler_QueueCleaner instance.\n\t *\n\t * @var ActionScheduler_QueueCleaner\n\t *\/\n\tprotected $cleaner;\n\n\t\/**\n\t * ActionScheduler_FatalErrorMonitor instance.\n\t *\n\t * @var ActionScheduler_FatalErrorMonitor\n\t *\/\n\tprotected $monitor;\n\n\t\/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprotected $store;\n\n\t\/**\n\t * The created time.\n\t *\n\t * Represents when the queue runner was constructed and used when calculating how long a PHP request has been running.\n\t * For this reason it should be as close as possible to the PHP request start time.\n\t *\n\t * @var int\n\t *\/\n\tprivate $created_time;\n\n\t\/**\n\t * ActionScheduler_Abstract_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null             $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null      $cleaner Cleaner object.\n\t *\/\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null ) {\n\n\t\t$this->created_time = microtime( true );\n\n\t\t$this->store   = $store ? $store : ActionScheduler_Store::instance();\n\t\t$this->monitor = $monitor ? $monitor : new ActionScheduler_FatalErrorMonitor( $this->store );\n\t\t$this->cleaner = $cleaner ? $cleaner : new ActionScheduler_QueueCleaner( $this->store );\n\t}\n\n\t\/**\n\t * Process an individual action.\n\t *\n\t * @param int    $action_id The action ID to process.\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *                        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @throws \\Exception When error running action.\n\t *\/\n\tpublic function process_action( $action_id, $context = '' ) {\n\t\t\/\/ Temporarily override the error handler while we process the current action.\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_set_error_handler\n\t\tset_error_handler(\n\t\t\t\/**\n\t\t\t * Temporary error handler which can catch errors and convert them into exceptions. This facilitates more\n\t\t\t * robust error handling across all supported PHP versions.\n\t\t\t *\n\t\t\t * @throws Exception\n\t\t\t *\n\t\t\t * @param int    $type    Error level expressed as an integer.\n\t\t\t * @param string $message Error message.\n\t\t\t *\/\n\t\t\tfunction ( $type, $message ) {\n\t\t\t\tthrow new Exception( $message );\n\t\t\t},\n\t\t\tE_USER_ERROR | E_RECOVERABLE_ERROR\n\t\t);\n\n\t\t\/*\n\t\t * The nested try\/catch structure is required because we potentially need to convert thrown errors into\n\t\t * exceptions (and an exception thrown from a catch block cannot be caught by a later catch block in the *same*\n\t\t * structure).\n\t\t *\/\n\t\ttry {\n\t\t\ttry {\n\t\t\t\t$valid_action = true;\n\n\t\t\t\tdo_action( 'action_scheduler_before_execute', $action_id, $context );\n\n\t\t\t\tif ( ActionScheduler_Store::STATUS_PENDING !== $this->store->get_status( $action_id ) ) {\n\t\t\t\t\t$valid_action = false;\n\t\t\t\t\tdo_action( 'action_scheduler_execution_ignored', $action_id, $context );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdo_action( 'action_scheduler_begin_execute', $action_id, $context );\n\n\t\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t\t\t$this->store->log_execution( $action_id );\n\t\t\t\t$action->execute();\n\t\t\t\tdo_action( 'action_scheduler_after_execute', $action_id, $action, $context );\n\t\t\t\t$this->store->mark_complete( $action_id );\n\t\t\t} catch ( Throwable $e ) {\n\t\t\t\t\/\/ Throwable is defined when executing under PHP 7.0 and up. We convert it to an exception, for\n\t\t\t\t\/\/ compatibility with ActionScheduler_Logger.\n\t\t\t\tthrow new Exception( $e->getMessage(), $e->getCode(), $e );\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t\/\/ This catch block exists for compatibility with PHP 5.6.\n\t\t\t$this->handle_action_error( $action_id, $e, $context, $valid_action );\n\t\t} finally {\n\t\t\trestore_error_handler();\n\t\t}\n\n\t\tif ( isset( $action ) && is_a( $action, 'ActionScheduler_Action' ) && $action->get_schedule()->is_recurring() ) {\n\t\t\t$this->schedule_next_instance( $action, $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Marks actions as either having failed execution or failed validation, as appropriate.\n\t *\n\t * @param int       $action_id    Action ID.\n\t * @param Exception $e            Exception instance.\n\t * @param string    $context      Execution context.\n\t * @param bool      $valid_action If the action is valid.\n\t *\n\t * @return void\n\t *\/\n\tprivate function handle_action_error( $action_id, $e, $context, $valid_action ) {\n\t\tif ( $valid_action ) {\n\t\t\t$this->store->mark_failure( $action_id );\n\t\t\t\/**\n\t\t\t * Runs when action execution fails.\n\t\t\t *\n\t\t\t * @param int       $action_id Action ID.\n\t\t\t * @param Exception $e         Exception instance.\n\t\t\t * @param string    $context   Execution context.\n\t\t\t *\/\n\t\t\tdo_action( 'action_scheduler_failed_execution', $action_id, $e, $context );\n\t\t} else {\n\t\t\t\/**\n\t\t\t * Runs when action validation fails.\n\t\t\t *\n\t\t\t * @param int       $action_id Action ID.\n\t\t\t * @param Exception $e         Exception instance.\n\t\t\t * @param string    $context   Execution context.\n\t\t\t *\/\n\t\t\tdo_action( 'action_scheduler_failed_validation', $action_id, $e, $context );\n\t\t}\n\t}\n\n\t\/**\n\t * Schedule the next instance of the action if necessary.\n\t *\n\t * @param ActionScheduler_Action $action Action.\n\t * @param int                    $action_id Action ID.\n\t *\/\n\tprotected function schedule_next_instance( ActionScheduler_Action $action, $action_id ) {\n\t\t\/\/ If a recurring action has been consistently failing, we may wish to stop rescheduling it.\n\t\tif (\n\t\t\tActionScheduler_Store::STATUS_FAILED === $this->store->get_status( $action_id )\n\t\t\t&& $this->recurring_action_is_consistently_failing( $action, $action_id )\n\t\t) {\n\t\t\tActionScheduler_Logger::instance()->log(\n\t\t\t\t$action_id,\n\t\t\t\t__( 'This action appears to be consistently failing. A new instance will not be scheduled.', 'action-scheduler' )\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tActionScheduler::factory()->repeat( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\tdo_action( 'action_scheduler_failed_to_schedule_next_instance', $action_id, $e, $action );\n\t\t}\n\t}\n\n\t\/**\n\t * Determine if the specified recurring action has been consistently failing.\n\t *\n\t * @param ActionScheduler_Action $action    The recurring action to be rescheduled.\n\t * @param int                    $action_id The ID of the recurring action.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function recurring_action_is_consistently_failing( ActionScheduler_Action $action, $action_id ) {\n\t\t\/**\n\t\t * Controls the failure threshold for recurring actions.\n\t\t *\n\t\t * Before rescheduling a recurring action, we look at its status. If it failed, we then check if all of the most\n\t\t * recent actions (upto the threshold set by this filter) sharing the same hook have also failed: if they have,\n\t\t * that is considered consistent failure and a new instance of the action will not be scheduled.\n\t\t *\n\t\t * @param int $failure_threshold Number of actions of the same hook to examine for failure. Defaults to 5.\n\t\t *\/\n\t\t$consistent_failure_threshold = (int) apply_filters( 'action_scheduler_recurring_action_failure_threshold', 5 );\n\n\t\t\/\/ This query should find the earliest *failing* action (for the hook we are interested in) within our threshold.\n\t\t$query_args = array(\n\t\t\t'hook'         => $action->get_hook(),\n\t\t\t'status'       => ActionScheduler_Store::STATUS_FAILED,\n\t\t\t'date'         => date_create( 'now', timezone_open( 'UTC' ) )->format( 'Y-m-d H:i:s' ),\n\t\t\t'date_compare' => '<',\n\t\t\t'per_page'     => 1,\n\t\t\t'offset'       => $consistent_failure_threshold - 1,\n\t\t);\n\n\t\t$first_failing_action_id = $this->store->query_actions( $query_args );\n\n\t\t\/\/ If we didn't retrieve an action ID, then there haven't been enough failures for us to worry about.\n\t\tif ( empty( $first_failing_action_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Now let's fetch the first action (having the same hook) of *any status* within the same window.\n\t\tunset( $query_args['status'] );\n\t\t$first_action_id_with_the_same_hook = $this->store->query_actions( $query_args );\n\n\t\t\/**\n\t\t * If a recurring action is assessed as consistently failing, it will not be rescheduled. This hook provides a\n\t\t * way to observe and optionally override that assessment.\n\t\t *\n\t\t * @param bool                   $is_consistently_failing If the action is considered to be consistently failing.\n\t\t * @param ActionScheduler_Action $action                  The action being assessed.\n\t\t *\/\n\t\treturn (bool) apply_filters(\n\t\t\t'action_scheduler_recurring_action_is_consistently_failing',\n\t\t\t$first_action_id_with_the_same_hook === $first_failing_action_id,\n\t\t\t$action\n\t\t);\n\t}\n\n\t\/**\n\t * Run the queue cleaner.\n\t *\/\n\tprotected function run_cleanup() {\n\t\t$this->cleaner->clean( 10 * $this->get_time_limit() );\n\t}\n\n\t\/**\n\t * Get the number of concurrent batches a runner allows.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_allowed_concurrent_batches() {\n\t\treturn apply_filters( 'action_scheduler_queue_runner_concurrent_batches', 1 );\n\t}\n\n\t\/**\n\t * Check if the number of allowed concurrent batches is met or exceeded.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function has_maximum_concurrent_batches() {\n\t\treturn $this->store->get_claim_count() >= $this->get_allowed_concurrent_batches();\n\t}\n\n\t\/**\n\t * Get the maximum number of seconds a batch can run for.\n\t *\n\t * @return int The number of seconds.\n\t *\/\n\tprotected function get_time_limit() {\n\n\t\t$time_limit = 30;\n\n\t\t\/\/ Apply deprecated filter from deprecated get_maximum_execution_time() method.\n\t\tif ( has_filter( 'action_scheduler_maximum_execution_time' ) ) {\n\t\t\t_deprecated_function( 'action_scheduler_maximum_execution_time', '2.1.1', 'action_scheduler_queue_runner_time_limit' );\n\t\t\t$time_limit = apply_filters( 'action_scheduler_maximum_execution_time', $time_limit );\n\t\t}\n\n\t\treturn absint( apply_filters( 'action_scheduler_queue_runner_time_limit', $time_limit ) );\n\t}\n\n\t\/**\n\t * Get the number of seconds the process has been running.\n\t *\n\t * @return int The number of seconds.\n\t *\/\n\tprotected function get_execution_time() {\n\t\t$execution_time = microtime( true ) - $this->created_time;\n\n\t\t\/\/ Get the CPU time if the hosting environment uses it rather than wall-clock time to calculate a process's execution time.\n\t\tif ( function_exists( 'getrusage' ) && apply_filters( 'action_scheduler_use_cpu_execution_time', defined( 'PANTHEON_ENVIRONMENT' ) ) ) {\n\t\t\t$resource_usages = getrusage();\n\n\t\t\tif ( isset( $resource_usages['ru_stime.tv_usec'], $resource_usages['ru_stime.tv_usec'] ) ) {\n\t\t\t\t$execution_time = $resource_usages['ru_stime.tv_sec'] + ( $resource_usages['ru_stime.tv_usec'] \/ 1000000 );\n\t\t\t}\n\t\t}\n\n\t\treturn $execution_time;\n\t}\n\n\t\/**\n\t * Check if the host's max execution time is (likely) to be exceeded if processing more actions.\n\t *\n\t * @param int $processed_actions The number of actions processed so far - used to determine the likelihood of exceeding the time limit if processing another action.\n\t * @return bool\n\t *\/\n\tprotected function time_likely_to_be_exceeded( $processed_actions ) {\n\t\t$execution_time     = $this->get_execution_time();\n\t\t$max_execution_time = $this->get_time_limit();\n\n\t\t\/\/ Safety against division by zero errors.\n\t\tif ( 0 === $processed_actions ) {\n\t\t\treturn $execution_time >= $max_execution_time;\n\t\t}\n\n\t\t$time_per_action       = $execution_time \/ $processed_actions;\n\t\t$estimated_time        = $execution_time + ( $time_per_action * 3 );\n\t\t$likely_to_be_exceeded = $estimated_time > $max_execution_time;\n\n\t\treturn apply_filters( 'action_scheduler_maximum_execution_time_likely_to_be_exceeded', $likely_to_be_exceeded, $this, $processed_actions, $execution_time, $max_execution_time );\n\t}\n\n\t\/**\n\t * Get memory limit\n\t *\n\t * Based on WP_Background_Process::get_memory_limit()\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_memory_limit() {\n\t\tif ( function_exists( 'ini_get' ) ) {\n\t\t\t$memory_limit = ini_get( 'memory_limit' );\n\t\t} else {\n\t\t\t$memory_limit = '128M'; \/\/ Sensible default, and minimum required by WooCommerce.\n\t\t}\n\n\t\tif ( ! $memory_limit || -1 === $memory_limit || '-1' === $memory_limit ) {\n\t\t\t\/\/ Unlimited, set to 32GB.\n\t\t\t$memory_limit = '32G';\n\t\t}\n\n\t\treturn ActionScheduler_Compatibility::convert_hr_to_bytes( $memory_limit );\n\t}\n\n\t\/**\n\t * Memory exceeded\n\t *\n\t * Ensures the batch process never exceeds 90% of the maximum WordPress memory.\n\t *\n\t * Based on WP_Background_Process::memory_exceeded()\n\t *\n\t * @return bool\n\t *\/\n\tprotected function memory_exceeded() {\n\n\t\t$memory_limit    = $this->get_memory_limit() * 0.90;\n\t\t$current_memory  = memory_get_usage( true );\n\t\t$memory_exceeded = $current_memory >= $memory_limit;\n\n\t\treturn apply_filters( 'action_scheduler_memory_exceeded', $memory_exceeded, $this );\n\t}\n\n\t\/**\n\t * See if the batch limits have been exceeded, which is when memory usage is almost at\n\t * the maximum limit, or the time to process more actions will exceed the max time limit.\n\t *\n\t * Based on WC_Background_Process::batch_limits_exceeded()\n\t *\n\t * @param int $processed_actions The number of actions processed so far - used to determine the likelihood of exceeding the time limit if processing another action.\n\t * @return bool\n\t *\/\n\tprotected function batch_limits_exceeded( $processed_actions ) {\n\t\treturn $this->memory_exceeded() || $this->time_likely_to_be_exceeded( $processed_actions );\n\t}\n\n\t\/**\n\t * Process actions in the queue.\n\t *\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t *\/\n\tabstract public function run( $context = '' );\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_RecurringSchedule.php","ext":"php","size":3302,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Abstract_RecurringSchedule\n *\/\nabstract class ActionScheduler_Abstract_RecurringSchedule extends ActionScheduler_Abstract_Schedule {\n\n\t\/**\n\t * The date & time the first instance of this schedule was setup to run (which may not be this instance).\n\t *\n\t * Schedule objects are attached to an action object. Each schedule stores the run date for that\n\t * object as the start date - @see $this->start - and logic to calculate the next run date after\n\t * that - @see $this->calculate_next(). The $first_date property also keeps a record of when the very\n\t * first instance of this chain of schedules ran.\n\t *\n\t * @var DateTime\n\t *\/\n\tprivate $first_date = null;\n\n\t\/**\n\t * Timestamp equivalent of @see $this->first_date\n\t *\n\t * @var int\n\t *\/\n\tprotected $first_timestamp = null;\n\n\t\/**\n\t * The recurrence between each time an action is run using this schedule.\n\t * Used to calculate the start date & time. Can be a number of seconds, in the\n\t * case of ActionScheduler_IntervalSchedule, or a cron expression, as in the\n\t * case of ActionScheduler_CronSchedule. Or something else.\n\t *\n\t * @var mixed\n\t *\/\n\tprotected $recurrence;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param DateTime      $date The date & time to run the action.\n\t * @param mixed         $recurrence The data used to determine the schedule's recurrence.\n\t * @param DateTime|null $first (Optional) The date & time the first instance of this interval schedule ran. Default null, meaning this is the first instance.\n\t *\/\n\tpublic function __construct( DateTime $date, $recurrence, ?DateTime $first = null ) {\n\t\tparent::__construct( $date );\n\t\t$this->first_date = empty( $first ) ? $date : $first;\n\t\t$this->recurrence = $recurrence;\n\t}\n\n\t\/**\n\t * Schedule is recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring() {\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get the date & time of the first schedule in this recurring series.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_first_date() {\n\t\treturn clone $this->first_date;\n\t}\n\n\t\/**\n\t * Get the schedule's recurrence.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_recurrence() {\n\t\treturn $this->recurrence;\n\t}\n\n\t\/**\n\t * For PHP 5.2 compat, since DateTime objects can't be serialized\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\t\t$sleep_params          = parent::__sleep();\n\t\t$this->first_timestamp = $this->first_date->getTimestamp();\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'first_timestamp',\n\t\t\t\t'recurrence',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize recurring schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. This was addressed in\n\t * Action Scheduler 3.0.0, where properties and property names were aligned for better\n\t * inheritance. To maintain backward compatibility with scheduled serialized and stored\n\t * prior to 3.0, we need to correctly map the old property names.\n\t *\/\n\tpublic function __wakeup() {\n\t\tparent::__wakeup();\n\t\tif ( $this->first_timestamp > 0 ) {\n\t\t\t$this->first_date = as_get_datetime_object( $this->first_timestamp );\n\t\t} else {\n\t\t\t$this->first_date = $this->get_date();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_Schedule.php","ext":"php","size":1895,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Abstract_Schedule\n *\/\nabstract class ActionScheduler_Abstract_Schedule extends ActionScheduler_Schedule_Deprecated {\n\n\t\/**\n\t * The date & time the schedule is set to run.\n\t *\n\t * @var DateTime\n\t *\/\n\tprivate $scheduled_date = null;\n\n\t\/**\n\t * Timestamp equivalent of @see $this->scheduled_date\n\t *\n\t * @var int\n\t *\/\n\tprotected $scheduled_timestamp = null;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param DateTime $date The date & time to run the action.\n\t *\/\n\tpublic function __construct( DateTime $date ) {\n\t\t$this->scheduled_date = $date;\n\t}\n\n\t\/**\n\t * Check if a schedule should recur.\n\t *\n\t * @return bool\n\t *\/\n\tabstract public function is_recurring();\n\n\t\/**\n\t * Calculate when the next instance of this schedule would run based on a given date & time.\n\t *\n\t * @param DateTime $after Start timestamp.\n\t * @return DateTime\n\t *\/\n\tabstract protected function calculate_next( DateTime $after );\n\n\t\/**\n\t * Get the next date & time when this schedule should run after a given date & time.\n\t *\n\t * @param DateTime $after Start timestamp.\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_next( DateTime $after ) {\n\t\t$after = clone $after;\n\t\tif ( $after > $this->scheduled_date ) {\n\t\t\t$after = $this->calculate_next( $after );\n\t\t\treturn $after;\n\t\t}\n\t\treturn clone $this->scheduled_date;\n\t}\n\n\t\/**\n\t * Get the date & time the schedule is set to run.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_date() {\n\t\treturn $this->scheduled_date;\n\t}\n\n\t\/**\n\t * For PHP 5.2 compat, because DateTime objects can't be serialized\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\t\t$this->scheduled_timestamp = $this->scheduled_date->getTimestamp();\n\t\treturn array(\n\t\t\t'scheduled_timestamp',\n\t\t);\n\t}\n\n\t\/**\n\t * Wakeup.\n\t *\/\n\tpublic function __wakeup() {\n\t\t$this->scheduled_date = as_get_datetime_object( $this->scheduled_timestamp );\n\t\tunset( $this->scheduled_timestamp );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Store.php","ext":"php","size":14393,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Store\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler_Store extends ActionScheduler_Store_Deprecated {\n\tconst STATUS_COMPLETE = 'complete';\n\tconst STATUS_PENDING  = 'pending';\n\tconst STATUS_RUNNING  = 'in-progress';\n\tconst STATUS_FAILED   = 'failed';\n\tconst STATUS_CANCELED = 'canceled';\n\tconst DEFAULT_CLASS   = 'ActionScheduler_wpPostStore';\n\n\t\/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate static $store = null;\n\n\t\/**\n\t * Maximum length of args.\n\t *\n\t * @var int\n\t *\/\n\tprotected static $max_args_length = 191;\n\n\t\/**\n\t * Save action.\n\t *\n\t * @param ActionScheduler_Action $action Action to save.\n\t * @param null|DateTime          $scheduled_date Optional Date of the first instance\n\t *                                               to store. Otherwise uses the first date of the action's\n\t *                                               schedule.\n\t *\n\t * @return int The action ID\n\t *\/\n\tabstract public function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null );\n\n\t\/**\n\t * Get action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_Action\n\t *\/\n\tabstract public function fetch_action( $action_id );\n\n\t\/**\n\t * Find an action.\n\t *\n\t * Note: the query ordering changes based on the passed 'status' value.\n\t *\n\t * @param string $hook Action hook.\n\t * @param array  $params Parameters of the action to find.\n\t *\n\t * @return string|null ID of the next action matching the criteria or NULL if not found.\n\t *\/\n\tpublic function find_action( $hook, $params = array() ) {\n\t\t$params = wp_parse_args(\n\t\t\t$params,\n\t\t\tarray(\n\t\t\t\t'args'   => null,\n\t\t\t\t'status' => self::STATUS_PENDING,\n\t\t\t\t'group'  => '',\n\t\t\t)\n\t\t);\n\n\t\t\/\/ These params are fixed for this method.\n\t\t$params['hook']     = $hook;\n\t\t$params['orderby']  = 'date';\n\t\t$params['per_page'] = 1;\n\n\t\tif ( ! empty( $params['status'] ) ) {\n\t\t\tif ( self::STATUS_PENDING === $params['status'] ) {\n\t\t\t\t$params['order'] = 'ASC'; \/\/ Find the next action that matches.\n\t\t\t} else {\n\t\t\t\t$params['order'] = 'DESC'; \/\/ Find the most recent action that matches.\n\t\t\t}\n\t\t}\n\n\t\t$results = $this->query_actions( $params );\n\n\t\treturn empty( $results ) ? null : $results[0];\n\t}\n\n\t\/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @param array  $query {\n\t *      Query filtering options.\n\t *\n\t *      @type string       $hook             The name of the actions. Optional.\n\t *      @type string|array $status           The status or statuses of the actions. Optional.\n\t *      @type array        $args             The args array of the actions. Optional.\n\t *      @type DateTime     $date             The scheduled date of the action. Used in UTC timezone. Optional.\n\t *      @type string       $date_compare     Operator for selecting by $date param. Accepted values are '!=', '>', '>=', '<', '<=', '='. Defaults to '<='.\n\t *      @type DateTime     $modified         The last modified date of the action. Used in UTC timezone. Optional.\n\t *      @type string       $modified_compare Operator for comparing $modified param. Accepted values are '!=', '>', '>=', '<', '<=', '='. Defaults to '<='.\n\t *      @type string       $group            The group the action belongs to. Optional.\n\t *      @type bool|int     $claimed          TRUE to find claimed actions, FALSE to find unclaimed actions, an int to find a specific claim ID. Optional.\n\t *      @type int          $per_page         Number of results to return. Defaults to 5.\n\t *      @type int          $offset           The query pagination offset. Defaults to 0.\n\t *      @type int          $orderby          Accepted values are 'hook', 'group', 'modified', 'date' or 'none'. Defaults to 'date'.\n\t *      @type string       $order            Accepted values are 'ASC' or 'DESC'. Defaults to 'ASC'.\n\t * }\n\t * @param string $query_type Whether to select or count the results. Default, select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t *\/\n\tabstract public function query_actions( $query = array(), $query_type = 'select' );\n\n\t\/**\n\t * Run query to get a single action ID.\n\t *\n\t * @since 3.3.0\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage but 'per_page' and 'offset' can't be used.\n\t *\n\t * @param array $query Query parameters.\n\t *\n\t * @return int|null\n\t *\/\n\tpublic function query_action( $query ) {\n\t\t$query['per_page'] = 1;\n\t\t$query['offset']   = 0;\n\t\t$results           = $this->query_actions( $query );\n\n\t\tif ( empty( $results ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn (int) $results[0];\n\t\t}\n\t}\n\n\t\/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array\n\t *\/\n\tabstract public function action_counts();\n\n\t\/**\n\t * Get additional action counts.\n\t *\n\t * - add past-due actions\n\t *\n\t * @return array\n\t *\/\n\tpublic function extra_action_counts() {\n\t\t$extra_actions = array();\n\n\t\t$pastdue_action_counts = (int) $this->query_actions(\n\t\t\tarray(\n\t\t\t\t'status' => self::STATUS_PENDING,\n\t\t\t\t'date'   => as_get_datetime_object(),\n\t\t\t),\n\t\t\t'count'\n\t\t);\n\n\t\tif ( $pastdue_action_counts ) {\n\t\t\t$extra_actions['past-due'] = $pastdue_action_counts;\n\t\t}\n\n\t\t\/**\n\t\t * Allows 3rd party code to add extra action counts (used in filters in the list table).\n\t\t *\n\t\t * @since 3.5.0\n\t\t * @param $extra_actions array Array with format action_count_identifier => action count.\n\t\t *\/\n\t\treturn apply_filters( 'action_scheduler_extra_action_counts', $extra_actions );\n\t}\n\n\t\/**\n\t * Cancel action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function cancel_action( $action_id );\n\n\t\/**\n\t * Delete action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function delete_action( $action_id );\n\n\t\/**\n\t * Get action's schedule or run timestamp.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return DateTime The date the action is schedule to run, or the date that it ran.\n\t *\/\n\tabstract public function get_date( $action_id );\n\n\n\t\/**\n\t * Make a claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions to claim.\n\t * @param DateTime|null $before_date Claim only actions schedule before the given date. Defaults to now.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t *\/\n\tabstract public function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' );\n\n\t\/**\n\t * Get claim count.\n\t *\n\t * @return int\n\t *\/\n\tabstract public function get_claim_count();\n\n\t\/**\n\t * Release the claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t *\/\n\tabstract public function release_claim( ActionScheduler_ActionClaim $claim );\n\n\t\/**\n\t * Un-claim the action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function unclaim_action( $action_id );\n\n\t\/**\n\t * Mark action as failed.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function mark_failure( $action_id );\n\n\t\/**\n\t * Log action's execution.\n\t *\n\t * @param string $action_id Actoin ID.\n\t *\/\n\tabstract public function log_execution( $action_id );\n\n\t\/**\n\t * Mark action as complete.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function mark_complete( $action_id );\n\n\t\/**\n\t * Get action's status.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return string\n\t *\/\n\tabstract public function get_status( $action_id );\n\n\t\/**\n\t * Get action's claim ID.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return mixed\n\t *\/\n\tabstract public function get_claim_id( $action_id );\n\n\t\/**\n\t * Find actions by claim ID.\n\t *\n\t * @param string $claim_id Claim ID.\n\t * @return array\n\t *\/\n\tabstract public function find_actions_by_claim_id( $claim_id );\n\n\t\/**\n\t * Validate SQL operator.\n\t *\n\t * @param string $comparison_operator Operator.\n\t * @return string\n\t *\/\n\tprotected function validate_sql_comparator( $comparison_operator ) {\n\t\tif ( in_array( $comparison_operator, array( '!=', '>', '>=', '<', '<=', '=' ), true ) ) {\n\t\t\treturn $comparison_operator;\n\t\t}\n\n\t\treturn '=';\n\t}\n\n\t\/**\n\t * Get the time MySQL formatted date\/time string for an action's (next) scheduled date.\n\t *\n\t * @param ActionScheduler_Action $action Action.\n\t * @param null|DateTime          $scheduled_date Action's schedule date (optional).\n\t * @return string\n\t *\/\n\tprotected function get_scheduled_date_string( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$next = is_null( $scheduled_date ) ? $action->get_schedule()->get_date() : $scheduled_date;\n\n\t\tif ( ! $next ) {\n\t\t\t$next = date_create();\n\t\t}\n\n\t\t$next->setTimezone( new DateTimeZone( 'UTC' ) );\n\n\t\treturn $next->format( 'Y-m-d H:i:s' );\n\t}\n\n\t\/**\n\t * Get the time MySQL formatted date\/time string for an action's (next) scheduled date.\n\t *\n\t * @param ActionScheduler_Action|null $action Action.\n\t * @param null|DateTime               $scheduled_date Action's scheduled date (optional).\n\t * @return string\n\t *\/\n\tprotected function get_scheduled_date_string_local( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$next = is_null( $scheduled_date ) ? $action->get_schedule()->get_date() : $scheduled_date;\n\n\t\tif ( ! $next ) {\n\t\t\t$next = date_create();\n\t\t}\n\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $next );\n\t\treturn $next->format( 'Y-m-d H:i:s' );\n\t}\n\n\t\/**\n\t * Validate that we could decode action arguments.\n\t *\n\t * @param mixed $args      The decoded arguments.\n\t * @param int   $action_id The action ID.\n\t *\n\t * @throws ActionScheduler_InvalidActionException When the decoded arguments are invalid.\n\t *\/\n\tprotected function validate_args( $args, $action_id ) {\n\t\t\/\/ Ensure we have an array of args.\n\t\tif ( ! is_array( $args ) ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_decoding_args( $action_id );\n\t\t}\n\n\t\t\/\/ Validate JSON decoding if possible.\n\t\tif ( function_exists( 'json_last_error' ) && JSON_ERROR_NONE !== json_last_error() ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_decoding_args( $action_id, $args );\n\t\t}\n\t}\n\n\t\/**\n\t * Validate a ActionScheduler_Schedule object.\n\t *\n\t * @param mixed $schedule  The unserialized ActionScheduler_Schedule object.\n\t * @param int   $action_id The action ID.\n\t *\n\t * @throws ActionScheduler_InvalidActionException When the schedule is invalid.\n\t *\/\n\tprotected function validate_schedule( $schedule, $action_id ) {\n\t\tif ( empty( $schedule ) || ! is_a( $schedule, 'ActionScheduler_Schedule' ) ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_schedule( $action_id, $schedule );\n\t\t}\n\t}\n\n\t\/**\n\t * InnoDB indexes have a maximum size of 767 bytes by default, which is only 191 characters with utf8mb4.\n\t *\n\t * Previously, AS wasn't concerned about args length, as we used the (unindex) post_content column. However,\n\t * with custom tables, we use an indexed VARCHAR column instead.\n\t *\n\t * @param  ActionScheduler_Action $action Action to be validated.\n\t * @throws InvalidArgumentException When json encoded args is too long.\n\t *\/\n\tprotected function validate_action( ActionScheduler_Action $action ) {\n\t\tif ( strlen( wp_json_encode( $action->get_args() ) ) > static::$max_args_length ) {\n\t\t\t\/\/ translators: %d is a number (maximum length of action arguments).\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'ActionScheduler_Action::$args too long. To ensure the args column can be indexed, action args should not be more than %d characters when encoded as JSON.', 'action-scheduler' ), static::$max_args_length ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel pending actions by hook.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $hook Hook name.\n\t *\n\t * @return void\n\t *\/\n\tpublic function cancel_actions_by_hook( $hook ) {\n\t\t$action_ids = true;\n\t\twhile ( ! empty( $action_ids ) ) {\n\t\t\t$action_ids = $this->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'hook'     => $hook,\n\t\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t\t'per_page' => 1000,\n\t\t\t\t\t'orderby'  => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$this->bulk_cancel_actions( $action_ids );\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel pending actions by group.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $group Group slug.\n\t *\n\t * @return void\n\t *\/\n\tpublic function cancel_actions_by_group( $group ) {\n\t\t$action_ids = true;\n\t\twhile ( ! empty( $action_ids ) ) {\n\t\t\t$action_ids = $this->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'group'    => $group,\n\t\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t\t'per_page' => 1000,\n\t\t\t\t\t'orderby'  => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$this->bulk_cancel_actions( $action_ids );\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel a set of action IDs.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param int[] $action_ids List of action IDs.\n\t *\n\t * @return void\n\t *\/\n\tprivate function bulk_cancel_actions( $action_ids ) {\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->cancel_action( $action_id );\n\t\t}\n\n\t\tdo_action( 'action_scheduler_bulk_cancel_actions', $action_ids );\n\t}\n\n\t\/**\n\t * Get status labels.\n\t *\n\t * @return array<string, string>\n\t *\/\n\tpublic function get_status_labels() {\n\t\treturn array(\n\t\t\tself::STATUS_COMPLETE => __( 'Complete', 'action-scheduler' ),\n\t\t\tself::STATUS_PENDING  => __( 'Pending', 'action-scheduler' ),\n\t\t\tself::STATUS_RUNNING  => __( 'In-progress', 'action-scheduler' ),\n\t\t\tself::STATUS_FAILED   => __( 'Failed', 'action-scheduler' ),\n\t\t\tself::STATUS_CANCELED => __( 'Canceled', 'action-scheduler' ),\n\t\t);\n\t}\n\n\t\/**\n\t * Check if there are any pending scheduled actions due to run.\n\t *\n\t * @return string\n\t *\/\n\tpublic function has_pending_actions_due() {\n\t\t$pending_actions = $this->query_actions(\n\t\t\tarray(\n\t\t\t\t'per_page' => 1,\n\t\t\t\t'date'     => as_get_datetime_object(),\n\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t'orderby'  => 'none',\n\t\t\t),\n\t\t\t'count'\n\t\t);\n\n\t\treturn ! empty( $pending_actions );\n\t}\n\n\t\/**\n\t * Callable initialization function optionally overridden in derived classes.\n\t *\/\n\tpublic function init() {}\n\n\t\/**\n\t * Callable function to mark an action as migrated optionally overridden in derived classes.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function mark_migrated( $action_id ) {}\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Store\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$store ) ) {\n\t\t\t$class       = apply_filters( 'action_scheduler_store_class', self::DEFAULT_CLASS );\n\t\t\tself::$store = new $class();\n\t\t}\n\t\treturn self::$store;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_TimezoneHelper.php","ext":"php","size":4877,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_TimezoneHelper\n *\/\nabstract class ActionScheduler_TimezoneHelper {\n\n\t\/**\n\t * DateTimeZone object.\n\t *\n\t * @var null|DateTimeZone\n\t *\/\n\tprivate static $local_timezone = null;\n\n\t\/**\n\t * Set a DateTime's timezone to the WordPress site's timezone, or a UTC offset\n\t * if no timezone string is available.\n\t *\n\t * @since  2.1.0\n\t *\n\t * @param DateTime $date Timestamp.\n\t * @return ActionScheduler_DateTime\n\t *\/\n\tpublic static function set_local_timezone( DateTime $date ) {\n\n\t\t\/\/ Accept a DateTime for easier backward compatibility, even though we require methods on ActionScheduler_DateTime.\n\t\tif ( ! is_a( $date, 'ActionScheduler_DateTime' ) ) {\n\t\t\t$date = as_get_datetime_object( $date->format( 'U' ) );\n\t\t}\n\n\t\tif ( get_option( 'timezone_string' ) ) {\n\t\t\t$date->setTimezone( new DateTimeZone( self::get_local_timezone_string() ) );\n\t\t} else {\n\t\t\t$date->setUtcOffset( self::get_local_timezone_offset() );\n\t\t}\n\n\t\treturn $date;\n\t}\n\n\t\/**\n\t * Helper to retrieve the timezone string for a site until a WP core method exists\n\t * (see https:\/\/core.trac.wordpress.org\/ticket\/24730).\n\t *\n\t * Adapted from wc_timezone_string() and https:\/\/secure.php.net\/manual\/en\/function.timezone-name-from-abbr.php#89155.\n\t *\n\t * If no timezone string is set, and its not possible to match the UTC offset set for the site to a timezone\n\t * string, then an empty string will be returned, and the UTC offset should be used to set a DateTime's\n\t * timezone.\n\t *\n\t * @since 2.1.0\n\t * @param bool $reset Unused.\n\t * @return string PHP timezone string for the site or empty if no timezone string is available.\n\t *\/\n\tprotected static function get_local_timezone_string( $reset = false ) {\n\t\t\/\/ If site timezone string exists, return it.\n\t\t$timezone = get_option( 'timezone_string' );\n\t\tif ( $timezone ) {\n\t\t\treturn $timezone;\n\t\t}\n\n\t\t\/\/ Get UTC offset, if it isn't set then return UTC.\n\t\t$utc_offset = intval( get_option( 'gmt_offset', 0 ) );\n\t\tif ( 0 === $utc_offset ) {\n\t\t\treturn 'UTC';\n\t\t}\n\n\t\t\/\/ Adjust UTC offset from hours to seconds.\n\t\t$utc_offset *= 3600;\n\n\t\t\/\/ Attempt to guess the timezone string from the UTC offset.\n\t\t$timezone = timezone_name_from_abbr( '', $utc_offset );\n\t\tif ( $timezone ) {\n\t\t\treturn $timezone;\n\t\t}\n\n\t\t\/\/ Last try, guess timezone string manually.\n\t\tforeach ( timezone_abbreviations_list() as $abbr ) {\n\t\t\tforeach ( $abbr as $city ) {\n\t\t\t\tif ( (bool) date( 'I' ) === (bool) $city['dst'] && $city['timezone_id'] && intval( $city['offset'] ) === $utc_offset ) { \/\/ phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date\t -- we are actually interested in the runtime timezone.\n\t\t\t\t\treturn $city['timezone_id'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/\/ No timezone string.\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Get timezone offset in seconds.\n\t *\n\t * @since  2.1.0\n\t * @return float\n\t *\/\n\tprotected static function get_local_timezone_offset() {\n\t\t$timezone = get_option( 'timezone_string' );\n\n\t\tif ( $timezone ) {\n\t\t\t$timezone_object = new DateTimeZone( $timezone );\n\t\t\treturn $timezone_object->getOffset( new DateTime( 'now' ) );\n\t\t} else {\n\t\t\treturn floatval( get_option( 'gmt_offset', 0 ) ) * HOUR_IN_SECONDS;\n\t\t}\n\t}\n\n\t\/**\n\t * Get local timezone.\n\t *\n\t * @param bool $reset Toggle to discard stored value.\n\t * @deprecated 2.1.0\n\t *\/\n\tpublic static function get_local_timezone( $reset = false ) {\n\t\t_deprecated_function( __FUNCTION__, '2.1.0', 'ActionScheduler_TimezoneHelper::set_local_timezone()' );\n\t\tif ( $reset ) {\n\t\t\tself::$local_timezone = null;\n\t\t}\n\t\tif ( ! isset( self::$local_timezone ) ) {\n\t\t\t$tzstring = get_option( 'timezone_string' );\n\n\t\t\tif ( empty( $tzstring ) ) {\n\t\t\t\t$gmt_offset = absint( get_option( 'gmt_offset' ) );\n\t\t\t\tif ( 0 === $gmt_offset ) {\n\t\t\t\t\t$tzstring = 'UTC';\n\t\t\t\t} else {\n\t\t\t\t\t$gmt_offset *= HOUR_IN_SECONDS;\n\t\t\t\t\t$tzstring    = timezone_name_from_abbr( '', $gmt_offset, 1 );\n\n\t\t\t\t\t\/\/ If there's no timezone string, try again with no DST.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$tzstring = timezone_name_from_abbr( '', $gmt_offset, 0 );\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/ Try mapping to the first abbreviation we can find.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$is_dst = date( 'I' ); \/\/ phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date\t -- we are actually interested in the runtime timezone.\n\t\t\t\t\t\tforeach ( timezone_abbreviations_list() as $abbr ) {\n\t\t\t\t\t\t\tforeach ( $abbr as $city ) {\n\t\t\t\t\t\t\t\tif ( $city['dst'] === $is_dst && $city['offset'] === $gmt_offset ) {\n\t\t\t\t\t\t\t\t\t\/\/ If there's no valid timezone ID, keep looking.\n\t\t\t\t\t\t\t\t\tif ( is_null( $city['timezone_id'] ) ) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$tzstring = $city['timezone_id'];\n\t\t\t\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/ If we still have no valid string, then fall back to UTC.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$tzstring = 'UTC';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself::$local_timezone = new DateTimeZone( $tzstring );\n\t\t}\n\t\treturn self::$local_timezone;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler.php","ext":"php","size":11405,"mtime":1756373567,"type":"text","content":"<?php\n\nuse Action_Scheduler\\WP_CLI\\Migration_Command;\nuse Action_Scheduler\\Migration\\Controller;\n\n\/**\n * Class ActionScheduler\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler {\n\n\t\/**\n\t * Plugin file path.\n\t *\n\t * @var string\n\t *\/\n\tprivate static $plugin_file = '';\n\n\t\/**\n\t * ActionScheduler_ActionFactory instance.\n\t *\n\t * @var ActionScheduler_ActionFactory\n\t *\/\n\tprivate static $factory = null;\n\n\t\/**\n\t * Data store is initialized.\n\t *\n\t * @var bool\n\t *\/\n\tprivate static $data_store_initialized = false;\n\n\t\/**\n\t * Factory.\n\t *\/\n\tpublic static function factory() {\n\t\tif ( ! isset( self::$factory ) ) {\n\t\t\tself::$factory = new ActionScheduler_ActionFactory();\n\t\t}\n\t\treturn self::$factory;\n\t}\n\n\t\/**\n\t * Get Store instance.\n\t *\/\n\tpublic static function store() {\n\t\treturn ActionScheduler_Store::instance();\n\t}\n\n\t\/**\n\t * Get Lock instance.\n\t *\/\n\tpublic static function lock() {\n\t\treturn ActionScheduler_Lock::instance();\n\t}\n\n\t\/**\n\t * Get Logger instance.\n\t *\/\n\tpublic static function logger() {\n\t\treturn ActionScheduler_Logger::instance();\n\t}\n\n\t\/**\n\t * Get QueueRunner instance.\n\t *\/\n\tpublic static function runner() {\n\t\treturn ActionScheduler_QueueRunner::instance();\n\t}\n\n\t\/**\n\t * Get AdminView instance.\n\t *\/\n\tpublic static function admin_view() {\n\t\treturn ActionScheduler_AdminView::instance();\n\t}\n\n\t\/**\n\t * Get the absolute system path to the plugin directory, or a file therein\n\t *\n\t * @static\n\t * @param string $path Path relative to plugin directory.\n\t * @return string\n\t *\/\n\tpublic static function plugin_path( $path ) {\n\t\t$base = dirname( self::$plugin_file );\n\t\tif ( $path ) {\n\t\t\treturn trailingslashit( $base ) . $path;\n\t\t} else {\n\t\t\treturn untrailingslashit( $base );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the absolute URL to the plugin directory, or a file therein\n\t *\n\t * @static\n\t * @param string $path Path relative to plugin directory.\n\t * @return string\n\t *\/\n\tpublic static function plugin_url( $path ) {\n\t\treturn plugins_url( $path, self::$plugin_file );\n\t}\n\n\t\/**\n\t * Autoload.\n\t *\n\t * @param string $class Class name.\n\t *\/\n\tpublic static function autoload( $class ) {\n\t\t$d           = DIRECTORY_SEPARATOR;\n\t\t$classes_dir = self::plugin_path( 'classes' . $d );\n\t\t$separator   = strrpos( $class, '\\\\' );\n\t\tif ( false !== $separator ) {\n\t\t\tif ( 0 !== strpos( $class, 'Action_Scheduler' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$class = substr( $class, $separator + 1 );\n\t\t}\n\n\t\tif ( 'Deprecated' === substr( $class, -10 ) ) {\n\t\t\t$dir = self::plugin_path( 'deprecated' . $d );\n\t\t} elseif ( self::is_class_abstract( $class ) ) {\n\t\t\t$dir = $classes_dir . 'abstracts' . $d;\n\t\t} elseif ( self::is_class_migration( $class ) ) {\n\t\t\t$dir = $classes_dir . 'migration' . $d;\n\t\t} elseif ( 'Schedule' === substr( $class, -8 ) ) {\n\t\t\t$dir = $classes_dir . 'schedules' . $d;\n\t\t} elseif ( 'Action' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'actions' . $d;\n\t\t} elseif ( 'Schema' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'schema' . $d;\n\t\t} elseif ( strpos( $class, 'ActionScheduler' ) === 0 ) {\n\t\t\t$segments = explode( '_', $class );\n\t\t\t$type     = isset( $segments[1] ) ? $segments[1] : '';\n\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase 'WPCLI':\n\t\t\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DBLogger':\n\t\t\t\tcase 'DBStore':\n\t\t\t\tcase 'HybridStore':\n\t\t\t\tcase 'wpPostStore':\n\t\t\t\tcase 'wpCommentLogger':\n\t\t\t\t\t$dir = $classes_dir . 'data-stores' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$dir = $classes_dir;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} elseif ( self::is_class_cli( $class ) ) {\n\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t} elseif ( strpos( $class, 'CronExpression' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d . 'cron-expression' . $d );\n\t\t} elseif ( strpos( $class, 'WP_Async_Request' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d );\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( file_exists( $dir . \"{$class}.php\" ) ) {\n\t\t\tinclude $dir . \"{$class}.php\";\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Initialize the plugin\n\t *\n\t * @static\n\t * @param string $plugin_file Plugin file path.\n\t *\/\n\tpublic static function init( $plugin_file ) {\n\t\tself::$plugin_file = $plugin_file;\n\t\tspl_autoload_register( array( __CLASS__, 'autoload' ) );\n\n\t\t\/**\n\t\t * Fires in the early stages of Action Scheduler init hook.\n\t\t *\/\n\t\tdo_action( 'action_scheduler_pre_init' );\n\n\t\trequire_once self::plugin_path( 'functions.php' );\n\t\tActionScheduler_DataController::init();\n\n\t\t$store                      = self::store();\n\t\t$logger                     = self::logger();\n\t\t$runner                     = self::runner();\n\t\t$admin_view                 = self::admin_view();\n\t\t$recurring_action_scheduler = new ActionScheduler_RecurringActionScheduler();\n\n\t\t\/\/ Ensure initialization on plugin activation.\n\t\tif ( ! did_action( 'init' ) ) {\n\t\t\t\/\/ phpcs:ignore Squiz.PHP.CommentedOutCode\n\t\t\tadd_action( 'init', array( $admin_view, 'init' ), 0, 0 ); \/\/ run before $store::init().\n\t\t\tadd_action( 'init', array( $store, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $logger, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $runner, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $recurring_action_scheduler, 'init' ), 1, 0 );\n\n\t\t\tadd_action(\n\t\t\t\t'init',\n\t\t\t\t\/**\n\t\t\t\t * Runs after the active store's init() method has been called.\n\t\t\t\t *\n\t\t\t\t * It would probably be preferable to have $store->init() (or it's parent method) set this itself,\n\t\t\t\t * once it has initialized, however that would cause problems in cases where a custom data store is in\n\t\t\t\t * use and it has not yet been updated to follow that same logic.\n\t\t\t\t *\/\n\t\t\t\tfunction () {\n\t\t\t\t\tself::$data_store_initialized = true;\n\n\t\t\t\t\t\/**\n\t\t\t\t\t * Fires when Action Scheduler is ready: it is safe to use the procedural API after this point.\n\t\t\t\t\t *\n\t\t\t\t\t * @since 3.5.5\n\t\t\t\t\t *\/\n\t\t\t\t\tdo_action( 'action_scheduler_init' );\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t} else {\n\t\t\t$admin_view->init();\n\t\t\t$store->init();\n\t\t\t$logger->init();\n\t\t\t$runner->init();\n\t\t\t$recurring_action_scheduler->init();\n\t\t\tself::$data_store_initialized = true;\n\n\t\t\t\/**\n\t\t\t * Fires when Action Scheduler is ready: it is safe to use the procedural API after this point.\n\t\t\t *\n\t\t\t * @since 3.5.5\n\t\t\t *\/\n\t\t\tdo_action( 'action_scheduler_init' );\n\t\t}\n\n\t\tif ( apply_filters( 'action_scheduler_load_deprecated_functions', true ) ) {\n\t\t\trequire_once self::plugin_path( 'deprecated\/functions.php' );\n\t\t}\n\n\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Scheduler_command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Clean_Command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler action', '\\Action_Scheduler\\WP_CLI\\Action_Command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler', '\\Action_Scheduler\\WP_CLI\\System_Command' );\n\t\t\tif ( ! ActionScheduler_DataController::is_migration_complete() && Controller::instance()->allow_migration() ) {\n\t\t\t\t$command = new Migration_Command();\n\t\t\t\t$command->register();\n\t\t\t}\n\t\t}\n\n\t\t\/**\n\t\t * Handle WP comment cleanup after migration.\n\t\t *\/\n\t\tif ( is_a( $logger, 'ActionScheduler_DBLogger' ) && ActionScheduler_DataController::is_migration_complete() && ActionScheduler_WPCommentCleaner::has_logs() ) {\n\t\t\tActionScheduler_WPCommentCleaner::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler\/migration_complete', 'ActionScheduler_WPCommentCleaner::maybe_schedule_cleanup' );\n\t}\n\n\t\/**\n\t * Check whether the AS data store has been initialized.\n\t *\n\t * @param string $function_name The name of the function being called. Optional. Default `null`.\n\t * @return bool\n\t *\/\n\tpublic static function is_initialized( $function_name = null ) {\n\t\tif ( ! self::$data_store_initialized && ! empty( $function_name ) ) {\n\t\t\t$message = sprintf(\n\t\t\t\t\/* translators: %s function name. *\/\n\t\t\t\t__( '%s() was called before the Action Scheduler data store was initialized', 'action-scheduler' ),\n\t\t\t\tesc_attr( $function_name )\n\t\t\t);\n\t\t\t_doing_it_wrong( esc_html( $function_name ), esc_html( $message ), '3.1.6' );\n\t\t}\n\n\t\treturn self::$data_store_initialized;\n\t}\n\n\t\/**\n\t * Determine if the class is one of our abstract classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t *\/\n\tprotected static function is_class_abstract( $class ) {\n\t\tstatic $abstracts = array(\n\t\t\t'ActionScheduler'                            => true,\n\t\t\t'ActionScheduler_Abstract_ListTable'         => true,\n\t\t\t'ActionScheduler_Abstract_QueueRunner'       => true,\n\t\t\t'ActionScheduler_Abstract_Schedule'          => true,\n\t\t\t'ActionScheduler_Abstract_RecurringSchedule' => true,\n\t\t\t'ActionScheduler_Lock'                       => true,\n\t\t\t'ActionScheduler_Logger'                     => true,\n\t\t\t'ActionScheduler_Abstract_Schema'            => true,\n\t\t\t'ActionScheduler_Store'                      => true,\n\t\t\t'ActionScheduler_TimezoneHelper'             => true,\n\t\t\t'ActionScheduler_WPCLI_Command'              => true,\n\t\t);\n\n\t\treturn isset( $abstracts[ $class ] ) && $abstracts[ $class ];\n\t}\n\n\t\/**\n\t * Determine if the class is one of our migration classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t *\/\n\tprotected static function is_class_migration( $class ) {\n\t\tstatic $migration_segments = array(\n\t\t\t'ActionMigrator'  => true,\n\t\t\t'BatchFetcher'    => true,\n\t\t\t'DBStoreMigrator' => true,\n\t\t\t'DryRun'          => true,\n\t\t\t'LogMigrator'     => true,\n\t\t\t'Config'          => true,\n\t\t\t'Controller'      => true,\n\t\t\t'Runner'          => true,\n\t\t\t'Scheduler'       => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment  = isset( $segments[1] ) ? $segments[1] : $class;\n\n\t\treturn isset( $migration_segments[ $segment ] ) && $migration_segments[ $segment ];\n\t}\n\n\t\/**\n\t * Determine if the class is one of our WP CLI classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t *\/\n\tprotected static function is_class_cli( $class ) {\n\t\tstatic $cli_segments = array(\n\t\t\t'QueueRunner'                             => true,\n\t\t\t'Command'                                 => true,\n\t\t\t'ProgressBar'                             => true,\n\t\t\t'\\Action_Scheduler\\WP_CLI\\Action_Command' => true,\n\t\t\t'\\Action_Scheduler\\WP_CLI\\System_Command' => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment  = isset( $segments[1] ) ? $segments[1] : $class;\n\n\t\treturn isset( $cli_segments[ $segment ] ) && $cli_segments[ $segment ];\n\t}\n\n\t\/**\n\t * Clone.\n\t *\/\n\tfinal public function __clone() {\n\t\ttrigger_error( 'Singleton. No cloning allowed!', E_USER_ERROR ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t}\n\n\t\/**\n\t * Wakeup.\n\t *\/\n\tfinal public function __wakeup() {\n\t\ttrigger_error( 'Singleton. No serialization allowed!', E_USER_ERROR ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t}\n\n\t\/**\n\t * Construct.\n\t *\/\n\tfinal private function __construct() {}\n\n\t\/** Deprecated **\/\n\n\t\/**\n\t * Get DateTime object.\n\t *\n\t * @param null|string $when     Date\/time string.\n\t * @param string      $timezone Timezone string.\n\t *\/\n\tpublic static function get_datetime_object( $when = null, $timezone = 'UTC' ) {\n\t\t_deprecated_function( __METHOD__, '2.0', 'wcs_add_months()' );\n\t\treturn as_get_datetime_object( $when, $timezone );\n\t}\n\n\t\/**\n\t * Issue deprecated warning if an Action Scheduler function is called in the shutdown hook.\n\t *\n\t * @param string $function_name The name of the function being called.\n\t * @deprecated 3.1.6.\n\t *\/\n\tpublic static function check_shutdown_hook( $function_name ) {\n\t\t_deprecated_function( __FUNCTION__, '3.1.6' );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Lock.php","ext":"php","size":1823,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Abstract class for setting a basic lock to throttle some action.\n *\n * Class ActionScheduler_Lock\n *\/\nabstract class ActionScheduler_Lock {\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var ActionScheduler_Lock\n\t *\/\n\tprivate static $locker = null;\n\n\t\/**\n\t * Duration of lock.\n\t *\n\t * @var int\n\t *\/\n\tprotected static $lock_duration = MINUTE_IN_SECONDS;\n\n\t\/**\n\t * Check if a lock is set for a given lock type.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool\n\t *\/\n\tpublic function is_locked( $lock_type ) {\n\t\treturn ( $this->get_expiration( $lock_type ) >= time() );\n\t}\n\n\t\/**\n\t * Set a lock.\n\t *\n\t * To prevent race conditions, implementations should avoid setting the lock if the lock is already held.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool\n\t *\/\n\tabstract public function set( $lock_type );\n\n\t\/**\n\t * If a lock is set, return the timestamp it was set to expiry.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool|int False if no lock is set, otherwise the timestamp for when the lock is set to expire.\n\t *\/\n\tabstract public function get_expiration( $lock_type );\n\n\t\/**\n\t * Get the amount of time to set for a given lock. 60 seconds by default.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return int\n\t *\/\n\tprotected function get_duration( $lock_type ) {\n\t\treturn apply_filters( 'action_scheduler_lock_duration', self::$lock_duration, $lock_type );\n\t}\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Lock\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$locker ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_lock_class', 'ActionScheduler_OptionLock' );\n\t\t\tself::$locker = new $class();\n\t\t}\n\t\treturn self::$locker;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Logger.php","ext":"php","size":8021,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Logger\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler_Logger {\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var null|self\n\t *\/\n\tprivate static $logger = null;\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Logger\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$logger ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_logger_class', 'ActionScheduler_wpCommentLogger' );\n\t\t\tself::$logger = new $class();\n\t\t}\n\t\treturn self::$logger;\n\t}\n\n\t\/**\n\t * Create log entry.\n\t *\n\t * @param string        $action_id Action ID.\n\t * @param string        $message   Log message.\n\t * @param DateTime|null $date      Log date.\n\t *\n\t * @return string The log entry ID\n\t *\/\n\tabstract public function log( $action_id, $message, ?DateTime $date = null );\n\n\t\/**\n\t * Get action's log entry.\n\t *\n\t * @param string $entry_id Entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t *\/\n\tabstract public function get_entry( $entry_id );\n\n\t\/**\n\t * Get action's logs.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t *\/\n\tabstract public function get_logs( $action_id );\n\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\t$this->hook_stored_action();\n\t\tadd_action( 'action_scheduler_canceled_action', array( $this, 'log_canceled_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_begin_execute', array( $this, 'log_started_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'log_completed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'log_failed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_action', array( $this, 'log_timed_out_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_unexpected_shutdown', array( $this, 'log_unexpected_shutdown' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_reset_action', array( $this, 'log_reset_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'log_ignored_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_fetch_action', array( $this, 'log_failed_fetch_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_to_schedule_next_instance', array( $this, 'log_failed_schedule_next_instance' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_bulk_cancel_actions', array( $this, 'bulk_log_cancel_actions' ), 10, 1 );\n\t}\n\n\t\/**\n\t * Register callback for storing action.\n\t *\/\n\tpublic function hook_stored_action() {\n\t\tadd_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\t\/**\n\t * Unhook callback for storing action.\n\t *\/\n\tpublic function unhook_stored_action() {\n\t\tremove_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\t\/**\n\t * Log action stored.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_stored_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action created', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Log action cancellation.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_canceled_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action canceled', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Log action start.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $context Action execution context.\n\t *\/\n\tpublic function log_started_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: %s: context *\/\n\t\t\t$message = sprintf( __( 'action started via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action started', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log action completion.\n\t *\n\t * @param int                         $action_id Action ID.\n\t * @param null|ActionScheduler_Action $action Action.\n\t * @param string                      $context Action execution context.\n\t *\/\n\tpublic function log_completed_action( $action_id, $action = null, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: %s: context *\/\n\t\t\t$message = sprintf( __( 'action complete via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action complete', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log action failure.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception.\n\t * @param string    $context Action execution context.\n\t *\/\n\tpublic function log_failed_action( $action_id, Exception $exception, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: 1: context 2: exception message *\/\n\t\t\t$message = sprintf( __( 'action failed via %1$s: %2$s', 'action-scheduler' ), $context, $exception->getMessage() );\n\t\t} else {\n\t\t\t\/* translators: %s: exception message *\/\n\t\t\t$message = sprintf( __( 'action failed: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log action timeout.\n\t *\n\t * @param int    $action_id  Action ID.\n\t * @param string $timeout Timeout.\n\t *\/\n\tpublic function log_timed_out_action( $action_id, $timeout ) {\n\t\t\/* translators: %s: amount of time *\/\n\t\t$this->log( $action_id, sprintf( __( 'action marked as failed after %s seconds. Unknown error occurred. Check server, PHP and database error logs to diagnose cause.', 'action-scheduler' ), $timeout ) );\n\t}\n\n\t\/**\n\t * Log unexpected shutdown.\n\t *\n\t * @param int     $action_id Action ID.\n\t * @param mixed[] $error     Error.\n\t *\/\n\tpublic function log_unexpected_shutdown( $action_id, $error ) {\n\t\tif ( ! empty( $error ) ) {\n\t\t\t\/* translators: 1: error message 2: filename 3: line *\/\n\t\t\t$this->log( $action_id, sprintf( __( 'unexpected shutdown: PHP Fatal error %1$s in %2$s on line %3$s', 'action-scheduler' ), $error['message'], $error['file'], $error['line'] ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Log action reset.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_reset_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action reset', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Log ignored action.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $context Action execution context.\n\t *\/\n\tpublic function log_ignored_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: %s: context *\/\n\t\t\t$message = sprintf( __( 'action ignored via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action ignored', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log the failure of fetching the action.\n\t *\n\t * @param string         $action_id Action ID.\n\t * @param null|Exception $exception The exception which occurred when fetching the action. NULL by default for backward compatibility.\n\t *\/\n\tpublic function log_failed_fetch_action( $action_id, ?Exception $exception = null ) {\n\n\t\tif ( ! is_null( $exception ) ) {\n\t\t\t\/* translators: %s: exception message *\/\n\t\t\t$log_message = sprintf( __( 'There was a failure fetching this action: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t} else {\n\t\t\t$log_message = __( 'There was a failure fetching this action', 'action-scheduler' );\n\t\t}\n\n\t\t$this->log( $action_id, $log_message );\n\t}\n\n\t\/**\n\t * Log the failure of scheduling the action's next instance.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception object.\n\t *\/\n\tpublic function log_failed_schedule_next_instance( $action_id, Exception $exception ) {\n\t\t\/* translators: %s: exception message *\/\n\t\t$this->log( $action_id, sprintf( __( 'There was a failure scheduling the next instance of this action: %s', 'action-scheduler' ), $exception->getMessage() ) );\n\t}\n\n\t\/**\n\t * Bulk add cancel action log entries.\n\t *\n\t * Implemented here for backward compatibility. Should be implemented in parent loggers\n\t * for more performant bulk logging.\n\t *\n\t * @param array $action_ids List of action ID.\n\t *\/\n\tpublic function bulk_log_cancel_actions( $action_ids ) {\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->log_canceled_action( $action_id );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_Schema.php","ext":"php","size":4899,"mtime":1756373567,"type":"text","content":"<?php\n\n\n\/**\n * Class ActionScheduler_Abstract_Schema\n *\n * @package Action_Scheduler\n *\n * @codeCoverageIgnore\n *\n * Utility class for creating\/updating custom tables\n *\/\nabstract class ActionScheduler_Abstract_Schema {\n\n\t\/**\n\t * Increment this value in derived class to trigger a schema update.\n\t *\n\t * @var int\n\t *\/\n\tprotected $schema_version = 1;\n\n\t\/**\n\t * Schema version stored in database.\n\t *\n\t * @var string\n\t *\/\n\tprotected $db_version;\n\n\t\/**\n\t * Names of tables that will be registered by this class.\n\t *\n\t * @var array\n\t *\/\n\tprotected $tables = array();\n\n\t\/**\n\t * Can optionally be used by concrete classes to carry out additional initialization work\n\t * as needed.\n\t *\/\n\tpublic function init() {}\n\n\t\/**\n\t * Register tables with WordPress, and create them if needed.\n\t *\n\t * @param bool $force_update Optional. Default false. Use true to always run the schema update.\n\t *\n\t * @return void\n\t *\/\n\tpublic function register_tables( $force_update = false ) {\n\t\tglobal $wpdb;\n\n\t\t\/\/ make WP aware of our tables.\n\t\tforeach ( $this->tables as $table ) {\n\t\t\t$wpdb->tables[] = $table;\n\t\t\t$name           = $this->get_full_table_name( $table );\n\t\t\t$wpdb->$table   = $name;\n\t\t}\n\n\t\t\/\/ create the tables.\n\t\tif ( $this->schema_update_required() || $force_update ) {\n\t\t\tforeach ( $this->tables as $table ) {\n\t\t\t\t\/**\n\t\t\t\t * Allow custom processing before updating a table schema.\n\t\t\t\t *\n\t\t\t\t * @param string $table Name of table being updated.\n\t\t\t\t * @param string $db_version Existing version of the table being updated.\n\t\t\t\t *\/\n\t\t\t\tdo_action( 'action_scheduler_before_schema_update', $table, $this->db_version );\n\t\t\t\t$this->update_table( $table );\n\t\t\t}\n\t\t\t$this->mark_schema_update_complete();\n\t\t}\n\t}\n\n\t\/**\n\t * Get table definition.\n\t *\n\t * @param string $table The name of the table.\n\t *\n\t * @return string The CREATE TABLE statement, suitable for passing to dbDelta\n\t *\/\n\tabstract protected function get_table_definition( $table );\n\n\t\/**\n\t * Determine if the database schema is out of date\n\t * by comparing the integer found in $this->schema_version\n\t * with the option set in the WordPress options table\n\t *\n\t * @return bool\n\t *\/\n\tprivate function schema_update_required() {\n\t\t$option_name      = 'schema-' . static::class;\n\t\t$this->db_version = get_option( $option_name, 0 );\n\n\t\t\/\/ Check for schema option stored by the Action Scheduler Custom Tables plugin in case site has migrated from that plugin with an older schema.\n\t\tif ( 0 === $this->db_version ) {\n\n\t\t\t$plugin_option_name = 'schema-';\n\n\t\t\tswitch ( static::class ) {\n\t\t\t\tcase 'ActionScheduler_StoreSchema':\n\t\t\t\t\t$plugin_option_name .= 'Action_Scheduler\\Custom_Tables\\DB_Store_Table_Maker';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ActionScheduler_LoggerSchema':\n\t\t\t\t\t$plugin_option_name .= 'Action_Scheduler\\Custom_Tables\\DB_Logger_Table_Maker';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->db_version = get_option( $plugin_option_name, 0 );\n\n\t\t\tdelete_option( $plugin_option_name );\n\t\t}\n\n\t\treturn version_compare( $this->db_version, $this->schema_version, '<' );\n\t}\n\n\t\/**\n\t * Update the option in WordPress to indicate that\n\t * our schema is now up to date\n\t *\n\t * @return void\n\t *\/\n\tprivate function mark_schema_update_complete() {\n\t\t$option_name = 'schema-' . static::class;\n\n\t\t\/\/ work around race conditions and ensure that our option updates.\n\t\t$value_to_save = (string) $this->schema_version . '.0.' . time();\n\n\t\tupdate_option( $option_name, $value_to_save );\n\t}\n\n\t\/**\n\t * Update the schema for the given table\n\t *\n\t * @param string $table The name of the table to update.\n\t *\n\t * @return void\n\t *\/\n\tprivate function update_table( $table ) {\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/upgrade.php';\n\t\t$definition = $this->get_table_definition( $table );\n\t\tif ( $definition ) {\n\t\t\t$updated = dbDelta( $definition );\n\t\t\tforeach ( $updated as $updated_table => $update_description ) {\n\t\t\t\tif ( strpos( $update_description, 'Created table' ) === 0 ) {\n\t\t\t\t\tdo_action( 'action_scheduler\/created_table', $updated_table, $table ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Get full table name.\n\t *\n\t * @param string $table Table name.\n\t *\n\t * @return string The full name of the table, including the\n\t *                table prefix for the current blog\n\t *\/\n\tprotected function get_full_table_name( $table ) {\n\t\treturn $GLOBALS['wpdb']->prefix . $table;\n\t}\n\n\t\/**\n\t * Confirms that all of the tables registered by this schema class have been created.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function tables_exist() {\n\t\tglobal $wpdb;\n\n\t\t$tables_exist = true;\n\n\t\tforeach ( $this->tables as $table_name ) {\n\t\t\t$table_name     = $wpdb->prefix . $table_name;\n\t\t\t$pattern        = str_replace( '_', '\\\\_', $table_name );\n\t\t\t$existing_table = $wpdb->get_var( $wpdb->prepare( 'SHOW TABLES LIKE %s', $pattern ) );\n\n\t\t\tif ( $existing_table !== $table_name ) {\n\t\t\t\t$tables_exist = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $tables_exist;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_ListTable.php","ext":"php","size":25135,"mtime":1756373567,"type":"text","content":"<?php\n\nif ( ! class_exists( 'WP_List_Table' ) ) {\n\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-list-table.php';\n}\n\n\/**\n * Action Scheduler Abstract List Table class\n *\n * This abstract class enhances WP_List_Table making it ready to use.\n *\n * By extending this class we can focus on describing how our table looks like,\n * which columns needs to be shown, filter, ordered by and more and forget about the details.\n *\n * This class supports:\n *  - Bulk actions\n *  - Search\n *  - Sortable columns\n *  - Automatic translations of the columns\n *\n * @codeCoverageIgnore\n * @since  2.0.0\n *\/\nabstract class ActionScheduler_Abstract_ListTable extends WP_List_Table {\n\n\t\/**\n\t * The table name\n\t *\n\t * @var string\n\t *\/\n\tprotected $table_name;\n\n\t\/**\n\t * Package name, used to get options from WP_List_Table::get_items_per_page.\n\t *\n\t * @var string\n\t *\/\n\tprotected $package;\n\n\t\/**\n\t * How many items do we render per page?\n\t *\n\t * @var int\n\t *\/\n\tprotected $items_per_page = 10;\n\n\t\/**\n\t * Enables search in this table listing. If this array\n\t * is empty it means the listing is not searchable.\n\t *\n\t * @var array\n\t *\/\n\tprotected $search_by = array();\n\n\t\/**\n\t * Columns to show in the table listing. It is a key => value pair. The\n\t * key must much the table column name and the value is the label, which is\n\t * automatically translated.\n\t *\n\t * @var array\n\t *\/\n\tprotected $columns = array();\n\n\t\/**\n\t * Defines the row-actions. It expects an array where the key\n\t * is the column name and the value is an array of actions.\n\t *\n\t * The array of actions are key => value, where key is the method name\n\t * (with the prefix row_action_<key>) and the value is the label\n\t * and title.\n\t *\n\t * @var array\n\t *\/\n\tprotected $row_actions = array();\n\n\t\/**\n\t * The Primary key of our table\n\t *\n\t * @var string\n\t *\/\n\tprotected $ID = 'ID';\n\n\t\/**\n\t * Enables sorting, it expects an array\n\t * of columns (the column names are the values)\n\t *\n\t * @var array\n\t *\/\n\tprotected $sort_by = array();\n\n\t\/**\n\t * The default sort order\n\t *\n\t * @var string\n\t *\/\n\tprotected $filter_by = array();\n\n\t\/**\n\t * The status name => count combinations for this table's items. Used to display status filters.\n\t *\n\t * @var array\n\t *\/\n\tprotected $status_counts = array();\n\n\t\/**\n\t * Notices to display when loading the table. Array of arrays of form array( 'class' => {updated|error}, 'message' => 'This is the notice text display.' ).\n\t *\n\t * @var array\n\t *\/\n\tprotected $admin_notices = array();\n\n\t\/**\n\t * Localised string displayed in the <h1> element above the able.\n\t *\n\t * @var string\n\t *\/\n\tprotected $table_header;\n\n\t\/**\n\t * Enables bulk actions. It must be an array where the key is the action name\n\t * and the value is the label (which is translated automatically). It is important\n\t * to notice that it will check that the method exists (`bulk_$name`) and will throw\n\t * an exception if it does not exists.\n\t *\n\t * This class will automatically check if the current request has a bulk action, will do the\n\t * validations and afterwards will execute the bulk method, with two arguments. The first argument\n\t * is the array with primary keys, the second argument is a string with a list of the primary keys,\n\t * escaped and ready to use (with `IN`).\n\t *\n\t * @var array\n\t *\/\n\tprotected $bulk_actions = array();\n\n\t\/**\n\t * Makes translation easier, it basically just wraps\n\t * `_x` with some default (the package name).\n\t *\n\t * @param string $text The new text to translate.\n\t * @param string $context The context of the text.\n\t * @return string|void The translated text.\n\t *\n\t * @deprecated 3.0.0 Use `_x()` instead.\n\t *\/\n\tprotected function translate( $text, $context = '' ) {\n\t\treturn $text;\n\t}\n\n\t\/**\n\t * Reads `$this->bulk_actions` and returns an array that WP_List_Table understands. It\n\t * also validates that the bulk method handler exists. It throws an exception because\n\t * this is a library meant for developers and missing a bulk method is a development-time error.\n\t *\n\t * @return array\n\t *\n\t * @throws RuntimeException Throws RuntimeException when the bulk action does not have a callback method.\n\t *\/\n\tprotected function get_bulk_actions() {\n\t\t$actions = array();\n\n\t\tforeach ( $this->bulk_actions as $action => $label ) {\n\t\t\tif ( ! is_callable( array( $this, 'bulk_' . $action ) ) ) {\n\t\t\t\tthrow new RuntimeException( \"The bulk action $action does not have a callback method\" );\n\t\t\t}\n\n\t\t\t$actions[ $action ] = $label;\n\t\t}\n\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Checks if the current request has a bulk action. If that is the case it will validate and will\n\t * execute the bulk method handler. Regardless if the action is valid or not it will redirect to\n\t * the previous page removing the current arguments that makes this request a bulk action.\n\t *\/\n\tprotected function process_bulk_action() {\n\t\tglobal $wpdb;\n\t\t\/\/ Detect when a bulk action is being triggered.\n\t\t$action = $this->current_action();\n\t\tif ( ! $action ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_admin_referer( 'bulk-' . $this->_args['plural'] );\n\n\t\t$method = 'bulk_' . $action;\n\t\tif ( array_key_exists( $action, $this->bulk_actions ) && is_callable( array( $this, $method ) ) && ! empty( $_GET['ID'] ) && is_array( $_GET['ID'] ) ) {\n\t\t\t$ids_sql = '(' . implode( ',', array_fill( 0, count( $_GET['ID'] ), '%s' ) ) . ')';\n\t\t\t$id      = array_map( 'absint', $_GET['ID'] );\n\t\t\t$this->$method( $id, $wpdb->prepare( $ids_sql, $id ) ); \/\/phpcs:ignore WordPress.DB.PreparedSQL\n\t\t}\n\n\t\tif ( isset( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\twp_safe_redirect(\n\t\t\t\tremove_query_arg(\n\t\t\t\t\tarray( '_wp_http_referer', '_wpnonce', 'ID', 'action', 'action2' ),\n\t\t\t\t\tesc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) )\n\t\t\t\t)\n\t\t\t);\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Default code for deleting entries.\n\t * validated already by process_bulk_action()\n\t *\n\t * @param array  $ids ids of the items to delete.\n\t * @param string $ids_sql the sql for the ids.\n\t * @return void\n\t *\/\n\tprotected function bulk_delete( array $ids, $ids_sql ) {\n\t\t$store = ActionScheduler::store();\n\t\tforeach ( $ids as $action_id ) {\n\t\t\t$store->delete( $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Prepares the _column_headers property which is used by WP_Table_List at rendering.\n\t * It merges the columns and the sortable columns.\n\t *\/\n\tprotected function prepare_column_headers() {\n\t\t$this->_column_headers = array(\n\t\t\t$this->get_columns(),\n\t\t\tget_hidden_columns( $this->screen ),\n\t\t\t$this->get_sortable_columns(),\n\t\t);\n\t}\n\n\t\/**\n\t * Reads $this->sort_by and returns the columns name in a format that WP_Table_List\n\t * expects\n\t *\/\n\tpublic function get_sortable_columns() {\n\t\t$sort_by = array();\n\t\tforeach ( $this->sort_by as $column ) {\n\t\t\t$sort_by[ $column ] = array( $column, true );\n\t\t}\n\t\treturn $sort_by;\n\t}\n\n\t\/**\n\t * Returns the columns names for rendering. It adds a checkbox for selecting everything\n\t * as the first column\n\t *\/\n\tpublic function get_columns() {\n\t\t$columns = array_merge(\n\t\t\tarray( 'cb' => '<input type=\"checkbox\" \/>' ),\n\t\t\t$this->columns\n\t\t);\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Get prepared LIMIT clause for items query\n\t *\n\t * @global wpdb $wpdb\n\t *\n\t * @return string Prepared LIMIT clause for items query.\n\t *\/\n\tprotected function get_items_query_limit() {\n\t\tglobal $wpdb;\n\n\t\t$per_page = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\t\treturn $wpdb->prepare( 'LIMIT %d', $per_page );\n\t}\n\n\t\/**\n\t * Returns the number of items to offset\/skip for this current view.\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_items_offset() {\n\t\t$per_page     = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\t\t$current_page = $this->get_pagenum();\n\t\tif ( 1 < $current_page ) {\n\t\t\t$offset = $per_page * ( $current_page - 1 );\n\t\t} else {\n\t\t\t$offset = 0;\n\t\t}\n\n\t\treturn $offset;\n\t}\n\n\t\/**\n\t * Get prepared OFFSET clause for items query\n\t *\n\t * @global wpdb $wpdb\n\t *\n\t * @return string Prepared OFFSET clause for items query.\n\t *\/\n\tprotected function get_items_query_offset() {\n\t\tglobal $wpdb;\n\n\t\treturn $wpdb->prepare( 'OFFSET %d', $this->get_items_offset() );\n\t}\n\n\t\/**\n\t * Prepares the ORDER BY sql statement. It uses `$this->sort_by` to know which\n\t * columns are sortable. This requests validates the orderby $_GET parameter is a valid\n\t * column and sortable. It will also use order (ASC|DESC) using DESC by default.\n\t *\/\n\tprotected function get_items_query_order() {\n\t\tif ( empty( $this->sort_by ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$orderby = esc_sql( $this->get_request_orderby() );\n\t\t$order   = esc_sql( $this->get_request_order() );\n\n\t\treturn \"ORDER BY {$orderby} {$order}\";\n\t}\n\n\t\/**\n\t * Querystring arguments to persist between form submissions.\n\t *\n\t * @since 3.7.3\n\t *\n\t * @return string[]\n\t *\/\n\tprotected function get_request_query_args_to_persist() {\n\t\treturn array_merge(\n\t\t\t$this->sort_by,\n\t\t\tarray(\n\t\t\t\t'page',\n\t\t\t\t'status',\n\t\t\t\t'tab',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Return the sortable column specified for this request to order the results by, if any.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_request_orderby() {\n\n\t\t$valid_sortable_columns = array_values( $this->sort_by );\n\n\t\tif ( ! empty( $_GET['orderby'] ) && in_array( $_GET['orderby'], $valid_sortable_columns, true ) ) { \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t$orderby = sanitize_text_field( wp_unslash( $_GET['orderby'] ) ); \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t} else {\n\t\t\t$orderby = $valid_sortable_columns[0];\n\t\t}\n\n\t\treturn $orderby;\n\t}\n\n\t\/**\n\t * Return the sortable column order specified for this request.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_request_order() {\n\n\t\tif ( ! empty( $_GET['order'] ) && 'desc' === strtolower( sanitize_text_field( wp_unslash( $_GET['order'] ) ) ) ) { \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t$order = 'DESC';\n\t\t} else {\n\t\t\t$order = 'ASC';\n\t\t}\n\n\t\treturn $order;\n\t}\n\n\t\/**\n\t * Return the status filter for this request, if any.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_request_status() {\n\t\t$status = ( ! empty( $_GET['status'] ) ) ? sanitize_text_field( wp_unslash( $_GET['status'] ) ) : ''; \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\treturn $status;\n\t}\n\n\t\/**\n\t * Return the search filter for this request, if any.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_request_search_query() {\n\t\t$search_query = ( ! empty( $_GET['s'] ) ) ? sanitize_text_field( wp_unslash( $_GET['s'] ) ) : ''; \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\treturn $search_query;\n\t}\n\n\t\/**\n\t * Process and return the columns name. This is meant for using with SQL, this means it\n\t * always includes the primary key.\n\t *\n\t * @return array\n\t *\/\n\tprotected function get_table_columns() {\n\t\t$columns = array_keys( $this->columns );\n\t\tif ( ! in_array( $this->ID, $columns, true ) ) {\n\t\t\t$columns[] = $this->ID;\n\t\t}\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Check if the current request is doing a \"full text\" search. If that is the case\n\t * prepares the SQL to search texts using LIKE.\n\t *\n\t * If the current request does not have any search or if this list table does not support\n\t * that feature it will return an empty string.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_items_query_search() {\n\t\tglobal $wpdb;\n\n\t\tif ( empty( $_GET['s'] ) || empty( $this->search_by ) ) { \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\treturn '';\n\t\t}\n\n\t\t$search_string = sanitize_text_field( wp_unslash( $_GET['s'] ) ); \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\n\t\t$filter = array();\n\t\tforeach ( $this->search_by as $column ) {\n\t\t\t$wild     = '%';\n\t\t\t$sql_like = $wild . $wpdb->esc_like( $search_string ) . $wild;\n\t\t\t$filter[] = $wpdb->prepare( '`' . $column . '` LIKE %s', $sql_like ); \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\treturn implode( ' OR ', $filter );\n\t}\n\n\t\/**\n\t * Prepares the SQL to filter rows by the options defined at `$this->filter_by`. Before trusting\n\t * any data sent by the user it validates that it is a valid option.\n\t *\/\n\tprotected function get_items_query_filters() {\n\t\tglobal $wpdb;\n\n\t\tif ( ! $this->filter_by || empty( $_GET['filter_by'] ) || ! is_array( $_GET['filter_by'] ) ) { \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\treturn '';\n\t\t}\n\n\t\t$filter = array();\n\n\t\tforeach ( $this->filter_by as $column => $options ) {\n\t\t\tif ( empty( $_GET['filter_by'][ $column ] ) || empty( $options[ $_GET['filter_by'][ $column ] ] ) ) { \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$filter[] = $wpdb->prepare( \"`$column` = %s\", sanitize_text_field( wp_unslash( $_GET['filter_by'][ $column ] ) ) ); \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t}\n\n\t\treturn implode( ' AND ', $filter );\n\n\t}\n\n\t\/**\n\t * Prepares the data to feed WP_Table_List.\n\t *\n\t * This has the core for selecting, sorting and filtering data. To keep the code simple\n\t * its logic is split among many methods (get_items_query_*).\n\t *\n\t * Beside populating the items this function will also count all the records that matches\n\t * the filtering criteria and will do fill the pagination variables.\n\t *\/\n\tpublic function prepare_items() {\n\t\tglobal $wpdb;\n\n\t\t$this->process_bulk_action();\n\n\t\t$this->process_row_actions();\n\n\t\tif ( ! empty( $_REQUEST['_wp_http_referer'] && ! empty( $_SERVER['REQUEST_URI'] ) ) ) { \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t\/\/ _wp_http_referer is used only on bulk actions, we remove it to keep the $_GET shorter\n\t\t\twp_safe_redirect( remove_query_arg( array( '_wp_http_referer', '_wpnonce' ), esc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) ) ) );\n\t\t\texit;\n\t\t}\n\n\t\t$this->prepare_column_headers();\n\n\t\t$limit   = $this->get_items_query_limit();\n\t\t$offset  = $this->get_items_query_offset();\n\t\t$order   = $this->get_items_query_order();\n\t\t$where   = array_filter(\n\t\t\tarray(\n\t\t\t\t$this->get_items_query_search(),\n\t\t\t\t$this->get_items_query_filters(),\n\t\t\t)\n\t\t);\n\t\t$columns = '`' . implode( '`, `', $this->get_table_columns() ) . '`';\n\n\t\tif ( ! empty( $where ) ) {\n\t\t\t$where = 'WHERE (' . implode( ') AND (', $where ) . ')';\n\t\t} else {\n\t\t\t$where = '';\n\t\t}\n\n\t\t$sql = \"SELECT $columns FROM {$this->table_name} {$where} {$order} {$limit} {$offset}\";\n\n\t\t$this->set_items( $wpdb->get_results( $sql, ARRAY_A ) ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\t$query_count = \"SELECT COUNT({$this->ID}) FROM {$this->table_name} {$where}\";\n\t\t$total_items = $wpdb->get_var( $query_count ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$per_page    = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\t\t$this->set_pagination_args(\n\t\t\tarray(\n\t\t\t\t'total_items' => $total_items,\n\t\t\t\t'per_page'    => $per_page,\n\t\t\t\t'total_pages' => ceil( $total_items \/ $per_page ),\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Display the table.\n\t *\n\t * @param string $which The name of the table.\n\t *\/\n\tpublic function extra_tablenav( $which ) {\n\t\tif ( ! $this->filter_by || 'top' !== $which ) {\n\t\t\treturn;\n\t\t}\n\n\t\techo '<div class=\"alignleft actions\">';\n\n\t\tforeach ( $this->filter_by as $id => $options ) {\n\t\t\t$default = ! empty( $_GET['filter_by'][ $id ] ) ? sanitize_text_field( wp_unslash( $_GET['filter_by'][ $id ] ) ) : ''; \/\/phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\tif ( empty( $options[ $default ] ) ) {\n\t\t\t\t$default = '';\n\t\t\t}\n\n\t\t\techo '<select name=\"filter_by[' . esc_attr( $id ) . ']\" class=\"first\" id=\"filter-by-' . esc_attr( $id ) . '\">';\n\n\t\t\tforeach ( $options as $value => $label ) {\n\t\t\t\techo '<option value=\"' . esc_attr( $value ) . '\" ' . esc_html( $value === $default ? 'selected' : '' ) . '>'\n\t\t\t\t\t. esc_html( $label )\n\t\t\t\t. '<\/option>';\n\t\t\t}\n\n\t\t\techo '<\/select>';\n\t\t}\n\n\t\tsubmit_button( esc_html__( 'Filter', 'action-scheduler' ), '', 'filter_action', false, array( 'id' => 'post-query-submit' ) );\n\t\techo '<\/div>';\n\t}\n\n\t\/**\n\t * Set the data for displaying. It will attempt to unserialize (There is a chance that some columns\n\t * are serialized). This can be override in child classes for further data transformation.\n\t *\n\t * @param array $items Items array.\n\t *\/\n\tprotected function set_items( array $items ) {\n\t\t$this->items = array();\n\t\tforeach ( $items as $item ) {\n\t\t\t$this->items[ $item[ $this->ID ] ] = array_map( 'maybe_unserialize', $item );\n\t\t}\n\t}\n\n\t\/**\n\t * Renders the checkbox for each row, this is the first column and it is named ID regardless\n\t * of how the primary key is named (to keep the code simpler). The bulk actions will do the proper\n\t * name transformation though using `$this->ID`.\n\t *\n\t * @param array $row The row to render.\n\t *\/\n\tpublic function column_cb( $row ) {\n\t\treturn '<input name=\"ID[]\" type=\"checkbox\" value=\"' . esc_attr( $row[ $this->ID ] ) . '\" \/>';\n\t}\n\n\t\/**\n\t * Renders the row-actions.\n\t *\n\t * This method renders the action menu, it reads the definition from the $row_actions property,\n\t * and it checks that the row action method exists before rendering it.\n\t *\n\t * @param array  $row Row to be rendered.\n\t * @param string $column_name Column name.\n\t * @return string\n\t *\/\n\tprotected function maybe_render_actions( $row, $column_name ) {\n\t\tif ( empty( $this->row_actions[ $column_name ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$row_id = $row[ $this->ID ];\n\n\t\t$actions      = '<div class=\"row-actions\">';\n\t\t$action_count = 0;\n\t\tforeach ( $this->row_actions[ $column_name ] as $action_key => $action ) {\n\n\t\t\t$action_count++;\n\n\t\t\tif ( ! method_exists( $this, 'row_action_' . $action_key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$action_link = ! empty( $action['link'] ) ? $action['link'] : add_query_arg(\n\t\t\t\tarray(\n\t\t\t\t\t'row_action' => $action_key,\n\t\t\t\t\t'row_id'     => $row_id,\n\t\t\t\t\t'nonce'      => wp_create_nonce( $action_key . '::' . $row_id ),\n\t\t\t\t)\n\t\t\t);\n\t\t\t$span_class  = ! empty( $action['class'] ) ? $action['class'] : $action_key;\n\t\t\t$separator   = ( $action_count < count( $this->row_actions[ $column_name ] ) ) ? ' | ' : '';\n\n\t\t\t$actions .= sprintf( '<span class=\"%s\">', esc_attr( $span_class ) );\n\t\t\t$actions .= sprintf( '<a href=\"%1$s\" title=\"%2$s\">%3$s<\/a>', esc_url( $action_link ), esc_attr( $action['desc'] ), esc_html( $action['name'] ) );\n\t\t\t$actions .= sprintf( '%s<\/span>', $separator );\n\t\t}\n\t\t$actions .= '<\/div>';\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Process the bulk actions.\n\t *\n\t * @return void\n\t *\/\n\tprotected function process_row_actions() {\n\t\t$parameters = array( 'row_action', 'row_id', 'nonce' );\n\t\tforeach ( $parameters as $parameter ) {\n\t\t\tif ( empty( $_REQUEST[ $parameter ] ) ) { \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t$action = sanitize_text_field( wp_unslash( $_REQUEST['row_action'] ) ); \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotValidated\n\t\t$row_id = sanitize_text_field( wp_unslash( $_REQUEST['row_id'] ) ); \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotValidated\n\t\t$nonce  = sanitize_text_field( wp_unslash( $_REQUEST['nonce'] ) ); \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotValidated\n\t\t$method = 'row_action_' . $action; \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\n\t\tif ( wp_verify_nonce( $nonce, $action . '::' . $row_id ) && method_exists( $this, $method ) ) {\n\t\t\t$this->$method( sanitize_text_field( wp_unslash( $row_id ) ) ); \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t}\n\n\t\tif ( isset( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\twp_safe_redirect(\n\t\t\t\tremove_query_arg(\n\t\t\t\t\tarray( 'row_id', 'row_action', 'nonce' ),\n\t\t\t\t\tesc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) )\n\t\t\t\t)\n\t\t\t);\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Default column formatting, it will escape everything for security.\n\t *\n\t * @param array  $item The item array.\n\t * @param string $column_name Column name to display.\n\t *\n\t * @return string\n\t *\/\n\tpublic function column_default( $item, $column_name ) {\n\t\t$column_html  = esc_html( $item[ $column_name ] );\n\t\t$column_html .= $this->maybe_render_actions( $item, $column_name );\n\t\treturn $column_html;\n\t}\n\n\t\/**\n\t * Display the table heading and search query, if any\n\t *\/\n\tprotected function display_header() {\n\t\techo '<h1 class=\"wp-heading-inline\">' . esc_attr( $this->table_header ) . '<\/h1>';\n\t\tif ( $this->get_request_search_query() ) {\n\t\t\t\/* translators: %s: search query *\/\n\t\t\techo '<span class=\"subtitle\">' . esc_attr( sprintf( __( 'Search results for \"%s\"', 'action-scheduler' ), $this->get_request_search_query() ) ) . '<\/span>';\n\t\t}\n\t\techo '<hr class=\"wp-header-end\">';\n\t}\n\n\t\/**\n\t * Display the table heading and search query, if any\n\t *\/\n\tprotected function display_admin_notices() {\n\t\tforeach ( $this->admin_notices as $notice ) {\n\t\t\techo '<div id=\"message\" class=\"' . esc_attr( $notice['class'] ) . '\">';\n\t\t\techo '\t<p>' . wp_kses_post( $notice['message'] ) . '<\/p>';\n\t\t\techo '<\/div>';\n\t\t}\n\t}\n\n\t\/**\n\t * Prints the available statuses so the user can click to filter.\n\t *\/\n\tprotected function display_filter_by_status() {\n\n\t\t$status_list_items = array();\n\t\t$request_status    = $this->get_request_status();\n\n\t\t\/\/ Helper to set 'all' filter when not set on status counts passed in.\n\t\tif ( ! isset( $this->status_counts['all'] ) ) {\n\t\t\t$all_count = array_sum( $this->status_counts );\n\t\t\tif ( isset( $this->status_counts['past-due'] ) ) {\n\t\t\t\t$all_count -= $this->status_counts['past-due'];\n\t\t\t}\n\t\t\t$this->status_counts = array( 'all' => $all_count ) + $this->status_counts;\n\t\t}\n\n\t\t\/\/ Translated status labels.\n\t\t$status_labels             = ActionScheduler_Store::instance()->get_status_labels();\n\t\t$status_labels['all']      = esc_html_x( 'All', 'status labels', 'action-scheduler' );\n\t\t$status_labels['past-due'] = esc_html_x( 'Past-due', 'status labels', 'action-scheduler' );\n\n\t\tforeach ( $this->status_counts as $status_slug => $count ) {\n\n\t\t\tif ( 0 === $count ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( $status_slug === $request_status || ( empty( $request_status ) && 'all' === $status_slug ) ) {\n\t\t\t\t$status_list_item = '<li class=\"%1$s\"><a href=\"%2$s\" class=\"current\">%3$s<\/a> (%4$d)<\/li>';\n\t\t\t} else {\n\t\t\t\t$status_list_item = '<li class=\"%1$s\"><a href=\"%2$s\">%3$s<\/a> (%4$d)<\/li>';\n\t\t\t}\n\n\t\t\t$status_name         = isset( $status_labels[ $status_slug ] ) ? $status_labels[ $status_slug ] : ucfirst( $status_slug );\n\t\t\t$status_filter_url   = ( 'all' === $status_slug ) ? remove_query_arg( 'status' ) : add_query_arg( 'status', $status_slug );\n\t\t\t$status_filter_url   = remove_query_arg( array( 'paged', 's' ), $status_filter_url );\n\t\t\t$status_list_items[] = sprintf( $status_list_item, esc_attr( $status_slug ), esc_url( $status_filter_url ), esc_html( $status_name ), absint( $count ) );\n\t\t}\n\n\t\tif ( $status_list_items ) {\n\t\t\techo '<ul class=\"subsubsub\">';\n\t\t\techo implode( \" | \\n\", $status_list_items ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\t\t\techo '<\/ul>';\n\t\t}\n\t}\n\n\t\/**\n\t * Renders the table list, we override the original class to render the table inside a form\n\t * and to render any needed HTML (like the search box). By doing so the callee of a function can simple\n\t * forget about any extra HTML.\n\t *\/\n\tprotected function display_table() {\n\t\techo '<form id=\"' . esc_attr( $this->_args['plural'] ) . '-filter\" method=\"get\">';\n\t\tforeach ( $this->get_request_query_args_to_persist() as $arg ) {\n\t\t\t$arg_value = isset( $_GET[ $arg ] ) ? sanitize_text_field( wp_unslash( $_GET[ $arg ] ) ) : ''; \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\tif ( ! $arg_value ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\techo '<input type=\"hidden\" name=\"' . esc_attr( $arg ) . '\" value=\"' . esc_attr( $arg_value ) . '\" \/>';\n\t\t}\n\n\t\tif ( ! empty( $this->search_by ) ) {\n\t\t\techo $this->search_box( $this->get_search_box_button_text(), 'plugin' ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\t\t}\n\t\tparent::display();\n\t\techo '<\/form>';\n\t}\n\n\t\/**\n\t * Process any pending actions.\n\t *\/\n\tpublic function process_actions() {\n\t\t$this->process_bulk_action();\n\t\t$this->process_row_actions();\n\n\t\tif ( ! empty( $_REQUEST['_wp_http_referer'] ) && ! empty( $_SERVER['REQUEST_URI'] ) ) { \/\/ phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t\/\/ _wp_http_referer is used only on bulk actions, we remove it to keep the $_GET shorter\n\t\t\twp_safe_redirect( remove_query_arg( array( '_wp_http_referer', '_wpnonce' ), esc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) ) ) );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Render the list table page, including header, notices, status filters and table.\n\t *\/\n\tpublic function display_page() {\n\t\t$this->prepare_items();\n\n\t\techo '<div class=\"wrap\">';\n\t\t$this->display_header();\n\t\t$this->display_admin_notices();\n\t\t$this->display_filter_by_status();\n\t\t$this->display_table();\n\t\techo '<\/div>';\n\t}\n\n\t\/**\n\t * Get the text to display in the search box on the list table.\n\t *\/\n\tprotected function get_search_box_placeholder() {\n\t\treturn esc_html__( 'Search', 'action-scheduler' );\n\t}\n\n\t\/**\n\t * Gets the screen per_page option name.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_per_page_option_name() {\n\t\treturn $this->package . '_items_per_page';\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_WPCLI_Command.php","ext":"php","size":2107,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Abstract for WP-CLI commands.\n *\/\nabstract class ActionScheduler_WPCLI_Command extends \\WP_CLI_Command {\n\n\tconst DATE_FORMAT = 'Y-m-d H:i:s O';\n\n\t\/**\n\t * Keyed arguments.\n\t *\n\t * @var string[]\n\t *\/\n\tprotected $args;\n\n\t\/**\n\t * Positional arguments.\n\t *\n\t * @var array<string, string>\n\t *\/\n\tprotected $assoc_args;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string[]              $args       Positional arguments.\n\t * @param array<string, string> $assoc_args Keyed arguments.\n\t * @throws \\Exception When loading a CLI command file outside of WP CLI context.\n\t *\/\n\tpublic function __construct( array $args, array $assoc_args ) {\n\t\tif ( ! defined( 'WP_CLI' ) || ! constant( 'WP_CLI' ) ) {\n\t\t\t\/* translators: %s php class name *\/\n\t\t\tthrow new \\Exception( sprintf( __( 'The %s class can only be run within WP CLI.', 'action-scheduler' ), get_class( $this ) ) );\n\t\t}\n\n\t\t$this->args       = $args;\n\t\t$this->assoc_args = $assoc_args;\n\t}\n\n\t\/**\n\t * Execute command.\n\t *\/\n\tabstract public function execute();\n\n\t\/**\n\t * Get the scheduled date in a human friendly format.\n\t *\n\t * @see ActionScheduler_ListTable::get_schedule_display_string()\n\t * @param ActionScheduler_Schedule $schedule Schedule.\n\t * @return string\n\t *\/\n\tprotected function get_schedule_display_string( ActionScheduler_Schedule $schedule ) {\n\n\t\t$schedule_display_string = '';\n\n\t\tif ( ! $schedule->get_date() ) {\n\t\t\treturn '0000-00-00 00:00:00';\n\t\t}\n\n\t\t$next_timestamp = $schedule->get_date()->getTimestamp();\n\n\t\t$schedule_display_string .= $schedule->get_date()->format( static::DATE_FORMAT );\n\n\t\treturn $schedule_display_string;\n\t}\n\n\t\/**\n\t * Transforms arguments with '__' from CSV into expected arrays.\n\t *\n\t * @see \\WP_CLI\\CommandWithDBObject::process_csv_arguments_to_arrays()\n\t * @link https:\/\/github.com\/wp-cli\/entity-command\/blob\/c270cc9a2367cb8f5845f26a6b5e203397c91392\/src\/WP_CLI\/CommandWithDBObject.php#L99\n\t * @return void\n\t *\/\n\tprotected function process_csv_arguments_to_arrays() {\n\t\tforeach ( $this->assoc_args as $k => $v ) {\n\t\t\tif ( false !== strpos( $k, '__' ) ) {\n\t\t\t\t$this->assoc_args[ $k ] = explode( ',', $v );\n\t\t\t}\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_QueueCleaner.php","ext":"php","size":8071,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_QueueCleaner\n *\/\nclass ActionScheduler_QueueCleaner {\n\n\t\/**\n\t * The batch size.\n\t *\n\t * @var int\n\t *\/\n\tprotected $batch_size;\n\n\t\/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $store = null;\n\n\t\/**\n\t * 31 days in seconds.\n\t *\n\t * @var int\n\t *\/\n\tprivate $month_in_seconds = 2678400;\n\n\t\/**\n\t * Default list of statuses purged by the cleaner process.\n\t *\n\t * @var string[]\n\t *\/\n\tprivate $default_statuses_to_purge = array(\n\t\tActionScheduler_Store::STATUS_COMPLETE,\n\t\tActionScheduler_Store::STATUS_CANCELED,\n\t);\n\n\t\/**\n\t * ActionScheduler_QueueCleaner constructor.\n\t *\n\t * @param ActionScheduler_Store|null $store      The store instance.\n\t * @param int                        $batch_size The batch size.\n\t *\/\n\tpublic function __construct( ?ActionScheduler_Store $store = null, $batch_size = 20 ) {\n\t\t$this->store      = $store ? $store : ActionScheduler_Store::instance();\n\t\t$this->batch_size = $batch_size;\n\t}\n\n\t\/**\n\t * Default queue cleaner process used by queue runner.\n\t *\n\t * @return array\n\t *\/\n\tpublic function delete_old_actions() {\n\t\t\/**\n\t\t * Filter the minimum scheduled date age for action deletion.\n\t\t *\n\t\t * @param int $retention_period Minimum scheduled age in seconds of the actions to be deleted.\n\t\t *\/\n\t\t$lifespan = apply_filters( 'action_scheduler_retention_period', $this->month_in_seconds );\n\n\t\ttry {\n\t\t\t$cutoff = as_get_datetime_object( $lifespan . ' seconds ago' );\n\t\t} catch ( Exception $e ) {\n\t\t\t_doing_it_wrong(\n\t\t\t\t__METHOD__,\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* Translators: %s is the exception message. *\/\n\t\t\t\t\tesc_html__( 'It was not possible to determine a valid cut-off time: %s.', 'action-scheduler' ),\n\t\t\t\t\tesc_html( $e->getMessage() )\n\t\t\t\t),\n\t\t\t\t'3.5.5'\n\t\t\t);\n\n\t\t\treturn array();\n\t\t}\n\n\t\t\/**\n\t\t * Filter the statuses when cleaning the queue.\n\t\t *\n\t\t * @param string[] $default_statuses_to_purge Action statuses to clean.\n\t\t *\/\n\t\t$statuses_to_purge = (array) apply_filters( 'action_scheduler_default_cleaner_statuses', $this->default_statuses_to_purge );\n\n\t\treturn $this->clean_actions( $statuses_to_purge, $cutoff, $this->get_batch_size() );\n\t}\n\n\t\/**\n\t * Delete selected actions limited by status and date.\n\t *\n\t * @param string[] $statuses_to_purge List of action statuses to purge. Defaults to canceled, complete.\n\t * @param DateTime $cutoff_date Date limit for selecting actions. Defaults to 31 days ago.\n\t * @param int|null $batch_size Maximum number of actions per status to delete. Defaults to 20.\n\t * @param string   $context Calling process context. Defaults to `old`.\n\t * @return array Actions deleted.\n\t *\/\n\tpublic function clean_actions( array $statuses_to_purge, DateTime $cutoff_date, $batch_size = null, $context = 'old' ) {\n\t\t$batch_size = ! is_null( $batch_size ) ? $batch_size : $this->batch_size;\n\t\t$cutoff     = ! is_null( $cutoff_date ) ? $cutoff_date : as_get_datetime_object( $this->month_in_seconds . ' seconds ago' );\n\t\t$lifespan   = time() - $cutoff->getTimestamp();\n\n\t\tif ( empty( $statuses_to_purge ) ) {\n\t\t\t$statuses_to_purge = $this->default_statuses_to_purge;\n\t\t}\n\n\t\t$deleted_actions = array();\n\n\t\tforeach ( $statuses_to_purge as $status ) {\n\t\t\t$actions_to_delete = $this->store->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'status'           => $status,\n\t\t\t\t\t'modified'         => $cutoff,\n\t\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t\t'per_page'         => $batch_size,\n\t\t\t\t\t'orderby'          => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$deleted_actions = array_merge( $deleted_actions, $this->delete_actions( $actions_to_delete, $lifespan, $context ) );\n\t\t}\n\n\t\treturn $deleted_actions;\n\t}\n\n\t\/**\n\t * Delete actions.\n\t *\n\t * @param int[]  $actions_to_delete List of action IDs to delete.\n\t * @param int    $lifespan Minimum scheduled age in seconds of the actions being deleted.\n\t * @param string $context Context of the delete request.\n\t * @return array Deleted action IDs.\n\t *\/\n\tprivate function delete_actions( array $actions_to_delete, $lifespan = null, $context = 'old' ) {\n\t\t$deleted_actions = array();\n\n\t\tif ( is_null( $lifespan ) ) {\n\t\t\t$lifespan = $this->month_in_seconds;\n\t\t}\n\n\t\tforeach ( $actions_to_delete as $action_id ) {\n\t\t\ttry {\n\t\t\t\t$this->store->delete_action( $action_id );\n\t\t\t\t$deleted_actions[] = $action_id;\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\t\/**\n\t\t\t\t * Notify 3rd party code of exceptions when deleting a completed action older than the retention period\n\t\t\t\t *\n\t\t\t\t * This hook provides a way for 3rd party code to log or otherwise handle exceptions relating to their\n\t\t\t\t * actions.\n\t\t\t\t *\n\t\t\t\t * @param int $action_id The scheduled actions ID in the data store\n\t\t\t\t * @param Exception $e The exception thrown when attempting to delete the action from the data store\n\t\t\t\t * @param int $lifespan The retention period, in seconds, for old actions\n\t\t\t\t * @param int $count_of_actions_to_delete The number of old actions being deleted in this batch\n\t\t\t\t * @since 2.0.0\n\t\t\t\t *\/\n\t\t\t\tdo_action( \"action_scheduler_failed_{$context}_action_deletion\", $action_id, $e, $lifespan, count( $actions_to_delete ) );\n\t\t\t}\n\t\t}\n\t\treturn $deleted_actions;\n\t}\n\n\t\/**\n\t * Unclaim pending actions that have not been run within a given time limit.\n\t *\n\t * When called by ActionScheduler_Abstract_QueueRunner::run_cleanup(), the time limit passed\n\t * as a parameter is 10x the time limit used for queue processing.\n\t *\n\t * @param int $time_limit The number of seconds to allow a queue to run before unclaiming its pending actions. Default 300 (5 minutes).\n\t *\/\n\tpublic function reset_timeouts( $time_limit = 300 ) {\n\t\t$timeout = apply_filters( 'action_scheduler_timeout_period', $time_limit );\n\n\t\tif ( $timeout < 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$cutoff           = as_get_datetime_object( $timeout . ' seconds ago' );\n\t\t$actions_to_reset = $this->store->query_actions(\n\t\t\tarray(\n\t\t\t\t'status'           => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t\t'modified'         => $cutoff,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'claimed'          => true,\n\t\t\t\t'per_page'         => $this->get_batch_size(),\n\t\t\t\t'orderby'          => 'none',\n\t\t\t)\n\t\t);\n\n\t\tforeach ( $actions_to_reset as $action_id ) {\n\t\t\t$this->store->unclaim_action( $action_id );\n\t\t\tdo_action( 'action_scheduler_reset_action', $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Mark actions that have been running for more than a given time limit as failed, based on\n\t * the assumption some uncatchable and unloggable fatal error occurred during processing.\n\t *\n\t * When called by ActionScheduler_Abstract_QueueRunner::run_cleanup(), the time limit passed\n\t * as a parameter is 10x the time limit used for queue processing.\n\t *\n\t * @param int $time_limit The number of seconds to allow an action to run before it is considered to have failed. Default 300 (5 minutes).\n\t *\/\n\tpublic function mark_failures( $time_limit = 300 ) {\n\t\t$timeout = apply_filters( 'action_scheduler_failure_period', $time_limit );\n\n\t\tif ( $timeout < 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$cutoff           = as_get_datetime_object( $timeout . ' seconds ago' );\n\t\t$actions_to_reset = $this->store->query_actions(\n\t\t\tarray(\n\t\t\t\t'status'           => ActionScheduler_Store::STATUS_RUNNING,\n\t\t\t\t'modified'         => $cutoff,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'per_page'         => $this->get_batch_size(),\n\t\t\t\t'orderby'          => 'none',\n\t\t\t)\n\t\t);\n\n\t\tforeach ( $actions_to_reset as $action_id ) {\n\t\t\t$this->store->mark_failure( $action_id );\n\t\t\tdo_action( 'action_scheduler_failed_action', $action_id, $timeout );\n\t\t}\n\t}\n\n\t\/**\n\t * Do all of the cleaning actions.\n\t *\n\t * @param int $time_limit The number of seconds to use as the timeout and failure period. Default 300 (5 minutes).\n\t *\/\n\tpublic function clean( $time_limit = 300 ) {\n\t\t$this->delete_old_actions();\n\t\t$this->reset_timeouts( $time_limit );\n\t\t$this->mark_failures( $time_limit );\n\t}\n\n\t\/**\n\t * Get the batch size for cleaning the queue.\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_batch_size() {\n\t\t\/**\n\t\t * Filter the batch size when cleaning the queue.\n\t\t *\n\t\t * @param int $batch_size The number of actions to clean in one batch.\n\t\t *\/\n\t\treturn absint( apply_filters( 'action_scheduler_cleanup_batch_size', $this->batch_size ) );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_ListTable.php","ext":"php","size":21622,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Implements the admin view of the actions.\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_ListTable extends ActionScheduler_Abstract_ListTable {\n\n\t\/**\n\t * The package name.\n\t *\n\t * @var string\n\t *\/\n\tprotected $package = 'action-scheduler';\n\n\t\/**\n\t * Columns to show (name => label).\n\t *\n\t * @var array\n\t *\/\n\tprotected $columns = array();\n\n\t\/**\n\t * Actions (name => label).\n\t *\n\t * @var array\n\t *\/\n\tprotected $row_actions = array();\n\n\t\/**\n\t * The active data stores\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprotected $store;\n\n\t\/**\n\t * A logger to use for getting action logs to display\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprotected $logger;\n\n\t\/**\n\t * A ActionScheduler_QueueRunner runner instance (or child class)\n\t *\n\t * @var ActionScheduler_QueueRunner\n\t *\/\n\tprotected $runner;\n\n\t\/**\n\t * Bulk actions. The key of the array is the method name of the implementation.\n\t * Example: bulk_<key>(array $ids, string $sql_in).\n\t *\n\t * See the comments in the parent class for further details\n\t *\n\t * @var array\n\t *\/\n\tprotected $bulk_actions = array();\n\n\t\/**\n\t * Flag variable to render our notifications, if any, once.\n\t *\n\t * @var bool\n\t *\/\n\tprotected static $did_notification = false;\n\n\t\/**\n\t * Array of seconds for common time periods, like week or month, alongside an internationalised string representation, i.e. \"Day\" or \"Days\"\n\t *\n\t * @var array\n\t *\/\n\tprivate static $time_periods;\n\n\t\/**\n\t * Sets the current data store object into `store->action` and initialises the object.\n\t *\n\t * @param ActionScheduler_Store       $store Store object.\n\t * @param ActionScheduler_Logger      $logger Logger object.\n\t * @param ActionScheduler_QueueRunner $runner Runner object.\n\t *\/\n\tpublic function __construct( ActionScheduler_Store $store, ActionScheduler_Logger $logger, ActionScheduler_QueueRunner $runner ) {\n\n\t\t$this->store  = $store;\n\t\t$this->logger = $logger;\n\t\t$this->runner = $runner;\n\n\t\t$this->table_header = __( 'Scheduled Actions', 'action-scheduler' );\n\n\t\t$this->bulk_actions = array(\n\t\t\t'delete' => __( 'Delete', 'action-scheduler' ),\n\t\t);\n\n\t\t$this->columns = array(\n\t\t\t'hook'        => __( 'Hook', 'action-scheduler' ),\n\t\t\t'status'      => __( 'Status', 'action-scheduler' ),\n\t\t\t'args'        => __( 'Arguments', 'action-scheduler' ),\n\t\t\t'group'       => __( 'Group', 'action-scheduler' ),\n\t\t\t'recurrence'  => __( 'Recurrence', 'action-scheduler' ),\n\t\t\t'schedule'    => __( 'Scheduled Date', 'action-scheduler' ),\n\t\t\t'log_entries' => __( 'Log', 'action-scheduler' ),\n\t\t);\n\n\t\t$this->sort_by = array(\n\t\t\t'schedule',\n\t\t\t'hook',\n\t\t\t'group',\n\t\t);\n\n\t\t$this->search_by = array(\n\t\t\t'hook',\n\t\t\t'args',\n\t\t\t'claim_id',\n\t\t);\n\n\t\t$request_status = $this->get_request_status();\n\n\t\tif ( empty( $request_status ) ) {\n\t\t\t$this->sort_by[] = 'status';\n\t\t} elseif ( in_array( $request_status, array( 'in-progress', 'failed' ), true ) ) {\n\t\t\t$this->columns  += array( 'claim_id' => __( 'Claim ID', 'action-scheduler' ) );\n\t\t\t$this->sort_by[] = 'claim_id';\n\t\t}\n\n\t\t$this->row_actions = array(\n\t\t\t'hook' => array(\n\t\t\t\t'run'    => array(\n\t\t\t\t\t'name' => __( 'Run', 'action-scheduler' ),\n\t\t\t\t\t'desc' => __( 'Process the action now as if it were run as part of a queue', 'action-scheduler' ),\n\t\t\t\t),\n\t\t\t\t'cancel' => array(\n\t\t\t\t\t'name'  => __( 'Cancel', 'action-scheduler' ),\n\t\t\t\t\t'desc'  => __( 'Cancel the action now to avoid it being run in future', 'action-scheduler' ),\n\t\t\t\t\t'class' => 'cancel trash',\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tself::$time_periods = array(\n\t\t\tarray(\n\t\t\t\t'seconds' => YEAR_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s year', '%s years', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => MONTH_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s month', '%s months', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => WEEK_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s week', '%s weeks', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => DAY_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s day', '%s days', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => HOUR_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s hour', '%s hours', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => MINUTE_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s minute', '%s minutes', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => 1,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s second', '%s seconds', 'action-scheduler' ),\n\t\t\t),\n\t\t);\n\n\t\tparent::__construct(\n\t\t\tarray(\n\t\t\t\t'singular' => 'action-scheduler',\n\t\t\t\t'plural'   => 'action-scheduler',\n\t\t\t\t'ajax'     => false,\n\t\t\t)\n\t\t);\n\n\t\tadd_screen_option(\n\t\t\t'per_page',\n\t\t\tarray(\n\t\t\t\t'default' => $this->items_per_page,\n\t\t\t)\n\t\t);\n\n\t\tadd_filter( 'set_screen_option_' . $this->get_per_page_option_name(), array( $this, 'set_items_per_page_option' ), 10, 3 );\n\t\tset_screen_options();\n\t}\n\n\t\/**\n\t * Handles setting the items_per_page option for this screen.\n\t *\n\t * @param mixed  $status Default false (to skip saving the current option).\n\t * @param string $option Screen option name.\n\t * @param int    $value  Screen option value.\n\t * @return int\n\t *\/\n\tpublic function set_items_per_page_option( $status, $option, $value ) {\n\t\treturn $value;\n\t}\n\t\/**\n\t * Convert an interval of seconds into a two part human friendly string.\n\t *\n\t * The WordPress human_time_diff() function only calculates the time difference to one degree, meaning\n\t * even if an action is 1 day and 11 hours away, it will display \"1 day\". This function goes one step\n\t * further to display two degrees of accuracy.\n\t *\n\t * Inspired by the Crontrol::interval() function by Edward Dale: https:\/\/wordpress.org\/plugins\/wp-crontrol\/\n\t *\n\t * @param int $interval A interval in seconds.\n\t * @param int $periods_to_include Depth of time periods to include, e.g. for an interval of 70, and $periods_to_include of 2, both minutes and seconds would be included. With a value of 1, only minutes would be included.\n\t * @return string A human friendly string representation of the interval.\n\t *\/\n\tprivate static function human_interval( $interval, $periods_to_include = 2 ) {\n\n\t\tif ( $interval <= 0 ) {\n\t\t\treturn __( 'Now!', 'action-scheduler' );\n\t\t}\n\n\t\t$output           = '';\n\t\t$num_time_periods = count( self::$time_periods );\n\n\t\tfor ( $time_period_index = 0, $periods_included = 0, $seconds_remaining = $interval; $time_period_index < $num_time_periods && $seconds_remaining > 0 && $periods_included < $periods_to_include; $time_period_index++ ) {\n\n\t\t\t$periods_in_interval = floor( $seconds_remaining \/ self::$time_periods[ $time_period_index ]['seconds'] );\n\n\t\t\tif ( $periods_in_interval > 0 ) {\n\t\t\t\tif ( ! empty( $output ) ) {\n\t\t\t\t\t$output .= ' ';\n\t\t\t\t}\n\t\t\t\t$output            .= sprintf( translate_nooped_plural( self::$time_periods[ $time_period_index ]['names'], $periods_in_interval, 'action-scheduler' ), $periods_in_interval );\n\t\t\t\t$seconds_remaining -= $periods_in_interval * self::$time_periods[ $time_period_index ]['seconds'];\n\t\t\t\t$periods_included++;\n\t\t\t}\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Returns the recurrence of an action or 'Non-repeating'. The output is human readable.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_recurrence( $action ) {\n\t\t$schedule = $action->get_schedule();\n\t\tif ( $schedule->is_recurring() && method_exists( $schedule, 'get_recurrence' ) ) {\n\t\t\t$recurrence = $schedule->get_recurrence();\n\n\t\t\tif ( is_numeric( $recurrence ) ) {\n\t\t\t\t\/* translators: %s: time interval *\/\n\t\t\t\treturn sprintf( __( 'Every %s', 'action-scheduler' ), self::human_interval( $recurrence ) );\n\t\t\t} else {\n\t\t\t\treturn $recurrence;\n\t\t\t}\n\t\t}\n\n\t\treturn __( 'Non-repeating', 'action-scheduler' );\n\t}\n\n\t\/**\n\t * Serializes the argument of an action to render it in a human friendly format.\n\t *\n\t * @param array $row The array representation of the current row of the table.\n\t *\n\t * @return string\n\t *\/\n\tpublic function column_args( array $row ) {\n\t\tif ( empty( $row['args'] ) ) {\n\t\t\treturn apply_filters( 'action_scheduler_list_table_column_args', '', $row );\n\t\t}\n\n\t\t$row_html = '<ul>';\n\t\tforeach ( $row['args'] as $key => $value ) {\n\t\t\t$row_html .= sprintf( '<li><code>%s => %s<\/code><\/li>', esc_html( var_export( $key, true ) ), esc_html( var_export( $value, true ) ) ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t}\n\t\t$row_html .= '<\/ul>';\n\n\t\treturn apply_filters( 'action_scheduler_list_table_column_args', $row_html, $row );\n\t}\n\n\t\/**\n\t * Prints the logs entries inline. We do so to avoid loading Javascript and other hacks to show it in a modal.\n\t *\n\t * @param array $row Action array.\n\t * @return string\n\t *\/\n\tpublic function column_log_entries( array $row ) {\n\n\t\t$log_entries_html = '<ol>';\n\n\t\t$timezone = new DateTimezone( 'UTC' );\n\n\t\tforeach ( $row['log_entries'] as $log_entry ) {\n\t\t\t$log_entries_html .= $this->get_log_entry_html( $log_entry, $timezone );\n\t\t}\n\n\t\t$log_entries_html .= '<\/ol>';\n\n\t\treturn $log_entries_html;\n\t}\n\n\t\/**\n\t * Prints the logs entries inline. We do so to avoid loading Javascript and other hacks to show it in a modal.\n\t *\n\t * @param ActionScheduler_LogEntry $log_entry Log entry object.\n\t * @param DateTimezone             $timezone Timestamp.\n\t * @return string\n\t *\/\n\tprotected function get_log_entry_html( ActionScheduler_LogEntry $log_entry, DateTimezone $timezone ) {\n\t\t$date = $log_entry->get_date();\n\t\t$date->setTimezone( $timezone );\n\t\treturn sprintf( '<li><strong>%s<\/strong><br\/>%s<\/li>', esc_html( $date->format( 'Y-m-d H:i:s O' ) ), esc_html( $log_entry->get_message() ) );\n\t}\n\n\t\/**\n\t * Only display row actions for pending actions.\n\t *\n\t * @param array  $row         Row to render.\n\t * @param string $column_name Current row.\n\t *\n\t * @return string\n\t *\/\n\tprotected function maybe_render_actions( $row, $column_name ) {\n\t\tif ( 'pending' === strtolower( $row['status_name'] ) ) {\n\t\t\treturn parent::maybe_render_actions( $row, $column_name );\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Renders admin notifications\n\t *\n\t * Notifications:\n\t *  1. When the maximum number of tasks are being executed simultaneously.\n\t *  2. Notifications when a task is manually executed.\n\t *  3. Tables are missing.\n\t *\/\n\tpublic function display_admin_notices() {\n\t\tglobal $wpdb;\n\n\t\tif ( ( is_a( $this->store, 'ActionScheduler_HybridStore' ) || is_a( $this->store, 'ActionScheduler_DBStore' ) ) && apply_filters( 'action_scheduler_enable_recreate_data_store', true ) ) {\n\t\t\t$table_list = array(\n\t\t\t\t'actionscheduler_actions',\n\t\t\t\t'actionscheduler_logs',\n\t\t\t\t'actionscheduler_groups',\n\t\t\t\t'actionscheduler_claims',\n\t\t\t);\n\n\t\t\t$found_tables = $wpdb->get_col( \"SHOW TABLES LIKE '{$wpdb->prefix}actionscheduler%'\" ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t\tforeach ( $table_list as $table_name ) {\n\t\t\t\tif ( ! in_array( $wpdb->prefix . $table_name, $found_tables, true ) ) {\n\t\t\t\t\t$this->admin_notices[] = array(\n\t\t\t\t\t\t'class'   => 'error',\n\t\t\t\t\t\t'message' => __( 'It appears one or more database tables were missing. Attempting to re-create the missing table(s).', 'action-scheduler' ),\n\t\t\t\t\t);\n\t\t\t\t\t$this->recreate_tables();\n\t\t\t\t\tparent::display_admin_notices();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->runner->has_maximum_concurrent_batches() ) {\n\t\t\t$claim_count           = $this->store->get_claim_count();\n\t\t\t$this->admin_notices[] = array(\n\t\t\t\t'class'   => 'updated',\n\t\t\t\t'message' => sprintf(\n\t\t\t\t\t\/* translators: %s: amount of claims *\/\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Maximum simultaneous queues already in progress (%s queue). No additional queues will begin processing until the current queues are complete.',\n\t\t\t\t\t\t'Maximum simultaneous queues already in progress (%s queues). No additional queues will begin processing until the current queues are complete.',\n\t\t\t\t\t\t$claim_count,\n\t\t\t\t\t\t'action-scheduler'\n\t\t\t\t\t),\n\t\t\t\t\t$claim_count\n\t\t\t\t),\n\t\t\t);\n\t\t} elseif ( $this->store->has_pending_actions_due() ) {\n\n\t\t\t$async_request_lock_expiration = ActionScheduler::lock()->get_expiration( 'async-request-runner' );\n\n\t\t\t\/\/ No lock set or lock expired.\n\t\t\tif ( false === $async_request_lock_expiration || $async_request_lock_expiration < time() ) {\n\t\t\t\t$in_progress_url = add_query_arg( 'status', 'in-progress', remove_query_arg( 'status' ) );\n\t\t\t\t\/* translators: %s: process URL *\/\n\t\t\t\t$async_request_message = sprintf( __( 'A new queue has begun processing. <a href=\"%s\">View actions in-progress &raquo;<\/a>', 'action-scheduler' ), esc_url( $in_progress_url ) );\n\t\t\t} else {\n\t\t\t\t\/* translators: %d: seconds *\/\n\t\t\t\t$async_request_message = sprintf( __( 'The next queue will begin processing in approximately %d seconds.', 'action-scheduler' ), $async_request_lock_expiration - time() );\n\t\t\t}\n\n\t\t\t$this->admin_notices[] = array(\n\t\t\t\t'class'   => 'notice notice-info',\n\t\t\t\t'message' => $async_request_message,\n\t\t\t);\n\t\t}\n\n\t\t$notification = get_transient( 'action_scheduler_admin_notice' );\n\n\t\tif ( is_array( $notification ) ) {\n\t\t\tdelete_transient( 'action_scheduler_admin_notice' );\n\n\t\t\t$action           = $this->store->fetch_action( $notification['action_id'] );\n\t\t\t$action_hook_html = '<strong><code>' . $action->get_hook() . '<\/code><\/strong>';\n\n\t\t\tif ( 1 === absint( $notification['success'] ) ) {\n\t\t\t\t$class = 'updated';\n\t\t\t\tswitch ( $notification['row_action_type'] ) {\n\t\t\t\t\tcase 'run':\n\t\t\t\t\t\t\/* translators: %s: action HTML *\/\n\t\t\t\t\t\t$action_message_html = sprintf( __( 'Successfully executed action: %s', 'action-scheduler' ), $action_hook_html );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cancel':\n\t\t\t\t\t\t\/* translators: %s: action HTML *\/\n\t\t\t\t\t\t$action_message_html = sprintf( __( 'Successfully canceled action: %s', 'action-scheduler' ), $action_hook_html );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\/* translators: %s: action HTML *\/\n\t\t\t\t\t\t$action_message_html = sprintf( __( 'Successfully processed change for action: %s', 'action-scheduler' ), $action_hook_html );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$class = 'error';\n\t\t\t\t\/* translators: 1: action HTML 2: action ID 3: error message *\/\n\t\t\t\t$action_message_html = sprintf( __( 'Could not process change for action: \"%1$s\" (ID: %2$d). Error: %3$s', 'action-scheduler' ), $action_hook_html, esc_html( $notification['action_id'] ), esc_html( $notification['error_message'] ) );\n\t\t\t}\n\n\t\t\t$action_message_html = apply_filters( 'action_scheduler_admin_notice_html', $action_message_html, $action, $notification );\n\n\t\t\t$this->admin_notices[] = array(\n\t\t\t\t'class'   => $class,\n\t\t\t\t'message' => $action_message_html,\n\t\t\t);\n\t\t}\n\n\t\tparent::display_admin_notices();\n\t}\n\n\t\/**\n\t * Prints the scheduled date in a human friendly format.\n\t *\n\t * @param array $row The array representation of the current row of the table.\n\t *\n\t * @return string\n\t *\/\n\tpublic function column_schedule( $row ) {\n\t\treturn $this->get_schedule_display_string( $row['schedule'] );\n\t}\n\n\t\/**\n\t * Get the scheduled date in a human friendly format.\n\t *\n\t * @param ActionScheduler_Schedule $schedule Action's schedule.\n\t * @return string\n\t *\/\n\tprotected function get_schedule_display_string( ActionScheduler_Schedule $schedule ) {\n\n\t\t$schedule_display_string = '';\n\n\t\tif ( is_a( $schedule, 'ActionScheduler_NullSchedule' ) ) {\n\t\t\treturn __( 'async', 'action-scheduler' );\n\t\t}\n\n\t\tif ( ! method_exists( $schedule, 'get_date' ) || ! $schedule->get_date() ) {\n\t\t\treturn '0000-00-00 00:00:00';\n\t\t}\n\n\t\t$next_timestamp = $schedule->get_date()->getTimestamp();\n\n\t\t$schedule_display_string .= $schedule->get_date()->format( 'Y-m-d H:i:s O' );\n\t\t$schedule_display_string .= '<br\/>';\n\n\t\tif ( gmdate( 'U' ) > $next_timestamp ) {\n\t\t\t\/* translators: %s: date interval *\/\n\t\t\t$schedule_display_string .= sprintf( __( ' (%s ago)', 'action-scheduler' ), self::human_interval( gmdate( 'U' ) - $next_timestamp ) );\n\t\t} else {\n\t\t\t\/* translators: %s: date interval *\/\n\t\t\t$schedule_display_string .= sprintf( __( ' (%s)', 'action-scheduler' ), self::human_interval( $next_timestamp - gmdate( 'U' ) ) );\n\t\t}\n\n\t\treturn $schedule_display_string;\n\t}\n\n\t\/**\n\t * Bulk delete.\n\t *\n\t * Deletes actions based on their ID. This is the handler for the bulk delete. It assumes the data\n\t * properly validated by the callee and it will delete the actions without any extra validation.\n\t *\n\t * @param int[]  $ids Action IDs.\n\t * @param string $ids_sql Inherited and unused.\n\t *\/\n\tprotected function bulk_delete( array $ids, $ids_sql ) {\n\t\tforeach ( $ids as $id ) {\n\t\t\ttry {\n\t\t\t\t$this->store->delete_action( $id );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\t\/\/ A possible reason for an exception would include a scenario where the same action is deleted by a\n\t\t\t\t\/\/ concurrent request.\n\t\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\t\terror_log(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\/* translators: 1: action ID 2: exception message. *\/\n\t\t\t\t\t\t__( 'Action Scheduler was unable to delete action %1$d. Reason: %2$s', 'action-scheduler' ),\n\t\t\t\t\t\t$id,\n\t\t\t\t\t\t$e->getMessage()\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Implements the logic behind running an action. ActionScheduler_Abstract_ListTable validates the request and their\n\t * parameters are valid.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tprotected function row_action_cancel( $action_id ) {\n\t\t$this->process_row_action( $action_id, 'cancel' );\n\t}\n\n\t\/**\n\t * Implements the logic behind running an action. ActionScheduler_Abstract_ListTable validates the request and their\n\t * parameters are valid.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tprotected function row_action_run( $action_id ) {\n\t\t$this->process_row_action( $action_id, 'run' );\n\t}\n\n\t\/**\n\t * Force the data store schema updates.\n\t *\/\n\tprotected function recreate_tables() {\n\t\tif ( is_a( $this->store, 'ActionScheduler_HybridStore' ) ) {\n\t\t\t$store = $this->store;\n\t\t} else {\n\t\t\t$store = new ActionScheduler_HybridStore();\n\t\t}\n\t\tadd_action( 'action_scheduler\/created_table', array( $store, 'set_autoincrement' ), 10, 2 );\n\n\t\t$store_schema  = new ActionScheduler_StoreSchema();\n\t\t$logger_schema = new ActionScheduler_LoggerSchema();\n\t\t$store_schema->register_tables( true );\n\t\t$logger_schema->register_tables( true );\n\n\t\tremove_action( 'action_scheduler\/created_table', array( $store, 'set_autoincrement' ), 10 );\n\t}\n\t\/**\n\t * Implements the logic behind processing an action once an action link is clicked on the list table.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $row_action_type The type of action to perform on the action.\n\t *\/\n\tprotected function process_row_action( $action_id, $row_action_type ) {\n\t\ttry {\n\t\t\tswitch ( $row_action_type ) {\n\t\t\t\tcase 'run':\n\t\t\t\t\t$this->runner->process_action( $action_id, 'Admin List Table' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'cancel':\n\t\t\t\t\t$this->store->cancel_action( $action_id );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$success       = 1;\n\t\t\t$error_message = '';\n\t\t} catch ( Exception $e ) {\n\t\t\t$success       = 0;\n\t\t\t$error_message = $e->getMessage();\n\t\t}\n\n\t\tset_transient( 'action_scheduler_admin_notice', compact( 'action_id', 'success', 'error_message', 'row_action_type' ), 30 );\n\t}\n\n\t\/**\n\t * {@inheritDoc}\n\t *\/\n\tpublic function prepare_items() {\n\t\t$this->prepare_column_headers();\n\n\t\t$per_page = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\n\t\t$query = array(\n\t\t\t'per_page' => $per_page,\n\t\t\t'offset'   => $this->get_items_offset(),\n\t\t\t'status'   => $this->get_request_status(),\n\t\t\t'orderby'  => $this->get_request_orderby(),\n\t\t\t'order'    => $this->get_request_order(),\n\t\t\t'search'   => $this->get_request_search_query(),\n\t\t);\n\n\t\t\/**\n\t\t * Change query arguments to query for past-due actions.\n\t\t * Past-due actions have the 'pending' status and are in the past.\n\t\t * This is needed because registering 'past-due' as a status is overkill.\n\t\t *\/\n\t\tif ( 'past-due' === $this->get_request_status() ) {\n\t\t\t$query['status'] = ActionScheduler_Store::STATUS_PENDING;\n\t\t\t$query['date']   = as_get_datetime_object();\n\t\t}\n\n\t\t$this->items = array();\n\n\t\t$total_items = $this->store->query_actions( $query, 'count' );\n\n\t\t$status_labels = $this->store->get_status_labels();\n\n\t\tforeach ( $this->store->query_actions( $query ) as $action_id ) {\n\t\t\ttry {\n\t\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( is_a( $action, 'ActionScheduler_NullAction' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$this->items[ $action_id ] = array(\n\t\t\t\t'ID'          => $action_id,\n\t\t\t\t'hook'        => $action->get_hook(),\n\t\t\t\t'status_name' => $this->store->get_status( $action_id ),\n\t\t\t\t'status'      => $status_labels[ $this->store->get_status( $action_id ) ],\n\t\t\t\t'args'        => $action->get_args(),\n\t\t\t\t'group'       => $action->get_group(),\n\t\t\t\t'log_entries' => $this->logger->get_logs( $action_id ),\n\t\t\t\t'claim_id'    => $this->store->get_claim_id( $action_id ),\n\t\t\t\t'recurrence'  => $this->get_recurrence( $action ),\n\t\t\t\t'schedule'    => $action->get_schedule(),\n\t\t\t);\n\t\t}\n\n\t\t$this->set_pagination_args(\n\t\t\tarray(\n\t\t\t\t'total_items' => $total_items,\n\t\t\t\t'per_page'    => $per_page,\n\t\t\t\t'total_pages' => ceil( $total_items \/ $per_page ),\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Prints the available statuses so the user can click to filter.\n\t *\/\n\tprotected function display_filter_by_status() {\n\t\t$this->status_counts = $this->store->action_counts() + $this->store->extra_action_counts();\n\t\tparent::display_filter_by_status();\n\t}\n\n\t\/**\n\t * Get the text to display in the search box on the list table.\n\t *\/\n\tprotected function get_search_box_button_text() {\n\t\treturn __( 'Search hook, args and claim ID', 'action-scheduler' );\n\t}\n\n\t\/**\n\t * {@inheritDoc}\n\t *\/\n\tprotected function get_per_page_option_name() {\n\t\treturn str_replace( '-', '_', $this->screen->id ) . '_per_page';\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schema\/ActionScheduler_StoreSchema.php","ext":"php","size":5263,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_StoreSchema\n *\n * @codeCoverageIgnore\n *\n * Creates custom tables for storing scheduled actions\n *\/\nclass ActionScheduler_StoreSchema extends ActionScheduler_Abstract_Schema {\n\tconst ACTIONS_TABLE = 'actionscheduler_actions';\n\tconst CLAIMS_TABLE  = 'actionscheduler_claims';\n\tconst GROUPS_TABLE  = 'actionscheduler_groups';\n\tconst DEFAULT_DATE  = '0000-00-00 00:00:00';\n\n\t\/**\n\t * Schema version.\n\t *\n\t * Increment this value to trigger a schema update.\n\t *\n\t * @var int\n\t *\/\n\tprotected $schema_version = 8;\n\n\t\/**\n\t * Construct.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->tables = array(\n\t\t\tself::ACTIONS_TABLE,\n\t\t\tself::CLAIMS_TABLE,\n\t\t\tself::GROUPS_TABLE,\n\t\t);\n\t}\n\n\t\/**\n\t * Performs additional setup work required to support this schema.\n\t *\/\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler_before_schema_update', array( $this, 'update_schema_5_0' ), 10, 2 );\n\t}\n\n\t\/**\n\t * Get table definition.\n\t *\n\t * @param string $table Table name.\n\t *\/\n\tprotected function get_table_definition( $table ) {\n\t\tglobal $wpdb;\n\t\t$table_name      = $wpdb->$table;\n\t\t$charset_collate = $wpdb->get_charset_collate();\n\t\t$default_date    = self::DEFAULT_DATE;\n\t\t\/\/ phpcs:ignore Squiz.PHP.CommentedOutCode\n\t\t$max_index_length = 191; \/\/ @see wp_get_db_schema()\n\n\t\t$hook_status_scheduled_date_gmt_max_index_length = $max_index_length - 20 - 8; \/\/ - status, - scheduled_date_gmt\n\n\t\tswitch ( $table ) {\n\n\t\t\tcase self::ACTIONS_TABLE:\n\t\t\t\treturn \"CREATE TABLE {$table_name} (\n\t\t\t\t        action_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        hook varchar(191) NOT NULL,\n\t\t\t\t        status varchar(20) NOT NULL,\n\t\t\t\t        scheduled_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        scheduled_date_local datetime NULL default '{$default_date}',\n\t\t\t\t        priority tinyint unsigned NOT NULL default '10',\n\t\t\t\t        args varchar($max_index_length),\n\t\t\t\t        schedule longtext,\n\t\t\t\t        group_id bigint(20) unsigned NOT NULL default '0',\n\t\t\t\t        attempts int(11) NOT NULL default '0',\n\t\t\t\t        last_attempt_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        last_attempt_local datetime NULL default '{$default_date}',\n\t\t\t\t        claim_id bigint(20) unsigned NOT NULL default '0',\n\t\t\t\t        extended_args varchar(8000) DEFAULT NULL,\n\t\t\t\t        PRIMARY KEY  (action_id),\n\t\t\t\t        KEY hook_status_scheduled_date_gmt (hook($hook_status_scheduled_date_gmt_max_index_length), status, scheduled_date_gmt),\n\t\t\t\t        KEY status_scheduled_date_gmt (status, scheduled_date_gmt),\n\t\t\t\t        KEY scheduled_date_gmt (scheduled_date_gmt),\n\t\t\t\t        KEY args (args($max_index_length)),\n\t\t\t\t        KEY group_id (group_id),\n\t\t\t\t        KEY last_attempt_gmt (last_attempt_gmt),\n\t\t\t\t        KEY `claim_id_status_priority_scheduled_date_gmt` (`claim_id`,`status`,`priority`,`scheduled_date_gmt`),\n\t\t\t\t        KEY `status_last_attempt_gmt` (`status`,`last_attempt_gmt`),\n\t\t\t\t        KEY `status_claim_id` (`status`,`claim_id`)\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tcase self::CLAIMS_TABLE:\n\t\t\t\treturn \"CREATE TABLE {$table_name} (\n\t\t\t\t        claim_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        date_created_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        PRIMARY KEY  (claim_id),\n\t\t\t\t        KEY date_created_gmt (date_created_gmt)\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tcase self::GROUPS_TABLE:\n\t\t\t\treturn \"CREATE TABLE {$table_name} (\n\t\t\t\t        group_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        slug varchar(255) NOT NULL,\n\t\t\t\t        PRIMARY KEY  (group_id),\n\t\t\t\t        KEY slug (slug($max_index_length))\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\t\/**\n\t * Update the actions table schema, allowing datetime fields to be NULL.\n\t *\n\t * This is needed because the NOT NULL constraint causes a conflict with some versions of MySQL\n\t * configured with sql_mode=NO_ZERO_DATE, which can for instance lead to tables not being created.\n\t *\n\t * Most other schema updates happen via ActionScheduler_Abstract_Schema::update_table(), however\n\t * that method relies on dbDelta() and this change is not possible when using that function.\n\t *\n\t * @param string $table Name of table being updated.\n\t * @param string $db_version The existing schema version of the table.\n\t *\/\n\tpublic function update_schema_5_0( $table, $db_version ) {\n\t\tglobal $wpdb;\n\n\t\tif ( 'actionscheduler_actions' !== $table || version_compare( $db_version, '5', '>=' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ phpcs:disable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t$table_name   = $wpdb->prefix . 'actionscheduler_actions';\n\t\t$table_list   = $wpdb->get_col( \"SHOW TABLES LIKE '{$table_name}'\" );\n\t\t$default_date = self::DEFAULT_DATE;\n\n\t\tif ( ! empty( $table_list ) ) {\n\t\t\t$query = \"\n\t\t\t\tALTER TABLE {$table_name}\n\t\t\t\tMODIFY COLUMN scheduled_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN scheduled_date_local datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN last_attempt_gmt datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN last_attempt_local datetime NULL default '{$default_date}'\n\t\t\";\n\t\t\t$wpdb->query( $query ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\t\/\/ phpcs:enable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/schema\/ActionScheduler_LoggerSchema.php","ext":"php","size":3002,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_LoggerSchema\n *\n * @codeCoverageIgnore\n *\n * Creates a custom table for storing action logs\n *\/\nclass ActionScheduler_LoggerSchema extends ActionScheduler_Abstract_Schema {\n\tconst LOG_TABLE = 'actionscheduler_logs';\n\n\t\/**\n\t * Schema version.\n\t *\n\t * Increment this value to trigger a schema update.\n\t *\n\t * @var int\n\t *\/\n\tprotected $schema_version = 3;\n\n\t\/**\n\t * Construct.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->tables = array(\n\t\t\tself::LOG_TABLE,\n\t\t);\n\t}\n\n\t\/**\n\t * Performs additional setup work required to support this schema.\n\t *\/\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler_before_schema_update', array( $this, 'update_schema_3_0' ), 10, 2 );\n\t}\n\n\t\/**\n\t * Get table definition.\n\t *\n\t * @param string $table Table name.\n\t *\/\n\tprotected function get_table_definition( $table ) {\n\t\tglobal $wpdb;\n\t\t$table_name      = $wpdb->$table;\n\t\t$charset_collate = $wpdb->get_charset_collate();\n\t\tswitch ( $table ) {\n\n\t\t\tcase self::LOG_TABLE:\n\t\t\t\t$default_date = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\t\t\t\treturn \"CREATE TABLE $table_name (\n\t\t\t\t        log_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        action_id bigint(20) unsigned NOT NULL,\n\t\t\t\t        message text NOT NULL,\n\t\t\t\t        log_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        log_date_local datetime NULL default '{$default_date}',\n\t\t\t\t        PRIMARY KEY  (log_id),\n\t\t\t\t        KEY action_id (action_id),\n\t\t\t\t        KEY log_date_gmt (log_date_gmt)\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\t\/**\n\t * Update the logs table schema, allowing datetime fields to be NULL.\n\t *\n\t * This is needed because the NOT NULL constraint causes a conflict with some versions of MySQL\n\t * configured with sql_mode=NO_ZERO_DATE, which can for instance lead to tables not being created.\n\t *\n\t * Most other schema updates happen via ActionScheduler_Abstract_Schema::update_table(), however\n\t * that method relies on dbDelta() and this change is not possible when using that function.\n\t *\n\t * @param string $table Name of table being updated.\n\t * @param string $db_version The existing schema version of the table.\n\t *\/\n\tpublic function update_schema_3_0( $table, $db_version ) {\n\t\tglobal $wpdb;\n\n\t\tif ( 'actionscheduler_logs' !== $table || version_compare( $db_version, '3', '>=' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ phpcs:disable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t$table_name   = $wpdb->prefix . 'actionscheduler_logs';\n\t\t$table_list   = $wpdb->get_col( \"SHOW TABLES LIKE '{$table_name}'\" );\n\t\t$default_date = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\n\t\tif ( ! empty( $table_list ) ) {\n\t\t\t$query = \"\n\t\t\t\tALTER TABLE {$table_name}\n\t\t\t\tMODIFY COLUMN log_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN log_date_local datetime NULL default '{$default_date}'\n\t\t\t\";\n\t\t\t$wpdb->query( $query ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\t\/\/ phpcs:enable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_Compatibility.php","ext":"php","size":3904,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Compatibility\n *\/\nclass ActionScheduler_Compatibility {\n\t\/**\n\t * Converts a shorthand byte value to an integer byte value.\n\t *\n\t * Wrapper for wp_convert_hr_to_bytes(), moved to load.php in WordPress 4.6 from media.php\n\t *\n\t * @link https:\/\/secure.php.net\/manual\/en\/function.ini-get.php\n\t * @link https:\/\/secure.php.net\/manual\/en\/faq.using.php#faq.using.shorthandbytes\n\t *\n\t * @param string $value A (PHP ini) byte value, either shorthand or ordinary.\n\t * @return int An integer byte value.\n\t *\/\n\tpublic static function convert_hr_to_bytes( $value ) {\n\t\tif ( function_exists( 'wp_convert_hr_to_bytes' ) ) {\n\t\t\treturn wp_convert_hr_to_bytes( $value );\n\t\t}\n\n\t\t$value = strtolower( trim( $value ) );\n\t\t$bytes = (int) $value;\n\n\t\tif ( false !== strpos( $value, 'g' ) ) {\n\t\t\t$bytes *= GB_IN_BYTES;\n\t\t} elseif ( false !== strpos( $value, 'm' ) ) {\n\t\t\t$bytes *= MB_IN_BYTES;\n\t\t} elseif ( false !== strpos( $value, 'k' ) ) {\n\t\t\t$bytes *= KB_IN_BYTES;\n\t\t}\n\n\t\t\/\/ Deal with large (float) values which run into the maximum integer size.\n\t\treturn min( $bytes, PHP_INT_MAX );\n\t}\n\n\t\/**\n\t * Attempts to raise the PHP memory limit for memory intensive processes.\n\t *\n\t * Only allows raising the existing limit and prevents lowering it.\n\t *\n\t * Wrapper for wp_raise_memory_limit(), added in WordPress v4.6.0\n\t *\n\t * @return bool|int|string The limit that was set or false on failure.\n\t *\/\n\tpublic static function raise_memory_limit() {\n\t\tif ( function_exists( 'wp_raise_memory_limit' ) ) {\n\t\t\treturn wp_raise_memory_limit( 'admin' );\n\t\t}\n\n\t\t$current_limit     = @ini_get( 'memory_limit' ); \/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t$current_limit_int = self::convert_hr_to_bytes( $current_limit );\n\n\t\tif ( -1 === $current_limit_int ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$wp_max_limit       = WP_MAX_MEMORY_LIMIT;\n\t\t$wp_max_limit_int   = self::convert_hr_to_bytes( $wp_max_limit );\n\t\t$filtered_limit     = apply_filters( 'admin_memory_limit', $wp_max_limit );\n\t\t$filtered_limit_int = self::convert_hr_to_bytes( $filtered_limit );\n\n\t\t\/\/ phpcs:disable WordPress.PHP.IniSet.memory_limit_Blacklisted\n\t\t\/\/ phpcs:disable WordPress.PHP.NoSilencedErrors.Discouraged\n\n\t\tif ( -1 === $filtered_limit_int || ( $filtered_limit_int > $wp_max_limit_int && $filtered_limit_int > $current_limit_int ) ) {\n\t\t\tif ( false !== @ini_set( 'memory_limit', $filtered_limit ) ) {\n\t\t\t\treturn $filtered_limit;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} elseif ( -1 === $wp_max_limit_int || $wp_max_limit_int > $current_limit_int ) {\n\t\t\tif ( false !== @ini_set( 'memory_limit', $wp_max_limit ) ) {\n\t\t\t\treturn $wp_max_limit;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ phpcs:enable\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Attempts to raise the PHP timeout for time intensive processes.\n\t *\n\t * Only allows raising the existing limit and prevents lowering it. Wrapper for wc_set_time_limit(), when available.\n\t *\n\t * @param int $limit The time limit in seconds.\n\t *\/\n\tpublic static function raise_time_limit( $limit = 0 ) {\n\t\t$limit              = (int) $limit;\n\t\t$max_execution_time = (int) ini_get( 'max_execution_time' );\n\n\t\t\/\/ If the max execution time is already set to zero (unlimited), there is no reason to make a further change.\n\t\tif ( 0 === $max_execution_time ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Whichever of $max_execution_time or $limit is higher is the amount by which we raise the time limit.\n\t\t$raise_by = 0 === $limit || $limit > $max_execution_time ? $limit : $max_execution_time;\n\n\t\tif ( function_exists( 'wc_set_time_limit' ) ) {\n\t\t\twc_set_time_limit( $raise_by );\n\t\t} elseif ( function_exists( 'set_time_limit' ) && false === strpos( ini_get( 'disable_functions' ), 'set_time_limit' ) && ! ini_get( 'safe_mode' ) ) { \/\/ phpcs:ignore PHPCompatibility.IniDirectives.RemovedIniDirectives.safe_modeDeprecatedRemoved\n\t\t\t@set_time_limit( $raise_by ); \/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_Versions.php","ext":"php","size":3690,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Versions\n *\/\nclass ActionScheduler_Versions {\n\t\/**\n\t * ActionScheduler_Versions instance.\n\t *\n\t * @var ActionScheduler_Versions\n\t *\/\n\tprivate static $instance = null;\n\n\t\/**\n\t * Versions.\n\t *\n\t * @var array<string, callable>\n\t *\/\n\tprivate $versions = array();\n\n\t\/**\n\t * Registered sources.\n\t *\n\t * @var array<string, string>\n\t *\/\n\tprivate $sources = array();\n\n\t\/**\n\t * Register version's callback.\n\t *\n\t * @param string   $version_string          Action Scheduler version.\n\t * @param callable $initialization_callback Callback to initialize the version.\n\t *\/\n\tpublic function register( $version_string, $initialization_callback ) {\n\t\tif ( isset( $this->versions[ $version_string ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_debug_backtrace\n\t\t$backtrace = debug_backtrace( DEBUG_BACKTRACE_IGNORE_ARGS );\n\t\t$source    = $backtrace[0]['file'];\n\n\t\t$this->versions[ $version_string ] = $initialization_callback;\n\t\t$this->sources[ $source ]          = $version_string;\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get all versions.\n\t *\/\n\tpublic function get_versions() {\n\t\treturn $this->versions;\n\t}\n\n\t\/**\n\t * Get registered sources.\n\t *\n\t * Use with caution: this method is only available as of Action Scheduler's 3.9.1\n\t * release and, owing to the way Action Scheduler is loaded, it's possible that the\n\t * class definition used at runtime will belong to an earlier version.\n\t *\n\t * @since 3.9.1\n\t *\n\t * @return array<string, string>\n\t *\/\n\tpublic function get_sources() {\n\t\treturn $this->sources;\n\t}\n\n\t\/**\n\t * Get latest version registered.\n\t *\/\n\tpublic function latest_version() {\n\t\t$keys = array_keys( $this->versions );\n\t\tif ( empty( $keys ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tuasort( $keys, 'version_compare' );\n\t\treturn end( $keys );\n\t}\n\n\t\/**\n\t * Get callback for latest registered version.\n\t *\/\n\tpublic function latest_version_callback() {\n\t\t$latest = $this->latest_version();\n\n\t\tif ( empty( $latest ) || ! isset( $this->versions[ $latest ] ) ) {\n\t\t\treturn '__return_null';\n\t\t}\n\n\t\treturn $this->versions[ $latest ];\n\t}\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Versions\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$instance ) ) {\n\t\t\tself::$instance = new self();\n\t\t}\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function initialize_latest_version() {\n\t\t$self = self::instance();\n\t\tcall_user_func( $self->latest_version_callback() );\n\t}\n\n\t\/**\n\t * Returns information about the plugin or theme which contains the current active version\n\t * of Action Scheduler.\n\t *\n\t * If this cannot be determined, or if Action Scheduler is being loaded via some other\n\t * method, then it will return an empty array. Otherwise, if populated, the array will\n\t * look like the following:\n\t *\n\t *     [\n\t *         'type' => 'plugin', # or 'theme'\n\t *         'name' => 'Name',\n\t *     ]\n\t *\n\t * @deprecated 3.9.2 Use ActionScheduler_SystemInformation::active_source().\n\t *\n\t * @return array\n\t *\/\n\tpublic function active_source(): array {\n\t\t_deprecated_function( __METHOD__, '3.9.2', 'ActionScheduler_SystemInformation::active_source()' );\n\t\treturn ActionScheduler_SystemInformation::active_source();\n\t}\n\n\t\/**\n\t * Returns the directory path for the currently active installation of Action Scheduler.\n\t *\n\t * @deprecated 3.9.2 Use ActionScheduler_SystemInformation::active_source_path().\n\t *\n\t * @return string\n\t *\/\n\tpublic function active_source_path(): string {\n\t\t_deprecated_function( __METHOD__, '3.9.2', 'ActionScheduler_SystemInformation::active_source_path()' );\n\t\treturn ActionScheduler_SystemInformation::active_source_path();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_wcSystemStatus.php","ext":"php","size":5279,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_wcSystemStatus\n *\/\nclass ActionScheduler_wcSystemStatus {\n\n\t\/**\n\t * The active data stores\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprotected $store;\n\n\t\/**\n\t * Constructor method for ActionScheduler_wcSystemStatus.\n\t *\n\t * @param ActionScheduler_Store $store Active store object.\n\t *\n\t * @return void\n\t *\/\n\tpublic function __construct( $store ) {\n\t\t$this->store = $store;\n\t}\n\n\t\/**\n\t * Display action data, including number of actions grouped by status and the oldest & newest action in each status.\n\t *\n\t * Helpful to identify issues, like a clogged queue.\n\t *\/\n\tpublic function render() {\n\t\t$action_counts     = $this->store->action_counts();\n\t\t$status_labels     = $this->store->get_status_labels();\n\t\t$oldest_and_newest = $this->get_oldest_and_newest( array_keys( $status_labels ) );\n\n\t\t$this->get_template( $status_labels, $action_counts, $oldest_and_newest );\n\t}\n\n\t\/**\n\t * Get oldest and newest scheduled dates for a given set of statuses.\n\t *\n\t * @param array $status_keys Set of statuses to find oldest & newest action for.\n\t * @return array\n\t *\/\n\tprotected function get_oldest_and_newest( $status_keys ) {\n\n\t\t$oldest_and_newest = array();\n\n\t\tforeach ( $status_keys as $status ) {\n\t\t\t$oldest_and_newest[ $status ] = array(\n\t\t\t\t'oldest' => '&ndash;',\n\t\t\t\t'newest' => '&ndash;',\n\t\t\t);\n\n\t\t\tif ( 'in-progress' === $status ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$oldest_and_newest[ $status ]['oldest'] = $this->get_action_status_date( $status, 'oldest' );\n\t\t\t$oldest_and_newest[ $status ]['newest'] = $this->get_action_status_date( $status, 'newest' );\n\t\t}\n\n\t\treturn $oldest_and_newest;\n\t}\n\n\t\/**\n\t * Get oldest or newest scheduled date for a given status.\n\t *\n\t * @param string $status Action status label\/name string.\n\t * @param string $date_type Oldest or Newest.\n\t * @return DateTime\n\t *\/\n\tprotected function get_action_status_date( $status, $date_type = 'oldest' ) {\n\n\t\t$order = 'oldest' === $date_type ? 'ASC' : 'DESC';\n\n\t\t$action = $this->store->query_actions(\n\t\t\tarray(\n\t\t\t\t'status'   => $status,\n\t\t\t\t'per_page' => 1,\n\t\t\t\t'order'    => $order,\n\t\t\t)\n\t\t);\n\n\t\tif ( ! empty( $action ) ) {\n\t\t\t$date_object = $this->store->get_date( $action[0] );\n\t\t\t$action_date = $date_object->format( 'Y-m-d H:i:s O' );\n\t\t} else {\n\t\t\t$action_date = '&ndash;';\n\t\t}\n\n\t\treturn $action_date;\n\t}\n\n\t\/**\n\t * Get oldest or newest scheduled date for a given status.\n\t *\n\t * @param array $status_labels Set of statuses to find oldest & newest action for.\n\t * @param array $action_counts Number of actions grouped by status.\n\t * @param array $oldest_and_newest Date of the oldest and newest action with each status.\n\t *\/\n\tprotected function get_template( $status_labels, $action_counts, $oldest_and_newest ) {\n\t\t$as_version   = ActionScheduler_Versions::instance()->latest_version();\n\t\t$as_datastore = get_class( ActionScheduler_Store::instance() );\n\t\t?>\n\n\t\t<table class=\"wc_status_table widefat\" cellspacing=\"0\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan=\"5\" data-export-label=\"Action Scheduler\"><h2><?php esc_html_e( 'Action Scheduler', 'action-scheduler' ); ?><?php echo wc_help_tip( esc_html__( 'This section shows details of Action Scheduler.', 'action-scheduler' ) ); ?><\/h2><\/th>\n\t\t\t\t<\/tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\" data-export-label=\"Version\"><?php esc_html_e( 'Version:', 'action-scheduler' ); ?><\/td>\n\t\t\t\t\t<td colspan=\"3\"><?php echo esc_html( $as_version ); ?><\/td>\n\t\t\t\t<\/tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\" data-export-label=\"Data store\"><?php esc_html_e( 'Data store:', 'action-scheduler' ); ?><\/td>\n\t\t\t\t\t<td colspan=\"3\"><?php echo esc_html( $as_datastore ); ?><\/td>\n\t\t\t\t<\/tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Action Status', 'action-scheduler' ); ?><\/strong><\/td>\n\t\t\t\t\t<td class=\"help\">&nbsp;<\/td>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Count', 'action-scheduler' ); ?><\/strong><\/td>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Oldest Scheduled Date', 'action-scheduler' ); ?><\/strong><\/td>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Newest Scheduled Date', 'action-scheduler' ); ?><\/strong><\/td>\n\t\t\t\t<\/tr>\n\t\t\t<\/thead>\n\t\t\t<tbody>\n\t\t\t\t<?php\n\t\t\t\tforeach ( $action_counts as $status => $count ) {\n\t\t\t\t\t\/\/ WC uses the 3rd column for export, so we need to display more data in that (hidden when viewed as part of the table) and add an empty 2nd column.\n\t\t\t\t\tprintf(\n\t\t\t\t\t\t'<tr><td>%1$s<\/td><td>&nbsp;<\/td><td>%2$s<span style=\"display: none;\">, Oldest: %3$s, Newest: %4$s<\/span><\/td><td>%3$s<\/td><td>%4$s<\/td><\/tr>',\n\t\t\t\t\t\tesc_html( $status_labels[ $status ] ),\n\t\t\t\t\t\tesc_html( number_format_i18n( $count ) ),\n\t\t\t\t\t\tesc_html( $oldest_and_newest[ $status ]['oldest'] ),\n\t\t\t\t\t\tesc_html( $oldest_and_newest[ $status ]['newest'] )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t<\/tbody>\n\t\t<\/table>\n\n\t\t<?php\n\t}\n\n\t\/**\n\t * Is triggered when invoking inaccessible methods in an object context.\n\t *\n\t * @param string $name Name of method called.\n\t * @param array  $arguments Parameters to invoke the method with.\n\t *\n\t * @return mixed\n\t * @link https:\/\/php.net\/manual\/en\/language.oop5.overloading.php#language.oop5.overloading.methods\n\t *\/\n\tpublic function __call( $name, $arguments ) {\n\t\tswitch ( $name ) {\n\t\t\tcase 'print':\n\t\t\t\t_deprecated_function( __CLASS__ . '::print()', '2.2.4', __CLASS__ . '::render()' );\n\t\t\t\treturn call_user_func_array( array( $this, 'render' ), $arguments );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/ActionScheduler_WPCLI_QueueRunner.php","ext":"php","size":6361,"mtime":1756373567,"type":"text","content":"<?php\n\nuse Action_Scheduler\\WP_CLI\\ProgressBar;\n\n\/**\n * WP CLI Queue runner.\n *\n * This class can only be called from within a WP CLI instance.\n *\/\nclass ActionScheduler_WPCLI_QueueRunner extends ActionScheduler_Abstract_QueueRunner {\n\n\t\/**\n\t * Claimed actions.\n\t *\n\t * @var array\n\t *\/\n\tprotected $actions;\n\n\t\/**\n\t * ActionScheduler_ActionClaim instance.\n\t *\n\t * @var ActionScheduler_ActionClaim\n\t *\/\n\tprotected $claim;\n\n\t\/**\n\t * Progress bar instance.\n\t *\n\t * @var \\cli\\progress\\Bar\n\t *\/\n\tprotected $progress_bar;\n\n\t\/**\n\t * ActionScheduler_WPCLI_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null             $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null      $cleaner Cleaner object.\n\t *\n\t * @throws Exception When this is not run within WP CLI.\n\t *\/\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null ) {\n\t\tif ( ! ( defined( 'WP_CLI' ) && WP_CLI ) ) {\n\t\t\t\/* translators: %s php class name *\/\n\t\t\tthrow new Exception( sprintf( __( 'The %s class can only be run within WP CLI.', 'action-scheduler' ), __CLASS__ ) );\n\t\t}\n\n\t\tparent::__construct( $store, $monitor, $cleaner );\n\t}\n\n\t\/**\n\t * Set up the Queue before processing.\n\t *\n\t * @param int    $batch_size The batch size to process.\n\t * @param array  $hooks      The hooks being used to filter the actions claimed in this batch.\n\t * @param string $group      The group of actions to claim with this batch.\n\t * @param bool   $force      Whether to force running even with too many concurrent processes.\n\t *\n\t * @return int The number of actions that will be run.\n\t * @throws \\WP_CLI\\ExitException When there are too many concurrent batches.\n\t *\/\n\tpublic function setup( $batch_size, $hooks = array(), $group = '', $force = false ) {\n\t\t$this->run_cleanup();\n\t\t$this->add_hooks();\n\n\t\t\/\/ Check to make sure there aren't too many concurrent processes running.\n\t\tif ( $this->has_maximum_concurrent_batches() ) {\n\t\t\tif ( $force ) {\n\t\t\t\tWP_CLI::warning( __( 'There are too many concurrent batches, but the run is forced to continue.', 'action-scheduler' ) );\n\t\t\t} else {\n\t\t\t\tWP_CLI::error( __( 'There are too many concurrent batches.', 'action-scheduler' ) );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Stake a claim and store it.\n\t\t$this->claim = $this->store->stake_claim( $batch_size, null, $hooks, $group );\n\t\t$this->monitor->attach( $this->claim );\n\t\t$this->actions = $this->claim->get_actions();\n\n\t\treturn count( $this->actions );\n\t}\n\n\t\/**\n\t * Add our hooks to the appropriate actions.\n\t *\/\n\tprotected function add_hooks() {\n\t\tadd_action( 'action_scheduler_before_execute', array( $this, 'before_execute' ) );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'after_execute' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'action_failed' ), 10, 2 );\n\t}\n\n\t\/**\n\t * Set up the WP CLI progress bar.\n\t *\/\n\tprotected function setup_progress_bar() {\n\t\t$count              = count( $this->actions );\n\t\t$this->progress_bar = new ProgressBar(\n\t\t\t\/* translators: %d: amount of actions *\/\n\t\t\tsprintf( _n( 'Running %d action', 'Running %d actions', $count, 'action-scheduler' ), $count ),\n\t\t\t$count\n\t\t);\n\t}\n\n\t\/**\n\t * Process actions in the queue.\n\t *\n\t * @param string $context Optional runner context. Default 'WP CLI'.\n\t *\n\t * @return int The number of actions processed.\n\t *\/\n\tpublic function run( $context = 'WP CLI' ) {\n\t\tdo_action( 'action_scheduler_before_process_queue' );\n\t\t$this->setup_progress_bar();\n\t\tforeach ( $this->actions as $action_id ) {\n\t\t\t\/\/ Error if we lost the claim.\n\t\t\tif ( ! in_array( $action_id, $this->store->find_actions_by_claim_id( $this->claim->get_id() ), true ) ) {\n\t\t\t\tWP_CLI::warning( __( 'The claim has been lost. Aborting current batch.', 'action-scheduler' ) );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->process_action( $action_id, $context );\n\t\t\t$this->progress_bar->tick();\n\t\t}\n\n\t\t$completed = $this->progress_bar->current();\n\t\t$this->progress_bar->finish();\n\t\t$this->store->release_claim( $this->claim );\n\t\tdo_action( 'action_scheduler_after_process_queue' );\n\n\t\treturn $completed;\n\t}\n\n\t\/**\n\t * Handle WP CLI message when the action is starting.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function before_execute( $action_id ) {\n\t\t\/* translators: %s refers to the action ID *\/\n\t\tWP_CLI::log( sprintf( __( 'Started processing action %s', 'action-scheduler' ), $action_id ) );\n\t}\n\n\t\/**\n\t * Handle WP CLI message when the action has completed.\n\t *\n\t * @param int                         $action_id ActionID.\n\t * @param null|ActionScheduler_Action $action The instance of the action. Default to null for backward compatibility.\n\t *\/\n\tpublic function after_execute( $action_id, $action = null ) {\n\t\t\/\/ backward compatibility.\n\t\tif ( null === $action ) {\n\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t}\n\t\t\/* translators: 1: action ID 2: hook name *\/\n\t\tWP_CLI::log( sprintf( __( 'Completed processing action %1$s with hook: %2$s', 'action-scheduler' ), $action_id, $action->get_hook() ) );\n\t}\n\n\t\/**\n\t * Handle WP CLI message when the action has failed.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception.\n\t * @throws \\WP_CLI\\ExitException With failure message.\n\t *\/\n\tpublic function action_failed( $action_id, $exception ) {\n\t\tWP_CLI::error(\n\t\t\t\/* translators: 1: action ID 2: exception message *\/\n\t\t\tsprintf( __( 'Error processing action %1$s: %2$s', 'action-scheduler' ), $action_id, $exception->getMessage() ),\n\t\t\tfalse\n\t\t);\n\t}\n\n\t\/**\n\t * Sleep and help avoid hitting memory limit\n\t *\n\t * @param int $sleep_time Amount of seconds to sleep.\n\t * @deprecated 3.0.0\n\t *\/\n\tprotected function stop_the_insanity( $sleep_time = 0 ) {\n\t\t_deprecated_function( 'ActionScheduler_WPCLI_QueueRunner::stop_the_insanity', '3.0.0', 'ActionScheduler_DataController::free_memory' );\n\n\t\tActionScheduler_DataController::free_memory();\n\t}\n\n\t\/**\n\t * Maybe trigger the stop_the_insanity() method to free up memory.\n\t *\/\n\tprotected function maybe_stop_the_insanity() {\n\t\t\/\/ The value returned by progress_bar->current() might be padded. Remove padding, and convert to int.\n\t\t$current_iteration = intval( trim( $this->progress_bar->current() ) );\n\t\tif ( 0 === $current_iteration % 50 ) {\n\t\t\t$this->stop_the_insanity();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Migration_Command.php","ext":"php","size":5048,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\WP_CLI;\n\nuse Action_Scheduler\\Migration\\Config;\nuse Action_Scheduler\\Migration\\Runner;\nuse Action_Scheduler\\Migration\\Scheduler;\nuse Action_Scheduler\\Migration\\Controller;\nuse WP_CLI;\nuse WP_CLI_Command;\n\n\/**\n * Class Migration_Command\n *\n * @package Action_Scheduler\\WP_CLI\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass Migration_Command extends WP_CLI_Command {\n\n\t\/**\n\t * Number of actions migrated.\n\t *\n\t * @var int\n\t *\/\n\tprivate $total_processed = 0;\n\n\t\/**\n\t * Register the command with WP-CLI\n\t *\/\n\tpublic function register() {\n\t\tif ( ! defined( 'WP_CLI' ) || ! WP_CLI ) {\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI::add_command(\n\t\t\t'action-scheduler migrate',\n\t\t\tarray( $this, 'migrate' ),\n\t\t\tarray(\n\t\t\t\t'shortdesc' => 'Migrates actions to the DB tables store',\n\t\t\t\t'synopsis'  => array(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'assoc',\n\t\t\t\t\t\t'name'        => 'batch-size',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'default'     => 100,\n\t\t\t\t\t\t'description' => 'The number of actions to process in each batch',\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'assoc',\n\t\t\t\t\t\t'name'        => 'free-memory-on',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'default'     => 50,\n\t\t\t\t\t\t'description' => 'The number of actions to process between freeing memory. 0 disables freeing memory',\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'assoc',\n\t\t\t\t\t\t'name'        => 'pause',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'default'     => 0,\n\t\t\t\t\t\t'description' => 'The number of seconds to pause when freeing memory',\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'flag',\n\t\t\t\t\t\t'name'        => 'dry-run',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'description' => 'Reports on the actions that would have been migrated, but does not change any data',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Process the data migration.\n\t *\n\t * @param array $positional_args Required for WP CLI. Not used in migration.\n\t * @param array $assoc_args Optional arguments.\n\t *\n\t * @return void\n\t *\/\n\tpublic function migrate( $positional_args, $assoc_args ) {\n\t\t$this->init_logging();\n\n\t\t$config = $this->get_migration_config( $assoc_args );\n\t\t$runner = new Runner( $config );\n\t\t$runner->init_destination();\n\n\t\t$batch_size = isset( $assoc_args['batch-size'] ) ? (int) $assoc_args['batch-size'] : 100;\n\t\t$free_on    = isset( $assoc_args['free-memory-on'] ) ? (int) $assoc_args['free-memory-on'] : 50;\n\t\t$sleep      = isset( $assoc_args['pause'] ) ? (int) $assoc_args['pause'] : 0;\n\t\t\\ActionScheduler_DataController::set_free_ticks( $free_on );\n\t\t\\ActionScheduler_DataController::set_sleep_time( $sleep );\n\n\t\tdo {\n\t\t\t$actions_processed      = $runner->run( $batch_size );\n\t\t\t$this->total_processed += $actions_processed;\n\t\t} while ( $actions_processed > 0 );\n\n\t\tif ( ! $config->get_dry_run() ) {\n\t\t\t\/\/ let the scheduler know that there's nothing left to do.\n\t\t\t$scheduler = new Scheduler();\n\t\t\t$scheduler->mark_complete();\n\t\t}\n\n\t\tWP_CLI::success( sprintf( '%s complete. %d actions processed.', $config->get_dry_run() ? 'Dry run' : 'Migration', $this->total_processed ) );\n\t}\n\n\t\/**\n\t * Build the config object used to create the Runner\n\t *\n\t * @param array $args Optional arguments.\n\t *\n\t * @return ActionScheduler\\Migration\\Config\n\t *\/\n\tprivate function get_migration_config( $args ) {\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\tarray(\n\t\t\t\t'dry-run' => false,\n\t\t\t)\n\t\t);\n\n\t\t$config = Controller::instance()->get_migration_config_object();\n\t\t$config->set_dry_run( ! empty( $args['dry-run'] ) );\n\n\t\treturn $config;\n\t}\n\n\t\/**\n\t * Hook command line logging into migration actions.\n\t *\/\n\tprivate function init_logging() {\n\t\tadd_action(\n\t\t\t'action_scheduler\/migrate_action_dry_run',\n\t\t\tfunction ( $action_id ) {\n\t\t\t\tWP_CLI::debug( sprintf( 'Dry-run: migrated action %d', $action_id ) );\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler\/no_action_to_migrate',\n\t\t\tfunction ( $action_id ) {\n\t\t\t\tWP_CLI::debug( sprintf( 'No action found to migrate for ID %d', $action_id ) );\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler\/migrate_action_failed',\n\t\t\tfunction ( $action_id ) {\n\t\t\t\tWP_CLI::warning( sprintf( 'Failed migrating action with ID %d', $action_id ) );\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler\/migrate_action_incomplete',\n\t\t\tfunction ( $source_id, $destination_id ) {\n\t\t\t\tWP_CLI::warning( sprintf( 'Unable to remove source action with ID %d after migrating to new ID %d', $source_id, $destination_id ) );\n\t\t\t},\n\t\t\t10,\n\t\t\t2\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler\/migrated_action',\n\t\t\tfunction ( $source_id, $destination_id ) {\n\t\t\t\tWP_CLI::debug( sprintf( 'Migrated source action with ID %d to new store with ID %d', $source_id, $destination_id ) );\n\t\t\t},\n\t\t\t10,\n\t\t\t2\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler\/migration_batch_starting',\n\t\t\tfunction ( $batch ) {\n\t\t\t\tWP_CLI::debug( 'Beginning migration of batch: ' . print_r( $batch, true ) ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_print_r\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler\/migration_batch_complete',\n\t\t\tfunction ( $batch ) {\n\t\t\t\tWP_CLI::log( sprintf( 'Completed migration of %d actions', count( $batch ) ) );\n\t\t\t}\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Next_Command.php","ext":"php","size":1859,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n\/\/ phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaping output is not necessary in WP CLI.\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n\/**\n * WP-CLI command: action-scheduler action next\n *\/\nclass Next_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t\/**\n\t * Execute command.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$hook          = $this->args[0];\n\t\t$group         = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$callback_args = get_flag_value( $this->assoc_args, 'args', null );\n\t\t$raw           = (bool) get_flag_value( $this->assoc_args, 'raw', false );\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\tif ( $raw ) {\n\t\t\t\\WP_CLI::line( as_next_scheduled_action( $hook, $callback_args, $group ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$params = array(\n\t\t\t'hook'    => $hook,\n\t\t\t'orderby' => 'date',\n\t\t\t'order'   => 'ASC',\n\t\t\t'group'   => $group,\n\t\t);\n\n\t\tif ( is_array( $callback_args ) ) {\n\t\t\t$params['args'] = $callback_args;\n\t\t}\n\n\t\t$params['status'] = \\ActionScheduler_Store::STATUS_RUNNING;\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t\\WP_CLI::debug( 'ActionScheduler()::store()->query_action( ' . var_export( $params, true ) . ' )' );\n\n\t\t$store     = \\ActionScheduler::store();\n\t\t$action_id = $store->query_action( $params );\n\n\t\tif ( $action_id ) {\n\t\t\techo $action_id;\n\t\t\treturn;\n\t\t}\n\n\t\t$params['status'] = \\ActionScheduler_Store::STATUS_PENDING;\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t\\WP_CLI::debug( 'ActionScheduler()::store()->query_action( ' . var_export( $params, true ) . ' )' );\n\n\t\t$action_id = $store->query_action( $params );\n\n\t\tif ( $action_id ) {\n\t\t\techo $action_id;\n\t\t\treturn;\n\t\t}\n\n\t\t\\WP_CLI::warning( 'No matching next action.' );\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Delete_Command.php","ext":"php","size":2661,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n\/**\n * WP-CLI command: action-scheduler action delete\n *\/\nclass Delete_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t\/**\n\t * Array of action IDs to delete.\n\t *\n\t * @var int[]\n\t *\/\n\tprotected $action_ids = array();\n\n\t\/**\n\t * Number of deleted, failed, and total actions deleted.\n\t *\n\t * @var array<string, int>\n\t *\/\n\tprotected $action_counts = array(\n\t\t'deleted' => 0,\n\t\t'failed'  => 0,\n\t\t'total'   => 0,\n\t);\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string[]              $args       Positional arguments.\n\t * @param array<string, string> $assoc_args Keyed arguments.\n\t *\/\n\tpublic function __construct( array $args, array $assoc_args ) {\n\t\tparent::__construct( $args, $assoc_args );\n\n\t\t$this->action_ids             = array_map( 'absint', $args );\n\t\t$this->action_counts['total'] = count( $this->action_ids );\n\n\t\tadd_action( 'action_scheduler_deleted_action', array( $this, 'on_action_deleted' ) );\n\t}\n\n\t\/**\n\t * Execute.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$store = \\ActionScheduler::store();\n\n\t\t$progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d: number of actions to be deleted *\/\n\t\t\t\t_n( 'Deleting %d action', 'Deleting %d actions', $this->action_counts['total'], 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['total'] )\n\t\t\t),\n\t\t\t$this->action_counts['total']\n\t\t);\n\n\t\tforeach ( $this->action_ids as $action_id ) {\n\t\t\ttry {\n\t\t\t\t$store->delete_action( $action_id );\n\t\t\t} catch ( \\Exception $e ) {\n\t\t\t\t$this->action_counts['failed']++;\n\t\t\t\t\\WP_CLI::warning( $e->getMessage() );\n\t\t\t}\n\n\t\t\t$progress_bar->tick();\n\t\t}\n\n\t\t$progress_bar->finish();\n\n\t\t\/* translators: %1$d: number of actions deleted *\/\n\t\t$format = _n( 'Deleted %1$d action', 'Deleted %1$d actions', $this->action_counts['deleted'], 'action-scheduler' ) . ', ';\n\t\t\/* translators: %2$d: number of actions deletions failed *\/\n\t\t$format .= _n( '%2$d failure.', '%2$d failures.', $this->action_counts['failed'], 'action-scheduler' );\n\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t$format,\n\t\t\t\tnumber_format_i18n( $this->action_counts['deleted'] ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['failed'] )\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Action: action_scheduler_deleted_action\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t *\/\n\tpublic function on_action_deleted( $action_id ) {\n\t\tif ( 'action_scheduler_deleted_action' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['deleted']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d was deleted.', $action_id ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/List_Command.php","ext":"php","size":3127,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n\/\/ phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaping output is not necessary in WP CLI.\n\n\/**\n * WP-CLI command: action-scheduler action list\n *\/\nclass List_Command extends \\ActionScheduler_WPCLI_Command {\n\n\tconst PARAMETERS = array(\n\t\t'hook',\n\t\t'args',\n\t\t'date',\n\t\t'date_compare',\n\t\t'modified',\n\t\t'modified_compare',\n\t\t'group',\n\t\t'status',\n\t\t'claimed',\n\t\t'per_page',\n\t\t'offset',\n\t\t'orderby',\n\t\t'order',\n\t);\n\n\t\/**\n\t * Execute command.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$store  = \\ActionScheduler::store();\n\t\t$logger = \\ActionScheduler::logger();\n\n\t\t$fields = array(\n\t\t\t'id',\n\t\t\t'hook',\n\t\t\t'status',\n\t\t\t'group',\n\t\t\t'recurring',\n\t\t\t'scheduled_date',\n\t\t);\n\n\t\t$this->process_csv_arguments_to_arrays();\n\n\t\tif ( ! empty( $this->assoc_args['fields'] ) ) {\n\t\t\t$fields = $this->assoc_args['fields'];\n\t\t}\n\n\t\t$formatter  = new \\WP_CLI\\Formatter( $this->assoc_args, $fields );\n\t\t$query_args = $this->assoc_args;\n\n\t\t\/**\n\t\t * The `claimed` parameter expects a boolean or integer:\n\t\t * check for string 'false', and set explicitly to `false` boolean.\n\t\t *\/\n\t\tif ( array_key_exists( 'claimed', $query_args ) && 'false' === strtolower( $query_args['claimed'] ) ) {\n\t\t\t$query_args['claimed'] = false;\n\t\t}\n\n\t\t$return_format = 'OBJECT';\n\n\t\tif ( in_array( $formatter->format, array( 'ids', 'count' ), true ) ) {\n\t\t\t$return_format = '\\'ids\\'';\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t$params = var_export( $query_args, true );\n\n\t\tif ( empty( $query_args ) ) {\n\t\t\t$params = 'array()';\n\t\t}\n\n\t\t\\WP_CLI::debug(\n\t\t\tsprintf(\n\t\t\t\t'as_get_scheduled_actions( %s, %s )',\n\t\t\t\t$params,\n\t\t\t\t$return_format\n\t\t\t)\n\t\t);\n\n\t\tif ( ! empty( $query_args['args'] ) ) {\n\t\t\t$query_args['args'] = json_decode( $query_args['args'], true );\n\t\t}\n\n\t\tswitch ( $formatter->format ) {\n\n\t\t\tcase 'ids':\n\t\t\t\t$actions = as_get_scheduled_actions( $query_args, 'ids' );\n\t\t\t\techo implode( ' ', $actions );\n\t\t\t\tbreak;\n\n\t\t\tcase 'count':\n\t\t\t\t$actions = as_get_scheduled_actions( $query_args, 'ids' );\n\t\t\t\t$formatter->display_items( $actions );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$actions = as_get_scheduled_actions( $query_args, OBJECT );\n\n\t\t\t\t$actions_arr = array();\n\n\t\t\t\tforeach ( $actions as $action_id => $action ) {\n\t\t\t\t\t$action_arr = array(\n\t\t\t\t\t\t'id'             => $action_id,\n\t\t\t\t\t\t'hook'           => $action->get_hook(),\n\t\t\t\t\t\t'status'         => $store->get_status( $action_id ),\n\t\t\t\t\t\t'args'           => $action->get_args(),\n\t\t\t\t\t\t'group'          => $action->get_group(),\n\t\t\t\t\t\t'recurring'      => $action->get_schedule()->is_recurring() ? 'yes' : 'no',\n\t\t\t\t\t\t'scheduled_date' => $this->get_schedule_display_string( $action->get_schedule() ),\n\t\t\t\t\t\t'log_entries'    => array(),\n\t\t\t\t\t);\n\n\t\t\t\t\tforeach ( $logger->get_logs( $action_id ) as $log_entry ) {\n\t\t\t\t\t\t$action_arr['log_entries'][] = array(\n\t\t\t\t\t\t\t'date'    => $log_entry->get_date()->format( static::DATE_FORMAT ),\n\t\t\t\t\t\t\t'message' => $log_entry->get_message(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t$actions_arr[] = $action_arr;\n\t\t\t\t}\n\n\t\t\t\t$formatter->display_items( $actions_arr );\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Generate_Command.php","ext":"php","size":3551,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n\/**\n * WP-CLI command: action-scheduler action generate\n *\/\nclass Generate_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t\/**\n\t * Execute command.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$hook           = $this->args[0];\n\t\t$schedule_start = $this->args[1];\n\t\t$callback_args  = get_flag_value( $this->assoc_args, 'args', array() );\n\t\t$group          = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$interval       = (int) get_flag_value( $this->assoc_args, 'interval', 0 ); \/\/ avoid absint() to support negative intervals\n\t\t$count          = absint( get_flag_value( $this->assoc_args, 'count', 1 ) );\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\t$schedule_start = as_get_datetime_object( $schedule_start );\n\n\t\t$function_args = array(\n\t\t\t'start'         => absint( $schedule_start->format( 'U' ) ),\n\t\t\t'interval'      => $interval,\n\t\t\t'count'         => $count,\n\t\t\t'hook'          => $hook,\n\t\t\t'callback_args' => $callback_args,\n\t\t\t'group'         => $group,\n\t\t);\n\n\t\t$function_args = array_values( $function_args );\n\n\t\ttry {\n\t\t\t$actions_added = $this->generate( ...$function_args );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$num_actions_added = count( (array) $actions_added );\n\n\t\t$this->print_success( $num_actions_added, 'single' );\n\t}\n\n\t\/**\n\t * Schedule multiple single actions.\n\t *\n\t * @param int    $schedule_start Starting timestamp of first action.\n\t * @param int    $interval How long to wait between runs.\n\t * @param int    $count Limit number of actions to schedule.\n\t * @param string $hook The hook to trigger.\n\t * @param array  $args Arguments to pass when the hook triggers.\n\t * @param string $group The group to assign this job to.\n\t * @return int[] IDs of actions added.\n\t *\/\n\tprotected function generate( $schedule_start, $interval, $count, $hook, array $args = array(), $group = '' ) {\n\t\t$actions_added = array();\n\n\t\t$progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d is number of actions to create *\/\n\t\t\t\t_n( 'Creating %d action', 'Creating %d actions', $count, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $count )\n\t\t\t),\n\t\t\t$count\n\t\t);\n\n\t\tfor ( $i = 0; $i < $count; $i++ ) {\n\t\t\t$actions_added[] = as_schedule_single_action( $schedule_start + ( $i * $interval ), $hook, $args, $group );\n\t\t\t$progress_bar->tick();\n\t\t}\n\n\t\t$progress_bar->finish();\n\n\t\treturn $actions_added;\n\t}\n\n\t\/**\n\t * Print a success message with the action ID.\n\t *\n\t * @param int    $actions_added Number of actions generated.\n\t * @param string $action_type   Type of actions scheduled.\n\t * @return void\n\t *\/\n\tprotected function print_success( $actions_added, $action_type ) {\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %1$d refers to the total number of tasks added, %2$s is the action type *\/\n\t\t\t\t_n( '%1$d %2$s action scheduled.', '%1$d %2$s actions scheduled.', $actions_added, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $actions_added ),\n\t\t\t\t$action_type\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param \\Exception $e The error object.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t * @return void\n\t *\/\n\tprotected function print_error( \\Exception $e ) {\n\t\t\\WP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %s refers to the exception error message. *\/\n\t\t\t\t__( 'There was an error creating the scheduled action: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Create_Command.php","ext":"php","size":4458,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n\/**\n * WP-CLI command: action-scheduler action create\n *\/\nclass Create_Command extends \\ActionScheduler_WPCLI_Command {\n\n\tconst ASYNC_OPTS = array( 'async', 0 );\n\n\t\/**\n\t * Execute command.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$hook           = $this->args[0];\n\t\t$schedule_start = $this->args[1];\n\t\t$callback_args  = get_flag_value( $this->assoc_args, 'args', array() );\n\t\t$group          = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$interval       = absint( get_flag_value( $this->assoc_args, 'interval', 0 ) );\n\t\t$cron           = get_flag_value( $this->assoc_args, 'cron', '' );\n\t\t$unique         = get_flag_value( $this->assoc_args, 'unique', false );\n\t\t$priority       = absint( get_flag_value( $this->assoc_args, 'priority', 10 ) );\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\t$function_args = array(\n\t\t\t'start'         => $schedule_start,\n\t\t\t'cron'          => $cron,\n\t\t\t'interval'      => $interval,\n\t\t\t'hook'          => $hook,\n\t\t\t'callback_args' => $callback_args,\n\t\t\t'group'         => $group,\n\t\t\t'unique'        => $unique,\n\t\t\t'priority'      => $priority,\n\t\t);\n\n\t\ttry {\n\t\t\t\/\/ Generate schedule start if appropriate.\n\t\t\tif ( ! in_array( $schedule_start, static::ASYNC_OPTS, true ) ) {\n\t\t\t\t$schedule_start         = as_get_datetime_object( $schedule_start );\n\t\t\t\t$function_args['start'] = $schedule_start->format( 'U' );\n\t\t\t}\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\\WP_CLI::error( $e->getMessage() );\n\t\t}\n\n\t\t\/\/ Default to creating single action.\n\t\t$action_type = 'single';\n\t\t$function    = 'as_schedule_single_action';\n\n\t\tif ( ! empty( $interval ) ) { \/\/ Creating recurring action.\n\t\t\t$action_type = 'recurring';\n\t\t\t$function    = 'as_schedule_recurring_action';\n\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'start', 'interval', 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t} elseif ( ! empty( $cron ) ) { \/\/ Creating cron action.\n\t\t\t$action_type = 'cron';\n\t\t\t$function    = 'as_schedule_cron_action';\n\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'start', 'cron', 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t} elseif ( in_array( $function_args['start'], static::ASYNC_OPTS, true ) ) { \/\/ Enqueue async action.\n\t\t\t$action_type = 'async';\n\t\t\t$function    = 'as_enqueue_async_action';\n\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t} else { \/\/ Enqueue single action.\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'start', 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t}\n\n\t\t$function_args = array_values( $function_args );\n\n\t\ttry {\n\t\t\t$action_id = call_user_func_array( $function, $function_args );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\tif ( 0 === $action_id ) {\n\t\t\t$e = new \\Exception( __( 'Unable to create a scheduled action.', 'action-scheduler' ) );\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_success( $action_id, $action_type );\n\t}\n\n\t\/**\n\t * Print a success message with the action ID.\n\t *\n\t * @param int    $action_id   Created action ID.\n\t * @param string $action_type Type of action.\n\t *\n\t * @return void\n\t *\/\n\tprotected function print_success( $action_id, $action_type ) {\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %1$s: type of action, %2$d: ID of the created action *\/\n\t\t\t\t__( '%1$s action (%2$d) scheduled.', 'action-scheduler' ),\n\t\t\t\tucfirst( $action_type ),\n\t\t\t\t$action_id\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param \\Exception $e The error object.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t * @return void\n\t *\/\n\tprotected function print_error( \\Exception $e ) {\n\t\t\\WP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %s refers to the exception error message. *\/\n\t\t\t\t__( 'There was an error creating the scheduled action: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Run_Command.php","ext":"php","size":4721,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n\/**\n * WP-CLI command: action-scheduler action run\n *\/\nclass Run_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t\/**\n\t * Array of action IDs to execute.\n\t *\n\t * @var int[]\n\t *\/\n\tprotected $action_ids = array();\n\n\t\/**\n\t * Number of executed, failed, ignored, invalid, and total actions.\n\t *\n\t * @var array<string, int>\n\t *\/\n\tprotected $action_counts = array(\n\t\t'executed' => 0,\n\t\t'failed'   => 0,\n\t\t'ignored'  => 0,\n\t\t'invalid'  => 0,\n\t\t'total'    => 0,\n\t);\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string[]              $args       Positional arguments.\n\t * @param array<string, string> $assoc_args Keyed arguments.\n\t *\/\n\tpublic function __construct( array $args, array $assoc_args ) {\n\t\tparent::__construct( $args, $assoc_args );\n\n\t\t$this->action_ids             = array_map( 'absint', $args );\n\t\t$this->action_counts['total'] = count( $this->action_ids );\n\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'on_action_ignored' ) );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'on_action_executed' ) );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'on_action_failed' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_validation', array( $this, 'on_action_invalid' ), 10, 2 );\n\t}\n\n\t\/**\n\t * Execute.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$runner = \\ActionScheduler::runner();\n\n\t\t$progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d: number of actions *\/\n\t\t\t\t_n( 'Executing %d action', 'Executing %d actions', $this->action_counts['total'], 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['total'] )\n\t\t\t),\n\t\t\t$this->action_counts['total']\n\t\t);\n\n\t\tforeach ( $this->action_ids as $action_id ) {\n\t\t\t$runner->process_action( $action_id, 'Action Scheduler CLI' );\n\t\t\t$progress_bar->tick();\n\t\t}\n\n\t\t$progress_bar->finish();\n\n\t\tforeach ( array(\n\t\t\t'ignored',\n\t\t\t'invalid',\n\t\t\t'failed',\n\t\t) as $type ) {\n\t\t\t$count = $this->action_counts[ $type ];\n\n\t\t\tif ( empty( $count ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/*\n\t\t\t * translators:\n\t\t\t * %1$d: count of actions evaluated.\n\t\t\t * %2$s: type of action evaluated.\n\t\t\t *\/\n\t\t\t$format = _n( '%1$d action %2$s.', '%1$d actions %2$s.', $count, 'action-scheduler' );\n\n\t\t\t\\WP_CLI::warning(\n\t\t\t\tsprintf(\n\t\t\t\t\t$format,\n\t\t\t\t\tnumber_format_i18n( $count ),\n\t\t\t\t\t$type\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d: number of executed actions *\/\n\t\t\t\t_n( 'Executed %d action.', 'Executed %d actions.', $this->action_counts['executed'], 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['executed'] )\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Action: action_scheduler_execution_ignored\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t *\/\n\tpublic function on_action_ignored( $action_id ) {\n\t\tif ( 'action_scheduler_execution_ignored' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['ignored']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d was ignored.', $action_id ) );\n\t}\n\n\t\/**\n\t * Action: action_scheduler_after_execute\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t *\/\n\tpublic function on_action_executed( $action_id ) {\n\t\tif ( 'action_scheduler_after_execute' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['executed']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d was executed.', $action_id ) );\n\t}\n\n\t\/**\n\t * Action: action_scheduler_failed_execution\n\t *\n\t * @param int        $action_id Action ID.\n\t * @param \\Exception $e         Exception.\n\t * @return void\n\t *\/\n\tpublic function on_action_failed( $action_id, \\Exception $e ) {\n\t\tif ( 'action_scheduler_failed_execution' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['failed']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d failed execution: %s', $action_id, $e->getMessage() ) );\n\t}\n\n\t\/**\n\t * Action: action_scheduler_failed_validation\n\t *\n\t * @param int        $action_id Action ID.\n\t * @param \\Exception $e         Exception.\n\t * @return void\n\t *\/\n\tpublic function on_action_invalid( $action_id, \\Exception $e ) {\n\t\tif ( 'action_scheduler_failed_validation' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['invalid']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d failed validation: %s', $action_id, $e->getMessage() ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Cancel_Command.php","ext":"php","size":3336,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n\/**\n * WP-CLI command: action-scheduler action cancel\n *\/\nclass Cancel_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t\/**\n\t * Execute command.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$hook          = '';\n\t\t$group         = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$callback_args = get_flag_value( $this->assoc_args, 'args', null );\n\t\t$all           = get_flag_value( $this->assoc_args, 'all', false );\n\n\t\tif ( ! empty( $this->args[0] ) ) {\n\t\t\t$hook = $this->args[0];\n\t\t}\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\tif ( $all ) {\n\t\t\t$this->cancel_all( $hook, $callback_args, $group );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->cancel_single( $hook, $callback_args, $group );\n\t}\n\n\t\/**\n\t * Cancel single action.\n\t *\n\t * @param string $hook The hook that the job will trigger.\n\t * @param array  $callback_args Args that would have been passed to the job.\n\t * @param string $group The group the job is assigned to.\n\t * @return void\n\t *\/\n\tprotected function cancel_single( $hook, $callback_args, $group ) {\n\t\tif ( empty( $hook ) ) {\n\t\t\t\\WP_CLI::error( __( 'Please specify hook of action to cancel.', 'action-scheduler' ) );\n\t\t}\n\n\t\ttry {\n\t\t\t$result = as_unschedule_action( $hook, $callback_args, $group );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e, false );\n\t\t}\n\n\t\tif ( null === $result ) {\n\t\t\t$e = new \\Exception( __( 'Unable to cancel scheduled action: check the logs.', 'action-scheduler' ) );\n\t\t\t$this->print_error( $e, false );\n\t\t}\n\n\t\t$this->print_success( false );\n\t}\n\n\t\/**\n\t * Cancel all actions.\n\t *\n\t * @param string $hook The hook that the job will trigger.\n\t * @param array  $callback_args Args that would have been passed to the job.\n\t * @param string $group The group the job is assigned to.\n\t * @return void\n\t *\/\n\tprotected function cancel_all( $hook, $callback_args, $group ) {\n\t\tif ( empty( $hook ) && empty( $group ) ) {\n\t\t\t\\WP_CLI::error( __( 'Please specify hook and\/or group of actions to cancel.', 'action-scheduler' ) );\n\t\t}\n\n\t\ttry {\n\t\t\t$result = as_unschedule_all_actions( $hook, $callback_args, $group );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e, $multiple );\n\t\t}\n\n\t\t\/**\n\t\t * Because as_unschedule_all_actions() does not provide a result,\n\t\t * neither confirm or deny actions cancelled.\n\t\t *\/\n\t\t\\WP_CLI::success( __( 'Request to cancel scheduled actions completed.', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Print a success message.\n\t *\n\t * @return void\n\t *\/\n\tprotected function print_success() {\n\t\t\\WP_CLI::success( __( 'Scheduled action cancelled.', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param \\Exception $e The error object.\n\t * @param bool       $multiple Boolean if multiple actions.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t * @return void\n\t *\/\n\tprotected function print_error( \\Exception $e, $multiple ) {\n\t\t\\WP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %1$s: singular or plural %2$s: refers to the exception error message. *\/\n\t\t\t\t__( 'There was an error cancelling the %1$s: %2$s', 'action-scheduler' ),\n\t\t\t\t$multiple ? __( 'scheduled actions', 'action-scheduler' ) : __( 'scheduled action', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action\/Get_Command.php","ext":"php","size":2208,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n\/**\n * WP-CLI command: action-scheduler action get\n *\/\nclass Get_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t\/**\n\t * Execute command.\n\t *\n\t * @return void\n\t *\/\n\tpublic function execute() {\n\t\t$action_id = $this->args[0];\n\t\t$store     = \\ActionScheduler::store();\n\t\t$logger    = \\ActionScheduler::logger();\n\t\t$action    = $store->fetch_action( $action_id );\n\n\t\tif ( is_a( $action, ActionScheduler_NullAction::class ) ) {\n\t\t\t\/* translators: %d is action ID. *\/\n\t\t\t\\WP_CLI::error( sprintf( esc_html__( 'Unable to retrieve action %d.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\n\t\t$only_logs   = ! empty( $this->assoc_args['field'] ) && 'log_entries' === $this->assoc_args['field'];\n\t\t$only_logs   = $only_logs || ( ! empty( $this->assoc_args['fields'] ) && 'log_entries' === $this->assoc_args['fields'] );\n\t\t$log_entries = array();\n\n\t\tforeach ( $logger->get_logs( $action_id ) as $log_entry ) {\n\t\t\t$log_entries[] = array(\n\t\t\t\t'date'    => $log_entry->get_date()->format( static::DATE_FORMAT ),\n\t\t\t\t'message' => $log_entry->get_message(),\n\t\t\t);\n\t\t}\n\n\t\tif ( $only_logs ) {\n\t\t\t$args = array(\n\t\t\t\t'format' => \\WP_CLI\\Utils\\get_flag_value( $this->assoc_args, 'format', 'table' ),\n\t\t\t);\n\n\t\t\t$formatter = new \\WP_CLI\\Formatter( $args, array( 'date', 'message' ) );\n\t\t\t$formatter->display_items( $log_entries );\n\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t$status = $store->get_status( $action_id );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\\WP_CLI::error( $e->getMessage() );\n\t\t}\n\n\t\t$action_arr = array(\n\t\t\t'id'             => $this->args[0],\n\t\t\t'hook'           => $action->get_hook(),\n\t\t\t'status'         => $status,\n\t\t\t'args'           => $action->get_args(),\n\t\t\t'group'          => $action->get_group(),\n\t\t\t'recurring'      => $action->get_schedule()->is_recurring() ? 'yes' : 'no',\n\t\t\t'scheduled_date' => $this->get_schedule_display_string( $action->get_schedule() ),\n\t\t\t'log_entries'    => $log_entries,\n\t\t);\n\n\t\t$fields = array_keys( $action_arr );\n\n\t\tif ( ! empty( $this->assoc_args['fields'] ) ) {\n\t\t\t$fields = explode( ',', $this->assoc_args['fields'] );\n\t\t}\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $this->assoc_args, $fields );\n\t\t$formatter->display_item( $action_arr );\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/Action_Command.php","ext":"php","size":8340,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI;\n\n\/**\n * Action command for Action Scheduler.\n *\/\nclass Action_Command extends \\WP_CLI_Command {\n\n\t\/**\n\t * Cancel the next occurrence or all occurrences of a scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [<hook>]\n\t * : Name of the action hook.\n\t *\n\t * [--group=<group>]\n\t * : The group the job is assigned to.\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments assigned to the job.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--all]\n\t * : Cancel all occurrences of a scheduled action.\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function cancel( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Cancel_Command.php';\n\t\t$command = new Action\\Cancel_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Creates a new scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <hook>\n\t * : Name of the action hook.\n\t *\n\t * <start>\n\t * : A unix timestamp representing the date you want the action to start. Also 'async' or 'now' to enqueue an async action.\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments to pass to callbacks when the hook triggers.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--cron=<cron>]\n\t * : A cron-like schedule string (https:\/\/crontab.guru\/).\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * [--group=<group>]\n\t * : The group to assign this job to.\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * [--interval=<interval>]\n\t * : Number of seconds to wait between runs.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     wp action-scheduler action create hook_async async\n\t *     wp action-scheduler action create hook_single 1627147598\n\t *     wp action-scheduler action create hook_recurring 1627148188 --interval=5\n\t *     wp action-scheduler action create hook_cron 1627147655 --cron='5 4 * * *'\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function create( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Create_Command.php';\n\t\t$command = new Action\\Create_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Delete existing scheduled action(s).\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>...\n\t * : One or more IDs of actions to delete.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Delete the action with id 100\n\t *     $ wp action-scheduler action delete 100\n\t *\n\t *     # Delete the actions with ids 100 and 200\n\t *     $ wp action-scheduler action delete 100 200\n\t *\n\t *     # Delete the first five pending actions in 'action-scheduler' group\n\t *     $ wp action-scheduler action delete $( wp action-scheduler action list --status=pending --group=action-scheduler --format=ids )\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function delete( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Delete_Command.php';\n\t\t$command = new Action\\Delete_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Generates some scheduled actions.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <hook>\n\t * : Name of the action hook.\n\t *\n\t * <start>\n\t * : The Unix timestamp representing the date you want the action to start.\n\t *\n\t * [--count=<count>]\n\t * : Number of actions to create.\n\t * ---\n\t * default: 1\n\t * ---\n\t *\n\t * [--interval=<interval>]\n\t * : Number of seconds to wait between runs.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments to pass to callbacks when the hook triggers.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--group=<group>]\n\t * : The group to assign this job to.\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     wp action-scheduler action generate test_multiple 1627147598 --count=5 --interval=5\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function generate( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Generate_Command.php';\n\t\t$command = new Action\\Generate_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Get details about a scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The ID of the action to get.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * [--field=<field>]\n\t * : Instead of returning the whole action, returns the value of a single field.\n\t *\n\t * [--fields=<fields>]\n\t * : Limit the output to specific fields (comma-separated). Defaults to all fields.\n\t *\n\t * [--format=<format>]\n\t * : Render output in a particular format.\n\t * ---\n\t * default: table\n\t * options:\n\t *   - table\n\t *   - csv\n\t *   - json\n\t *   - yaml\n\t * ---\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function get( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Get_Command.php';\n\t\t$command = new Action\\Get_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Get a list of scheduled actions.\n\t *\n\t * Display actions based on all arguments supported by\n\t * [as_get_scheduled_actions()](https:\/\/actionscheduler.org\/api\/#function-reference--as_get_scheduled_actions).\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--<field>=<value>]\n\t * : One or more arguments to pass to as_get_scheduled_actions().\n\t *\n\t * [--field=<field>]\n\t * : Prints the value of a single property for each action.\n\t *\n\t * [--fields=<fields>]\n\t * : Limit the output to specific object properties.\n\t *\n\t * [--format=<format>]\n\t * : Render output in a particular format.\n\t * ---\n\t * default: table\n\t * options:\n\t *   - table\n\t *   - csv\n\t *   - ids\n\t *   - json\n\t *   - count\n\t *   - yaml\n\t * ---\n\t *\n\t * ## AVAILABLE FIELDS\n\t *\n\t * These fields will be displayed by default for each action:\n\t *\n\t * * id\n\t * * hook\n\t * * status\n\t * * group\n\t * * recurring\n\t * * scheduled_date\n\t *\n\t * These fields are optionally available:\n\t *\n\t * * args\n\t * * log_entries\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\n\t * @subcommand list\n\t *\/\n\tpublic function subcommand_list( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/List_Command.php';\n\t\t$command = new Action\\List_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Get logs for a scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The ID of the action to get.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * @param array $args Positional arguments.\n\t * @return void\n\t *\/\n\tpublic function logs( array $args ) {\n\t\t$command = sprintf( 'action-scheduler action get %d --field=log_entries', $args[0] );\n\t\tWP_CLI::runcommand( $command );\n\t}\n\n\t\/**\n\t * Get the ID or timestamp of the next scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <hook>\n\t * : The hook of the next scheduled action.\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments to search for next scheduled action.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--group=<group>]\n\t * : The group to which the next scheduled action is assigned.\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * [--raw]\n\t * : Display the raw output of as_next_scheduled_action() (timestamp or boolean).\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function next( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Next_Command.php';\n\t\t$command = new Action\\Next_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t\/**\n\t * Run existing scheduled action(s).\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>...\n\t * : One or more IDs of actions to run.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Run the action with id 100\n\t *     $ wp action-scheduler action run 100\n\t *\n\t *     # Run the actions with ids 100 and 200\n\t *     $ wp action-scheduler action run 100 200\n\t *\n\t *     # Run the first five pending actions in 'action-scheduler' group\n\t *     $ wp action-scheduler action run $( wp action-scheduler action list --status=pending --group=action-scheduler --format=ids )\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\/\n\tpublic function run( array $args, array $assoc_args ) {\n\t\trequire_once 'Action\/Run_Command.php';\n\t\t$command = new Action\\Run_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/ActionScheduler_WPCLI_Scheduler_command.php","ext":"php","size":6855,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Commands for Action Scheduler.\n *\/\nclass ActionScheduler_WPCLI_Scheduler_command extends WP_CLI_Command {\n\n\t\/**\n\t * Force tables schema creation for Action Scheduler\n\t *\n\t * ## OPTIONS\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t *\n\t * @subcommand fix-schema\n\t *\/\n\tpublic function fix_schema( $args, $assoc_args ) {\n\t\t$schema_classes = array( ActionScheduler_LoggerSchema::class, ActionScheduler_StoreSchema::class );\n\n\t\tforeach ( $schema_classes as $classname ) {\n\t\t\tif ( is_subclass_of( $classname, ActionScheduler_Abstract_Schema::class ) ) {\n\t\t\t\t$obj = new $classname();\n\t\t\t\t$obj->init();\n\t\t\t\t$obj->register_tables( true );\n\n\t\t\t\tWP_CLI::success(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\/* translators: %s refers to the schema name*\/\n\t\t\t\t\t\t__( 'Registered schema for %s', 'action-scheduler' ),\n\t\t\t\t\t\t$classname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Run the Action Scheduler\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--batch-size=<size>]\n\t * : The maximum number of actions to run. Defaults to 100.\n\t *\n\t * [--batches=<size>]\n\t * : Limit execution to a number of batches. Defaults to 0, meaning batches will continue being executed until all actions are complete.\n\t *\n\t * [--cleanup-batch-size=<size>]\n\t * : The maximum number of actions to clean up. Defaults to the value of --batch-size.\n\t *\n\t * [--hooks=<hooks>]\n\t * : Only run actions with the specified hook. Omitting this option runs actions with any hook. Define multiple hooks as a comma separated string (without spaces), e.g. `--hooks=hook_one,hook_two,hook_three`\n\t *\n\t * [--group=<group>]\n\t * : Only run actions from the specified group. Omitting this option runs actions from all groups.\n\t *\n\t * [--exclude-groups=<groups>]\n\t * : Run actions from all groups except the specified group(s). Define multiple groups as a comma separated string (without spaces), e.g. '--group_a,group_b'. This option is ignored when `--group` is used.\n\t *\n\t * [--free-memory-on=<count>]\n\t * : The number of actions to process between freeing memory. 0 disables freeing memory. Default 50.\n\t *\n\t * [--pause=<seconds>]\n\t * : The number of seconds to pause when freeing memory. Default no pause.\n\t *\n\t * [--force]\n\t * : Whether to force execution despite the maximum number of concurrent processes being exceeded.\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t *\n\t * @subcommand run\n\t *\/\n\tpublic function run( $args, $assoc_args ) {\n\t\t\/\/ Handle passed arguments.\n\t\t$batch          = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batch-size', 100 ) );\n\t\t$batches        = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batches', 0 ) );\n\t\t$clean          = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'cleanup-batch-size', $batch ) );\n\t\t$hooks          = explode( ',', WP_CLI\\Utils\\get_flag_value( $assoc_args, 'hooks', '' ) );\n\t\t$hooks          = array_filter( array_map( 'trim', $hooks ) );\n\t\t$group          = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'group', '' );\n\t\t$exclude_groups = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'exclude-groups', '' );\n\t\t$free_on        = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'free-memory-on', 50 );\n\t\t$sleep          = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'pause', 0 );\n\t\t$force          = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'force', false );\n\n\t\tActionScheduler_DataController::set_free_ticks( $free_on );\n\t\tActionScheduler_DataController::set_sleep_time( $sleep );\n\n\t\t$batches_completed = 0;\n\t\t$actions_completed = 0;\n\t\t$unlimited         = 0 === $batches;\n\t\tif ( is_callable( array( ActionScheduler::store(), 'set_claim_filter' ) ) ) {\n\t\t\t$exclude_groups = $this->parse_comma_separated_string( $exclude_groups );\n\n\t\t\tif ( ! empty( $exclude_groups ) ) {\n\t\t\t\tActionScheduler::store()->set_claim_filter( 'exclude-groups', $exclude_groups );\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t\/\/ Custom queue cleaner instance.\n\t\t\t$cleaner = new ActionScheduler_QueueCleaner( null, $clean );\n\n\t\t\t\/\/ Get the queue runner instance.\n\t\t\t$runner = new ActionScheduler_WPCLI_QueueRunner( null, null, $cleaner );\n\n\t\t\t\/\/ Determine how many tasks will be run in the first batch.\n\t\t\t$total = $runner->setup( $batch, $hooks, $group, $force );\n\n\t\t\t\/\/ Run actions for as long as possible.\n\t\t\twhile ( $total > 0 ) {\n\t\t\t\t$this->print_total_actions( $total );\n\t\t\t\t$actions_completed += $runner->run();\n\t\t\t\t$batches_completed++;\n\n\t\t\t\t\/\/ Maybe set up tasks for the next batch.\n\t\t\t\t$total = ( $unlimited || $batches_completed < $batches ) ? $runner->setup( $batch, $hooks, $group, $force ) : 0;\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_total_batches( $batches_completed );\n\t\t$this->print_success( $actions_completed );\n\t}\n\n\t\/**\n\t * Converts a string of comma-separated values into an array of those same values.\n\t *\n\t * @param string $string The string of one or more comma separated values.\n\t *\n\t * @return array\n\t *\/\n\tprivate function parse_comma_separated_string( $string ): array {\n\t\treturn array_filter( str_getcsv( $string ) );\n\t}\n\n\t\/**\n\t * Print WP CLI message about how many actions are about to be processed.\n\t *\n\t * @param int $total Number of actions found.\n\t *\/\n\tprotected function print_total_actions( $total ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d refers to how many scheduled tasks were found to run *\/\n\t\t\t\t_n( 'Found %d scheduled task', 'Found %d scheduled tasks', $total, 'action-scheduler' ),\n\t\t\t\t$total\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Print WP CLI message about how many batches of actions were processed.\n\t *\n\t * @param int $batches_completed Number of completed batches.\n\t *\/\n\tprotected function print_total_batches( $batches_completed ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d refers to the total number of batches executed *\/\n\t\t\t\t_n( '%d batch executed.', '%d batches executed.', $batches_completed, 'action-scheduler' ),\n\t\t\t\t$batches_completed\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param Exception $e The error object.\n\t *\n\t * @throws \\WP_CLI\\ExitException Under some conditions WP CLI may throw an exception.\n\t *\/\n\tprotected function print_error( Exception $e ) {\n\t\tWP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %s refers to the exception error message *\/\n\t\t\t\t__( 'There was an error running the action scheduler: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Print a success message with the number of completed actions.\n\t *\n\t * @param int $actions_completed Number of completed actions.\n\t *\/\n\tprotected function print_success( $actions_completed ) {\n\t\tWP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d refers to the total number of tasks completed *\/\n\t\t\t\t_n( '%d scheduled task completed.', '%d scheduled tasks completed.', $actions_completed, 'action-scheduler' ),\n\t\t\t\t$actions_completed\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/ProgressBar.php","ext":"php","size":2766,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI;\n\n\/**\n * WP_CLI progress bar for Action Scheduler.\n *\/\n\n\/**\n * Class ProgressBar\n *\n * @package Action_Scheduler\\WP_CLI\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass ProgressBar {\n\n\t\/**\n\t * Current number of ticks.\n\t *\n\t * @var integer\n\t *\/\n\tprotected $total_ticks;\n\n\t\/**\n\t * Total number of ticks.\n\t *\n\t * @var integer\n\t *\/\n\tprotected $count;\n\n\t\/**\n\t * Progress bar update interval.\n\t *\n\t * @var integer\n\t *\/\n\tprotected $interval;\n\n\t\/**\n\t * Progress bar message.\n\t *\n\t * @var string\n\t *\/\n\tprotected $message;\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var \\cli\\progress\\Bar\n\t *\/\n\tprotected $progress_bar;\n\n\t\/**\n\t * ProgressBar constructor.\n\t *\n\t * @param string  $message    Text to display before the progress bar.\n\t * @param integer $count      Total number of ticks to be performed.\n\t * @param integer $interval   Optional. The interval in milliseconds between updates. Default 100.\n\t *\n\t * @throws \\Exception When this is not run within WP CLI.\n\t *\/\n\tpublic function __construct( $message, $count, $interval = 100 ) {\n\t\tif ( ! ( defined( 'WP_CLI' ) && WP_CLI ) ) {\n\t\t\t\/* translators: %s php class name *\/\n\t\t\tthrow new \\Exception( sprintf( __( 'The %s class can only be run within WP CLI.', 'action-scheduler' ), __CLASS__ ) );\n\t\t}\n\n\t\t$this->total_ticks = 0;\n\t\t$this->message     = $message;\n\t\t$this->count       = $count;\n\t\t$this->interval    = $interval;\n\t}\n\n\t\/**\n\t * Increment the progress bar ticks.\n\t *\/\n\tpublic function tick() {\n\t\tif ( null === $this->progress_bar ) {\n\t\t\t$this->setup_progress_bar();\n\t\t}\n\n\t\t$this->progress_bar->tick();\n\t\t$this->total_ticks++;\n\n\t\tdo_action( 'action_scheduler\/progress_tick', $this->total_ticks ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t\/**\n\t * Get the progress bar tick count.\n\t *\n\t * @return int\n\t *\/\n\tpublic function current() {\n\t\treturn $this->progress_bar ? $this->progress_bar->current() : 0;\n\t}\n\n\t\/**\n\t * Finish the current progress bar.\n\t *\/\n\tpublic function finish() {\n\t\tif ( null !== $this->progress_bar ) {\n\t\t\t$this->progress_bar->finish();\n\t\t}\n\n\t\t$this->progress_bar = null;\n\t}\n\n\t\/**\n\t * Set the message used when creating the progress bar.\n\t *\n\t * @param string $message The message to be used when the next progress bar is created.\n\t *\/\n\tpublic function set_message( $message ) {\n\t\t$this->message = $message;\n\t}\n\n\t\/**\n\t * Set the count for a new progress bar.\n\t *\n\t * @param integer $count The total number of ticks expected to complete.\n\t *\/\n\tpublic function set_count( $count ) {\n\t\t$this->count = $count;\n\t\t$this->finish();\n\t}\n\n\t\/**\n\t * Set up the progress bar.\n\t *\/\n\tprotected function setup_progress_bar() {\n\t\t$this->progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\t$this->message,\n\t\t\t$this->count,\n\t\t\t$this->interval\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/System_Command.php","ext":"php","size":7237,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI;\n\n\/\/ phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaping output is not necessary in WP CLI.\n\nuse ActionScheduler_SystemInformation;\nuse WP_CLI;\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n\/**\n * System info WP-CLI commands for Action Scheduler.\n *\/\nclass System_Command {\n\n\t\/**\n\t * Data store for querying actions\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprotected $store;\n\n\t\/**\n\t * Construct.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->store = \\ActionScheduler::store();\n\t}\n\n\t\/**\n\t * Print in-use data store class.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t *\n\t * @subcommand data-store\n\t *\/\n\tpublic function datastore( array $args, array $assoc_args ) {\n\t\techo $this->get_current_datastore();\n\t}\n\n\t\/**\n\t * Print in-use runner class.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t *\/\n\tpublic function runner( array $args, array $assoc_args ) {\n\t\techo $this->get_current_runner();\n\t}\n\n\t\/**\n\t * Get system status.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t *\/\n\tpublic function status( array $args, array $assoc_args ) {\n\t\t\/**\n\t\t * Get runner status.\n\t\t *\n\t\t * @link https:\/\/github.com\/woocommerce\/action-scheduler-disable-default-runner\n\t\t *\/\n\t\t$runner_enabled = has_action( 'action_scheduler_run_queue', array( \\ActionScheduler::runner(), 'run' ) );\n\n\t\t\\WP_CLI::line( sprintf( 'Data store: %s', $this->get_current_datastore() ) );\n\t\t\\WP_CLI::line( sprintf( 'Runner: %s%s', $this->get_current_runner(), ( $runner_enabled ? '' : ' (disabled)' ) ) );\n\t\t\\WP_CLI::line( sprintf( 'Version: %s', $this->get_latest_version() ) );\n\n\t\t$rows              = array();\n\t\t$action_counts     = $this->store->action_counts();\n\t\t$oldest_and_newest = $this->get_oldest_and_newest( array_keys( $action_counts ) );\n\n\t\tforeach ( $action_counts as $status => $count ) {\n\t\t\t$rows[] = array(\n\t\t\t\t'status' => $status,\n\t\t\t\t'count'  => $count,\n\t\t\t\t'oldest' => $oldest_and_newest[ $status ]['oldest'],\n\t\t\t\t'newest' => $oldest_and_newest[ $status ]['newest'],\n\t\t\t);\n\t\t}\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $assoc_args, array( 'status', 'count', 'oldest', 'newest' ) );\n\t\t$formatter->display_items( $rows );\n\t}\n\n\t\/**\n\t * Display the active version, or all registered versions.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--all]\n\t * : List all registered versions.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t *\/\n\tpublic function version( array $args, array $assoc_args ) {\n\t\t$all    = (bool) get_flag_value( $assoc_args, 'all' );\n\t\t$latest = $this->get_latest_version();\n\n\t\tif ( ! $all ) {\n\t\t\techo $latest;\n\t\t\t\\WP_CLI::halt( 0 );\n\t\t}\n\n\t\t$instance = \\ActionScheduler_Versions::instance();\n\t\t$versions = $instance->get_versions();\n\t\t$rows     = array();\n\n\t\tforeach ( $versions as $version => $callback ) {\n\t\t\t$active = $version === $latest;\n\n\t\t\t$rows[ $version ] = array(\n\t\t\t\t'version'  => $version,\n\t\t\t\t'callback' => $callback,\n\t\t\t\t'active'   => $active ? 'yes' : 'no',\n\t\t\t);\n\t\t}\n\n\t\tuksort( $rows, 'version_compare' );\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $assoc_args, array( 'version', 'callback', 'active' ) );\n\t\t$formatter->display_items( $rows );\n\t}\n\n\t\/**\n\t * Display the current source, or all registered sources.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--all]\n\t * : List all registered sources.\n\t *\n\t * [--fullpath]\n\t * : List full path of source(s).\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @uses ActionScheduler_SystemInformation::active_source_path()\n\t * @uses \\WP_CLI\\Formatter::display_items()\n\t * @uses $this->get_latest_version()\n\t * @return void\n\t *\/\n\tpublic function source( array $args, array $assoc_args ) {\n\t\t$all      = (bool) get_flag_value( $assoc_args, 'all' );\n\t\t$fullpath = (bool) get_flag_value( $assoc_args, 'fullpath' );\n\t\t$source   = ActionScheduler_SystemInformation::active_source_path();\n\t\t$path     = $source;\n\n\t\tif ( ! $fullpath ) {\n\t\t\t$path = str_replace( ABSPATH, '', $path );\n\t\t}\n\n\t\tif ( ! $all ) {\n\t\t\techo $path;\n\t\t\t\\WP_CLI::halt( 0 );\n\t\t}\n\n\t\t$sources = ActionScheduler_SystemInformation::get_sources();\n\n\t\tif ( empty( $sources ) ) {\n\t\t\tWP_CLI::log( __( 'Detailed information about registered sources is not currently available.', 'action-scheduler' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$rows = array();\n\n\t\tforeach ( $sources as $check_source => $version ) {\n\t\t\t$active = dirname( $check_source ) === $source;\n\t\t\t$path   = $check_source;\n\n\t\t\tif ( ! $fullpath ) {\n\t\t\t\t$path = str_replace( ABSPATH, '', $path );\n\t\t\t}\n\n\t\t\t$rows[ $check_source ] = array(\n\t\t\t\t'source'  => $path,\n\t\t\t\t'version' => $version,\n\t\t\t\t'active'  => $active ? 'yes' : 'no',\n\t\t\t);\n\t\t}\n\n\t\tksort( $rows );\n\n\t\t\\WP_CLI::log( PHP_EOL . 'Please note there can only be one unique registered instance of Action Scheduler per ' . PHP_EOL . 'version number, so this list may not include all the currently present copies of ' . PHP_EOL . 'Action Scheduler.' . PHP_EOL );\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $assoc_args, array( 'source', 'version', 'active' ) );\n\t\t$formatter->display_items( $rows );\n\t}\n\n\t\/**\n\t * Get current data store.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_current_datastore() {\n\t\treturn get_class( $this->store );\n\t}\n\n\t\/**\n\t * Get latest version.\n\t *\n\t * @param null|\\ActionScheduler_Versions $instance Versions.\n\t * @return string\n\t *\/\n\tprotected function get_latest_version( $instance = null ) {\n\t\tif ( is_null( $instance ) ) {\n\t\t\t$instance = \\ActionScheduler_Versions::instance();\n\t\t}\n\n\t\treturn $instance->latest_version();\n\t}\n\n\t\/**\n\t * Get current runner.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_current_runner() {\n\t\treturn get_class( \\ActionScheduler::runner() );\n\t}\n\n\t\/**\n\t * Get oldest and newest scheduled dates for a given set of statuses.\n\t *\n\t * @param array $status_keys Set of statuses to find oldest & newest action for.\n\t * @return array\n\t *\/\n\tprotected function get_oldest_and_newest( $status_keys ) {\n\t\t$oldest_and_newest = array();\n\n\t\tforeach ( $status_keys as $status ) {\n\t\t\t$oldest_and_newest[ $status ] = array(\n\t\t\t\t'oldest' => '&ndash;',\n\t\t\t\t'newest' => '&ndash;',\n\t\t\t);\n\n\t\t\tif ( 'in-progress' === $status ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$oldest_and_newest[ $status ]['oldest'] = $this->get_action_status_date( $status, 'oldest' );\n\t\t\t$oldest_and_newest[ $status ]['newest'] = $this->get_action_status_date( $status, 'newest' );\n\t\t}\n\n\t\treturn $oldest_and_newest;\n\t}\n\n\t\/**\n\t * Get oldest or newest scheduled date for a given status.\n\t *\n\t * @param string $status Action status label\/name string.\n\t * @param string $date_type Oldest or Newest.\n\t * @return string\n\t *\/\n\tprotected function get_action_status_date( $status, $date_type = 'oldest' ) {\n\t\t$order = 'oldest' === $date_type ? 'ASC' : 'DESC';\n\n\t\t$args = array(\n\t\t\t'status'   => $status,\n\t\t\t'per_page' => 1,\n\t\t\t'order'    => $order,\n\t\t);\n\n\t\t$action = $this->store->query_actions( $args );\n\n\t\tif ( ! empty( $action ) ) {\n\t\t\t$date_object = $this->store->get_date( $action[0] );\n\t\t\t$action_date = $date_object->format( 'Y-m-d H:i:s O' );\n\t\t} else {\n\t\t\t$action_date = '&ndash;';\n\t\t}\n\n\t\treturn $action_date;\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/WP_CLI\/ActionScheduler_WPCLI_Clean_Command.php","ext":"php","size":3827,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Commands for Action Scheduler.\n *\/\nclass ActionScheduler_WPCLI_Clean_Command extends WP_CLI_Command {\n\t\/**\n\t * Run the Action Scheduler Queue Cleaner\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--batch-size=<size>]\n\t * : The maximum number of actions to delete per batch. Defaults to 20.\n\t *\n\t * [--batches=<size>]\n\t * : Limit execution to a number of batches. Defaults to 0, meaning batches will continue all eligible actions are deleted.\n\t *\n\t * [--status=<status>]\n\t * : Only clean actions with the specified status. Defaults to Canceled, Completed. Define multiple statuses as a comma separated string (without spaces), e.g. `--status=complete,failed,canceled`\n\t *\n\t * [--before=<datestring>]\n\t * : Only delete actions with scheduled date older than this. Defaults to 31 days. e.g `--before='7 days ago'`, `--before='02-Feb-2020 20:20:20'`\n\t *\n\t * [--pause=<seconds>]\n\t * : The number of seconds to pause between batches. Default no pause.\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t *\n\t * @subcommand clean\n\t *\/\n\tpublic function clean( $args, $assoc_args ) {\n\t\t\/\/ Handle passed arguments.\n\t\t$batch   = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batch-size', 20 ) );\n\t\t$batches = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batches', 0 ) );\n\t\t$status  = explode( ',', WP_CLI\\Utils\\get_flag_value( $assoc_args, 'status', '' ) );\n\t\t$status  = array_filter( array_map( 'trim', $status ) );\n\t\t$before  = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'before', '' );\n\t\t$sleep   = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'pause', 0 );\n\n\t\t$batches_completed = 0;\n\t\t$actions_deleted   = 0;\n\t\t$unlimited         = 0 === $batches;\n\t\ttry {\n\t\t\t$lifespan = as_get_datetime_object( $before );\n\t\t} catch ( Exception $e ) {\n\t\t\t$lifespan = null;\n\t\t}\n\n\t\ttry {\n\t\t\t\/\/ Custom queue cleaner instance.\n\t\t\t$cleaner = new ActionScheduler_QueueCleaner( null, $batch );\n\n\t\t\t\/\/ Clean actions for as long as possible.\n\t\t\twhile ( $unlimited || $batches_completed < $batches ) {\n\t\t\t\tif ( $sleep && $batches_completed > 0 ) {\n\t\t\t\t\tsleep( $sleep );\n\t\t\t\t}\n\n\t\t\t\t$deleted = count( $cleaner->clean_actions( $status, $lifespan, null, 'CLI' ) );\n\t\t\t\tif ( $deleted <= 0 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$actions_deleted += $deleted;\n\t\t\t\t$batches_completed++;\n\t\t\t\t$this->print_success( $deleted );\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_total_batches( $batches_completed );\n\t\tif ( $batches_completed > 1 ) {\n\t\t\t$this->print_success( $actions_deleted );\n\t\t}\n\t}\n\n\t\/**\n\t * Print WP CLI message about how many batches of actions were processed.\n\t *\n\t * @param int $batches_processed Number of batches processed.\n\t *\/\n\tprotected function print_total_batches( int $batches_processed ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d refers to the total number of batches processed *\/\n\t\t\t\t_n( '%d batch processed.', '%d batches processed.', $batches_processed, 'action-scheduler' ),\n\t\t\t\t$batches_processed\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param Exception $e The error object.\n\t *\/\n\tprotected function print_error( Exception $e ) {\n\t\tWP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %s refers to the exception error message *\/\n\t\t\t\t__( 'There was an error deleting an action: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Print a success message with the number of completed actions.\n\t *\n\t * @param int $actions_deleted Number of deleted actions.\n\t *\/\n\tprotected function print_success( int $actions_deleted ) {\n\t\tWP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: %d refers to the total number of actions deleted *\/\n\t\t\t\t_n( '%d action deleted.', '%d actions deleted.', $actions_deleted, 'action-scheduler' ),\n\t\t\t\t$actions_deleted\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_AsyncRequest_QueueRunner.php","ext":"php","size":2163,"mtime":1756373567,"type":"text","content":"<?php\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * ActionScheduler_AsyncRequest_QueueRunner class.\n *\/\nclass ActionScheduler_AsyncRequest_QueueRunner extends WP_Async_Request {\n\n\t\/**\n\t * Data store for querying actions\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprotected $store;\n\n\t\/**\n\t * Prefix for ajax hooks\n\t *\n\t * @var string\n\t *\/\n\tprotected $prefix = 'as';\n\n\t\/**\n\t * Action for ajax hooks\n\t *\n\t * @var string\n\t *\/\n\tprotected $action = 'async_request_queue_runner';\n\n\t\/**\n\t * Initiate new async request.\n\t *\n\t * @param ActionScheduler_Store $store Store object.\n\t *\/\n\tpublic function __construct( ActionScheduler_Store $store ) {\n\t\tparent::__construct();\n\t\t$this->store = $store;\n\t}\n\n\t\/**\n\t * Handle async requests\n\t *\n\t * Run a queue, and maybe dispatch another async request to run another queue\n\t * if there are still pending actions after completing a queue in this request.\n\t *\/\n\tprotected function handle() {\n\t\tdo_action( 'action_scheduler_run_queue', 'Async Request' ); \/\/ run a queue in the same way as WP Cron, but declare the Async Request context.\n\n\t\t$sleep_seconds = $this->get_sleep_seconds();\n\n\t\tif ( $sleep_seconds ) {\n\t\t\tsleep( $sleep_seconds );\n\t\t}\n\n\t\t$this->maybe_dispatch();\n\t}\n\n\t\/**\n\t * If the async request runner is needed and allowed to run, dispatch a request.\n\t *\/\n\tpublic function maybe_dispatch() {\n\t\tif ( ! $this->allow() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->dispatch();\n\t\tActionScheduler_QueueRunner::instance()->unhook_dispatch_async_request();\n\t}\n\n\t\/**\n\t * Only allow async requests when needed.\n\t *\n\t * Also allow 3rd party code to disable running actions via async requests.\n\t *\/\n\tprotected function allow() {\n\n\t\tif ( ! has_action( 'action_scheduler_run_queue' ) || ActionScheduler::runner()->has_maximum_concurrent_batches() || ! $this->store->has_pending_actions_due() ) {\n\t\t\t$allow = false;\n\t\t} else {\n\t\t\t$allow = true;\n\t\t}\n\n\t\treturn apply_filters( 'action_scheduler_allow_async_request_runner', $allow );\n\t}\n\n\t\/**\n\t * Chaining async requests can crash MySQL. A brief sleep call in PHP prevents that.\n\t *\/\n\tprotected function get_sleep_seconds() {\n\t\treturn apply_filters( 'action_scheduler_async_request_sleep_seconds', 5, $this );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/DryRun_LogMigrator.php","ext":"php","size":459,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n\/**\n * Class DryRun_LogMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @codeCoverageIgnore\n *\/\nclass DryRun_LogMigrator extends LogMigrator {\n\t\/**\n\t * Simulate migrating an action log.\n\t *\n\t * @param int $source_action_id Source logger object.\n\t * @param int $destination_action_id Destination logger object.\n\t *\/\n\tpublic function migrate( $source_action_id, $destination_action_id ) {\n\t\t\/\/ no-op.\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/DryRun_ActionMigrator.php","ext":"php","size":554,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n\/**\n * Class DryRun_ActionMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass DryRun_ActionMigrator extends ActionMigrator {\n\t\/**\n\t * Simulate migrating an action.\n\t *\n\t * @param int $source_action_id Action ID.\n\t *\n\t * @return int\n\t *\/\n\tpublic function migrate( $source_action_id ) {\n\t\tdo_action( 'action_scheduler\/migrate_action_dry_run', $source_action_id ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\treturn 0;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/Scheduler.php","ext":"php","size":3112,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n\/**\n * Class Scheduler\n *\n * @package Action_Scheduler\\WP_CLI\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass Scheduler {\n\t\/** Migration action hook. *\/\n\tconst HOOK = 'action_scheduler\/migration_hook';\n\n\t\/** Migration action group. *\/\n\tconst GROUP = 'action-scheduler-migration';\n\n\t\/**\n\t * Set up the callback for the scheduled job.\n\t *\/\n\tpublic function hook() {\n\t\tadd_action( self::HOOK, array( $this, 'run_migration' ), 10, 0 );\n\t}\n\n\t\/**\n\t * Remove the callback for the scheduled job.\n\t *\/\n\tpublic function unhook() {\n\t\tremove_action( self::HOOK, array( $this, 'run_migration' ), 10 );\n\t}\n\n\t\/**\n\t * The migration callback.\n\t *\/\n\tpublic function run_migration() {\n\t\t$migration_runner = $this->get_migration_runner();\n\t\t$count            = $migration_runner->run( $this->get_batch_size() );\n\n\t\tif ( 0 === $count ) {\n\t\t\t$this->mark_complete();\n\t\t} else {\n\t\t\t$this->schedule_migration( time() + $this->get_schedule_interval() );\n\t\t}\n\t}\n\n\t\/**\n\t * Mark the migration complete.\n\t *\/\n\tpublic function mark_complete() {\n\t\t$this->unschedule_migration();\n\n\t\t\\ActionScheduler_DataController::mark_migration_complete();\n\t\tdo_action( 'action_scheduler\/migration_complete' ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t\/**\n\t * Get a flag indicating whether the migration is scheduled.\n\t *\n\t * @return bool Whether there is a pending action in the store to handle the migration\n\t *\/\n\tpublic function is_migration_scheduled() {\n\t\t$next = as_next_scheduled_action( self::HOOK );\n\n\t\treturn ! empty( $next );\n\t}\n\n\t\/**\n\t * Schedule the migration.\n\t *\n\t * @param int $when Optional timestamp to run the next migration batch. Defaults to now.\n\t *\n\t * @return string The action ID\n\t *\/\n\tpublic function schedule_migration( $when = 0 ) {\n\t\t$next = as_next_scheduled_action( self::HOOK );\n\n\t\tif ( ! empty( $next ) ) {\n\t\t\treturn $next;\n\t\t}\n\n\t\tif ( empty( $when ) ) {\n\t\t\t$when = time() + MINUTE_IN_SECONDS;\n\t\t}\n\n\t\treturn as_schedule_single_action( $when, self::HOOK, array(), self::GROUP );\n\t}\n\n\t\/**\n\t * Remove the scheduled migration action.\n\t *\/\n\tpublic function unschedule_migration() {\n\t\tas_unschedule_action( self::HOOK, null, self::GROUP );\n\t}\n\n\t\/**\n\t * Get migration batch schedule interval.\n\t *\n\t * @return int Seconds between migration runs. Defaults to 0 seconds to allow chaining migration via Async Runners.\n\t *\/\n\tprivate function get_schedule_interval() {\n\t\treturn (int) apply_filters( 'action_scheduler\/migration_interval', 0 ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t\/**\n\t * Get migration batch size.\n\t *\n\t * @return int Number of actions to migrate in each batch. Defaults to 250.\n\t *\/\n\tprivate function get_batch_size() {\n\t\treturn (int) apply_filters( 'action_scheduler\/migration_batch_size', 250 ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t\/**\n\t * Get migration runner object.\n\t *\n\t * @return Runner\n\t *\/\n\tprivate function get_migration_runner() {\n\t\t$config = Controller::instance()->get_migration_config_object();\n\n\t\treturn new Runner( $config );\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/Runner.php","ext":"php","size":4220,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n\/**\n * Class Runner\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass Runner {\n\t\/**\n\t * Source store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $source_store;\n\n\t\/**\n\t * Destination store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $destination_store;\n\n\t\/**\n\t * Source logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprivate $source_logger;\n\n\t\/**\n\t * Destination logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprivate $destination_logger;\n\n\t\/**\n\t * Batch fetcher instance.\n\t *\n\t * @var BatchFetcher\n\t *\/\n\tprivate $batch_fetcher;\n\n\t\/**\n\t * Action migrator instance.\n\t *\n\t * @var ActionMigrator\n\t *\/\n\tprivate $action_migrator;\n\n\t\/**\n\t * Log migrator instance.\n\t *\n\t * @var LogMigrator\n\t *\/\n\tprivate $log_migrator;\n\n\t\/**\n\t * Progress bar instance.\n\t *\n\t * @var ProgressBar\n\t *\/\n\tprivate $progress_bar;\n\n\t\/**\n\t * Runner constructor.\n\t *\n\t * @param Config $config Migration configuration object.\n\t *\/\n\tpublic function __construct( Config $config ) {\n\t\t$this->source_store       = $config->get_source_store();\n\t\t$this->destination_store  = $config->get_destination_store();\n\t\t$this->source_logger      = $config->get_source_logger();\n\t\t$this->destination_logger = $config->get_destination_logger();\n\n\t\t$this->batch_fetcher = new BatchFetcher( $this->source_store );\n\t\tif ( $config->get_dry_run() ) {\n\t\t\t$this->log_migrator    = new DryRun_LogMigrator( $this->source_logger, $this->destination_logger );\n\t\t\t$this->action_migrator = new DryRun_ActionMigrator( $this->source_store, $this->destination_store, $this->log_migrator );\n\t\t} else {\n\t\t\t$this->log_migrator    = new LogMigrator( $this->source_logger, $this->destination_logger );\n\t\t\t$this->action_migrator = new ActionMigrator( $this->source_store, $this->destination_store, $this->log_migrator );\n\t\t}\n\n\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\t$this->progress_bar = $config->get_progress_bar();\n\t\t}\n\t}\n\n\t\/**\n\t * Run migration batch.\n\t *\n\t * @param int $batch_size Optional batch size. Default 10.\n\t *\n\t * @return int Size of batch processed.\n\t *\/\n\tpublic function run( $batch_size = 10 ) {\n\t\t$batch      = $this->batch_fetcher->fetch( $batch_size );\n\t\t$batch_size = count( $batch );\n\n\t\tif ( ! $batch_size ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( $this->progress_bar ) {\n\t\t\t\/* translators: %d: amount of actions *\/\n\t\t\t$this->progress_bar->set_message( sprintf( _n( 'Migrating %d action', 'Migrating %d actions', $batch_size, 'action-scheduler' ), $batch_size ) );\n\t\t\t$this->progress_bar->set_count( $batch_size );\n\t\t}\n\n\t\t$this->migrate_actions( $batch );\n\n\t\treturn $batch_size;\n\t}\n\n\t\/**\n\t * Migration a batch of actions.\n\t *\n\t * @param array $action_ids List of action IDs to migrate.\n\t *\/\n\tpublic function migrate_actions( array $action_ids ) {\n\t\tdo_action( 'action_scheduler\/migration_batch_starting', $action_ids ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\\ActionScheduler::logger()->unhook_stored_action();\n\t\t$this->destination_logger->unhook_stored_action();\n\n\t\tforeach ( $action_ids as $source_action_id ) {\n\t\t\t$destination_action_id = $this->action_migrator->migrate( $source_action_id );\n\t\t\tif ( $destination_action_id ) {\n\t\t\t\t$this->destination_logger->log(\n\t\t\t\t\t$destination_action_id,\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\/* translators: 1: source action ID 2: source store class 3: destination action ID 4: destination store class *\/\n\t\t\t\t\t\t__( 'Migrated action with ID %1$d in %2$s to ID %3$d in %4$s', 'action-scheduler' ),\n\t\t\t\t\t\t$source_action_id,\n\t\t\t\t\t\tget_class( $this->source_store ),\n\t\t\t\t\t\t$destination_action_id,\n\t\t\t\t\t\tget_class( $this->destination_store )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( $this->progress_bar ) {\n\t\t\t\t$this->progress_bar->tick();\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->progress_bar ) {\n\t\t\t$this->progress_bar->finish();\n\t\t}\n\n\t\t\\ActionScheduler::logger()->hook_stored_action();\n\n\t\tdo_action( 'action_scheduler\/migration_batch_complete', $action_ids ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t\/**\n\t * Initialize destination store and logger.\n\t *\/\n\tpublic function init_destination() {\n\t\t$this->destination_store->init();\n\t\t$this->destination_logger->init();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/ActionMigrator.php","ext":"php","size":4267,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n\/**\n * Class ActionMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass ActionMigrator {\n\t\/**\n\t * Source store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $source;\n\n\t\/**\n\t * Destination store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $destination;\n\n\t\/**\n\t * LogMigrator instance.\n\t *\n\t * @var LogMigrator\n\t *\/\n\tprivate $log_migrator;\n\n\t\/**\n\t * ActionMigrator constructor.\n\t *\n\t * @param \\ActionScheduler_Store $source_store Source store object.\n\t * @param \\ActionScheduler_Store $destination_store Destination store object.\n\t * @param LogMigrator            $log_migrator Log migrator object.\n\t *\/\n\tpublic function __construct( \\ActionScheduler_Store $source_store, \\ActionScheduler_Store $destination_store, LogMigrator $log_migrator ) {\n\t\t$this->source       = $source_store;\n\t\t$this->destination  = $destination_store;\n\t\t$this->log_migrator = $log_migrator;\n\t}\n\n\t\/**\n\t * Migrate an action.\n\t *\n\t * @param int $source_action_id Action ID.\n\t *\n\t * @return int 0|new action ID\n\t * @throws \\RuntimeException When unable to delete action from the source store.\n\t *\/\n\tpublic function migrate( $source_action_id ) {\n\t\ttry {\n\t\t\t$action = $this->source->fetch_action( $source_action_id );\n\t\t\t$status = $this->source->get_status( $source_action_id );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$action = null;\n\t\t\t$status = '';\n\t\t}\n\n\t\tif ( is_null( $action ) || empty( $status ) || ! $action->get_schedule()->get_date() ) {\n\t\t\t\/\/ null action or empty status means the fetch operation failed or the action didn't exist.\n\t\t\t\/\/ null schedule means it's missing vital data.\n\t\t\t\/\/ delete it and move on.\n\t\t\ttry {\n\t\t\t\t$this->source->delete_action( $source_action_id );\n\t\t\t} catch ( \\Exception $e ) { \/\/ phpcs:ignore Generic.CodeAnalysis.EmptyStatement.DetectedCatch\n\t\t\t\t\/\/ nothing to do, it didn't exist in the first place.\n\t\t\t}\n\t\t\tdo_action( 'action_scheduler\/no_action_to_migrate', $source_action_id, $this->source, $this->destination ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\treturn 0;\n\t\t}\n\n\t\ttry {\n\n\t\t\t\/\/ Make sure the last attempt date is set correctly for completed and failed actions.\n\t\t\t$last_attempt_date = ( \\ActionScheduler_Store::STATUS_PENDING !== $status ) ? $this->source->get_date( $source_action_id ) : null;\n\n\t\t\t$destination_action_id = $this->destination->save_action( $action, null, $last_attempt_date );\n\t\t} catch ( \\Exception $e ) {\n\t\t\tdo_action( 'action_scheduler\/migrate_action_failed', $source_action_id, $this->source, $this->destination ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\treturn 0; \/\/ could not save the action in the new store.\n\t\t}\n\n\t\ttry {\n\t\t\tswitch ( $status ) {\n\t\t\t\tcase \\ActionScheduler_Store::STATUS_FAILED:\n\t\t\t\t\t$this->destination->mark_failure( $destination_action_id );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \\ActionScheduler_Store::STATUS_CANCELED:\n\t\t\t\t\t$this->destination->cancel_action( $destination_action_id );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->log_migrator->migrate( $source_action_id, $destination_action_id );\n\t\t\t$this->source->delete_action( $source_action_id );\n\n\t\t\t$test_action = $this->source->fetch_action( $source_action_id );\n\t\t\tif ( ! is_a( $test_action, 'ActionScheduler_NullAction' ) ) {\n\t\t\t\t\/\/ translators: %s is an action ID.\n\t\t\t\tthrow new \\RuntimeException( sprintf( __( 'Unable to remove source migrated action %s', 'action-scheduler' ), $source_action_id ) );\n\t\t\t}\n\t\t\tdo_action( 'action_scheduler\/migrated_action', $source_action_id, $destination_action_id, $this->source, $this->destination ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\treturn $destination_action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\/\/ could not delete from the old store.\n\t\t\t$this->source->mark_migrated( $source_action_id );\n\n\t\t\t\/\/ phpcs:disable WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t\t\tdo_action( 'action_scheduler\/migrate_action_incomplete', $source_action_id, $destination_action_id, $this->source, $this->destination );\n\t\t\tdo_action( 'action_scheduler\/migrated_action', $source_action_id, $destination_action_id, $this->source, $this->destination );\n\t\t\t\/\/ phpcs:enable\n\n\t\t\treturn $destination_action_id;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/Config.php","ext":"php","size":4206,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\nuse Action_Scheduler\\WP_CLI\\ProgressBar;\nuse ActionScheduler_Logger as Logger;\nuse ActionScheduler_Store as Store;\n\n\/**\n * Class Config\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * A config builder for the ActionScheduler\\Migration\\Runner class\n *\/\nclass Config {\n\t\/**\n\t * Source store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $source_store;\n\n\t\/**\n\t * Source logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprivate $source_logger;\n\n\t\/**\n\t * Destination store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $destination_store;\n\n\t\/**\n\t * Destination logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprivate $destination_logger;\n\n\t\/**\n\t * Progress bar object.\n\t *\n\t * @var Action_Scheduler\\WP_CLI\\ProgressBar\n\t *\/\n\tprivate $progress_bar;\n\n\t\/**\n\t * Flag indicating a dryrun.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $dry_run = false;\n\n\t\/**\n\t * Config constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t}\n\n\t\/**\n\t * Get the configured source store.\n\t *\n\t * @return ActionScheduler_Store\n\t * @throws \\RuntimeException When source store is not configured.\n\t *\/\n\tpublic function get_source_store() {\n\t\tif ( empty( $this->source_store ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Source store must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->source_store;\n\t}\n\n\t\/**\n\t * Set the configured source store.\n\t *\n\t * @param ActionScheduler_Store $store Source store object.\n\t *\/\n\tpublic function set_source_store( Store $store ) {\n\t\t$this->source_store = $store;\n\t}\n\n\t\/**\n\t * Get the configured source logger.\n\t *\n\t * @return ActionScheduler_Logger\n\t * @throws \\RuntimeException When source logger is not configured.\n\t *\/\n\tpublic function get_source_logger() {\n\t\tif ( empty( $this->source_logger ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Source logger must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->source_logger;\n\t}\n\n\t\/**\n\t * Set the configured source logger.\n\t *\n\t * @param ActionScheduler_Logger $logger Logger object.\n\t *\/\n\tpublic function set_source_logger( Logger $logger ) {\n\t\t$this->source_logger = $logger;\n\t}\n\n\t\/**\n\t * Get the configured destination store.\n\t *\n\t * @return ActionScheduler_Store\n\t * @throws \\RuntimeException When destination store is not configured.\n\t *\/\n\tpublic function get_destination_store() {\n\t\tif ( empty( $this->destination_store ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Destination store must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->destination_store;\n\t}\n\n\t\/**\n\t * Set the configured destination store.\n\t *\n\t * @param ActionScheduler_Store $store Action store object.\n\t *\/\n\tpublic function set_destination_store( Store $store ) {\n\t\t$this->destination_store = $store;\n\t}\n\n\t\/**\n\t * Get the configured destination logger.\n\t *\n\t * @return ActionScheduler_Logger\n\t * @throws \\RuntimeException When destination logger is not configured.\n\t *\/\n\tpublic function get_destination_logger() {\n\t\tif ( empty( $this->destination_logger ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Destination logger must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->destination_logger;\n\t}\n\n\t\/**\n\t * Set the configured destination logger.\n\t *\n\t * @param ActionScheduler_Logger $logger Logger object.\n\t *\/\n\tpublic function set_destination_logger( Logger $logger ) {\n\t\t$this->destination_logger = $logger;\n\t}\n\n\t\/**\n\t * Get flag indicating whether it's a dry run.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function get_dry_run() {\n\t\treturn $this->dry_run;\n\t}\n\n\t\/**\n\t * Set flag indicating whether it's a dry run.\n\t *\n\t * @param bool $dry_run Dry run toggle.\n\t *\/\n\tpublic function set_dry_run( $dry_run ) {\n\t\t$this->dry_run = (bool) $dry_run;\n\t}\n\n\t\/**\n\t * Get progress bar object.\n\t *\n\t * @return ActionScheduler\\WPCLI\\ProgressBar\n\t *\/\n\tpublic function get_progress_bar() {\n\t\treturn $this->progress_bar;\n\t}\n\n\t\/**\n\t * Set progress bar object.\n\t *\n\t * @param ActionScheduler\\WPCLI\\ProgressBar $progress_bar Progress bar object.\n\t *\/\n\tpublic function set_progress_bar( ProgressBar $progress_bar ) {\n\t\t$this->progress_bar = $progress_bar;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/BatchFetcher.php","ext":"php","size":1768,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\Migration;\n\nuse ActionScheduler_Store as Store;\n\n\/**\n * Class BatchFetcher\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass BatchFetcher {\n\t\/**\n\t * Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $store;\n\n\t\/**\n\t * BatchFetcher constructor.\n\t *\n\t * @param ActionScheduler_Store $source_store Source store object.\n\t *\/\n\tpublic function __construct( Store $source_store ) {\n\t\t$this->store = $source_store;\n\t}\n\n\t\/**\n\t * Retrieve a list of actions.\n\t *\n\t * @param int $count The number of actions to retrieve.\n\t *\n\t * @return int[] A list of action IDs\n\t *\/\n\tpublic function fetch( $count = 10 ) {\n\t\tforeach ( $this->get_query_strategies( $count ) as $query ) {\n\t\t\t$action_ids = $this->store->query_actions( $query );\n\t\t\tif ( ! empty( $action_ids ) ) {\n\t\t\t\treturn $action_ids;\n\t\t\t}\n\t\t}\n\n\t\treturn array();\n\t}\n\n\t\/**\n\t * Generate a list of prioritized of action search parameters.\n\t *\n\t * @param int $count Number of actions to find.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_query_strategies( $count ) {\n\t\t$now  = as_get_datetime_object();\n\t\t$args = array(\n\t\t\t'date'     => $now,\n\t\t\t'per_page' => $count,\n\t\t\t'offset'   => 0,\n\t\t\t'orderby'  => 'date',\n\t\t\t'order'    => 'ASC',\n\t\t);\n\n\t\t$priorities = array(\n\t\t\tStore::STATUS_PENDING,\n\t\t\tStore::STATUS_FAILED,\n\t\t\tStore::STATUS_CANCELED,\n\t\t\tStore::STATUS_COMPLETE,\n\t\t\tStore::STATUS_RUNNING,\n\t\t\t'', \/\/ any other unanticipated status.\n\t\t);\n\n\t\tforeach ( $priorities as $status ) {\n\t\t\tyield wp_parse_args(\n\t\t\t\tarray(\n\t\t\t\t\t'status'       => $status,\n\t\t\t\t\t'date_compare' => '<=',\n\t\t\t\t),\n\t\t\t\t$args\n\t\t\t);\n\n\t\t\tyield wp_parse_args(\n\t\t\t\tarray(\n\t\t\t\t\t'status'       => $status,\n\t\t\t\t\t'date_compare' => '>=',\n\t\t\t\t),\n\t\t\t\t$args\n\t\t\t);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/LogMigrator.php","ext":"php","size":1313,"mtime":1756373567,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\nuse ActionScheduler_Logger;\n\n\/**\n * Class LogMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass LogMigrator {\n\t\/**\n\t * Source logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprivate $source;\n\n\t\/**\n\t * Destination logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t *\/\n\tprivate $destination;\n\n\t\/**\n\t * ActionMigrator constructor.\n\t *\n\t * @param ActionScheduler_Logger $source_logger Source logger object.\n\t * @param ActionScheduler_Logger $destination_logger Destination logger object.\n\t *\/\n\tpublic function __construct( ActionScheduler_Logger $source_logger, ActionScheduler_Logger $destination_logger ) {\n\t\t$this->source      = $source_logger;\n\t\t$this->destination = $destination_logger;\n\t}\n\n\t\/**\n\t * Migrate an action log.\n\t *\n\t * @param int $source_action_id Source logger object.\n\t * @param int $destination_action_id Destination logger object.\n\t *\/\n\tpublic function migrate( $source_action_id, $destination_action_id ) {\n\t\t$logs = $this->source->get_logs( $source_action_id );\n\n\t\tforeach ( $logs as $log ) {\n\t\t\tif ( absint( $log->get_action_id() ) === absint( $source_action_id ) ) {\n\t\t\t\t$this->destination->log( $destination_action_id, $log->get_message(), $log->get_date() );\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/Controller.php","ext":"php","size":6524,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\Migration;\n\nuse ActionScheduler_DataController;\nuse ActionScheduler_LoggerSchema;\nuse ActionScheduler_StoreSchema;\nuse Action_Scheduler\\WP_CLI\\ProgressBar;\n\n\/**\n * Class Controller\n *\n * The main plugin\/initialization class for migration to custom tables.\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n *\/\nclass Controller {\n\t\/**\n\t * Instance.\n\t *\n\t * @var self\n\t *\/\n\tprivate static $instance;\n\n\t\/**\n\t * Scheduler instance.\n\t *\n\t * @var Action_Scheduler\\Migration\\Scheduler\n\t *\/\n\tprivate $migration_scheduler;\n\n\t\/**\n\t * Class name of the store object.\n\t *\n\t * @var string\n\t *\/\n\tprivate $store_classname;\n\n\t\/**\n\t * Class name of the logger object.\n\t *\n\t * @var string\n\t *\/\n\tprivate $logger_classname;\n\n\t\/**\n\t * Flag to indicate migrating custom store.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $migrate_custom_store;\n\n\t\/**\n\t * Controller constructor.\n\t *\n\t * @param Scheduler $migration_scheduler Migration scheduler object.\n\t *\/\n\tprotected function __construct( Scheduler $migration_scheduler ) {\n\t\t$this->migration_scheduler = $migration_scheduler;\n\t\t$this->store_classname     = '';\n\t}\n\n\t\/**\n\t * Set the action store class name.\n\t *\n\t * @param string $class Classname of the store class.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_store_class( $class ) {\n\t\tif ( \\ActionScheduler_DataController::is_migration_complete() ) {\n\t\t\treturn \\ActionScheduler_DataController::DATASTORE_CLASS;\n\t\t} elseif ( \\ActionScheduler_Store::DEFAULT_CLASS !== $class ) {\n\t\t\t$this->store_classname = $class;\n\t\t\treturn $class;\n\t\t} else {\n\t\t\treturn 'ActionScheduler_HybridStore';\n\t\t}\n\t}\n\n\t\/**\n\t * Set the action logger class name.\n\t *\n\t * @param string $class Classname of the logger class.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_logger_class( $class ) {\n\t\t\\ActionScheduler_Store::instance();\n\n\t\tif ( $this->has_custom_datastore() ) {\n\t\t\t$this->logger_classname = $class;\n\t\t\treturn $class;\n\t\t} else {\n\t\t\treturn \\ActionScheduler_DataController::LOGGER_CLASS;\n\t\t}\n\t}\n\n\t\/**\n\t * Get flag indicating whether a custom datastore is in use.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function has_custom_datastore() {\n\t\treturn (bool) $this->store_classname;\n\t}\n\n\t\/**\n\t * Set up the background migration process.\n\t *\n\t * @return void\n\t *\/\n\tpublic function schedule_migration() {\n\t\t$logging_tables = new ActionScheduler_LoggerSchema();\n\t\t$store_tables   = new ActionScheduler_StoreSchema();\n\n\t\t\/*\n\t\t * In some unusual cases, the expected tables may not have been created. In such cases\n\t\t * we do not schedule a migration as doing so will lead to fatal error conditions.\n\t\t *\n\t\t * In such cases the user will likely visit the Tools > Scheduled Actions screen to\n\t\t * investigate, and will see appropriate messaging (this step also triggers an attempt\n\t\t * to rebuild any missing tables).\n\t\t *\n\t\t * @see https:\/\/github.com\/woocommerce\/action-scheduler\/issues\/653\n\t\t *\/\n\t\tif (\n\t\t\tActionScheduler_DataController::is_migration_complete()\n\t\t\t|| $this->migration_scheduler->is_migration_scheduled()\n\t\t\t|| ! $store_tables->tables_exist()\n\t\t\t|| ! $logging_tables->tables_exist()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->migration_scheduler->schedule_migration();\n\t}\n\n\t\/**\n\t * Get the default migration config object\n\t *\n\t * @return ActionScheduler\\Migration\\Config\n\t *\/\n\tpublic function get_migration_config_object() {\n\t\tstatic $config = null;\n\n\t\tif ( ! $config ) {\n\t\t\t$source_store  = $this->store_classname ? new $this->store_classname() : new \\ActionScheduler_wpPostStore();\n\t\t\t$source_logger = $this->logger_classname ? new $this->logger_classname() : new \\ActionScheduler_wpCommentLogger();\n\n\t\t\t$config = new Config();\n\t\t\t$config->set_source_store( $source_store );\n\t\t\t$config->set_source_logger( $source_logger );\n\t\t\t$config->set_destination_store( new \\ActionScheduler_DBStoreMigrator() );\n\t\t\t$config->set_destination_logger( new \\ActionScheduler_DBLogger() );\n\n\t\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\t\t$config->set_progress_bar( new ProgressBar( '', 0 ) );\n\t\t\t}\n\t\t}\n\n\t\treturn apply_filters( 'action_scheduler\/migration_config', $config ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t\/**\n\t * Hook dashboard migration notice.\n\t *\/\n\tpublic function hook_admin_notices() {\n\t\tif ( ! $this->allow_migration() || \\ActionScheduler_DataController::is_migration_complete() ) {\n\t\t\treturn;\n\t\t}\n\t\tadd_action( 'admin_notices', array( $this, 'display_migration_notice' ), 10, 0 );\n\t}\n\n\t\/**\n\t * Show a dashboard notice that migration is in progress.\n\t *\/\n\tpublic function display_migration_notice() {\n\t\tprintf( '<div class=\"notice notice-warning\"><p>%s<\/p><\/div>', esc_html__( 'Action Scheduler migration in progress. The list of scheduled actions may be incomplete.', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Add store classes. Hook migration.\n\t *\/\n\tprivate function hook() {\n\t\tadd_filter( 'action_scheduler_store_class', array( $this, 'get_store_class' ), 100, 1 );\n\t\tadd_filter( 'action_scheduler_logger_class', array( $this, 'get_logger_class' ), 100, 1 );\n\t\tadd_action( 'init', array( $this, 'maybe_hook_migration' ) );\n\t\tadd_action( 'wp_loaded', array( $this, 'schedule_migration' ) );\n\n\t\t\/\/ Action Scheduler may be displayed as a Tools screen or WooCommerce > Status administration screen.\n\t\tadd_action( 'load-tools_page_action-scheduler', array( $this, 'hook_admin_notices' ), 10, 0 );\n\t\tadd_action( 'load-woocommerce_page_wc-status', array( $this, 'hook_admin_notices' ), 10, 0 );\n\t}\n\n\t\/**\n\t * Possibly hook the migration scheduler action.\n\t *\/\n\tpublic function maybe_hook_migration() {\n\t\tif ( ! $this->allow_migration() || \\ActionScheduler_DataController::is_migration_complete() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->migration_scheduler->hook();\n\t}\n\n\t\/**\n\t * Allow datastores to enable migration to AS tables.\n\t *\/\n\tpublic function allow_migration() {\n\t\tif ( ! \\ActionScheduler_DataController::dependencies_met() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( null === $this->migrate_custom_store ) {\n\t\t\t$this->migrate_custom_store = apply_filters( 'action_scheduler_migrate_data_store', false );\n\t\t}\n\n\t\treturn ( ! $this->has_custom_datastore() ) || $this->migrate_custom_store;\n\t}\n\n\t\/**\n\t * Proceed with the migration if the dependencies have been met.\n\t *\/\n\tpublic static function init() {\n\t\tif ( \\ActionScheduler_DataController::dependencies_met() ) {\n\t\t\tself::instance()->hook();\n\t\t}\n\t}\n\n\t\/**\n\t * Singleton factory.\n\t *\/\n\tpublic static function instance() {\n\t\tif ( ! isset( self::$instance ) ) {\n\t\t\tself::$instance = new static( new Scheduler() );\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/migration\/ActionScheduler_DBStoreMigrator.php","ext":"php","size":1835,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_DBStoreMigrator\n *\n * A class for direct saving of actions to the table data store during migration.\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_DBStoreMigrator extends ActionScheduler_DBStore {\n\n\t\/**\n\t * Save an action with optional last attempt date.\n\t *\n\t * Normally, saving an action sets its attempted date to 0000-00-00 00:00:00 because when an action is first saved,\n\t * it can't have been attempted yet, but migrated completed actions will have an attempted date, so we need to save\n\t * that when first saving the action.\n\t *\n\t * @param ActionScheduler_Action $action Action to migrate.\n\t * @param null|DateTime          $scheduled_date Optional date of the first instance to store.\n\t * @param null|DateTime          $last_attempt_date Optional date the action was last attempted.\n\t *\n\t * @return string The action ID\n\t * @throws \\RuntimeException When the action is not saved.\n\t *\/\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null, ?DateTime $last_attempt_date = null ) {\n\t\ttry {\n\t\t\t\/**\n\t\t\t * Global.\n\t\t\t *\n\t\t\t * @var \\wpdb $wpdb\n\t\t\t *\/\n\t\t\tglobal $wpdb;\n\n\t\t\t$action_id = parent::save_action( $action, $scheduled_date );\n\n\t\t\tif ( null !== $last_attempt_date ) {\n\t\t\t\t$data = array(\n\t\t\t\t\t'last_attempt_gmt'   => $this->get_scheduled_date_string( $action, $last_attempt_date ),\n\t\t\t\t\t'last_attempt_local' => $this->get_scheduled_date_string_local( $action, $last_attempt_date ),\n\t\t\t\t);\n\n\t\t\t\t$wpdb->update( $wpdb->actionscheduler_actions, $data, array( 'action_id' => $action_id ), array( '%s', '%s' ), array( '%d' ) );\n\t\t\t}\n\n\t\t\treturn $action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\/\/ translators: %s is an error message.\n\t\t\tthrow new \\RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_FatalErrorMonitor.php","ext":"php","size":2565,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_FatalErrorMonitor\n *\/\nclass ActionScheduler_FatalErrorMonitor {\n\n\t\/**\n\t * ActionScheduler_ActionClaim instance.\n\t *\n\t * @var ActionScheduler_ActionClaim\n\t *\/\n\tprivate $claim = null;\n\n\t\/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $store = null;\n\n\t\/**\n\t * Current action's ID.\n\t *\n\t * @var int\n\t *\/\n\tprivate $action_id = 0;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param ActionScheduler_Store $store Action store.\n\t *\/\n\tpublic function __construct( ActionScheduler_Store $store ) {\n\t\t$this->store = $store;\n\t}\n\n\t\/**\n\t * Start monitoring.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claimed actions.\n\t *\/\n\tpublic function attach( ActionScheduler_ActionClaim $claim ) {\n\t\t$this->claim = $claim;\n\t\tadd_action( 'shutdown', array( $this, 'handle_unexpected_shutdown' ) );\n\t\tadd_action( 'action_scheduler_before_execute', array( $this, 'track_current_action' ), 0, 1 );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'untrack_action' ), 0, 0 );\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'untrack_action' ), 0, 0 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'untrack_action' ), 0, 0 );\n\t}\n\n\t\/**\n\t * Stop monitoring.\n\t *\/\n\tpublic function detach() {\n\t\t$this->claim = null;\n\t\t$this->untrack_action();\n\t\tremove_action( 'shutdown', array( $this, 'handle_unexpected_shutdown' ) );\n\t\tremove_action( 'action_scheduler_before_execute', array( $this, 'track_current_action' ), 0 );\n\t\tremove_action( 'action_scheduler_after_execute', array( $this, 'untrack_action' ), 0 );\n\t\tremove_action( 'action_scheduler_execution_ignored', array( $this, 'untrack_action' ), 0 );\n\t\tremove_action( 'action_scheduler_failed_execution', array( $this, 'untrack_action' ), 0 );\n\t}\n\n\t\/**\n\t * Track specified action.\n\t *\n\t * @param int $action_id Action ID to track.\n\t *\/\n\tpublic function track_current_action( $action_id ) {\n\t\t$this->action_id = $action_id;\n\t}\n\n\t\/**\n\t * Un-track action.\n\t *\/\n\tpublic function untrack_action() {\n\t\t$this->action_id = 0;\n\t}\n\n\t\/**\n\t * Handle unexpected shutdown.\n\t *\/\n\tpublic function handle_unexpected_shutdown() {\n\t\t$error = error_get_last();\n\n\t\tif ( $error ) {\n\t\t\tif ( in_array( $error['type'], array( E_ERROR, E_PARSE, E_COMPILE_ERROR, E_USER_ERROR, E_RECOVERABLE_ERROR ), true ) ) {\n\t\t\t\tif ( ! empty( $this->action_id ) ) {\n\t\t\t\t\t$this->store->mark_failure( $this->action_id );\n\t\t\t\t\tdo_action( 'action_scheduler_unexpected_shutdown', $this->action_id, $error );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->store->release_claim( $this->claim );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_OptionLock.php","ext":"php","size":4076,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Provide a way to set simple transient locks to block behaviour\n * for up-to a given duration.\n *\n * Class ActionScheduler_OptionLock\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_OptionLock extends ActionScheduler_Lock {\n\n\t\/**\n\t * Set a lock using options for a given amount of time (60 seconds by default).\n\t *\n\t * Using an autoloaded option avoids running database queries or other resource intensive tasks\n\t * on frequently triggered hooks, like 'init' or 'shutdown'.\n\t *\n\t * For example, ActionScheduler_QueueRunner->maybe_dispatch_async_request() uses a lock to avoid\n\t * calling ActionScheduler_QueueRunner->has_maximum_concurrent_batches() every time the 'shutdown',\n\t * hook is triggered, because that method calls ActionScheduler_QueueRunner->store->get_claim_count()\n\t * to find the current number of claims in the database.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @bool True if lock value has changed, false if not or if set failed.\n\t *\/\n\tpublic function set( $lock_type ) {\n\t\tglobal $wpdb;\n\n\t\t$lock_key            = $this->get_key( $lock_type );\n\t\t$existing_lock_value = $this->get_existing_lock( $lock_type );\n\t\t$new_lock_value      = $this->new_lock_value( $lock_type );\n\n\t\t\/\/ The lock may not exist yet, or may have been deleted.\n\t\tif ( empty( $existing_lock_value ) ) {\n\t\t\treturn (bool) $wpdb->insert(\n\t\t\t\t$wpdb->options,\n\t\t\t\tarray(\n\t\t\t\t\t'option_name'  => $lock_key,\n\t\t\t\t\t'option_value' => $new_lock_value,\n\t\t\t\t\t'autoload'     => 'no',\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif ( $this->get_expiration_from( $existing_lock_value ) >= time() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Otherwise, try to obtain the lock.\n\t\treturn (bool) $wpdb->update(\n\t\t\t$wpdb->options,\n\t\t\tarray( 'option_value' => $new_lock_value ),\n\t\t\tarray(\n\t\t\t\t'option_name'  => $lock_key,\n\t\t\t\t'option_value' => $existing_lock_value,\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * If a lock is set, return the timestamp it was set to expiry.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool|int False if no lock is set, otherwise the timestamp for when the lock is set to expire.\n\t *\/\n\tpublic function get_expiration( $lock_type ) {\n\t\treturn $this->get_expiration_from( $this->get_existing_lock( $lock_type ) );\n\t}\n\n\t\/**\n\t * Given the lock string, derives the lock expiration timestamp (or false if it cannot be determined).\n\t *\n\t * @param string $lock_value String containing a timestamp, or pipe-separated combination of unique value and timestamp.\n\t *\n\t * @return false|int\n\t *\/\n\tprivate function get_expiration_from( $lock_value ) {\n\t\t$lock_string = explode( '|', $lock_value );\n\n\t\t\/\/ Old style lock?\n\t\tif ( count( $lock_string ) === 1 && is_numeric( $lock_string[0] ) ) {\n\t\t\treturn (int) $lock_string[0];\n\t\t}\n\n\t\t\/\/ New style lock?\n\t\tif ( count( $lock_string ) === 2 && is_numeric( $lock_string[1] ) ) {\n\t\t\treturn (int) $lock_string[1];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get the key to use for storing the lock in the transient\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return string\n\t *\/\n\tprotected function get_key( $lock_type ) {\n\t\treturn sprintf( 'action_scheduler_lock_%s', $lock_type );\n\t}\n\n\t\/**\n\t * Supplies the existing lock value, or an empty string if not set.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_existing_lock( $lock_type ) {\n\t\tglobal $wpdb;\n\n\t\t\/\/ Now grab the existing lock value, if there is one.\n\t\treturn (string) $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT option_value FROM $wpdb->options WHERE option_name = %s\",\n\t\t\t\t$this->get_key( $lock_type )\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Supplies a lock value consisting of a unique value and the current timestamp, which are separated by a pipe\n\t * character.\n\t *\n\t * Example: (string) \"649de012e6b262.09774912|1688068114\"\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t *\n\t * @return string\n\t *\/\n\tprivate function new_lock_value( $lock_type ) {\n\t\treturn uniqid( '', true ) . '|' . ( time() + $this->get_duration( $lock_type ) );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_WPCommentCleaner.php","ext":"php","size":4529,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_WPCommentCleaner\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_WPCommentCleaner {\n\n\t\/**\n\t * Post migration hook used to cleanup the WP comment table.\n\t *\n\t * @var string\n\t *\/\n\tprotected static $cleanup_hook = 'action_scheduler\/cleanup_wp_comment_logs';\n\n\t\/**\n\t * An instance of the ActionScheduler_wpCommentLogger class to interact with the comments table.\n\t *\n\t * This instance should only be used as an interface. It should not be initialized.\n\t *\n\t * @var ActionScheduler_wpCommentLogger\n\t *\/\n\tprotected static $wp_comment_logger = null;\n\n\t\/**\n\t * The key used to store the cached value of whether there are logs in the WP comment table.\n\t *\n\t * @var string\n\t *\/\n\tprotected static $has_logs_option_key = 'as_has_wp_comment_logs';\n\n\t\/**\n\t * Initialize the class and attach callbacks.\n\t *\/\n\tpublic static function init() {\n\t\tif ( empty( self::$wp_comment_logger ) ) {\n\t\t\tself::$wp_comment_logger = new ActionScheduler_wpCommentLogger();\n\t\t}\n\n\t\tadd_action( self::$cleanup_hook, array( __CLASS__, 'delete_all_action_comments' ) );\n\n\t\t\/\/ While there are orphaned logs left in the comments table, we need to attach the callbacks which filter comment counts.\n\t\tadd_action( 'pre_get_comments', array( self::$wp_comment_logger, 'filter_comment_queries' ), 10, 1 );\n\t\tadd_action( 'wp_count_comments', array( self::$wp_comment_logger, 'filter_comment_count' ), 20, 2 ); \/\/ run after WC_Comments::wp_count_comments() to make sure we exclude order notes and action logs.\n\t\tadd_action( 'comment_feed_where', array( self::$wp_comment_logger, 'filter_comment_feed' ), 10, 2 );\n\n\t\t\/\/ Action Scheduler may be displayed as a Tools screen or WooCommerce > Status administration screen.\n\t\tadd_action( 'load-tools_page_action-scheduler', array( __CLASS__, 'register_admin_notice' ) );\n\t\tadd_action( 'load-woocommerce_page_wc-status', array( __CLASS__, 'register_admin_notice' ) );\n\t}\n\n\t\/**\n\t * Determines if there are log entries in the wp comments table.\n\t *\n\t * Uses the flag set on migration completion set by @see self::maybe_schedule_cleanup().\n\t *\n\t * @return boolean Whether there are scheduled action comments in the comments table.\n\t *\/\n\tpublic static function has_logs() {\n\t\treturn 'yes' === get_option( self::$has_logs_option_key );\n\t}\n\n\t\/**\n\t * Schedules the WP Post comment table cleanup to run in 6 months if it's not already scheduled.\n\t * Attached to the migration complete hook 'action_scheduler\/migration_complete'.\n\t *\/\n\tpublic static function maybe_schedule_cleanup() {\n\t\t$has_logs = 'no';\n\n\t\t$args = array(\n\t\t\t'type'   => ActionScheduler_wpCommentLogger::TYPE,\n\t\t\t'number' => 1,\n\t\t\t'fields' => 'ids',\n\t\t);\n\n\t\tif ( (bool) get_comments( $args ) ) {\n\t\t\t$has_logs = 'yes';\n\n\t\t\tif ( ! as_next_scheduled_action( self::$cleanup_hook ) ) {\n\t\t\t\tas_schedule_single_action( gmdate( 'U' ) + ( 6 * MONTH_IN_SECONDS ), self::$cleanup_hook );\n\t\t\t}\n\t\t}\n\n\t\tupdate_option( self::$has_logs_option_key, $has_logs, true );\n\t}\n\n\t\/**\n\t * Delete all action comments from the WP Comments table.\n\t *\/\n\tpublic static function delete_all_action_comments() {\n\t\tglobal $wpdb;\n\n\t\t$wpdb->delete(\n\t\t\t$wpdb->comments,\n\t\t\tarray(\n\t\t\t\t'comment_type'  => ActionScheduler_wpCommentLogger::TYPE,\n\t\t\t\t'comment_agent' => ActionScheduler_wpCommentLogger::AGENT,\n\t\t\t)\n\t\t);\n\n\t\tupdate_option( self::$has_logs_option_key, 'no', true );\n\t}\n\n\t\/**\n\t * Registers admin notices about the orphaned action logs.\n\t *\/\n\tpublic static function register_admin_notice() {\n\t\tadd_action( 'admin_notices', array( __CLASS__, 'print_admin_notice' ) );\n\t}\n\n\t\/**\n\t * Prints details about the orphaned action logs and includes information on where to learn more.\n\t *\/\n\tpublic static function print_admin_notice() {\n\t\t$next_cleanup_message        = '';\n\t\t$next_scheduled_cleanup_hook = as_next_scheduled_action( self::$cleanup_hook );\n\n\t\tif ( $next_scheduled_cleanup_hook ) {\n\t\t\t\/* translators: %s: date interval *\/\n\t\t\t$next_cleanup_message = sprintf( __( 'This data will be deleted in %s.', 'action-scheduler' ), human_time_diff( gmdate( 'U' ), $next_scheduled_cleanup_hook ) );\n\t\t}\n\n\t\t$notice = sprintf(\n\t\t\t\/* translators: 1: next cleanup message 2: github issue URL *\/\n\t\t\t__( 'Action Scheduler has migrated data to custom tables; however, orphaned log entries exist in the WordPress Comments table. %1$s <a href=\"%2$s\">Learn more &raquo;<\/a>', 'action-scheduler' ),\n\t\t\t$next_cleanup_message,\n\t\t\t'https:\/\/github.com\/woocommerce\/action-scheduler\/issues\/368'\n\t\t);\n\n\t\techo '<div class=\"notice notice-warning\"><p>' . wp_kses_post( $notice ) . '<\/p><\/div>';\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/actions\/ActionScheduler_NullAction.php","ext":"php","size":601,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_NullAction\n *\/\nclass ActionScheduler_NullAction extends ActionScheduler_Action {\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string                        $hook Action hook.\n\t * @param mixed[]                       $args Action arguments.\n\t * @param null|ActionScheduler_Schedule $schedule Action schedule.\n\t *\/\n\tpublic function __construct( $hook = '', array $args = array(), ?ActionScheduler_Schedule $schedule = null ) {\n\t\t$this->set_schedule( new ActionScheduler_NullSchedule() );\n\t}\n\n\t\/**\n\t * Execute action.\n\t *\/\n\tpublic function execute() {\n\t\t\/\/ don't execute.\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/actions\/ActionScheduler_CanceledAction.php","ext":"php","size":883,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_CanceledAction\n *\n * Stored action which was canceled and therefore acts like a finished action but should always return a null schedule,\n * regardless of schedule passed to its constructor.\n *\/\nclass ActionScheduler_CanceledAction extends ActionScheduler_FinishedAction {\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string                        $hook Action's hook.\n\t * @param array                         $args Action's arguments.\n\t * @param null|ActionScheduler_Schedule $schedule Action's schedule.\n\t * @param string                        $group Action's group.\n\t *\/\n\tpublic function __construct( $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\tparent::__construct( $hook, $args, $schedule, $group );\n\t\tif ( is_null( $schedule ) ) {\n\t\t\t$this->set_schedule( new ActionScheduler_NullSchedule() );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/actions\/ActionScheduler_FinishedAction.php","ext":"php","size":296,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_FinishedAction\n *\/\nclass ActionScheduler_FinishedAction extends ActionScheduler_Action {\n\n\t\/**\n\t * Execute action.\n\t *\/\n\tpublic function execute() {\n\t\t\/\/ don't execute.\n\t}\n\n\t\/**\n\t * Get finished state.\n\t *\/\n\tpublic function is_finished() {\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/actions\/ActionScheduler_Action.php","ext":"php","size":3912,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Action\n *\/\nclass ActionScheduler_Action {\n\t\/**\n\t * Action's hook.\n\t *\n\t * @var string\n\t *\/\n\tprotected $hook = '';\n\n\t\/**\n\t * Action's args.\n\t *\n\t * @var array<string, mixed>\n\t *\/\n\tprotected $args = array();\n\n\t\/**\n\t * Action's schedule.\n\t *\n\t * @var ActionScheduler_Schedule\n\t *\/\n\tprotected $schedule = null;\n\n\t\/**\n\t * Action's group.\n\t *\n\t * @var string\n\t *\/\n\tprotected $group = '';\n\n\t\/**\n\t * Priorities are conceptually similar to those used for regular WordPress actions.\n\t * Like those, a lower priority takes precedence over a higher priority and the default\n\t * is 10.\n\t *\n\t * Unlike regular WordPress actions, the priority of a scheduled action is strictly an\n\t * integer and should be kept within the bounds 0-255 (anything outside the bounds will\n\t * be brought back into the acceptable range).\n\t *\n\t * @var int\n\t *\/\n\tprotected $priority = 10;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string                        $hook Action's hook.\n\t * @param mixed[]                       $args Action's arguments.\n\t * @param null|ActionScheduler_Schedule $schedule Action's schedule.\n\t * @param string                        $group Action's group.\n\t *\/\n\tpublic function __construct( $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\t$schedule = empty( $schedule ) ? new ActionScheduler_NullSchedule() : $schedule;\n\t\t$this->set_hook( $hook );\n\t\t$this->set_schedule( $schedule );\n\t\t$this->set_args( $args );\n\t\t$this->set_group( $group );\n\t}\n\n\t\/**\n\t * Executes the action.\n\t *\n\t * If no callbacks are registered, an exception will be thrown and the action will not be\n\t * fired. This is useful to help detect cases where the code responsible for setting up\n\t * a scheduled action no longer exists.\n\t *\n\t * @throws Exception If no callbacks are registered for this action.\n\t *\/\n\tpublic function execute() {\n\t\t$hook = $this->get_hook();\n\n\t\tif ( ! has_action( $hook ) ) {\n\t\t\tthrow new Exception(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: 1: action hook. *\/\n\t\t\t\t\t__( 'Scheduled action for %1$s will not be executed as no callbacks are registered.', 'action-scheduler' ),\n\t\t\t\t\t$hook\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tdo_action_ref_array( $hook, array_values( $this->get_args() ) );\n\t}\n\n\t\/**\n\t * Set action's hook.\n\t *\n\t * @param string $hook Action's hook.\n\t *\/\n\tprotected function set_hook( $hook ) {\n\t\t$this->hook = $hook;\n\t}\n\n\t\/**\n\t * Get action's hook.\n\t *\/\n\tpublic function get_hook() {\n\t\treturn $this->hook;\n\t}\n\n\t\/**\n\t * Set action's schedule.\n\t *\n\t * @param ActionScheduler_Schedule $schedule Action's schedule.\n\t *\/\n\tprotected function set_schedule( ActionScheduler_Schedule $schedule ) {\n\t\t$this->schedule = $schedule;\n\t}\n\n\t\/**\n\t * Action's schedule.\n\t *\n\t * @return ActionScheduler_Schedule\n\t *\/\n\tpublic function get_schedule() {\n\t\treturn $this->schedule;\n\t}\n\n\t\/**\n\t * Set action's args.\n\t *\n\t * @param mixed[] $args Action's arguments.\n\t *\/\n\tprotected function set_args( array $args ) {\n\t\t$this->args = $args;\n\t}\n\n\t\/**\n\t * Get action's args.\n\t *\/\n\tpublic function get_args() {\n\t\treturn $this->args;\n\t}\n\n\t\/**\n\t * Section action's group.\n\t *\n\t * @param string $group Action's group.\n\t *\/\n\tprotected function set_group( $group ) {\n\t\t$this->group = $group;\n\t}\n\n\t\/**\n\t * Action's group.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_group() {\n\t\treturn $this->group;\n\t}\n\n\t\/**\n\t * Action has not finished.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_finished() {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Sets the priority of the action.\n\t *\n\t * @param int $priority Priority level (lower is higher priority). Should be in the range 0-255.\n\t *\n\t * @return void\n\t *\/\n\tpublic function set_priority( $priority ) {\n\t\tif ( $priority < 0 ) {\n\t\t\t$priority = 0;\n\t\t} elseif ( $priority > 255 ) {\n\t\t\t$priority = 255;\n\t\t}\n\n\t\t$this->priority = (int) $priority;\n\t}\n\n\t\/**\n\t * Gets the action priority.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_priority() {\n\t\treturn $this->priority;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_DBLogger.php","ext":"php","size":4496,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_DBLogger\n *\n * Action logs data table data store.\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_DBLogger extends ActionScheduler_Logger {\n\n\t\/**\n\t * Add a record to an action log.\n\t *\n\t * @param int           $action_id Action ID.\n\t * @param string        $message Message to be saved in the log entry.\n\t * @param DateTime|null $date Timestamp of the log entry.\n\t *\n\t * @return int     The log entry ID.\n\t *\/\n\tpublic function log( $action_id, $message, ?DateTime $date = null ) {\n\t\tif ( empty( $date ) ) {\n\t\t\t$date = as_get_datetime_object();\n\t\t} else {\n\t\t\t$date = clone $date;\n\t\t}\n\n\t\t$date_gmt = $date->format( 'Y-m-d H:i:s' );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\t$date_local = $date->format( 'Y-m-d H:i:s' );\n\n\t\t\/** @var \\wpdb $wpdb *\/ \/\/phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$wpdb->insert(\n\t\t\t$wpdb->actionscheduler_logs,\n\t\t\tarray(\n\t\t\t\t'action_id'      => $action_id,\n\t\t\t\t'message'        => $message,\n\t\t\t\t'log_date_gmt'   => $date_gmt,\n\t\t\t\t'log_date_local' => $date_local,\n\t\t\t),\n\t\t\tarray( '%d', '%s', '%s', '%s' )\n\t\t);\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t\/**\n\t * Retrieve an action log entry.\n\t *\n\t * @param int $entry_id Log entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t *\/\n\tpublic function get_entry( $entry_id ) {\n\t\t\/** @var \\wpdb $wpdb *\/ \/\/phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$entry = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_logs} WHERE log_id=%d\", $entry_id ) );\n\n\t\treturn $this->create_entry_from_db_record( $entry );\n\t}\n\n\t\/**\n\t * Create an action log entry from a database record.\n\t *\n\t * @param object $record Log entry database record object.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t *\/\n\tprivate function create_entry_from_db_record( $record ) {\n\t\tif ( empty( $record ) ) {\n\t\t\treturn new ActionScheduler_NullLogEntry();\n\t\t}\n\n\t\tif ( is_null( $record->log_date_gmt ) ) {\n\t\t\t$date = as_get_datetime_object( ActionScheduler_StoreSchema::DEFAULT_DATE );\n\t\t} else {\n\t\t\t$date = as_get_datetime_object( $record->log_date_gmt );\n\t\t}\n\n\t\treturn new ActionScheduler_LogEntry( $record->action_id, $record->message, $date );\n\t}\n\n\t\/**\n\t * Retrieve an action's log entries from the database.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t *\/\n\tpublic function get_logs( $action_id ) {\n\t\t\/** @var \\wpdb $wpdb *\/ \/\/phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\n\t\t$records = $wpdb->get_results( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_logs} WHERE action_id=%d\", $action_id ) );\n\n\t\treturn array_map( array( $this, 'create_entry_from_db_record' ), $records );\n\t}\n\n\t\/**\n\t * Initialize the data store.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\t$table_maker = new ActionScheduler_LoggerSchema();\n\t\t$table_maker->init();\n\t\t$table_maker->register_tables();\n\n\t\tparent::init();\n\n\t\tadd_action( 'action_scheduler_deleted_action', array( $this, 'clear_deleted_action_logs' ), 10, 1 );\n\t}\n\n\t\/**\n\t * Delete the action logs for an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function clear_deleted_action_logs( $action_id ) {\n\t\t\/** @var \\wpdb $wpdb *\/ \/\/phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$wpdb->delete( $wpdb->actionscheduler_logs, array( 'action_id' => $action_id ), array( '%d' ) );\n\t}\n\n\t\/**\n\t * Bulk add cancel action log entries.\n\t *\n\t * @param array $action_ids List of action ID.\n\t *\/\n\tpublic function bulk_log_cancel_actions( $action_ids ) {\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/** @var \\wpdb $wpdb *\/ \/\/phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$date     = as_get_datetime_object();\n\t\t$date_gmt = $date->format( 'Y-m-d H:i:s' );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\t$date_local = $date->format( 'Y-m-d H:i:s' );\n\t\t$message    = __( 'action canceled', 'action-scheduler' );\n\t\t$format     = '(%d, ' . $wpdb->prepare( '%s, %s, %s', $message, $date_gmt, $date_local ) . ')';\n\t\t$sql_query  = \"INSERT {$wpdb->actionscheduler_logs} (action_id, message, log_date_gmt, log_date_local) VALUES \";\n\t\t$value_rows = array();\n\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$value_rows[] = $wpdb->prepare( $format, $action_id ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\t$sql_query .= implode( ',', $value_rows );\n\n\t\t$wpdb->query( $sql_query ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_wpPostStore.php","ext":"php","size":36619,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_wpPostStore\n *\/\nclass ActionScheduler_wpPostStore extends ActionScheduler_Store {\n\tconst POST_TYPE         = 'scheduled-action';\n\tconst GROUP_TAXONOMY    = 'action-group';\n\tconst SCHEDULE_META_KEY = '_action_manager_schedule';\n\tconst DEPENDENCIES_MET  = 'as-post-store-dependencies-met';\n\n\t\/**\n\t * Used to share information about the before_date property of claims internally.\n\t *\n\t * This is used in preference to passing the same information as a method param\n\t * for backwards-compatibility reasons.\n\t *\n\t * @var DateTime|null\n\t *\/\n\tprivate $claim_before_date = null;\n\n\t\/**\n\t * Local Timezone.\n\t *\n\t * @var DateTimeZone\n\t *\/\n\tprotected $local_timezone = null;\n\n\t\/**\n\t * Save action.\n\t *\n\t * @param ActionScheduler_Action $action Scheduled Action.\n\t * @param DateTime|null          $scheduled_date Scheduled Date.\n\t *\n\t * @throws RuntimeException Throws an exception if the action could not be saved.\n\t * @return int\n\t *\/\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\ttry {\n\t\t\t$this->validate_action( $action );\n\t\t\t$post_array = $this->create_post_array( $action, $scheduled_date );\n\t\t\t$post_id    = $this->save_post_array( $post_array );\n\t\t\t$this->save_post_schedule( $post_id, $action->get_schedule() );\n\t\t\t$this->save_action_group( $post_id, $action->get_group() );\n\t\t\tdo_action( 'action_scheduler_stored_action', $post_id );\n\t\t\treturn $post_id;\n\t\t} catch ( Exception $e ) {\n\t\t\t\/* translators: %s: action error message *\/\n\t\t\tthrow new RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n\n\t\/**\n\t * Create post array.\n\t *\n\t * @param ActionScheduler_Action $action Scheduled Action.\n\t * @param DateTime|null          $scheduled_date Scheduled Date.\n\t *\n\t * @return array Returns an array of post data.\n\t *\/\n\tprotected function create_post_array( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$post = array(\n\t\t\t'post_type'     => self::POST_TYPE,\n\t\t\t'post_title'    => $action->get_hook(),\n\t\t\t'post_content'  => wp_json_encode( $action->get_args() ),\n\t\t\t'post_status'   => ( $action->is_finished() ? 'publish' : 'pending' ),\n\t\t\t'post_date_gmt' => $this->get_scheduled_date_string( $action, $scheduled_date ),\n\t\t\t'post_date'     => $this->get_scheduled_date_string_local( $action, $scheduled_date ),\n\t\t);\n\t\treturn $post;\n\t}\n\n\t\/**\n\t * Save post array.\n\t *\n\t * @param array $post_array Post array.\n\t * @return int Returns the post ID.\n\t * @throws RuntimeException Throws an exception if the action could not be saved.\n\t *\/\n\tprotected function save_post_array( $post_array ) {\n\t\tadd_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10, 1 );\n\t\tadd_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10, 5 );\n\n\t\t$has_kses = false !== has_filter( 'content_save_pre', 'wp_filter_post_kses' );\n\n\t\tif ( $has_kses ) {\n\t\t\t\/\/ Prevent KSES from corrupting JSON in post_content.\n\t\t\tkses_remove_filters();\n\t\t}\n\n\t\t$post_id = wp_insert_post( $post_array );\n\n\t\tif ( $has_kses ) {\n\t\t\tkses_init_filters();\n\t\t}\n\n\t\tremove_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10 );\n\t\tremove_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10 );\n\n\t\tif ( is_wp_error( $post_id ) || empty( $post_id ) ) {\n\t\t\tthrow new RuntimeException( __( 'Unable to save action.', 'action-scheduler' ) );\n\t\t}\n\t\treturn $post_id;\n\t}\n\n\t\/**\n\t * Filter insert post data.\n\t *\n\t * @param array $postdata Post data to filter.\n\t *\n\t * @return array\n\t *\/\n\tpublic function filter_insert_post_data( $postdata ) {\n\t\tif ( self::POST_TYPE === $postdata['post_type'] ) {\n\t\t\t$postdata['post_author'] = 0;\n\t\t\tif ( 'future' === $postdata['post_status'] ) {\n\t\t\t\t$postdata['post_status'] = 'publish';\n\t\t\t}\n\t\t}\n\t\treturn $postdata;\n\t}\n\n\t\/**\n\t * Create a (probably unique) post name for scheduled actions in a more performant manner than wp_unique_post_slug().\n\t *\n\t * When an action's post status is transitioned to something other than 'draft', 'pending' or 'auto-draft, like 'publish'\n\t * or 'failed' or 'trash', WordPress will find a unique slug (stored in post_name column) using the wp_unique_post_slug()\n\t * function. This is done to ensure URL uniqueness. The approach taken by wp_unique_post_slug() is to iterate over existing\n\t * post_name values that match, and append a number 1 greater than the largest. This makes sense when manually creating a\n\t * post from the Edit Post screen. It becomes a bottleneck when automatically processing thousands of actions, with a\n\t * database containing thousands of related post_name values.\n\t *\n\t * WordPress 5.1 introduces the 'pre_wp_unique_post_slug' filter for plugins to address this issue.\n\t *\n\t * We can short-circuit WordPress's wp_unique_post_slug() approach using the 'pre_wp_unique_post_slug' filter. This\n\t * method is available to be used as a callback on that filter. It provides a more scalable approach to generating a\n\t * post_name\/slug that is probably unique. Because Action Scheduler never actually uses the post_name field, or an\n\t * action's slug, being probably unique is good enough.\n\t *\n\t * For more backstory on this issue, see:\n\t * - https:\/\/github.com\/woocommerce\/action-scheduler\/issues\/44 and\n\t * - https:\/\/core.trac.wordpress.org\/ticket\/21112\n\t *\n\t * @param string $override_slug Short-circuit return value.\n\t * @param string $slug          The desired slug (post_name).\n\t * @param int    $post_ID       Post ID.\n\t * @param string $post_status   The post status.\n\t * @param string $post_type     Post type.\n\t * @return string\n\t *\/\n\tpublic function set_unique_post_slug( $override_slug, $slug, $post_ID, $post_status, $post_type ) {\n\t\tif ( self::POST_TYPE === $post_type ) {\n\t\t\t$override_slug = uniqid( self::POST_TYPE . '-', true ) . '-' . wp_generate_password( 32, false );\n\t\t}\n\t\treturn $override_slug;\n\t}\n\n\t\/**\n\t * Save post schedule.\n\t *\n\t * @param int    $post_id  Post ID of the scheduled action.\n\t * @param string $schedule Schedule to save.\n\t *\n\t * @return void\n\t *\/\n\tprotected function save_post_schedule( $post_id, $schedule ) {\n\t\tupdate_post_meta( $post_id, self::SCHEDULE_META_KEY, $schedule );\n\t}\n\n\t\/**\n\t * Save action group.\n\t *\n\t * @param int    $post_id Post ID.\n\t * @param string $group   Group to save.\n\t * @return void\n\t *\/\n\tprotected function save_action_group( $post_id, $group ) {\n\t\tif ( empty( $group ) ) {\n\t\t\twp_set_object_terms( $post_id, array(), self::GROUP_TAXONOMY, false );\n\t\t} else {\n\t\t\twp_set_object_terms( $post_id, array( $group ), self::GROUP_TAXONOMY, false );\n\t\t}\n\t}\n\n\t\/**\n\t * Fetch actions.\n\t *\n\t * @param int $action_id Action ID.\n\t * @return object\n\t *\/\n\tpublic function fetch_action( $action_id ) {\n\t\t$post = $this->get_post( $action_id );\n\t\tif ( empty( $post ) || self::POST_TYPE !== $post->post_type ) {\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\ttry {\n\t\t\t$action = $this->make_action_from_post( $post );\n\t\t} catch ( ActionScheduler_InvalidActionException $exception ) {\n\t\t\tdo_action( 'action_scheduler_failed_fetch_action', $post->ID, $exception );\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\treturn $action;\n\t}\n\n\t\/**\n\t * Get post.\n\t *\n\t * @param string $action_id - Action ID.\n\t * @return WP_Post|null\n\t *\/\n\tprotected function get_post( $action_id ) {\n\t\tif ( empty( $action_id ) ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn get_post( $action_id );\n\t}\n\n\t\/**\n\t * Get NULL action.\n\t *\n\t * @return ActionScheduler_NullAction\n\t *\/\n\tprotected function get_null_action() {\n\t\treturn new ActionScheduler_NullAction();\n\t}\n\n\t\/**\n\t * Make action from post.\n\t *\n\t * @param WP_Post $post Post object.\n\t * @return WP_Post\n\t *\/\n\tprotected function make_action_from_post( $post ) {\n\t\t$hook = $post->post_title;\n\n\t\t$args = json_decode( $post->post_content, true );\n\t\t$this->validate_args( $args, $post->ID );\n\n\t\t$schedule = get_post_meta( $post->ID, self::SCHEDULE_META_KEY, true );\n\t\t$this->validate_schedule( $schedule, $post->ID );\n\n\t\t$group = wp_get_object_terms( $post->ID, self::GROUP_TAXONOMY, array( 'fields' => 'names' ) );\n\t\t$group = empty( $group ) ? '' : reset( $group );\n\n\t\treturn ActionScheduler::factory()->get_stored_action( $this->get_action_status_by_post_status( $post->post_status ), $hook, $args, $schedule, $group );\n\t}\n\n\t\/**\n\t * Get action status by post status.\n\t *\n\t * @param string $post_status Post status.\n\t *\n\t * @throws InvalidArgumentException Throw InvalidArgumentException if $post_status not in known status fields returned by $this->get_status_labels().\n\t * @return string\n\t *\/\n\tprotected function get_action_status_by_post_status( $post_status ) {\n\n\t\tswitch ( $post_status ) {\n\t\t\tcase 'publish':\n\t\t\t\t$action_status = self::STATUS_COMPLETE;\n\t\t\t\tbreak;\n\t\t\tcase 'trash':\n\t\t\t\t$action_status = self::STATUS_CANCELED;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ( ! array_key_exists( $post_status, $this->get_status_labels() ) ) {\n\t\t\t\t\tthrow new InvalidArgumentException( sprintf( 'Invalid post status: \"%s\". No matching action status available.', $post_status ) );\n\t\t\t\t}\n\t\t\t\t$action_status = $post_status;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $action_status;\n\t}\n\n\t\/**\n\t * Get post status by action status.\n\t *\n\t * @param string $action_status Action status.\n\t *\n\t * @throws InvalidArgumentException Throws InvalidArgumentException if $post_status not in known status fields returned by $this->get_status_labels().\n\t * @return string\n\t *\/\n\tprotected function get_post_status_by_action_status( $action_status ) {\n\n\t\tswitch ( $action_status ) {\n\t\t\tcase self::STATUS_COMPLETE:\n\t\t\t\t$post_status = 'publish';\n\t\t\t\tbreak;\n\t\t\tcase self::STATUS_CANCELED:\n\t\t\t\t$post_status = 'trash';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ( ! array_key_exists( $action_status, $this->get_status_labels() ) ) {\n\t\t\t\t\tthrow new InvalidArgumentException( sprintf( 'Invalid action status: \"%s\".', $action_status ) );\n\t\t\t\t}\n\t\t\t\t$post_status = $action_status;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $post_status;\n\t}\n\n\t\/**\n\t * Returns the SQL statement to query (or count) actions.\n\t *\n\t * @param array  $query            - Filtering options.\n\t * @param string $select_or_count  - Whether the SQL should select and return the IDs or just the row count.\n\t *\n\t * @throws InvalidArgumentException - Throw InvalidArgumentException if $select_or_count not count or select.\n\t * @return string SQL statement. The returned SQL is already properly escaped.\n\t *\/\n\tprotected function get_query_actions_sql( array $query, $select_or_count = 'select' ) {\n\n\t\tif ( ! in_array( $select_or_count, array( 'select', 'count' ), true ) ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid schedule. Cannot save action.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$query = wp_parse_args(\n\t\t\t$query,\n\t\t\tarray(\n\t\t\t\t'hook'             => '',\n\t\t\t\t'args'             => null,\n\t\t\t\t'date'             => null,\n\t\t\t\t'date_compare'     => '<=',\n\t\t\t\t'modified'         => null,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'group'            => '',\n\t\t\t\t'status'           => '',\n\t\t\t\t'claimed'          => null,\n\t\t\t\t'per_page'         => 5,\n\t\t\t\t'offset'           => 0,\n\t\t\t\t'orderby'          => 'date',\n\t\t\t\t'order'            => 'ASC',\n\t\t\t\t'search'           => '',\n\t\t\t)\n\t\t);\n\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\t\t$sql        = ( 'count' === $select_or_count ) ? 'SELECT count(p.ID)' : 'SELECT p.ID ';\n\t\t$sql       .= \"FROM {$wpdb->posts} p\";\n\t\t$sql_params = array();\n\t\tif ( empty( $query['group'] ) && 'group' === $query['orderby'] ) {\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->term_relationships} tr ON tr.object_id=p.ID\";\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->term_taxonomy} tt ON tr.term_taxonomy_id=tt.term_taxonomy_id\";\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->terms} t ON tt.term_id=t.term_id\";\n\t\t} elseif ( ! empty( $query['group'] ) ) {\n\t\t\t$sql         .= \" INNER JOIN {$wpdb->term_relationships} tr ON tr.object_id=p.ID\";\n\t\t\t$sql         .= \" INNER JOIN {$wpdb->term_taxonomy} tt ON tr.term_taxonomy_id=tt.term_taxonomy_id\";\n\t\t\t$sql         .= \" INNER JOIN {$wpdb->terms} t ON tt.term_id=t.term_id\";\n\t\t\t$sql         .= ' AND t.slug=%s';\n\t\t\t$sql_params[] = $query['group'];\n\t\t}\n\t\t$sql         .= ' WHERE post_type=%s';\n\t\t$sql_params[] = self::POST_TYPE;\n\t\tif ( $query['hook'] ) {\n\t\t\t$sql         .= ' AND p.post_title=%s';\n\t\t\t$sql_params[] = $query['hook'];\n\t\t}\n\t\tif ( ! is_null( $query['args'] ) ) {\n\t\t\t$sql         .= ' AND p.post_content=%s';\n\t\t\t$sql_params[] = wp_json_encode( $query['args'] );\n\t\t}\n\n\t\tif ( $query['status'] ) {\n\t\t\t$post_statuses = array_map( array( $this, 'get_post_status_by_action_status' ), (array) $query['status'] );\n\t\t\t$placeholders  = array_fill( 0, count( $post_statuses ), '%s' );\n\t\t\t$sql          .= ' AND p.post_status IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$sql_params    = array_merge( $sql_params, array_values( $post_statuses ) );\n\t\t}\n\n\t\tif ( $query['date'] instanceof DateTime ) {\n\t\t\t$date = clone $query['date'];\n\t\t\t$date->setTimezone( new DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $date->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['date_compare'] );\n\t\t\t$sql         .= \" AND p.post_date_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( $query['modified'] instanceof DateTime ) {\n\t\t\t$modified = clone $query['modified'];\n\t\t\t$modified->setTimezone( new DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $modified->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['modified_compare'] );\n\t\t\t$sql         .= \" AND p.post_modified_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( true === $query['claimed'] ) {\n\t\t\t$sql .= \" AND p.post_password != ''\";\n\t\t} elseif ( false === $query['claimed'] ) {\n\t\t\t$sql .= \" AND p.post_password = ''\";\n\t\t} elseif ( ! is_null( $query['claimed'] ) ) {\n\t\t\t$sql         .= ' AND p.post_password = %s';\n\t\t\t$sql_params[] = $query['claimed'];\n\t\t}\n\n\t\tif ( ! empty( $query['search'] ) ) {\n\t\t\t$sql .= ' AND (p.post_title LIKE %s OR p.post_content LIKE %s OR p.post_password LIKE %s)';\n\t\t\tfor ( $i = 0; $i < 3; $i++ ) {\n\t\t\t\t$sql_params[] = sprintf( '%%%s%%', $query['search'] );\n\t\t\t}\n\t\t}\n\n\t\tif ( 'select' === $select_or_count ) {\n\t\t\tswitch ( $query['orderby'] ) {\n\t\t\t\tcase 'hook':\n\t\t\t\t\t$orderby = 'p.post_title';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\t$orderby = 't.name';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'status':\n\t\t\t\t\t$orderby = 'p.post_status';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modified':\n\t\t\t\t\t$orderby = 'p.post_modified';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'claim_id':\n\t\t\t\t\t$orderby = 'p.post_password';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'schedule':\n\t\t\t\tcase 'date':\n\t\t\t\tdefault:\n\t\t\t\t\t$orderby = 'p.post_date_gmt';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( 'ASC' === strtoupper( $query['order'] ) ) {\n\t\t\t\t$order = 'ASC';\n\t\t\t} else {\n\t\t\t\t$order = 'DESC';\n\t\t\t}\n\t\t\t$sql .= \" ORDER BY $orderby $order\";\n\t\t\tif ( $query['per_page'] > 0 ) {\n\t\t\t\t$sql         .= ' LIMIT %d, %d';\n\t\t\t\t$sql_params[] = $query['offset'];\n\t\t\t\t$sql_params[] = $query['per_page'];\n\t\t\t}\n\t\t}\n\n\t\treturn $wpdb->prepare( $sql, $sql_params ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t\/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage.\n\t *\n\t * @param array  $query      Query filtering options.\n\t * @param string $query_type Whether to select or count the results. Defaults to select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t *\/\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t\/**\n\t\t * Global $wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$sql = $this->get_query_actions_sql( $query, $query_type );\n\n\t\treturn ( 'count' === $query_type ) ? $wpdb->get_var( $sql ) : $wpdb->get_col( $sql ); \/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery,WordPress.DB.DirectDatabaseQuery.NoCaching,WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t\/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array\n\t *\/\n\tpublic function action_counts() {\n\n\t\t$action_counts_by_status = array();\n\t\t$action_stati_and_labels = $this->get_status_labels();\n\t\t$posts_count_by_status   = (array) wp_count_posts( self::POST_TYPE, 'readable' );\n\n\t\tforeach ( $posts_count_by_status as $post_status_name => $count ) {\n\n\t\t\ttry {\n\t\t\t\t$action_status_name = $this->get_action_status_by_post_status( $post_status_name );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\t\/\/ Ignore any post statuses that aren't for actions.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( array_key_exists( $action_status_name, $action_stati_and_labels ) ) {\n\t\t\t\t$action_counts_by_status[ $action_status_name ] = $count;\n\t\t\t}\n\t\t}\n\n\t\treturn $action_counts_by_status;\n\t}\n\n\t\/**\n\t * Cancel action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws InvalidArgumentException If $action_id is not identified.\n\t *\/\n\tpublic function cancel_action( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to cancel this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_canceled_action', $action_id );\n\t\tadd_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10, 5 );\n\t\twp_trash_post( $action_id );\n\t\tremove_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10 );\n\t}\n\n\t\/**\n\t * Delete action.\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t * @throws InvalidArgumentException If action is not identified.\n\t *\/\n\tpublic function delete_action( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to delete this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_deleted_action', $action_id );\n\n\t\twp_delete_post( $action_id, true );\n\t}\n\n\t\/**\n\t * Get date for claim id.\n\t *\n\t * @param int $action_id Action ID.\n\t * @return ActionScheduler_DateTime The date the action is schedule to run, or the date that it ran.\n\t *\/\n\tpublic function get_date( $action_id ) {\n\t\t$next = $this->get_date_gmt( $action_id );\n\t\treturn ActionScheduler_TimezoneHelper::set_local_timezone( $next );\n\t}\n\n\t\/**\n\t * Get Date GMT.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws InvalidArgumentException If $action_id is not identified.\n\t * @return ActionScheduler_DateTime The date the action is schedule to run, or the date that it ran.\n\t *\/\n\tpublic function get_date_gmt( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to determine the date of this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tif ( 'publish' === $post->post_status ) {\n\t\t\treturn as_get_datetime_object( $post->post_modified_gmt );\n\t\t} else {\n\t\t\treturn as_get_datetime_object( $post->post_date_gmt );\n\t\t}\n\t}\n\n\t\/**\n\t * Stake claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions.\n\t * @param DateTime|null $before_date Jobs must be schedule before this date. Defaults to now.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t * @throws RuntimeException When there is an error staking a claim.\n\t * @throws InvalidArgumentException When the given group is not valid.\n\t *\/\n\tpublic function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$this->claim_before_date = $before_date;\n\t\t$claim_id                = $this->generate_claim_id();\n\t\t$this->claim_actions( $claim_id, $max_actions, $before_date, $hooks, $group );\n\t\t$action_ids              = $this->find_actions_by_claim_id( $claim_id );\n\t\t$this->claim_before_date = null;\n\n\t\treturn new ActionScheduler_ActionClaim( $claim_id, $action_ids );\n\t}\n\n\t\/**\n\t * Get claim count.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_claim_count() {\n\t\tglobal $wpdb;\n\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery,WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\treturn $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT COUNT(DISTINCT post_password) FROM {$wpdb->posts} WHERE post_password != '' AND post_type = %s AND post_status IN ('in-progress','pending')\",\n\t\t\t\tarray( self::POST_TYPE )\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Generate claim id.\n\t *\n\t * @return string\n\t *\/\n\tprotected function generate_claim_id() {\n\t\t$claim_id = md5( microtime( true ) . wp_rand( 0, 1000 ) );\n\t\treturn substr( $claim_id, 0, 20 ); \/\/ to fit in db field with 20 char limit.\n\t}\n\n\t\/**\n\t * Claim actions.\n\t *\n\t * @param string        $claim_id    Claim ID.\n\t * @param int           $limit       Limit.\n\t * @param DateTime|null $before_date Should use UTC timezone.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return int The number of actions that were claimed.\n\t * @throws RuntimeException  When there is a database error.\n\t *\/\n\tprotected function claim_actions( $claim_id, $limit, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t\/\/ Set up initial variables.\n\t\t$date      = null === $before_date ? as_get_datetime_object() : clone $before_date;\n\t\t$limit_ids = ! empty( $group );\n\t\t$ids       = $limit_ids ? $this->get_actions_by_group( $group, $limit, $date ) : array();\n\n\t\t\/\/ If limiting by IDs and no posts found, then return early since we have nothing to update.\n\t\tif ( $limit_ids && 0 === count( $ids ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t\/*\n\t\t * Build up custom query to update the affected posts. Parameters are built as a separate array\n\t\t * to make it easier to identify where they are in the query.\n\t\t *\n\t\t * We can't use $wpdb->update() here because of the \"ID IN ...\" clause.\n\t\t *\/\n\t\t$update = \"UPDATE {$wpdb->posts} SET post_password = %s, post_modified_gmt = %s, post_modified = %s\";\n\t\t$params = array(\n\t\t\t$claim_id,\n\t\t\tcurrent_time( 'mysql', true ),\n\t\t\tcurrent_time( 'mysql' ),\n\t\t);\n\n\t\t\/\/ Build initial WHERE clause.\n\t\t$where    = \"WHERE post_type = %s AND post_status = %s AND post_password = ''\";\n\t\t$params[] = self::POST_TYPE;\n\t\t$params[] = ActionScheduler_Store::STATUS_PENDING;\n\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$placeholders = array_fill( 0, count( $hooks ), '%s' );\n\t\t\t$where       .= ' AND post_title IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$params       = array_merge( $params, array_values( $hooks ) );\n\t\t}\n\n\t\t\/*\n\t\t * Add the IDs to the WHERE clause. IDs not escaped because they came directly from a prior DB query.\n\t\t *\n\t\t * If we're not limiting by IDs, then include the post_date_gmt clause.\n\t\t *\/\n\t\tif ( $limit_ids ) {\n\t\t\t$where .= ' AND ID IN (' . join( ',', $ids ) . ')';\n\t\t} else {\n\t\t\t$where   .= ' AND post_date_gmt <= %s';\n\t\t\t$params[] = $date->format( 'Y-m-d H:i:s' );\n\t\t}\n\n\t\t\/\/ Add the ORDER BY clause and,ms limit.\n\t\t$order    = 'ORDER BY menu_order ASC, post_date_gmt ASC, ID ASC LIMIT %d';\n\t\t$params[] = $limit;\n\n\t\t\/\/ Run the query and gather results.\n\t\t$rows_affected = $wpdb->query( $wpdb->prepare( \"{$update} {$where} {$order}\", $params ) ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare\n\n\t\tif ( false === $rows_affected ) {\n\t\t\tthrow new RuntimeException( __( 'Unable to claim actions. Database error.', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn (int) $rows_affected;\n\t}\n\n\t\/**\n\t * Get IDs of actions within a certain group and up to a certain date\/time.\n\t *\n\t * @param string   $group The group to use in finding actions.\n\t * @param int      $limit The number of actions to retrieve.\n\t * @param DateTime $date  DateTime object representing cutoff time for actions. Actions retrieved will be\n\t *                        up to and including this DateTime.\n\t *\n\t * @return array IDs of actions in the appropriate group and before the appropriate time.\n\t * @throws InvalidArgumentException When the group does not exist.\n\t *\/\n\tprotected function get_actions_by_group( $group, $limit, DateTime $date ) {\n\t\t\/\/ Ensure the group exists before continuing.\n\t\tif ( ! term_exists( $group, self::GROUP_TAXONOMY ) ) {\n\t\t\t\/* translators: %s is the group name *\/\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'The group \"%s\" does not exist.', 'action-scheduler' ), $group ) );\n\t\t}\n\n\t\t\/\/ Set up a query for post IDs to use later.\n\t\t$query      = new WP_Query();\n\t\t$query_args = array(\n\t\t\t'fields'           => 'ids',\n\t\t\t'post_type'        => self::POST_TYPE,\n\t\t\t'post_status'      => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t'has_password'     => false,\n\t\t\t'posts_per_page'   => $limit * 3,\n\t\t\t'suppress_filters' => true, \/\/ phpcs:ignore WordPressVIPMinimum.Performance.WPQueryParams.SuppressFilters_suppress_filters\n\t\t\t'no_found_rows'    => true,\n\t\t\t'orderby'          => array(\n\t\t\t\t'menu_order' => 'ASC',\n\t\t\t\t'date'       => 'ASC',\n\t\t\t\t'ID'         => 'ASC',\n\t\t\t),\n\t\t\t'date_query'       => array(\n\t\t\t\t'column'    => 'post_date_gmt',\n\t\t\t\t'before'    => $date->format( 'Y-m-d H:i' ),\n\t\t\t\t'inclusive' => true,\n\t\t\t),\n\t\t\t'tax_query'        => array( \/\/ phpcs:ignore WordPress.DB.SlowDBQuery\n\t\t\t\tarray(\n\t\t\t\t\t'taxonomy'         => self::GROUP_TAXONOMY,\n\t\t\t\t\t'field'            => 'slug',\n\t\t\t\t\t'terms'            => $group,\n\t\t\t\t\t'include_children' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\treturn $query->query( $query_args );\n\t}\n\n\t\/**\n\t * Find actions by claim ID.\n\t *\n\t * @param string $claim_id Claim ID.\n\t * @return array\n\t *\/\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$action_ids  = array();\n\t\t$before_date = isset( $this->claim_before_date ) ? $this->claim_before_date : as_get_datetime_object();\n\t\t$cut_off     = $before_date->format( 'Y-m-d H:i:s' );\n\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$results = $wpdb->get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT ID, post_date_gmt FROM {$wpdb->posts} WHERE post_type = %s AND post_password = %s\",\n\t\t\t\tarray(\n\t\t\t\t\tself::POST_TYPE,\n\t\t\t\t\t$claim_id,\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\t\/\/ Verify that the scheduled date for each action is within the expected bounds (in some unusual\n\t\t\/\/ cases, we cannot depend on MySQL to honor all of the WHERE conditions we specify).\n\t\tforeach ( $results as $claimed_action ) {\n\t\t\tif ( $claimed_action->post_date_gmt <= $cut_off ) {\n\t\t\t\t$action_ids[] = absint( $claimed_action->ID );\n\t\t\t}\n\t\t}\n\n\t\treturn $action_ids;\n\t}\n\n\t\/**\n\t * Release pending actions from a claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object to release.\n\t * @return void\n\t * @throws RuntimeException When the claim is not unlocked.\n\t *\/\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$claim_id = $claim->get_id();\n\t\tif ( trim( $claim_id ) === '' ) {\n\t\t\t\/\/ Verify that the claim_id is valid before attempting to release it.\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Only attempt to release pending actions to be claimed again. Running and complete actions are no longer relevant outside of admin\/analytics.\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$action_ids = $wpdb->get_col(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT ID, post_date_gmt FROM {$wpdb->posts} WHERE post_type = %s AND post_password = %s AND post_status = %s\",\n\t\t\t\tself::POST_TYPE,\n\t\t\t\t$claim_id,\n\t\t\t\tself::STATUS_PENDING\n\t\t\t)\n\t\t);\n\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn; \/\/ nothing to do.\n\t\t}\n\t\t$action_id_string = implode( ',', array_map( 'intval', $action_ids ) );\n\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$result = $wpdb->query(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"UPDATE {$wpdb->posts} SET post_password = '' WHERE ID IN ($action_id_string) AND post_password = %s\", \/\/phpcs:ignore\n\t\t\t\tarray(\n\t\t\t\t\t$claim->get_id(),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tif ( false === $result ) {\n\t\t\t\/* translators: %s: claim ID *\/\n\t\t\tthrow new RuntimeException( sprintf( __( 'Unable to unlock claim %s. Database error.', 'action-scheduler' ), $claim->get_id() ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Unclaim action.\n\t *\n\t * @param string $action_id Action ID.\n\t * @throws RuntimeException When unable to unlock claim on action ID.\n\t *\/\n\tpublic function unclaim_action( $action_id ) {\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t\/\/phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$result = $wpdb->query(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"UPDATE {$wpdb->posts} SET post_password = '' WHERE ID = %d AND post_type = %s\",\n\t\t\t\t$action_id,\n\t\t\t\tself::POST_TYPE\n\t\t\t)\n\t\t);\n\t\tif ( false === $result ) {\n\t\t\t\/* translators: %s: action ID *\/\n\t\t\tthrow new RuntimeException( sprintf( __( 'Unable to unlock claim on action %s. Database error.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Mark failure on action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws RuntimeException When unable to mark failure on action ID.\n\t *\/\n\tpublic function mark_failure( $action_id ) {\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$result = $wpdb->query(\n\t\t\t$wpdb->prepare( \"UPDATE {$wpdb->posts} SET post_status = %s WHERE ID = %d AND post_type = %s\", self::STATUS_FAILED, $action_id, self::POST_TYPE )\n\t\t);\n\t\tif ( false === $result ) {\n\t\t\t\/* translators: %s: action ID *\/\n\t\t\tthrow new RuntimeException( sprintf( __( 'Unable to mark failure on action %s. Database error.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Return an action's claim ID, as stored in the post password column\n\t *\n\t * @param int $action_id Action ID.\n\t * @return mixed\n\t *\/\n\tpublic function get_claim_id( $action_id ) {\n\t\treturn $this->get_post_column( $action_id, 'post_password' );\n\t}\n\n\t\/**\n\t * Return an action's status, as stored in the post status column\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return mixed\n\t * @throws InvalidArgumentException When the action ID is invalid.\n\t *\/\n\tpublic function get_status( $action_id ) {\n\t\t$status = $this->get_post_column( $action_id, 'post_status' );\n\n\t\tif ( null === $status ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid action ID. No status found.', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->get_action_status_by_post_status( $status );\n\t}\n\n\t\/**\n\t * Get post column\n\t *\n\t * @param string $action_id Action ID.\n\t * @param string $column_name Column Name.\n\t *\n\t * @return string|null\n\t *\/\n\tprivate function get_post_column( $action_id, $column_name ) {\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\treturn $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT {$column_name} FROM {$wpdb->posts} WHERE ID=%d AND post_type=%s\", \/\/ phpcs:ignore\n\t\t\t\t$action_id,\n\t\t\t\tself::POST_TYPE\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Log Execution.\n\t *\n\t * @throws Exception If the action status cannot be updated to self::STATUS_RUNNING ('in-progress').\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tpublic function log_execution( $action_id ) {\n\t\t\/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t\/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$status_updated = $wpdb->query(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"UPDATE {$wpdb->posts} SET menu_order = menu_order+1, post_status=%s, post_modified_gmt = %s, post_modified = %s WHERE ID = %d AND post_type = %s\",\n\t\t\t\tself::STATUS_RUNNING,\n\t\t\t\tcurrent_time( 'mysql', true ),\n\t\t\t\tcurrent_time( 'mysql' ),\n\t\t\t\t$action_id,\n\t\t\t\tself::POST_TYPE\n\t\t\t)\n\t\t);\n\n\t\tif ( ! $status_updated ) {\n\t\t\tthrow new Exception(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: 1: action ID. 2: status slug. *\/\n\t\t\t\t\t__( 'Unable to update the status of action %1$d to %2$s.', 'action-scheduler' ),\n\t\t\t\t\t$action_id,\n\t\t\t\t\tself::STATUS_RUNNING\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Record that an action was completed.\n\t *\n\t * @param string $action_id ID of the completed action.\n\t *\n\t * @throws InvalidArgumentException When the action ID is invalid.\n\t * @throws RuntimeException         When there was an error executing the action.\n\t *\/\n\tpublic function mark_complete( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to mark this action as having completed. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tadd_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10, 1 );\n\t\tadd_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10, 5 );\n\t\t$result = wp_update_post(\n\t\t\tarray(\n\t\t\t\t'ID'          => $action_id,\n\t\t\t\t'post_status' => 'publish',\n\t\t\t),\n\t\t\ttrue\n\t\t);\n\t\tremove_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10 );\n\t\tremove_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10 );\n\t\tif ( is_wp_error( $result ) ) {\n\t\t\tthrow new RuntimeException( $result->get_error_message() );\n\t\t}\n\n\t\t\/**\n\t\t * Fires after a scheduled action has been completed.\n\t\t *\n\t\t * @since 3.4.2\n\t\t *\n\t\t * @param int $action_id Action ID.\n\t\t *\/\n\t\tdo_action( 'action_scheduler_completed_action', $action_id );\n\t}\n\n\t\/**\n\t * Mark action as migrated when there is an error deleting the action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function mark_migrated( $action_id ) {\n\t\twp_update_post(\n\t\t\tarray(\n\t\t\t\t'ID'          => $action_id,\n\t\t\t\t'post_status' => 'migrated',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Determine whether the post store can be migrated.\n\t *\n\t * @param [type] $setting - Setting value.\n\t * @return bool\n\t *\/\n\tpublic function migration_dependencies_met( $setting ) {\n\t\tglobal $wpdb;\n\n\t\t$dependencies_met = get_transient( self::DEPENDENCIES_MET );\n\t\tif ( empty( $dependencies_met ) ) {\n\t\t\t$maximum_args_length = apply_filters( 'action_scheduler_maximum_args_length', 191 );\n\t\t\t$found_action        = $wpdb->get_var( \/\/ phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT ID FROM {$wpdb->posts} WHERE post_type = %s AND CHAR_LENGTH(post_content) > %d LIMIT 1\",\n\t\t\t\t\t$maximum_args_length,\n\t\t\t\t\tself::POST_TYPE\n\t\t\t\t)\n\t\t\t);\n\t\t\t$dependencies_met    = $found_action ? 'no' : 'yes';\n\t\t\tset_transient( self::DEPENDENCIES_MET, $dependencies_met, DAY_IN_SECONDS );\n\t\t}\n\n\t\treturn 'yes' === $dependencies_met ? $setting : false;\n\t}\n\n\t\/**\n\t * InnoDB indexes have a maximum size of 767 bytes by default, which is only 191 characters with utf8mb4.\n\t *\n\t * Previously, AS wasn't concerned about args length, as we used the (unindex) post_content column. However,\n\t * as we prepare to move to custom tables, and can use an indexed VARCHAR column instead, we want to warn\n\t * developers of this impending requirement.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t *\/\n\tprotected function validate_action( ActionScheduler_Action $action ) {\n\t\ttry {\n\t\t\tparent::validate_action( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\t\/* translators: %s is the error message *\/\n\t\t\t$message = sprintf( __( '%s Support for strings longer than this will be removed in a future version.', 'action-scheduler' ), $e->getMessage() );\n\t\t\t_doing_it_wrong( 'ActionScheduler_Action::$args', esc_html( $message ), '2.1.0' );\n\t\t}\n\t}\n\n\t\/**\n\t * (@codeCoverageIgnore)\n\t *\/\n\tpublic function init() {\n\t\tadd_filter( 'action_scheduler_migration_dependencies_met', array( $this, 'migration_dependencies_met' ) );\n\n\t\t$post_type_registrar = new ActionScheduler_wpPostStore_PostTypeRegistrar();\n\t\t$post_type_registrar->register();\n\n\t\t$post_status_registrar = new ActionScheduler_wpPostStore_PostStatusRegistrar();\n\t\t$post_status_registrar->register();\n\n\t\t$taxonomy_registrar = new ActionScheduler_wpPostStore_TaxonomyRegistrar();\n\t\t$taxonomy_registrar->register();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_wpPostStore_PostTypeRegistrar.php","ext":"php","size":1993,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_wpPostStore_PostTypeRegistrar\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_wpPostStore_PostTypeRegistrar {\n\t\/**\n\t * Registrar.\n\t *\/\n\tpublic function register() {\n\t\tregister_post_type( ActionScheduler_wpPostStore::POST_TYPE, $this->post_type_args() );\n\t}\n\n\t\/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t *\/\n\tprotected function post_type_args() {\n\t\t$args = array(\n\t\t\t'label'        => __( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t'description'  => __( 'Scheduled actions are hooks triggered on a certain date and time.', 'action-scheduler' ),\n\t\t\t'public'       => false,\n\t\t\t'map_meta_cap' => true,\n\t\t\t'hierarchical' => false,\n\t\t\t'supports'     => array( 'title', 'editor', 'comments' ),\n\t\t\t'rewrite'      => false,\n\t\t\t'query_var'    => false,\n\t\t\t'can_export'   => true,\n\t\t\t'ep_mask'      => EP_NONE,\n\t\t\t'labels'       => array(\n\t\t\t\t'name'               => __( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t\t'singular_name'      => __( 'Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'menu_name'          => _x( 'Scheduled Actions', 'Admin menu name', 'action-scheduler' ),\n\t\t\t\t'add_new'            => __( 'Add', 'action-scheduler' ),\n\t\t\t\t'add_new_item'       => __( 'Add New Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'edit'               => __( 'Edit', 'action-scheduler' ),\n\t\t\t\t'edit_item'          => __( 'Edit Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'new_item'           => __( 'New Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'view'               => __( 'View Action', 'action-scheduler' ),\n\t\t\t\t'view_item'          => __( 'View Action', 'action-scheduler' ),\n\t\t\t\t'search_items'       => __( 'Search Scheduled Actions', 'action-scheduler' ),\n\t\t\t\t'not_found'          => __( 'No actions found', 'action-scheduler' ),\n\t\t\t\t'not_found_in_trash' => __( 'No actions found in trash', 'action-scheduler' ),\n\t\t\t),\n\t\t);\n\n\t\t$args = apply_filters( 'action_scheduler_post_type_args', $args );\n\t\treturn $args;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_DBStore.php","ext":"php","size":41169,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_DBStore\n *\n * Action data table data store.\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_DBStore extends ActionScheduler_Store {\n\n\t\/**\n\t * Used to share information about the before_date property of claims internally.\n\t *\n\t * This is used in preference to passing the same information as a method param\n\t * for backwards-compatibility reasons.\n\t *\n\t * @var DateTime|null\n\t *\/\n\tprivate $claim_before_date = null;\n\n\t\/**\n\t * Maximum length of args.\n\t *\n\t * @var int\n\t *\/\n\tprotected static $max_args_length = 8000;\n\n\t\/**\n\t * Maximum length of index.\n\t *\n\t * @var int\n\t *\/\n\tprotected static $max_index_length = 191;\n\n\t\/**\n\t * List of claim filters.\n\t *\n\t * @var array\n\t *\/\n\tprotected $claim_filters = array(\n\t\t'group'          => '',\n\t\t'hooks'          => '',\n\t\t'exclude-groups' => '',\n\t);\n\n\t\/**\n\t * Initialize the data store\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\t$table_maker = new ActionScheduler_StoreSchema();\n\t\t$table_maker->init();\n\t\t$table_maker->register_tables();\n\t}\n\n\t\/**\n\t * Save an action, checks if this is a unique action before actually saving.\n\t *\n\t * @param ActionScheduler_Action $action         Action object.\n\t * @param DateTime|null          $scheduled_date Optional schedule date. Default null.\n\t *\n\t * @return int                  Action ID.\n\t * @throws RuntimeException     Throws exception when saving the action fails.\n\t *\/\n\tpublic function save_unique_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\treturn $this->save_action_to_db( $action, $scheduled_date, true );\n\t}\n\n\t\/**\n\t * Save an action. Can save duplicate action as well, prefer using `save_unique_action` instead.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t * @param DateTime|null          $scheduled_date Optional schedule date. Default null.\n\t *\n\t * @return int Action ID.\n\t * @throws RuntimeException     Throws exception when saving the action fails.\n\t *\/\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\treturn $this->save_action_to_db( $action, $scheduled_date, false );\n\t}\n\n\t\/**\n\t * Save an action.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t * @param ?DateTime              $date Optional schedule date. Default null.\n\t * @param bool                   $unique Whether the action should be unique.\n\t *\n\t * @return int Action ID.\n\t * @throws \\RuntimeException     Throws exception when saving the action fails.\n\t *\/\n\tprivate function save_action_to_db( ActionScheduler_Action $action, ?DateTime $date = null, $unique = false ) {\n\t\tglobal $wpdb;\n\n\t\ttry {\n\t\t\t$this->validate_action( $action );\n\n\t\t\t$data = array(\n\t\t\t\t'hook'                 => $action->get_hook(),\n\t\t\t\t'status'               => ( $action->is_finished() ? self::STATUS_COMPLETE : self::STATUS_PENDING ),\n\t\t\t\t'scheduled_date_gmt'   => $this->get_scheduled_date_string( $action, $date ),\n\t\t\t\t'scheduled_date_local' => $this->get_scheduled_date_string_local( $action, $date ),\n\t\t\t\t'schedule'             => serialize( $action->get_schedule() ), \/\/ phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.serialize_serialize\n\t\t\t\t'group_id'             => current( $this->get_group_ids( $action->get_group() ) ),\n\t\t\t\t'priority'             => $action->get_priority(),\n\t\t\t);\n\n\t\t\t$args = wp_json_encode( $action->get_args() );\n\t\t\tif ( strlen( $args ) <= static::$max_index_length ) {\n\t\t\t\t$data['args'] = $args;\n\t\t\t} else {\n\t\t\t\t$data['args']          = $this->hash_args( $args );\n\t\t\t\t$data['extended_args'] = $args;\n\t\t\t}\n\n\t\t\t$insert_sql = $this->build_insert_sql( $data, $unique );\n\n\t\t\t\/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared -- $insert_sql should be already prepared.\n\t\t\t$wpdb->query( $insert_sql );\n\t\t\t$action_id = $wpdb->insert_id;\n\n\t\t\tif ( is_wp_error( $action_id ) ) {\n\t\t\t\tthrow new \\RuntimeException( $action_id->get_error_message() );\n\t\t\t} elseif ( empty( $action_id ) ) {\n\t\t\t\tif ( $unique ) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tthrow new \\RuntimeException( $wpdb->last_error ? $wpdb->last_error : __( 'Database error.', 'action-scheduler' ) );\n\t\t\t}\n\n\t\t\tdo_action( 'action_scheduler_stored_action', $action_id );\n\n\t\t\treturn $action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\/* translators: %s: error message *\/\n\t\t\tthrow new \\RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n\n\t\/**\n\t * Helper function to build insert query.\n\t *\n\t * @param array $data Row data for action.\n\t * @param bool  $unique Whether the action should be unique.\n\t *\n\t * @return string Insert query.\n\t *\/\n\tprivate function build_insert_sql( array $data, $unique ) {\n\t\tglobal $wpdb;\n\n\t\t$columns      = array_keys( $data );\n\t\t$values       = array_values( $data );\n\t\t$placeholders = array_map( array( $this, 'get_placeholder_for_column' ), $columns );\n\n\t\t$table_name = ! empty( $wpdb->actionscheduler_actions ) ? $wpdb->actionscheduler_actions : $wpdb->prefix . 'actionscheduler_actions';\n\n\t\t$column_sql      = '`' . implode( '`, `', $columns ) . '`';\n\t\t$placeholder_sql = implode( ', ', $placeholders );\n\t\t$where_clause    = $this->build_where_clause_for_insert( $data, $table_name, $unique );\n\n\t\t\/\/ phpcs:disable WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare\t -- $column_sql and $where_clause are already prepared. $placeholder_sql is hardcoded.\n\t\t$insert_query = $wpdb->prepare(\n\t\t\t\"\nINSERT INTO $table_name ( $column_sql )\nSELECT $placeholder_sql FROM DUAL\nWHERE ( $where_clause ) IS NULL\",\n\t\t\t$values\n\t\t);\n\t\t\/\/ phpcs:enable\n\n\t\treturn $insert_query;\n\t}\n\n\t\/**\n\t * Helper method to build where clause for action insert statement.\n\t *\n\t * @param array  $data Row data for action.\n\t * @param string $table_name Action table name.\n\t * @param bool   $unique Where action should be unique.\n\t *\n\t * @return string Where clause to be used with insert.\n\t *\/\n\tprivate function build_where_clause_for_insert( $data, $table_name, $unique ) {\n\t\tglobal $wpdb;\n\n\t\tif ( ! $unique ) {\n\t\t\treturn 'SELECT NULL FROM DUAL';\n\t\t}\n\n\t\t$pending_statuses            = array(\n\t\t\tActionScheduler_Store::STATUS_PENDING,\n\t\t\tActionScheduler_Store::STATUS_RUNNING,\n\t\t);\n\t\t$pending_status_placeholders = implode( ', ', array_fill( 0, count( $pending_statuses ), '%s' ) );\n\n\t\t\/\/ phpcs:disable WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders.ReplacementsWrongNumber -- $pending_status_placeholders is hardcoded.\n\t\t$where_clause = $wpdb->prepare(\n\t\t\t\"\nSELECT action_id FROM $table_name\nWHERE status IN ( $pending_status_placeholders )\nAND hook = %s\nAND `group_id` = %d\n\",\n\t\t\tarray_merge(\n\t\t\t\t$pending_statuses,\n\t\t\t\tarray(\n\t\t\t\t\t$data['hook'],\n\t\t\t\t\t$data['group_id'],\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\t\/\/ phpcs:enable\n\n\t\treturn \"$where_clause\" . ' LIMIT 1';\n\t}\n\n\t\/**\n\t * Helper method to get $wpdb->prepare placeholder for a given column name.\n\t *\n\t * @param string $column_name Name of column in actions table.\n\t *\n\t * @return string Placeholder to use for given column.\n\t *\/\n\tprivate function get_placeholder_for_column( $column_name ) {\n\t\t$string_columns = array(\n\t\t\t'hook',\n\t\t\t'status',\n\t\t\t'scheduled_date_gmt',\n\t\t\t'scheduled_date_local',\n\t\t\t'args',\n\t\t\t'schedule',\n\t\t\t'last_attempt_gmt',\n\t\t\t'last_attempt_local',\n\t\t\t'extended_args',\n\t\t);\n\n\t\treturn in_array( $column_name, $string_columns, true ) ? '%s' : '%d';\n\t}\n\n\t\/**\n\t * Generate a hash from json_encoded $args using MD5 as this isn't for security.\n\t *\n\t * @param string $args JSON encoded action args.\n\t * @return string\n\t *\/\n\tprotected function hash_args( $args ) {\n\t\treturn md5( $args );\n\t}\n\n\t\/**\n\t * Get action args query param value from action args.\n\t *\n\t * @param array $args Action args.\n\t * @return string\n\t *\/\n\tprotected function get_args_for_query( $args ) {\n\t\t$encoded = wp_json_encode( $args );\n\t\tif ( strlen( $encoded ) <= static::$max_index_length ) {\n\t\t\treturn $encoded;\n\t\t}\n\t\treturn $this->hash_args( $encoded );\n\t}\n\t\/**\n\t * Get a group's ID based on its name\/slug.\n\t *\n\t * @param string|array $slugs                The string name of a group, or names for several groups.\n\t * @param bool         $create_if_not_exists Whether to create the group if it does not already exist. Default, true - create the group.\n\t *\n\t * @return array The group IDs, if they exist or were successfully created. May be empty.\n\t *\/\n\tprotected function get_group_ids( $slugs, $create_if_not_exists = true ) {\n\t\t$slugs     = (array) $slugs;\n\t\t$group_ids = array();\n\n\t\tif ( empty( $slugs ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\tforeach ( $slugs as $slug ) {\n\t\t\t$group_id = (int) $wpdb->get_var( $wpdb->prepare( \"SELECT group_id FROM {$wpdb->actionscheduler_groups} WHERE slug=%s\", $slug ) );\n\n\t\t\tif ( empty( $group_id ) && $create_if_not_exists ) {\n\t\t\t\t$group_id = $this->create_group( $slug );\n\t\t\t}\n\n\t\t\tif ( $group_id ) {\n\t\t\t\t$group_ids[] = $group_id;\n\t\t\t}\n\t\t}\n\n\t\treturn $group_ids;\n\t}\n\n\t\/**\n\t * Create an action group.\n\t *\n\t * @param string $slug Group slug.\n\t *\n\t * @return int Group ID.\n\t *\/\n\tprotected function create_group( $slug ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$wpdb->insert( $wpdb->actionscheduler_groups, array( 'slug' => $slug ) );\n\n\t\treturn (int) $wpdb->insert_id;\n\t}\n\n\t\/**\n\t * Retrieve an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return ActionScheduler_Action\n\t *\/\n\tpublic function fetch_action( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$data = $wpdb->get_row(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT a.*, g.slug AS `group` FROM {$wpdb->actionscheduler_actions} a LEFT JOIN {$wpdb->actionscheduler_groups} g ON a.group_id=g.group_id WHERE a.action_id=%d\",\n\t\t\t\t$action_id\n\t\t\t)\n\t\t);\n\n\t\tif ( empty( $data ) ) {\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\tif ( ! empty( $data->extended_args ) ) {\n\t\t\t$data->args = $data->extended_args;\n\t\t\tunset( $data->extended_args );\n\t\t}\n\n\t\t\/\/ Convert NULL dates to zero dates.\n\t\t$date_fields = array(\n\t\t\t'scheduled_date_gmt',\n\t\t\t'scheduled_date_local',\n\t\t\t'last_attempt_gmt',\n\t\t\t'last_attempt_gmt',\n\t\t);\n\t\tforeach ( $date_fields as $date_field ) {\n\t\t\tif ( is_null( $data->$date_field ) ) {\n\t\t\t\t$data->$date_field = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t$action = $this->make_action_from_db_record( $data );\n\t\t} catch ( ActionScheduler_InvalidActionException $exception ) {\n\t\t\tdo_action( 'action_scheduler_failed_fetch_action', $action_id, $exception );\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\treturn $action;\n\t}\n\n\t\/**\n\t * Create a null action.\n\t *\n\t * @return ActionScheduler_NullAction\n\t *\/\n\tprotected function get_null_action() {\n\t\treturn new ActionScheduler_NullAction();\n\t}\n\n\t\/**\n\t * Create an action from a database record.\n\t *\n\t * @param object $data Action database record.\n\t *\n\t * @return ActionScheduler_Action|ActionScheduler_CanceledAction|ActionScheduler_FinishedAction\n\t *\/\n\tprotected function make_action_from_db_record( $data ) {\n\n\t\t$hook     = $data->hook;\n\t\t$args     = json_decode( $data->args, true );\n\t\t$schedule = unserialize( $data->schedule ); \/\/ phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.serialize_unserialize\n\n\t\t$this->validate_args( $args, $data->action_id );\n\t\t$this->validate_schedule( $schedule, $data->action_id );\n\n\t\tif ( empty( $schedule ) ) {\n\t\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t}\n\t\t$group = $data->group ? $data->group : '';\n\n\t\treturn ActionScheduler::factory()->get_stored_action( $data->status, $data->hook, $args, $schedule, $group, $data->priority );\n\t}\n\n\t\/**\n\t * Returns the SQL statement to query (or count) actions.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @param array  $query Filtering options.\n\t * @param string $select_or_count  Whether the SQL should select and return the IDs or just the row count.\n\t *\n\t * @return string SQL statement already properly escaped.\n\t * @throws \\InvalidArgumentException If the query is invalid.\n\t * @throws \\RuntimeException When \"unknown partial args matching value\".\n\t *\/\n\tprotected function get_query_actions_sql( array $query, $select_or_count = 'select' ) {\n\n\t\tif ( ! in_array( $select_or_count, array( 'select', 'count' ), true ) ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid value for select or count parameter. Cannot query actions.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$query = wp_parse_args(\n\t\t\t$query,\n\t\t\tarray(\n\t\t\t\t'hook'                  => '',\n\t\t\t\t'args'                  => null,\n\t\t\t\t'partial_args_matching' => 'off', \/\/ can be 'like' or 'json'.\n\t\t\t\t'date'                  => null,\n\t\t\t\t'date_compare'          => '<=',\n\t\t\t\t'modified'              => null,\n\t\t\t\t'modified_compare'      => '<=',\n\t\t\t\t'group'                 => '',\n\t\t\t\t'status'                => '',\n\t\t\t\t'claimed'               => null,\n\t\t\t\t'per_page'              => 5,\n\t\t\t\t'offset'                => 0,\n\t\t\t\t'orderby'               => 'date',\n\t\t\t\t'order'                 => 'ASC',\n\t\t\t)\n\t\t);\n\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$db_server_info = is_callable( array( $wpdb, 'db_server_info' ) ) ? $wpdb->db_server_info() : $wpdb->db_version();\n\t\tif ( false !== strpos( $db_server_info, 'MariaDB' ) ) {\n\t\t\t$supports_json = version_compare(\n\t\t\t\tPHP_VERSION_ID >= 80016 ? $wpdb->db_version() : preg_replace( '\/[^0-9.].*\/', '', str_replace( '5.5.5-', '', $db_server_info ) ),\n\t\t\t\t'10.2',\n\t\t\t\t'>='\n\t\t\t);\n\t\t} else {\n\t\t\t$supports_json = version_compare( $wpdb->db_version(), '5.7', '>=' );\n\t\t}\n\n\t\t$sql        = ( 'count' === $select_or_count ) ? 'SELECT count(a.action_id)' : 'SELECT a.action_id';\n\t\t$sql       .= \" FROM {$wpdb->actionscheduler_actions} a\";\n\t\t$sql_params = array();\n\n\t\tif ( ! empty( $query['group'] ) || 'group' === $query['orderby'] ) {\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->actionscheduler_groups} g ON g.group_id=a.group_id\";\n\t\t}\n\n\t\t$sql .= ' WHERE 1=1';\n\n\t\tif ( ! empty( $query['group'] ) ) {\n\t\t\t$sql         .= ' AND g.slug=%s';\n\t\t\t$sql_params[] = $query['group'];\n\t\t}\n\n\t\tif ( ! empty( $query['hook'] ) ) {\n\t\t\t$sql         .= ' AND a.hook=%s';\n\t\t\t$sql_params[] = $query['hook'];\n\t\t}\n\n\t\tif ( ! is_null( $query['args'] ) ) {\n\t\t\tswitch ( $query['partial_args_matching'] ) {\n\t\t\t\tcase 'json':\n\t\t\t\t\tif ( ! $supports_json ) {\n\t\t\t\t\t\tthrow new \\RuntimeException( __( 'JSON partial matching not supported in your environment. Please check your MySQL\/MariaDB version.', 'action-scheduler' ) );\n\t\t\t\t\t}\n\t\t\t\t\t$supported_types = array(\n\t\t\t\t\t\t'integer' => '%d',\n\t\t\t\t\t\t'boolean' => '%s',\n\t\t\t\t\t\t'double'  => '%f',\n\t\t\t\t\t\t'string'  => '%s',\n\t\t\t\t\t);\n\t\t\t\t\tforeach ( $query['args'] as $key => $value ) {\n\t\t\t\t\t\t$value_type = gettype( $value );\n\t\t\t\t\t\tif ( 'boolean' === $value_type ) {\n\t\t\t\t\t\t\t$value = $value ? 'true' : 'false';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$placeholder = isset( $supported_types[ $value_type ] ) ? $supported_types[ $value_type ] : false;\n\t\t\t\t\t\tif ( ! $placeholder ) {\n\t\t\t\t\t\t\tthrow new \\RuntimeException(\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t\/* translators: %s: provided value type *\/\n\t\t\t\t\t\t\t\t\t__( 'The value type for the JSON partial matching is not supported. Must be either integer, boolean, double or string. %s type provided.', 'action-scheduler' ),\n\t\t\t\t\t\t\t\t\t$value_type\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$sql         .= ' AND JSON_EXTRACT(a.args, %s)=' . $placeholder;\n\t\t\t\t\t\t$sql_params[] = '$.' . $key;\n\t\t\t\t\t\t$sql_params[] = $value;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'like':\n\t\t\t\t\tforeach ( $query['args'] as $key => $value ) {\n\t\t\t\t\t\t$sql         .= ' AND a.args LIKE %s';\n\t\t\t\t\t\t$json_partial = $wpdb->esc_like( trim( wp_json_encode( array( $key => $value ) ), '{}' ) );\n\t\t\t\t\t\t$sql_params[] = \"%{$json_partial}%\";\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'off':\n\t\t\t\t\t$sql         .= ' AND a.args=%s';\n\t\t\t\t\t$sql_params[] = $this->get_args_for_query( $query['args'] );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new \\RuntimeException( __( 'Unknown partial args matching value.', 'action-scheduler' ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( $query['status'] ) {\n\t\t\t$statuses     = (array) $query['status'];\n\t\t\t$placeholders = array_fill( 0, count( $statuses ), '%s' );\n\t\t\t$sql         .= ' AND a.status IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$sql_params   = array_merge( $sql_params, array_values( $statuses ) );\n\t\t}\n\n\t\tif ( $query['date'] instanceof \\DateTime ) {\n\t\t\t$date = clone $query['date'];\n\t\t\t$date->setTimezone( new \\DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $date->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['date_compare'] );\n\t\t\t$sql         .= \" AND a.scheduled_date_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( $query['modified'] instanceof \\DateTime ) {\n\t\t\t$modified = clone $query['modified'];\n\t\t\t$modified->setTimezone( new \\DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $modified->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['modified_compare'] );\n\t\t\t$sql         .= \" AND a.last_attempt_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( true === $query['claimed'] ) {\n\t\t\t$sql .= ' AND a.claim_id != 0';\n\t\t} elseif ( false === $query['claimed'] ) {\n\t\t\t$sql .= ' AND a.claim_id = 0';\n\t\t} elseif ( ! is_null( $query['claimed'] ) ) {\n\t\t\t$sql         .= ' AND a.claim_id = %d';\n\t\t\t$sql_params[] = $query['claimed'];\n\t\t}\n\n\t\tif ( ! empty( $query['search'] ) ) {\n\t\t\t$sql .= ' AND (a.hook LIKE %s OR (a.extended_args IS NULL AND a.args LIKE %s) OR a.extended_args LIKE %s';\n\t\t\tfor ( $i = 0; $i < 3; $i++ ) {\n\t\t\t\t$sql_params[] = sprintf( '%%%s%%', $query['search'] );\n\t\t\t}\n\n\t\t\t$search_claim_id = (int) $query['search'];\n\t\t\tif ( $search_claim_id ) {\n\t\t\t\t$sql         .= ' OR a.claim_id = %d';\n\t\t\t\t$sql_params[] = $search_claim_id;\n\t\t\t}\n\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\tif ( 'select' === $select_or_count ) {\n\t\t\tif ( 'ASC' === strtoupper( $query['order'] ) ) {\n\t\t\t\t$order = 'ASC';\n\t\t\t} else {\n\t\t\t\t$order = 'DESC';\n\t\t\t}\n\t\t\tswitch ( $query['orderby'] ) {\n\t\t\t\tcase 'hook':\n\t\t\t\t\t$sql .= \" ORDER BY a.hook $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\t$sql .= \" ORDER BY g.slug $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modified':\n\t\t\t\t\t$sql .= \" ORDER BY a.last_attempt_gmt $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'none':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'action_id':\n\t\t\t\t\t$sql .= \" ORDER BY a.action_id $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'date':\n\t\t\t\tdefault:\n\t\t\t\t\t$sql .= \" ORDER BY a.scheduled_date_gmt $order\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( $query['per_page'] > 0 ) {\n\t\t\t\t$sql         .= ' LIMIT %d, %d';\n\t\t\t\t$sql_params[] = $query['offset'];\n\t\t\t\t$sql_params[] = $query['per_page'];\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $sql_params ) ) {\n\t\t\t$sql = $wpdb->prepare( $sql, $sql_params ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\n\t\treturn $sql;\n\t}\n\n\t\/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage.\n\t *\n\t * @param array  $query      Query filtering options.\n\t * @param string $query_type Whether to select or count the results. Defaults to select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t *\/\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$sql = $this->get_query_actions_sql( $query, $query_type );\n\n\t\treturn ( 'count' === $query_type ) ? $wpdb->get_var( $sql ) : $wpdb->get_col( $sql ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.DirectDatabaseQuery.NoSql, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t}\n\n\t\/**\n\t * Get a count of all actions in the store, grouped by status.\n\t *\n\t * @return array Set of 'status' => int $count pairs for statuses with 1 or more actions of that status.\n\t *\/\n\tpublic function action_counts() {\n\t\tglobal $wpdb;\n\n\t\t$sql  = \"SELECT a.status, count(a.status) as 'count'\";\n\t\t$sql .= \" FROM {$wpdb->actionscheduler_actions} a\";\n\t\t$sql .= ' GROUP BY a.status';\n\n\t\t$actions_count_by_status = array();\n\t\t$action_stati_and_labels = $this->get_status_labels();\n\n\t\tforeach ( $wpdb->get_results( $sql ) as $action_data ) { \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\t\/\/ Ignore any actions with invalid status.\n\t\t\tif ( array_key_exists( $action_data->status, $action_stati_and_labels ) ) {\n\t\t\t\t$actions_count_by_status[ $action_data->status ] = $action_data->count;\n\t\t\t}\n\t\t}\n\n\t\treturn $actions_count_by_status;\n\t}\n\n\t\/**\n\t * Cancel an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws \\InvalidArgumentException If the action update failed.\n\t *\/\n\tpublic function cancel_action( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'status' => self::STATUS_CANCELED ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( false === $updated ) {\n\t\t\t\/* translators: %s: action ID *\/\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to cancel this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_canceled_action', $action_id );\n\t}\n\n\t\/**\n\t * Cancel pending actions by hook.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $hook Hook name.\n\t *\n\t * @return void\n\t *\/\n\tpublic function cancel_actions_by_hook( $hook ) {\n\t\t$this->bulk_cancel_actions( array( 'hook' => $hook ) );\n\t}\n\n\t\/**\n\t * Cancel pending actions by group.\n\t *\n\t * @param string $group Group slug.\n\t *\n\t * @return void\n\t *\/\n\tpublic function cancel_actions_by_group( $group ) {\n\t\t$this->bulk_cancel_actions( array( 'group' => $group ) );\n\t}\n\n\t\/**\n\t * Bulk cancel actions.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $query_args Query parameters.\n\t *\/\n\tprotected function bulk_cancel_actions( $query_args ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\tif ( ! is_array( $query_args ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Don't cancel actions that are already canceled.\n\t\tif ( isset( $query_args['status'] ) && self::STATUS_CANCELED === $query_args['status'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_ids = true;\n\t\t$query_args = wp_parse_args(\n\t\t\t$query_args,\n\t\t\tarray(\n\t\t\t\t'per_page' => 1000,\n\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t'orderby'  => 'none',\n\t\t\t)\n\t\t);\n\n\t\twhile ( $action_ids ) {\n\t\t\t$action_ids = $this->query_actions( $query_args );\n\t\t\tif ( empty( $action_ids ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$format     = array_fill( 0, count( $action_ids ), '%d' );\n\t\t\t$query_in   = '(' . implode( ',', $format ) . ')';\n\t\t\t$parameters = $action_ids;\n\t\t\tarray_unshift( $parameters, self::STATUS_CANCELED );\n\n\t\t\t$wpdb->query(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"UPDATE {$wpdb->actionscheduler_actions} SET status = %s WHERE action_id IN {$query_in}\", \/\/ phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t\t\t\t$parameters\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tdo_action( 'action_scheduler_bulk_cancel_actions', $action_ids );\n\t\t}\n\t}\n\n\t\/**\n\t * Delete an action.\n\t *\n\t * @param int $action_id Action ID.\n\t * @throws \\InvalidArgumentException If the action deletion failed.\n\t *\/\n\tpublic function delete_action( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$deleted = $wpdb->delete( $wpdb->actionscheduler_actions, array( 'action_id' => $action_id ), array( '%d' ) );\n\t\tif ( empty( $deleted ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to delete this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_deleted_action', $action_id );\n\t}\n\n\t\/**\n\t * Get the schedule date for an action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return \\DateTime The local date the action is scheduled to run, or the date that it ran.\n\t *\/\n\tpublic function get_date( $action_id ) {\n\t\t$date = $this->get_date_gmt( $action_id );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\treturn $date;\n\t}\n\n\t\/**\n\t * Get the GMT schedule date for an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws \\InvalidArgumentException If action cannot be identified.\n\t * @return \\DateTime The GMT date the action is scheduled to run, or the date that it ran.\n\t *\/\n\tprotected function get_date_gmt( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$record = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\", $action_id ) );\n\t\tif ( empty( $record ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to determine the date of this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tif ( self::STATUS_PENDING === $record->status ) {\n\t\t\treturn as_get_datetime_object( $record->scheduled_date_gmt );\n\t\t} else {\n\t\t\treturn as_get_datetime_object( $record->last_attempt_gmt );\n\t\t}\n\t}\n\n\t\/**\n\t * Stake a claim on actions.\n\t *\n\t * @param int           $max_actions Maximum number of action to include in claim.\n\t * @param DateTime|null $before_date Jobs must be schedule before this date. Defaults to now.\n\t * @param array         $hooks Hooks to filter for.\n\t * @param string        $group Group to filter for.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t *\/\n\tpublic function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$claim_id = $this->generate_claim_id();\n\n\t\t$this->claim_before_date = $before_date;\n\t\t$this->claim_actions( $claim_id, $max_actions, $before_date, $hooks, $group );\n\t\t$action_ids              = $this->find_actions_by_claim_id( $claim_id );\n\t\t$this->claim_before_date = null;\n\n\t\treturn new ActionScheduler_ActionClaim( $claim_id, $action_ids );\n\t}\n\n\t\/**\n\t * Generate a new action claim.\n\t *\n\t * @return int Claim ID.\n\t *\/\n\tprotected function generate_claim_id() {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$now = as_get_datetime_object();\n\t\t$wpdb->insert( $wpdb->actionscheduler_claims, array( 'date_created_gmt' => $now->format( 'Y-m-d H:i:s' ) ) );\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t\/**\n\t * Set a claim filter.\n\t *\n\t * @param string $filter_name Claim filter name.\n\t * @param mixed  $filter_values Values to filter.\n\t * @return void\n\t *\/\n\tpublic function set_claim_filter( $filter_name, $filter_values ) {\n\t\tif ( isset( $this->claim_filters[ $filter_name ] ) ) {\n\t\t\t$this->claim_filters[ $filter_name ] = $filter_values;\n\t\t}\n\t}\n\n\t\/**\n\t * Get the claim filter value.\n\t *\n\t * @param string $filter_name Claim filter name.\n\t * @return mixed\n\t *\/\n\tpublic function get_claim_filter( $filter_name ) {\n\t\tif ( isset( $this->claim_filters[ $filter_name ] ) ) {\n\t\t\treturn $this->claim_filters[ $filter_name ];\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Mark actions claimed.\n\t *\n\t * @param string        $claim_id Claim Id.\n\t * @param int           $limit Number of action to include in claim.\n\t * @param DateTime|null $before_date Should use UTC timezone.\n\t * @param array         $hooks Hooks to filter for.\n\t * @param string        $group Group to filter for.\n\t *\n\t * @return int The number of actions that were claimed.\n\t * @throws \\InvalidArgumentException Throws InvalidArgumentException if group doesn't exist.\n\t * @throws \\RuntimeException Throws RuntimeException if unable to claim action.\n\t *\/\n\tprotected function claim_actions( $claim_id, $limit, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\t\t$now  = as_get_datetime_object();\n\t\t$date = is_null( $before_date ) ? $now : clone $before_date;\n\n\t\t\/\/ Set claim filters.\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$this->set_claim_filter( 'hooks', $hooks );\n\t\t} else {\n\t\t\t$hooks = $this->get_claim_filter( 'hooks' );\n\t\t}\n\t\tif ( ! empty( $group ) ) {\n\t\t\t$this->set_claim_filter( 'group', $group );\n\t\t} else {\n\t\t\t$group = $this->get_claim_filter( 'group' );\n\t\t}\n\n\t\t$where        = 'WHERE claim_id = 0 AND scheduled_date_gmt <= %s AND status=%s';\n\t\t$where_params = array(\n\t\t\t$date->format( 'Y-m-d H:i:s' ),\n\t\t\tself::STATUS_PENDING,\n\t\t);\n\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$placeholders = array_fill( 0, count( $hooks ), '%s' );\n\t\t\t$where        .= ' AND hook IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$where_params = array_merge( $where_params, array_values( $hooks ) );\n\t\t}\n\n\t\t$group_operator = 'IN';\n\t\tif ( empty( $group ) ) {\n\t\t\t$group          = $this->get_claim_filter( 'exclude-groups' );\n\t\t\t$group_operator = 'NOT IN';\n\t\t}\n\n\t\tif ( ! empty( $group ) ) {\n\t\t\t$group_ids = $this->get_group_ids( $group, false );\n\n\t\t\t\/\/ throw exception if no matching group(s) found, this matches ActionScheduler_wpPostStore's behaviour.\n\t\t\tif ( empty( $group_ids ) ) {\n\t\t\t\tthrow new InvalidArgumentException(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\/* translators: %s: group name(s) *\/\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'The group \"%s\" does not exist.',\n\t\t\t\t\t\t\t'The groups \"%s\" do not exist.',\n\t\t\t\t\t\t\tis_array( $group ) ? count( $group ) : 1,\n\t\t\t\t\t\t\t'action-scheduler'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$group\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$id_list = implode( ',', array_map( 'intval', $group_ids ) );\n\t\t\t$where  .= \" AND group_id {$group_operator} ( $id_list )\";\n\t\t}\n\n\t\t\/**\n\t\t * Sets the order-by clause used in the action claim query.\n\t\t *\n\t\t * @param string $order_by_sql\n\t\t * @param string $claim_id Claim Id.\n\t\t * @param array  $hooks    Hooks to filter for.\n\t\t *\n\t\t * @since 3.8.3 Made $claim_id and $hooks available.\n\t\t * @since 3.4.0\n\t\t *\/\n\t\t$order       = apply_filters( 'action_scheduler_claim_actions_order_by', 'ORDER BY priority ASC, attempts ASC, scheduled_date_gmt ASC, action_id ASC', $claim_id, $hooks );\n\t\t$skip_locked = $this->db_supports_skip_locked() ? ' SKIP LOCKED' : '';\n\n\t\t\/\/ Selecting the action_ids that we plan to claim, while skipping any locked rows to avoid deadlocking.\n\t\t$select_sql = $wpdb->prepare( \"SELECT action_id from {$wpdb->actionscheduler_actions} {$where} {$order} LIMIT %d FOR UPDATE{$skip_locked}\", array_merge( $where_params, array( $limit ) ) );\n\n\t\t\/\/ Now place it into an UPDATE statement by joining the result sets, allowing for the SKIP LOCKED behavior to take effect.\n\t\t$update_sql    = \"UPDATE {$wpdb->actionscheduler_actions} t1 JOIN ( $select_sql ) t2 ON t1.action_id = t2.action_id SET claim_id=%d, last_attempt_gmt=%s, last_attempt_local=%s\";\n\t\t$update_params = array(\n\t\t\t$claim_id,\n\t\t\t$now->format( 'Y-m-d H:i:s' ),\n\t\t\tcurrent_time( 'mysql' ),\n\t\t);\n\n\t\t$rows_affected = $wpdb->query( $wpdb->prepare( $update_sql, $update_params ) );\n\t\tif ( false === $rows_affected ) {\n\t\t\t$error = empty( $wpdb->last_error )\n\t\t\t\t? _x( 'unknown', 'database error', 'action-scheduler' )\n\t\t\t\t: $wpdb->last_error;\n\t\t\tthrow new \\RuntimeException(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: %s database error. *\/\n\t\t\t\t\t__( 'Unable to claim actions. Database error: %s.', 'action-scheduler' ),\n\t\t\t\t\t$error\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn (int) $rows_affected;\n\t}\n\n\t\/**\n\t * Determines whether the database supports using SKIP LOCKED. This logic mimicks the $wpdb::has_cap() logic.\n\t *\n\t * SKIP_LOCKED support was added to MariaDB in 10.6.0 and to MySQL in 8.0.1\n\t *\n\t * @return bool\n\t *\/\n\tprivate function db_supports_skip_locked() {\n\t\tglobal $wpdb;\n\t\t$db_version     = $wpdb->db_version();\n\t\t$db_server_info = $wpdb->db_server_info();\n\t\t$is_mariadb     = ( false !== strpos( $db_server_info, 'MariaDB' ) );\n\n\t\tif ( $is_mariadb &&\n\t\t     '5.5.5' === $db_version &&\n\t\t     PHP_VERSION_ID < 80016 \/\/ PHP 8.0.15 or older.\n\t\t) {\n\t\t\t\/*\n\t\t\t * Account for MariaDB version being prefixed with '5.5.5-' on older PHP versions.\n\t\t\t *\/\n\t\t\t$db_server_info = preg_replace( '\/^5\\.5\\.5-(.*)\/', '$1', $db_server_info );\n\t\t\t$db_version     = preg_replace( '\/[^0-9.].*\/', '', $db_server_info );\n\t\t}\n\n\t\t$is_supported = ( $is_mariadb && version_compare( $db_version, '10.6.0', '>=' ) ) ||\n\t\t                ( ! $is_mariadb && version_compare( $db_version, '8.0.1', '>=' ) );\n\n\t\t\/**\n\t\t * Filter whether the database supports the SKIP LOCKED modifier for queries.\n\t\t *\n\t\t * @param bool $is_supported Whether SKIP LOCKED is supported.\n\t\t *\n\t\t * @since 3.9.3\n\t\t *\/\n\t\treturn apply_filters( 'action_scheduler_db_supports_skip_locked', $is_supported );\n\t}\n\n\t\/**\n\t * Get the number of active claims.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_claim_count() {\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SELECT COUNT(DISTINCT claim_id) FROM {$wpdb->actionscheduler_actions} WHERE claim_id != 0 AND status IN ( %s, %s)\";\n\t\t$sql = $wpdb->prepare( $sql, array( self::STATUS_PENDING, self::STATUS_RUNNING ) ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\treturn (int) $wpdb->get_var( $sql ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t\/**\n\t * Return an action's claim ID, as stored in the claim_id column.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return mixed\n\t *\/\n\tpublic function get_claim_id( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SELECT claim_id FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\";\n\t\t$sql = $wpdb->prepare( $sql, $action_id ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\treturn (int) $wpdb->get_var( $sql ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t\/**\n\t * Retrieve the action IDs of action in a claim.\n\t *\n\t * @param  int $claim_id Claim ID.\n\t * @return int[]\n\t *\/\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$action_ids  = array();\n\t\t$before_date = isset( $this->claim_before_date ) ? $this->claim_before_date : as_get_datetime_object();\n\t\t$cut_off     = $before_date->format( 'Y-m-d H:i:s' );\n\n\t\t$sql = $wpdb->prepare(\n\t\t\t\"SELECT action_id, scheduled_date_gmt FROM {$wpdb->actionscheduler_actions} WHERE claim_id = %d ORDER BY priority ASC, attempts ASC, scheduled_date_gmt ASC, action_id ASC\",\n\t\t\t$claim_id\n\t\t);\n\n\t\t\/\/ Verify that the scheduled date for each action is within the expected bounds (in some unusual\n\t\t\/\/ cases, we cannot depend on MySQL to honor all of the WHERE conditions we specify).\n\t\tforeach ( $wpdb->get_results( $sql ) as $claimed_action ) { \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\tif ( $claimed_action->scheduled_date_gmt <= $cut_off ) {\n\t\t\t\t$action_ids[] = absint( $claimed_action->action_id );\n\t\t\t}\n\t\t}\n\n\t\treturn $action_ids;\n\t}\n\n\t\/**\n\t * Release pending actions from a claim and delete the claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t * @throws \\RuntimeException When unable to release actions from claim.\n\t *\/\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\tif ( 0 === intval( $claim->get_id() ) ) {\n\t\t\t\/\/ Verify that the claim_id is valid before attempting to release it.\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Deadlock warning: This function modifies actions to release them from claims that have been processed. Earlier, we used to it in a atomic query, i.e. we would update all actions belonging to a particular claim_id with claim_id = 0.\n\t\t * While this was functionally correct, it would cause deadlock, since this update query will hold a lock on the claim_id_.. index on the action table.\n\t\t * This allowed the possibility of a race condition, where the claimer query is also running at the same time, then the claimer query will also try to acquire a lock on the claim_id_.. index, and in this case if claim release query has already progressed to the point of acquiring the lock, but have not updated yet, it would cause a deadlock.\n\t\t *\n\t\t * We resolve this by getting all the actions_id that we want to release claim from in a separate query, and then releasing the claim on each of them. This way, our lock is acquired on the action_id index instead of the claim_id index. Note that the lock on claim_id will still be acquired, but it will only when we actually make the update, rather than when we select the actions.\n\t\t *\n\t\t * We only release pending actions in order for them to be claimed by another process.\n\t\t *\/\n\t\t$action_ids = $wpdb->get_col( $wpdb->prepare( \"SELECT action_id FROM {$wpdb->actionscheduler_actions} WHERE claim_id = %d AND status = %s\", $claim->get_id(), self::STATUS_PENDING ) );\n\n\t\t$row_updates = 0;\n\t\tif ( count( $action_ids ) > 0 ) {\n\t\t\t$action_id_string = implode( ',', array_map( 'absint', $action_ids ) );\n\t\t\t$row_updates      = $wpdb->query( \"UPDATE {$wpdb->actionscheduler_actions} SET claim_id = 0 WHERE action_id IN ({$action_id_string})\" ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t}\n\n\t\t$wpdb->delete( $wpdb->actionscheduler_claims, array( 'claim_id' => $claim->get_id() ), array( '%d' ) );\n\n\t\tif ( $row_updates < count( $action_ids ) ) {\n\t\t\tthrow new RuntimeException(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/\/ translators: %d is an id.\n\t\t\t\t\t__( 'Unable to release actions from claim id %d.', 'action-scheduler' ),\n\t\t\t\t\t$claim->get_id()\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Remove the claim from an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t *\/\n\tpublic function unclaim_action( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'claim_id' => 0 ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t}\n\n\t\/**\n\t * Mark an action as failed.\n\t *\n\t * @param int $action_id Action ID.\n\t * @throws \\InvalidArgumentException Throw an exception if action was not updated.\n\t *\/\n\tpublic function mark_failure( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'status' => self::STATUS_FAILED ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to mark this action as having failed. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Add execution message to action log.\n\t *\n\t * @throws Exception If the action status cannot be updated to self::STATUS_RUNNING ('in-progress').\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t *\/\n\tpublic function log_execution( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$sql = \"UPDATE {$wpdb->actionscheduler_actions} SET attempts = attempts+1, status=%s, last_attempt_gmt = %s, last_attempt_local = %s WHERE action_id = %d\";\n\t\t$sql = $wpdb->prepare( $sql, self::STATUS_RUNNING, current_time( 'mysql', true ), current_time( 'mysql' ), $action_id ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\t\/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$status_updated = $wpdb->query( $sql );\n\n\t\tif ( ! $status_updated ) {\n\t\t\tthrow new Exception(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: 1: action ID. 2: status slug. *\/\n\t\t\t\t\t__( 'Unable to update the status of action %1$d to %2$s.', 'action-scheduler' ),\n\t\t\t\t\t$action_id,\n\t\t\t\t\tself::STATUS_RUNNING\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Mark an action as complete.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws \\InvalidArgumentException Throw an exception if action was not updated.\n\t *\/\n\tpublic function mark_complete( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray(\n\t\t\t\t'status'             => self::STATUS_COMPLETE,\n\t\t\t\t'last_attempt_gmt'   => current_time( 'mysql', true ),\n\t\t\t\t'last_attempt_local' => current_time( 'mysql' ),\n\t\t\t),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\t\/* translators: %s is the action ID *\/\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to mark this action as having completed. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\n\t\t\/**\n\t\t * Fires after a scheduled action has been completed.\n\t\t *\n\t\t * @since 3.4.2\n\t\t *\n\t\t * @param int $action_id Action ID.\n\t\t *\/\n\t\tdo_action( 'action_scheduler_completed_action', $action_id );\n\t}\n\n\t\/**\n\t * Get an action's status.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return string\n\t * @throws \\InvalidArgumentException Throw an exception if not status was found for action_id.\n\t * @throws \\RuntimeException Throw an exception if action status could not be retrieved.\n\t *\/\n\tpublic function get_status( $action_id ) {\n\t\t\/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t *\/\n\t\tglobal $wpdb;\n\n\t\t$sql    = \"SELECT status FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\";\n\t\t$sql    = $wpdb->prepare( $sql, $action_id ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$status = $wpdb->get_var( $sql ); \/\/ phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\tif ( is_null( $status ) ) {\n\t\t\tthrow new \\InvalidArgumentException( __( 'Invalid action ID. No status found.', 'action-scheduler' ) );\n\t\t} elseif ( empty( $status ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Unknown status found for action.', 'action-scheduler' ) );\n\t\t} else {\n\t\t\treturn $status;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_wpPostStore_PostStatusRegistrar.php","ext":"php","size":1858,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_wpPostStore_PostStatusRegistrar\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_wpPostStore_PostStatusRegistrar {\n\n\t\/**\n\t * Registrar.\n\t *\/\n\tpublic function register() {\n\t\tregister_post_status( ActionScheduler_Store::STATUS_RUNNING, array_merge( $this->post_status_args(), $this->post_status_running_labels() ) );\n\t\tregister_post_status( ActionScheduler_Store::STATUS_FAILED, array_merge( $this->post_status_args(), $this->post_status_failed_labels() ) );\n\t}\n\n\t\/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t *\/\n\tprotected function post_status_args() {\n\t\t$args = array(\n\t\t\t'public'                    => false,\n\t\t\t'exclude_from_search'       => false,\n\t\t\t'show_in_admin_all_list'    => true,\n\t\t\t'show_in_admin_status_list' => true,\n\t\t);\n\n\t\treturn apply_filters( 'action_scheduler_post_status_args', $args );\n\t}\n\n\t\/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t *\/\n\tprotected function post_status_failed_labels() {\n\t\t$labels = array(\n\t\t\t'label'       => _x( 'Failed', 'post', 'action-scheduler' ),\n\t\t\t\/* translators: %s: count *\/\n\t\t\t'label_count' => _n_noop( 'Failed <span class=\"count\">(%s)<\/span>', 'Failed <span class=\"count\">(%s)<\/span>', 'action-scheduler' ),\n\t\t);\n\n\t\treturn apply_filters( 'action_scheduler_post_status_failed_labels', $labels );\n\t}\n\n\t\/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t *\/\n\tprotected function post_status_running_labels() {\n\t\t$labels = array(\n\t\t\t'label'       => _x( 'In-Progress', 'post', 'action-scheduler' ),\n\t\t\t\/* translators: %s: count *\/\n\t\t\t'label_count' => _n_noop( 'In-Progress <span class=\"count\">(%s)<\/span>', 'In-Progress <span class=\"count\">(%s)<\/span>', 'action-scheduler' ),\n\t\t);\n\n\t\treturn apply_filters( 'action_scheduler_post_status_running_labels', $labels );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_wpCommentLogger.php","ext":"php","size":7707,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_wpCommentLogger\n *\/\nclass ActionScheduler_wpCommentLogger extends ActionScheduler_Logger {\n\tconst AGENT = 'ActionScheduler';\n\tconst TYPE  = 'action_log';\n\n\t\/**\n\t * Create log entry.\n\t *\n\t * @param string        $action_id Action ID.\n\t * @param string        $message   Action log's message.\n\t * @param DateTime|null $date      Action log's timestamp.\n\t *\n\t * @return string The log entry ID\n\t *\/\n\tpublic function log( $action_id, $message, ?DateTime $date = null ) {\n\t\tif ( empty( $date ) ) {\n\t\t\t$date = as_get_datetime_object();\n\t\t} else {\n\t\t\t$date = as_get_datetime_object( clone $date );\n\t\t}\n\t\t$comment_id = $this->create_wp_comment( $action_id, $message, $date );\n\t\treturn $comment_id;\n\t}\n\n\t\/**\n\t * Create comment.\n\t *\n\t * @param int      $action_id Action ID.\n\t * @param string   $message Action log's message.\n\t * @param DateTime $date Action log entry's timestamp.\n\t *\/\n\tprotected function create_wp_comment( $action_id, $message, DateTime $date ) {\n\n\t\t$comment_date_gmt = $date->format( 'Y-m-d H:i:s' );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\t$comment_data = array(\n\t\t\t'comment_post_ID'  => $action_id,\n\t\t\t'comment_date'     => $date->format( 'Y-m-d H:i:s' ),\n\t\t\t'comment_date_gmt' => $comment_date_gmt,\n\t\t\t'comment_author'   => self::AGENT,\n\t\t\t'comment_content'  => $message,\n\t\t\t'comment_agent'    => self::AGENT,\n\t\t\t'comment_type'     => self::TYPE,\n\t\t);\n\n\t\treturn wp_insert_comment( $comment_data );\n\t}\n\n\t\/**\n\t * Get single log entry for action.\n\t *\n\t * @param string $entry_id Entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t *\/\n\tpublic function get_entry( $entry_id ) {\n\t\t$comment = $this->get_comment( $entry_id );\n\n\t\tif ( empty( $comment ) || self::TYPE !== $comment->comment_type ) {\n\t\t\treturn new ActionScheduler_NullLogEntry();\n\t\t}\n\n\t\t$date = as_get_datetime_object( $comment->comment_date_gmt );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\treturn new ActionScheduler_LogEntry( $comment->comment_post_ID, $comment->comment_content, $date );\n\t}\n\n\t\/**\n\t * Get action's logs.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t *\/\n\tpublic function get_logs( $action_id ) {\n\t\t$status = 'all';\n\t\t$logs   = array();\n\n\t\tif ( get_post_status( $action_id ) === 'trash' ) {\n\t\t\t$status = 'post-trashed';\n\t\t}\n\n\t\t$comments = get_comments(\n\t\t\tarray(\n\t\t\t\t'post_id' => $action_id,\n\t\t\t\t'orderby' => 'comment_date_gmt',\n\t\t\t\t'order'   => 'ASC',\n\t\t\t\t'type'    => self::TYPE,\n\t\t\t\t'status'  => $status,\n\t\t\t)\n\t\t);\n\n\t\tforeach ( $comments as $c ) {\n\t\t\t$entry = $this->get_entry( $c );\n\n\t\t\tif ( ! empty( $entry ) ) {\n\t\t\t\t$logs[] = $entry;\n\t\t\t}\n\t\t}\n\n\t\treturn $logs;\n\t}\n\n\t\/**\n\t * Get comment.\n\t *\n\t * @param int $comment_id Comment ID.\n\t *\/\n\tprotected function get_comment( $comment_id ) {\n\t\treturn get_comment( $comment_id );\n\t}\n\n\t\/**\n\t * Filter comment queries.\n\t *\n\t * @param WP_Comment_Query $query Comment query object.\n\t *\/\n\tpublic function filter_comment_queries( $query ) {\n\t\tforeach ( array( 'ID', 'parent', 'post_author', 'post_name', 'post_parent', 'type', 'post_type', 'post_id', 'post_ID' ) as $key ) {\n\t\t\tif ( ! empty( $query->query_vars[ $key ] ) ) {\n\t\t\t\treturn; \/\/ don't slow down queries that wouldn't include action_log comments anyway.\n\t\t\t}\n\t\t}\n\t\t$query->query_vars['action_log_filter'] = true;\n\t\tadd_filter( 'comments_clauses', array( $this, 'filter_comment_query_clauses' ), 10, 2 );\n\t}\n\n\t\/**\n\t * Filter comment queries.\n\t *\n\t * @param array            $clauses Query's clauses.\n\t * @param WP_Comment_Query $query Query object.\n\t *\n\t * @return array\n\t *\/\n\tpublic function filter_comment_query_clauses( $clauses, $query ) {\n\t\tif ( ! empty( $query->query_vars['action_log_filter'] ) ) {\n\t\t\t$clauses['where'] .= $this->get_where_clause();\n\t\t}\n\t\treturn $clauses;\n\t}\n\n\t\/**\n\t * Make sure Action Scheduler logs are excluded from comment feeds, which use WP_Query, not\n\t * the WP_Comment_Query class handled by @see self::filter_comment_queries().\n\t *\n\t * @param string   $where Query's `where` clause.\n\t * @param WP_Query $query Query object.\n\t *\n\t * @return string\n\t *\/\n\tpublic function filter_comment_feed( $where, $query ) {\n\t\tif ( is_comment_feed() ) {\n\t\t\t$where .= $this->get_where_clause();\n\t\t}\n\t\treturn $where;\n\t}\n\n\t\/**\n\t * Return a SQL clause to exclude Action Scheduler comments.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_where_clause() {\n\t\tglobal $wpdb;\n\t\treturn sprintf( \" AND {$wpdb->comments}.comment_type != '%s'\", self::TYPE );\n\t}\n\n\t\/**\n\t * Remove action log entries from wp_count_comments()\n\t *\n\t * @param array $stats   Comment count.\n\t * @param int   $post_id Post ID.\n\t *\n\t * @return object\n\t *\/\n\tpublic function filter_comment_count( $stats, $post_id ) {\n\t\tglobal $wpdb;\n\n\t\tif ( 0 === $post_id ) {\n\t\t\t$stats = $this->get_comment_count();\n\t\t}\n\n\t\treturn $stats;\n\t}\n\n\t\/**\n\t * Retrieve the comment counts from our cache, or the database if the cached version isn't set.\n\t *\n\t * @return object\n\t *\/\n\tprotected function get_comment_count() {\n\t\tglobal $wpdb;\n\n\t\t$stats = get_transient( 'as_comment_count' );\n\n\t\tif ( ! $stats ) {\n\t\t\t$stats    = array();\n\t\t\t$count    = $wpdb->get_results( \"SELECT comment_approved, COUNT( * ) AS num_comments FROM {$wpdb->comments} WHERE comment_type NOT IN('order_note','action_log') GROUP BY comment_approved\", ARRAY_A );\n\t\t\t$total    = 0;\n\t\t\t$stats    = array();\n\t\t\t$approved = array(\n\t\t\t\t'0'            => 'moderated',\n\t\t\t\t'1'            => 'approved',\n\t\t\t\t'spam'         => 'spam',\n\t\t\t\t'trash'        => 'trash',\n\t\t\t\t'post-trashed' => 'post-trashed',\n\t\t\t);\n\n\t\t\tforeach ( (array) $count as $row ) {\n\t\t\t\t\/\/ Don't count post-trashed toward totals.\n\t\t\t\tif ( 'post-trashed' !== $row['comment_approved'] && 'trash' !== $row['comment_approved'] ) {\n\t\t\t\t\t$total += $row['num_comments'];\n\t\t\t\t}\n\t\t\t\tif ( isset( $approved[ $row['comment_approved'] ] ) ) {\n\t\t\t\t\t$stats[ $approved[ $row['comment_approved'] ] ] = $row['num_comments'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$stats['total_comments'] = $total;\n\t\t\t$stats['all']            = $total;\n\n\t\t\tforeach ( $approved as $key ) {\n\t\t\t\tif ( empty( $stats[ $key ] ) ) {\n\t\t\t\t\t$stats[ $key ] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$stats = (object) $stats;\n\t\t\tset_transient( 'as_comment_count', $stats );\n\t\t}\n\n\t\treturn $stats;\n\t}\n\n\t\/**\n\t * Delete comment count cache whenever there is new comment or the status of a comment changes. Cache\n\t * will be regenerated next time ActionScheduler_wpCommentLogger::filter_comment_count() is called.\n\t *\/\n\tpublic function delete_comment_count_cache() {\n\t\tdelete_transient( 'as_comment_count' );\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler_before_process_queue', array( $this, 'disable_comment_counting' ), 10, 0 );\n\t\tadd_action( 'action_scheduler_after_process_queue', array( $this, 'enable_comment_counting' ), 10, 0 );\n\n\t\tparent::init();\n\n\t\tadd_action( 'pre_get_comments', array( $this, 'filter_comment_queries' ), 10, 1 );\n\t\tadd_action( 'wp_count_comments', array( $this, 'filter_comment_count' ), 20, 2 ); \/\/ run after WC_Comments::wp_count_comments() to make sure we exclude order notes and action logs.\n\t\tadd_action( 'comment_feed_where', array( $this, 'filter_comment_feed' ), 10, 2 );\n\n\t\t\/\/ Delete comments count cache whenever there is a new comment or a comment status changes.\n\t\tadd_action( 'wp_insert_comment', array( $this, 'delete_comment_count_cache' ) );\n\t\tadd_action( 'wp_set_comment_status', array( $this, 'delete_comment_count_cache' ) );\n\t}\n\n\t\/**\n\t * Defer comment counting.\n\t *\/\n\tpublic function disable_comment_counting() {\n\t\twp_defer_comment_counting( true );\n\t}\n\n\t\/**\n\t * Enable comment counting.\n\t *\/\n\tpublic function enable_comment_counting() {\n\t\twp_defer_comment_counting( false );\n\t}\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_HybridStore.php","ext":"php","size":12678,"mtime":1756373567,"type":"text","content":"<?php\n\nuse ActionScheduler_Store as Store;\nuse Action_Scheduler\\Migration\\Runner;\nuse Action_Scheduler\\Migration\\Config;\nuse Action_Scheduler\\Migration\\Controller;\n\n\/**\n * Class ActionScheduler_HybridStore\n *\n * A wrapper around multiple stores that fetches data from both.\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_HybridStore extends Store {\n\tconst DEMARKATION_OPTION = 'action_scheduler_hybrid_store_demarkation';\n\n\t\/**\n\t * Primary store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $primary_store;\n\n\t\/**\n\t * Secondary store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate $secondary_store;\n\n\t\/**\n\t * Runner instance.\n\t *\n\t * @var Action_Scheduler\\Migration\\Runner\n\t *\/\n\tprivate $migration_runner;\n\n\t\/**\n\t * The dividing line between IDs of actions created\n\t * by the primary and secondary stores.\n\t *\n\t * @var int\n\t *\n\t * Methods that accept an action ID will compare the ID against\n\t * this to determine which store will contain that ID. In almost\n\t * all cases, the ID should come from the primary store, but if\n\t * client code is bypassing the API functions and fetching IDs\n\t * from elsewhere, then there is a chance that an unmigrated ID\n\t * might be requested.\n\t *\/\n\tprivate $demarkation_id = 0;\n\n\t\/**\n\t * ActionScheduler_HybridStore constructor.\n\t *\n\t * @param Config|null $config Migration config object.\n\t *\/\n\tpublic function __construct( ?Config $config = null ) {\n\t\t$this->demarkation_id = (int) get_option( self::DEMARKATION_OPTION, 0 );\n\t\tif ( empty( $config ) ) {\n\t\t\t$config = Controller::instance()->get_migration_config_object();\n\t\t}\n\t\t$this->primary_store    = $config->get_destination_store();\n\t\t$this->secondary_store  = $config->get_source_store();\n\t\t$this->migration_runner = new Runner( $config );\n\t}\n\n\t\/**\n\t * Initialize the table data store tables.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler\/created_table', array( $this, 'set_autoincrement' ), 10, 2 );\n\t\t$this->primary_store->init();\n\t\t$this->secondary_store->init();\n\t\tremove_action( 'action_scheduler\/created_table', array( $this, 'set_autoincrement' ), 10 );\n\t}\n\n\t\/**\n\t * When the actions table is created, set its autoincrement\n\t * value to be one higher than the posts table to ensure that\n\t * there are no ID collisions.\n\t *\n\t * @param string $table_name Table name.\n\t * @param string $table_suffix Suffix of table name.\n\t *\n\t * @return void\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function set_autoincrement( $table_name, $table_suffix ) {\n\t\tif ( ActionScheduler_StoreSchema::ACTIONS_TABLE === $table_suffix ) {\n\t\t\tif ( empty( $this->demarkation_id ) ) {\n\t\t\t\t$this->demarkation_id = $this->set_demarkation_id();\n\t\t\t}\n\n\t\t\t\/**\n\t\t\t * Global.\n\t\t\t *\n\t\t\t * @var \\wpdb $wpdb\n\t\t\t *\/\n\t\t\tglobal $wpdb;\n\n\t\t\t\/**\n\t\t\t * A default date of '0000-00-00 00:00:00' is invalid in MySQL 5.7 when configured with\n\t\t\t * sql_mode including both STRICT_TRANS_TABLES and NO_ZERO_DATE.\n\t\t\t *\/\n\t\t\t$default_date = new DateTime( 'tomorrow' );\n\t\t\t$null_action  = new ActionScheduler_NullAction();\n\t\t\t$date_gmt     = $this->get_scheduled_date_string( $null_action, $default_date );\n\t\t\t$date_local   = $this->get_scheduled_date_string_local( $null_action, $default_date );\n\n\t\t\t$row_count = $wpdb->insert(\n\t\t\t\t$wpdb->{ActionScheduler_StoreSchema::ACTIONS_TABLE},\n\t\t\t\tarray(\n\t\t\t\t\t'action_id'            => $this->demarkation_id,\n\t\t\t\t\t'hook'                 => '',\n\t\t\t\t\t'status'               => '',\n\t\t\t\t\t'scheduled_date_gmt'   => $date_gmt,\n\t\t\t\t\t'scheduled_date_local' => $date_local,\n\t\t\t\t\t'last_attempt_gmt'     => $date_gmt,\n\t\t\t\t\t'last_attempt_local'   => $date_local,\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ( $row_count > 0 ) {\n\t\t\t\t$wpdb->delete(\n\t\t\t\t\t$wpdb->{ActionScheduler_StoreSchema::ACTIONS_TABLE},\n\t\t\t\t\tarray( 'action_id' => $this->demarkation_id )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Store the demarkation id in WP options.\n\t *\n\t * @param int $id The ID to set as the demarkation point between the two stores\n\t *                Leave null to use the next ID from the WP posts table.\n\t *\n\t * @return int The new ID.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tprivate function set_demarkation_id( $id = null ) {\n\t\tif ( empty( $id ) ) {\n\t\t\t\/**\n\t\t\t * Global.\n\t\t\t *\n\t\t\t * @var \\wpdb $wpdb\n\t\t\t *\/\n\t\t\tglobal $wpdb;\n\n\t\t\t$id = (int) $wpdb->get_var( \"SELECT MAX(ID) FROM $wpdb->posts\" );\n\t\t\t$id++;\n\t\t}\n\t\tupdate_option( self::DEMARKATION_OPTION, $id );\n\n\t\treturn $id;\n\t}\n\n\t\/**\n\t * Find the first matching action from the secondary store.\n\t * If it exists, migrate it to the primary store immediately.\n\t * After it migrates, the secondary store will logically contain\n\t * the next matching action, so return the result thence.\n\t *\n\t * @param string $hook Action's hook.\n\t * @param array  $params Action's arguments.\n\t *\n\t * @return string\n\t *\/\n\tpublic function find_action( $hook, $params = array() ) {\n\t\t$found_unmigrated_action = $this->secondary_store->find_action( $hook, $params );\n\t\tif ( ! empty( $found_unmigrated_action ) ) {\n\t\t\t$this->migrate( array( $found_unmigrated_action ) );\n\t\t}\n\n\t\treturn $this->primary_store->find_action( $hook, $params );\n\t}\n\n\t\/**\n\t * Find actions matching the query in the secondary source first.\n\t * If any are found, migrate them immediately. Then the secondary\n\t * store will contain the canonical results.\n\t *\n\t * @param array  $query Query arguments.\n\t * @param string $query_type Whether to select or count the results. Default, select.\n\t *\n\t * @return int[]\n\t *\/\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t$found_unmigrated_actions = $this->secondary_store->query_actions( $query, 'select' );\n\t\tif ( ! empty( $found_unmigrated_actions ) ) {\n\t\t\t$this->migrate( $found_unmigrated_actions );\n\t\t}\n\n\t\treturn $this->primary_store->query_actions( $query, $query_type );\n\t}\n\n\t\/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array Set of 'status' => int $count pairs for statuses with 1 or more actions of that status.\n\t *\/\n\tpublic function action_counts() {\n\t\t$unmigrated_actions_count = $this->secondary_store->action_counts();\n\t\t$migrated_actions_count   = $this->primary_store->action_counts();\n\t\t$actions_count_by_status  = array();\n\n\t\tforeach ( $this->get_status_labels() as $status_key => $status_label ) {\n\n\t\t\t$count = 0;\n\n\t\t\tif ( isset( $unmigrated_actions_count[ $status_key ] ) ) {\n\t\t\t\t$count += $unmigrated_actions_count[ $status_key ];\n\t\t\t}\n\n\t\t\tif ( isset( $migrated_actions_count[ $status_key ] ) ) {\n\t\t\t\t$count += $migrated_actions_count[ $status_key ];\n\t\t\t}\n\n\t\t\t$actions_count_by_status[ $status_key ] = $count;\n\t\t}\n\n\t\t$actions_count_by_status = array_filter( $actions_count_by_status );\n\n\t\treturn $actions_count_by_status;\n\t}\n\n\t\/**\n\t * If any actions would have been claimed by the secondary store,\n\t * migrate them immediately, then ask the primary store for the\n\t * canonical claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions to claim.\n\t * @param null|DateTime $before_date Latest timestamp of actions to claim.\n\t * @param string[]      $hooks Hook of actions to claim.\n\t * @param string        $group Group of actions to claim.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t *\/\n\tpublic function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$claim = $this->secondary_store->stake_claim( $max_actions, $before_date, $hooks, $group );\n\n\t\t$claimed_actions = $claim->get_actions();\n\t\tif ( ! empty( $claimed_actions ) ) {\n\t\t\t$this->migrate( $claimed_actions );\n\t\t}\n\n\t\t$this->secondary_store->release_claim( $claim );\n\n\t\treturn $this->primary_store->stake_claim( $max_actions, $before_date, $hooks, $group );\n\t}\n\n\t\/**\n\t * Migrate a list of actions to the table data store.\n\t *\n\t * @param array $action_ids List of action IDs.\n\t *\/\n\tprivate function migrate( $action_ids ) {\n\t\t$this->migration_runner->migrate_actions( $action_ids );\n\t}\n\n\t\/**\n\t * Save an action to the primary store.\n\t *\n\t * @param ActionScheduler_Action $action Action object to be saved.\n\t * @param DateTime|null          $date Optional. Schedule date. Default null.\n\t *\n\t * @return int The action ID\n\t *\/\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $date = null ) {\n\t\treturn $this->primary_store->save_action( $action, $date );\n\t}\n\n\t\/**\n\t * Retrieve an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function fetch_action( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id, true );\n\t\tif ( $store ) {\n\t\t\treturn $store->fetch_action( $action_id );\n\t\t} else {\n\t\t\treturn new ActionScheduler_NullAction();\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function cancel_action( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->cancel_action( $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Delete an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function delete_action( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->delete_action( $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the schedule date an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function get_date( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\treturn $store->get_date( $action_id );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t\/**\n\t * Mark an existing action as failed whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function mark_failure( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->mark_failure( $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Log the execution of an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_execution( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->log_execution( $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Mark an existing action complete whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function mark_complete( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->mark_complete( $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Get an existing action status whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function get_status( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\treturn $store->get_status( $action_id );\n\t\t}\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Return which store an action is stored in.\n\t *\n\t * @param int  $action_id ID of the action.\n\t * @param bool $primary_first Optional flag indicating search the primary store first.\n\t * @return ActionScheduler_Store\n\t *\/\n\tprotected function get_store_from_action_id( $action_id, $primary_first = false ) {\n\t\tif ( $primary_first ) {\n\t\t\t$stores = array(\n\t\t\t\t$this->primary_store,\n\t\t\t\t$this->secondary_store,\n\t\t\t);\n\t\t} elseif ( $action_id < $this->demarkation_id ) {\n\t\t\t$stores = array(\n\t\t\t\t$this->secondary_store,\n\t\t\t\t$this->primary_store,\n\t\t\t);\n\t\t} else {\n\t\t\t$stores = array(\n\t\t\t\t$this->primary_store,\n\t\t\t);\n\t\t}\n\n\t\tforeach ( $stores as $store ) {\n\t\t\t$action = $store->fetch_action( $action_id );\n\t\t\tif ( ! is_a( $action, 'ActionScheduler_NullAction' ) ) {\n\t\t\t\treturn $store;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t\/**\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * All claim-related functions should operate solely\n\t * on the primary store.\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t *\/\n\n\t\/**\n\t * Get the claim count from the table data store.\n\t *\/\n\tpublic function get_claim_count() {\n\t\treturn $this->primary_store->get_claim_count();\n\t}\n\n\t\/**\n\t * Retrieve the claim ID for an action from the table data store.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function get_claim_id( $action_id ) {\n\t\treturn $this->primary_store->get_claim_id( $action_id );\n\t}\n\n\t\/**\n\t * Release a claim in the table data store on any pending actions.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t *\/\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t$this->primary_store->release_claim( $claim );\n\t}\n\n\t\/**\n\t * Release claims on an action in the table data store.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function unclaim_action( $action_id ) {\n\t\t$this->primary_store->unclaim_action( $action_id );\n\t}\n\n\t\/**\n\t * Retrieve a list of action IDs by claim.\n\t *\n\t * @param int $claim_id Claim ID.\n\t *\/\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\treturn $this->primary_store->find_actions_by_claim_id( $claim_id );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/data-stores\/ActionScheduler_wpPostStore_TaxonomyRegistrar.php","ext":"php","size":762,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_wpPostStore_TaxonomyRegistrar\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_wpPostStore_TaxonomyRegistrar {\n\n\t\/**\n\t * Registrar.\n\t *\/\n\tpublic function register() {\n\t\tregister_taxonomy( ActionScheduler_wpPostStore::GROUP_TAXONOMY, ActionScheduler_wpPostStore::POST_TYPE, $this->taxonomy_args() );\n\t}\n\n\t\/**\n\t * Get taxonomy arguments.\n\t *\/\n\tprotected function taxonomy_args() {\n\t\t$args = array(\n\t\t\t'label'             => __( 'Action Group', 'action-scheduler' ),\n\t\t\t'public'            => false,\n\t\t\t'hierarchical'      => false,\n\t\t\t'show_admin_column' => true,\n\t\t\t'query_var'         => false,\n\t\t\t'rewrite'           => false,\n\t\t);\n\n\t\t$args = apply_filters( 'action_scheduler_taxonomy_args', $args );\n\t\treturn $args;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_InvalidActionException.php","ext":"php","size":1487,"mtime":1756373567,"type":"text","content":"<?php\n\n\/**\n * InvalidAction Exception.\n *\n * Used for identifying actions that are invalid in some way.\n *\n * @package ActionScheduler\n *\/\nclass ActionScheduler_InvalidActionException extends \\InvalidArgumentException implements ActionScheduler_Exception {\n\n\t\/**\n\t * Create a new exception when the action's schedule cannot be fetched.\n\t *\n\t * @param string $action_id The action ID with bad args.\n\t * @param mixed  $schedule  Passed schedule.\n\t * @return static\n\t *\/\n\tpublic static function from_schedule( $action_id, $schedule ) {\n\t\t$message = sprintf(\n\t\t\t\/* translators: 1: action ID 2: schedule *\/\n\t\t\t__( 'Action [%1$s] has an invalid schedule: %2$s', 'action-scheduler' ),\n\t\t\t$action_id,\n\t\t\tvar_export( $schedule, true ) \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t);\n\n\t\treturn new static( $message );\n\t}\n\n\t\/**\n\t * Create a new exception when the action's args cannot be decoded to an array.\n\t *\n\t * @param string $action_id The action ID with bad args.\n\t * @param mixed  $args      Passed arguments.\n\t * @return static\n\t *\/\n\tpublic static function from_decoding_args( $action_id, $args = array() ) {\n\t\t$message = sprintf(\n\t\t\t\/* translators: 1: action ID 2: arguments *\/\n\t\t\t__( 'Action [%1$s] has invalid arguments. It cannot be JSON decoded to an array. $args = %2$s', 'action-scheduler' ),\n\t\t\t$action_id,\n\t\t\tvar_export( $args, true ) \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t);\n\n\t\treturn new static( $message );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/jetpack_autoload_psr4.php","ext":"php","size":904,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ This file `jetpack_autoload_psr4.php` was auto generated by automattic\/jetpack-autoloader.\n\n$vendorDir = dirname(__DIR__);\n$baseDir   = dirname($vendorDir);\n\nreturn array(\n\t'Hostinger\\\\WpMenuManager\\\\' => array(\n\t\t'version' => '1.2.19.0',\n\t\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-menu-manager\/src' )\n\t),\n\t'Hostinger\\\\WpHelper\\\\' => array(\n\t\t'version' => '1.0.12.0',\n\t\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-helper\/src' )\n\t),\n\t'Hostinger\\\\Tests\\\\' => array(\n\t\t'version' => '1.0.12.0',\n\t\t'path'    => array( $baseDir . '\/tests\/phpunit', $vendorDir . '\/hostinger\/hostinger-wp-helper\/tests\/phpunit' )\n\t),\n\t'Hostinger\\\\' => array(\n\t\t'version' => 'dev-main',\n\t\t'path'    => array( $baseDir . '\/includes' )\n\t),\n\t'Automattic\\\\Jetpack\\\\Autoloader\\\\' => array(\n\t\t'version' => '5.0.9',\n\t\t'path'    => array( $vendorDir . '\/automattic\/jetpack-autoloader\/src' )\n\t),\n);\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/installed.json","ext":"json","size":8268,"mtime":1756373567,"type":"text","content":"{\n    \"packages\": [\n        {\n            \"name\": \"automattic\/jetpack-autoloader\",\n            \"version\": \"dev-trunk\",\n            \"version_normalized\": \"dev-trunk\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https:\/\/github.com\/Automattic\/jetpack-autoloader.git\",\n                \"reference\": \"272f0a1e119175623b440699e7af79de2a6ed44b\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https:\/\/api.github.com\/repos\/Automattic\/jetpack-autoloader\/zipball\/272f0a1e119175623b440699e7af79de2a6ed44b\",\n                \"reference\": \"272f0a1e119175623b440699e7af79de2a6ed44b\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"composer-plugin-api\": \"^2.2\",\n                \"php\": \">=7.2\"\n            },\n            \"require-dev\": {\n                \"automattic\/jetpack-changelogger\": \"^6.0.6\",\n                \"automattic\/phpunit-select-config\": \"^1.0.3\",\n                \"composer\/composer\": \"^2.2\",\n                \"yoast\/phpunit-polyfills\": \"^4.0.0\"\n            },\n            \"time\": \"2025-08-13T03:21:08+00:00\",\n            \"default-branch\": true,\n            \"type\": \"composer-plugin\",\n            \"extra\": {\n                \"class\": \"Automattic\\\\Jetpack\\\\Autoloader\\\\CustomAutoloaderPlugin\",\n                \"autotagger\": true,\n                \"mirror-repo\": \"Automattic\/jetpack-autoloader\",\n                \"branch-alias\": {\n                    \"dev-trunk\": \"5.0.x-dev\"\n                },\n                \"changelogger\": {\n                    \"link-template\": \"https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v${old}...v${new}\"\n                },\n                \"version-constants\": {\n                    \"::VERSION\": \"src\/AutoloadGenerator.php\"\n                }\n            },\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Automattic\\\\Jetpack\\\\Autoloader\\\\\": \"src\"\n                },\n                \"classmap\": [\n                    \"src\/AutoloadGenerator.php\"\n                ]\n            },\n            \"notification-url\": \"https:\/\/packagist.org\/downloads\/\",\n            \"license\": [\n                \"GPL-2.0-or-later\"\n            ],\n            \"description\": \"Creates a custom autoloader for a plugin or theme.\",\n            \"keywords\": [\n                \"autoload\",\n                \"autoloader\",\n                \"composer\",\n                \"jetpack\",\n                \"plugin\",\n                \"wordpress\"\n            ],\n            \"support\": {\n                \"source\": \"https:\/\/github.com\/Automattic\/jetpack-autoloader\/tree\/trunk\"\n            },\n            \"install-path\": \"..\/automattic\/jetpack-autoloader\"\n        },\n        {\n            \"name\": \"hostinger\/hostinger-wp-helper\",\n            \"version\": \"1.0.12\",\n            \"version_normalized\": \"1.0.12.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"git@github.com:hostinger\/hostinger-wp-helper.git\",\n                \"reference\": \"f943461ffdd9df60c84e4d808ff1dd967dfa790d\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https:\/\/api.github.com\/repos\/hostinger\/hostinger-wp-helper\/zipball\/f943461ffdd9df60c84e4d808ff1dd967dfa790d\",\n                \"reference\": \"f943461ffdd9df60c84e4d808ff1dd967dfa790d\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-json\": \"*\",\n                \"php\": \">=8.0\"\n            },\n            \"require-dev\": {\n                \"phpunit\/phpunit\": \"^9.6\",\n                \"yoast\/phpunit-polyfills\": \"^2.0\"\n            },\n            \"time\": \"2025-07-28T09:51:26+00:00\",\n            \"type\": \"library\",\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Hostinger\\\\WpHelper\\\\\": \"src\/\",\n                    \"Hostinger\\\\Tests\\\\\": \"tests\/phpunit\"\n                }\n            },\n            \"description\": \"A PHP package with core functions for Hostinger WordPress plugins.\",\n            \"support\": {\n                \"source\": \"https:\/\/github.com\/hostinger\/hostinger-wp-helper\/tree\/1.0.12\",\n                \"issues\": \"https:\/\/github.com\/hostinger\/hostinger-wp-helper\/issues\"\n            },\n            \"install-path\": \"..\/hostinger\/hostinger-wp-helper\"\n        },\n        {\n            \"name\": \"hostinger\/hostinger-wp-menu-manager\",\n            \"version\": \"1.2.19\",\n            \"version_normalized\": \"1.2.19.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"git@github.com:hostinger\/hostinger-wp-menu-manager.git\",\n                \"reference\": \"e5be32b03e3dc96746214d4a967b33fea0732062\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https:\/\/api.github.com\/repos\/hostinger\/hostinger-wp-menu-manager\/zipball\/e5be32b03e3dc96746214d4a967b33fea0732062\",\n                \"reference\": \"e5be32b03e3dc96746214d4a967b33fea0732062\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"hostinger\/hostinger-wp-helper\": \"^1.0\"\n            },\n            \"require-dev\": {\n                \"phpunit\/phpunit\": \"^9.6\",\n                \"squizlabs\/php_codesniffer\": \"^3.0\",\n                \"yoast\/phpunit-polyfills\": \"^2.0\"\n            },\n            \"time\": \"2025-07-15T11:32:10+00:00\",\n            \"type\": \"library\",\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"Hostinger\\\\WpMenuManager\\\\\": \"src\/\"\n                }\n            },\n            \"autoload-dev\": {\n                \"psr-4\": {\n                    \"Hostinger\\\\WpMenuManager\\\\Tests\\\\\": \"tests\/phpunit\"\n                }\n            },\n            \"license\": [\n                \"proprietary\"\n            ],\n            \"description\": \"Package for managing Hostinger WordPress menus and pages.\",\n            \"support\": {\n                \"source\": \"https:\/\/github.com\/hostinger\/hostinger-wp-menu-manager\/tree\/1.2.19\",\n                \"issues\": \"https:\/\/github.com\/hostinger\/hostinger-wp-menu-manager\/issues\"\n            },\n            \"install-path\": \"..\/hostinger\/hostinger-wp-menu-manager\"\n        },\n        {\n            \"name\": \"woocommerce\/action-scheduler\",\n            \"version\": \"3.9.3\",\n            \"version_normalized\": \"3.9.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https:\/\/github.com\/woocommerce\/action-scheduler.git\",\n                \"reference\": \"c58cdbab17651303d406cd3b22cf9d75c71c986c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https:\/\/api.github.com\/repos\/woocommerce\/action-scheduler\/zipball\/c58cdbab17651303d406cd3b22cf9d75c71c986c\",\n                \"reference\": \"c58cdbab17651303d406cd3b22cf9d75c71c986c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"require-dev\": {\n                \"phpunit\/phpunit\": \"^8.5\",\n                \"woocommerce\/woocommerce-sniffs\": \"0.1.0\",\n                \"wp-cli\/wp-cli\": \"~2.5.0\",\n                \"yoast\/phpunit-polyfills\": \"^2.0\"\n            },\n            \"time\": \"2025-07-15T09:32:30+00:00\",\n            \"type\": \"wordpress-plugin\",\n            \"extra\": {\n                \"scripts-description\": {\n                    \"test\": \"Run unit tests\",\n                    \"phpcs\": \"Analyze code against the WordPress coding standards with PHP_CodeSniffer\",\n                    \"phpcbf\": \"Fix coding standards warnings\/errors automatically with PHP Code Beautifier\"\n                }\n            },\n            \"installation-source\": \"dist\",\n            \"notification-url\": \"https:\/\/packagist.org\/downloads\/\",\n            \"license\": [\n                \"GPL-3.0-or-later\"\n            ],\n            \"description\": \"Action Scheduler for WordPress and WooCommerce\",\n            \"homepage\": \"https:\/\/actionscheduler.org\/\",\n            \"support\": {\n                \"issues\": \"https:\/\/github.com\/woocommerce\/action-scheduler\/issues\",\n                \"source\": \"https:\/\/github.com\/woocommerce\/action-scheduler\/tree\/3.9.3\"\n            },\n            \"install-path\": \"..\/woocommerce\/action-scheduler\"\n        }\n    ],\n    \"dev\": false,\n    \"dev-package-names\": []\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/autoload_psr4.php","ext":"php","size":571,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Hostinger\\\\WpMenuManager\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-menu-manager\/src'),\n    'Hostinger\\\\WpHelper\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-helper\/src'),\n    'Hostinger\\\\Tests\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-helper\/tests\/phpunit'),\n    'Hostinger\\\\' => array($baseDir . '\/includes'),\n    'Automattic\\\\Jetpack\\\\Autoloader\\\\' => array($vendorDir . '\/automattic\/jetpack-autoloader\/src'),\n);\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/InstalledVersions.php","ext":"php","size":17395,"mtime":1756373567,"type":"text","content":"<?php\n\n\/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n\/**\n * This class is copied in every Composer installed project and available to all\n *\n * See also https:\/\/getcomposer.org\/doc\/07-runtime.md#installed-versions\n *\n * To require its presence, you can require `composer-runtime-api ^2.0`\n *\n * @final\n *\/\nclass InstalledVersions\n{\n    \/**\n     * @var string|null if set (by reflection by Composer), this should be set to the path where this class is being copied to\n     * @internal\n     *\/\n    private static $selfDir = null;\n\n    \/**\n     * @var mixed[]|null\n     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null\n     *\/\n    private static $installed;\n\n    \/**\n     * @var bool\n     *\/\n    private static $installedIsLocalDir;\n\n    \/**\n     * @var bool|null\n     *\/\n    private static $canGetVendors;\n\n    \/**\n     * @var array[]\n     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    private static $installedByVendor = array();\n\n    \/**\n     * Returns a list of all package names which are present, either by being installed, replaced or provided\n     *\n     * @return string[]\n     * @psalm-return list<string>\n     *\/\n    public static function getInstalledPackages()\n    {\n        $packages = array();\n        foreach (self::getInstalled() as $installed) {\n            $packages[] = array_keys($installed['versions']);\n        }\n\n        if (1 === \\count($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    \/**\n     * Returns a list of all package names with a specific type e.g. 'library'\n     *\n     * @param  string   $type\n     * @return string[]\n     * @psalm-return list<string>\n     *\/\n    public static function getInstalledPackagesByType($type)\n    {\n        $packagesByType = array();\n\n        foreach (self::getInstalled() as $installed) {\n            foreach ($installed['versions'] as $name => $package) {\n                if (isset($package['type']) && $package['type'] === $type) {\n                    $packagesByType[] = $name;\n                }\n            }\n        }\n\n        return $packagesByType;\n    }\n\n    \/**\n     * Checks whether the given package is installed\n     *\n     * This also returns true if the package name is provided or replaced by another package\n     *\n     * @param  string $packageName\n     * @param  bool   $includeDevRequirements\n     * @return bool\n     *\/\n    public static function isInstalled($packageName, $includeDevRequirements = true)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (isset($installed['versions'][$packageName])) {\n                return $includeDevRequirements || !isset($installed['versions'][$packageName]['dev_requirement']) || $installed['versions'][$packageName]['dev_requirement'] === false;\n            }\n        }\n\n        return false;\n    }\n\n    \/**\n     * Checks whether the given package satisfies a version constraint\n     *\n     * e.g. If you want to know whether version 2.3+ of package foo\/bar is installed, you would call:\n     *\n     *   Composer\\InstalledVersions::satisfies(new VersionParser, 'foo\/bar', '^2.3')\n     *\n     * @param  VersionParser $parser      Install composer\/semver to have access to this class and functionality\n     * @param  string        $packageName\n     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer\/semver is required by your package\n     * @return bool\n     *\/\n    public static function satisfies(VersionParser $parser, $packageName, $constraint)\n    {\n        $constraint = $parser->parseConstraints((string) $constraint);\n        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\n        return $provided->matches($constraint);\n    }\n\n    \/**\n     * Returns a version constraint representing all the range(s) which are installed for a given package\n     *\n     * It is easier to use this via isInstalled() with the $constraint argument if you need to check\n     * whether a given version of a package is installed, and not just whether it exists\n     *\n     * @param  string $packageName\n     * @return string Version constraint usable with composer\/semver\n     *\/\n    public static function getVersionRanges($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            $ranges = array();\n            if (isset($installed['versions'][$packageName]['pretty_version'])) {\n                $ranges[] = $installed['versions'][$packageName]['pretty_version'];\n            }\n            if (array_key_exists('aliases', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n            }\n            if (array_key_exists('replaced', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n            }\n            if (array_key_exists('provided', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n            }\n\n            return implode(' || ', $ranges);\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     *\/\n    public static function getVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     *\/\n    public static function getPrettyVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['pretty_version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['pretty_version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference\n     *\/\n    public static function getReference($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['reference'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['reference'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.\n     *\/\n    public static function getInstallPath($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    \/**\n     * @return array\n     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}\n     *\/\n    public static function getRootPackage()\n    {\n        $installed = self::getInstalled();\n\n        return $installed[0]['root'];\n    }\n\n    \/**\n     * Returns the raw installed.php data for custom implementations\n     *\n     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.\n     * @return array[]\n     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}\n     *\/\n    public static function getRawData()\n    {\n        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);\n\n        if (null === self::$installed) {\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '\/installed.php';\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        return self::$installed;\n    }\n\n    \/**\n     * Returns the raw data of all installed.php which are currently loaded for custom implementations\n     *\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    public static function getAllRawData()\n    {\n        return self::getInstalled();\n    }\n\n    \/**\n     * Lets you reload the static array from another file\n     *\n     * This is only useful for complex integrations in which a project needs to use\n     * this class but then also needs to execute another project's autoloader in process,\n     * and wants to ensure both projects have access to their version of installed.php.\n     *\n     * A typical case would be PHPUnit, where it would need to make sure it reads all\n     * the data it needs from this class, then call reload() with\n     * `require $CWD\/vendor\/composer\/installed.php` (or similar) as input to make sure\n     * the project in which it runs can then also use this class safely, without\n     * interference between PHPUnit's dependencies and the project's dependencies.\n     *\n     * @param  array[] $data A vendor\/composer\/installed.php data set\n     * @return void\n     *\n     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data\n     *\/\n    public static function reload($data)\n    {\n        self::$installed = $data;\n        self::$installedByVendor = array();\n\n        \/\/ when using reload, we disable the duplicate protection to ensure that self::$installed data is\n        \/\/ always returned, but we cannot know whether it comes from the installed.php in __DIR__ or not,\n        \/\/ so we have to assume it does not, and that may result in duplicate data being returned when listing\n        \/\/ all installed packages for example\n        self::$installedIsLocalDir = false;\n    }\n\n    \/**\n     * @return string\n     *\/\n    private static function getSelfDir()\n    {\n        if (self::$selfDir === null) {\n            self::$selfDir = strtr(__DIR__, '\\\\', '\/');\n        }\n\n        return self::$selfDir;\n    }\n\n    \/**\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     *\/\n    private static function getInstalled()\n    {\n        if (null === self::$canGetVendors) {\n            self::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n        }\n\n        $installed = array();\n        $copiedLocalDir = false;\n\n        if (self::$canGetVendors) {\n            $selfDir = self::getSelfDir();\n            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\n                $vendorDir = strtr($vendorDir, '\\\\', '\/');\n                if (isset(self::$installedByVendor[$vendorDir])) {\n                    $installed[] = self::$installedByVendor[$vendorDir];\n                } elseif (is_file($vendorDir.'\/composer\/installed.php')) {\n                    \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\n                    $required = require $vendorDir.'\/composer\/installed.php';\n                    self::$installedByVendor[$vendorDir] = $required;\n                    $installed[] = $required;\n                    if (self::$installed === null && $vendorDir.'\/composer' === $selfDir) {\n                        self::$installed = $required;\n                        self::$installedIsLocalDir = true;\n                    }\n                }\n                if (self::$installedIsLocalDir && $vendorDir.'\/composer' === $selfDir) {\n                    $copiedLocalDir = true;\n                }\n            }\n        }\n\n        if (null === self::$installed) {\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\n                $required = require __DIR__ . '\/installed.php';\n                self::$installed = $required;\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        if (self::$installed !== array() && !$copiedLocalDir) {\n            $installed[] = self::$installed;\n        }\n\n        return $installed;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/autoload_classmap.php","ext":"php","size":355,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Automattic\\\\Jetpack\\\\Autoloader\\\\AutoloadGenerator' => $vendorDir . '\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php',\n    'Composer\\\\InstalledVersions' => $vendorDir . '\/composer\/InstalledVersions.php',\n);\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/installed.php","ext":"php","size":2411,"mtime":1756373567,"type":"text","content":"<?php return array(\n    'root' => array(\n        'name' => 'hostinger\/hostinger',\n        'pretty_version' => 'dev-main',\n        'version' => 'dev-main',\n        'reference' => '00a998f616f0c79ee51a3f3564c02a41bf761708',\n        'type' => 'library',\n        'install_path' => __DIR__ . '\/..\/..\/',\n        'aliases' => array(),\n        'dev' => false,\n    ),\n    'versions' => array(\n        'automattic\/jetpack-autoloader' => array(\n            'pretty_version' => 'dev-trunk',\n            'version' => 'dev-trunk',\n            'reference' => '272f0a1e119175623b440699e7af79de2a6ed44b',\n            'type' => 'composer-plugin',\n            'install_path' => __DIR__ . '\/..\/automattic\/jetpack-autoloader',\n            'aliases' => array(\n                0 => '5.0.x-dev',\n            ),\n            'dev_requirement' => false,\n        ),\n        'hostinger\/hostinger' => array(\n            'pretty_version' => 'dev-main',\n            'version' => 'dev-main',\n            'reference' => '00a998f616f0c79ee51a3f3564c02a41bf761708',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/..\/',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'hostinger\/hostinger-wp-helper' => array(\n            'pretty_version' => '1.0.12',\n            'version' => '1.0.12.0',\n            'reference' => 'f943461ffdd9df60c84e4d808ff1dd967dfa790d',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/hostinger\/hostinger-wp-helper',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'hostinger\/hostinger-wp-menu-manager' => array(\n            'pretty_version' => '1.2.19',\n            'version' => '1.2.19.0',\n            'reference' => 'e5be32b03e3dc96746214d4a967b33fea0732062',\n            'type' => 'library',\n            'install_path' => __DIR__ . '\/..\/hostinger\/hostinger-wp-menu-manager',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'woocommerce\/action-scheduler' => array(\n            'pretty_version' => '3.9.3',\n            'version' => '3.9.3.0',\n            'reference' => 'c58cdbab17651303d406cd3b22cf9d75c71c986c',\n            'type' => 'wordpress-plugin',\n            'install_path' => __DIR__ . '\/..\/woocommerce\/action-scheduler',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n    ),\n);\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/autoload_namespaces.php","ext":"php","size":139,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/ClassLoader.php","ext":"php","size":16378,"mtime":1756373567,"type":"text","content":"<?php\n\n\/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\/\n\nnamespace Composer\\Autoload;\n\n\/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     \/\/ register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'\/component');\n *     $loader->add('Symfony',           __DIR__.'\/framework');\n *\n *     \/\/ activate the autoloader\n *     $loader->register();\n *\n *     \/\/ to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component\/\n * directory, and it will then fallback to the framework\/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https:\/\/www.php-fig.org\/psr\/psr-0\/\n * @see    https:\/\/www.php-fig.org\/psr\/psr-4\/\n *\/\nclass ClassLoader\n{\n    \/** @var \\Closure(string):void *\/\n    private static $includeFile;\n\n    \/** @var string|null *\/\n    private $vendorDir;\n\n    \/\/ PSR-4\n    \/**\n     * @var array<string, array<string, int>>\n     *\/\n    private $prefixLengthsPsr4 = array();\n    \/**\n     * @var array<string, list<string>>\n     *\/\n    private $prefixDirsPsr4 = array();\n    \/**\n     * @var list<string>\n     *\/\n    private $fallbackDirsPsr4 = array();\n\n    \/\/ PSR-0\n    \/**\n     * List of PSR-0 prefixes\n     *\n     * Structured as array('F (first letter)' => array('Foo\\Bar (full prefix)' => array('path', 'path2')))\n     *\n     * @var array<string, array<string, list<string>>>\n     *\/\n    private $prefixesPsr0 = array();\n    \/**\n     * @var list<string>\n     *\/\n    private $fallbackDirsPsr0 = array();\n\n    \/** @var bool *\/\n    private $useIncludePath = false;\n\n    \/**\n     * @var array<string, string>\n     *\/\n    private $classMap = array();\n\n    \/** @var bool *\/\n    private $classMapAuthoritative = false;\n\n    \/**\n     * @var array<string, bool>\n     *\/\n    private $missingClasses = array();\n\n    \/** @var string|null *\/\n    private $apcuPrefix;\n\n    \/**\n     * @var array<string, self>\n     *\/\n    private static $registeredLoaders = array();\n\n    \/**\n     * @param string|null $vendorDir\n     *\/\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n        self::initializeIncludeClosure();\n    }\n\n    \/**\n     * @return array<string, list<string>>\n     *\/\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    \/**\n     * @return array<string, list<string>>\n     *\/\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    \/**\n     * @return list<string>\n     *\/\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    \/**\n     * @return list<string>\n     *\/\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    \/**\n     * @return array<string, string> Array of classname => path\n     *\/\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    \/**\n     * @param array<string, string> $classMap Class to filename map\n     *\n     * @return void\n     *\/\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string              $prefix  The prefix\n     * @param list<string>|string $paths   The PSR-0 root directories\n     * @param bool                $prepend Whether to prepend the directories\n     *\n     * @return void\n     *\/\n    public function add($prefix, $paths, $prepend = false)\n    {\n        $paths = (array) $paths;\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                $paths\n            );\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string              $prefix  The prefix\/namespace, with trailing '\\\\'\n     * @param list<string>|string $paths   The PSR-4 base directories\n     * @param bool                $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     *\/\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        $paths = (array) $paths;\n        if (!$prefix) {\n            \/\/ Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            \/\/ Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = $paths;\n        } elseif ($prepend) {\n            \/\/ Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            \/\/ Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                $paths\n            );\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string              $prefix The prefix\n     * @param list<string>|string $paths  The PSR-0 base directories\n     *\n     * @return void\n     *\/\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    \/**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string              $prefix The prefix\/namespace, with trailing '\\\\'\n     * @param list<string>|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     *\/\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    \/**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     *\n     * @return void\n     *\/\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    \/**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     *\/\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    \/**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     *\n     * @return void\n     *\/\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    \/**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     *\/\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    \/**\n     * APCu prefix to use to cache found\/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     *\n     * @return void\n     *\/\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    \/**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     *\/\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    \/**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     *\n     * @return void\n     *\/\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            return;\n        }\n\n        if ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    \/**\n     * Unregisters this instance as an autoloader.\n     *\n     * @return void\n     *\/\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    \/**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return true|null True if loaded, null otherwise\n     *\/\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            $includeFile = self::$includeFile;\n            $includeFile($file);\n\n            return true;\n        }\n\n        return null;\n    }\n\n    \/**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     *\/\n    public function findFile($class)\n    {\n        \/\/ class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        \/\/ Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            \/\/ Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    \/**\n     * Returns the currently registered loaders keyed by their corresponding vendor directories.\n     *\n     * @return array<string, self>\n     *\/\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    \/**\n     * @param  string       $class\n     * @param  string       $ext\n     * @return string|false\n     *\/\n    private function findFileWithExtension($class, $ext)\n    {\n        \/\/ PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        \/\/ PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        \/\/ PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            \/\/ namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            \/\/ PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        \/\/ PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        \/\/ PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n\n    \/**\n     * @return void\n     *\/\n    private static function initializeIncludeClosure()\n    {\n        if (self::$includeFile !== null) {\n            return;\n        }\n\n        \/**\n         * Scope isolated include.\n         *\n         * Prevents access to $this\/self from included files.\n         *\n         * @param  string $file\n         * @return void\n         *\/\n        self::$includeFile = \\Closure::bind(static function($file) {\n            include $file;\n        }, null, null);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/jetpack_autoload_classmap.php","ext":"php","size":368,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ This file `jetpack_autoload_classmap.php` was auto generated by automattic\/jetpack-autoloader.\n\n$vendorDir = dirname(__DIR__);\n$baseDir   = dirname($vendorDir);\n\nreturn array(\n\t'Automattic\\\\Jetpack\\\\Autoloader\\\\AutoloadGenerator' => array(\n\t\t'version' => '5.0.9',\n\t\t'path'    => $vendorDir . '\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php'\n\t),\n);\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/autoload_static.php","ext":"php","size":2004,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInit5eb612593a2ef67b85ad25c07c19e821\n{\n    public static $prefixLengthsPsr4 = array (\n        'H' => \n        array (\n            'Hostinger\\\\WpMenuManager\\\\' => 24,\n            'Hostinger\\\\WpHelper\\\\' => 19,\n            'Hostinger\\\\Tests\\\\' => 16,\n            'Hostinger\\\\' => 10,\n        ),\n        'A' => \n        array (\n            'Automattic\\\\Jetpack\\\\Autoloader\\\\' => 30,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'Hostinger\\\\WpMenuManager\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-menu-manager\/src',\n        ),\n        'Hostinger\\\\WpHelper\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-helper\/src',\n        ),\n        'Hostinger\\\\Tests\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-helper\/tests\/phpunit',\n        ),\n        'Hostinger\\\\' => \n        array (\n            0 => __DIR__ . '\/..\/..' . '\/includes',\n        ),\n        'Automattic\\\\Jetpack\\\\Autoloader\\\\' => \n        array (\n            0 => __DIR__ . '\/..' . '\/automattic\/jetpack-autoloader\/src',\n        ),\n    );\n\n    public static $classMap = array (\n        'Automattic\\\\Jetpack\\\\Autoloader\\\\AutoloadGenerator' => __DIR__ . '\/..' . '\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php',\n        'Composer\\\\InstalledVersions' => __DIR__ . '\/..' . '\/composer\/InstalledVersions.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInit5eb612593a2ef67b85ad25c07c19e821::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInit5eb612593a2ef67b85ad25c07c19e821::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInit5eb612593a2ef67b85ad25c07c19e821::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/composer\/autoload_real.php","ext":"php","size":1087,"mtime":1756373567,"type":"text","content":"<?php\n\n\/\/ autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInit5eb612593a2ef67b85ad25c07c19e821\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '\/ClassLoader.php';\n        }\n    }\n\n    \/**\n     * @return \\Composer\\Autoload\\ClassLoader\n     *\/\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        spl_autoload_register(array('ComposerAutoloaderInit5eb612593a2ef67b85ad25c07c19e821', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(__DIR__));\n        spl_autoload_unregister(array('ComposerAutoloaderInit5eb612593a2ef67b85ad25c07c19e821', 'loadClassLoader'));\n\n        require __DIR__ . '\/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInit5eb612593a2ef67b85ad25c07c19e821::getInitializer($loader));\n\n        $loader->register(true);\n\n        return $loader;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/autoload_packages.php","ext":"php","size":325,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\nrequire_once __DIR__ . '\/jetpack-autoloader\/class-autoloader.php';\nAutoloader::init();\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/assets\/js\/menus.min.js","ext":"js","size":2394,"mtime":1756373567,"type":"text","content":"(()=>{var e,r={144:()=>{jQuery(document).on(\"ready\",function(){window.addEventListener(\"onboardingMenuToggle\",function(e){var r=\"hostinger-hide-all-menu-items\";switch(e.detail&&e.detail.operation?e.detail.operation:\"show\"){case\"show\":document.querySelector(\"body\").classList.remove(r);break;case\"hide\":document.querySelector(\"body\").classList.add(r)}}),window.addEventListener(\"resize\",function(){var e=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,r=document.querySelector(\".hsr-wrapper__list\"),t=document.querySelector(\".hsr-mobile-sidebar .hsr-wrapper\"),o=document.querySelector(\".hsr-navbar-buttons\");if(e<=1085)r&&t&&(t.appendChild(r),null!==o&&t.appendChild(o));else{var n=document.querySelector(\".hsr-onboarding-navbar__wrapper\");r&&n&&(n.appendChild(r),null!==o&&n.appendChild(o),document.querySelector(\".hsr-mobile-sidebar\").classList.remove(\"hsr-active\"))}}),window.dispatchEvent(new Event(\"resize\"));var e=document.querySelector(\".hsr-mobile-sidebar\"),r=document.querySelectorAll(\".hsr-close, .hsr-mobile-menu-icon\");null!==r&&r.forEach(function(r){r.addEventListener(\"click\",function(r){e.classList.toggle(\"hsr-active\"),document.querySelector(\"body\").classList.toggle(\"hsr-sidebar-active\"),r.stopPropagation()})}),document.addEventListener(\"click\",function(r){null!==e&&(e.contains(r.target)||(e.classList.remove(\"hsr-active\"),document.querySelector(\"body\").classList.remove(\"hsr-sidebar-active\")))})})},796:()=>{}},t={};function o(e){var n=t[e];if(void 0!==n)return n.exports;var i=t[e]={exports:{}};return r[e](i,i.exports,o),i.exports}o.m=r,e=[],o.O=(r,t,n,i)=>{if(!t){var s=1\/0;for(l=0;l<e.length;l++){for(var[t,n,i]=e[l],a=!0,c=0;c<t.length;c++)(!1&i||s>=i)&&Object.keys(o.O).every(e=>o.O[e](t[c]))?t.splice(c--,1):(a=!1,i<s&&(s=i));if(a){e.splice(l--,1);var d=n();void 0!==d&&(r=d)}}return r}i=i||0;for(var l=e.length;l>0&&e[l-1][2]>i;l--)e[l]=e[l-1];e[l]=[t,n,i]},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={580:0,540:0};o.O.j=r=>0===e[r];var r=(r,t)=>{var n,i,[s,a,c]=t,d=0;if(s.some(r=>0!==e[r])){for(n in a)o.o(a,n)&&(o.m[n]=a[n]);if(c)var l=c(o)}for(r&&r(t);d<s.length;d++)i=s[d],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return o.O(l)},t=self.webpackChunk=self.webpackChunk||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})(),o.O(void 0,[540],()=>o(144));var n=o.O(void 0,[540],()=>o(796));n=o.O(n)})();"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/assets\/css\/style.min.css","ext":"css","size":5794,"mtime":1756373567,"type":"text","content":"@font-face{font-family:DMSans;font-weight:400;src:url(..\/fonts\/DMSans-Regular.ttf)}@font-face{font-family:DMSans;font-weight:700;src:url(..\/fonts\/DMSans-Bold.ttf)}.hsr-onboarding-navbar{display:flex;justify-content:center;margin-left:-20px;width:calc(100% + 20px)}.hsr-onboarding-navbar__wrapper{align-items:center;background:#fff;border-bottom:1px solid #dadce0;display:flex;height:72px;position:relative;width:100%}@media (max-width:1085px){.hsr-onboarding-navbar__wrapper{height:56px}}.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 30px}.hsr-onboarding-navbar__wrapper .hsr-logo .hsr-mobile-logo{display:none}@media (max-width:1170px){.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 10px 0 20px}}@media (max-width:1085px){.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 10px 0 15px}.hsr-onboarding-navbar__wrapper .hsr-logo svg{display:none}.hsr-onboarding-navbar__wrapper .hsr-logo .hsr-mobile-logo{display:block}}@media (max-width:782px){.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 10px 0 20px}}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons{align-items:center;display:flex;position:absolute;right:30px;top:17px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel{align-items:center;border:1px solid #dadce0;border-radius:8px;display:flex;padding:6px 16px;transition:.3s}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel:hover{opacity:.8}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel:focus{box-shadow:none;outline:none}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel a{margin-right:5px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel a:hover{opacity:1}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-preview-website{margin-right:30px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a{color:#673de6;font-size:14px;font-weight:700;line-height:24px;text-decoration:none;transition:.3s}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a:hover{opacity:.8}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a:focus{box-shadow:none;outline:none}@media (max-width:1085px){.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons{right:15px;top:15px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a,.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons svg{display:none}}.hsr-wrapper{background:#fff;border-bottom:1px solid #dadce0;height:72px;width:100%}@media (max-width:1085px){.hsr-wrapper{height:56px}}.hsr-list,.hsr-wrapper__list{align-items:center;display:flex;margin:0}.hsr-list{height:inherit;padding:0 16px}.hsr-list__item{align-items:center;border-bottom:1px solid transparent;cursor:pointer;display:flex;margin:0}.hsr-list__item svg{margin-right:5px}.hsr-list__item svg path{fill:#727586}@media (max-width:1085px){.hsr-list__item{display:none}}.hsr-list__item.hsr-active a{background-color:#ebe4ff;border-bottom:2px solid #673de6;color:#673de6}.hsr-list__item:hover:not(.hsr-active){border-bottom:1px solid #dadce0}@media (max-width:1085px){.hsr-list__item:hover:not(.hsr-active){border-bottom:0}}.hsr-list__item:hover:not(.hsr-active) a{background-color:#f2f3f6}@media (max-width:1085px){.hsr-list__item:hover:not(.hsr-active) a{border-bottom:none;border-radius:5px}}.hsr-list__item a{color:#727586;font-size:16px;font-weight:400;line-height:24px;padding:24px 30px;text-decoration:none}@media (max-width:1085px){.hsr-list__item a{display:block;margin-bottom:5px;padding:12px 16px}}.hsr-mobile-sidebar{display:none;transform:translateX(100%);transition:.3s}.hsr-mobile-sidebar.hsr-active{animation:sidebar-animation .3s;background-color:#fff;display:block;height:100vh;padding-top:25px;position:fixed;right:0;top:0;transform:translateX(0);width:300px;z-index:999}.hsr-mobile-sidebar.hsr-active .hsr-wrapper{padding:0 20px}@media (max-width:1085px){.hsr-mobile-sidebar.hsr-active .hsr-wrapper{border-bottom:0;height:auto;padding:0}}.hsr-mobile-sidebar.hsr-active .hsr-close{cursor:pointer;float:right;margin-right:20px;margin-top:27px}@media (max-width:782px){.hsr-mobile-sidebar.hsr-active .hsr-close{margin-top:41px}}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list{display:block;margin-top:100px;padding:0}@media (max-width:1085px){.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list{margin-left:20px;margin-right:20px}}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list .hsr-list__item{display:block;margin-bottom:5px;padding:0}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list .hsr-list__item svg{display:none}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list .hsr-list__item.hsr-active a{border-bottom:none;border-radius:5px}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons{align-items:center;border-top:1px solid #dadce0;display:flex;flex-wrap:wrap;margin:0 20px;padding:20px 0}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons svg{margin-right:8px}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons a{color:#673de6;font-size:14px;font-weight:700;padding-left:8px;text-decoration:none}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons a:focus{box-shadow:none;outline:none}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons .hts-hpanel{align-items:center;border:1px solid #dadce0;border-radius:6px;display:flex;margin-top:10px;padding:5px 8px;width:auto}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons .hts-hpanel a{margin-right:5px;padding-left:0}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons .hts-hpanel svg{margin-right:0}.hsr-mobile-menu-icon{display:none}@media (max-width:1085px){.hsr-mobile-menu-icon{cursor:pointer;display:block;position:absolute;right:20px;top:15px}}@media (max-width:782px){.hsr-mobile-menu-icon{right:9px}}body.hsr-sidebar-active .hsr-overlay{background-color:rgba(0,0,0,.5);height:100vh;left:0;position:fixed;top:0;width:100%;z-index:99}@keyframes sidebar-animation{0%{transform:translateX(100%)}to{transform:translateX(0)}}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/templates\/menu.php","ext":"php","size":6846,"mtime":1756373567,"type":"text","content":"<?php\n\nuse Hostinger\\WpHelper\\Utils;\n\n$submenus = self::getMenuSubpages();\n\n?>\n    <div class=\"hsr-overlay\"><\/div>\n    <div class=\"hsr-onboarding-navbar\">\n        <div class=\"hsr-mobile-sidebar\">\n            <div class=\"hsr-close\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n                    <path d=\"M6.99961 8.04961L1.74961 13.2996C1.59961 13.4496 1.42461 13.5246 1.22461 13.5246C1.02461 13.5246 0.849609 13.4496 0.699609 13.2996C0.549609 13.1496 0.474609 12.9746 0.474609 12.7746C0.474609 12.5746 0.549609 12.3996 0.699609 12.2496L5.94961 6.99961L0.699609 1.74961C0.549609 1.59961 0.474609 1.42461 0.474609 1.22461C0.474609 1.02461 0.549609 0.849609 0.699609 0.699609C0.849609 0.549609 1.02461 0.474609 1.22461 0.474609C1.42461 0.474609 1.59961 0.549609 1.74961 0.699609L6.99961 5.94961L12.2496 0.699609C12.3996 0.549609 12.5746 0.474609 12.7746 0.474609C12.9746 0.474609 13.1496 0.549609 13.2996 0.699609C13.4496 0.849609 13.5246 1.02461 13.5246 1.22461C13.5246 1.42461 13.4496 1.59961 13.2996 1.74961L8.04961 6.99961L13.2996 12.2496C13.4496 12.3996 13.5246 12.5746 13.5246 12.7746C13.5246 12.9746 13.4496 13.1496 13.2996 13.2996C13.1496 13.4496 12.9746 13.5246 12.7746 13.5246C12.5746 13.5246 12.3996 13.4496 12.2496 13.2996L6.99961 8.04961Z\"\n                          fill=\"#673DE6\"><\/path>\n                <\/svg>\n            <\/div>\n            <div class=\"hsr-wrapper\"><\/div>\n        <\/div>\n        <div class=\"hsr-onboarding-navbar__wrapper\">\n            <div class=\"hsr-logo\">\n                <svg class=\"hsr-mobile-logo\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.00025 14.046V0.000497794L9.08916 3.78046V10.1086L18.4735 10.1132L25.6774 14.046H2.00025ZM20.3925 8.95058V0L27.6725 3.6859V13.1797L20.3925 8.95058ZM20.3924 26.1177V19.8441L10.9358 19.8375C10.9446 19.8793 3.6123 15.8418 3.6123 15.8418L27.6725 15.9547V30L20.3924 26.1177ZM2 26.1177L2.00025 16.9393L9.08916 21.0683V29.8033L2 26.1177Z\" fill=\"#1D1E20\"\/>\n                <\/svg>\n                <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.00025 14.046V0.000497794L9.08916 3.78046V10.1086L18.4735 10.1132L25.6774 14.046H2.00025ZM20.3925 8.95058V0L27.6725 3.6859V13.1797L20.3925 8.95058ZM20.3924 26.1177V19.8441L10.9358 19.8375C10.9446 19.8793 3.6123 15.8418 3.6123 15.8418L27.6725 15.9547V30L20.3924 26.1177ZM2 26.1177L2.00025 16.9393L9.08916 21.0683V29.8033L2 26.1177Z\" fill=\"#1D1E20\"\/>\n                <\/svg>\n            <\/div>\n            <svg class=\"hsr-mobile-menu-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n                <path d=\"M3.75 18C3.5375 18 3.35938 17.9277 3.21563 17.7831C3.07187 17.6385 3 17.4594 3 17.2456C3 17.0319 3.07187 16.8542 3.21563 16.7125C3.35938 16.5708 3.5375 16.5 3.75 16.5H20.25C20.4625 16.5 20.6406 16.5723 20.7844 16.7169C20.9281 16.8615 21 17.0406 21 17.2544C21 17.4681 20.9281 17.6458 20.7844 17.7875C20.6406 17.9292 20.4625 18 20.25 18H3.75ZM3.75 12.75C3.5375 12.75 3.35938 12.6777 3.21563 12.5331C3.07187 12.3885 3 12.2094 3 11.9956C3 11.7819 3.07187 11.6042 3.21563 11.4625C3.35938 11.3208 3.5375 11.25 3.75 11.25H20.25C20.4625 11.25 20.6406 11.3223 20.7844 11.4669C20.9281 11.6115 21 11.7906 21 12.0044C21 12.2181 20.9281 12.3958 20.7844 12.5375C20.6406 12.6792 20.4625 12.75 20.25 12.75H3.75ZM3.75 7.5C3.5375 7.5 3.35938 7.42771 3.21563 7.28313C3.07187 7.13853 3 6.95936 3 6.74563C3 6.53188 3.07187 6.35417 3.21563 6.2125C3.35938 6.07083 3.5375 6 3.75 6H20.25C20.4625 6 20.6406 6.07229 20.7844 6.21687C20.9281 6.36147 21 6.54064 21 6.75437C21 6.96812 20.9281 7.14583 20.7844 7.2875C20.6406 7.42917 20.4625 7.5 20.25 7.5H3.75Z\"\n                      fill=\"#36344D\"><\/path>\n            <\/svg>\n            <?php\n            if (!empty($submenus)) { ?>\n                <ul class=\"hsr-wrapper__list\">\n                    <?php\n\n                    foreach ($submenus as $index => $submenu) {\n                        $page = (isset($_GET['page'])) ? $_GET['page'] : '';\n\n                        $is_active = ($page === $submenu['menu_slug'] || ($page === self::MENU_SLUG && $index === 0));\n\n                        ?>\n                        <li\n                                class=\"hsr-list__item <?php echo ($is_active) ? \"hsr-active\" : \"\"; ?>\"\n                        >\n                            <a\n                                    href=\"<?php echo menu_page_url($submenu['menu_slug'], false); ?>\"\n                                    class=\"<?php echo $submenu['menu_slug']; ?>\"\n                            >\n                                <?php\n\n                                echo $submenu['menu_title'];\n\n                                ?>\n                            <\/a>\n                        <\/li>\n                        <?php\n                    }\n\n                    ?>\n                <\/ul>\n            <?php } ?>\n\n            <?php\n            $utils     = new Utils();\n            $api_token = Utils::getApiToken();\n            ?>\n            <div class=\"hsr-navbar-buttons\">\n                <?php if (!empty($api_token)) { ?>\n                    <div class=\"hts-hpanel\">\n                        <a href=\"<?php echo esc_url($utils->getHpanelDomainUrl()); ?>\" target=\"_blank\" rel=\"noopener\">\n                            <?php echo esc_html__('Go to hPanel', 'hostinger-wp-menu-package'); ?>\n                        <\/a>\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n                            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.5 5.24609C2.5 3.72731 3.73122 2.49609 5.25 2.49609H6C6.41421 2.49609 6.75 2.83188 6.75 3.24609C6.75 3.66031 6.41421 3.99609 6 3.99609H5.25C4.55964 3.99609 4 4.55574 4 5.24609V10.6842C4 11.3745 4.55964 11.9342 5.25 11.9342H10.7508C11.4411 11.9342 12.0008 11.3745 12.0008 10.6842V9.99829C12.0008 9.58408 12.3366 9.24829 12.7508 9.24829C13.165 9.24829 13.5008 9.58408 13.5008 9.99829V10.6842C13.5008 12.203 12.2696 13.4342 10.7508 13.4342H5.25C3.73122 13.4342 2.5 12.203 2.5 10.6842V5.24609ZM12 5.05906L8.03033 9.02873C7.73744 9.32162 7.26256 9.32162 6.96967 9.02873C6.67678 8.73583 6.67678 8.26096 6.96967 7.96807L10.9393 3.9984L9 3.9984C8.58579 3.9984 8.25 3.66261 8.25 3.2484C8.25 2.83418 8.58579 2.4984 9 2.4984L12.25 2.4984C12.9404 2.4984 13.5 3.05804 13.5 3.7484V6.9984C13.5 7.41261 13.1642 7.7484 12.75 7.7484C12.3358 7.7484 12 7.41261 12 6.9984V5.05906Z\" fill=\"#673DE6\"\/>\n                        <\/svg>\n                    <\/div>\n                <?php } ?>\n            <\/div>\n        <\/div>\n    <\/div>\n<?php\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/Menus.php","ext":"php","size":7758,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpMenuManager;\n\nuse WP_Admin_Bar;\n\nclass Menus\n{\n    \/**\n     * @var Manager\n     *\/\n    private Manager $manager;\n\n    public const MENU_SLUG = 'hostinger';\n\n    \/**\n     * @return void\n     *\/\n    public function init(): void\n    {\n        if (!$this->manager->checkCompatibility()) {\n            add_action('admin_bar_menu', [$this, 'modifyAdminBar'], 999);\n            add_filter('admin_body_class', [$this, 'addMenuClass']);\n            add_action('admin_menu', [$this, 'registerAdminMenu']);\n        } else {\n            $this->manager->maybeDoCompatibilityRedirect();\n            add_action('admin_notices', [$this, 'compatibilityMessage'], 0);\n        }\n    }\n\n    \/**\n     * @param Manager $manager\n     *\n     * @return void\n     *\/\n    public function setManager(Manager $manager): void\n    {\n        $this->manager = $manager;\n    }\n\n    \/**\n     * @param WP_Admin_Bar $bar\n     *\n     * @return void\n     *\/\n    public function modifyAdminBar(WP_Admin_Bar $bar): void\n    {\n        if (!is_user_logged_in()){\n            return;\n        }\n\n        $menu_items = apply_filters('hostinger_admin_menu_bar_items', []);\n\n        if (!empty($menu_items)) {\n            $hostinger_icon = '<svg width=\"28\" height=\"29\" viewBox=\"0 0 28 29\" fill=\"#9ca1a7\" style=\"margin-right: 6px; max-height: 22px; float: left; margin-top: 4px;\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1.8669 13.6096V0.500465L8.48322 4.02842V9.93472L17.2419 9.93895L23.9655 13.6096H1.8669ZM19.033 8.85388V0.5L25.8277 3.94018V12.801L19.033 8.85388ZM19.033 24.8765V19.0211L10.2067 19.015C10.215 19.054 3.37149 15.2857 3.37149 15.2857L25.8277 15.3911V28.5L19.033 24.8765ZM1.86667 24.8765L1.8669 16.31L8.48322 20.1637V28.3164L1.86667 24.8765Z\" fill=\"\" \/>\n\t\t\t<\/svg>';\n\n            $bar->add_menu([\n                'id'     => 'hostinger_admin_bar',\n                'parent' => null,\n                'group'  => null,\n                'title'  => $hostinger_icon . esc_html__('Hostinger', 'hostinger-wp-menu-package'),\n            ]);\n\n\t        foreach ($menu_items as $menu_item) {\n\t\t        $menu_item_data = [\n\t\t\t        'id'     => $menu_item['id'],\n\t\t\t        'parent' => 'hostinger_admin_bar',\n\t\t\t        'group'  => null,\n\t\t\t        'title'  => $menu_item['title'],\n\t\t\t        'href'   => $menu_item['href'],\n\t\t        ];\n\n\t\t        if( isset( $menu_item['meta'] ) ){\n\t\t\t        $menu_item_data['meta'] = $menu_item['meta'];\n\t\t        }\n\n\t\t        $bar->add_menu($menu_item_data);\n\t        }\n        }\n    }\n\n    \/**\n     * @param mixed $classes\n     *\n     * @return mixed\n     *\/\n    public function addMenuClass(mixed $classes): mixed\n    {\n\n        if (!is_string( $classes)) return $classes;\n\n        $classes .= ' hostinger-hide-main-menu-item';\n\n        if (!empty(self::isSubmenuItemsHidden())) {\n            $classes .= ' hostinger-hide-all-menu-items';\n        }\n\n        return $classes;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function registerAdminMenu(): bool\n    {\n        $submenus = self::getMenuSubpages();\n\n        if (empty($submenus)) {\n            return false;\n        }\n\n        $icon = 'data:image\/svg+xml;base64,PHN2ZyB3aWR0aD0iMjEiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyMSAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0wLjAwMDE5OTY1MyAxMS4yMzY4VjAuMDAwMzk4MjM1TDUuNjcxMzMgMy4wMjQzNlY4LjA4NjkxTDEzLjE3ODggOC4wOTA1M0wxOC45NDE5IDExLjIzNjhIMC4wMDAxOTk2NTNaTTE0LjcxNCA3LjE2MDQ3VjBMMjAuNTM4IDIuOTQ4NzJWMTAuNTQzN0wxNC43MTQgNy4xNjA0N1pNMTQuNzE0IDIwLjg5NDJWMTUuODc1M0w3LjE0ODYyIDE1Ljg3QzcuMTU1NjggMTUuOTAzNCAxLjI4OTg0IDEyLjY3MzUgMS4yODk4NCAxMi42NzM1TDIwLjUzOCAxMi43NjM4VjI0TDE0LjcxNCAyMC44OTQyWk0wIDIwLjg5NDFMMC4wMDAyMDE3NjkgMTMuNTUxNEw1LjY3MTMzIDE2Ljg1NDZWMjMuODQyN0wwIDIwLjg5NDFaIiBmaWxsPSJ3aGl0ZSIvPgo8L3N2Zz4K';\n\n        add_menu_page(\n            __('Hostinger', 'hostinger-wp-menu-package'),\n            __('Hostinger', 'hostinger-wp-menu-package'),\n            'edit_posts',\n            self::MENU_SLUG,\n            [$this, 'render'],\n            $icon,\n            1\n        );\n\n        $this->registerSubMenus();\n\n        return true;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function render(): void\n    {\n        if ($this->hasLoadedMainContent() && !empty(self::isSubmenuItemsHidden())) {\n            do_action('hostinger_main_menu_content');\n        } else {\n            $submenus = self::getMenuSubpages();\n\n            if (!empty($submenus)) {\n                call_user_func($submenus[0]['callback']);\n            }\n        }\n    }\n\n    \/**\n     * @return void\n     *\/\n    public static function renderMenuNavigation(): string\n    {\n        ob_start();\n\n        require_once __DIR__ . DIRECTORY_SEPARATOR . 'templates' . DIRECTORY_SEPARATOR . 'menu.php';\n\n        $content = ob_get_contents();\n\n        ob_end_clean();\n\n        return $content;\n    }\n\n    \/**\n     * @return array\n     *\/\n    public static function getMenuSubpages(): array\n    {\n        return apply_filters('hostinger_menu_subpages', []);\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public static function isSubmenuItemsHidden(): bool\n    {\n        return !empty(get_option('hostinger_hide_subpages'));\n    }\n\n    \/**\n     * @return bool\n     *\/\n    private function hasLoadedMainContent(): bool\n    {\n        return has_action('hostinger_main_menu_content');\n    }\n\n    \/**\n     * @return bool\n     *\/\n    private function registerSubMenus(): bool\n    {\n        $submenus = self::getMenuSubpages();\n\n        if (empty($submenus)) {\n            return false;\n        }\n\n        foreach ($submenus as $submenu) {\n            add_submenu_page(\n                self::MENU_SLUG,\n                $submenu['page_title'],\n                $submenu['menu_title'],\n                $submenu['capability'],\n                $submenu['menu_slug'],\n                $submenu['callback'],\n                $submenu['menu_order']\n            );\n        }\n\n        return true;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function compatibilityMessage(): void\n    {\n        ?>\n        <div class=\"notice notice-error is-dismissible hts-theme-settings\">\n            <p>\n                <strong><?php echo __('Attention! Outdated Plugins Detected', 'hostinger-wp-menu-package') ?><\/strong>\n            <\/p>\n            <p>\n                <strong><?php echo __('Action Required:', 'hostinger-wp-menu-package') ?><\/strong> <?php echo __('Your website has some outdated plugins that might prevent new features from working properly.', 'hostinger-wp-menu-package') ?>\n            <\/p>\n\n                <ul style=\"list-style: circle;margin-left: 18px;\">\n                <?php\n\n                if (!empty($this->manager->getOutdatedPlugins())) {\n                    ?>\n                    <li>\n                        <p><?php echo __('Outdated plugins:', 'hostinger-wp-menu-package') ?> <?php echo implode(', ', $this->manager->getOutdatedPlugins()); ?><\/p>\n                    <\/li>\n                    <?php\n                }\n\n                if (!empty($this->manager->getAffectedActivePlugins())) {\n                    ?>\n                    <li>\n                        <p><?php echo __('Affected plugins:', 'hostinger-wp-menu-package') ?> <?php echo implode(', ', $this->manager->getAffectedActivePlugins()); ?><\/p>\n                    <\/li>\n                    <?php\n                }\n\n                ?>\n            <\/ul>\n            <p>\n                <a href=\"<?php echo esc_url(admin_url('update-core.php')); ?>\" class=\"button-primary\">\n                    <?php echo __('Update plugins', 'hostinger-wp-menu-package') ?>\n                <\/a>\n            <\/p>\n        <\/div>\n        <?php\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/Manager.php","ext":"php","size":6295,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpMenuManager;\n\nclass Manager\n{\n    \/**\n     * @var Manager instance.\n     *\/\n    private static ?Manager $instance = null;\n\n    \/**\n     * @var array\n     *\/\n    private array $objects = [];\n\n    \/**\n     * @var array\n     *\/\n    public array $old_plugins = [\n        [\n            'name' => 'Hostinger',\n            'slug' => 'hostinger',\n            'version' => '3.0.0',\n        ],\n        [\n            'name' => 'Hostinger Affiliate Plugin',\n            'slug' => 'hostinger-affiliate-plugin',\n            'version' => '2.0.0',\n        ],\n        [\n            'name' => 'Hostinger AI Assistant',\n            'slug' => 'hostinger-ai-assistant',\n            'version' => '2.0.0',\n        ]\n    ];\n\n    \/**\n     * @var array\n     *\/\n    public array $outdated_plugins = [];\n\n    \/**\n     * @var array\n     *\/\n    public array $affected_plugins = [\n        'hostinger' => 'Hostinger Tools',\n        'hostinger-affiliate-plugin' => 'Hostinger Affiliate Connector',\n        'hostinger-ai-assistant' => 'Hostinger AI',\n        'hostinger-easy-onboarding' => 'Hostinger Easy Onboarding',\n    ];\n\n    \/**\n     * Allow only one instance of class\n     *\n     * @return self\n     *\/\n    public static function getInstance(): self\n    {\n        if (null === self::$instance) {\n            self::$instance = new self();\n        }\n\n        return self::$instance;\n    }\n\n    \/**\n     * @return array|string[]\n     *\/\n    public function getOutdatedPlugins(): array\n    {\n        return $this->outdated_plugins;\n    }\n\n    \/**\n     * @return array\n     *\/\n    public function getAffectedActivePlugins(): array\n    {\n        include_once(ABSPATH . 'wp-admin\/includes\/plugin.php');\n\n        $plugins = [];\n\n        if (empty($this->getAffectedPlugins())) {\n            return [];\n        }\n\n        foreach ($this->getAffectedPlugins() as $plugin_slug => $plugin_name) {\n            if (\\is_plugin_active($plugin_slug . DIRECTORY_SEPARATOR . $plugin_slug . '.php')) {\n                $plugins[$plugin_slug] = $plugin_name;\n            }\n        }\n\n        return $plugins;\n    }\n\n    \/**\n     * @return array|string[]\n     *\/\n    public function getAffectedPlugins(): array\n    {\n        return $this->affected_plugins;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function boot(): bool\n    {\n        \/\/ Locale.\n        $this->loadTextDomain();\n\n        \/\/ Modules.\n        $this->registerModules();\n\n        return true;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function registerModules(): void\n    {\n        \/\/ Assets.\n        $this->objects['assets'] = new Assets();\n\n        \/\/ Menus.\n        $this->objects['menus'] = new Menus();\n\n        $this->addContainer();\n\n        \/\/ Init after container is added.\n        $this->objects['assets']->init();\n        $this->objects['menus']->init();\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function addContainer(): bool\n    {\n        if (empty($this->objects)) {\n            return false;\n        }\n\n        foreach ($this->objects as $object) {\n            if (property_exists($object, 'manager')) {\n                $object->setManager($this);\n            }\n        }\n\n        return true;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getPluginInfo(): string\n    {\n        $plugin_url = '';\n\n        $plugins = get_plugins();\n        foreach ($plugins as $plugin_path => $plugin_info) {\n            if (str_contains(__FILE__, 'plugins\/' . dirname($plugin_path) . '\/')) {\n                $plugin_dir = dirname($plugin_path);\n\n                return plugins_url($plugin_dir);\n            }\n        }\n\n        return $plugin_url;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function loadTextDomain(): void\n    {\n        load_plugin_textdomain(\n            'hostinger-wp-menu-package',\n            false,\n            dirname(dirname(plugin_basename(__FILE__))) . '\/languages\/'\n        );\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function checkCompatibility(): bool\n    {\n        $outdated_plugins = false;\n\n        if (empty($this->old_plugins)) {\n            return false;\n        }\n\n        foreach ($this->old_plugins as $plugin_data) {\n            if ($this->checkOutdatedPluginVersion($plugin_data['slug'], $plugin_data['version'])) {\n                $outdated_plugins = true;\n                $this->outdated_plugins[$plugin_data['slug']] = $plugin_data['name'];\n            }\n        }\n\n        return $outdated_plugins;\n    }\n\n    \/**\n     * If main hostinger plugin is outdated\n     *\n     * @return false\n     *\/\n    public function maybeDoCompatibilityRedirect(): bool\n    {\n        include_once(ABSPATH . 'wp-admin\/includes\/plugin.php');\n\n        $plugin_name = 'hostinger';\n        $current_uri = !empty($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '';\n\n        $plugin = current(array_filter($this->old_plugins, fn($p) => $p['slug'] === $plugin_name));\n\n        $hostinger_admin_url = parse_url(admin_url('admin.php?page=hostinger'), PHP_URL_PATH) . '?page=hostinger';\n\n        if (str_contains($current_uri, $hostinger_admin_url)) {\n            if (!$this->checkOutdatedPluginVersion($plugin['slug'], $plugin['version'])) {\n                wp_redirect(get_admin_url());\n                die();\n            }\n        }\n\n        return true;\n    }\n\n    \/**\n     * @param $plugin_name\n     *\n     * @return string\n     *\/\n    private function getPluginVersion($plugin_name): string\n    {\n        $version = get_file_data(WP_PLUGIN_DIR . DIRECTORY_SEPARATOR . $plugin_name . DIRECTORY_SEPARATOR . $plugin_name . '.php', array('Version'), 'plugin');\n\n        if (empty($version[0])) {\n            return '';\n        }\n\n        return $version[0];\n    }\n\n    \/**\n     * @param $plugin_name\n     * @param $compare_version\n     *\n     * @return bool\n     *\/\n    private function checkOutdatedPluginVersion($plugin_name, $compare_version): bool\n    {\n        include_once(ABSPATH . 'wp-admin\/includes\/plugin.php');\n\n        if (!\\is_plugin_active($plugin_name . DIRECTORY_SEPARATOR . $plugin_name . '.php')) {\n            return false;\n        }\n\n        $version = $this->getPluginVersion($plugin_name);\n\n        if (empty($version)) {\n            return false;\n        }\n\n        return version_compare($version, $compare_version, '<');\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/Assets.php","ext":"php","size":4734,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpMenuManager;\n\nuse Hostinger\\WpMenuManager\\Menus;\nuse Hostinger\\WpHelper\\Utils;\n\nclass Assets\n{\n    \/**\n     * @var Manager\n     *\/\n    private Manager $manager;\n    private string $assetsPath;\n\n    \/**\n     * @return void\n     *\/\n    public function init(): void\n    {\n        if (!$this->manager->checkCompatibility()) {\n            add_action('admin_enqueue_scripts', [$this, 'enqueueAdminAssets']);\n            add_action('admin_head', [$this, 'addMenuHidingCss']);\n        }\n        $this->assetsPath = '\/vendor\/hostinger\/hostinger-wp-menu-manager\/assets';\n    }\n\n    \/**\n     * @param Manager $manager\n     *\n     * @return void\n     *\/\n    public function setManager(Manager $manager): void\n    {\n        $this->manager = $manager;\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function enqueueAdminAssets(): void {\n        $defaultVersion = '1.0.0';\n\n        if ( $this->isHostingerMenuPage() ) {\n            $pluginInfo   = $this->manager->getPluginInfo();\n            $jsScriptPath = __DIR__ . '\/..\/assets\/js\/menus.min.js';\n            $cssStylePath = __DIR__ . '\/..\/assets\/css\/style.min.css';\n\n            $jsVersion = $defaultVersion;\n            if (file_exists($jsScriptPath)) {\n                $jsVersion = filemtime($jsScriptPath) ?: $jsVersion;\n            }\n\n            wp_enqueue_script( 'hostinger_menu_scripts',\n                $pluginInfo . $this->assetsPath . '\/js\/menus.min.js',\n                [ 'jquery' ],\n                $jsVersion,\n                false\n            );\n\n            $cssVersion = $defaultVersion;\n            if (file_exists($cssStylePath)) {\n                $cssVersion = filemtime($cssStylePath) ?: $cssVersion;\n            }\n\n            wp_enqueue_style( 'hostinger_menu_styles',\n                $pluginInfo . $this->assetsPath . '\/css\/style.min.css',\n                [],\n                $cssVersion\n            );\n\n            \/\/ Hide notices and badges in Hostinger menu pages.\n            $hide_notices = '.notice { display: none !important; } .hostinger-notice { display: block !important; }';\n            wp_add_inline_style( 'hostinger_menu_styles', $hide_notices );\n\n            if ( Utils::isPluginActive( 'wpforms' ) ) {\n                $hide_wp_forms_counter = '.wp-admin #wpadminbar .wpforms-menu-notification-counter { display: none !important; }';\n                wp_add_inline_style( 'hostinger_menu_styles', $hide_wp_forms_counter );\n            }\n            if ( Utils::isPluginActive( 'googleanalytics' ) ) {\n                $hide_monsterinsights_notification = '.wp-admin .monsterinsights-menu-notification-indicator { display: none !important; }';\n                wp_add_inline_style( 'hostinger_menu_styles', $hide_monsterinsights_notification );\n            }\n        }\n    }\n\n    \/**\n     * @return void\n     *\/\n    public function addMenuHidingCss(): void\n    {\n        \/\/ These CSS rules should be loaded on every page in WordPress admin.\n        ?>\n        <style type=\"text\/css\">\n            body.hostinger-hide-main-menu-item #toplevel_page_hostinger .wp-submenu > .wp-first-item {\n                display: none;\n            }\n\n            #wpadminbar #wp-admin-bar-hostinger_admin_bar .ab-item {\n                align-items: center;\n                display: flex;\n            }\n\n            #wpadminbar #wp-admin-bar-hostinger_admin_bar .ab-sub-wrapper .ab-item svg {\n                fill: #9ca1a7;\n                margin-left: 3px;\n                max-height: 18px;\n            }\n\n            body.hostinger-hide-all-menu-items #toplevel_page_hostinger .wp-submenu {\n                display: none !important;\n            }\n\n            body.hostinger-hide-all-menu-items .hsr-onboarding-navbar__wrapper {\n                justify-content: center;\n            }\n\n            body.hostinger-hide-all-menu-items .hsr-onboarding-navbar .hsr-mobile-menu-icon,\n            body.hostinger-hide-all-menu-items .hsr-onboarding-navbar .hsr-wrapper__list {\n                display: none !important;\n            }\n        <\/style>\n        <?php\n    }\n\n    \/**\n     * @return bool\n     *\/\n    private function isHostingerMenuPage(): bool\n    {\n        $admin_path = parse_url(admin_url(), PHP_URL_PATH);\n\n        $pages = [\n            $admin_path . 'admin.php?page=' . Menus::MENU_SLUG\n        ];\n\n        $subpages = Menus::getMenuSubpages();\n\n        foreach ($subpages as $page) {\n            if (isset($page['menu_slug'])) {\n                $pages[] = $admin_path . 'admin.php?page=' . $page['menu_slug'];\n            }\n        }\n\n        $utils = new Utils();\n\n        foreach ($pages as $page) {\n            if ($utils->isThisPage($page)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-menu-manager\/composer.json","ext":"json","size":719,"mtime":1756373567,"type":"text","content":"{\n  \"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"git@github.com:hostinger\/hostinger-wp-helper.git\"\n    }\n  ],\n  \"name\": \"hostinger\/hostinger-wp-menu-manager\",\n  \"description\": \"Package for managing Hostinger WordPress menus and pages.\",\n  \"license\": \"proprietary\",\n  \"type\": \"library\",\n  \"require\": {\n    \"hostinger\/hostinger-wp-helper\": \"^1.0\"\n  },\n  \"require-dev\": {\n    \"squizlabs\/php_codesniffer\": \"^3.0\",\n    \"phpunit\/phpunit\": \"^9.6\",\n    \"yoast\/phpunit-polyfills\": \"^2.0\"\n  },\n  \"autoload\": {\n    \"psr-4\": {\n      \"Hostinger\\\\WpMenuManager\\\\\": \"src\/\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Hostinger\\\\WpMenuManager\\\\Tests\\\\\": \"tests\/phpunit\"\n    }\n  },\n  \"minimum-stability\": \"dev\"\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-helper\/src\/Utils.php","ext":"php","size":7142,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpHelper;\n\nclass Utils {\n\n\tprivate static string $apiTokenFile;\n\n\tprivate const HPANEL_DOMAIN_URL = 'https:\/\/hpanel.hostinger.com\/websites\/';\n\tprivate const HOSTINGER_SITE = '.hostingersite.com';\n\n\tprivate static function getApiTokenPath(): void {\n\t\t$hostingerDirParts = explode( '\/', __DIR__ );\n\t\tif ( count( $hostingerDirParts ) >= 3 ) {\n\t\t\t$hostingerServerRootPath = '\/' . $hostingerDirParts[1] . '\/' . $hostingerDirParts[2];\n\t\t\tself::$apiTokenFile      = $hostingerServerRootPath . '\/.api_token';\n\t\t}\n\t}\n\n    \/**\n     * @param string $pluginSlug\n     *\n     * @return bool\n     *\/\n\t\/\/ Check if a specific plugin is active by its slug\n    public static function isPluginActive( string $pluginSlug ): bool {\n        $plugin_relative_path = $pluginSlug . '\/' . $pluginSlug . '.php';\n\n        if ( is_multisite() ) {\n            return self::checkIsPluginActiveMultiSite( $plugin_relative_path );\n        }\n\n        return self::checkIsPluginActive( $plugin_relative_path );\n    }\n\n    \/**\n     * @param string $plugin_relative_path\n     *\n     * @return bool\n     *\/\n    public static function checkIsPluginActiveMultiSite( string $plugin_relative_path ): bool {\n        \/\/ Check network-wide active plugins\n        $activePlugins = get_site_option( 'active_sitewide_plugins', [] );\n        if ( in_array( $plugin_relative_path, $activePlugins ) ) {\n            return true;\n        }\n\n        \/\/ Check each site in the network\n        $sites = get_sites();\n        foreach ( $sites as $site ) {\n            switch_to_blog( $site->blog_id );\n            $activePlugins = get_option( 'active_plugins', [] );\n            if ( in_array( $plugin_relative_path, $activePlugins ) ) {\n                restore_current_blog();\n\n                return true;\n            }\n            restore_current_blog();\n        }\n\n        return false;\n    }\n\n    \/**\n     * @param string $plugin_relative_path\n     *\n     * @return bool\n     *\/\n    public static function checkIsPluginActive( string $plugin_relative_path ): bool {\n        \/\/ Check active plugins in a single site\n        $activePlugins = get_option( 'active_plugins', [] );\n\n        if ( in_array( $plugin_relative_path, $activePlugins ) ) {\n            return true;\n        }\n\n        return false;\n    }\n\n\t\/\/ Get the content of the API token file\n\tpublic static function getApiToken(): string {\n\t\tself::getApiTokenPath();\n\n\t\tif ( file_exists( self::$apiTokenFile ) ) {\n\t\t\t$apiToken = file_get_contents( self::$apiTokenFile );\n\t\t\tif ( ! empty( $apiToken ) ) {\n\t\t\t\treturn $apiToken;\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/\/ Get the host info (domain, subdomain, subdirectory)\n\tpublic function getHostInfo(): string {\n\t\t$host     = $_SERVER['HTTP_HOST'] ?? '';\n\t\t$site_url = get_site_url();\n\t\t$site_url = preg_replace( '#^https?:\/\/#', '', $site_url );\n\t\t$site_url = preg_replace( '\/^www\\.\/', '', $site_url );\n\t\t\n\t\tif ( ! empty( $site_url ) && ! empty( $host ) && strpos( $site_url, $host ) === 0 ) {\n\t\t\tif ( $site_url === $host ) {\n\t\t\t\treturn $host;\n\t\t\t} else {\n\t\t\t\treturn substr( $site_url, strlen( $host ) + 1 );\n\t\t\t}\n\t\t}\n\n\t\treturn $host;\n\t}\n\n\t\/\/ Check if the current domain is a preview domain\n\tpublic function isPreviewDomain(): bool {\n\t\tif ( function_exists( 'getallheaders' ) ) {\n\t\t\t$headers = getallheaders();\n\t\t}\n\n\t\tif ( isset( $headers['X-Preview-Indicator'] ) && $headers['X-Preview-Indicator'] ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/\/ Check if the current page is the specified page\n\tpublic function isThisPage( string $page ): bool {\n\n\t\tif ( ! isset( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$current_uri = sanitize_text_field( $_SERVER['REQUEST_URI'] );\n\n\t\tif ( defined( 'DOING_AJAX' ) && \\DOING_AJAX ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( isset( $current_uri ) && strpos( $current_uri, '\/wp-json\/' ) !== false ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( strpos( $current_uri, $page ) !== false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/\/ Get hPanel domain URL\n    public function getHpanelDomainUrl() : string {\n        $parsed_url = parse_url( get_site_url() );\n        $host       = $parsed_url['host'];\n        $directory  = __DIR__;\n\n        \/\/ Remove 'www.' if it exists in the host\n        if ( strpos( $host, 'www.' ) === 0 ) {\n            $host = substr( $host, 4 );\n        }\n\n        \/\/ Parse the host into parts\n        $host_parts   = explode( '.', $host );\n        $is_subdomain = count( $host_parts ) > 2;\n\n        \/\/ Helper to get the base domain (last two parts)\n        $base_domain = implode( '.', array_slice( $host_parts, -2 ) );\n\n        \/\/ System folders to ignore\n        $system_folders = [ 'wp-content', 'plugins', 'themes', 'uploads' ];\n\n        \/\/ Detect if there is a subdirectory immediately after 'public_html'\n        $subdirectory_name = '';\n        if ( preg_match( '\/\\\/public_html\\\/([^\\\/]+)\\\/\/', $directory, $matches ) && ! in_array( $matches[1], $system_folders ) ) {\n            $subdirectory_name = $matches[1];\n        }\n\n        \/\/ Handle preview domains\n        if ( $this->isPreviewDomain() ) {\n            $host_parts  = explode( '.', $host );\n            $base_domain = str_replace( '-', '.', $host_parts[0] );\n\n            return self::HPANEL_DOMAIN_URL . \"$base_domain.\" . end( $host_parts );\n        }\n\n        \/\/ Handle subdomain with a directory structure\n        if ( $subdirectory_name !== '' ) {\n            $full_domain = \"$subdirectory_name.$base_domain\";\n\n            return self::HPANEL_DOMAIN_URL . \"$base_domain\/wordpress\/dashboard\/$full_domain\";\n        }\n\n        \/\/ Handle top-level subdomain (no subdirectory structure)\n        if ( $is_subdomain ) {\n            return self::HPANEL_DOMAIN_URL . \"$host\";\n        }\n\n        \/\/ Default to handling top-level domains (without subdomains)\n        return self::HPANEL_DOMAIN_URL . \"$host\";\n    }\n\n\t\/\/ Check transient eligibility\n\tpublic function checkTransientEligibility( $transient_request_key, $cache_time = 3600 ): bool {\n\t\ttry {\n\t\t\t\/\/ Set transient\n\t\t\tset_transient( $transient_request_key, true, $cache_time );\n\n\t\t\t\/\/ Check if transient was set successfully\n\t\t\tif ( false === get_transient( $transient_request_key ) ) {\n\t\t\t\tthrow new \\Exception( 'Unable to create transient in WordPress.' );\n\t\t\t}\n\n\t\t\t\/\/ If everything is fine, return true\n\t\t\treturn true;\n\t\t} catch ( \\Exception $exception ) {\n\t\t\t\/\/ If there's an exception, log the error and return false\n\t\t\t$this->errorLog( 'Error checking eligibility: ' . $exception->getMessage() );\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic function errorLog( string $message ): void {\n\t\tif ( defined( 'WP_DEBUG' ) && \\WP_DEBUG === true ) {\n\t\t\terror_log( print_r( $message, true ) );\n\t\t}\n\t}\n\n\tpublic static function getSetting( string $setting ): string {\n\n\t\tif ( $setting ) {\n\t\t\treturn get_option( 'hostinger_' . $setting, '' );\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tpublic static function updateSetting( string $setting, $value, $autoload = null ): void {\n\n\t\tif ( $setting ) {\n\t\t\tupdate_option( 'hostinger_' . $setting, $value, $autoload );\n\t\t}\n\t}\n\n    public static function flushLitespeedCache(): void {\n        if ( has_action( 'litespeed_purge_all' ) ) {\n            do_action( 'litespeed_purge_all' );\n        }\n    }\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-helper\/src\/Constants.php","ext":"php","size":328,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpHelper;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Constants {\n\tpublic const TOKEN_HEADER  = 'X-Hpanel-Order-Token';\n\tpublic const DOMAIN_HEADER = 'X-Hpanel-Domain';\n\tpublic const HOSTINGER_REST_URI = 'https:\/\/rest-hosting.hostinger.com';\n\tpublic const CONFIG_PATH = ABSPATH . '.private\/config.json';\n\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-helper\/src\/Config.php","ext":"php","size":796,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpHelper;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Config {\n\tprivate array $config      = array();\n\tpublic const TOKEN_HEADER  = 'X-Hpanel-Order-Token';\n\tpublic const DOMAIN_HEADER = 'X-Hpanel-Domain';\n\tpublic const CONFIG_PATH = ABSPATH . '.private\/config.json';\n\tpublic function __construct() {\n\t\t$this->decodeConfig( self::CONFIG_PATH );\n\t}\n\n\tprivate function decodeConfig( string $path ): void {\n\t\tif ( file_exists( $path ) ) {\n\t\t\t$config_content = file_get_contents( $path );\n\t\t\t$this->config   = json_decode( $config_content, true );\n\t\t}\n\t}\n\n\tpublic function getConfigValue( string $key, $default ): string {\n\t\tif ( $this->config && isset( $this->config[ $key ] ) && ! empty( $this->config[ $key ] ) ) {\n\t\t\treturn $this->config[ $key ];\n\t\t}\n\n\t\treturn $default;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-helper\/src\/Requests\/Client.php","ext":"php","size":1726,"mtime":1756373567,"type":"text","content":"<?php\n\nnamespace Hostinger\\WpHelper\\Requests;\n\ndefined( 'ABSPATH' ) || exit;\n\nclass Client {\n    private string $api_url;\n    private array $default_headers;\n\n    public function __construct( $api_url, $default_headers = array() ) {\n        $this->api_url         = $api_url;\n        $this->default_headers = $default_headers;\n    }\n\n    public function get_api_url(): string {\n        return $this->api_url;\n    }\n\n    public function set_api_url( string $api_url ): void {\n        $this->api_url = $api_url;\n    }\n\n    public function get_default_headers(): array {\n        return $this->default_headers;\n    }\n\n    public function set_default_headers( array $default_headers ): void {\n        $this->default_headers = $default_headers;\n    }\n\n    public function get( $endpoint, $params = array(), $headers = array(), $timeout = 120 ) {\n        $url          = $this->api_url . $endpoint;\n        $request_args = array(\n            'method'  => 'GET',\n            'headers' => array_merge( $this->default_headers, $headers ),\n            'timeout' => $timeout,\n        );\n\n        if ( ! empty( $params ) ) {\n            $url = add_query_arg( $params, $url );\n        }\n\n        $response = wp_remote_get( $url, $request_args );\n\n        return $response;\n    }\n\n    public function post( $endpoint, $params = array(), $headers = array(), $timeout = 120 ) {\n        $url          = $this->api_url . $endpoint;\n        $request_args = array(\n            'method'  => 'POST',\n            'timeout' => $timeout,\n            'headers' => array_merge( $this->default_headers, $headers ),\n            'body'    => $params,\n        );\n\n        $response = wp_remote_post( $url, $request_args );\n\n        return $response;\n    }\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/hostinger\/hostinger-wp-helper\/composer.json","ext":"json","size":408,"mtime":1756373567,"type":"text","content":"{\n\t\"name\": \"hostinger\/hostinger-wp-helper\",\n\t\"description\": \"A PHP package with core functions for Hostinger WordPress plugins.\",\n\t\"type\": \"library\",\n\t\"require\": {\n\t\t\"php\": \">=8.0\",\n\t\t\"ext-json\": \"*\"\n    },\n\t\"autoload\": {\n\t\t\"psr-4\": {\n\t\t\t\"Hostinger\\\\WpHelper\\\\\": \"src\/\",\n\t\t\t\"Hostinger\\\\Tests\\\\\": \"tests\/phpunit\"\n\t\t}\n\t},\n\t\"require-dev\": {\n\t\t\"phpunit\/phpunit\": \"^9.6\",\n\t\t\"yoast\/phpunit-polyfills\": \"^2.0\"\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-container.php","ext":"php","size":4921,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class manages the files and dependencies of the autoloader.\n *\/\nclass Container {\n\n\t\/**\n\t * Since each autoloader's class files exist within their own namespace we need a map to\n\t * convert between the local class and a shared key. Note that no version checking is\n\t * performed on these dependencies and the first autoloader to register will be the\n\t * one that is utilized.\n\t *\/\n\tconst SHARED_DEPENDENCY_KEYS = array(\n\t\tHook_Manager::class => 'Hook_Manager',\n\t);\n\n\t\/**\n\t * A map of all the dependencies we've registered with the container and created.\n\t *\n\t * @var array\n\t *\/\n\tprotected $dependencies;\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->dependencies = array();\n\n\t\t$this->register_shared_dependencies();\n\t\t$this->register_dependencies();\n\t\t$this->initialize_globals();\n\t}\n\n\t\/**\n\t * Gets a dependency out of the container.\n\t *\n\t * @param string $class The class to fetch.\n\t *\n\t * @return mixed\n\t * @throws \\InvalidArgumentException When a class that isn't registered with the container is fetched.\n\t *\/\n\tpublic function get( $class ) {\n\t\tif ( ! isset( $this->dependencies[ $class ] ) ) {\n\t\t\tthrow new \\InvalidArgumentException( \"Class '$class' is not registered with the container.\" );\n\t\t}\n\n\t\treturn $this->dependencies[ $class ];\n\t}\n\n\t\/**\n\t * Registers all of the dependencies that are shared between all instances of the autoloader.\n\t *\/\n\tprivate function register_shared_dependencies() {\n\t\tglobal $jetpack_autoloader_container_shared;\n\t\tif ( ! isset( $jetpack_autoloader_container_shared ) ) {\n\t\t\t$jetpack_autoloader_container_shared = array();\n\t\t}\n\n\t\t$key = self::SHARED_DEPENDENCY_KEYS[ Hook_Manager::class ];\n\t\tif ( ! isset( $jetpack_autoloader_container_shared[ $key ] ) ) {\n\t\t\trequire_once __DIR__ . '\/class-hook-manager.php';\n\t\t\t$jetpack_autoloader_container_shared[ $key ] = new Hook_Manager();\n\t\t}\n\t\t$this->dependencies[ Hook_Manager::class ] = &$jetpack_autoloader_container_shared[ $key ];\n\t}\n\n\t\/**\n\t * Registers all of the dependencies with the container.\n\t *\/\n\tprivate function register_dependencies() {\n\t\trequire_once __DIR__ . '\/class-path-processor.php';\n\t\t$this->dependencies[ Path_Processor::class ] = new Path_Processor();\n\n\t\trequire_once __DIR__ . '\/class-plugin-locator.php';\n\t\t$this->dependencies[ Plugin_Locator::class ] = new Plugin_Locator(\n\t\t\t$this->get( Path_Processor::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-version-selector.php';\n\t\t$this->dependencies[ Version_Selector::class ] = new Version_Selector();\n\n\t\trequire_once __DIR__ . '\/class-autoloader-locator.php';\n\t\t$this->dependencies[ Autoloader_Locator::class ] = new Autoloader_Locator(\n\t\t\t$this->get( Version_Selector::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-php-autoloader.php';\n\t\t$this->dependencies[ PHP_Autoloader::class ] = new PHP_Autoloader();\n\n\t\trequire_once __DIR__ . '\/class-manifest-reader.php';\n\t\t$this->dependencies[ Manifest_Reader::class ] = new Manifest_Reader(\n\t\t\t$this->get( Version_Selector::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-plugins-handler.php';\n\t\t$this->dependencies[ Plugins_Handler::class ] = new Plugins_Handler(\n\t\t\t$this->get( Plugin_Locator::class ),\n\t\t\t$this->get( Path_Processor::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-autoloader-handler.php';\n\t\t$this->dependencies[ Autoloader_Handler::class ] = new Autoloader_Handler(\n\t\t\t$this->get( PHP_Autoloader::class ),\n\t\t\t$this->get( Hook_Manager::class ),\n\t\t\t$this->get( Manifest_Reader::class ),\n\t\t\t$this->get( Version_Selector::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-latest-autoloader-guard.php';\n\t\t$this->dependencies[ Latest_Autoloader_Guard::class ] = new Latest_Autoloader_Guard(\n\t\t\t$this->get( Plugins_Handler::class ),\n\t\t\t$this->get( Autoloader_Handler::class ),\n\t\t\t$this->get( Autoloader_Locator::class )\n\t\t);\n\n\t\t\/\/ Register any classes that we will use elsewhere.\n\t\trequire_once __DIR__ . '\/class-version-loader.php';\n\t\trequire_once __DIR__ . '\/class-shutdown-handler.php';\n\t}\n\n\t\/**\n\t * Initializes any of the globals needed by the autoloader.\n\t *\/\n\tprivate function initialize_globals() {\n\t\t\/*\n\t\t * This global was retired in version 2.9. The value is set to 'false' to maintain\n\t\t * compatibility with older versions of the autoloader.\n\t\t *\/\n\t\tglobal $jetpack_autoloader_including_latest;\n\t\t$jetpack_autoloader_including_latest = false;\n\n\t\t\/\/ Not all plugins can be found using the locator. In cases where a plugin loads the autoloader\n\t\t\/\/ but was not discoverable, we will record them in this array to track them as \"active\".\n\t\tglobal $jetpack_autoloader_activating_plugins_paths;\n\t\tif ( ! isset( $jetpack_autoloader_activating_plugins_paths ) ) {\n\t\t\t$jetpack_autoloader_activating_plugins_paths = array();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-plugin-locator.php","ext":"php","size":4628,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class scans the WordPress installation to find active plugins.\n *\/\nclass Plugin_Locator {\n\n\t\/**\n\t * The path processor for finding plugin paths.\n\t *\n\t * @var Path_Processor\n\t *\/\n\tprivate $path_processor;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Path_Processor $path_processor The Path_Processor instance.\n\t *\/\n\tpublic function __construct( $path_processor ) {\n\t\t$this->path_processor = $path_processor;\n\t}\n\n\t\/**\n\t * Finds the path to the current plugin.\n\t *\n\t * @return string $path The path to the current plugin.\n\t *\n\t * @throws \\RuntimeException If the current plugin does not have an autoloader.\n\t *\/\n\tpublic function find_current_plugin() {\n\t\t\/\/ Escape from `vendor\/__DIR__` to root plugin directory.\n\t\t$plugin_directory = dirname( __DIR__, 2 );\n\n\t\t\/\/ Use the path processor to ensure that this is an autoloader we're referencing.\n\t\t$path = $this->path_processor->find_directory_with_autoloader( $plugin_directory, array() );\n\t\tif ( false === $path ) {\n\t\t\tthrow new \\RuntimeException( 'Failed to locate plugin ' . $plugin_directory );\n\t\t}\n\n\t\treturn $path;\n\t}\n\n\t\/**\n\t * Checks a given option for plugin paths.\n\t *\n\t * @param string $option_name  The option that we want to check for plugin information.\n\t * @param bool   $site_option  Indicates whether or not we want to check the site option.\n\t *\n\t * @return array $plugin_paths The list of absolute paths we've found.\n\t *\/\n\tpublic function find_using_option( $option_name, $site_option = false ) {\n\t\t$raw = $site_option ? get_site_option( $option_name ) : get_option( $option_name );\n\t\tif ( false === $raw ) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn $this->convert_plugins_to_paths( $raw );\n\t}\n\n\t\/**\n\t * Checks for plugins in the `action` request parameter.\n\t *\n\t * @param string[] $allowed_actions The actions that we're allowed to return plugins for.\n\t *\n\t * @return array $plugin_paths The list of absolute paths we've found.\n\t *\/\n\tpublic function find_using_request_action( $allowed_actions ) {\n\t\t\/**\n\t\t * Note: we're not actually checking the nonce here because it's too early\n\t\t * in the execution. The pluggable functions are not yet loaded to give\n\t\t * plugins a chance to plug their versions. Therefore we're doing the bare\n\t\t * minimum: checking whether the nonce exists and it's in the right place.\n\t\t * The request will fail later if the nonce doesn't pass the check.\n\t\t *\/\n\t\tif ( empty( $_REQUEST['_wpnonce'] ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated just below.\n\t\t$action = isset( $_REQUEST['action'] ) ? wp_unslash( $_REQUEST['action'] ) : false;\n\t\tif ( ! in_array( $action, $allowed_actions, true ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t$plugin_slugs = array();\n\t\tswitch ( $action ) {\n\t\t\tcase 'activate':\n\t\t\tcase 'deactivate':\n\t\t\t\tif ( empty( $_REQUEST['plugin'] ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated by convert_plugins_to_paths.\n\t\t\t\t$plugin_slugs[] = wp_unslash( $_REQUEST['plugin'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'activate-selected':\n\t\t\tcase 'deactivate-selected':\n\t\t\t\tif ( empty( $_REQUEST['checked'] ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated by convert_plugins_to_paths.\n\t\t\t\t$plugin_slugs = wp_unslash( $_REQUEST['checked'] );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $this->convert_plugins_to_paths( $plugin_slugs );\n\t}\n\n\t\/**\n\t * Given an array of plugin slugs or paths, this will convert them to absolute paths and filter\n\t * out the plugins that are not directory plugins. Note that array keys will also be included\n\t * if they are plugin paths!\n\t *\n\t * @param string[] $plugins Plugin paths or slugs to filter.\n\t *\n\t * @return string[]\n\t *\/\n\tprivate function convert_plugins_to_paths( $plugins ) {\n\t\tif ( ! is_array( $plugins ) || empty( $plugins ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/\/ We're going to look for plugins in the standard directories.\n\t\t$path_constants = array( WP_PLUGIN_DIR, WPMU_PLUGIN_DIR );\n\n\t\t$plugin_paths = array();\n\t\tforeach ( $plugins as $key => $value ) {\n\t\t\t$path = $this->path_processor->find_directory_with_autoloader( $key, $path_constants );\n\t\t\tif ( $path ) {\n\t\t\t\t$plugin_paths[] = $path;\n\t\t\t}\n\n\t\t\t$path = $this->path_processor->find_directory_with_autoloader( $value, $path_constants );\n\t\t\tif ( $path ) {\n\t\t\t\t$plugin_paths[] = $path;\n\t\t\t}\n\t\t}\n\n\t\treturn $plugin_paths;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-manifest-reader.php","ext":"php","size":2693,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class reads autoloader manifest files.\n *\/\nclass Manifest_Reader {\n\n\t\/**\n\t * The Version_Selector object.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Version_Selector $version_selector The Version_Selector object.\n\t *\/\n\tpublic function __construct( $version_selector ) {\n\t\t$this->version_selector = $version_selector;\n\t}\n\n\t\/**\n\t * Reads all of the manifests in the given plugin paths.\n\t *\n\t * @param array  $plugin_paths  The paths to the plugins we're loading the manifest in.\n\t * @param string $manifest_path The path that we're loading the manifest from in each plugin.\n\t * @param array  $path_map The path map to add the contents of the manifests to.\n\t *\n\t * @return array $path_map The path map we've built using the manifests in each plugin.\n\t *\/\n\tpublic function read_manifests( $plugin_paths, $manifest_path, &$path_map ) {\n\t\t$file_paths = array_map(\n\t\t\tfunction ( $path ) use ( $manifest_path ) {\n\t\t\t\treturn trailingslashit( $path ) . $manifest_path;\n\t\t\t},\n\t\t\t$plugin_paths\n\t\t);\n\n\t\tforeach ( $file_paths as $path ) {\n\t\t\t$this->register_manifest( $path, $path_map );\n\t\t}\n\n\t\treturn $path_map;\n\t}\n\n\t\/**\n\t * Registers a plugin's manifest file with the path map.\n\t *\n\t * @param string $manifest_path The absolute path to the manifest that we're loading.\n\t * @param array  $path_map The path map to add the contents of the manifest to.\n\t *\/\n\tprotected function register_manifest( $manifest_path, &$path_map ) {\n\t\tif ( ! is_readable( $manifest_path ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$manifest = require $manifest_path;\n\t\tif ( ! is_array( $manifest ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $manifest as $key => $data ) {\n\t\t\t$this->register_record( $key, $data, $path_map );\n\t\t}\n\t}\n\n\t\/**\n\t * Registers an entry from the manifest in the path map.\n\t *\n\t * @param string $key The identifier for the entry we're registering.\n\t * @param array  $data The data for the entry we're registering.\n\t * @param array  $path_map The path map to add the contents of the manifest to.\n\t *\/\n\tprotected function register_record( $key, $data, &$path_map ) {\n\t\tif ( isset( $path_map[ $key ]['version'] ) ) {\n\t\t\t$selected_version = $path_map[ $key ]['version'];\n\t\t} else {\n\t\t\t$selected_version = null;\n\t\t}\n\n\t\tif ( $this->version_selector->is_version_update_required( $selected_version, $data['version'] ) ) {\n\t\t\t$path_map[ $key ] = array(\n\t\t\t\t'version' => $data['version'],\n\t\t\t\t'path'    => $data['path'],\n\t\t\t);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-plugins-handler.php","ext":"php","size":5891,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class handles locating and caching all of the active plugins.\n *\/\nclass Plugins_Handler {\n\t\/**\n\t * The transient key for plugin paths.\n\t *\/\n\tconst TRANSIENT_KEY = 'jetpack_autoloader_plugin_paths';\n\n\t\/**\n\t * The locator for finding plugins in different locations.\n\t *\n\t * @var Plugin_Locator\n\t *\/\n\tprivate $plugin_locator;\n\n\t\/**\n\t * The processor for transforming cached paths.\n\t *\n\t * @var Path_Processor\n\t *\/\n\tprivate $path_processor;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Plugin_Locator $plugin_locator The locator for finding active plugins.\n\t * @param Path_Processor $path_processor The processor for transforming cached paths.\n\t *\/\n\tpublic function __construct( $plugin_locator, $path_processor ) {\n\t\t$this->plugin_locator = $plugin_locator;\n\t\t$this->path_processor = $path_processor;\n\t}\n\n\t\/**\n\t * Gets all of the active plugins we can find.\n\t *\n\t * @param bool $include_deactivating When true, plugins deactivating this request will be considered active.\n\t * @param bool $record_unknown When true, the current plugin will be marked as active and recorded when unknown.\n\t *\n\t * @return string[]\n\t *\/\n\tpublic function get_active_plugins( $include_deactivating, $record_unknown ) {\n\t\tglobal $jetpack_autoloader_activating_plugins_paths;\n\n\t\t\/\/ We're going to build a unique list of plugins from a few different sources\n\t\t\/\/ to find all of our \"active\" plugins. While we need to return an integer\n\t\t\/\/ array, we're going to use an associative array internally to reduce\n\t\t\/\/ the amount of time that we're going to spend checking uniqueness\n\t\t\/\/ and merging different arrays together to form the output.\n\t\t$active_plugins = array();\n\n\t\t\/\/ Make sure that plugins which have activated this request are considered as \"active\" even though\n\t\t\/\/ they probably won't be present in any option.\n\t\tif ( is_array( $jetpack_autoloader_activating_plugins_paths ) ) {\n\t\t\tforeach ( $jetpack_autoloader_activating_plugins_paths as $path ) {\n\t\t\t\t$active_plugins[ $path ] = $path;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ This option contains all of the plugins that have been activated.\n\t\t$plugins = $this->plugin_locator->find_using_option( 'active_plugins' );\n\t\tforeach ( $plugins as $path ) {\n\t\t\t$active_plugins[ $path ] = $path;\n\t\t}\n\n\t\t\/\/ This option contains all of the multisite plugins that have been activated.\n\t\tif ( is_multisite() ) {\n\t\t\t$plugins = $this->plugin_locator->find_using_option( 'active_sitewide_plugins', true );\n\t\t\tforeach ( $plugins as $path ) {\n\t\t\t\t$active_plugins[ $path ] = $path;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ These actions contain plugins that are being activated\/deactivated during this request.\n\t\t$plugins = $this->plugin_locator->find_using_request_action( array( 'activate', 'activate-selected', 'deactivate', 'deactivate-selected' ) );\n\t\tforeach ( $plugins as $path ) {\n\t\t\t$active_plugins[ $path ] = $path;\n\t\t}\n\n\t\t\/\/ When the current plugin isn't considered \"active\" there's a problem.\n\t\t\/\/ Since we're here, the plugin is active and currently being loaded.\n\t\t\/\/ We can support this case (mu-plugins and non-standard activation)\n\t\t\/\/ by adding the current plugin to the active list and marking it\n\t\t\/\/ as an unknown (activating) plugin. This also has the benefit\n\t\t\/\/ of causing a reset because the active plugins list has\n\t\t\/\/ been changed since it was saved in the global.\n\t\t$current_plugin = $this->plugin_locator->find_current_plugin();\n\t\tif ( $record_unknown && ! in_array( $current_plugin, $active_plugins, true ) ) {\n\t\t\t$active_plugins[ $current_plugin ]             = $current_plugin;\n\t\t\t$jetpack_autoloader_activating_plugins_paths[] = $current_plugin;\n\t\t}\n\n\t\t\/\/ When deactivating plugins aren't desired we should entirely remove them from the active list.\n\t\tif ( ! $include_deactivating ) {\n\t\t\t\/\/ These actions contain plugins that are being deactivated during this request.\n\t\t\t$plugins = $this->plugin_locator->find_using_request_action( array( 'deactivate', 'deactivate-selected' ) );\n\t\t\tforeach ( $plugins as $path ) {\n\t\t\t\tunset( $active_plugins[ $path ] );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Transform the array so that we don't have to worry about the keys interacting with other array types later.\n\t\treturn array_values( $active_plugins );\n\t}\n\n\t\/**\n\t * Gets all of the cached plugins if there are any.\n\t *\n\t * @return string[]\n\t *\/\n\tpublic function get_cached_plugins() {\n\t\t$cached = get_transient( self::TRANSIENT_KEY );\n\t\tif ( ! is_array( $cached ) || empty( $cached ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/\/ We need to expand the tokens to an absolute path for this webserver.\n\t\treturn array_map( array( $this->path_processor, 'untokenize_path_constants' ), $cached );\n\t}\n\n\t\/**\n\t * Saves the plugin list to the cache.\n\t *\n\t * @param array $plugins The plugin list to save to the cache.\n\t *\/\n\tpublic function cache_plugins( $plugins ) {\n\t\t\/\/ We store the paths in a tokenized form so that that webservers with different absolute paths don't break.\n\t\t$plugins = array_map( array( $this->path_processor, 'tokenize_path_constants' ), $plugins );\n\n\t\tset_transient( self::TRANSIENT_KEY, $plugins );\n\t}\n\n\t\/**\n\t * Checks to see whether or not the plugin list given has changed when compared to the\n\t * shared `$jetpack_autoloader_cached_plugin_paths` global. This allows us to deal\n\t * with cases where the active list may change due to filtering..\n\t *\n\t * @param string[] $plugins The plugins list to check against the global cache.\n\t *\n\t * @return bool True if the plugins have changed, otherwise false.\n\t *\/\n\tpublic function have_plugins_changed( $plugins ) {\n\t\tglobal $jetpack_autoloader_cached_plugin_paths;\n\n\t\tif ( $jetpack_autoloader_cached_plugin_paths !== $plugins ) {\n\t\t\t$jetpack_autoloader_cached_plugin_paths = $plugins;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-version-selector.php","ext":"php","size":1853,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * Used to select package versions.\n *\/\nclass Version_Selector {\n\n\t\/**\n\t * Checks whether the selected package version should be updated. Composer development\n\t * package versions ('9999999-dev' or versions that start with 'dev-') are favored\n\t * when the JETPACK_AUTOLOAD_DEV constant is set to true.\n\t *\n\t * @param String $selected_version The currently selected package version.\n\t * @param String $compare_version The package version that is being evaluated to\n\t *                                determine if the version needs to be updated.\n\t *\n\t * @return bool Returns true if the selected package version should be updated,\n\t *                 else false.\n\t *\/\n\tpublic function is_version_update_required( $selected_version, $compare_version ) {\n\t\t$use_dev_versions = defined( 'JETPACK_AUTOLOAD_DEV' ) && JETPACK_AUTOLOAD_DEV;\n\n\t\tif ( $selected_version === null ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( $use_dev_versions && $this->is_dev_version( $selected_version ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( $this->is_dev_version( $compare_version ) ) {\n\t\t\tif ( $use_dev_versions ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif ( version_compare( $selected_version, $compare_version, '<' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Checks whether the given package version is a development version.\n\t *\n\t * @param String $version The package version.\n\t *\n\t * @return bool True if the version is a dev version, else false.\n\t *\/\n\tpublic function is_dev_version( $version ) {\n\t\tif ( 'dev-' === substr( $version, 0, 4 ) || '9999999-dev' === $version ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-php-autoloader.php","ext":"php","size":3685,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class handles management of the actual PHP autoloader.\n *\/\nclass PHP_Autoloader {\n\n\t\/**\n\t * Registers the autoloader with PHP so that it can begin autoloading classes.\n\t *\n\t * @param Version_Loader $version_loader The class loader to use in the autoloader.\n\t *\/\n\tpublic function register_autoloader( $version_loader ) {\n\t\t\/\/ Make sure no other autoloaders are registered.\n\t\t$this->unregister_autoloader();\n\n\t\t\/\/ Set the global so that it can be used to load classes.\n\t\tglobal $jetpack_autoloader_loader;\n\t\t$jetpack_autoloader_loader = $version_loader;\n\n\t\t\/\/ Ensure that the autoloader is first to avoid contention with others.\n\t\tspl_autoload_register( array( self::class, 'load_class' ), true, true );\n\t}\n\n\t\/**\n\t * Unregisters the active autoloader so that it will no longer autoload classes.\n\t *\/\n\tpublic function unregister_autoloader() {\n\t\t\/\/ Remove any v2 autoloader that we've already registered.\n\t\t$autoload_chain = spl_autoload_functions();\n\t\tif ( ! $autoload_chain ) {\n\t\t\treturn;\n\t\t}\n\t\tforeach ( $autoload_chain as $autoloader ) {\n\t\t\t\/\/ We can identify a v2 autoloader using the namespace.\n\t\t\t$namespace_check = null;\n\n\t\t\t\/\/ Functions are recorded as strings.\n\t\t\tif ( is_string( $autoloader ) ) {\n\t\t\t\t$namespace_check = $autoloader;\n\t\t\t} elseif ( is_array( $autoloader ) && is_string( $autoloader[0] ) ) {\n\t\t\t\t\/\/ Static method calls have the class as the first array element.\n\t\t\t\t$namespace_check = $autoloader[0];\n\t\t\t} else {\n\t\t\t\t\/\/ Since the autoloader has only ever been a function or a static method we don't currently need to check anything else.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Check for the namespace without the generated suffix.\n\t\t\tif ( 'Automattic\\\\Jetpack\\\\Autoloader\\\\jp' === substr( $namespace_check, 0, 32 ) ) {\n\t\t\t\tspl_autoload_unregister( $autoloader );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Clear the global now that the autoloader has been unregistered.\n\t\tglobal $jetpack_autoloader_loader;\n\t\t$jetpack_autoloader_loader = null;\n\t}\n\n\t\/**\n\t * Loads a class file if one could be found.\n\t *\n\t * Note: This function is static so that the autoloader can be easily unregistered. If\n\t * it was a class method we would have to unwrap the object to check the namespace.\n\t *\n\t * @param string $class_name The name of the class to autoload.\n\t *\n\t * @return bool Indicates whether or not a class file was loaded.\n\t *\/\n\tpublic static function load_class( $class_name ) {\n\t\tglobal $jetpack_autoloader_loader;\n\t\tif ( ! isset( $jetpack_autoloader_loader ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$file = $jetpack_autoloader_loader->find_class_file( $class_name );\n\t\tif ( ! isset( $file ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ A common source of strange and confusing problems is when a vendor\n\t\t\/\/ file is autoloaded before all plugins have had a chance to register\n\t\t\/\/ with the autoloader. Detect that, if a development constant is set.\n\t\tif ( defined( 'JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS' ) && JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS &&\n\t\t\t( strpos( $file, '\/vendor\/' ) !== false || strpos( $file, '\/jetpack_vendor\/' ) !== false ) &&\n\t\t\tis_callable( 'did_action' ) && ! did_action( 'plugins_loaded' )\n\t\t) {\n\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_wp_debug_backtrace_summary -- This is a debug log message.\n\t\t\t$msg = \"Jetpack Autoloader: Autoloading `$class_name` before the plugins_loaded hook may cause strange and confusing problems. \" . wp_debug_backtrace_summary( '', 1 );\n\t\t\twp_trigger_error( '', $msg );\n\t\t}\n\n\t\trequire $file;\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-autoloader-locator.php","ext":"php","size":2174,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\nuse Automattic\\Jetpack\\Autoloader\\AutoloadGenerator;\n\n\/**\n * This class locates autoloaders.\n *\/\nclass Autoloader_Locator {\n\n\t\/**\n\t * The object for comparing autoloader versions.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Version_Selector $version_selector The version selector object.\n\t *\/\n\tpublic function __construct( $version_selector ) {\n\t\t$this->version_selector = $version_selector;\n\t}\n\n\t\/**\n\t * Finds the path to the plugin with the latest autoloader.\n\t *\n\t * @param array  $plugin_paths An array of plugin paths.\n\t * @param string $latest_version The latest version reference. @phan-output-reference.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function find_latest_autoloader( $plugin_paths, &$latest_version ) {\n\t\t$latest_plugin = null;\n\n\t\tforeach ( $plugin_paths as $plugin_path ) {\n\t\t\t$version = $this->get_autoloader_version( $plugin_path );\n\t\t\tif ( ! $version || ! $this->version_selector->is_version_update_required( $latest_version, $version ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$latest_version = $version;\n\t\t\t$latest_plugin  = $plugin_path;\n\t\t}\n\n\t\treturn $latest_plugin;\n\t}\n\n\t\/**\n\t * Gets the path to the autoloader.\n\t *\n\t * @param string $plugin_path The path to the plugin.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_autoloader_path( $plugin_path ) {\n\t\treturn trailingslashit( $plugin_path ) . 'vendor\/autoload_packages.php';\n\t}\n\n\t\/**\n\t * Gets the version for the autoloader.\n\t *\n\t * @param string $plugin_path The path to the plugin.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_autoloader_version( $plugin_path ) {\n\t\t$classmap = trailingslashit( $plugin_path ) . 'vendor\/composer\/jetpack_autoload_classmap.php';\n\t\tif ( ! file_exists( $classmap ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$classmap = require $classmap;\n\t\tif ( isset( $classmap[ AutoloadGenerator::class ] ) ) {\n\t\t\treturn $classmap[ AutoloadGenerator::class ]['version'];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-latest-autoloader-guard.php","ext":"php","size":5980,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class ensures that we're only executing the latest autoloader.\n *\/\nclass Latest_Autoloader_Guard {\n\n\t\/**\n\t * The Plugins_Handler instance.\n\t *\n\t * @var Plugins_Handler\n\t *\/\n\tprivate $plugins_handler;\n\n\t\/**\n\t * The Autoloader_Handler instance.\n\t *\n\t * @var Autoloader_Handler\n\t *\/\n\tprivate $autoloader_handler;\n\n\t\/**\n\t * The Autoloader_locator instance.\n\t *\n\t * @var Autoloader_Locator\n\t *\/\n\tprivate $autoloader_locator;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Plugins_Handler    $plugins_handler    The Plugins_Handler instance.\n\t * @param Autoloader_Handler $autoloader_handler The Autoloader_Handler instance.\n\t * @param Autoloader_Locator $autoloader_locator The Autoloader_Locator instance.\n\t *\/\n\tpublic function __construct( $plugins_handler, $autoloader_handler, $autoloader_locator ) {\n\t\t$this->plugins_handler    = $plugins_handler;\n\t\t$this->autoloader_handler = $autoloader_handler;\n\t\t$this->autoloader_locator = $autoloader_locator;\n\t}\n\n\t\/**\n\t * Indicates whether or not the autoloader should be initialized. Note that this function\n\t * has the side-effect of actually loading the latest autoloader in the event that this\n\t * is not it.\n\t *\n\t * @param string   $current_plugin             The current plugin we're checking.\n\t * @param string[] $plugins                    The active plugins to check for autoloaders in.\n\t * @param bool     $was_included_by_autoloader Indicates whether or not this autoloader was included by another.\n\t *\n\t * @return bool True if we should stop initialization, otherwise false.\n\t *\/\n\tpublic function should_stop_init( $current_plugin, $plugins, $was_included_by_autoloader ) {\n\t\tglobal $jetpack_autoloader_latest_version;\n\n\t\t\/\/ We need to reset the autoloader when the plugins change because\n\t\t\/\/ that means the autoloader was generated with a different list.\n\t\tif ( $this->plugins_handler->have_plugins_changed( $plugins ) ) {\n\t\t\t$this->autoloader_handler->reset_autoloader();\n\t\t}\n\n\t\t\/\/ When the latest autoloader has already been found we don't need to search for it again.\n\t\t\/\/ We should take care however because this will also trigger if the autoloader has been\n\t\t\/\/ included by an older one.\n\t\tif ( isset( $jetpack_autoloader_latest_version ) && ! $was_included_by_autoloader ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$latest_plugin = $this->autoloader_locator->find_latest_autoloader( $plugins, $jetpack_autoloader_latest_version );\n\t\tif ( isset( $latest_plugin ) && $latest_plugin !== $current_plugin ) {\n\t\t\trequire $this->autoloader_locator->get_autoloader_path( $latest_plugin );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check for conflicting autoloaders.\n\t *\n\t * A common source of strange and confusing problems is when another plugin\n\t * registers a Composer autoloader at a higher priority that us. If enabled,\n\t * check for this problem and warn about it.\n\t *\n\t * Called from the plugins_loaded hook.\n\t *\n\t * @since 3.1.0\n\t * @return void\n\t *\/\n\tpublic function check_for_conflicting_autoloaders() {\n\t\tif ( ! defined( 'JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS' ) || ! JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $jetpack_autoloader_loader;\n\t\tif ( ! isset( $jetpack_autoloader_loader ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$prefixes = array();\n\t\tforeach ( ( $jetpack_autoloader_loader->get_class_map() ?? array() ) as $classname => $data ) {\n\t\t\t$parts = explode( '\\\\', trim( $classname, '\\\\' ) );\n\t\t\tarray_pop( $parts );\n\t\t\twhile ( $parts ) {\n\t\t\t\t$prefixes[ implode( '\\\\', $parts ) . '\\\\' ] = true;\n\t\t\t\tarray_pop( $parts );\n\t\t\t}\n\t\t}\n\t\tforeach ( ( $jetpack_autoloader_loader->get_psr4_map() ?? array() ) as $prefix => $data ) {\n\t\t\t$parts = explode( '\\\\', trim( $prefix, '\\\\' ) );\n\t\t\twhile ( $parts ) {\n\t\t\t\t$prefixes[ implode( '\\\\', $parts ) . '\\\\' ] = true;\n\t\t\t\tarray_pop( $parts );\n\t\t\t}\n\t\t}\n\n\t\t$autoload_chain = spl_autoload_functions();\n\t\tif ( ! $autoload_chain ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $autoload_chain as $autoloader ) {\n\t\t\t\/\/ No need to check anything after us.\n\t\t\tif ( is_array( $autoloader ) && is_string( $autoloader[0] ) && substr( $autoloader[0], 0, strlen( __NAMESPACE__ ) + 1 ) === __NAMESPACE__ . '\\\\' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t\/\/ We can check Composer autoloaders easily enough.\n\t\t\tif ( is_array( $autoloader ) && $autoloader[0] instanceof \\Composer\\Autoload\\ClassLoader && is_callable( array( $autoloader[0], 'getPrefixesPsr4' ) ) ) {\n\t\t\t\t$composer_autoloader = $autoloader[0];\n\t\t\t\tforeach ( $composer_autoloader->getClassMap() as $classname => $path ) {\n\t\t\t\t\tif ( $jetpack_autoloader_loader->find_class_file( $classname ) ) {\n\t\t\t\t\t\t$msg = \"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the classes we handle (e.g. $classname => $path). This may cause strange and confusing problems.\";\n\t\t\t\t\t\twp_trigger_error( '', $msg );\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tforeach ( $composer_autoloader->getPrefixesPsr4() as $prefix => $paths ) {\n\t\t\t\t\tif ( isset( $prefixes[ $prefix ] ) ) {\n\t\t\t\t\t\t$path = array_pop( $paths );\n\t\t\t\t\t\t$msg  = \"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the namespaces we handle (e.g. $prefix => $path). This may cause strange and confusing problems.\";\n\t\t\t\t\t\twp_trigger_error( '', $msg );\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tforeach ( $composer_autoloader->getPrefixes() as $prefix => $paths ) {\n\t\t\t\t\tif ( isset( $prefixes[ $prefix ] ) ) {\n\t\t\t\t\t\t$path = array_pop( $paths );\n\t\t\t\t\t\t$msg  = \"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the namespaces we handle (e.g. $prefix => $path). This may cause strange and confusing problems.\";\n\t\t\t\t\t\twp_trigger_error( '', $msg );\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-hook-manager.php","ext":"php","size":2157,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * Allows the latest autoloader to register hooks that can be removed when the autoloader is reset.\n *\/\nclass Hook_Manager {\n\n\t\/**\n\t * An array containing all of the hooks that we've registered.\n\t *\n\t * @var array\n\t *\/\n\tprivate $registered_hooks;\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->registered_hooks = array();\n\t}\n\n\t\/**\n\t * Adds an action to WordPress and registers it internally.\n\t *\n\t * @param string   $tag           The name of the action which is hooked.\n\t * @param callable $callable      The function to call.\n\t * @param int      $priority      Used to specify the priority of the action.\n\t * @param int      $accepted_args Used to specify the number of arguments the callable accepts.\n\t *\/\n\tpublic function add_action( $tag, $callable, $priority = 10, $accepted_args = 1 ) {\n\t\t$this->registered_hooks[ $tag ][] = array(\n\t\t\t'priority' => $priority,\n\t\t\t'callable' => $callable,\n\t\t);\n\n\t\tadd_action( $tag, $callable, $priority, $accepted_args );\n\t}\n\n\t\/**\n\t * Adds a filter to WordPress and registers it internally.\n\t *\n\t * @param string   $tag           The name of the filter which is hooked.\n\t * @param callable $callable      The function to call.\n\t * @param int      $priority      Used to specify the priority of the filter.\n\t * @param int      $accepted_args Used to specify the number of arguments the callable accepts.\n\t *\/\n\tpublic function add_filter( $tag, $callable, $priority = 10, $accepted_args = 1 ) {\n\t\t$this->registered_hooks[ $tag ][] = array(\n\t\t\t'priority' => $priority,\n\t\t\t'callable' => $callable,\n\t\t);\n\n\t\tadd_filter( $tag, $callable, $priority, $accepted_args );\n\t}\n\n\t\/**\n\t * Removes all of the registered hooks.\n\t *\/\n\tpublic function reset() {\n\t\tforeach ( $this->registered_hooks as $tag => $hooks ) {\n\t\t\tforeach ( $hooks as $hook ) {\n\t\t\t\tremove_filter( $tag, $hook['callable'], $hook['priority'] );\n\t\t\t}\n\t\t}\n\t\t$this->registered_hooks = array();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-autoloader.php","ext":"php","size":4349,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class handles management of the actual PHP autoloader.\n *\/\nclass Autoloader {\n\n\t\/**\n\t * Checks to see whether or not the autoloader should be initialized and then initializes it if so.\n\t *\n\t * @param Container|null $container The container we want to use for autoloader initialization. If none is given\n\t *                                  then a container will be created automatically.\n\t *\/\n\tpublic static function init( $container = null ) {\n\t\t\/\/ The container holds and manages the lifecycle of our dependencies\n\t\t\/\/ to make them easier to work with and increase flexibility.\n\t\tif ( ! isset( $container ) ) {\n\t\t\trequire_once __DIR__ . '\/class-container.php';\n\t\t\t$container = new Container();\n\t\t}\n\n\t\t\/\/ phpcs:disable Generic.Commenting.DocComment.MissingShort\n\n\t\t\/** @var Autoloader_Handler $autoloader_handler *\/\n\t\t$autoloader_handler = $container->get( Autoloader_Handler::class );\n\n\t\t\/\/ If the autoloader is already initializing it means that it has included us as the latest.\n\t\t$was_included_by_autoloader = $autoloader_handler->is_initializing();\n\n\t\t\/** @var Plugin_Locator $plugin_locator *\/\n\t\t$plugin_locator = $container->get( Plugin_Locator::class );\n\n\t\t\/** @var Plugins_Handler $plugins_handler *\/\n\t\t$plugins_handler = $container->get( Plugins_Handler::class );\n\n\t\t\/\/ The current plugin is the one that we are attempting to initialize here.\n\t\t$current_plugin = $plugin_locator->find_current_plugin();\n\n\t\t\/\/ The active plugins are those that we were able to discover on the site. This list will not\n\t\t\/\/ include mu-plugins, those activated by code, or those who are hidden by filtering. We also\n\t\t\/\/ want to take care to not consider the current plugin unknown if it was included by an\n\t\t\/\/ autoloader. This avoids the case where a plugin will be marked \"active\" while deactivated\n\t\t\/\/ due to it having the latest autoloader.\n\t\t$active_plugins = $plugins_handler->get_active_plugins( true, ! $was_included_by_autoloader );\n\n\t\t\/\/ The cached plugins are all of those that were active or discovered by the autoloader during a previous request.\n\t\t\/\/ Note that it's possible this list will include plugins that have since been deactivated, but after a request\n\t\t\/\/ the cache should be updated and the deactivated plugins will be removed.\n\t\t$cached_plugins = $plugins_handler->get_cached_plugins();\n\n\t\t\/\/ We combine the active list and cached list to preemptively load classes for plugins that are\n\t\t\/\/ presently unknown but will be loaded during the request. While this may result in us considering packages in\n\t\t\/\/ deactivated plugins there shouldn't be any problems as a result and the eventual consistency is sufficient.\n\t\t$all_plugins = array_merge( $active_plugins, $cached_plugins );\n\n\t\t\/\/ In particular we also include the current plugin to address the case where it is the latest autoloader\n\t\t\/\/ but also unknown (and not cached). We don't want it in the active list because we don't know that it\n\t\t\/\/ is active but we need it in the all plugins list so that it is considered by the autoloader.\n\t\t$all_plugins[] = $current_plugin;\n\n\t\t\/\/ We require uniqueness in the array to avoid processing the same plugin more than once.\n\t\t$all_plugins = array_values( array_unique( $all_plugins ) );\n\n\t\t\/** @var Latest_Autoloader_Guard $guard *\/\n\t\t$guard = $container->get( Latest_Autoloader_Guard::class );\n\t\tif ( $guard->should_stop_init( $current_plugin, $all_plugins, $was_included_by_autoloader ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Initialize the autoloader using the handler now that we're ready.\n\t\t$autoloader_handler->activate_autoloader( $all_plugins );\n\n\t\t\/** @var Hook_Manager $hook_manager *\/\n\t\t$hook_manager = $container->get( Hook_Manager::class );\n\n\t\t\/\/ Register a shutdown handler to clean up the autoloader.\n\t\t$hook_manager->add_action( 'shutdown', new Shutdown_Handler( $plugins_handler, $cached_plugins, $was_included_by_autoloader ) );\n\n\t\t\/\/ Register a plugins_loaded handler to check for conflicting autoloaders.\n\t\t$hook_manager->add_action( 'plugins_loaded', array( $guard, 'check_for_conflicting_autoloaders' ), 1 );\n\n\t\t\/\/ phpcs:enable Generic.Commenting.DocComment.MissingShort\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-version-loader.php","ext":"php","size":4490,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class loads other classes based on given parameters.\n *\/\nclass Version_Loader {\n\n\t\/**\n\t * The Version_Selector object.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * A map of available classes and their version and file path.\n\t *\n\t * @var array\n\t *\/\n\tprivate $classmap;\n\n\t\/**\n\t * A map of PSR-4 namespaces and their version and directory path.\n\t *\n\t * @var array\n\t *\/\n\tprivate $psr4_map;\n\n\t\/**\n\t * A map of all the files that we should load.\n\t *\n\t * @var array\n\t *\/\n\tprivate $filemap;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Version_Selector $version_selector The Version_Selector object.\n\t * @param array            $classmap The verioned classmap to load using.\n\t * @param array            $psr4_map The versioned PSR-4 map to load using.\n\t * @param array            $filemap The versioned filemap to load.\n\t *\/\n\tpublic function __construct( $version_selector, $classmap, $psr4_map, $filemap ) {\n\t\t$this->version_selector = $version_selector;\n\t\t$this->classmap         = $classmap;\n\t\t$this->psr4_map         = $psr4_map;\n\t\t$this->filemap          = $filemap;\n\t}\n\n\t\/**\n\t * Fetch the classmap.\n\t *\n\t * @since 3.1.0\n\t * @return array<string, array>\n\t *\/\n\tpublic function get_class_map() {\n\t\treturn $this->classmap;\n\t}\n\n\t\/**\n\t * Fetch the psr-4 mappings.\n\t *\n\t * @since 3.1.0\n\t * @return array<string, array>\n\t *\/\n\tpublic function get_psr4_map() {\n\t\treturn $this->psr4_map;\n\t}\n\n\t\/**\n\t * Finds the file path for the given class.\n\t *\n\t * @param string $class_name The class to find.\n\t *\n\t * @return string|null $file_path The path to the file if found, null if no class was found.\n\t *\/\n\tpublic function find_class_file( $class_name ) {\n\t\t$data = $this->select_newest_file(\n\t\t\t$this->classmap[ $class_name ] ?? null,\n\t\t\t$this->find_psr4_file( $class_name )\n\t\t);\n\t\tif ( ! isset( $data ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn $data['path'];\n\t}\n\n\t\/**\n\t * Load all of the files in the filemap.\n\t *\/\n\tpublic function load_filemap() {\n\t\tif ( empty( $this->filemap ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->filemap as $file_identifier => $file_data ) {\n\t\t\tif ( empty( $GLOBALS['__composer_autoload_files'][ $file_identifier ] ) ) {\n\t\t\t\trequire_once $file_data['path'];\n\n\t\t\t\t$GLOBALS['__composer_autoload_files'][ $file_identifier ] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Compares different class sources and returns the newest.\n\t *\n\t * @param array|null $classmap_data The classmap class data.\n\t * @param array|null $psr4_data The PSR-4 class data.\n\t *\n\t * @return array|null $data\n\t *\/\n\tprivate function select_newest_file( $classmap_data, $psr4_data ) {\n\t\tif ( ! isset( $classmap_data ) ) {\n\t\t\treturn $psr4_data;\n\t\t} elseif ( ! isset( $psr4_data ) ) {\n\t\t\treturn $classmap_data;\n\t\t}\n\n\t\tif ( $this->version_selector->is_version_update_required( $classmap_data['version'], $psr4_data['version'] ) ) {\n\t\t\treturn $psr4_data;\n\t\t}\n\n\t\treturn $classmap_data;\n\t}\n\n\t\/**\n\t * Finds the file for a given class in a PSR-4 namespace.\n\t *\n\t * @param string $class_name The class to find.\n\t *\n\t * @return array|null $data The version and path path to the file if found, null otherwise.\n\t *\/\n\tprivate function find_psr4_file( $class_name ) {\n\t\tif ( empty( $this->psr4_map ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t\/\/ Don't bother with classes that have no namespace.\n\t\t$class_index = strrpos( $class_name, '\\\\' );\n\t\tif ( ! $class_index ) {\n\t\t\treturn null;\n\t\t}\n\t\t$class_for_path = str_replace( '\\\\', '\/', $class_name );\n\n\t\t\/\/ Search for the namespace by iteratively cutting off the last segment until\n\t\t\/\/ we find a match. This allows us to check the most-specific namespaces\n\t\t\/\/ first as well as minimize the amount of time spent looking.\n\t\tfor (\n\t\t\t$class_namespace = substr( $class_name, 0, $class_index );\n\t\t\t! empty( $class_namespace );\n\t\t\t$class_namespace = substr( $class_namespace, 0, strrpos( $class_namespace, '\\\\' ) )\n\t\t) {\n\t\t\t$namespace = $class_namespace . '\\\\';\n\t\t\tif ( ! isset( $this->psr4_map[ $namespace ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$data = $this->psr4_map[ $namespace ];\n\n\t\t\tforeach ( $data['path'] as $path ) {\n\t\t\t\t$path .= '\/' . substr( $class_for_path, strlen( $namespace ) ) . '.php';\n\t\t\t\tif ( file_exists( $path ) ) {\n\t\t\t\t\treturn array(\n\t\t\t\t\t\t'version' => $data['version'],\n\t\t\t\t\t\t'path'    => $path,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-path-processor.php","ext":"php","size":5707,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class handles dealing with paths for the autoloader.\n *\/\nclass Path_Processor {\n\t\/**\n\t * Given a path this will replace any of the path constants with a token to represent it.\n\t *\n\t * @param string $path The path we want to process.\n\t *\n\t * @return string The tokenized path.\n\t *\/\n\tpublic function tokenize_path_constants( $path ) {\n\t\t$path = wp_normalize_path( $path );\n\n\t\t$constants = $this->get_normalized_constants();\n\t\tforeach ( $constants as $constant => $constant_path ) {\n\t\t\t$len = strlen( $constant_path );\n\t\t\tif ( substr( $path, 0, $len ) !== $constant_path ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn substr_replace( $path, '{{' . $constant . '}}', 0, $len );\n\t\t}\n\n\t\treturn $path;\n\t}\n\n\t\/**\n\t * Given a path this will replace any of the path constant tokens with the expanded path.\n\t *\n\t * @param string $tokenized_path The path we want to process.\n\t *\n\t * @return string The expanded path.\n\t *\/\n\tpublic function untokenize_path_constants( $tokenized_path ) {\n\t\t$tokenized_path = wp_normalize_path( $tokenized_path );\n\n\t\t$constants = $this->get_normalized_constants();\n\t\tforeach ( $constants as $constant => $constant_path ) {\n\t\t\t$constant = '{{' . $constant . '}}';\n\n\t\t\t$len = strlen( $constant );\n\t\t\tif ( substr( $tokenized_path, 0, $len ) !== $constant ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn $this->get_real_path( substr_replace( $tokenized_path, $constant_path, 0, $len ) );\n\t\t}\n\n\t\treturn $tokenized_path;\n\t}\n\n\t\/**\n\t * Given a file and an array of places it might be, this will find the absolute path and return it.\n\t *\n\t * @param string $file The plugin or theme file to resolve.\n\t * @param array  $directories_to_check The directories we should check for the file if it isn't an absolute path.\n\t *\n\t * @return string|false Returns the absolute path to the directory, otherwise false.\n\t *\/\n\tpublic function find_directory_with_autoloader( $file, $directories_to_check ) {\n\t\t$file = wp_normalize_path( $file );\n\n\t\tif ( ! $this->is_absolute_path( $file ) ) {\n\t\t\t$file = $this->find_absolute_plugin_path( $file, $directories_to_check );\n\t\t\tif ( ! isset( $file ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ We need the real path for consistency with __DIR__ paths.\n\t\t$file = $this->get_real_path( $file );\n\n\t\t\/\/ phpcs:disable WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t$directory = @is_file( $file ) ? dirname( $file ) : $file;\n\t\tif ( ! @is_file( $directory . '\/vendor\/composer\/jetpack_autoload_classmap.php' ) ) {\n\t\t\treturn false;\n\t\t}\n\t\t\/\/ phpcs:enable WordPress.PHP.NoSilencedErrors.Discouraged\n\n\t\treturn $directory;\n\t}\n\n\t\/**\n\t * Fetches an array of normalized paths keyed by the constant they came from.\n\t *\n\t * @return string[] The normalized paths keyed by the constant.\n\t *\/\n\tprivate function get_normalized_constants() {\n\t\t$raw_constants = array(\n\t\t\t\/\/ Order the constants from most-specific to least-specific.\n\t\t\t'WP_PLUGIN_DIR',\n\t\t\t'WPMU_PLUGIN_DIR',\n\t\t\t'WP_CONTENT_DIR',\n\t\t\t'ABSPATH',\n\t\t);\n\n\t\t$constants = array();\n\t\tforeach ( $raw_constants as $raw ) {\n\t\t\tif ( ! defined( $raw ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$path = wp_normalize_path( constant( $raw ) );\n\t\t\tif ( isset( $path ) ) {\n\t\t\t\t$constants[ $raw ] = $path;\n\t\t\t}\n\t\t}\n\n\t\treturn $constants;\n\t}\n\n\t\/**\n\t * Indicates whether or not a path is absolute.\n\t *\n\t * @param string $path The path to check.\n\t *\n\t * @return bool True if the path is absolute, otherwise false.\n\t *\/\n\tprivate function is_absolute_path( $path ) {\n\t\tif ( empty( $path ) || 0 === strlen( $path ) || '.' === $path[0] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Absolute paths on Windows may begin with a drive letter.\n\t\tif ( preg_match( '\/^[a-zA-Z]:[\\\/\\\\\\\\]\/', $path ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ A path starting with \/ or \\ is absolute; anything else is relative.\n\t\treturn ( '\/' === $path[0] || '\\\\' === $path[0] );\n\t}\n\n\t\/**\n\t * Given a file and a list of directories to check, this method will try to figure out\n\t * the absolute path to the file in question.\n\t *\n\t * @param string $normalized_path The normalized path to the plugin or theme file to resolve.\n\t * @param array  $directories_to_check The directories we should check for the file if it isn't an absolute path.\n\t *\n\t * @return string|null The absolute path to the plugin file, otherwise null.\n\t *\/\n\tprivate function find_absolute_plugin_path( $normalized_path, $directories_to_check ) {\n\t\t\/\/ We're only able to find the absolute path for plugin\/theme PHP files.\n\t\tif ( ! is_string( $normalized_path ) || '.php' !== substr( $normalized_path, -4 ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tforeach ( $directories_to_check as $directory ) {\n\t\t\t$normalized_check = wp_normalize_path( trailingslashit( $directory ) ) . $normalized_path;\n\t\t\t\/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t\tif ( @is_file( $normalized_check ) ) {\n\t\t\t\treturn $normalized_check;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Given a path this will figure out the real path that we should be using.\n\t *\n\t * @param string $path The path to resolve.\n\t *\n\t * @return string The resolved path.\n\t *\/\n\tprivate function get_real_path( $path ) {\n\t\t\/\/ We want to resolve symbolic links for consistency with __DIR__ paths.\n\t\t\/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t$real_path = @realpath( $path );\n\t\tif ( false === $real_path ) {\n\t\t\t\/\/ Let the autoloader deal with paths that don't exist.\n\t\t\t$real_path = $path;\n\t\t}\n\n\t\t\/\/ Using realpath will make it platform-specific so we must normalize it after.\n\t\tif ( $path !== $real_path ) {\n\t\t\t$real_path = wp_normalize_path( $real_path );\n\t\t}\n\n\t\treturn $real_path;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-autoloader-handler.php","ext":"php","size":4607,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\nuse Automattic\\Jetpack\\Autoloader\\AutoloadGenerator;\n\n\/**\n * This class selects the package version for the autoloader.\n *\/\nclass Autoloader_Handler {\n\n\t\/**\n\t * The PHP_Autoloader instance.\n\t *\n\t * @var PHP_Autoloader\n\t *\/\n\tprivate $php_autoloader;\n\n\t\/**\n\t * The Hook_Manager instance.\n\t *\n\t * @var Hook_Manager\n\t *\/\n\tprivate $hook_manager;\n\n\t\/**\n\t * The Manifest_Reader instance.\n\t *\n\t * @var Manifest_Reader\n\t *\/\n\tprivate $manifest_reader;\n\n\t\/**\n\t * The Version_Selector instance.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param PHP_Autoloader   $php_autoloader The PHP_Autoloader instance.\n\t * @param Hook_Manager     $hook_manager The Hook_Manager instance.\n\t * @param Manifest_Reader  $manifest_reader The Manifest_Reader instance.\n\t * @param Version_Selector $version_selector The Version_Selector instance.\n\t *\/\n\tpublic function __construct( $php_autoloader, $hook_manager, $manifest_reader, $version_selector ) {\n\t\t$this->php_autoloader   = $php_autoloader;\n\t\t$this->hook_manager     = $hook_manager;\n\t\t$this->manifest_reader  = $manifest_reader;\n\t\t$this->version_selector = $version_selector;\n\t}\n\n\t\/**\n\t * Checks to see whether or not an autoloader is currently in the process of initializing.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_initializing() {\n\t\t\/\/ If no version has been set it means that no autoloader has started initializing yet.\n\t\tglobal $jetpack_autoloader_latest_version;\n\t\tif ( ! isset( $jetpack_autoloader_latest_version ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ When the version is set but the classmap is not it ALWAYS means that this is the\n\t\t\/\/ latest autoloader and is being included by an older one.\n\t\tglobal $jetpack_packages_classmap;\n\t\tif ( empty( $jetpack_packages_classmap ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ Version 2.4.0 added a new global and altered the reset semantics. We need to check\n\t\t\/\/ the other global as well since it may also point at initialization.\n\t\t\/\/ Note: We don't need to check for the class first because every autoloader that\n\t\t\/\/ will set the latest version global requires this class in the classmap.\n\t\t$replacing_version = $jetpack_packages_classmap[ AutoloadGenerator::class ]['version'];\n\t\tif ( $this->version_selector->is_dev_version( $replacing_version ) || version_compare( $replacing_version, '2.4.0.0', '>=' ) ) {\n\t\t\tglobal $jetpack_autoloader_loader;\n\t\t\tif ( ! isset( $jetpack_autoloader_loader ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Activates an autoloader using the given plugins and activates it.\n\t *\n\t * @param string[] $plugins The plugins to initialize the autoloader for.\n\t *\/\n\tpublic function activate_autoloader( $plugins ) {\n\t\tglobal $jetpack_packages_psr4;\n\t\t$jetpack_packages_psr4 = array();\n\t\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_psr4.php', $jetpack_packages_psr4 );\n\n\t\tglobal $jetpack_packages_classmap;\n\t\t$jetpack_packages_classmap = array();\n\t\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_classmap.php', $jetpack_packages_classmap );\n\n\t\tglobal $jetpack_packages_filemap;\n\t\t$jetpack_packages_filemap = array();\n\t\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_filemap.php', $jetpack_packages_filemap );\n\n\t\t$loader = new Version_Loader(\n\t\t\t$this->version_selector,\n\t\t\t$jetpack_packages_classmap,\n\t\t\t$jetpack_packages_psr4,\n\t\t\t$jetpack_packages_filemap\n\t\t);\n\n\t\t$this->php_autoloader->register_autoloader( $loader );\n\n\t\t\/\/ Now that the autoloader is active we can load the filemap.\n\t\t$loader->load_filemap();\n\t}\n\n\t\/**\n\t * Resets the active autoloader and all related global state.\n\t *\/\n\tpublic function reset_autoloader() {\n\t\t$this->php_autoloader->unregister_autoloader();\n\t\t$this->hook_manager->reset();\n\n\t\t\/\/ Clear all of the autoloader globals so that older autoloaders don't do anything strange.\n\t\tglobal $jetpack_autoloader_latest_version;\n\t\t$jetpack_autoloader_latest_version = null;\n\n\t\tglobal $jetpack_packages_classmap;\n\t\t$jetpack_packages_classmap = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\n\n\t\tglobal $jetpack_packages_psr4;\n\t\t$jetpack_packages_psr4 = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\n\n\t\tglobal $jetpack_packages_filemap;\n\t\t$jetpack_packages_filemap = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/jetpack-autoloader\/class-shutdown-handler.php","ext":"php","size":2893,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader\\jp5eb612593a2ef67b85ad25c07c19e821\\al5_0_9;\n\n \/\/ phpcs:ignore\n\n\/**\n * This class handles the shutdown of the autoloader.\n *\/\nclass Shutdown_Handler {\n\n\t\/**\n\t * The Plugins_Handler instance.\n\t *\n\t * @var Plugins_Handler\n\t *\/\n\tprivate $plugins_handler;\n\n\t\/**\n\t * The plugins cached by this autoloader.\n\t *\n\t * @var string[]\n\t *\/\n\tprivate $cached_plugins;\n\n\t\/**\n\t * Indicates whether or not this autoloader was included by another.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $was_included_by_autoloader;\n\n\t\/**\n\t * Constructor.\n\t *\n\t * @param Plugins_Handler $plugins_handler The Plugins_Handler instance to use.\n\t * @param string[]        $cached_plugins The plugins cached by the autoloaer.\n\t * @param bool            $was_included_by_autoloader Indicates whether or not the autoloader was included by another.\n\t *\/\n\tpublic function __construct( $plugins_handler, $cached_plugins, $was_included_by_autoloader ) {\n\t\t$this->plugins_handler            = $plugins_handler;\n\t\t$this->cached_plugins             = $cached_plugins;\n\t\t$this->was_included_by_autoloader = $was_included_by_autoloader;\n\t}\n\n\t\/**\n\t * Handles the shutdown of the autoloader.\n\t *\/\n\tpublic function __invoke() {\n\t\t\/\/ Don't save a broken cache if an error happens during some plugin's initialization.\n\t\tif ( ! did_action( 'plugins_loaded' ) ) {\n\t\t\t\/\/ Ensure that the cache is emptied to prevent consecutive failures if the cache is to blame.\n\t\t\tif ( ! empty( $this->cached_plugins ) ) {\n\t\t\t\t$this->plugins_handler->cache_plugins( array() );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Load the active plugins fresh since the list we pulled earlier might not contain\n\t\t\/\/ plugins that were activated but did not reset the autoloader. This happens\n\t\t\/\/ when a plugin is in the cache but not \"active\" when the autoloader loads.\n\t\t\/\/ We also want to make sure that plugins which are deactivating are not\n\t\t\/\/ considered \"active\" so that they will be removed from the cache now.\n\t\ttry {\n\t\t\t$active_plugins = $this->plugins_handler->get_active_plugins( false, ! $this->was_included_by_autoloader );\n\t\t} catch ( \\Exception $ex ) {\n\t\t\t\/\/ When the package is deleted before shutdown it will throw an exception.\n\t\t\t\/\/ In the event this happens we should erase the cache.\n\t\t\tif ( ! empty( $this->cached_plugins ) ) {\n\t\t\t\t$this->plugins_handler->cache_plugins( array() );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ The paths should be sorted for easy comparisons with those loaded from the cache.\n\t\t\/\/ Note we don't need to sort the cached entries because they're already sorted.\n\t\tsort( $active_plugins );\n\n\t\t\/\/ We don't want to waste time saving a cache that hasn't changed.\n\t\tif ( $this->cached_plugins === $active_plugins ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->plugins_handler->cache_plugins( $active_plugins );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/SECURITY.md","ext":"md","size":2506,"mtime":1756373567,"type":"text","content":"# Security Policy\n\nFull details of the Automattic Security Policy can be found on [automattic.com](https:\/\/automattic.com\/security\/).\n\n## Supported Versions\n\nGenerally, only the latest version of Jetpack and its associated plugins have continued support. If a critical vulnerability is found in the current version of a plugin, we may opt to backport any patches to previous versions. \n\n## Reporting a Vulnerability\n\nOur HackerOne program covers the below plugin software, as well as a variety of related projects and infrastructure:\n\n* [Jetpack](https:\/\/jetpack.com\/)\n* Jetpack Backup\n* Jetpack Boost\n* Jetpack CRM\n* Jetpack Protect\n* Jetpack Search\n* Jetpack Social\n* Jetpack VideoPress\n\n**For responsible disclosure of security issues and to be eligible for our bug bounty program, please submit your report via the [HackerOne](https:\/\/hackerone.com\/automattic) portal.**\n\nOur most critical targets are:\n\n* Jetpack and the Jetpack composer packages (all within this repo)\n* Jetpack.com -- the primary marketing site.\n* cloud.jetpack.com -- a management site.\n* wordpress.com -- the shared management site for both Jetpack and WordPress.com sites.\n\nFor more targets, see the `In Scope` section on [HackerOne](https:\/\/hackerone.com\/automattic).\n\n_Please note that the **WordPress software is a separate entity** from Automattic. Please report vulnerabilities for WordPress through [the WordPress Foundation's HackerOne page](https:\/\/hackerone.com\/wordpress)._\n\n## Guidelines\n\nWe're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:\n\n*   Follow [HackerOne's disclosure guidelines](https:\/\/www.hackerone.com\/disclosure-guidelines).\n*   Pen-testing Production:\n    *   Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).\n    *   If that's not possible, **limit any data access\/modification** to the bare minimum necessary to reproduce a PoC.\n    *   **_Don't_ automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal\/noise ratio in our communication channels.\n    *   To be eligible for a bounty, all of these guidelines must be followed.\n*   Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability.\n\nWe also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/CHANGELOG.md","ext":"md","size":18625,"mtime":1756373567,"type":"text","content":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https:\/\/keepachangelog.com\/en\/1.0.0\/)\nand this project adheres to [Semantic Versioning](https:\/\/semver.org\/spec\/v2.0.0.html).\n\n## [5.0.9] - 2025-07-28\n### Changed\n- Exclude development files from production build of the package. [#44456]\n\n## [5.0.8] - 2025-06-23\n### Fixed\n- Autoloader: Prevent double slash in autoloader path. [#44030]\n\n## [5.0.7] - 2025-04-28\n### Changed\n- Internal updates.\n\n## [5.0.6] - 2025-03-31\n### Changed\n- Internal updates.\n\n## [5.0.5] - 2025-03-21\n### Changed\n- Internal updates.\n\n## [5.0.4] - 2025-03-17\n### Changed\n- Internal updates.\n\n## [5.0.3] - 2025-03-12\n### Changed\n- Internal updates.\n\n## [5.0.2] - 2025-02-24\n### Changed\n- Internal updates.\n\n## [5.0.1] - 2025-01-20\n### Changed\n- Code: Use function-style exit() and die() with a default status code of 0. [#41167]\n\n## [5.0.0] - 2024-11-25\n### Removed\n- Drop support for Composer <2.2. [#40297]\n- Remove support for WordPress 6.5 and earlier. [#40200]\n\n## [4.0.0] - 2024-11-14\n### Removed\n- General: Update minimum PHP version to 7.2. [#40147]\n\n## [3.1.3] - 2024-11-04\n### Added\n- Enable test coverage. [#39961]\n\n## [3.1.2] - 2024-10-15\n### Changed\n- Internal updates.\n\n## [3.1.1] - 2024-10-10\n### Changed\n- Internal updates.\n\n## [3.1.0] - 2024-09-06\n### Added\n- Add logic for debugging issues caused by conflicting Composer autoloaders, enabled by setting the `JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS` constant. [#38995]\n- Add logic for debugging issues caused by early class loads, enabled by setting the `JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS` constant. [#38995]\n\n## [3.0.10] - 2024-08-26\n### Changed\n- Updated package dependencies. [#39004]\n\n## [3.0.9] - 2024-07-10\n### Fixed\n- Avoid a deprecation notice in `Autoloader_Locator::find_latest_autoloader()`. [#38245]\n\n## [3.0.8] - 2024-05-29\n### Fixed\n- `AutoloadGenerator::__construct` no longer pretends `$io` is nullable. That never worked. [#37608]\n\n## [3.0.7] - 2024-05-06\n### Fixed\n- Avoid deprecation notices when plugin path is null. [#37174]\n\n## [3.0.6] - 2024-04-22\n### Changed\n- Internal updates.\n\n## [3.0.5] - 2024-04-11\n### Changed\n- Internal updates.\n\n## [3.0.4] - 2024-03-18\n### Changed\n- Internal updates.\n\n## [3.0.3] - 2024-03-14\n### Changed\n- Internal updates.\n\n## [3.0.2] - 2023-11-21\n\n## [3.0.1] - 2023-11-21\n\n## [3.0.0] - 2023-11-20\n### Changed\n- Updated required PHP version to >= 7.0. [#34192]\n\n## [2.12.0] - 2023-09-28\n### Added\n- Add an `AutoloadGenerator::VERSION` constant, and use that for the autoloader's version in preference to whatever Composer has. [#33156]\n\n## [2.11.23] - 2023-09-19\n\n- Minor internal updates.\n\n## [2.11.22] - 2023-08-23\n### Changed\n- Updated package dependencies. [#32605]\n\n## [2.11.21] - 2023-05-22\n### Added\n- Set keywords in `composer.json`. [#30756]\n\n## [2.11.20] - 2023-05-11\n\n- Updated package dependencies\n\n## [2.11.19] - 2023-04-25\n### Fixed\n- Fix example in README [#30225]\n\n## [2.11.18] - 2023-03-28\n### Changed\n- Minor internal updates.\n\n## [2.11.17] - 2023-03-27\n### Fixed\n- Don't error when processing packages specifying missing PSR paths. [#29669]\n\n## [2.11.16] - 2023-02-20\n### Changed\n- Minor internal updates.\n\n## [2.11.15] - 2023-01-11\n### Changed\n- Updated package dependencies.\n\n## [2.11.14] - 2022-12-19\n### Changed\n- Use `Composer\\ClassMapGenerator\\ClassMapGenerator` when available (i.e. with composer 2.4). [#27812]\n\n### Fixed\n- Declare fields for PHP 8.2 compatibility. [#27949]\n\n## [2.11.13] - 2022-12-02\n### Changed\n- Updated package dependencies. [#27688]\n\n## [2.11.12] - 2022-11-22\n### Changed\n- Updated package dependencies. [#27043]\n\n## [2.11.11] - 2022-10-25\n### Changed\n- Sort data in generated `vendor\/composer\/jetpack_autoload_classmap.php` to avoid spurious diffs. [#26929]\n\n## [2.11.10] - 2022-10-05\n\n- Tests: Clear `COMPOSER_AUTH` environment variable when running Composer for tests. [#26404]\n\n## [2.11.9] - 2022-09-27\n### Fixed\n- Tests: Clear `COMPOSER_AUTH` environment variable when running Composer for tests. [#26404]\n\n## [2.11.8] - 2022-09-20\n### Fixed\n- Tests: skip test if it requires a version of Composer not compatible with the running version of PHP. [#26143]\n\n## [2.11.7] - 2022-07-26\n### Changed\n- Updated package dependencies. [#25158]\n\n## [2.11.6] - 2022-06-21\n### Changed\n- Renaming `master` to `trunk`.\n\n## [2.11.5] - 2022-05-18\n### Fixed\n- Fix new PHPCS sniffs. [#24366]\n\n## [2.11.4] - 2022-04-26\n### Changed\n- Updated package dependencies.\n\n## [2.11.3] - 2022-04-19\n### Changed\n- PHPCS: Fix `WordPress.Security.ValidatedSanitizedInput`\n\n## [2.11.2] - 2022-03-29\n### Changed\n- Microperformance: Use === null instead of is_null\n\n## [2.11.1] - 2022-03-08\n### Removed\n- Removed the Upgrade Handler.\n\n## [2.11.0] - 2022-03-08\n### Added\n- On plugin update, pre-load all (non-PSR-4) classes from the plugin to avoid mid-upgrade fatals.\n\n## [2.10.13] - 2022-03-01\n### Fixed\n- Fix tests for upstream phpunit change.\n\n## [2.10.12] - 2022-01-25\n### Changed\n- Updated package dependencies.\n\n## [2.10.11] - 2022-01-04\n### Changed\n- Switch to pcov for code coverage.\n- Updated package dependencies\n\n## [2.10.10] - 2021-11-16\n### Added\n- Soft return if autoloader chain is not available.\n\n## [2.10.9] - 2021-11-02\n### Changed\n- Set `convertDeprecationsToExceptions` true in PHPUnit config.\n\n## [2.10.8] - 2021-10-13\n### Changed\n- Updated package dependencies.\n\n## [2.10.7] - 2021-10-07\n### Changed\n- Updated package dependencies\n\n## [2.10.6] - 2021-09-28\n### Changed\n- Updated package dependencies.\n\n## [2.10.5] - 2021-08-31\n### Changed\n- Run composer update on test-php command instead of phpunit\n- Tests: update PHPUnit polyfills dependency (yoast\/phpunit-polyfills).\n\n## [2.10.4] - 2021-08-10\n### Changed\n- Updated package dependencies.\n\n## [2.10.3] - 2021-05-25\n### Changed\n- Updated package dependencies.\n\n## [2.10.2] - 2021-04-27\n### Changed\n- Updated package dependencies.\n\n## [2.10.1] - 2021-03-30\n### Added\n- Composer alias for dev-master, to improve dependencies\n- Tests: Added code coverage transformation\n\n### Changed\n- Update package dependencies.\n\n### Fixed\n- Fix coverage test\n- Fix uninstallation fatal\n- Update tests for changed composer 2.0.9 hash.\n- Use `composer update` rather than `install` in scripts, as composer.lock isn't checked in.\n\n## [2.10.0] - 2021-02-09\n\n- Autoloader: test suite refactor\n\n## [2.9.1] - 2021-02-05\n\n- CI: Make tests more generic\n- Autoloader: stricter type-checking on WP functions\n- Autoloader: prevent transitive plugin execution\n\n## [2.9.0] - 2021-01-25\n\n- Autoloader: revised latest autoloader inclusion semantics\n- Add mirror-repo information to all current composer packages\n- Monorepo: Reorganize all projects\n- Autoloader: Don't cache deactivating plugins\n\n## [2.8.0] - 2020-12-18\n\n## [2.7.1] - 2020-12-18\n\n- Autoloader: Added realpath resolution to plugin paths\n\n## [2.7.0] - 2020-12-08\n\n- Autoloader: Preemptively load unknown plugins from cache\n- Removed unwanted dot\n- Pin dependencies\n- Packages: Update for PHP 8 testing\n\n## [2.6.0] - 2020-11-19\n\n- Autoloader: AutoloadGenerator no longer extends Composer's AutoloadGenerator class\n- Autoloader: Reuse an existing autoloader suffix if available\n- Updated PHPCS: Packages and Debugger\n\n## [2.5.0] - 2020-10-08\n\n- Autoloader: remove the defined('JETPACK_AUTOLOAD_DEV') checks from the tests\n\n## [2.4.0] - 2020-09-28\n\n- Autoloader: remove the plugins_loaded bullet point from the README\n- Packages: avoid PHPCS warnings\n- Autoloader: add PSR-0 support\n- Autoloader: Detect filtering of active_plugins\n- Autoloader: Support unoptimized PSR-4\n\n## [2.3.0] - 2020-08-21\n\n- Autoloader: remove the plugin update hook\n\n## [2.2.0] - 2020-08-14\n\n- Autoloader: don't reset the autoloader version during plugin update\n- CI: Try collect js coverage\n\n## [2.1.0] - 2020-07-27\n\n- Autoloader: convert '\\' directory separators to '\/' in plugin paths\n- Autoloader: Avoid a PHP warning when an empty string is passed to `is_directory_plugin()`.\n- Autoloader: Tests: Use a string with define\n\n## [2.0.2] - 2020-07-09\n\n- Autoloader: Avoid a PHP warning when an empty string is passed to `is_directory_plugin()`.\n\n## [2.0.1] - 2020-07-02\n\n- Autoloader: Tests: Use a string with define\n\n## [2.0.0] - 2020-06-29\n\n## [2.0.0-beta] - 2020-06-29\n\n- Autoloader: Support Composer v2.0\n- Autoloader: use paths to identify plugins instead of the directories\n- Autoloader: fix the fatal that occurs during plugin update\n- Autoloader: add fallback check for plugin path in mu-plugins\n- Autoloader: use JETPACK__PLUGIN_DIR when looking for the jetpack plugin directory.\n- Feature Branch: Update the Autoloader\n- PHPCS: Clean up the packages\n- PHPCS Updates after WPCS 2.3\n\n## [1.7.0] - 2020-04-23\n\n- Jetpack: Move comment notification override back to the constructor\n\n## [1.6.0] - 2020-03-26\n\n- Autoloader: Remove file check to improve performance.\n\n## [1.5.0] - 2020-02-25\n\n- Jetpack: instantiate manager object if it's null\n\n## [1.4.1] - 2020-02-14\n\n- Autoloader: Load only latest version of autoload files to avoid conflicts.\n\n## [1.4.0] - 2020-01-23\n\n- Autoloader: Remove the ignored classes\n\n## [1.3.8] - 2020-01-14\n\n- Trying to add deterministic initialization.\n- Autoloader: Remove Manager_Interface and Plugin\\Tracking from ignored list\n- Autoloader: Remove Jetpack_IXR_Client from ignore list\n\n## [1.3.7] - 2019-12-10\n\n## [1.3.6] - 2019-12-09\n\n- Autoloader: Use long-form sytax for array\n\n## [1.3.5] - 2019-11-26\n\n- Fix\/php notice status\n\n## [1.3.4] - 2019-11-08\n\n- Deprecate Jetpack::is_development_mode() in favor of the packaged Status()-&gt;is_development_mode()\n\n## [1.3.3] - 2019-10-28\n\n- Packages: Add gitattributes files to all packages that need th\u2026\n\n## [1.3.2] - 2019-09-24\n\n- Autoloader: Cover scenarios where composer\/autoload_files.php\u2026\n\n## [1.3.1] - 2019-09-20\n\n- Docs: Unify usage of @package phpdoc tags\n\n## [1.3.0] - 2019-09-14\n\n- Fix for empty namespaces. #13459\n- Connection: Move the Jetpack IXR client to the package\n- Adds full connection cycle capability to the Connection package.\n- Jetpack 7.5: Back compatibility package\n\n## [1.2.0] - 2019-06-24\n\n- Jetpack DNA: Add full classmap support to Autoloader\n- Move Jetpack_Sync_Main from legacy to PSR-4\n\n## [1.1.0] - 2019-06-19\n\n- Packages: Move autoloader tests to the package\n- DNA: Move Jetpack Usage tracking to its own file\n- Jetpack DNA: More isolation of Tracks Package\n- Autoloader: Ignore XMLRPC_Connector if called too early\n- Autoloader: Ignore Jetpack_Signature if called too early\n\n## 1.0.0 - 2019-06-11\n\n- Add Custom Autoloader\n\n[5.0.9]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.8...v5.0.9\n[5.0.8]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.7...v5.0.8\n[5.0.7]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.6...v5.0.7\n[5.0.6]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.5...v5.0.6\n[5.0.5]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.4...v5.0.5\n[5.0.4]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.3...v5.0.4\n[5.0.3]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.2...v5.0.3\n[5.0.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.1...v5.0.2\n[5.0.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v5.0.0...v5.0.1\n[5.0.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v4.0.0...v5.0.0\n[4.0.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.1.3...v4.0.0\n[3.1.3]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.1.2...v3.1.3\n[3.1.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.1.1...v3.1.2\n[3.1.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.1.0...v3.1.1\n[3.1.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.10...v3.1.0\n[3.0.10]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.9...v3.0.10\n[3.0.9]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.8...v3.0.9\n[3.0.8]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.7...v3.0.8\n[3.0.7]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.6...v3.0.7\n[3.0.6]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.5...v3.0.6\n[3.0.5]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.4...v3.0.5\n[3.0.4]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.3...v3.0.4\n[3.0.3]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.2...v3.0.3\n[3.0.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.1...v3.0.2\n[3.0.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v3.0.0...v3.0.1\n[3.0.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.12.0...v3.0.0\n[2.12.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.23...v2.12.0\n[2.11.23]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.22...v2.11.23\n[2.11.22]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.21...v2.11.22\n[2.11.21]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.20...v2.11.21\n[2.11.20]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.19...v2.11.20\n[2.11.19]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.18...v2.11.19\n[2.11.18]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.17...v2.11.18\n[2.11.17]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.16...v2.11.17\n[2.11.16]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.15...v2.11.16\n[2.11.15]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.14...v2.11.15\n[2.11.14]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.13...v2.11.14\n[2.11.13]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.12...v2.11.13\n[2.11.12]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.11...v2.11.12\n[2.11.11]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.10...v2.11.11\n[2.11.10]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.9...v2.11.10\n[2.11.9]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.8...v2.11.9\n[2.11.8]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.7...v2.11.8\n[2.11.7]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.6...v2.11.7\n[2.11.6]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.5...v2.11.6\n[2.11.5]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.4...v2.11.5\n[2.11.4]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.3...v2.11.4\n[2.11.3]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.2...v2.11.3\n[2.11.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.1...v2.11.2\n[2.11.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.11.0...v2.11.1\n[2.11.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.13...v2.11.0\n[2.10.13]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.12...v2.10.13\n[2.10.12]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.11...v2.10.12\n[2.10.11]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.10...v2.10.11\n[2.10.10]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.9...v2.10.10\n[2.10.9]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.8...v2.10.9\n[2.10.8]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.7...v2.10.8\n[2.10.7]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.6...v2.10.7\n[2.10.6]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.5...v2.10.6\n[2.10.5]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.4...v2.10.5\n[2.10.4]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.3...v2.10.4\n[2.10.3]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.2...v2.10.3\n[2.10.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.1...v2.10.2\n[2.10.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.10.0...v2.10.1\n[2.10.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.9.1...v2.10.0\n[2.9.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.9.0...v2.9.1\n[2.9.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.8.0...v2.9.0\n[2.8.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.7.1...v2.8.0\n[2.7.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.7.0...v2.7.1\n[2.7.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.6.0...v2.7.0\n[2.6.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.5.0...v2.6.0\n[2.5.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.4.0...v2.5.0\n[2.4.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.3.0...v2.4.0\n[2.3.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.2.0...v2.3.0\n[2.2.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.1.0...v2.2.0\n[2.1.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.0.2...v2.1.0\n[2.0.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.0.1...v2.0.2\n[2.0.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.0.0...v2.0.1\n[2.0.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v2.0.0-beta...v2.0.0\n[2.0.0-beta]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.7.0...v2.0.0-beta\n[1.7.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.6.0...v1.7.0\n[1.6.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.5.0...v1.6.0\n[1.5.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.4.1...v1.5.0\n[1.4.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.4.0...v1.4.1\n[1.4.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.8...v1.4.0\n[1.3.8]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.7...v1.3.8\n[1.3.7]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.6...v1.3.7\n[1.3.6]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.5...v1.3.6\n[1.3.5]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.4...v1.3.5\n[1.3.4]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.3...v1.3.4\n[1.3.3]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.2...v1.3.3\n[1.3.2]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.1...v1.3.2\n[1.3.1]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.3.0...v1.3.1\n[1.3.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.2.0...v1.3.0\n[1.2.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.1.0...v1.2.0\n[1.1.0]: https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v1.0.0...v1.1.0\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php","ext":"php","size":13649,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Autoloader Generator.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader;\n\nuse Composer\\Composer;\nuse Composer\\Config;\nuse Composer\\Installer\\InstallationManager;\nuse Composer\\IO\\IOInterface;\nuse Composer\\Package\\PackageInterface;\nuse Composer\\Repository\\InstalledRepositoryInterface;\nuse Composer\\Util\\Filesystem;\nuse Composer\\Util\\PackageSorter;\n\n\/**\n * Class AutoloadGenerator.\n *\/\nclass AutoloadGenerator {\n\n\tconst VERSION = '5.0.9';\n\n\t\/**\n\t * IO object.\n\t *\n\t * @var IOInterface IO object.\n\t *\/\n\tprivate $io;\n\n\t\/**\n\t * The filesystem utility.\n\t *\n\t * @var Filesystem\n\t *\/\n\tprivate $filesystem;\n\n\t\/**\n\t * Instantiate an AutoloadGenerator object.\n\t *\n\t * @param IOInterface $io IO object.\n\t *\/\n\tpublic function __construct( IOInterface $io ) {\n\t\t$this->io         = $io;\n\t\t$this->filesystem = new Filesystem();\n\t}\n\n\t\/**\n\t * Dump the Jetpack autoloader files.\n\t *\n\t * @param Composer                     $composer The Composer object.\n\t * @param Config                       $config Config object.\n\t * @param InstalledRepositoryInterface $localRepo Installed Repository object.\n\t * @param PackageInterface             $mainPackage Main Package object.\n\t * @param InstallationManager          $installationManager Manager for installing packages.\n\t * @param string                       $targetDir Path to the current target directory.\n\t * @param bool                         $scanPsrPackages Whether or not PSR packages should be converted to a classmap.\n\t * @param string                       $suffix The autoloader suffix.\n\t *\/\n\tpublic function dump(\n\t\tComposer $composer,\n\t\tConfig $config,\n\t\tInstalledRepositoryInterface $localRepo,\n\t\tPackageInterface $mainPackage,\n\t\tInstallationManager $installationManager,\n\t\t$targetDir,\n\t\t$scanPsrPackages = false,\n\t\t$suffix = null\n\t) {\n\t\t$this->filesystem->ensureDirectoryExists( $config->get( 'vendor-dir' ) );\n\n\t\t$packageMap = $composer->getAutoloadGenerator()->buildPackageMap( $installationManager, $mainPackage, $localRepo->getCanonicalPackages() );\n\t\t$autoloads  = $this->parseAutoloads( $packageMap, $mainPackage );\n\n\t\t\/\/ Convert the autoloads into a format that the manifest generator can consume more easily.\n\t\t$basePath           = $this->filesystem->normalizePath( realpath( getcwd() ) );\n\t\t$vendorPath         = $this->filesystem->normalizePath( realpath( $config->get( 'vendor-dir' ) ) );\n\t\t$processedAutoloads = $this->processAutoloads( $autoloads, $scanPsrPackages, $vendorPath, $basePath );\n\t\tunset( $packageMap, $autoloads );\n\n\t\t\/\/ Make sure none of the legacy files remain that can lead to problems with the autoloader.\n\t\t$this->removeLegacyFiles( $vendorPath );\n\n\t\t\/\/ Write all of the files now that we're done.\n\t\t$this->writeAutoloaderFiles( $vendorPath . '\/jetpack-autoloader\/', $suffix );\n\t\t$this->writeManifests( $vendorPath . '\/' . $targetDir, $processedAutoloads );\n\n\t\tif ( ! $scanPsrPackages ) {\n\t\t\t$this->io->writeError( '<warning>You are generating an unoptimized autoloader. If this is a production build, consider using the -o option.<\/warning>' );\n\t\t}\n\t}\n\n\t\/**\n\t * Compiles an ordered list of namespace => path mappings\n\t *\n\t * @param  array            $packageMap  Array of array(package, installDir-relative-to-composer.json).\n\t * @param  PackageInterface $mainPackage Main package instance.\n\t *\n\t * @return array The list of path mappings.\n\t *\/\n\tpublic function parseAutoloads( array $packageMap, PackageInterface $mainPackage ) {\n\t\t$rootPackageMap = array_shift( $packageMap );\n\n\t\t$sortedPackageMap   = $this->sortPackageMap( $packageMap );\n\t\t$sortedPackageMap[] = $rootPackageMap;\n\t\tarray_unshift( $packageMap, $rootPackageMap );\n\n\t\t$psr0     = $this->parseAutoloadsType( $packageMap, 'psr-0', $mainPackage );\n\t\t$psr4     = $this->parseAutoloadsType( $packageMap, 'psr-4', $mainPackage );\n\t\t$classmap = $this->parseAutoloadsType( array_reverse( $sortedPackageMap ), 'classmap', $mainPackage );\n\t\t$files    = $this->parseAutoloadsType( $sortedPackageMap, 'files', $mainPackage );\n\n\t\tkrsort( $psr0 );\n\t\tkrsort( $psr4 );\n\n\t\treturn array(\n\t\t\t'psr-0'    => $psr0,\n\t\t\t'psr-4'    => $psr4,\n\t\t\t'classmap' => $classmap,\n\t\t\t'files'    => $files,\n\t\t);\n\t}\n\n\t\/**\n\t * Sorts packages by dependency weight\n\t *\n\t * Packages of equal weight retain the original order\n\t *\n\t * @param  array $packageMap The package map.\n\t *\n\t * @return array\n\t *\/\n\tprotected function sortPackageMap( array $packageMap ) {\n\t\t$packages = array();\n\t\t$paths    = array();\n\n\t\tforeach ( $packageMap as $item ) {\n\t\t\tlist( $package, $path ) = $item;\n\t\t\t$name                   = $package->getName();\n\t\t\t$packages[ $name ]      = $package;\n\t\t\t$paths[ $name ]         = $path;\n\t\t}\n\n\t\t$sortedPackages = PackageSorter::sortPackages( $packages );\n\n\t\t$sortedPackageMap = array();\n\n\t\tforeach ( $sortedPackages as $package ) {\n\t\t\t$name               = $package->getName();\n\t\t\t$sortedPackageMap[] = array( $packages[ $name ], $paths[ $name ] );\n\t\t}\n\n\t\treturn $sortedPackageMap;\n\t}\n\n\t\/**\n\t * Returns the file identifier.\n\t *\n\t * @param PackageInterface $package The package instance.\n\t * @param string           $path The path.\n\t *\/\n\tprotected function getFileIdentifier( PackageInterface $package, $path ) {\n\t\treturn md5( $package->getName() . ':' . $path );\n\t}\n\n\t\/**\n\t * Returns the path code for the given path.\n\t *\n\t * @param Filesystem $filesystem The filesystem instance.\n\t * @param string     $basePath The base path.\n\t * @param string     $vendorPath The vendor path.\n\t * @param string     $path The path.\n\t *\n\t * @return string The path code.\n\t *\/\n\tprotected function getPathCode( Filesystem $filesystem, $basePath, $vendorPath, $path ) {\n\t\tif ( ! $filesystem->isAbsolutePath( $path ) ) {\n\t\t\t$path = $basePath . '\/' . $path;\n\t\t}\n\t\t$path = $filesystem->normalizePath( $path );\n\n\t\t$baseDir = '';\n\t\tif ( 0 === strpos( $path . '\/', $vendorPath . '\/' ) ) {\n\t\t\t$path    = substr( $path, strlen( $vendorPath ) );\n\t\t\t$baseDir = '$vendorDir';\n\n\t\t\tif ( false !== $path ) {\n\t\t\t\t$baseDir .= ' . ';\n\t\t\t}\n\t\t} else {\n\t\t\t$path = $filesystem->normalizePath( $filesystem->findShortestPath( $basePath, $path, true ) );\n\t\t\tif ( ! $filesystem->isAbsolutePath( $path ) ) {\n\t\t\t\t$baseDir = '$baseDir . ';\n\t\t\t\t$path    = '\/' . $path;\n\t\t\t}\n\t\t}\n\n\t\tif ( strpos( $path, '.phar' ) !== false ) {\n\t\t\t$baseDir = \"'phar:\/\/' . \" . $baseDir;\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\treturn $baseDir . ( ( false !== $path ) ? var_export( $path, true ) : '' );\n\t}\n\n\t\/**\n\t * This function differs from the composer parseAutoloadsType in that beside returning the path.\n\t * It also return the path and the version of a package.\n\t *\n\t * Supports PSR-4, PSR-0, and classmap parsing.\n\t *\n\t * @param array            $packageMap Map of all the packages.\n\t * @param string           $type Type of autoloader to use.\n\t * @param PackageInterface $mainPackage Instance of the Package Object.\n\t *\n\t * @return array\n\t *\/\n\tprotected function parseAutoloadsType( array $packageMap, $type, PackageInterface $mainPackage ) {\n\t\t$autoloads = array();\n\n\t\tforeach ( $packageMap as $item ) {\n\t\t\tlist($package, $installPath) = $item;\n\t\t\t$autoload                    = $package->getAutoload();\n\t\t\t$version                     = $package->getVersion(); \/\/ Version of the class comes from the package - should we try to parse it?\n\n\t\t\t\/\/ Store our own actual package version, not \"dev-trunk\" or whatever.\n\t\t\tif ( $package->getName() === 'automattic\/jetpack-autoloader' ) {\n\t\t\t\t$version = self::VERSION;\n\t\t\t}\n\n\t\t\tif ( $package === $mainPackage ) {\n\t\t\t\t$autoload = array_merge_recursive( $autoload, $package->getDevAutoload() );\n\t\t\t}\n\n\t\t\tif ( null !== $package->getTargetDir() && $package !== $mainPackage ) {\n\t\t\t\t$installPath = substr( $installPath, 0, -strlen( '\/' . $package->getTargetDir() ) );\n\t\t\t}\n\n\t\t\tif ( in_array( $type, array( 'psr-4', 'psr-0' ), true ) && isset( $autoload[ $type ] ) && is_array( $autoload[ $type ] ) ) {\n\t\t\t\tforeach ( $autoload[ $type ] as $namespace => $paths ) {\n\t\t\t\t\t$paths = is_array( $paths ) ? $paths : array( $paths );\n\t\t\t\t\tforeach ( $paths as $path ) {\n\t\t\t\t\t\t$relativePath              = empty( $installPath ) ? ( empty( $path ) ? '.' : $path ) : $installPath . '\/' . $path;\n\t\t\t\t\t\t$autoloads[ $namespace ][] = array(\n\t\t\t\t\t\t\t'path'    => $relativePath,\n\t\t\t\t\t\t\t'version' => $version,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( 'classmap' === $type && isset( $autoload['classmap'] ) && is_array( $autoload['classmap'] ) ) {\n\t\t\t\tforeach ( $autoload['classmap'] as $paths ) {\n\t\t\t\t\t$paths = is_array( $paths ) ? $paths : array( $paths );\n\t\t\t\t\tforeach ( $paths as $path ) {\n\t\t\t\t\t\t$relativePath = empty( $installPath ) ? ( empty( $path ) ? '.' : $path ) : $installPath . '\/' . $path;\n\t\t\t\t\t\t$autoloads[]  = array(\n\t\t\t\t\t\t\t'path'    => $relativePath,\n\t\t\t\t\t\t\t'version' => $version,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( 'files' === $type && isset( $autoload['files'] ) && is_array( $autoload['files'] ) ) {\n\t\t\t\tforeach ( $autoload['files'] as $paths ) {\n\t\t\t\t\t$paths = is_array( $paths ) ? $paths : array( $paths );\n\t\t\t\t\tforeach ( $paths as $path ) {\n\t\t\t\t\t\t$relativePath = empty( $installPath ) ? ( empty( $path ) ? '.' : $path ) : $installPath . '\/' . $path;\n\t\t\t\t\t\t$autoloads[ $this->getFileIdentifier( $package, $path ) ] = array(\n\t\t\t\t\t\t\t'path'    => $relativePath,\n\t\t\t\t\t\t\t'version' => $version,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $autoloads;\n\t}\n\n\t\/**\n\t * Given Composer's autoloads this will convert them to a version that we can use to generate the manifests.\n\t *\n\t * When the $scanPsrPackages argument is true, PSR-4 namespaces are converted to classmaps. When $scanPsrPackages\n\t * is false, PSR-4 namespaces are not converted to classmaps.\n\t *\n\t * PSR-0 namespaces are always converted to classmaps.\n\t *\n\t * @param array  $autoloads The autoloads we want to process.\n\t * @param bool   $scanPsrPackages Whether or not PSR-4 packages should be converted to a classmap.\n\t * @param string $vendorPath The path to the vendor directory.\n\t * @param string $basePath The path to the current directory.\n\t *\n\t * @return array $processedAutoloads\n\t *\/\n\tprivate function processAutoloads( $autoloads, $scanPsrPackages, $vendorPath, $basePath ) {\n\t\t$processor = new AutoloadProcessor(\n\t\t\tfunction ( $path, $excludedClasses, $namespace ) use ( $basePath ) {\n\t\t\t\t$dir = $this->filesystem->normalizePath(\n\t\t\t\t\t$this->filesystem->isAbsolutePath( $path ) ? $path : $basePath . '\/' . $path\n\t\t\t\t);\n\n\t\t\t\t\/\/ Composer 2.4 changed the name of the class.\n\t\t\t\tif ( class_exists( \\Composer\\ClassMapGenerator\\ClassMapGenerator::class ) ) {\n\t\t\t\t\tif ( ! is_dir( $dir ) && ! is_file( $dir ) ) {\n\t\t\t\t\t\treturn array();\n\t\t\t\t\t}\n\t\t\t\t\t$generator = new \\Composer\\ClassMapGenerator\\ClassMapGenerator();\n\t\t\t\t\t$generator->scanPaths( $dir, $excludedClasses, 'classmap', empty( $namespace ) ? null : $namespace );\n\t\t\t\t\treturn $generator->getClassMap()->getMap();\n\t\t\t\t}\n\n\t\t\t\treturn \\Composer\\Autoload\\ClassMapGenerator::createMap(\n\t\t\t\t\t$dir,\n\t\t\t\t\t$excludedClasses,\n\t\t\t\t\tnull, \/\/ Don't pass the IOInterface since the normal autoload generation will have reported already.\n\t\t\t\t\tempty( $namespace ) ? null : $namespace\n\t\t\t\t);\n\t\t\t},\n\t\t\tfunction ( $path ) use ( $basePath, $vendorPath ) {\n\t\t\t\treturn $this->getPathCode( $this->filesystem, $basePath, $vendorPath, $path );\n\t\t\t}\n\t\t);\n\n\t\treturn array(\n\t\t\t'psr-4'    => $processor->processPsr4Packages( $autoloads, $scanPsrPackages ),\n\t\t\t'classmap' => $processor->processClassmap( $autoloads, $scanPsrPackages ),\n\t\t\t'files'    => $processor->processFiles( $autoloads ),\n\t\t);\n\t}\n\n\t\/**\n\t * Removes all of the legacy autoloader files so they don't cause any problems.\n\t *\n\t * @param string $outDir The directory legacy files are written to.\n\t *\/\n\tprivate function removeLegacyFiles( $outDir ) {\n\t\t$files = array(\n\t\t\t'autoload_functions.php',\n\t\t\t'class-autoloader-handler.php',\n\t\t\t'class-classes-handler.php',\n\t\t\t'class-files-handler.php',\n\t\t\t'class-plugins-handler.php',\n\t\t\t'class-version-selector.php',\n\t\t);\n\t\tforeach ( $files as $file ) {\n\t\t\t$this->filesystem->remove( $outDir . '\/' . $file );\n\t\t}\n\t}\n\n\t\/**\n\t * Writes all of the autoloader files to disk.\n\t *\n\t * @param string $outDir The directory to write to.\n\t * @param string $suffix The unique autoloader suffix.\n\t *\/\n\tprivate function writeAutoloaderFiles( $outDir, $suffix ) {\n\t\t$this->io->writeError( \"<info>Generating jetpack autoloader ($outDir)<\/info>\" );\n\n\t\t\/\/ We will remove all autoloader files to generate this again.\n\t\t$this->filesystem->emptyDirectory( $outDir );\n\n\t\t\/\/ Write the autoloader files.\n\t\tAutoloadFileWriter::copyAutoloaderFiles( $this->io, $outDir, $suffix );\n\t}\n\n\t\/**\n\t * Writes all of the manifest files to disk.\n\t *\n\t * @param string $outDir The directory to write to.\n\t * @param array  $processedAutoloads The processed autoloads.\n\t *\/\n\tprivate function writeManifests( $outDir, $processedAutoloads ) {\n\t\t$this->io->writeError( \"<info>Generating jetpack autoloader manifests ($outDir)<\/info>\" );\n\n\t\t$manifestFiles = array(\n\t\t\t'classmap' => 'jetpack_autoload_classmap.php',\n\t\t\t'psr-4'    => 'jetpack_autoload_psr4.php',\n\t\t\t'files'    => 'jetpack_autoload_filemap.php',\n\t\t);\n\n\t\tforeach ( $manifestFiles as $key => $file ) {\n\t\t\t\/\/ Make sure the file doesn't exist so it isn't there if we don't write it.\n\t\t\t$this->filesystem->remove( $outDir . '\/' . $file );\n\t\t\tif ( empty( $processedAutoloads[ $key ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$content = ManifestGenerator::buildManifest( $key, $file, $processedAutoloads[ $key ] );\n\t\t\tif ( empty( $content ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( file_put_contents( $outDir . '\/' . $file, $content ) ) {\n\t\t\t\t$this->io->writeError( \"  <info>Generated: $file<\/info>\" );\n\t\t\t} else {\n\t\t\t\t$this->io->writeError( \"  <error>Error: $file<\/error>\" );\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/autoload.php","ext":"php","size":123,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\nrequire_once __DIR__ . '\/jetpack-autoloader\/class-autoloader.php';\nAutoloader::init();\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-container.php","ext":"php","size":4719,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class manages the files and dependencies of the autoloader.\n *\/\nclass Container {\n\n\t\/**\n\t * Since each autoloader's class files exist within their own namespace we need a map to\n\t * convert between the local class and a shared key. Note that no version checking is\n\t * performed on these dependencies and the first autoloader to register will be the\n\t * one that is utilized.\n\t *\/\n\tconst SHARED_DEPENDENCY_KEYS = array(\n\t\tHook_Manager::class => 'Hook_Manager',\n\t);\n\n\t\/**\n\t * A map of all the dependencies we've registered with the container and created.\n\t *\n\t * @var array\n\t *\/\n\tprotected $dependencies;\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->dependencies = array();\n\n\t\t$this->register_shared_dependencies();\n\t\t$this->register_dependencies();\n\t\t$this->initialize_globals();\n\t}\n\n\t\/**\n\t * Gets a dependency out of the container.\n\t *\n\t * @param string $class The class to fetch.\n\t *\n\t * @return mixed\n\t * @throws \\InvalidArgumentException When a class that isn't registered with the container is fetched.\n\t *\/\n\tpublic function get( $class ) {\n\t\tif ( ! isset( $this->dependencies[ $class ] ) ) {\n\t\t\tthrow new \\InvalidArgumentException( \"Class '$class' is not registered with the container.\" );\n\t\t}\n\n\t\treturn $this->dependencies[ $class ];\n\t}\n\n\t\/**\n\t * Registers all of the dependencies that are shared between all instances of the autoloader.\n\t *\/\n\tprivate function register_shared_dependencies() {\n\t\tglobal $jetpack_autoloader_container_shared;\n\t\tif ( ! isset( $jetpack_autoloader_container_shared ) ) {\n\t\t\t$jetpack_autoloader_container_shared = array();\n\t\t}\n\n\t\t$key = self::SHARED_DEPENDENCY_KEYS[ Hook_Manager::class ];\n\t\tif ( ! isset( $jetpack_autoloader_container_shared[ $key ] ) ) {\n\t\t\trequire_once __DIR__ . '\/class-hook-manager.php';\n\t\t\t$jetpack_autoloader_container_shared[ $key ] = new Hook_Manager();\n\t\t}\n\t\t$this->dependencies[ Hook_Manager::class ] = &$jetpack_autoloader_container_shared[ $key ];\n\t}\n\n\t\/**\n\t * Registers all of the dependencies with the container.\n\t *\/\n\tprivate function register_dependencies() {\n\t\trequire_once __DIR__ . '\/class-path-processor.php';\n\t\t$this->dependencies[ Path_Processor::class ] = new Path_Processor();\n\n\t\trequire_once __DIR__ . '\/class-plugin-locator.php';\n\t\t$this->dependencies[ Plugin_Locator::class ] = new Plugin_Locator(\n\t\t\t$this->get( Path_Processor::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-version-selector.php';\n\t\t$this->dependencies[ Version_Selector::class ] = new Version_Selector();\n\n\t\trequire_once __DIR__ . '\/class-autoloader-locator.php';\n\t\t$this->dependencies[ Autoloader_Locator::class ] = new Autoloader_Locator(\n\t\t\t$this->get( Version_Selector::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-php-autoloader.php';\n\t\t$this->dependencies[ PHP_Autoloader::class ] = new PHP_Autoloader();\n\n\t\trequire_once __DIR__ . '\/class-manifest-reader.php';\n\t\t$this->dependencies[ Manifest_Reader::class ] = new Manifest_Reader(\n\t\t\t$this->get( Version_Selector::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-plugins-handler.php';\n\t\t$this->dependencies[ Plugins_Handler::class ] = new Plugins_Handler(\n\t\t\t$this->get( Plugin_Locator::class ),\n\t\t\t$this->get( Path_Processor::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-autoloader-handler.php';\n\t\t$this->dependencies[ Autoloader_Handler::class ] = new Autoloader_Handler(\n\t\t\t$this->get( PHP_Autoloader::class ),\n\t\t\t$this->get( Hook_Manager::class ),\n\t\t\t$this->get( Manifest_Reader::class ),\n\t\t\t$this->get( Version_Selector::class )\n\t\t);\n\n\t\trequire_once __DIR__ . '\/class-latest-autoloader-guard.php';\n\t\t$this->dependencies[ Latest_Autoloader_Guard::class ] = new Latest_Autoloader_Guard(\n\t\t\t$this->get( Plugins_Handler::class ),\n\t\t\t$this->get( Autoloader_Handler::class ),\n\t\t\t$this->get( Autoloader_Locator::class )\n\t\t);\n\n\t\t\/\/ Register any classes that we will use elsewhere.\n\t\trequire_once __DIR__ . '\/class-version-loader.php';\n\t\trequire_once __DIR__ . '\/class-shutdown-handler.php';\n\t}\n\n\t\/**\n\t * Initializes any of the globals needed by the autoloader.\n\t *\/\n\tprivate function initialize_globals() {\n\t\t\/*\n\t\t * This global was retired in version 2.9. The value is set to 'false' to maintain\n\t\t * compatibility with older versions of the autoloader.\n\t\t *\/\n\t\tglobal $jetpack_autoloader_including_latest;\n\t\t$jetpack_autoloader_including_latest = false;\n\n\t\t\/\/ Not all plugins can be found using the locator. In cases where a plugin loads the autoloader\n\t\t\/\/ but was not discoverable, we will record them in this array to track them as \"active\".\n\t\tglobal $jetpack_autoloader_activating_plugins_paths;\n\t\tif ( ! isset( $jetpack_autoloader_activating_plugins_paths ) ) {\n\t\t\t$jetpack_autoloader_activating_plugins_paths = array();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-plugin-locator.php","ext":"php","size":4426,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class scans the WordPress installation to find active plugins.\n *\/\nclass Plugin_Locator {\n\n\t\/**\n\t * The path processor for finding plugin paths.\n\t *\n\t * @var Path_Processor\n\t *\/\n\tprivate $path_processor;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Path_Processor $path_processor The Path_Processor instance.\n\t *\/\n\tpublic function __construct( $path_processor ) {\n\t\t$this->path_processor = $path_processor;\n\t}\n\n\t\/**\n\t * Finds the path to the current plugin.\n\t *\n\t * @return string $path The path to the current plugin.\n\t *\n\t * @throws \\RuntimeException If the current plugin does not have an autoloader.\n\t *\/\n\tpublic function find_current_plugin() {\n\t\t\/\/ Escape from `vendor\/__DIR__` to root plugin directory.\n\t\t$plugin_directory = dirname( __DIR__, 2 );\n\n\t\t\/\/ Use the path processor to ensure that this is an autoloader we're referencing.\n\t\t$path = $this->path_processor->find_directory_with_autoloader( $plugin_directory, array() );\n\t\tif ( false === $path ) {\n\t\t\tthrow new \\RuntimeException( 'Failed to locate plugin ' . $plugin_directory );\n\t\t}\n\n\t\treturn $path;\n\t}\n\n\t\/**\n\t * Checks a given option for plugin paths.\n\t *\n\t * @param string $option_name  The option that we want to check for plugin information.\n\t * @param bool   $site_option  Indicates whether or not we want to check the site option.\n\t *\n\t * @return array $plugin_paths The list of absolute paths we've found.\n\t *\/\n\tpublic function find_using_option( $option_name, $site_option = false ) {\n\t\t$raw = $site_option ? get_site_option( $option_name ) : get_option( $option_name );\n\t\tif ( false === $raw ) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn $this->convert_plugins_to_paths( $raw );\n\t}\n\n\t\/**\n\t * Checks for plugins in the `action` request parameter.\n\t *\n\t * @param string[] $allowed_actions The actions that we're allowed to return plugins for.\n\t *\n\t * @return array $plugin_paths The list of absolute paths we've found.\n\t *\/\n\tpublic function find_using_request_action( $allowed_actions ) {\n\t\t\/**\n\t\t * Note: we're not actually checking the nonce here because it's too early\n\t\t * in the execution. The pluggable functions are not yet loaded to give\n\t\t * plugins a chance to plug their versions. Therefore we're doing the bare\n\t\t * minimum: checking whether the nonce exists and it's in the right place.\n\t\t * The request will fail later if the nonce doesn't pass the check.\n\t\t *\/\n\t\tif ( empty( $_REQUEST['_wpnonce'] ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated just below.\n\t\t$action = isset( $_REQUEST['action'] ) ? wp_unslash( $_REQUEST['action'] ) : false;\n\t\tif ( ! in_array( $action, $allowed_actions, true ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t$plugin_slugs = array();\n\t\tswitch ( $action ) {\n\t\t\tcase 'activate':\n\t\t\tcase 'deactivate':\n\t\t\t\tif ( empty( $_REQUEST['plugin'] ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated by convert_plugins_to_paths.\n\t\t\t\t$plugin_slugs[] = wp_unslash( $_REQUEST['plugin'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'activate-selected':\n\t\t\tcase 'deactivate-selected':\n\t\t\t\tif ( empty( $_REQUEST['checked'] ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated by convert_plugins_to_paths.\n\t\t\t\t$plugin_slugs = wp_unslash( $_REQUEST['checked'] );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $this->convert_plugins_to_paths( $plugin_slugs );\n\t}\n\n\t\/**\n\t * Given an array of plugin slugs or paths, this will convert them to absolute paths and filter\n\t * out the plugins that are not directory plugins. Note that array keys will also be included\n\t * if they are plugin paths!\n\t *\n\t * @param string[] $plugins Plugin paths or slugs to filter.\n\t *\n\t * @return string[]\n\t *\/\n\tprivate function convert_plugins_to_paths( $plugins ) {\n\t\tif ( ! is_array( $plugins ) || empty( $plugins ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/\/ We're going to look for plugins in the standard directories.\n\t\t$path_constants = array( WP_PLUGIN_DIR, WPMU_PLUGIN_DIR );\n\n\t\t$plugin_paths = array();\n\t\tforeach ( $plugins as $key => $value ) {\n\t\t\t$path = $this->path_processor->find_directory_with_autoloader( $key, $path_constants );\n\t\t\tif ( $path ) {\n\t\t\t\t$plugin_paths[] = $path;\n\t\t\t}\n\n\t\t\t$path = $this->path_processor->find_directory_with_autoloader( $value, $path_constants );\n\t\t\tif ( $path ) {\n\t\t\t\t$plugin_paths[] = $path;\n\t\t\t}\n\t\t}\n\n\t\treturn $plugin_paths;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-manifest-reader.php","ext":"php","size":2491,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class reads autoloader manifest files.\n *\/\nclass Manifest_Reader {\n\n\t\/**\n\t * The Version_Selector object.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Version_Selector $version_selector The Version_Selector object.\n\t *\/\n\tpublic function __construct( $version_selector ) {\n\t\t$this->version_selector = $version_selector;\n\t}\n\n\t\/**\n\t * Reads all of the manifests in the given plugin paths.\n\t *\n\t * @param array  $plugin_paths  The paths to the plugins we're loading the manifest in.\n\t * @param string $manifest_path The path that we're loading the manifest from in each plugin.\n\t * @param array  $path_map The path map to add the contents of the manifests to.\n\t *\n\t * @return array $path_map The path map we've built using the manifests in each plugin.\n\t *\/\n\tpublic function read_manifests( $plugin_paths, $manifest_path, &$path_map ) {\n\t\t$file_paths = array_map(\n\t\t\tfunction ( $path ) use ( $manifest_path ) {\n\t\t\t\treturn trailingslashit( $path ) . $manifest_path;\n\t\t\t},\n\t\t\t$plugin_paths\n\t\t);\n\n\t\tforeach ( $file_paths as $path ) {\n\t\t\t$this->register_manifest( $path, $path_map );\n\t\t}\n\n\t\treturn $path_map;\n\t}\n\n\t\/**\n\t * Registers a plugin's manifest file with the path map.\n\t *\n\t * @param string $manifest_path The absolute path to the manifest that we're loading.\n\t * @param array  $path_map The path map to add the contents of the manifest to.\n\t *\/\n\tprotected function register_manifest( $manifest_path, &$path_map ) {\n\t\tif ( ! is_readable( $manifest_path ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$manifest = require $manifest_path;\n\t\tif ( ! is_array( $manifest ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $manifest as $key => $data ) {\n\t\t\t$this->register_record( $key, $data, $path_map );\n\t\t}\n\t}\n\n\t\/**\n\t * Registers an entry from the manifest in the path map.\n\t *\n\t * @param string $key The identifier for the entry we're registering.\n\t * @param array  $data The data for the entry we're registering.\n\t * @param array  $path_map The path map to add the contents of the manifest to.\n\t *\/\n\tprotected function register_record( $key, $data, &$path_map ) {\n\t\tif ( isset( $path_map[ $key ]['version'] ) ) {\n\t\t\t$selected_version = $path_map[ $key ]['version'];\n\t\t} else {\n\t\t\t$selected_version = null;\n\t\t}\n\n\t\tif ( $this->version_selector->is_version_update_required( $selected_version, $data['version'] ) ) {\n\t\t\t$path_map[ $key ] = array(\n\t\t\t\t'version' => $data['version'],\n\t\t\t\t'path'    => $data['path'],\n\t\t\t);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-plugins-handler.php","ext":"php","size":5689,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class handles locating and caching all of the active plugins.\n *\/\nclass Plugins_Handler {\n\t\/**\n\t * The transient key for plugin paths.\n\t *\/\n\tconst TRANSIENT_KEY = 'jetpack_autoloader_plugin_paths';\n\n\t\/**\n\t * The locator for finding plugins in different locations.\n\t *\n\t * @var Plugin_Locator\n\t *\/\n\tprivate $plugin_locator;\n\n\t\/**\n\t * The processor for transforming cached paths.\n\t *\n\t * @var Path_Processor\n\t *\/\n\tprivate $path_processor;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Plugin_Locator $plugin_locator The locator for finding active plugins.\n\t * @param Path_Processor $path_processor The processor for transforming cached paths.\n\t *\/\n\tpublic function __construct( $plugin_locator, $path_processor ) {\n\t\t$this->plugin_locator = $plugin_locator;\n\t\t$this->path_processor = $path_processor;\n\t}\n\n\t\/**\n\t * Gets all of the active plugins we can find.\n\t *\n\t * @param bool $include_deactivating When true, plugins deactivating this request will be considered active.\n\t * @param bool $record_unknown When true, the current plugin will be marked as active and recorded when unknown.\n\t *\n\t * @return string[]\n\t *\/\n\tpublic function get_active_plugins( $include_deactivating, $record_unknown ) {\n\t\tglobal $jetpack_autoloader_activating_plugins_paths;\n\n\t\t\/\/ We're going to build a unique list of plugins from a few different sources\n\t\t\/\/ to find all of our \"active\" plugins. While we need to return an integer\n\t\t\/\/ array, we're going to use an associative array internally to reduce\n\t\t\/\/ the amount of time that we're going to spend checking uniqueness\n\t\t\/\/ and merging different arrays together to form the output.\n\t\t$active_plugins = array();\n\n\t\t\/\/ Make sure that plugins which have activated this request are considered as \"active\" even though\n\t\t\/\/ they probably won't be present in any option.\n\t\tif ( is_array( $jetpack_autoloader_activating_plugins_paths ) ) {\n\t\t\tforeach ( $jetpack_autoloader_activating_plugins_paths as $path ) {\n\t\t\t\t$active_plugins[ $path ] = $path;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ This option contains all of the plugins that have been activated.\n\t\t$plugins = $this->plugin_locator->find_using_option( 'active_plugins' );\n\t\tforeach ( $plugins as $path ) {\n\t\t\t$active_plugins[ $path ] = $path;\n\t\t}\n\n\t\t\/\/ This option contains all of the multisite plugins that have been activated.\n\t\tif ( is_multisite() ) {\n\t\t\t$plugins = $this->plugin_locator->find_using_option( 'active_sitewide_plugins', true );\n\t\t\tforeach ( $plugins as $path ) {\n\t\t\t\t$active_plugins[ $path ] = $path;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ These actions contain plugins that are being activated\/deactivated during this request.\n\t\t$plugins = $this->plugin_locator->find_using_request_action( array( 'activate', 'activate-selected', 'deactivate', 'deactivate-selected' ) );\n\t\tforeach ( $plugins as $path ) {\n\t\t\t$active_plugins[ $path ] = $path;\n\t\t}\n\n\t\t\/\/ When the current plugin isn't considered \"active\" there's a problem.\n\t\t\/\/ Since we're here, the plugin is active and currently being loaded.\n\t\t\/\/ We can support this case (mu-plugins and non-standard activation)\n\t\t\/\/ by adding the current plugin to the active list and marking it\n\t\t\/\/ as an unknown (activating) plugin. This also has the benefit\n\t\t\/\/ of causing a reset because the active plugins list has\n\t\t\/\/ been changed since it was saved in the global.\n\t\t$current_plugin = $this->plugin_locator->find_current_plugin();\n\t\tif ( $record_unknown && ! in_array( $current_plugin, $active_plugins, true ) ) {\n\t\t\t$active_plugins[ $current_plugin ]             = $current_plugin;\n\t\t\t$jetpack_autoloader_activating_plugins_paths[] = $current_plugin;\n\t\t}\n\n\t\t\/\/ When deactivating plugins aren't desired we should entirely remove them from the active list.\n\t\tif ( ! $include_deactivating ) {\n\t\t\t\/\/ These actions contain plugins that are being deactivated during this request.\n\t\t\t$plugins = $this->plugin_locator->find_using_request_action( array( 'deactivate', 'deactivate-selected' ) );\n\t\t\tforeach ( $plugins as $path ) {\n\t\t\t\tunset( $active_plugins[ $path ] );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Transform the array so that we don't have to worry about the keys interacting with other array types later.\n\t\treturn array_values( $active_plugins );\n\t}\n\n\t\/**\n\t * Gets all of the cached plugins if there are any.\n\t *\n\t * @return string[]\n\t *\/\n\tpublic function get_cached_plugins() {\n\t\t$cached = get_transient( self::TRANSIENT_KEY );\n\t\tif ( ! is_array( $cached ) || empty( $cached ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t\/\/ We need to expand the tokens to an absolute path for this webserver.\n\t\treturn array_map( array( $this->path_processor, 'untokenize_path_constants' ), $cached );\n\t}\n\n\t\/**\n\t * Saves the plugin list to the cache.\n\t *\n\t * @param array $plugins The plugin list to save to the cache.\n\t *\/\n\tpublic function cache_plugins( $plugins ) {\n\t\t\/\/ We store the paths in a tokenized form so that that webservers with different absolute paths don't break.\n\t\t$plugins = array_map( array( $this->path_processor, 'tokenize_path_constants' ), $plugins );\n\n\t\tset_transient( self::TRANSIENT_KEY, $plugins );\n\t}\n\n\t\/**\n\t * Checks to see whether or not the plugin list given has changed when compared to the\n\t * shared `$jetpack_autoloader_cached_plugin_paths` global. This allows us to deal\n\t * with cases where the active list may change due to filtering..\n\t *\n\t * @param string[] $plugins The plugins list to check against the global cache.\n\t *\n\t * @return bool True if the plugins have changed, otherwise false.\n\t *\/\n\tpublic function have_plugins_changed( $plugins ) {\n\t\tglobal $jetpack_autoloader_cached_plugin_paths;\n\n\t\tif ( $jetpack_autoloader_cached_plugin_paths !== $plugins ) {\n\t\t\t$jetpack_autoloader_cached_plugin_paths = $plugins;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-version-selector.php","ext":"php","size":1651,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * Used to select package versions.\n *\/\nclass Version_Selector {\n\n\t\/**\n\t * Checks whether the selected package version should be updated. Composer development\n\t * package versions ('9999999-dev' or versions that start with 'dev-') are favored\n\t * when the JETPACK_AUTOLOAD_DEV constant is set to true.\n\t *\n\t * @param String $selected_version The currently selected package version.\n\t * @param String $compare_version The package version that is being evaluated to\n\t *                                determine if the version needs to be updated.\n\t *\n\t * @return bool Returns true if the selected package version should be updated,\n\t *                 else false.\n\t *\/\n\tpublic function is_version_update_required( $selected_version, $compare_version ) {\n\t\t$use_dev_versions = defined( 'JETPACK_AUTOLOAD_DEV' ) && JETPACK_AUTOLOAD_DEV;\n\n\t\tif ( $selected_version === null ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( $use_dev_versions && $this->is_dev_version( $selected_version ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( $this->is_dev_version( $compare_version ) ) {\n\t\t\tif ( $use_dev_versions ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif ( version_compare( $selected_version, $compare_version, '<' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Checks whether the given package version is a development version.\n\t *\n\t * @param String $version The package version.\n\t *\n\t * @return bool True if the version is a dev version, else false.\n\t *\/\n\tpublic function is_dev_version( $version ) {\n\t\tif ( 'dev-' === substr( $version, 0, 4 ) || '9999999-dev' === $version ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-php-autoloader.php","ext":"php","size":3483,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class handles management of the actual PHP autoloader.\n *\/\nclass PHP_Autoloader {\n\n\t\/**\n\t * Registers the autoloader with PHP so that it can begin autoloading classes.\n\t *\n\t * @param Version_Loader $version_loader The class loader to use in the autoloader.\n\t *\/\n\tpublic function register_autoloader( $version_loader ) {\n\t\t\/\/ Make sure no other autoloaders are registered.\n\t\t$this->unregister_autoloader();\n\n\t\t\/\/ Set the global so that it can be used to load classes.\n\t\tglobal $jetpack_autoloader_loader;\n\t\t$jetpack_autoloader_loader = $version_loader;\n\n\t\t\/\/ Ensure that the autoloader is first to avoid contention with others.\n\t\tspl_autoload_register( array( self::class, 'load_class' ), true, true );\n\t}\n\n\t\/**\n\t * Unregisters the active autoloader so that it will no longer autoload classes.\n\t *\/\n\tpublic function unregister_autoloader() {\n\t\t\/\/ Remove any v2 autoloader that we've already registered.\n\t\t$autoload_chain = spl_autoload_functions();\n\t\tif ( ! $autoload_chain ) {\n\t\t\treturn;\n\t\t}\n\t\tforeach ( $autoload_chain as $autoloader ) {\n\t\t\t\/\/ We can identify a v2 autoloader using the namespace.\n\t\t\t$namespace_check = null;\n\n\t\t\t\/\/ Functions are recorded as strings.\n\t\t\tif ( is_string( $autoloader ) ) {\n\t\t\t\t$namespace_check = $autoloader;\n\t\t\t} elseif ( is_array( $autoloader ) && is_string( $autoloader[0] ) ) {\n\t\t\t\t\/\/ Static method calls have the class as the first array element.\n\t\t\t\t$namespace_check = $autoloader[0];\n\t\t\t} else {\n\t\t\t\t\/\/ Since the autoloader has only ever been a function or a static method we don't currently need to check anything else.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Check for the namespace without the generated suffix.\n\t\t\tif ( 'Automattic\\\\Jetpack\\\\Autoloader\\\\jp' === substr( $namespace_check, 0, 32 ) ) {\n\t\t\t\tspl_autoload_unregister( $autoloader );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Clear the global now that the autoloader has been unregistered.\n\t\tglobal $jetpack_autoloader_loader;\n\t\t$jetpack_autoloader_loader = null;\n\t}\n\n\t\/**\n\t * Loads a class file if one could be found.\n\t *\n\t * Note: This function is static so that the autoloader can be easily unregistered. If\n\t * it was a class method we would have to unwrap the object to check the namespace.\n\t *\n\t * @param string $class_name The name of the class to autoload.\n\t *\n\t * @return bool Indicates whether or not a class file was loaded.\n\t *\/\n\tpublic static function load_class( $class_name ) {\n\t\tglobal $jetpack_autoloader_loader;\n\t\tif ( ! isset( $jetpack_autoloader_loader ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$file = $jetpack_autoloader_loader->find_class_file( $class_name );\n\t\tif ( ! isset( $file ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ A common source of strange and confusing problems is when a vendor\n\t\t\/\/ file is autoloaded before all plugins have had a chance to register\n\t\t\/\/ with the autoloader. Detect that, if a development constant is set.\n\t\tif ( defined( 'JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS' ) && JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS &&\n\t\t\t( strpos( $file, '\/vendor\/' ) !== false || strpos( $file, '\/jetpack_vendor\/' ) !== false ) &&\n\t\t\tis_callable( 'did_action' ) && ! did_action( 'plugins_loaded' )\n\t\t) {\n\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_wp_debug_backtrace_summary -- This is a debug log message.\n\t\t\t$msg = \"Jetpack Autoloader: Autoloading `$class_name` before the plugins_loaded hook may cause strange and confusing problems. \" . wp_debug_backtrace_summary( '', 1 );\n\t\t\twp_trigger_error( '', $msg );\n\t\t}\n\n\t\trequire $file;\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/CustomAutoloaderPlugin.php","ext":"php","size":5728,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Custom Autoloader Composer Plugin, hooks into composer events to generate the custom autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader;\n\nuse Composer\\Composer;\nuse Composer\\EventDispatcher\\EventSubscriberInterface;\nuse Composer\\IO\\IOInterface;\nuse Composer\\Plugin\\PluginInterface;\nuse Composer\\Script\\Event;\nuse Composer\\Script\\ScriptEvents;\n\n\/**\n * Class CustomAutoloaderPlugin.\n *\n * @package automattic\/jetpack-autoloader\n *\/\nclass CustomAutoloaderPlugin implements PluginInterface, EventSubscriberInterface {\n\n\t\/**\n\t * IO object.\n\t *\n\t * @var IOInterface IO object.\n\t *\/\n\tprivate $io;\n\n\t\/**\n\t * Composer object.\n\t *\n\t * @var Composer Composer object.\n\t *\/\n\tprivate $composer;\n\n\t\/**\n\t * Do nothing.\n\t *\n\t * @param Composer    $composer Composer object.\n\t * @param IOInterface $io IO object.\n\t *\/\n\tpublic function activate( Composer $composer, IOInterface $io ) { \/\/ phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable\n\t\t$this->composer = $composer;\n\t\t$this->io       = $io;\n\t}\n\n\t\/**\n\t * Do nothing.\n\t * phpcs:disable VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable\n\t *\n\t * @param Composer    $composer Composer object.\n\t * @param IOInterface $io IO object.\n\t *\/\n\tpublic function deactivate( Composer $composer, IOInterface $io ) {\n\t\t\/*\n\t\t * Intentionally left empty. This is a PluginInterface method.\n\t\t * phpcs:enable VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable\n\t\t *\/\n\t}\n\n\t\/**\n\t * Do nothing.\n\t * phpcs:disable VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable\n\t *\n\t * @param Composer    $composer Composer object.\n\t * @param IOInterface $io IO object.\n\t *\/\n\tpublic function uninstall( Composer $composer, IOInterface $io ) {\n\t\t\/*\n\t\t * Intentionally left empty. This is a PluginInterface method.\n\t\t * phpcs:enable VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable\n\t\t *\/\n\t}\n\n\t\/**\n\t * Tell composer to listen for events and do something with them.\n\t *\n\t * @return array List of subscribed events.\n\t *\/\n\tpublic static function getSubscribedEvents() {\n\t\treturn array(\n\t\t\tScriptEvents::POST_AUTOLOAD_DUMP => 'postAutoloadDump',\n\t\t);\n\t}\n\n\t\/**\n\t * Generate the custom autolaoder.\n\t *\n\t * @param Event $event Script event object.\n\t *\/\n\tpublic function postAutoloadDump( Event $event ) {\n\t\t\/\/ When the autoloader is not required by the root package we don't want to execute it.\n\t\t\/\/ This prevents unwanted transitive execution that generates unused autoloaders or\n\t\t\/\/ at worst throws fatal executions.\n\t\tif ( ! $this->isRequiredByRoot() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$config = $this->composer->getConfig();\n\n\t\tif ( 'vendor' !== $config->raw()['config']['vendor-dir'] ) {\n\t\t\t$this->io->writeError( \"\\n<error>An error occurred while generating the autoloader files:\", true );\n\t\t\t$this->io->writeError( 'The project\\'s composer.json or composer environment set a non-default vendor directory.', true );\n\t\t\t$this->io->writeError( 'The default composer vendor directory must be used.<\/error>', true );\n\t\t\texit( 0 );\n\t\t}\n\n\t\t$installationManager = $this->composer->getInstallationManager();\n\t\t$repoManager         = $this->composer->getRepositoryManager();\n\t\t$localRepo           = $repoManager->getLocalRepository();\n\t\t$package             = $this->composer->getPackage();\n\t\t$optimize            = $event->getFlags()['optimize'];\n\t\t$suffix              = $this->determineSuffix();\n\n\t\t$generator = new AutoloadGenerator( $this->io );\n\t\t$generator->dump( $this->composer, $config, $localRepo, $package, $installationManager, 'composer', $optimize, $suffix );\n\t}\n\n\t\/**\n\t * Determine the suffix for the autoloader class.\n\t *\n\t * Reuses an existing suffix from vendor\/autoload_packages.php or vendor\/autoload.php if possible.\n\t *\n\t * @return string Suffix.\n\t *\/\n\tprivate function determineSuffix() {\n\t\t$config     = $this->composer->getConfig();\n\t\t$vendorPath = $config->get( 'vendor-dir' );\n\n\t\t\/\/ Command line.\n\t\t$suffix = $config->get( 'autoloader-suffix' );\n\t\tif ( $suffix ) {\n\t\t\treturn $suffix;\n\t\t}\n\n\t\t\/\/ Reuse our own suffix, if any.\n\t\tif ( is_readable( $vendorPath . '\/autoload_packages.php' ) ) {\n\t\t\t$content = file_get_contents( $vendorPath . '\/autoload_packages.php' );\n\t\t\tif ( preg_match( '\/^namespace Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\jp([^;\\s]+?)(?:\\\\\\\\al[^;\\s]+)?;\/m', $content, $match ) ) {\n\t\t\t\treturn $match[1];\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Reuse Composer's suffix, if any.\n\t\tif ( is_readable( $vendorPath . '\/autoload.php' ) ) {\n\t\t\t$content = file_get_contents( $vendorPath . '\/autoload.php' );\n\t\t\tif ( preg_match( '{ComposerAutoloaderInit([^:\\s]+)::}', $content, $match ) ) {\n\t\t\t\treturn $match[1];\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Generate a random suffix.\n\t\treturn md5( uniqid( '', true ) );\n\t}\n\n\t\/**\n\t * Checks to see whether or not the root package is the one that required the autoloader.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function isRequiredByRoot() {\n\t\t$package  = $this->composer->getPackage();\n\t\t$requires = $package->getRequires();\n\t\tif ( ! is_array( $requires ) ) { \/\/ @phan-suppress-current-line PhanRedundantCondition -- Earlier Composer versions may not have guaranteed this.\n\t\t\t$requires = array();\n\t\t}\n\t\t$devRequires = $package->getDevRequires();\n\t\tif ( ! is_array( $devRequires ) ) { \/\/ @phan-suppress-current-line PhanRedundantCondition -- Earlier Composer versions may not have guaranteed this.\n\t\t\t$devRequires = array();\n\t\t}\n\t\t$requires = array_merge( $requires, $devRequires );\n\n\t\tif ( empty( $requires ) ) {\n\t\t\t$this->io->writeError( \"\\n<error>The package is not required and this should never happen?<\/error>\", true );\n\t\t\texit( 0 );\n\t\t}\n\n\t\tforeach ( $requires as $require ) {\n\t\t\tif ( 'automattic\/jetpack-autoloader' === $require->getTarget() ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-autoloader-locator.php","ext":"php","size":1972,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\nuse Automattic\\Jetpack\\Autoloader\\AutoloadGenerator;\n\n\/**\n * This class locates autoloaders.\n *\/\nclass Autoloader_Locator {\n\n\t\/**\n\t * The object for comparing autoloader versions.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Version_Selector $version_selector The version selector object.\n\t *\/\n\tpublic function __construct( $version_selector ) {\n\t\t$this->version_selector = $version_selector;\n\t}\n\n\t\/**\n\t * Finds the path to the plugin with the latest autoloader.\n\t *\n\t * @param array  $plugin_paths An array of plugin paths.\n\t * @param string $latest_version The latest version reference. @phan-output-reference.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function find_latest_autoloader( $plugin_paths, &$latest_version ) {\n\t\t$latest_plugin = null;\n\n\t\tforeach ( $plugin_paths as $plugin_path ) {\n\t\t\t$version = $this->get_autoloader_version( $plugin_path );\n\t\t\tif ( ! $version || ! $this->version_selector->is_version_update_required( $latest_version, $version ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$latest_version = $version;\n\t\t\t$latest_plugin  = $plugin_path;\n\t\t}\n\n\t\treturn $latest_plugin;\n\t}\n\n\t\/**\n\t * Gets the path to the autoloader.\n\t *\n\t * @param string $plugin_path The path to the plugin.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_autoloader_path( $plugin_path ) {\n\t\treturn trailingslashit( $plugin_path ) . 'vendor\/autoload_packages.php';\n\t}\n\n\t\/**\n\t * Gets the version for the autoloader.\n\t *\n\t * @param string $plugin_path The path to the plugin.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_autoloader_version( $plugin_path ) {\n\t\t$classmap = trailingslashit( $plugin_path ) . 'vendor\/composer\/jetpack_autoload_classmap.php';\n\t\tif ( ! file_exists( $classmap ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$classmap = require $classmap;\n\t\tif ( isset( $classmap[ AutoloadGenerator::class ] ) ) {\n\t\t\treturn $classmap[ AutoloadGenerator::class ]['version'];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/ManifestGenerator.php","ext":"php","size":3137,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Manifest Generator.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\n\/\/ phpcs:disable WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\nnamespace Automattic\\Jetpack\\Autoloader;\n\n\/**\n * Class ManifestGenerator.\n *\/\nclass ManifestGenerator {\n\n\t\/**\n\t * Builds a manifest file for the given autoloader type.\n\t *\n\t * @param string $autoloaderType The type of autoloader to build a manifest for.\n\t * @param string $fileName The filename of the manifest.\n\t * @param array  $content The manifest content to generate using.\n\t *\n\t * @return string|null $manifestFile\n\t * @throws \\InvalidArgumentException When an invalid autoloader type is given.\n\t *\/\n\tpublic static function buildManifest( $autoloaderType, $fileName, $content ) {\n\t\tif ( empty( $content ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch ( $autoloaderType ) {\n\t\t\tcase 'classmap':\n\t\t\tcase 'files':\n\t\t\t\treturn self::buildStandardManifest( $fileName, $content );\n\t\t\tcase 'psr-4':\n\t\t\t\treturn self::buildPsr4Manifest( $fileName, $content );\n\t\t}\n\n\t\tthrow new \\InvalidArgumentException( 'An invalid manifest type of ' . $autoloaderType . ' was passed!' );\n\t}\n\n\t\/**\n\t * Builds the contents for the standard manifest file.\n\t *\n\t * @param string $fileName The filename we are building.\n\t * @param array  $manifestData The formatted data for the manifest.\n\t *\n\t * @return string|null $manifestFile\n\t *\/\n\tprivate static function buildStandardManifest( $fileName, $manifestData ) {\n\t\t$fileContent = PHP_EOL;\n\t\tforeach ( $manifestData as $key => $data ) {\n\t\t\t$key          = var_export( $key, true );\n\t\t\t$versionCode  = var_export( $data['version'], true );\n\t\t\t$fileContent .= <<<MANIFEST_CODE\n\t$key => array(\n\t\t'version' => $versionCode,\n\t\t'path'    => {$data['path']}\n\t),\nMANIFEST_CODE;\n\t\t\t$fileContent .= PHP_EOL;\n\t\t}\n\n\t\treturn self::buildFile( $fileName, $fileContent );\n\t}\n\n\t\/**\n\t * Builds the contents for the PSR-4 manifest file.\n\t *\n\t * @param string $fileName The filename we are building.\n\t * @param array  $namespaces The formatted PSR-4 data for the manifest.\n\t *\n\t * @return string|null $manifestFile\n\t *\/\n\tprivate static function buildPsr4Manifest( $fileName, $namespaces ) {\n\t\t$fileContent = PHP_EOL;\n\t\tforeach ( $namespaces as $namespace => $data ) {\n\t\t\t$namespaceCode = var_export( $namespace, true );\n\t\t\t$versionCode   = var_export( $data['version'], true );\n\t\t\t$pathCode      = 'array( ' . implode( ', ', $data['path'] ) . ' )';\n\t\t\t$fileContent  .= <<<MANIFEST_CODE\n\t$namespaceCode => array(\n\t\t'version' => $versionCode,\n\t\t'path'    => $pathCode\n\t),\nMANIFEST_CODE;\n\t\t\t$fileContent  .= PHP_EOL;\n\t\t}\n\n\t\treturn self::buildFile( $fileName, $fileContent );\n\t}\n\n\t\/**\n\t * Generate the PHP that will be used in the file.\n\t *\n\t * @param string $fileName The filename we are building.\n\t * @param string $content The content to be written into the file.\n\t *\n\t * @return string $fileContent\n\t *\/\n\tprivate static function buildFile( $fileName, $content ) {\n\t\treturn <<<INCLUDE_FILE\n<?php\n\n\/\/ This file `$fileName` was auto generated by automattic\/jetpack-autoloader.\n\n\\$vendorDir = dirname(__DIR__);\n\\$baseDir   = dirname(\\$vendorDir);\n\nreturn array($content);\n\nINCLUDE_FILE;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-latest-autoloader-guard.php","ext":"php","size":5778,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class ensures that we're only executing the latest autoloader.\n *\/\nclass Latest_Autoloader_Guard {\n\n\t\/**\n\t * The Plugins_Handler instance.\n\t *\n\t * @var Plugins_Handler\n\t *\/\n\tprivate $plugins_handler;\n\n\t\/**\n\t * The Autoloader_Handler instance.\n\t *\n\t * @var Autoloader_Handler\n\t *\/\n\tprivate $autoloader_handler;\n\n\t\/**\n\t * The Autoloader_locator instance.\n\t *\n\t * @var Autoloader_Locator\n\t *\/\n\tprivate $autoloader_locator;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Plugins_Handler    $plugins_handler    The Plugins_Handler instance.\n\t * @param Autoloader_Handler $autoloader_handler The Autoloader_Handler instance.\n\t * @param Autoloader_Locator $autoloader_locator The Autoloader_Locator instance.\n\t *\/\n\tpublic function __construct( $plugins_handler, $autoloader_handler, $autoloader_locator ) {\n\t\t$this->plugins_handler    = $plugins_handler;\n\t\t$this->autoloader_handler = $autoloader_handler;\n\t\t$this->autoloader_locator = $autoloader_locator;\n\t}\n\n\t\/**\n\t * Indicates whether or not the autoloader should be initialized. Note that this function\n\t * has the side-effect of actually loading the latest autoloader in the event that this\n\t * is not it.\n\t *\n\t * @param string   $current_plugin             The current plugin we're checking.\n\t * @param string[] $plugins                    The active plugins to check for autoloaders in.\n\t * @param bool     $was_included_by_autoloader Indicates whether or not this autoloader was included by another.\n\t *\n\t * @return bool True if we should stop initialization, otherwise false.\n\t *\/\n\tpublic function should_stop_init( $current_plugin, $plugins, $was_included_by_autoloader ) {\n\t\tglobal $jetpack_autoloader_latest_version;\n\n\t\t\/\/ We need to reset the autoloader when the plugins change because\n\t\t\/\/ that means the autoloader was generated with a different list.\n\t\tif ( $this->plugins_handler->have_plugins_changed( $plugins ) ) {\n\t\t\t$this->autoloader_handler->reset_autoloader();\n\t\t}\n\n\t\t\/\/ When the latest autoloader has already been found we don't need to search for it again.\n\t\t\/\/ We should take care however because this will also trigger if the autoloader has been\n\t\t\/\/ included by an older one.\n\t\tif ( isset( $jetpack_autoloader_latest_version ) && ! $was_included_by_autoloader ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$latest_plugin = $this->autoloader_locator->find_latest_autoloader( $plugins, $jetpack_autoloader_latest_version );\n\t\tif ( isset( $latest_plugin ) && $latest_plugin !== $current_plugin ) {\n\t\t\trequire $this->autoloader_locator->get_autoloader_path( $latest_plugin );\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check for conflicting autoloaders.\n\t *\n\t * A common source of strange and confusing problems is when another plugin\n\t * registers a Composer autoloader at a higher priority that us. If enabled,\n\t * check for this problem and warn about it.\n\t *\n\t * Called from the plugins_loaded hook.\n\t *\n\t * @since 3.1.0\n\t * @return void\n\t *\/\n\tpublic function check_for_conflicting_autoloaders() {\n\t\tif ( ! defined( 'JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS' ) || ! JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $jetpack_autoloader_loader;\n\t\tif ( ! isset( $jetpack_autoloader_loader ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$prefixes = array();\n\t\tforeach ( ( $jetpack_autoloader_loader->get_class_map() ?? array() ) as $classname => $data ) {\n\t\t\t$parts = explode( '\\\\', trim( $classname, '\\\\' ) );\n\t\t\tarray_pop( $parts );\n\t\t\twhile ( $parts ) {\n\t\t\t\t$prefixes[ implode( '\\\\', $parts ) . '\\\\' ] = true;\n\t\t\t\tarray_pop( $parts );\n\t\t\t}\n\t\t}\n\t\tforeach ( ( $jetpack_autoloader_loader->get_psr4_map() ?? array() ) as $prefix => $data ) {\n\t\t\t$parts = explode( '\\\\', trim( $prefix, '\\\\' ) );\n\t\t\twhile ( $parts ) {\n\t\t\t\t$prefixes[ implode( '\\\\', $parts ) . '\\\\' ] = true;\n\t\t\t\tarray_pop( $parts );\n\t\t\t}\n\t\t}\n\n\t\t$autoload_chain = spl_autoload_functions();\n\t\tif ( ! $autoload_chain ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $autoload_chain as $autoloader ) {\n\t\t\t\/\/ No need to check anything after us.\n\t\t\tif ( is_array( $autoloader ) && is_string( $autoloader[0] ) && substr( $autoloader[0], 0, strlen( __NAMESPACE__ ) + 1 ) === __NAMESPACE__ . '\\\\' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t\/\/ We can check Composer autoloaders easily enough.\n\t\t\tif ( is_array( $autoloader ) && $autoloader[0] instanceof \\Composer\\Autoload\\ClassLoader && is_callable( array( $autoloader[0], 'getPrefixesPsr4' ) ) ) {\n\t\t\t\t$composer_autoloader = $autoloader[0];\n\t\t\t\tforeach ( $composer_autoloader->getClassMap() as $classname => $path ) {\n\t\t\t\t\tif ( $jetpack_autoloader_loader->find_class_file( $classname ) ) {\n\t\t\t\t\t\t$msg = \"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the classes we handle (e.g. $classname => $path). This may cause strange and confusing problems.\";\n\t\t\t\t\t\twp_trigger_error( '', $msg );\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tforeach ( $composer_autoloader->getPrefixesPsr4() as $prefix => $paths ) {\n\t\t\t\t\tif ( isset( $prefixes[ $prefix ] ) ) {\n\t\t\t\t\t\t$path = array_pop( $paths );\n\t\t\t\t\t\t$msg  = \"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the namespaces we handle (e.g. $prefix => $path). This may cause strange and confusing problems.\";\n\t\t\t\t\t\twp_trigger_error( '', $msg );\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tforeach ( $composer_autoloader->getPrefixes() as $prefix => $paths ) {\n\t\t\t\t\tif ( isset( $prefixes[ $prefix ] ) ) {\n\t\t\t\t\t\t$path = array_pop( $paths );\n\t\t\t\t\t\t$msg  = \"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the namespaces we handle (e.g. $prefix => $path). This may cause strange and confusing problems.\";\n\t\t\t\t\t\twp_trigger_error( '', $msg );\n\t\t\t\t\t\tcontinue 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/AutoloadFileWriter.php","ext":"php","size":2575,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Autoloader file writer.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader;\n\nuse Composer\\IO\\IOInterface;\n\n\/**\n * Class AutoloadFileWriter.\n *\/\nclass AutoloadFileWriter {\n\n\t\/**\n\t * The file comment to use.\n\t *\/\n\tconst COMMENT = <<<AUTOLOADER_COMMENT\n\/**\n * This file was automatically generated by automattic\/jetpack-autoloader.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nAUTOLOADER_COMMENT;\n\n\t\/**\n\t * Copies autoloader files and replaces any placeholders in them.\n\t *\n\t * @param IOInterface|null $io An IO for writing to.\n\t * @param string           $outDir The directory to place the autoloader files in.\n\t * @param string           $suffix The suffix to use in the autoloader's namespace.\n\t *\/\n\tpublic static function copyAutoloaderFiles( $io, $outDir, $suffix ) {\n\t\t$renameList = array(\n\t\t\t'autoload.php' => '..\/autoload_packages.php',\n\t\t);\n\t\t$ignoreList = array(\n\t\t\t'AutoloadGenerator.php',\n\t\t\t'AutoloadProcessor.php',\n\t\t\t'CustomAutoloaderPlugin.php',\n\t\t\t'ManifestGenerator.php',\n\t\t\t'AutoloadFileWriter.php',\n\t\t);\n\n\t\t\/\/ Copy all of the autoloader files.\n\t\t$files = scandir( __DIR__ );\n\t\tforeach ( $files as $file ) {\n\t\t\t\/\/ Only PHP files will be copied.\n\t\t\tif ( substr( $file, -4 ) !== '.php' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( in_array( $file, $ignoreList, true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$newFile = $renameList[ $file ] ?? $file;\n\t\t\t$content = self::prepareAutoloaderFile( $file, $suffix );\n\n\t\t\t$written = file_put_contents( $outDir . '\/' . $newFile, $content );\n\t\t\tif ( $io ) {\n\t\t\t\tif ( $written ) {\n\t\t\t\t\t$io->writeError( \"  <info>Generated: $newFile<\/info>\" );\n\t\t\t\t} else {\n\t\t\t\t\t$io->writeError( \"  <error>Error: $newFile<\/error>\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Prepares an autoloader file to be written to the destination.\n\t *\n\t * @param String $filename a file to prepare.\n\t * @param String $suffix   Unique suffix used in the namespace.\n\t *\n\t * @return string\n\t *\/\n\tprivate static function prepareAutoloaderFile( $filename, $suffix ) {\n\t\t$header  = self::COMMENT;\n\t\t$header .= PHP_EOL;\n\t\tif ( $suffix === 'Current' ) {\n\t\t\t\/\/ Unit testing.\n\t\t\t$header .= 'namespace Automattic\\Jetpack\\Autoloader\\jpCurrent;';\n\t\t} else {\n\t\t\t$header .= 'namespace Automattic\\Jetpack\\Autoloader\\jp' . $suffix . '\\al' . preg_replace( '\/[^0-9a-zA-Z]\/', '_', AutoloadGenerator::VERSION ) . ';';\n\t\t}\n\t\t$header .= PHP_EOL . PHP_EOL;\n\n\t\t$sourceLoader  = fopen( __DIR__ . '\/' . $filename, 'r' );\n\t\t$file_contents = stream_get_contents( $sourceLoader );\n\t\treturn str_replace(\n\t\t\t'\/* HEADER *\/',\n\t\t\t$header,\n\t\t\t$file_contents\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-hook-manager.php","ext":"php","size":1955,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * Allows the latest autoloader to register hooks that can be removed when the autoloader is reset.\n *\/\nclass Hook_Manager {\n\n\t\/**\n\t * An array containing all of the hooks that we've registered.\n\t *\n\t * @var array\n\t *\/\n\tprivate $registered_hooks;\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->registered_hooks = array();\n\t}\n\n\t\/**\n\t * Adds an action to WordPress and registers it internally.\n\t *\n\t * @param string   $tag           The name of the action which is hooked.\n\t * @param callable $callable      The function to call.\n\t * @param int      $priority      Used to specify the priority of the action.\n\t * @param int      $accepted_args Used to specify the number of arguments the callable accepts.\n\t *\/\n\tpublic function add_action( $tag, $callable, $priority = 10, $accepted_args = 1 ) {\n\t\t$this->registered_hooks[ $tag ][] = array(\n\t\t\t'priority' => $priority,\n\t\t\t'callable' => $callable,\n\t\t);\n\n\t\tadd_action( $tag, $callable, $priority, $accepted_args );\n\t}\n\n\t\/**\n\t * Adds a filter to WordPress and registers it internally.\n\t *\n\t * @param string   $tag           The name of the filter which is hooked.\n\t * @param callable $callable      The function to call.\n\t * @param int      $priority      Used to specify the priority of the filter.\n\t * @param int      $accepted_args Used to specify the number of arguments the callable accepts.\n\t *\/\n\tpublic function add_filter( $tag, $callable, $priority = 10, $accepted_args = 1 ) {\n\t\t$this->registered_hooks[ $tag ][] = array(\n\t\t\t'priority' => $priority,\n\t\t\t'callable' => $callable,\n\t\t);\n\n\t\tadd_filter( $tag, $callable, $priority, $accepted_args );\n\t}\n\n\t\/**\n\t * Removes all of the registered hooks.\n\t *\/\n\tpublic function reset() {\n\t\tforeach ( $this->registered_hooks as $tag => $hooks ) {\n\t\t\tforeach ( $hooks as $hook ) {\n\t\t\t\tremove_filter( $tag, $hook['callable'], $hook['priority'] );\n\t\t\t}\n\t\t}\n\t\t$this->registered_hooks = array();\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/AutoloadProcessor.php","ext":"php","size":5049,"mtime":1756373567,"type":"text","content":"<?php\n\/**\n * Autoload Processor.\n *\n * @package automattic\/jetpack-autoloader\n *\/\n\nnamespace Automattic\\Jetpack\\Autoloader;\n\n\/**\n * Class AutoloadProcessor.\n *\/\nclass AutoloadProcessor {\n\n\t\/**\n\t * A callable for scanning a directory for all of its classes.\n\t *\n\t * @var callable\n\t *\/\n\tprivate $classmapScanner;\n\n\t\/**\n\t * A callable for transforming a path into one to be used in code.\n\t *\n\t * @var callable\n\t *\/\n\tprivate $pathCodeTransformer;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param callable $classmapScanner A callable for scanning a directory for all of its classes.\n\t * @param callable $pathCodeTransformer A callable for transforming a path into one to be used in code.\n\t *\/\n\tpublic function __construct( $classmapScanner, $pathCodeTransformer ) {\n\t\t$this->classmapScanner     = $classmapScanner;\n\t\t$this->pathCodeTransformer = $pathCodeTransformer;\n\t}\n\n\t\/**\n\t * Processes the classmap autoloads into a relative path format including the version for each file.\n\t *\n\t * @param array $autoloads The autoloads we are processing.\n\t * @param bool  $scanPsrPackages Whether or not PSR packages should be converted to a classmap.\n\t *\n\t * @return array|null $processed\n\t * @phan-param array{classmap:?array{path:string,version:string}[],psr-4:?array<string,array{path:string,version:string}[]>,psr-0:?array<string,array{path:string,version:string}[]>} $autoloads\n\t *\/\n\tpublic function processClassmap( $autoloads, $scanPsrPackages ) {\n\t\t\/\/ We can't scan PSR packages if we don't actually have any.\n\t\tif ( empty( $autoloads['psr-4'] ) ) {\n\t\t\t$scanPsrPackages = false;\n\t\t}\n\n\t\tif ( empty( $autoloads['classmap'] ) && ! $scanPsrPackages ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$excludedClasses = null;\n\t\tif ( ! empty( $autoloads['exclude-from-classmap'] ) ) {\n\t\t\t$excludedClasses = '{(' . implode( '|', $autoloads['exclude-from-classmap'] ) . ')}';\n\t\t}\n\n\t\t$processed = array();\n\n\t\tif ( $scanPsrPackages ) {\n\t\t\tforeach ( $autoloads['psr-4'] as $namespace => $sources ) {\n\t\t\t\t$namespace = empty( $namespace ) ? null : $namespace;\n\n\t\t\t\tforeach ( $sources as $source ) {\n\t\t\t\t\t$classmap = call_user_func( $this->classmapScanner, $source['path'], $excludedClasses, $namespace );\n\n\t\t\t\t\tforeach ( $classmap as $class => $path ) {\n\t\t\t\t\t\t$processed[ $class ] = array(\n\t\t\t\t\t\t\t'version' => $source['version'],\n\t\t\t\t\t\t\t'path'    => call_user_func( $this->pathCodeTransformer, $path ),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/*\n\t\t * PSR-0 namespaces are converted to classmaps for both optimized and unoptimized autoloaders because any new\n\t\t * development should use classmap or PSR-4 autoloading.\n\t\t *\/\n\t\tif ( ! empty( $autoloads['psr-0'] ) ) {\n\t\t\tforeach ( $autoloads['psr-0'] as $namespace => $sources ) {\n\t\t\t\t$namespace = empty( $namespace ) ? null : $namespace;\n\n\t\t\t\tforeach ( $sources as $source ) {\n\t\t\t\t\t$classmap = call_user_func( $this->classmapScanner, $source['path'], $excludedClasses, $namespace );\n\t\t\t\t\tforeach ( $classmap as $class => $path ) {\n\t\t\t\t\t\t$processed[ $class ] = array(\n\t\t\t\t\t\t\t'version' => $source['version'],\n\t\t\t\t\t\t\t'path'    => call_user_func( $this->pathCodeTransformer, $path ),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $autoloads['classmap'] ) ) {\n\t\t\tforeach ( $autoloads['classmap'] as $package ) {\n\t\t\t\t$classmap = call_user_func( $this->classmapScanner, $package['path'], $excludedClasses, null );\n\n\t\t\t\tforeach ( $classmap as $class => $path ) {\n\t\t\t\t\t$processed[ $class ] = array(\n\t\t\t\t\t\t'version' => $package['version'],\n\t\t\t\t\t\t'path'    => call_user_func( $this->pathCodeTransformer, $path ),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tksort( $processed );\n\n\t\treturn $processed;\n\t}\n\n\t\/**\n\t * Processes the PSR-4 autoloads into a relative path format including the version for each file.\n\t *\n\t * @param array $autoloads The autoloads we are processing.\n\t * @param bool  $scanPsrPackages Whether or not PSR packages should be converted to a classmap.\n\t *\n\t * @return array|null $processed\n\t *\/\n\tpublic function processPsr4Packages( $autoloads, $scanPsrPackages ) {\n\t\tif ( $scanPsrPackages || empty( $autoloads['psr-4'] ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$processed = array();\n\n\t\tforeach ( $autoloads['psr-4'] as $namespace => $packages ) {\n\t\t\t$namespace = empty( $namespace ) ? null : $namespace;\n\t\t\t$paths     = array();\n\n\t\t\tforeach ( $packages as $package ) {\n\t\t\t\t$paths[] = call_user_func( $this->pathCodeTransformer, $package['path'] );\n\t\t\t}\n\n\t\t\t$processed[ $namespace ] = array(\n\t\t\t\t'version' => $package['version'],\n\t\t\t\t'path'    => $paths,\n\t\t\t);\n\t\t}\n\n\t\treturn $processed;\n\t}\n\n\t\/**\n\t * Processes the file autoloads into a relative format including the version for each file.\n\t *\n\t * @param array $autoloads The autoloads we are processing.\n\t *\n\t * @return array|null $processed\n\t *\/\n\tpublic function processFiles( $autoloads ) {\n\t\tif ( empty( $autoloads['files'] ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$processed = array();\n\n\t\tforeach ( $autoloads['files'] as $file_id => $package ) {\n\t\t\t$processed[ $file_id ] = array(\n\t\t\t\t'version' => $package['version'],\n\t\t\t\t'path'    => call_user_func( $this->pathCodeTransformer, $package['path'] ),\n\t\t\t);\n\t\t}\n\n\t\treturn $processed;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-autoloader.php","ext":"php","size":4147,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class handles management of the actual PHP autoloader.\n *\/\nclass Autoloader {\n\n\t\/**\n\t * Checks to see whether or not the autoloader should be initialized and then initializes it if so.\n\t *\n\t * @param Container|null $container The container we want to use for autoloader initialization. If none is given\n\t *                                  then a container will be created automatically.\n\t *\/\n\tpublic static function init( $container = null ) {\n\t\t\/\/ The container holds and manages the lifecycle of our dependencies\n\t\t\/\/ to make them easier to work with and increase flexibility.\n\t\tif ( ! isset( $container ) ) {\n\t\t\trequire_once __DIR__ . '\/class-container.php';\n\t\t\t$container = new Container();\n\t\t}\n\n\t\t\/\/ phpcs:disable Generic.Commenting.DocComment.MissingShort\n\n\t\t\/** @var Autoloader_Handler $autoloader_handler *\/\n\t\t$autoloader_handler = $container->get( Autoloader_Handler::class );\n\n\t\t\/\/ If the autoloader is already initializing it means that it has included us as the latest.\n\t\t$was_included_by_autoloader = $autoloader_handler->is_initializing();\n\n\t\t\/** @var Plugin_Locator $plugin_locator *\/\n\t\t$plugin_locator = $container->get( Plugin_Locator::class );\n\n\t\t\/** @var Plugins_Handler $plugins_handler *\/\n\t\t$plugins_handler = $container->get( Plugins_Handler::class );\n\n\t\t\/\/ The current plugin is the one that we are attempting to initialize here.\n\t\t$current_plugin = $plugin_locator->find_current_plugin();\n\n\t\t\/\/ The active plugins are those that we were able to discover on the site. This list will not\n\t\t\/\/ include mu-plugins, those activated by code, or those who are hidden by filtering. We also\n\t\t\/\/ want to take care to not consider the current plugin unknown if it was included by an\n\t\t\/\/ autoloader. This avoids the case where a plugin will be marked \"active\" while deactivated\n\t\t\/\/ due to it having the latest autoloader.\n\t\t$active_plugins = $plugins_handler->get_active_plugins( true, ! $was_included_by_autoloader );\n\n\t\t\/\/ The cached plugins are all of those that were active or discovered by the autoloader during a previous request.\n\t\t\/\/ Note that it's possible this list will include plugins that have since been deactivated, but after a request\n\t\t\/\/ the cache should be updated and the deactivated plugins will be removed.\n\t\t$cached_plugins = $plugins_handler->get_cached_plugins();\n\n\t\t\/\/ We combine the active list and cached list to preemptively load classes for plugins that are\n\t\t\/\/ presently unknown but will be loaded during the request. While this may result in us considering packages in\n\t\t\/\/ deactivated plugins there shouldn't be any problems as a result and the eventual consistency is sufficient.\n\t\t$all_plugins = array_merge( $active_plugins, $cached_plugins );\n\n\t\t\/\/ In particular we also include the current plugin to address the case where it is the latest autoloader\n\t\t\/\/ but also unknown (and not cached). We don't want it in the active list because we don't know that it\n\t\t\/\/ is active but we need it in the all plugins list so that it is considered by the autoloader.\n\t\t$all_plugins[] = $current_plugin;\n\n\t\t\/\/ We require uniqueness in the array to avoid processing the same plugin more than once.\n\t\t$all_plugins = array_values( array_unique( $all_plugins ) );\n\n\t\t\/** @var Latest_Autoloader_Guard $guard *\/\n\t\t$guard = $container->get( Latest_Autoloader_Guard::class );\n\t\tif ( $guard->should_stop_init( $current_plugin, $all_plugins, $was_included_by_autoloader ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Initialize the autoloader using the handler now that we're ready.\n\t\t$autoloader_handler->activate_autoloader( $all_plugins );\n\n\t\t\/** @var Hook_Manager $hook_manager *\/\n\t\t$hook_manager = $container->get( Hook_Manager::class );\n\n\t\t\/\/ Register a shutdown handler to clean up the autoloader.\n\t\t$hook_manager->add_action( 'shutdown', new Shutdown_Handler( $plugins_handler, $cached_plugins, $was_included_by_autoloader ) );\n\n\t\t\/\/ Register a plugins_loaded handler to check for conflicting autoloaders.\n\t\t$hook_manager->add_action( 'plugins_loaded', array( $guard, 'check_for_conflicting_autoloaders' ), 1 );\n\n\t\t\/\/ phpcs:enable Generic.Commenting.DocComment.MissingShort\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-version-loader.php","ext":"php","size":4288,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class loads other classes based on given parameters.\n *\/\nclass Version_Loader {\n\n\t\/**\n\t * The Version_Selector object.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * A map of available classes and their version and file path.\n\t *\n\t * @var array\n\t *\/\n\tprivate $classmap;\n\n\t\/**\n\t * A map of PSR-4 namespaces and their version and directory path.\n\t *\n\t * @var array\n\t *\/\n\tprivate $psr4_map;\n\n\t\/**\n\t * A map of all the files that we should load.\n\t *\n\t * @var array\n\t *\/\n\tprivate $filemap;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param Version_Selector $version_selector The Version_Selector object.\n\t * @param array            $classmap The verioned classmap to load using.\n\t * @param array            $psr4_map The versioned PSR-4 map to load using.\n\t * @param array            $filemap The versioned filemap to load.\n\t *\/\n\tpublic function __construct( $version_selector, $classmap, $psr4_map, $filemap ) {\n\t\t$this->version_selector = $version_selector;\n\t\t$this->classmap         = $classmap;\n\t\t$this->psr4_map         = $psr4_map;\n\t\t$this->filemap          = $filemap;\n\t}\n\n\t\/**\n\t * Fetch the classmap.\n\t *\n\t * @since 3.1.0\n\t * @return array<string, array>\n\t *\/\n\tpublic function get_class_map() {\n\t\treturn $this->classmap;\n\t}\n\n\t\/**\n\t * Fetch the psr-4 mappings.\n\t *\n\t * @since 3.1.0\n\t * @return array<string, array>\n\t *\/\n\tpublic function get_psr4_map() {\n\t\treturn $this->psr4_map;\n\t}\n\n\t\/**\n\t * Finds the file path for the given class.\n\t *\n\t * @param string $class_name The class to find.\n\t *\n\t * @return string|null $file_path The path to the file if found, null if no class was found.\n\t *\/\n\tpublic function find_class_file( $class_name ) {\n\t\t$data = $this->select_newest_file(\n\t\t\t$this->classmap[ $class_name ] ?? null,\n\t\t\t$this->find_psr4_file( $class_name )\n\t\t);\n\t\tif ( ! isset( $data ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn $data['path'];\n\t}\n\n\t\/**\n\t * Load all of the files in the filemap.\n\t *\/\n\tpublic function load_filemap() {\n\t\tif ( empty( $this->filemap ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->filemap as $file_identifier => $file_data ) {\n\t\t\tif ( empty( $GLOBALS['__composer_autoload_files'][ $file_identifier ] ) ) {\n\t\t\t\trequire_once $file_data['path'];\n\n\t\t\t\t$GLOBALS['__composer_autoload_files'][ $file_identifier ] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Compares different class sources and returns the newest.\n\t *\n\t * @param array|null $classmap_data The classmap class data.\n\t * @param array|null $psr4_data The PSR-4 class data.\n\t *\n\t * @return array|null $data\n\t *\/\n\tprivate function select_newest_file( $classmap_data, $psr4_data ) {\n\t\tif ( ! isset( $classmap_data ) ) {\n\t\t\treturn $psr4_data;\n\t\t} elseif ( ! isset( $psr4_data ) ) {\n\t\t\treturn $classmap_data;\n\t\t}\n\n\t\tif ( $this->version_selector->is_version_update_required( $classmap_data['version'], $psr4_data['version'] ) ) {\n\t\t\treturn $psr4_data;\n\t\t}\n\n\t\treturn $classmap_data;\n\t}\n\n\t\/**\n\t * Finds the file for a given class in a PSR-4 namespace.\n\t *\n\t * @param string $class_name The class to find.\n\t *\n\t * @return array|null $data The version and path path to the file if found, null otherwise.\n\t *\/\n\tprivate function find_psr4_file( $class_name ) {\n\t\tif ( empty( $this->psr4_map ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t\/\/ Don't bother with classes that have no namespace.\n\t\t$class_index = strrpos( $class_name, '\\\\' );\n\t\tif ( ! $class_index ) {\n\t\t\treturn null;\n\t\t}\n\t\t$class_for_path = str_replace( '\\\\', '\/', $class_name );\n\n\t\t\/\/ Search for the namespace by iteratively cutting off the last segment until\n\t\t\/\/ we find a match. This allows us to check the most-specific namespaces\n\t\t\/\/ first as well as minimize the amount of time spent looking.\n\t\tfor (\n\t\t\t$class_namespace = substr( $class_name, 0, $class_index );\n\t\t\t! empty( $class_namespace );\n\t\t\t$class_namespace = substr( $class_namespace, 0, strrpos( $class_namespace, '\\\\' ) )\n\t\t) {\n\t\t\t$namespace = $class_namespace . '\\\\';\n\t\t\tif ( ! isset( $this->psr4_map[ $namespace ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$data = $this->psr4_map[ $namespace ];\n\n\t\t\tforeach ( $data['path'] as $path ) {\n\t\t\t\t$path .= '\/' . substr( $class_for_path, strlen( $namespace ) ) . '.php';\n\t\t\t\tif ( file_exists( $path ) ) {\n\t\t\t\t\treturn array(\n\t\t\t\t\t\t'version' => $data['version'],\n\t\t\t\t\t\t'path'    => $path,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-path-processor.php","ext":"php","size":5505,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class handles dealing with paths for the autoloader.\n *\/\nclass Path_Processor {\n\t\/**\n\t * Given a path this will replace any of the path constants with a token to represent it.\n\t *\n\t * @param string $path The path we want to process.\n\t *\n\t * @return string The tokenized path.\n\t *\/\n\tpublic function tokenize_path_constants( $path ) {\n\t\t$path = wp_normalize_path( $path );\n\n\t\t$constants = $this->get_normalized_constants();\n\t\tforeach ( $constants as $constant => $constant_path ) {\n\t\t\t$len = strlen( $constant_path );\n\t\t\tif ( substr( $path, 0, $len ) !== $constant_path ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn substr_replace( $path, '{{' . $constant . '}}', 0, $len );\n\t\t}\n\n\t\treturn $path;\n\t}\n\n\t\/**\n\t * Given a path this will replace any of the path constant tokens with the expanded path.\n\t *\n\t * @param string $tokenized_path The path we want to process.\n\t *\n\t * @return string The expanded path.\n\t *\/\n\tpublic function untokenize_path_constants( $tokenized_path ) {\n\t\t$tokenized_path = wp_normalize_path( $tokenized_path );\n\n\t\t$constants = $this->get_normalized_constants();\n\t\tforeach ( $constants as $constant => $constant_path ) {\n\t\t\t$constant = '{{' . $constant . '}}';\n\n\t\t\t$len = strlen( $constant );\n\t\t\tif ( substr( $tokenized_path, 0, $len ) !== $constant ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn $this->get_real_path( substr_replace( $tokenized_path, $constant_path, 0, $len ) );\n\t\t}\n\n\t\treturn $tokenized_path;\n\t}\n\n\t\/**\n\t * Given a file and an array of places it might be, this will find the absolute path and return it.\n\t *\n\t * @param string $file The plugin or theme file to resolve.\n\t * @param array  $directories_to_check The directories we should check for the file if it isn't an absolute path.\n\t *\n\t * @return string|false Returns the absolute path to the directory, otherwise false.\n\t *\/\n\tpublic function find_directory_with_autoloader( $file, $directories_to_check ) {\n\t\t$file = wp_normalize_path( $file );\n\n\t\tif ( ! $this->is_absolute_path( $file ) ) {\n\t\t\t$file = $this->find_absolute_plugin_path( $file, $directories_to_check );\n\t\t\tif ( ! isset( $file ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ We need the real path for consistency with __DIR__ paths.\n\t\t$file = $this->get_real_path( $file );\n\n\t\t\/\/ phpcs:disable WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t$directory = @is_file( $file ) ? dirname( $file ) : $file;\n\t\tif ( ! @is_file( $directory . '\/vendor\/composer\/jetpack_autoload_classmap.php' ) ) {\n\t\t\treturn false;\n\t\t}\n\t\t\/\/ phpcs:enable WordPress.PHP.NoSilencedErrors.Discouraged\n\n\t\treturn $directory;\n\t}\n\n\t\/**\n\t * Fetches an array of normalized paths keyed by the constant they came from.\n\t *\n\t * @return string[] The normalized paths keyed by the constant.\n\t *\/\n\tprivate function get_normalized_constants() {\n\t\t$raw_constants = array(\n\t\t\t\/\/ Order the constants from most-specific to least-specific.\n\t\t\t'WP_PLUGIN_DIR',\n\t\t\t'WPMU_PLUGIN_DIR',\n\t\t\t'WP_CONTENT_DIR',\n\t\t\t'ABSPATH',\n\t\t);\n\n\t\t$constants = array();\n\t\tforeach ( $raw_constants as $raw ) {\n\t\t\tif ( ! defined( $raw ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$path = wp_normalize_path( constant( $raw ) );\n\t\t\tif ( isset( $path ) ) {\n\t\t\t\t$constants[ $raw ] = $path;\n\t\t\t}\n\t\t}\n\n\t\treturn $constants;\n\t}\n\n\t\/**\n\t * Indicates whether or not a path is absolute.\n\t *\n\t * @param string $path The path to check.\n\t *\n\t * @return bool True if the path is absolute, otherwise false.\n\t *\/\n\tprivate function is_absolute_path( $path ) {\n\t\tif ( empty( $path ) || 0 === strlen( $path ) || '.' === $path[0] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Absolute paths on Windows may begin with a drive letter.\n\t\tif ( preg_match( '\/^[a-zA-Z]:[\\\/\\\\\\\\]\/', $path ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ A path starting with \/ or \\ is absolute; anything else is relative.\n\t\treturn ( '\/' === $path[0] || '\\\\' === $path[0] );\n\t}\n\n\t\/**\n\t * Given a file and a list of directories to check, this method will try to figure out\n\t * the absolute path to the file in question.\n\t *\n\t * @param string $normalized_path The normalized path to the plugin or theme file to resolve.\n\t * @param array  $directories_to_check The directories we should check for the file if it isn't an absolute path.\n\t *\n\t * @return string|null The absolute path to the plugin file, otherwise null.\n\t *\/\n\tprivate function find_absolute_plugin_path( $normalized_path, $directories_to_check ) {\n\t\t\/\/ We're only able to find the absolute path for plugin\/theme PHP files.\n\t\tif ( ! is_string( $normalized_path ) || '.php' !== substr( $normalized_path, -4 ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tforeach ( $directories_to_check as $directory ) {\n\t\t\t$normalized_check = wp_normalize_path( trailingslashit( $directory ) ) . $normalized_path;\n\t\t\t\/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t\tif ( @is_file( $normalized_check ) ) {\n\t\t\t\treturn $normalized_check;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Given a path this will figure out the real path that we should be using.\n\t *\n\t * @param string $path The path to resolve.\n\t *\n\t * @return string The resolved path.\n\t *\/\n\tprivate function get_real_path( $path ) {\n\t\t\/\/ We want to resolve symbolic links for consistency with __DIR__ paths.\n\t\t\/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t$real_path = @realpath( $path );\n\t\tif ( false === $real_path ) {\n\t\t\t\/\/ Let the autoloader deal with paths that don't exist.\n\t\t\t$real_path = $path;\n\t\t}\n\n\t\t\/\/ Using realpath will make it platform-specific so we must normalize it after.\n\t\tif ( $path !== $real_path ) {\n\t\t\t$real_path = wp_normalize_path( $real_path );\n\t\t}\n\n\t\treturn $real_path;\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-autoloader-handler.php","ext":"php","size":4405,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\nuse Automattic\\Jetpack\\Autoloader\\AutoloadGenerator;\n\n\/**\n * This class selects the package version for the autoloader.\n *\/\nclass Autoloader_Handler {\n\n\t\/**\n\t * The PHP_Autoloader instance.\n\t *\n\t * @var PHP_Autoloader\n\t *\/\n\tprivate $php_autoloader;\n\n\t\/**\n\t * The Hook_Manager instance.\n\t *\n\t * @var Hook_Manager\n\t *\/\n\tprivate $hook_manager;\n\n\t\/**\n\t * The Manifest_Reader instance.\n\t *\n\t * @var Manifest_Reader\n\t *\/\n\tprivate $manifest_reader;\n\n\t\/**\n\t * The Version_Selector instance.\n\t *\n\t * @var Version_Selector\n\t *\/\n\tprivate $version_selector;\n\n\t\/**\n\t * The constructor.\n\t *\n\t * @param PHP_Autoloader   $php_autoloader The PHP_Autoloader instance.\n\t * @param Hook_Manager     $hook_manager The Hook_Manager instance.\n\t * @param Manifest_Reader  $manifest_reader The Manifest_Reader instance.\n\t * @param Version_Selector $version_selector The Version_Selector instance.\n\t *\/\n\tpublic function __construct( $php_autoloader, $hook_manager, $manifest_reader, $version_selector ) {\n\t\t$this->php_autoloader   = $php_autoloader;\n\t\t$this->hook_manager     = $hook_manager;\n\t\t$this->manifest_reader  = $manifest_reader;\n\t\t$this->version_selector = $version_selector;\n\t}\n\n\t\/**\n\t * Checks to see whether or not an autoloader is currently in the process of initializing.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_initializing() {\n\t\t\/\/ If no version has been set it means that no autoloader has started initializing yet.\n\t\tglobal $jetpack_autoloader_latest_version;\n\t\tif ( ! isset( $jetpack_autoloader_latest_version ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ When the version is set but the classmap is not it ALWAYS means that this is the\n\t\t\/\/ latest autoloader and is being included by an older one.\n\t\tglobal $jetpack_packages_classmap;\n\t\tif ( empty( $jetpack_packages_classmap ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ Version 2.4.0 added a new global and altered the reset semantics. We need to check\n\t\t\/\/ the other global as well since it may also point at initialization.\n\t\t\/\/ Note: We don't need to check for the class first because every autoloader that\n\t\t\/\/ will set the latest version global requires this class in the classmap.\n\t\t$replacing_version = $jetpack_packages_classmap[ AutoloadGenerator::class ]['version'];\n\t\tif ( $this->version_selector->is_dev_version( $replacing_version ) || version_compare( $replacing_version, '2.4.0.0', '>=' ) ) {\n\t\t\tglobal $jetpack_autoloader_loader;\n\t\t\tif ( ! isset( $jetpack_autoloader_loader ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Activates an autoloader using the given plugins and activates it.\n\t *\n\t * @param string[] $plugins The plugins to initialize the autoloader for.\n\t *\/\n\tpublic function activate_autoloader( $plugins ) {\n\t\tglobal $jetpack_packages_psr4;\n\t\t$jetpack_packages_psr4 = array();\n\t\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_psr4.php', $jetpack_packages_psr4 );\n\n\t\tglobal $jetpack_packages_classmap;\n\t\t$jetpack_packages_classmap = array();\n\t\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_classmap.php', $jetpack_packages_classmap );\n\n\t\tglobal $jetpack_packages_filemap;\n\t\t$jetpack_packages_filemap = array();\n\t\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_filemap.php', $jetpack_packages_filemap );\n\n\t\t$loader = new Version_Loader(\n\t\t\t$this->version_selector,\n\t\t\t$jetpack_packages_classmap,\n\t\t\t$jetpack_packages_psr4,\n\t\t\t$jetpack_packages_filemap\n\t\t);\n\n\t\t$this->php_autoloader->register_autoloader( $loader );\n\n\t\t\/\/ Now that the autoloader is active we can load the filemap.\n\t\t$loader->load_filemap();\n\t}\n\n\t\/**\n\t * Resets the active autoloader and all related global state.\n\t *\/\n\tpublic function reset_autoloader() {\n\t\t$this->php_autoloader->unregister_autoloader();\n\t\t$this->hook_manager->reset();\n\n\t\t\/\/ Clear all of the autoloader globals so that older autoloaders don't do anything strange.\n\t\tglobal $jetpack_autoloader_latest_version;\n\t\t$jetpack_autoloader_latest_version = null;\n\n\t\tglobal $jetpack_packages_classmap;\n\t\t$jetpack_packages_classmap = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\n\n\t\tglobal $jetpack_packages_psr4;\n\t\t$jetpack_packages_psr4 = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\n\n\t\tglobal $jetpack_packages_filemap;\n\t\t$jetpack_packages_filemap = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/src\/class-shutdown-handler.php","ext":"php","size":2691,"mtime":1756373567,"type":"text","content":"<?php\n\/* HEADER *\/ \/\/ phpcs:ignore\n\n\/**\n * This class handles the shutdown of the autoloader.\n *\/\nclass Shutdown_Handler {\n\n\t\/**\n\t * The Plugins_Handler instance.\n\t *\n\t * @var Plugins_Handler\n\t *\/\n\tprivate $plugins_handler;\n\n\t\/**\n\t * The plugins cached by this autoloader.\n\t *\n\t * @var string[]\n\t *\/\n\tprivate $cached_plugins;\n\n\t\/**\n\t * Indicates whether or not this autoloader was included by another.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $was_included_by_autoloader;\n\n\t\/**\n\t * Constructor.\n\t *\n\t * @param Plugins_Handler $plugins_handler The Plugins_Handler instance to use.\n\t * @param string[]        $cached_plugins The plugins cached by the autoloaer.\n\t * @param bool            $was_included_by_autoloader Indicates whether or not the autoloader was included by another.\n\t *\/\n\tpublic function __construct( $plugins_handler, $cached_plugins, $was_included_by_autoloader ) {\n\t\t$this->plugins_handler            = $plugins_handler;\n\t\t$this->cached_plugins             = $cached_plugins;\n\t\t$this->was_included_by_autoloader = $was_included_by_autoloader;\n\t}\n\n\t\/**\n\t * Handles the shutdown of the autoloader.\n\t *\/\n\tpublic function __invoke() {\n\t\t\/\/ Don't save a broken cache if an error happens during some plugin's initialization.\n\t\tif ( ! did_action( 'plugins_loaded' ) ) {\n\t\t\t\/\/ Ensure that the cache is emptied to prevent consecutive failures if the cache is to blame.\n\t\t\tif ( ! empty( $this->cached_plugins ) ) {\n\t\t\t\t$this->plugins_handler->cache_plugins( array() );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Load the active plugins fresh since the list we pulled earlier might not contain\n\t\t\/\/ plugins that were activated but did not reset the autoloader. This happens\n\t\t\/\/ when a plugin is in the cache but not \"active\" when the autoloader loads.\n\t\t\/\/ We also want to make sure that plugins which are deactivating are not\n\t\t\/\/ considered \"active\" so that they will be removed from the cache now.\n\t\ttry {\n\t\t\t$active_plugins = $this->plugins_handler->get_active_plugins( false, ! $this->was_included_by_autoloader );\n\t\t} catch ( \\Exception $ex ) {\n\t\t\t\/\/ When the package is deleted before shutdown it will throw an exception.\n\t\t\t\/\/ In the event this happens we should erase the cache.\n\t\t\tif ( ! empty( $this->cached_plugins ) ) {\n\t\t\t\t$this->plugins_handler->cache_plugins( array() );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ The paths should be sorted for easy comparisons with those loaded from the cache.\n\t\t\/\/ Note we don't need to sort the cached entries because they're already sorted.\n\t\tsort( $active_plugins );\n\n\t\t\/\/ We don't want to waste time saving a cache that hasn't changed.\n\t\tif ( $this->cached_plugins === $active_plugins ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->plugins_handler->cache_plugins( $active_plugins );\n\t}\n}\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/LICENSE.txt","ext":"txt","size":18416,"mtime":1756373567,"type":"text","content":"This program is free software; you can redistribute it and\/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n\n===================================\n\n\nGNU GENERAL PUBLIC LICENSE\n   Version 2, June 1991\n\nCopyright (C) 1989, 1991 Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n\t\tPreamble\n\nThe licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\nWe protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and\/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\nFinally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\nGNU GENERAL PUBLIC LICENSE\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and\/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\na) You must cause the modified files to carry prominent notices\nstating that you changed the files and the date of any change.\n\nb) You must cause any work that you distribute or publish, that in\nwhole or in part contains or is derived from the Program or any\npart thereof, to be licensed as a whole at no charge to all third\nparties under the terms of this License.\n\nc) If the modified program normally reads commands interactively\nwhen run, you must cause it, when started running for such\ninteractive use in the most ordinary way, to print or display an\nannouncement including an appropriate copyright notice and a\nnotice that there is no warranty (or else, saying that you provide\na warranty) and that users may redistribute the program under\nthese conditions, and telling the user how to view a copy of this\nLicense.  (Exception: if the Program itself is interactive but\ndoes not normally print such an announcement, your work based on\nthe Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\na) Accompany it with the complete corresponding machine-readable\nsource code, which must be distributed under the terms of Sections\n1 and 2 above on a medium customarily used for software interchange; or,\n\nb) Accompany it with a written offer, valid for at least three\nyears, to give any third party, for a charge no more than your\ncost of physically performing source distribution, a complete\nmachine-readable copy of the corresponding source code, to be\ndistributed under the terms of Sections 1 and 2 above on a medium\ncustomarily used for software interchange; or,\n\nc) Accompany it with the information you received as to the offer\nto distribute corresponding source code.  (This alternative is\nallowed only for noncommercial distribution and only if you\nreceived the program in object code or executable form with such\nan offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author\/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n8. If the distribution and\/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n9. The Free Software Foundation may publish revised and\/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\tNO WARRANTY\n\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND\/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND\/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n END OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software; you can redistribute it and\/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\nGnomovision version 69, Copyright (C) year name of author\nGnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\nYoyodyne, Inc., hereby disclaims all copyright interest in the program\n`Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n<signature of Ty Coon>, 1 April 1989\nTy Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"},{"base":"plugins","rel":"hostinger\/vendor\/automattic\/jetpack-autoloader\/composer.json","ext":"json","size":1500,"mtime":1756373567,"type":"text","content":"{\n\t\"name\": \"automattic\/jetpack-autoloader\",\n\t\"description\": \"Creates a custom autoloader for a plugin or theme.\",\n\t\"type\": \"composer-plugin\",\n\t\"license\": \"GPL-2.0-or-later\",\n\t\"keywords\": [\n\t\t\"autoload\",\n\t\t\"autoloader\",\n\t\t\"composer\",\n\t\t\"plugin\",\n\t\t\"jetpack\",\n\t\t\"wordpress\"\n\t],\n\t\"require\": {\n\t\t\"php\": \">=7.2\",\n\t\t\"composer-plugin-api\": \"^2.2\"\n\t},\n\t\"require-dev\": {\n\t\t\"composer\/composer\": \"^2.2\",\n\t\t\"yoast\/phpunit-polyfills\": \"^4.0.0\",\n\t\t\"automattic\/jetpack-changelogger\": \"^6.0.6\",\n\t\t\"automattic\/phpunit-select-config\": \"^1.0.3\"\n\t},\n\t\"autoload\": {\n\t\t\"classmap\": [\n\t\t\t\"src\/AutoloadGenerator.php\"\n\t\t],\n\t\t\"psr-4\": {\n\t\t\t\"Automattic\\\\Jetpack\\\\Autoloader\\\\\": \"src\"\n\t\t}\n\t},\n\t\"scripts\": {\n\t\t\"phpunit\": [\n\t\t\t\"phpunit-select-config phpunit.#.xml.dist --colors=always\"\n\t\t],\n\t\t\"test-coverage\": [\n\t\t\t\"php -dpcov.directory=. .\/vendor\/bin\/phpunit-select-config phpunit.#.xml.dist --coverage-php \\\".\/tests\/php\/tmp\/coverage-report.php\\\"\",\n\t\t\t\"php .\/tests\/php\/bin\/test-coverage.php \\\"$COVERAGE_DIR\/php.cov\\\"\"\n\t\t],\n\t\t\"test-php\": [\n\t\t\t\"@composer phpunit\"\n\t\t]\n\t},\n\t\"minimum-stability\": \"dev\",\n\t\"prefer-stable\": true,\n\t\"extra\": {\n\t\t\"autotagger\": true,\n\t\t\"class\": \"Automattic\\\\Jetpack\\\\Autoloader\\\\CustomAutoloaderPlugin\",\n\t\t\"mirror-repo\": \"Automattic\/jetpack-autoloader\",\n\t\t\"changelogger\": {\n\t\t\t\"link-template\": \"https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v${old}...v${new}\"\n\t\t},\n\t\t\"version-constants\": {\n\t\t\t\"::VERSION\": \"src\/AutoloadGenerator.php\"\n\t\t},\n\t\t\"branch-alias\": {\n\t\t\t\"dev-trunk\": \"5.0.x-dev\"\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"wtp-ro-proxy\/wtp-ro-proxy.php","ext":"php","size":5757,"mtime":1757312769,"type":"text","content":"<?php\n\/**\n * Plugin Name: WTP Readonly Snapshot Proxy\n * Description: Public, read-only REST API to serve WTP Snapshot JSON files from uploads\/wtp-ro\/public\/{site_key}\/\n * Version: 1.0.0\n * Author: WeekTopPick Automation\n * License: GPLv2 or later\n *\/\n\nif ( ! defined( 'ABSPATH' ) ) { exit; }\n\nadd_action('rest_api_init', function () {\n    register_rest_route('wtp-ro\/v1', '\/ping', array(\n        'methods'  => 'GET',\n        'callback' => function() {\n            return array('ok' => true, 'time' => time());\n        },\n        'permission_callback' => '__return_true',\n    ));\n\n    register_rest_route('wtp-ro\/v1', '\/get', array(\n        'methods'  => 'GET',\n        'callback' => 'wtp_ro_proxy_handle_get',\n        'permission_callback' => '__return_true',\n        'args' => array(\n            'site_key' => array('required' => true, 'type' => 'string'),\n            'file'     => array('required' => false, 'type' => 'string', 'default' => 'bundle.json'),\n        ),\n    ));\n\n    register_rest_route('wtp-ro\/v1', '\/index', array(\n        'methods'  => 'GET',\n        'callback' => 'wtp_ro_proxy_handle_index',\n        'permission_callback' => '__return_true',\n        'args' => array(\n            'site_key' => array('required' => true, 'type' => 'string'),\n        ),\n    ));\n\n    register_rest_route('wtp-ro\/v1', '\/list', array(\n        'methods'  => 'GET',\n        'callback' => 'wtp_ro_proxy_handle_list',\n        'permission_callback' => '__return_true',\n        'args' => array(\n            'site_key' => array('required' => true, 'type' => 'string'),\n            'prefix'   => array('required' => false, 'type' => 'string', 'default' => ''),\n        ),\n    ));\n});\n\nfunction wtp_ro_proxy_get_base_dir() {\n    $uploads = wp_get_upload_dir();\n    if ( empty( $uploads['basedir'] ) ) {\n        return false;\n    }\n    $base = $uploads['basedir'] . '\/wtp-ro\/public\/';\n    return $base;\n}\n\nfunction wtp_ro_proxy_sanitize_site_key($key) {\n    if ( ! is_string($key) ) return false;\n    if ( ! preg_match('\/^[A-Za-z0-9]{8,64}$\/', $key) ) return false;\n    return $key;\n}\n\nfunction wtp_ro_proxy_sanitize_filename($file) {\n    if ( ! is_string($file) ) return false;\n    if ( ! preg_match('\/^[A-Za-z0-9._-]+\\.json$\/', $file) ) return false;\n    return $file;\n}\n\nfunction wtp_ro_proxy_send_json_file($path) {\n    if ( ! file_exists($path) || ! is_readable($path) ) {\n        return new WP_Error('wtp_ro_not_found', 'File not found', array('status' => 404));\n    }\n    \/\/ Prevent path traversal\n    $real = realpath($path);\n    if ( $real === false ) {\n        return new WP_Error('wtp_ro_invalid_path', 'Invalid path', array('status' => 400));\n    }\n\n    \/\/ Load and decode to confirm it's JSON\n    $json = file_get_contents($real);\n    if ( $json === false ) {\n        return new WP_Error('wtp_ro_read_error', 'Cannot read file', array('status' => 500));\n    }\n\n    \/\/ Return as JSON response (decoded\/encoded to ensure proper header & encoding)\n    $decoded = json_decode($json, true);\n    if ( $decoded === null && json_last_error() !== JSON_ERROR_NONE ) {\n        \/\/ If not valid JSON, still return raw but as text\/plain to avoid parser issues\n        return new WP_REST_Response(array('raw' => base64_encode($json)), 200);\n    }\n\n    $resp = new WP_REST_Response($decoded);\n    $resp->header('Content-Type', 'application\/json; charset=utf-8');\n    $resp->header('Cache-Control', 'public, max-age=60');\n    return $resp;\n}\n\nfunction wtp_ro_proxy_handle_get(WP_REST_Request $request) {\n    $site_key = wtp_ro_proxy_sanitize_site_key( $request->get_param('site_key') );\n    $file     = wtp_ro_proxy_sanitize_filename( $request->get_param('file') ?: 'bundle.json' );\n    if ( ! $site_key || ! $file ) {\n        return new WP_Error('wtp_ro_bad_params', 'Invalid parameters', array('status' => 400));\n    }\n    $base = wtp_ro_proxy_get_base_dir();\n    if ( ! $base ) {\n        return new WP_Error('wtp_ro_no_base', 'Uploads base not available', array('status' => 500));\n    }\n    $target = $base . $site_key . '\/' . $file;\n\n    \/\/ Confine path\n    $realBase = realpath($base);\n    $realTarget = realpath($base . $site_key . '\/' ) . DIRECTORY_SEPARATOR . $file;\n    if ( strpos($realTarget, $realBase) !== 0 ) {\n        return new WP_Error('wtp_ro_outside', 'Path outside allowed directory', array('status' => 403));\n    }\n    return wtp_ro_proxy_send_json_file($target);\n}\n\nfunction wtp_ro_proxy_handle_index(WP_REST_Request $request) {\n    $request->set_param('file', 'index.json');\n    return wtp_ro_proxy_handle_get($request);\n}\n\nfunction wtp_ro_proxy_handle_list(WP_REST_Request $request) {\n    $site_key = wtp_ro_proxy_sanitize_site_key( $request->get_param('site_key') );\n    $prefix   = (string) $request->get_param('prefix');\n    if ( ! $site_key ) {\n        return new WP_Error('wtp_ro_bad_params', 'Invalid parameters', array('status' => 400));\n    }\n\n    $base = wtp_ro_proxy_get_base_dir();\n    if ( ! $base ) {\n        return new WP_Error('wtp_ro_no_base', 'Uploads base not available', array('status' => 500));\n    }\n\n    $indexPath = $base . $site_key . '\/index.json';\n    if ( ! file_exists($indexPath) ) {\n        return new WP_Error('wtp_ro_not_found', 'index.json not found', array('status' => 404));\n    }\n    $data = json_decode( file_get_contents($indexPath), true );\n    if ( ! is_array($data) ) {\n        return new WP_Error('wtp_ro_bad_index', 'index.json is invalid', array('status' => 500));\n    }\n\n    $files = array();\n    foreach ( $data as $row ) {\n        if ( !empty($row['path']) && is_string($row['path']) ) {\n            if ( $prefix === '' || strpos($row['path'], $prefix) === 0 ) {\n                $files[] = $row['path'];\n            }\n        }\n    }\n    return array('files' => $files, 'count' => count($files));\n}\n"},{"base":"plugins","rel":"wtp-ro-proxy\/readme.txt","ext":"txt","size":532,"mtime":1757312769,"type":"text","content":"WTP Readonly Snapshot Proxy\n============================\n\nPublic, read-only REST API to serve WTP Snapshot JSON files from:\n  \/wp-content\/uploads\/wtp-ro\/public\/{site_key}\/\n\nEndpoints:\n- GET \/wp-json\/wtp-ro\/v1\/ping\n- GET \/wp-json\/wtp-ro\/v1\/get?site_key={key}&file=bundle.json\n- GET \/wp-json\/wtp-ro\/v1\/index?site_key={key}\n- GET \/wp-json\/wtp-ro\/v1\/list?site_key={key}&prefix=theme\/\n\nSecurity:\n- Only .json files are served.\n- site_key pattern: [A-Za-z0-9]{8,64}\n- No authentication (public read-only mirror of existing public files).\n"},{"base":"plugins","rel":"wtp-site-snapshot\/wtp-site-snapshot.php","ext":"php","size":814,"mtime":1757348337,"type":"text","content":"<?php\n\/*\nPlugin Name: WTP Site Snapshot\nDescription: Tworzy snapshot podstawowych danych o stronie (WP, PHP, motyw, wtyczki).\nVersion: 0.1.0\nAuthor: WeekTopPick Autopilot\n*\/\nif (!defined('ABSPATH')) exit;\n\nadd_action('admin_menu', function(){\n    add_menu_page('WTP Snapshot', 'WTP Snapshot', 'manage_options', 'wtp-snapshot', function(){\n        echo '<div class=\"wrap\"><h1>WTP Site Snapshot<\/h1>';\n        echo '<p>WordPress: '.get_bloginfo('version').'<\/p>';\n        echo '<p>PHP: '.phpversion().'<\/p>';\n        echo '<p>Motyw: '.wp_get_theme()->get(\"Name\").' '.wp_get_theme()->get(\"Version\").'<\/p>';\n        echo '<h2>Wtyczki<\/h2><ul>';\n        foreach (get_plugins() as $slug=>$plugin){\n            echo '<li>'.$plugin['Name'].' '.$plugin['Version'].'<\/li>';\n        }\n        echo '<\/ul><\/div>';\n    });\n});\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_BR-40280f641851c0bceee91722c888f369.json","ext":"json","size":1414,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_BR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conecte-se agora\"],\"Contact List\":[\"Lista de contatos\"],\"Create New List\":[\"Criar nova lista\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"ID do formul\\u00e1rio\"],\"Name\":[\"Nome\"],\"Name for the new Contact List\":[\"Nome para a nova lista de contatos\"],\"New Contact List\":[\"Nova lista de contatos\"],\"Reach Subscription Form\":[\"Formul\\u00e1rio de assinatura do Reach\"],\"Settings\":[\"Configura\\u00e7\\u00f5es\"],\"Show Name Field?\":[\"Mostrar campo de nome?\"],\"Show Surname Field?\":[\"Mostrar campo de sobrenome?\"],\"Something went wrong. Please try again\":[\"Algo deu errado. Tente novamente\"],\"Surname\":[\"Sobrenome\"],\"Thanks for subscribing\":[\"Obrigado por se inscrever\"],\"Unique identifier for this form\":[\"Identificador exclusivo para este formul\\u00e1rio\"],\"You are not connected to Hostinger Reach\":[\"Voc\\u00ea n\\u00e3o est\\u00e1 conectado ao Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Voc\\u00ea n\\u00e3o est\\u00e1 conectado \\u00e0 Hostinger Reach. Para obter acesso total a esse bloco, voc\\u00ea precisa conectar sua conta do Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-it_IT-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":686,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 08:44+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"it_IT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Collega ora\"],\"You are not connected to Hostinger Reach\":[\"Non sei connesso a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Non sei connesso a Hostinger Reach. Per ottenere l'accesso completo a questo blocco, \\u00e8 necessario collegare il proprio account Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ko_KR-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1192,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-10 12:39+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ko_KR\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Contact List\":[\"\\uc5f0\\ub77d\\ucc98 \\ubaa9\\ub85d\"],\"Create New List\":[\"\\uc0c8 \\ubaa9\\ub85d \\ub9cc\\ub4e4\\uae30\"],\"Email\":[\"\\uc774\\uba54\\uc77c\"],\"Form ID\":[\"\\uc591\\uc2dd ID\"],\"Name\":[\"\\uc774\\ub984\"],\"Name for the new Contact List\":[\"\\uc0c8 \\uc5f0\\ub77d\\ucc98 \\ubaa9\\ub85d\\uc758 \\uc774\\ub984\"],\"New Contact List\":[\"\\uc0c8 \\uc5f0\\ub77d\\ucc98 \\ubaa9\\ub85d\"],\"Settings\":[\"\\uc124\\uc815\"],\"Show Name Field?\":[\"\\uc774\\ub984 \\ud544\\ub4dc\\ub97c \\ud45c\\uc2dc\\ud560\\uae4c\\uc694?\"],\"Show Surname Field?\":[\"\\uc131 \\ud544\\ub4dc\\ub97c \\ud45c\\uc2dc\\ud560\\uae4c\\uc694?\"],\"Something went wrong. Please try again\":[\"\\ubb38\\uc81c\\uac00 \\ubc1c\\uc0dd\\ud588\\uc2b5\\ub2c8\\ub2e4. \\ub2e4\\uc2dc \\uc2dc\\ub3c4\\ud574 \\uc8fc\\uc138\\uc694\"],\"Surname\":[\"\\uc131\"],\"Thanks for subscribing\":[\"\\uad6c\\ub3c5\\ud574 \\uc8fc\\uc154\\uc11c \\uac10\\uc0ac\\ud569\\ub2c8\\ub2e4\"],\"Unique identifier for this form\":[\"\\uc774 \\uc591\\uc2dd\\uc758 \\uace0\\uc720 \\uc2dd\\ubcc4\\uc790\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-nl_NL_formal-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":697,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"nl_NL_formal\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Nu verbinden\"],\"You are not connected to Hostinger Reach\":[\"U bent niet verbonden met Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"U bent niet verbonden met Hostinger Reach. Om volledige toegang tot dit blok te krijgen, moet u verbinding maken met uw Hostinger Reach account.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-nl_NL_formal-40280f641851c0bceee91722c888f369.json","ext":"json","size":1358,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"nl_NL_formal\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Nu verbinden\"],\"Contact List\":[\"Contactlijst\"],\"Create New List\":[\"Nieuwe lijst maken\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"Formulier ID\"],\"Name\":[\"Naam\"],\"Name for the new Contact List\":[\"Naam voor de nieuwe Contactlijst\"],\"New Contact List\":[\"Nieuwe contactpersonenlijst\"],\"Reach Subscription Form\":[\"Inschrijfformulier Reach\"],\"Settings\":[\"Instellingen\"],\"Show Name Field?\":[\"Naamveld weergeven?\"],\"Show Surname Field?\":[\"Achternaamveld weergeven?\"],\"Something went wrong. Please try again\":[\"Er is iets fout gegaan. Probeer het opnieuw\"],\"Surname\":[\"Achternaam\"],\"Thanks for subscribing\":[\"Bedankt voor je inschrijving\"],\"Unique identifier for this form\":[\"Unieke identificatiecode voor dit formulier\"],\"You are not connected to Hostinger Reach\":[\"U bent niet verbonden met Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"U bent niet verbonden met Hostinger Reach. Om volledige toegang tot dit blok te krijgen, moet u verbinding maken met uw Hostinger Reach account.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ja-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":908,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ja\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\u4eca\\u3059\\u3050\\u63a5\\u7d9a\"],\"You are not connected to Hostinger Reach\":[\"Hostinger Reach\\u306b\\u63a5\\u7d9a\\u3055\\u308c\\u3066\\u3044\\u307e\\u305b\\u3093\\u3002\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Hostinger Reach\\u306b\\u63a5\\u7d9a\\u3057\\u3066\\u3044\\u307e\\u305b\\u3093\\u3002\\u3053\\u306e\\u30d6\\u30ed\\u30c3\\u30af\\u306b\\u5b8c\\u5168\\u306b\\u30a2\\u30af\\u30bb\\u30b9\\u3059\\u308b\\u306b\\u306f\\u3001Hostinger Reach\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u306b\\u63a5\\u7d9a\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-lt_LT-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1088,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"lt_LT\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Contact List\":[\"Kontakt\\u0173 s\\u0105ra\\u0161as\"],\"Create New List\":[\"Sukurti nauj\\u0105 s\\u0105ra\\u0161\\u0105\"],\"Email\":[\"El. pa\\u0161tas\"],\"Form ID\":[\"Formos ID\"],\"Name\":[\"Pavadinimas\"],\"Name for the new Contact List\":[\"Naujojo kontakt\\u0173 s\\u0105ra\\u0161o pavadinimas\"],\"New Contact List\":[\"Naujas kontakt\\u0173 s\\u0105ra\\u0161as\"],\"Settings\":[\"Nustatymai\"],\"Show Name Field?\":[\"Rodyti vardo lauk\\u0105?\"],\"Show Surname Field?\":[\"Rodyti pavard\\u0117s lauk\\u0105?\"],\"Something went wrong. Please try again\":[\"Ka\\u017ekas nutiko ne taip. Bandykite dar kart\\u0105\"],\"Surname\":[\"Pavard\\u0117\"],\"Thanks for subscribing\":[\"A\\u010di\\u016b u\\u017e prenumerat\\u0105\"],\"Unique identifier for this form\":[\"Unikalus \\u0161ios formos identifikatorius\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-lt_LT-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":795,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"lt_LT\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Connect Now\":[\"Prisijunkite dabar\"],\"You are not connected to Hostinger Reach\":[\"Nesate prisijung\\u0119 prie \\\"Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Nesate prisijung\\u0119 prie \\\"Hostinger Reach\\\". Nor\\u0117dami gauti visi\\u0161k\\u0105 prieig\\u0105 prie \\u0161io bloko, turite prisijungti prie \\\"Hostinger Reach\\\" paskyros.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-zh_CN-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":328,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"zh_CN\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Reach Subscription Form\":[\"\\u8ba2\\u9605\\u8868\\u683c\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ro_RO-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":770,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ro_RO\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 :(((n%100>19)||(( n%100==0)&&(n!=0)))? 2 : 1));\"},\"Connect Now\":[\"Conecta\\u021bi-v\\u0103 acum\"],\"You are not connected to Hostinger Reach\":[\"Nu sunte\\u021bi conectat la Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Nu sunte\\u021bi conectat la Hostinger Reach. Pentru a ob\\u021bine acces complet la acest bloc, trebuie s\\u0103 v\\u0103 conecta\\u021bi contul Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pl_PL-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":797,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pl_PL\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Connect Now\":[\"Po\\u0142\\u0105cz teraz\"],\"You are not connected to Hostinger Reach\":[\"Nie jeste\\u015b po\\u0142\\u0105czony z Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Nie jeste\\u015b po\\u0142\\u0105czony z Hostinger Reach. Aby uzyska\\u0107 pe\\u0142ny dost\\u0119p do tego bloku, musisz po\\u0142\\u0105czy\\u0107 swoje konto Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_CO-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":920,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_CO\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"Formulario ID\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellidos?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelva a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirse\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_MX-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":920,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_MX\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"Formulario ID\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellidos?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelva a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirse\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ro_RO-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":386,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ro_RO\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 :(((n%100>19)||(( n%100==0)&&(n!=0)))? 2 : 1));\"},\"Reach Subscription Form\":[\"Formular de abonament Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_MX-40280f641851c0bceee91722c888f369.json","ext":"json","size":1357,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_MX\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ya\"],\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"Formulario ID\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellidos?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelva a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirse\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1 conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debe conectar su cuenta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-zh_CN-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":761,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"zh_CN\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\u7acb\\u5373\\u8fde\\u63a5\"],\"You are not connected to Hostinger Reach\":[\"\\u60a8\\u6ca1\\u6709\\u8fde\\u63a5\\u5230Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u60a8\\u8fd8\\u6ca1\\u6709\\u8fde\\u63a5\\u5230Hostinger Reach\\u3002\\u60a8\\u9700\\u8981\\u8fde\\u63a5\\u60a8\\u7684Hostinger Reach\\u8d26\\u6237\\uff0c\\u624d\\u80fd\\u5b8c\\u5168\\u8bbf\\u95ee\\u8be5\\u533a\\u5757\\u3002\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-id_ID-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":335,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"id_ID\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Reach Subscription Form\":[\"Formulir Berlangganan Jangkauan\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-lt_LT-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":401,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"lt_LT\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Reach Subscription Form\":[\"Pasiekti prenumeratos forma\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pl_PL-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1023,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pl_PL\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Contact List\":[\"Lista kontakt\\u00f3w\"],\"Create New List\":[\"Utw\\u00f3rz now\\u0105 list\\u0119\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"Identyfikator formularza\"],\"Name\":[\"Nazwa\"],\"Name for the new Contact List\":[\"Nazwa dla nowej listy kontakt\\u00f3w\"],\"New Contact List\":[\"Nowa lista kontakt\\u00f3w\"],\"Settings\":[\"Ustawienia\"],\"Show Name Field?\":[\"Pokaza\\u0107 pole nazwy?\"],\"Show Surname Field?\":[\"Pokaza\\u0107 pole nazwiska?\"],\"Something went wrong. Please try again\":[\"Co\\u015b posz\\u0142o nie tak. Spr\\u00f3buj ponownie\"],\"Surname\":[\"Nazwisko\"],\"Thanks for subscribing\":[\"Dzi\\u0119kujemy za subskrypcj\\u0119\"],\"Unique identifier for this form\":[\"Unikalny identyfikator dla tego formularza\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-uk-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":523,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"uk\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Reach Subscription Form\":[\"\\u0424\\u043e\\u0440\\u043c\\u0430 \\u043f\\u0456\\u0434\\u043f\\u0438\\u0441\\u043a\\u0438 \\u043d\\u0430 \\u0440\\u043e\\u0437\\u0441\\u0438\\u043b\\u043a\\u0443\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_AR-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":347,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_AR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-it_IT-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":337,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 08:44+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"it_IT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Modulo di iscrizione a Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_MX-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":347,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_MX\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-th-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":2065,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"th\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Contact List\":[\"\\u0e23\\u0e32\\u0e22\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e1c\\u0e39\\u0e49\\u0e15\\u0e34\\u0e14\\u0e15\\u0e48\\u0e2d\"],\"Create New List\":[\"\\u0e2a\\u0e23\\u0e49\\u0e32\\u0e07\\u0e23\\u0e32\\u0e22\\u0e01\\u0e32\\u0e23\\u0e43\\u0e2b\\u0e21\\u0e48\"],\"Email\":[\"\\u0e2d\\u0e35\\u0e40\\u0e21\\u0e25\"],\"Form ID\":[\"\\u0e23\\u0e2b\\u0e31\\u0e2a\\u0e41\\u0e1a\\u0e1a\\u0e1f\\u0e2d\\u0e23\\u0e4c\\u0e21\"],\"Name\":[\"\\u0e0a\\u0e37\\u0e48\\u0e2d\"],\"Name for the new Contact List\":[\"\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e2a\\u0e33\\u0e2b\\u0e23\\u0e31\\u0e1a\\u0e23\\u0e32\\u0e22\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e1c\\u0e39\\u0e49\\u0e15\\u0e34\\u0e14\\u0e15\\u0e48\\u0e2d\\u0e43\\u0e2b\\u0e21\\u0e48\"],\"New Contact List\":[\"\\u0e23\\u0e32\\u0e22\\u0e01\\u0e32\\u0e23\\u0e15\\u0e34\\u0e14\\u0e15\\u0e48\\u0e2d\\u0e43\\u0e2b\\u0e21\\u0e48\"],\"Settings\":[\"\\u0e01\\u0e32\\u0e23\\u0e15\\u0e31\\u0e49\\u0e07\\u0e04\\u0e48\\u0e32\"],\"Show Name Field?\":[\"\\u0e41\\u0e2a\\u0e14\\u0e07\\u0e1f\\u0e34\\u0e25\\u0e14\\u0e4c\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e2b\\u0e23\\u0e37\\u0e2d\\u0e44\\u0e21\\u0e48?\"],\"Show Surname Field?\":[\"\\u0e41\\u0e2a\\u0e14\\u0e07\\u0e0a\\u0e48\\u0e2d\\u0e07\\u0e19\\u0e32\\u0e21\\u0e2a\\u0e01\\u0e38\\u0e25\\u0e2b\\u0e23\\u0e37\\u0e2d\\u0e44\\u0e21\\u0e48?\"],\"Something went wrong. Please try again\":[\"\\u0e40\\u0e01\\u0e34\\u0e14\\u0e02\\u0e49\\u0e2d\\u0e1c\\u0e34\\u0e14\\u0e1e\\u0e25\\u0e32\\u0e14 \\u0e01\\u0e23\\u0e38\\u0e13\\u0e32\\u0e25\\u0e2d\\u0e07\\u0e2d\\u0e35\\u0e01\\u0e04\\u0e23\\u0e31\\u0e49\\u0e07\"],\"Surname\":[\"\\u0e19\\u0e32\\u0e21\\u0e2a\\u0e01\\u0e38\\u0e25\"],\"Thanks for subscribing\":[\"\\u0e02\\u0e2d\\u0e1a\\u0e04\\u0e38\\u0e13\\u0e17\\u0e35\\u0e48\\u0e2a\\u0e21\\u0e31\\u0e04\\u0e23\"],\"Unique identifier for this form\":[\"\\u0e23\\u0e2b\\u0e31\\u0e2a\\u0e1b\\u0e23\\u0e30\\u0e08\\u0e33\\u0e15\\u0e31\\u0e27\\u0e17\\u0e35\\u0e48\\u0e44\\u0e21\\u0e48\\u0e0b\\u0e49\\u0e33\\u0e01\\u0e31\\u0e19\\u0e2a\\u0e33\\u0e2b\\u0e23\\u0e31\\u0e1a\\u0e41\\u0e1a\\u0e1a\\u0e1f\\u0e2d\\u0e23\\u0e4c\\u0e21\\u0e19\\u0e35\\u0e49\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_BR-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":723,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_BR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conecte-se agora\"],\"You are not connected to Hostinger Reach\":[\"Voc\\u00ea n\\u00e3o est\\u00e1 conectado ao Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Voc\\u00ea n\\u00e3o est\\u00e1 conectado \\u00e0 Hostinger Reach. Para obter acesso total a esse bloco, voc\\u00ea precisa conectar sua conta do Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ko_KR.l10n.php","ext":"php","size":8536,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Korean','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:28+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'ko_KR','plural-forms'=>'nplurals=1; plural=0;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'\uc6cc\ub4dc\ud504\ub808\uc2a4 \uc0ac\uc774\ud2b8\ub97c Hostinger Reach\uc640 \ud1b5\ud569\ud558\uc138\uc694.','Hostinger'=>'Hostinger','Attention:'=>'\uc8fc\uc758:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach\uc5d0\ub294 \ucd5c\uc18c PHP \ubc84\uc804 <b>%s<\/b>\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.','You are running <b>%s<\/b> PHP version.'=>'<b>%s<\/b> PHP \ubc84\uc804\uc744 \uc2e4\ud589 \uc911\uc785\ub2c8\ub2e4.','Email Marketing'=>'\uc774\uba54\uc77c \ub9c8\ucf00\ud305','Thanks for subscribing.'=>'\uad6c\ub3c5\ud574 \uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.','Something went wrong. Please try again.'=>'\ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud574 \uc8fc\uc138\uc694.','Email'=>'\uc774\uba54\uc77c','Name'=>'\uc774\ub984','Surname'=>'\uc131','Subscribe'=>'\uad6c\ub3c5','Contact Form 7'=>'\ubb38\uc758 \uc591\uc2dd 7','WP Forms Lite %s'=>'WP \uc591\uc2dd \ub77c\uc774\ud2b8 %s','WP Forms Lite'=>'WP \uc591\uc2dd \ub77c\uc774\ud2b8','Something went wrong'=>'\ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4','Welcome to Reach'=>'Reach\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'\ub0b4 \uc2a4\ud0c0\uc77c\uc5d0 \ub9de\ub294 AI\uac00 \uc81c\uc791\ud55c \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\uba54\uc77c \ucea0\ud398\uc778\uc744 \ub9cc\ub4dc\uc138\uc694. \uc6cc\ub4dc\ud504\ub808\uc2a4 \uc0ac\uc774\ud2b8\uc640 \uc989\uc2dc \ub3d9\uae30\ud654\ud558\uc5ec \uc7a0\uc7ac\uace0\uac1d\uacfc \uc27d\uac8c \uc18c\ud1b5\ud558\uc138\uc694.','Reach is already connected to another site.'=>'Reach\uac00 \uc774\ubbf8 \ub2e4\ub978 \uc0ac\uc774\ud2b8\uc5d0 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.','Disconnect it to link this site instead.'=>'\ub300\uc2e0 \uc774 \uc0ac\uc774\ud2b8\ub97c \uc5f0\uacb0\ud558\ub824\uba74 \uc5f0\uacb0\uc744 \ud574\uc81c\ud558\uc138\uc694.','Manage'=>'\uad00\ub9ac','Start for free'=>'\ubb34\ub8cc\ub85c \uc2dc\uc791\ud558\uae30','This month'=>'\uc774\ubc88 \ub2ec','Your plan'=>'\uc694\uae08\uc81c','Upgrade'=>'\uc5c5\uadf8\ub808\uc774\ub4dc','Emails'=>'\uc774\uba54\uc77c','Sent'=>'\ubcf4\ub0b8','Remaining'=>'\ub0a8\uc544\uc788\uc74c','Campaigns'=>'\ucea0\ud398\uc778','Average CTOR'=>'\ud3c9\uade0 CTOR','Subscribers'=>'\uad6c\ub3c5\uc790','New subscribers'=>'\uc2e0\uaddc \uad6c\ub3c5\uc790','Unsubscribes'=>'\uad6c\ub3c5 \ucde8\uc18c','Total subscribers'=>'\ucd1d \uad6c\ub3c5\uc790 \uc218','Templates'=>'\ud15c\ud50c\ub9bf','Settings'=>'\uc124\uc815','Forms'=>'\uc591\uc2dd','Add form'=>'\uc591\uc2dd \ucd94\uac00','Start collecting form submissions'=>'\uc591\uc2dd \uc81c\ucd9c \uc218\uc9d1 \uc2dc\uc791','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\uc6f9\uc0ac\uc774\ud2b8\uc5d0\uc11c \uc591\uc2dd\uc744 \uad00\ub9ac\ud560 \ubc29\ubc95\uc744 \uc120\ud0dd\ud558\uc138\uc694. Hostinger Reach\ub85c \uc0c8 \uc591\uc2dd\uc744 \ub9cc\ub4e4\uac70\ub098 \ud0c0\uc0ac \ud50c\ub7ec\uadf8\uc778\uc744 \uc5f0\uacb0\ud569\ub2c8\ub2e4.','Add more forms'=>'\uc591\uc2dd \ucd94\uac00\ud558\uae30','Connect more forms to expand your contact list and capture leads from different pages.'=>'\ub354 \ub9ce\uc740 \uc591\uc2dd\uc744 \uc5f0\uacb0\ud558\uc5ec \uc5f0\ub77d\ucc98 \ubaa9\ub85d\uc744 \ud655\uc7a5\ud558\uace0 \ub2e4\uc591\ud55c \ud398\uc774\uc9c0\uc5d0\uc11c \ub9ac\ub4dc\ub97c \ud655\ubcf4\ud558\uc138\uc694.','New page'=>'\uc0c8 \ud398\uc774\uc9c0','FAQ'=>'\uc790\uc8fc \ubb3b\ub294 \uc9c8\ubb38','What is Hostinger Reach email marketing service?'=>'\ud638\uc2a4\ud305\uc5b4 \ub9ac\uce58 \uc774\uba54\uc77c \ub9c8\ucf00\ud305 \uc11c\ube44\uc2a4\ub780 \ubb34\uc5c7\uc778\uac00\uc694?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach\ub294 \uc18c\uaddc\ubaa8 \ube44\uc988\ub2c8\uc2a4\uc640 \ud06c\ub9ac\uc5d0\uc774\ud130\ub97c \uc704\ud55c AI \uae30\ubc18 \uc774\uba54\uc77c \ub9c8\ucf00\ud305 \ub3c4\uad6c\uc785\ub2c8\ub2e4. \uc5f0\ub77d\ucc98 \ubaa9\ub85d \uc791\uc131\ubd80\ud130 \ucea0\ud398\uc778 \uc804\uc1a1 \ubc0f \uacb0\uacfc \ucd94\uc801\uc5d0 \uc774\ub974\uae30\uae4c\uc9c0 \uc804\uccb4 \uc774\uba54\uc77c \ub9c8\ucf00\ud305 \uc5ec\uc815\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.','How is Hostinger Reach different from other email marketing apps?'=>'Hostinger Reach\ub294 \ub2e4\ub978 \uc774\uba54\uc77c \ub9c8\ucf00\ud305 \uc571\uacfc \uc5b4\ub5bb\uac8c \ub2e4\ub978\uac00\uc694?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach\ub294 \ub514\uc790\uc778\uc774\ub098 \ub9c8\ucf00\ud305 \uacbd\ud5d8\uc774 \ud544\uc694 \uc5c6\uc774 \ub2e8\uc21c\uc131, \uc18d\ub3c4, \uacb0\uacfc\ub97c \uc704\ud574 \uc81c\uc791\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc774\uba54\uc77c \ub3c4\uad6c\uc640 \ub2ec\ub9ac Reach\uc758 \ud575\uc2ec\uc740 AI \uae30\ubc18 \ud15c\ud50c\ub9bf \uc791\uc131\uae30\uc785\ub2c8\ub2e4. \uc81c\ud488 \ucd9c\uc2dc, \ud2b9\ubcc4 \ud589\uc0ac, \ub274\uc2a4\ub808\ud130 \uc5c5\ub370\uc774\ud2b8 \ub4f1 \uc5b4\ub5a4 \uc885\ub958\uc758 \uc774\uba54\uc77c\uc774\ub4e0 \uc804\ubb38\uc801\uc774\uace0 \ubaa8\ubc14\uc77c \uce5c\ud654\uc801\uc778 \uc774\uba54\uc77c\uc744 \uc989\uc2dc \ub9cc\ub4e4\uc5b4 \uc90d\ub2c8\ub2e4. \ucf58\ud150\uce20\ub97c \uc791\uc131\ud560 \ubfd0\ub9cc \uc544\ub2c8\ub77c \uba54\uc2dc\uc9c0\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \ub808\uc774\uc544\uc6c3\uc744 \uc81c\uc548\ud558\uace0 \uc2a4\ud0c0\uc77c \uc124\uc815\uc744 \uc800\uc7a5\ud558\ubbc0\ub85c \ucc98\uc74c\ubd80\ud130 \ub2e4\uc2dc \uc2dc\uc791\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.<br><br>\ubaa8\ub4e0 \ud15c\ud50c\ub9bf\uc740 \uc0ac\uc6a9\uc790 \uc9c0\uc815\uc774 \uac00\ub2a5\ud558\ubbc0\ub85c \uc774\uba54\uc77c\uc5d0 \ube0c\ub79c\ub4dc\uc758 \ub8e9, \ub290\ub08c, \ubcf4\uc774\uc2a4\ub97c \ubc18\uc601\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ud15c\ud50c\ub9bf\uc740 \uac80\uc99d\ub41c \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc81c\uc791\ub418\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uac00\ub3c5\uc131, \uc811\uadfc\uc131 \ubc0f \ub3c5\uc790 \ucc38\uc5ec\uc5d0 \ucd5c\uc801\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.','How much does it cost to use Hostinger Reach?'=>'Hostinger Reach \uc0ac\uc6a9 \ube44\uc6a9\uc740 \uc5bc\ub9c8\uc778\uac00\uc694?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach\ub294 1\ub144\uac04 \ubb34\ub8cc \uc694\uae08\uc81c\ub97c \uc81c\uacf5\ud558\ubbc0\ub85c \uc2dc\uc791\ud558\uae30\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uc720\ub8cc \uc694\uae08\uc81c\ub294 \ub3c4\ub2ec\ud558\ub824\ub294 \uace0\uc720 \uc5f0\ub77d\ucc98 \uc218\uc640 \ub9e4\uc6d4 \ubcf4\ub0b4\ub294 \uc774\uba54\uc77c \uc218\uc5d0 \ub530\ub77c \uc694\uae08\uc774 \uacb0\uc815\ub429\ub2c8\ub2e4. \uc7a0\uc7ac\uace0\uac1d\uc774 \uc99d\uac00\ud558\uba74 \ud544\uc694\uc5d0 \ub9de\ub294 \uc694\uae08\uc81c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Reach\ub294 \uc5f0\ub77d\ucc98 \ubaa9\ub85d\uc5d0 \uc81c\ud55c\uc774 \uc5c6\uc73c\ubbc0\ub85c \ub370\uc774\ud130 \uc190\uc2e4\uc5d0 \ub300\ud574 \uac71\uc815\ud560 \ud544\uc694\uac00 \uc5c6\uc73c\uba70 \uc9c0\uc18d\uc801\uc73c\ub85c \uc7a0\uc7ac\uace0\uac1d\uc744 \ub298\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.','opens in new tab'=>'\uc0c8 \ud0ed\uc5d0\uc11c \uc5f4\uae30','Banner background image for'=>'\ubc30\ub108 \ubc30\uacbd \uc774\ubbf8\uc9c0','Background image for'=>'\ubc30\uacbd \uc774\ubbf8\uc9c0','usage statistics'=>'\uc0ac\uc6a9 \ud1b5\uacc4','remaining out of'=>'\ub0a8\uc740','total'=>'\ud569\uacc4','Progress: {current} of {total} used ({percentage}%)'=>'\uc9c4\ud589\ub960: \uc9c4\ud589\ub960: {\ucd1d} \uc0ac\uc6a9\ub7c9 \uc911 {\ud604\uc7ac} \uc0ac\uc6a9\ub7c9({\ud37c\uc13c\ud2b8}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\ud074\ub9ad \ud22c \uc624\ud508 \ube44\uc728\uc740 \ud074\ub9ad\uc73c\ub85c \uc774\uc5b4\uc9c4 \uc624\ud508\uc758 \ube44\uc728\uc744 \uc54c\ub824\uc90d\ub2c8\ub2e4. \uc5c5\uc885\uc5d0 \ub530\ub77c 6~17%\uac00 \uc88b\uc740 CTOR\uc785\ub2c8\ub2e4.','Add form clicked'=>'\uc591\uc2dd \ucd94\uac00 \ud074\ub9ad','Select page'=>'\ud398\uc774\uc9c0 \uc120\ud0dd','Plugin'=>'\ud50c\ub7ec\uadf8\uc778','Entries'=>'\ud56d\ubaa9','Status'=>'\uc0c1\ud0dc','Active'=>'\ud65c\uc131','Inactive'=>'\ube44\ud65c\uc131','Go to plugin'=>'\ud50c\ub7ec\uadf8\uc778\uc73c\ub85c \uc774\ub3d9','Disconnect'=>'\uc5f0\uacb0 \ud574\uc81c','View form'=>'\uc591\uc2dd \ubcf4\uae30','Edit form'=>'\uc591\uc2dd \ud3b8\uc9d1','Loading plugins...'=>'\ud50c\ub7ec\uadf8\uc778 \ub85c\ub4dc \uc911...','Expand {pluginName} details'=>'\ud50c\ub7ec\uadf8\uc778 \uc774\ub984} \uc138\ubd80 \uc815\ubcf4 \ud3bc\uce58\uae30','Collapse {pluginName} details'=>'\ud50c\ub7ec\uadf8\uc778 \uc774\ub984} \uc138\ubd80 \uc815\ubcf4 \uc811\uae30','Thanks for subscribing'=>'\uad6c\ub3c5\ud574 \uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4','Something went wrong. Please try again'=>'\ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \uc2dc\ub3c4\ud574 \uc8fc\uc138\uc694','Form ID'=>'\uc591\uc2dd ID','Unique identifier for this form'=>'\uc774 \uc591\uc2dd\uc758 \uace0\uc720 \uc2dd\ubcc4\uc790','Contact List'=>'\uc5f0\ub77d\ucc98 \ubaa9\ub85d','Create New List'=>'\uc0c8 \ubaa9\ub85d \ub9cc\ub4e4\uae30','New Contact List'=>'\uc0c8 \uc5f0\ub77d\ucc98 \ubaa9\ub85d','Name for the new Contact List'=>'\uc0c8 \uc5f0\ub77d\ucc98 \ubaa9\ub85d\uc758 \uc774\ub984','Show Name Field?'=>'\uc774\ub984 \ud544\ub4dc \ud45c\uc2dc?','Show Surname Field?'=>'\uc131 \ud544\ub4dc \ud45c\uc2dc?','Reach Subscription Form'=>'\uad6c\ub3c5 \uc2e0\uccad \uc591\uc2dd\uc5d0 \ub3c4\ub2ec\ud558\uae30','block title\u0004Reach Subscription Form'=>'\uad6c\ub3c5 \uc2e0\uccad \uc591\uc2dd\uc5d0 \ub3c4\ub2ec\ud558\uae30','block description\u0004Subscription form for Hostinger Reach'=>'Hostinger Reach \uad6c\ub3c5 \uc591\uc2dd']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-fr_FR-40280f641851c0bceee91722c888f369.json","ext":"json","size":1453,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"fr_FR\",\"plural-forms\":\"nplurals=2; plural=n > 1;\"},\"Connect Now\":[\"Se connecter\"],\"Contact List\":[\"Liste de contacts\"],\"Create New List\":[\"Cr\\u00e9er une nouvelle liste\"],\"Email\":[\"Courriel\"],\"Form ID\":[\"ID du formulaire\"],\"Name\":[\"Nom\"],\"Name for the new Contact List\":[\"Nom de la nouvelle liste de contacts\"],\"New Contact List\":[\"Nouvelle liste de contacts\"],\"Reach Subscription Form\":[\"Formulaire d'abonnement \\u00e0 Reach\"],\"Settings\":[\"Param\\u00e8tres\"],\"Show Name Field?\":[\"Afficher le champ Nom ?\"],\"Show Surname Field?\":[\"Afficher le champ du nom de famille ?\"],\"Something went wrong. Please try again\":[\"Un probl\\u00e8me s'est produit. Veuillez r\\u00e9essayer\"],\"Surname\":[\"Nom de famille\"],\"Thanks for subscribing\":[\"Merci de vous inscrire\"],\"Unique identifier for this form\":[\"Identifiant unique pour ce formulaire\"],\"You are not connected to Hostinger Reach\":[\"Vous n'\\u00eates pas connect\\u00e9 \\u00e0 Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Vous n'\\u00eates pas connect\\u00e9 \\u00e0 Hostinger Reach. Pour obtenir un acc\\u00e8s complet \\u00e0 ce bloc, vous devez vous connecter \\u00e0 votre compte Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-tr_TR-40280f641851c0bceee91722c888f369.json","ext":"json","size":1527,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"tr_TR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"\\u015eimdi Ba\\u011flan\"],\"Contact List\":[\"\\u0130leti\\u015fim Listesi\"],\"Create New List\":[\"Yeni Liste Olu\\u015ftur\"],\"Email\":[\"E-posta\"],\"Form ID\":[\"Form Kimli\\u011fi\"],\"Name\":[\"\\u0130sim\"],\"Name for the new Contact List\":[\"Yeni Ki\\u015fi Listesi i\\u00e7in \\u0130sim\"],\"New Contact List\":[\"Yeni Ki\\u015fi Listesi\"],\"Reach Subscription Form\":[\"Abonelik Formuna Ula\\u015f\\u0131n\"],\"Settings\":[\"Ayarlar\"],\"Show Name Field?\":[\"Ad Alan\\u0131n\\u0131 G\\u00f6ster?\"],\"Show Surname Field?\":[\"Soyad\\u0131 Alan\\u0131n\\u0131 G\\u00f6ster?\"],\"Something went wrong. Please try again\":[\"Bir \\u015feyler yanl\\u0131\\u015f gitti. L\\u00fctfen tekrar deneyin\"],\"Surname\":[\"Soyad\\u0131\"],\"Thanks for subscribing\":[\"Abone oldu\\u011funuz i\\u00e7in te\\u015fekk\\u00fcrler\"],\"Unique identifier for this form\":[\"Bu form i\\u00e7in benzersiz tan\\u0131mlay\\u0131c\\u0131\"],\"You are not connected to Hostinger Reach\":[\"Hostinger Reach'e ba\\u011fl\\u0131 de\\u011filsiniz\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Hostinger Reach'e ba\\u011fl\\u0131 de\\u011filsiniz. Bu blo\\u011fa tam eri\\u015fim elde etmek i\\u00e7in Hostinger Reach hesab\\u0131n\\u0131z\\u0131 ba\\u011flaman\\u0131z gerekir.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_PT-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":677,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-08 08:31+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_PT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Ligar agora\"],\"You are not connected to Hostinger Reach\":[\"N\\u00e3o est\\u00e1 ligado ao Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"N\\u00e3o est\\u00e1 ligado ao Hostinger Reach. Para obter acesso total a este bloco, precisa de ligar a sua conta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_AR-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":674,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_AR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ahora\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1 conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debe conectar su cuenta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-it_IT-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":915,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 08:44+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"it_IT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Elenco dei contatti\"],\"Create New List\":[\"Crea un nuovo elenco\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID del modulo\"],\"Name\":[\"Nome\"],\"Name for the new Contact List\":[\"Nome per il nuovo elenco contatti\"],\"New Contact List\":[\"Nuovo elenco di contatti\"],\"Settings\":[\"Impostazioni\"],\"Show Name Field?\":[\"Mostrare il campo del nome?\"],\"Show Surname Field?\":[\"Mostrare il campo del cognome?\"],\"Something went wrong. Please try again\":[\"Qualcosa \\u00e8 andato storto. Riprova\"],\"Surname\":[\"Cognome\"],\"Thanks for subscribing\":[\"Grazie per esserti iscritto\"],\"Unique identifier for this form\":[\"Identificatore unico per questo modulo\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_CO-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":347,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_CO\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-fr_FR-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":344,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"fr_FR\",\"plural-forms\":\"nplurals=2; plural=n > 1;\"},\"Reach Subscription Form\":[\"Formulaire d'abonnement \\u00e0 Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_BR-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":347,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_BR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Formul\\u00e1rio de assinatura do Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-de_DE-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":333,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"de_DE\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Reach-Abonnementformular\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-uk.l10n.php","ext":"php","size":11484,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Ukrainian','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:34+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'uk','plural-forms'=>'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'\u0406\u043d\u0442\u0435\u0433\u0440\u0443\u0439\u0442\u0435 \u0441\u0432\u0456\u0439 \u0441\u0430\u0439\u0442 \u043d\u0430 WordPress \u0437 Hostinger Reach.','Hostinger'=>'\u0425\u043e\u0441\u0442\u0456\u043d\u0433\u0435\u0440','Attention:'=>'\u0423\u0432\u0430\u0433\u0430:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0454 \u043c\u0456\u043d\u0456\u043c\u0430\u043b\u044c\u043d\u043e\u0457 \u0432\u0435\u0440\u0441\u0456\u0457 PHP <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'\u0423 \u0432\u0430\u0441 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043e <b>%s<\/b> \u0432\u0435\u0440\u0441\u0456\u044e PHP.','Email Marketing'=>'Email-\u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433','Thanks for subscribing.'=>'\u0414\u044f\u043a\u0443\u0454\u043c\u043e \u0437\u0430 \u043f\u0456\u0434\u043f\u0438\u0441\u043a\u0443.','Something went wrong. Please try again.'=>'\u0429\u043e\u0441\u044c \u043f\u0456\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a. \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0441\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0449\u0435 \u0440\u0430\u0437.','Email'=>'\u0415\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430 \u043f\u043e\u0448\u0442\u0430','Name'=>'\u0406\u043c\\'\u044f','Surname'=>'\u041f\u0440\u0456\u0437\u0432\u0438\u0449\u0435','Subscribe'=>'\u041f\u0456\u0434\u043f\u0438\u0441\u0430\u0442\u0438\u0441\u044f','Contact Form 7'=>'\u041a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u0430 \u0444\u043e\u0440\u043c\u0430 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'\u0429\u043e\u0441\u044c \u043f\u0456\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a','Welcome to Reach'=>'\u041b\u0430\u0441\u043a\u0430\u0432\u043e \u043f\u0440\u043e\u0441\u0438\u043c\u043e \u0434\u043e Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'\u0421\u0442\u0432\u043e\u0440\u044e\u0439\u0442\u0435 \u0435\u043c\u0435\u0439\u043b-\u043a\u0430\u043c\u043f\u0430\u043d\u0456\u0457 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0448\u0430\u0431\u043b\u043e\u043d\u0456\u0432, \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u0445 \u0448\u0442\u0443\u0447\u043d\u0438\u043c \u0456\u043d\u0442\u0435\u043b\u0435\u043a\u0442\u043e\u043c, \u044f\u043a\u0456 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u044e\u0442\u044c \u0432\u0430\u0448\u043e\u043c\u0443 \u0441\u0442\u0438\u043b\u044e. \u041c\u0438\u0442\u0442\u0454\u0432\u043e \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0456\u0437\u0443\u0439\u0442\u0435\u0441\u044f \u0437 \u0432\u0430\u0448\u0438\u043c \u0441\u0430\u0439\u0442\u043e\u043c \u043d\u0430 WordPress \u0456 \u043b\u0435\u0433\u043a\u043e \u0441\u043f\u0456\u043b\u043a\u0443\u0439\u0442\u0435\u0441\u044f \u0437 \u0430\u0443\u0434\u0438\u0442\u043e\u0440\u0456\u0454\u044e.','Reach is already connected to another site.'=>'Reach \u0432\u0436\u0435 \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0434\u043e \u0456\u043d\u0448\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0443.','Disconnect it to link this site instead.'=>'\u0412\u0456\u0434\u043a\u043b\u044e\u0447\u0456\u0442\u044c \u0439\u043e\u0433\u043e, \u0449\u043e\u0431 \u0437\u0430\u043c\u0456\u0441\u0442\u044c \u043d\u044c\u043e\u0433\u043e \u043f\u043e\u0441\u0438\u043b\u0430\u0442\u0438\u0441\u044f \u043d\u0430 \u0446\u0435\u0439 \u0441\u0430\u0439\u0442.','Manage'=>'\u041a\u0435\u0440\u0443\u0432\u0430\u0442\u0438','Start for free'=>'\u041f\u043e\u0447\u043d\u0456\u0442\u044c \u0431\u0435\u0437\u043a\u043e\u0448\u0442\u043e\u0432\u043d\u043e','This month'=>'\u0426\u044c\u043e\u0433\u043e \u043c\u0456\u0441\u044f\u0446\u044f','Your plan'=>'\u0422\u0432\u0456\u0439 \u043f\u043b\u0430\u043d','Upgrade'=>'\u041e\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f','Emails'=>'\u0415\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0456 \u043b\u0438\u0441\u0442\u0438','Sent'=>'\u0412\u0456\u0434\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e','Remaining'=>'\u0417\u0430\u043b\u0438\u0448\u0438\u043b\u043e\u0441\u044f','Campaigns'=>'\u041a\u0430\u043c\u043f\u0430\u043d\u0456\u0457','Average CTOR'=>'\u0421\u0435\u0440\u0435\u0434\u043d\u0456\u0439 CTOR','Subscribers'=>'\u041f\u0456\u0434\u043f\u0438\u0441\u043d\u0438\u043a\u0438','New subscribers'=>'\u041d\u043e\u0432\u0456 \u043f\u0456\u0434\u043f\u0438\u0441\u043d\u0438\u043a\u0438','Unsubscribes'=>'\u0412\u0456\u0434\u043f\u0438\u0441\u0443\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u043f\u0456\u0434\u043f\u0438\u0441\u043a\u0438','Total subscribers'=>'\u0412\u0441\u044c\u043e\u0433\u043e \u043f\u0456\u0434\u043f\u0438\u0441\u043d\u0438\u043a\u0456\u0432','Templates'=>'\u0428\u0430\u0431\u043b\u043e\u043d\u0438','Settings'=>'\u041d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f','Forms'=>'\u0424\u043e\u0440\u043c\u0438','Add form'=>'\u0414\u043e\u0434\u0430\u0442\u0438 \u0444\u043e\u0440\u043c\u0443','Start collecting form submissions'=>'\u041f\u043e\u0447\u043d\u0456\u0442\u044c \u0437\u0431\u0438\u0440\u0430\u0442\u0438 \u0437\u0430\u044f\u0432\u043a\u0438 \u043d\u0430 \u0443\u0447\u0430\u0441\u0442\u044c \u0443 \u043a\u043e\u043d\u043a\u0443\u0440\u0441\u0456','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c, \u044f\u043a \u0432\u0438 \u0445\u043e\u0447\u0435\u0442\u0435 \u043a\u0435\u0440\u0443\u0432\u0430\u0442\u0438 \u0444\u043e\u0440\u043c\u0430\u043c\u0438 \u043d\u0430 \u0432\u0430\u0448\u043e\u043c\u0443 \u0441\u0430\u0439\u0442\u0456. \u0421\u0442\u0432\u043e\u0440\u0456\u0442\u044c \u043d\u043e\u0432\u0443 \u0444\u043e\u0440\u043c\u0443 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e Hostinger Reach \u0430\u0431\u043e \u043f\u0456\u0434\u043a\u043b\u044e\u0447\u0456\u0442\u044c \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0456\u0439 \u043f\u043b\u0430\u0433\u0456\u043d.','Add more forms'=>'\u0414\u043e\u0434\u0430\u0439\u0442\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u0444\u043e\u0440\u043c','Connect more forms to expand your contact list and capture leads from different pages.'=>'\u041f\u0456\u0434\u043a\u043b\u044e\u0447\u0456\u0442\u044c \u0431\u0456\u043b\u044c\u0448\u0435 \u0444\u043e\u0440\u043c, \u0449\u043e\u0431 \u0440\u043e\u0437\u0448\u0438\u0440\u0438\u0442\u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432 \u0456 \u0437\u0431\u0438\u0440\u0430\u0442\u0438 \u043f\u043e\u0442\u0435\u043d\u0446\u0456\u0439\u043d\u0438\u0445 \u043a\u043b\u0456\u0454\u043d\u0442\u0456\u0432 \u0437 \u0440\u0456\u0437\u043d\u0438\u0445 \u0441\u0442\u043e\u0440\u0456\u043d\u043e\u043a.','New page'=>'\u041d\u043e\u0432\u0430 \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0430','FAQ'=>'\u041f\u041e\u0428\u0418\u0420\u0415\u041d\u0406 \u0417\u0410\u041f\u0418\u0422\u0410\u041d\u041d\u042f','What is Hostinger Reach email marketing service?'=>'\u0429\u043e \u0442\u0430\u043a\u0435 \u0441\u0435\u0440\u0432\u0456\u0441 email-\u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433\u0443 Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach - \u0446\u0435 \u0456\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 email-\u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433\u0443 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0456 \u0448\u0442\u0443\u0447\u043d\u043e\u0433\u043e \u0456\u043d\u0442\u0435\u043b\u0435\u043a\u0442\u0443 \u0434\u043b\u044f \u043c\u0430\u043b\u043e\u0433\u043e \u0431\u0456\u0437\u043d\u0435\u0441\u0443 \u0442\u0430 \u0430\u0432\u0442\u043e\u0440\u0456\u0432. \u0412\u0456\u043d \u043f\u0456\u0434\u0442\u0440\u0438\u043c\u0443\u0454 \u0432\u0435\u0441\u044c \u043f\u0440\u043e\u0446\u0435\u0441 email-\u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433\u0443 - \u0432\u0456\u0434 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0441\u043f\u0438\u0441\u043a\u0456\u0432 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432 \u0434\u043e \u0432\u0456\u0434\u043f\u0440\u0430\u0432\u043a\u0438 \u0440\u043e\u0437\u0441\u0438\u043b\u043e\u043a \u0456 \u0432\u0456\u0434\u0441\u0442\u0435\u0436\u0435\u043d\u043d\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0456\u0432.','How is Hostinger Reach different from other email marketing apps?'=>'\u0427\u0438\u043c Hostinger Reach \u0432\u0456\u0434\u0440\u0456\u0437\u043d\u044f\u0454\u0442\u044c\u0441\u044f \u0432\u0456\u0434 \u0456\u043d\u0448\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c \u0434\u043b\u044f email-\u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433\u0443?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0438, \u0448\u0432\u0438\u0434\u043a\u043e\u0441\u0442\u0456 \u0442\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0456 - \u0434\u043b\u044f \u0446\u044c\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u0435\u043d \u0434\u043e\u0441\u0432\u0456\u0434 \u0443 \u0441\u0444\u0435\u0440\u0456 \u0434\u0438\u0437\u0430\u0439\u043d\u0443 \u0447\u0438 \u043c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433\u0443. \u041d\u0430 \u0432\u0456\u0434\u043c\u0456\u043d\u0443 \u0432\u0456\u0434 \u0431\u0456\u043b\u044c\u0448\u043e\u0441\u0442\u0456 \u0456\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0456\u0432 \u0434\u043b\u044f \u0440\u043e\u0431\u043e\u0442\u0438 \u0437 \u0435\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u044e \u043f\u043e\u0448\u0442\u043e\u044e, \u0432 \u043e\u0441\u043d\u043e\u0432\u0456 Reach \u043b\u0435\u0436\u0438\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0448\u0430\u0431\u043b\u043e\u043d\u0456\u0432 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0456 \u0448\u0442\u0443\u0447\u043d\u043e\u0433\u043e \u0456\u043d\u0442\u0435\u043b\u0435\u043a\u0442\u0443. \u041d\u0435\u0437\u0430\u043b\u0435\u0436\u043d\u043e \u0432\u0456\u0434 \u0442\u043e\u0433\u043e, \u0447\u0438 \u0446\u0435 \u0437\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0434\u0443\u043a\u0442\u0443, \u0441\u043f\u0435\u0446\u0456\u0430\u043b\u044c\u043d\u0430 \u043f\u0440\u043e\u043f\u043e\u0437\u0438\u0446\u0456\u044f \u0430\u0431\u043e \u043e\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044f \u0440\u043e\u0437\u0441\u0438\u043b\u043a\u0438, \u0432\u0456\u043d \u043c\u0438\u0442\u0442\u0454\u0432\u043e \u0441\u0442\u0432\u043e\u0440\u044e\u0454 \u043f\u0440\u043e\u0444\u0435\u0441\u0456\u0439\u043d\u0438\u0439, \u0437\u0440\u0443\u0447\u043d\u0438\u0439 \u0434\u043b\u044f \u043c\u043e\u0431\u0456\u043b\u044c\u043d\u0438\u0445 \u043f\u0440\u0438\u0441\u0442\u0440\u043e\u0457\u0432 \u0435\u043c\u0435\u0439\u043b. \u0412\u0456\u043d \u043d\u0435 \u043b\u0438\u0448\u0435 \u043f\u0438\u0448\u0435 \u043a\u043e\u043d\u0442\u0435\u043d\u0442 \u0434\u043b\u044f \u0432\u0430\u0441, \u0430\u043b\u0435 \u0439 \u043f\u0440\u043e\u043f\u043e\u043d\u0443\u0454 \u043d\u0430\u0439\u043a\u0440\u0430\u0449\u0438\u0439 \u043c\u0430\u043a\u0435\u0442 \u0434\u043b\u044f \u0432\u0430\u0448\u043e\u0433\u043e \u043f\u043e\u0432\u0456\u0434\u043e\u043c\u043b\u0435\u043d\u043d\u044f \u0442\u0430 \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u0454 \u0432\u0430\u0448\u0456 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u0441\u0442\u0438\u043b\u044e, \u0449\u043e\u0431 \u0432\u0438 \u043d\u0456\u043a\u043e\u043b\u0438 \u043d\u0435 \u043f\u043e\u0447\u0438\u043d\u0430\u043b\u0438 \u0437 \u043d\u0443\u043b\u044f.<br><br>\u041a\u043e\u0436\u0435\u043d \u0448\u0430\u0431\u043b\u043e\u043d \u043c\u043e\u0436\u043d\u0430 \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u0442\u0438, \u0442\u043e\u0436 \u0432\u0430\u0448\u0456 \u043b\u0438\u0441\u0442\u0438 \u0432\u0456\u0434\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u0438\u043c\u0443\u0442\u044c \u0437\u043e\u0432\u043d\u0456\u0448\u043d\u0456\u0439 \u0432\u0438\u0433\u043b\u044f\u0434, \u0432\u0456\u0434\u0447\u0443\u0442\u0442\u044f \u0442\u0430 \u0433\u043e\u043b\u043e\u0441 \u0432\u0430\u0448\u043e\u0433\u043e \u0431\u0440\u0435\u043d\u0434\u0443. \u0410 \u043e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u0438 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043e \u0437 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f\u043c \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0435\u043d\u0438\u0445 \u043d\u0430\u0439\u043a\u0440\u0430\u0449\u0438\u0445 \u043f\u0440\u0430\u043a\u0442\u0438\u043a, \u0457\u0445 \u043e\u043f\u0442\u0438\u043c\u0456\u0437\u043e\u0432\u0430\u043d\u043e \u0434\u043b\u044f \u0447\u0438\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0456, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0456 \u0442\u0430 \u0437\u0430\u043b\u0443\u0447\u0435\u043d\u043d\u044f \u0447\u0438\u0442\u0430\u0447\u0456\u0432.','How much does it cost to use Hostinger Reach?'=>'\u0421\u043a\u0456\u043b\u044c\u043a\u0438 \u043a\u043e\u0448\u0442\u0443\u0454 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach \u043f\u0440\u043e\u043f\u043e\u043d\u0443\u0454 \u0431\u0435\u0437\u043a\u043e\u0448\u0442\u043e\u0432\u043d\u0438\u0439 \u043f\u043b\u0430\u043d \u043d\u0430 \u043e\u0434\u0438\u043d \u0440\u0456\u043a - \u0456\u0434\u0435\u0430\u043b\u044c\u043d\u0438\u0439 \u0432\u0430\u0440\u0456\u0430\u043d\u0442 \u0434\u043b\u044f \u043f\u043e\u0447\u0430\u0442\u043a\u0443 \u0440\u043e\u0431\u043e\u0442\u0438. \u041f\u043b\u0430\u0442\u043d\u0456 \u043f\u043b\u0430\u043d\u0438 \u0437\u0430\u043b\u0435\u0436\u0430\u0442\u044c \u0432\u0456\u0434 \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u0443\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u0445 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432, \u044f\u043a\u0456 \u0432\u0438 \u0445\u043e\u0447\u0435\u0442\u0435 \u043e\u0445\u043e\u043f\u0438\u0442\u0438, \u0442\u0430 \u043a\u0456\u043b\u044c\u043a\u043e\u0441\u0442\u0456 \u0456\u043c\u0435\u0439\u043b\u0456\u0432, \u044f\u043a\u0456 \u0432\u0438 \u043d\u0430\u0434\u0441\u0438\u043b\u0430\u0454\u0442\u0435 \u0449\u043e\u043c\u0456\u0441\u044f\u0446\u044f. \u041f\u043e \u043c\u0456\u0440\u0456 \u0437\u0440\u043e\u0441\u0442\u0430\u043d\u043d\u044f \u0432\u0430\u0448\u043e\u0457 \u0430\u0443\u0434\u0438\u0442\u043e\u0440\u0456\u0457 \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 \u0442\u0430\u0440\u0438\u0444\u043d\u0438\u0439 \u043f\u043b\u0430\u043d, \u044f\u043a\u0438\u0439 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u0454 \u0432\u0430\u0448\u0438\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0430\u043c. Reach \u043d\u0435 \u043e\u0431\u043c\u0435\u0436\u0443\u0454 \u0432\u0430\u0448 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432, \u0442\u043e\u043c\u0443 \u0432\u0430\u043c \u043d\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0442\u0443\u0440\u0431\u0443\u0432\u0430\u0442\u0438\u0441\u044f \u043f\u0440\u043e \u0432\u0442\u0440\u0430\u0442\u0443 \u0434\u0430\u043d\u0438\u0445 \u0456 \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0441\u0442\u0456\u0439\u043d\u043e \u0437\u0431\u0456\u043b\u044c\u0448\u0443\u0432\u0430\u0442\u0438 \u0441\u0432\u043e\u044e \u0430\u0443\u0434\u0438\u0442\u043e\u0440\u0456\u044e.','opens in new tab'=>'\u0432\u0456\u0434\u043a\u0440\u0438\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u0432 \u043d\u043e\u0432\u0456\u0439 \u0432\u043a\u043b\u0430\u0434\u0446\u0456','Banner background image for'=>'\u0411\u0430\u043d\u0435\u0440\u043d\u0435 \u0444\u043e\u043d\u043e\u0432\u0435 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0434\u043b\u044f','Background image for'=>'\u0424\u043e\u043d\u043e\u0432\u0435 \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0434\u043b\u044f','usage statistics'=>'\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f','remaining out of'=>'\u0437\u0430\u043b\u0438\u0448\u0430\u044e\u0447\u0438\u0441\u044c \u043f\u043e\u0437\u0430 \u043c\u0435\u0436\u0430\u043c\u0438','total'=>'\u0432\u0441\u044c\u043e\u0433\u043e','Progress: {current} of {total} used ({percentage}%)'=>'\u041f\u0440\u043e\u0433\u0440\u0435\u0441: {\u043f\u043e\u0442\u043e\u0447\u043d\u0438\u0439} \u0432\u0456\u0434 {\u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0438\u0439} \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043e ({\u0432\u0456\u0434\u0441\u043e\u0442\u043e\u043a}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\u041a\u043e\u0435\u0444\u0456\u0446\u0456\u0454\u043d\u0442 \u043a\u043b\u0456\u043a\u0456\u0432 \u0434\u043e \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0442\u0456\u0432 \u043f\u043e\u043a\u0430\u0437\u0443\u0454, \u044f\u043a\u0438\u0439 \u0432\u0456\u0434\u0441\u043e\u0442\u043e\u043a \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0442\u0456\u0432 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0432\u0441\u044f \u043a\u043b\u0456\u043a\u043e\u043c. \u0425\u043e\u0440\u043e\u0448\u0438\u0439 \u043f\u043e\u043a\u0430\u0437\u043d\u0438\u043a CTOR \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c 6-17%, \u0437\u0430\u043b\u0435\u0436\u043d\u043e \u0432\u0456\u0434 \u0432\u0430\u0448\u043e\u0457 \u0433\u0430\u043b\u0443\u0437\u0456.','Add form clicked'=>'\u041d\u0430\u0442\u0438\u0441\u043d\u0443\u0442\u043e \u043a\u043d\u043e\u043f\u043a\u0443 \"\u0414\u043e\u0434\u0430\u0442\u0438 \u0444\u043e\u0440\u043c\u0443','Select page'=>'\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u0441\u0442\u043e\u0440\u0456\u043d\u043a\u0443','Plugin'=>'\u041f\u043b\u0430\u0433\u0456\u043d','Entries'=>'\u0417\u0430\u043f\u0438\u0441\u0438 \u043d\u0430 \u0443\u0447\u0430\u0441\u0442\u044c \u0443 \u043a\u043e\u043d\u043a\u0443\u0440\u0441\u0456','Status'=>'\u0421\u0442\u0430\u0442\u0443\u0441','Active'=>'\u0410\u043a\u0442\u0438\u0432\u043d\u0438\u0439','Inactive'=>'\u041d\u0435\u0430\u043a\u0442\u0438\u0432\u043d\u0438\u0439','Go to plugin'=>'\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u0434\u043e \u043f\u043b\u0430\u0433\u0456\u043d\u0430','Disconnect'=>'\u0412\u0456\u0434\\'\u0454\u0434\u043d\u0430\u0442\u0438','View form'=>'\u0424\u043e\u0440\u043c\u0430 \u043f\u0435\u0440\u0435\u0433\u043b\u044f\u0434\u0443','Edit form'=>'\u0424\u043e\u0440\u043c\u0430 \u0440\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u043d\u043d\u044f','Loading plugins...'=>'\u0417\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0435\u043d\u043d\u044f \u043f\u043b\u0430\u0433\u0456\u043d\u0456\u0432...','Expand {pluginName} details'=>'\u0420\u043e\u0437\u0433\u043e\u0440\u043d\u0443\u0442\u0438 \u0434\u0435\u0442\u0430\u043b\u0456 {pluginName}','Collapse {pluginName} details'=>'\u0417\u0433\u043e\u0440\u043d\u0443\u0442\u0438 {pluginName} \u0434\u0435\u0442\u0430\u043b\u0456','Thanks for subscribing'=>'\u0414\u044f\u043a\u0443\u0454\u043c\u043e \u0437\u0430 \u043f\u0456\u0434\u043f\u0438\u0441\u043a\u0443','Something went wrong. Please try again'=>'\u0429\u043e\u0441\u044c \u043f\u0456\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a. \u0411\u0443\u0434\u044c \u043b\u0430\u0441\u043a\u0430, \u0441\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0449\u0435 \u0440\u0430\u0437','Form ID'=>'\u0406\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u0444\u043e\u0440\u043c\u0438','Unique identifier for this form'=>'\u0423\u043d\u0456\u043a\u0430\u043b\u044c\u043d\u0438\u0439 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u0446\u0456\u0454\u0457 \u0444\u043e\u0440\u043c\u0438','Contact List'=>'\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432','Create New List'=>'\u0421\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u043d\u043e\u0432\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a','New Contact List'=>'\u041d\u043e\u0432\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432','Name for the new Contact List'=>'\u0406\u043c\\'\u044f \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0443 \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u0456\u0432','Show Name Field?'=>'\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u043f\u043e\u043b\u0435 \"\u0406\u043c\\'\u044f\"?','Show Surname Field?'=>'\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0438 \u043f\u043e\u043b\u0435 \"\u041f\u0440\u0456\u0437\u0432\u0438\u0449\u0435\"?','Reach Subscription Form'=>'\u0424\u043e\u0440\u043c\u0430 \u043f\u0456\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0440\u043e\u0437\u0441\u0438\u043b\u043a\u0443','block title\u0004Reach Subscription Form'=>'\u0424\u043e\u0440\u043c\u0430 \u043f\u0456\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0440\u043e\u0437\u0441\u0438\u043b\u043a\u0443','block description\u0004Subscription form for Hostinger Reach'=>'\u0424\u043e\u0440\u043c\u0430 \u043f\u0456\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-vi-40280f641851c0bceee91722c888f369.json","ext":"json","size":1755,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"vi\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"K\\u1ebft n\\u1ed1i ngay\"],\"Contact List\":[\"Danh s\\u00e1ch li\\u00ean h\\u1ec7\"],\"Create New List\":[\"T\\u1ea1o danh s\\u00e1ch m\\u1edbi\"],\"Email\":[\"Th\\u01b0 \\u0111i\\u1ec7n t\\u1eed\"],\"Form ID\":[\"M\\u00e3 bi\\u1ec3u m\\u1eabu\"],\"Name\":[\"T\\u00ean\"],\"Name for the new Contact List\":[\"T\\u00ean cho danh s\\u00e1ch li\\u00ean h\\u1ec7 m\\u1edbi\"],\"New Contact List\":[\"Danh s\\u00e1ch li\\u00ean h\\u1ec7 m\\u1edbi\"],\"Reach Subscription Form\":[\"Bi\\u1ec3u m\\u1eabu \\u0111\\u0103ng k\\u00fd d\\u1ecbch v\\u1ee5\"],\"Settings\":[\"C\\u00e0i \\u0111\\u1eb7t\"],\"Show Name Field?\":[\"Hi\\u1ec3n th\\u1ecb tr\\u01b0\\u1eddng t\\u00ean?\"],\"Show Surname Field?\":[\"Hi\\u1ec3n th\\u1ecb tr\\u01b0\\u1eddng h\\u1ecd?\"],\"Something went wrong. Please try again\":[\"C\\u00f3 s\\u1ef1 c\\u1ed1 x\\u1ea3y ra. Vui l\\u00f2ng th\\u1eed l\\u1ea1i\"],\"Surname\":[\"H\\u1ecd\"],\"Thanks for subscribing\":[\"C\\u1ea3m \\u01a1n b\\u1ea1n \\u0111\\u00e3 \\u0111\\u0103ng k\\u00fd\"],\"Unique identifier for this form\":[\"M\\u00e3 \\u0111\\u1ecbnh danh duy nh\\u1ea5t cho bi\\u1ec3u m\\u1eabu n\\u00e0y\"],\"You are not connected to Hostinger Reach\":[\"B\\u1ea1n kh\\u00f4ng k\\u1ebft n\\u1ed1i v\\u1edbi Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"B\\u1ea1n ch\\u01b0a k\\u1ebft n\\u1ed1i v\\u1edbi Hostinger Reach. \\u0110\\u1ec3 truy c\\u1eadp \\u0111\\u1ea7y \\u0111\\u1ee7 v\\u00e0o ph\\u1ea7n n\\u00e0y, b\\u1ea1n c\\u1ea7n k\\u1ebft n\\u1ed1i t\\u00e0i kho\\u1ea3n Hostinger Reach c\\u1ee7a m\\u00ecnh.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-zh_CN-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1048,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"zh_CN\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Contact List\":[\"\\u8054\\u7cfb\\u540d\\u5355\"],\"Create New List\":[\"\\u521b\\u5efa\\u65b0\\u5217\\u8868\"],\"Email\":[\"\\u7535\\u5b50\\u90ae\\u4ef6\"],\"Form ID\":[\"\\u8868\\u683c ID\"],\"Name\":[\"\\u540d\\u79f0\"],\"Name for the new Contact List\":[\"\\u65b0\\u8054\\u7cfb\\u4eba\\u5217\\u8868\\u7684\\u540d\\u79f0\"],\"New Contact List\":[\"\\u65b0\\u8054\\u7cfb\\u4eba\\u540d\\u5355\"],\"Settings\":[\"\\u8bbe\\u7f6e\"],\"Show Name Field?\":[\"\\u663e\\u793a\\u540d\\u79f0\\u5b57\\u6bb5\\uff1f\"],\"Show Surname Field?\":[\"\\u663e\\u793a\\u59d3\\u6c0f\\u5b57\\u6bb5\\uff1f\"],\"Something went wrong. Please try again\":[\"\\u51fa\\u9519\\u4e86\\u3002\\u8bf7\\u91cd\\u8bd5\"],\"Surname\":[\"\\u59d3\\u6c0f\"],\"Thanks for subscribing\":[\"\\u611f\\u8c22\\u60a8\\u7684\\u8ba2\\u9605\"],\"Unique identifier for this form\":[\"\\u8be5\\u8868\\u683c\\u7684\\u552f\\u4e00\\u6807\\u8bc6\\u7b26\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-vi-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1154,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"vi\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Contact List\":[\"Danh s\\u00e1ch li\\u00ean h\\u1ec7\"],\"Create New List\":[\"T\\u1ea1o danh s\\u00e1ch m\\u1edbi\"],\"Email\":[\"Th\\u01b0 \\u0111i\\u1ec7n t\\u1eed\"],\"Form ID\":[\"M\\u00e3 bi\\u1ec3u m\\u1eabu\"],\"Name\":[\"T\\u00ean\"],\"Name for the new Contact List\":[\"T\\u00ean cho danh s\\u00e1ch li\\u00ean h\\u1ec7 m\\u1edbi\"],\"New Contact List\":[\"Danh s\\u00e1ch li\\u00ean h\\u1ec7 m\\u1edbi\"],\"Settings\":[\"C\\u00e0i \\u0111\\u1eb7t\"],\"Show Name Field?\":[\"Hi\\u1ec3n th\\u1ecb tr\\u01b0\\u1eddng t\\u00ean?\"],\"Show Surname Field?\":[\"Hi\\u1ec3n th\\u1ecb tr\\u01b0\\u1eddng h\\u1ecd?\"],\"Something went wrong. Please try again\":[\"C\\u00f3 s\\u1ef1 c\\u1ed1 x\\u1ea3y ra. Vui l\\u00f2ng th\\u1eed l\\u1ea1i\"],\"Surname\":[\"H\\u1ecd\"],\"Thanks for subscribing\":[\"C\\u1ea3m \\u01a1n b\\u1ea1n \\u0111\\u00e3 \\u0111\\u0103ng k\\u00fd\"],\"Unique identifier for this form\":[\"M\\u00e3 \\u0111\\u1ecbnh danh duy nh\\u1ea5t cho bi\\u1ec3u m\\u1eabu n\\u00e0y\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_MX.l10n.php","ext":"php","size":8591,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Spanish (Mexico)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:33+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'es_MX','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integre su sitio WordPress con Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Atenci\u00f3n:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach requiere una versi\u00f3n m\u00ednima de PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Est\u00e1 ejecutando <b>%s<\/b> versi\u00f3n de PHP.','Email Marketing'=>'Marketing por correo electr\u00f3nico','Thanks for subscribing.'=>'Gracias por suscribirse.','Something went wrong. Please try again.'=>'Algo ha ido mal. Por favor, int\u00e9ntelo de nuevo.','Email'=>'Correo electr\u00f3nico','Name'=>'Nombre','Surname'=>'Apellido','Subscribe'=>'Suscr\u00edbase a','Contact Form 7'=>'Formulario de contacto 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'Formularios WP Lite','Something went wrong'=>'Algo sali\u00f3 mal','Welcome to Reach'=>'Bienvenido a Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Cree campa\u00f1as de correo electr\u00f3nico con plantillas creadas con IA que se adapten a su estilo. Sincroniza instant\u00e1neamente con tu sitio WordPress y conecta con tu audiencia f\u00e1cilmente.','Reach is already connected to another site.'=>'Reach ya est\u00e1 conectado a otro sitio.','Disconnect it to link this site instead.'=>'Descon\u00e9ctelo para enlazar este sitio en su lugar.','Manage'=>'Gestione','Start for free'=>'Empezar gratis','This month'=>'Este mes','Your plan'=>'Su plan','Upgrade'=>'Actualizar','Emails'=>'Correos electr\u00f3nicos','Sent'=>'Enviado','Remaining'=>'Resto','Campaigns'=>'Campa\u00f1as','Average CTOR'=>'CTOR medio','Subscribers'=>'Abonados','New subscribers'=>'Nuevos abonados','Unsubscribes'=>'Darse de baja','Total subscribers'=>'Total de abonados','Templates'=>'Plantillas','Settings'=>'Ajustes','Forms'=>'Formularios','Add form'=>'A\u00f1adir formulario','Start collecting form submissions'=>'Empezar a recopilar formularios','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Elija c\u00f3mo desea gestionar los formularios de su sitio web. Crea un nuevo formulario con Hostinger Reach o conecta un plugin de terceros.','Add more forms'=>'A\u00f1adir m\u00e1s formularios','Connect more forms to expand your contact list and capture leads from different pages.'=>'Conecte m\u00e1s formularios para ampliar su lista de contactos y captar clientes potenciales de distintas p\u00e1ginas.','New page'=>'P\u00e1gina nueva','FAQ'=>'PREGUNTAS FRECUENTES','What is Hostinger Reach email marketing service?'=>'\u00bfQu\u00e9 es el servicio de marketing por correo electr\u00f3nico Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach es una herramienta de marketing por correo electr\u00f3nico basada en IA para peque\u00f1as empresas y creadores. Es compatible con todo el proceso de marketing por correo electr\u00f3nico, desde la creaci\u00f3n de listas de contactos hasta el env\u00edo de campa\u00f1as y el seguimiento de los resultados.','How is Hostinger Reach different from other email marketing apps?'=>'\u00bfEn qu\u00e9 se diferencia Hostinger Reach de otras aplicaciones de marketing por correo electr\u00f3nico?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach se ha creado para ofrecer simplicidad, velocidad y resultados, sin necesidad de tener experiencia en dise\u00f1o o marketing. A diferencia de la mayor\u00eda de las herramientas de correo electr\u00f3nico, el n\u00facleo de Reach es su creador de plantillas basado en inteligencia artificial. Ya se trate del lanzamiento de un producto, de una oferta especial o de la actualizaci\u00f3n de un bolet\u00edn, crea al instante un correo electr\u00f3nico profesional y apto para dispositivos m\u00f3viles. No s\u00f3lo redacta el contenido por ti, sino que tambi\u00e9n sugiere el mejor dise\u00f1o para tu mensaje y guarda tus ajustes de estilo para que nunca tengas que empezar de cero.<br><br>Cada plantilla es personalizable, para que tus correos electr\u00f3nicos reflejen el aspecto, la sensaci\u00f3n y la voz de tu marca. Y como las plantillas se han creado utilizando las mejores pr\u00e1cticas, est\u00e1n optimizadas para facilitar la lectura, la accesibilidad y la participaci\u00f3n del lector.','How much does it cost to use Hostinger Reach?'=>'\u00bfCu\u00e1nto cuesta utilizar Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach ofrece un plan gratuito de un a\u00f1o, perfecto para empezar. Los planes de pago se basan en el n\u00famero de contactos \u00fanicos a los que quieres llegar y el n\u00famero de correos electr\u00f3nicos que env\u00edas al mes. A medida que aumente tu audiencia, podr\u00e1s cambiar a un plan que se adapte a tus necesidades. Reach no limita tu lista de contactos, as\u00ed que no tienes que preocuparte por la p\u00e9rdida de datos y puedes hacer crecer tu audiencia de forma constante.','opens in new tab'=>'se abre en una nueva pesta\u00f1a','Banner background image for'=>'Imagen de fondo del banner para','Background image for'=>'Imagen de fondo para','usage statistics'=>'estad\u00edsticas de uso','remaining out of'=>'quedando fuera de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progreso: {actual} de {total} utilizado ({porcentaje}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'La tasa de clics por apertura le indica qu\u00e9 porcentaje de aperturas tambi\u00e9n dio lugar a un clic. Un buen CTOR es del 6-17%, dependiendo de tu sector.','Add form clicked'=>'A\u00f1adir formulario pulsado','Select page'=>'Seleccionar p\u00e1gina','Plugin'=>'Plugin','Entries'=>'Entradas','Status'=>'Estado','Active'=>'Activo','Inactive'=>'Inactivo','Go to plugin'=>'Ir al plugin','Disconnect'=>'Desconecte','View form'=>'Ver formulario','Edit form'=>'Editar formulario','Loading plugins...'=>'Cargando plugins...','Expand {pluginName} details'=>'Ampliar {pluginName} detalles','Collapse {pluginName} details'=>'Contraer {pluginName} detalles','Thanks for subscribing'=>'Gracias por suscribirse','Something went wrong. Please try again'=>'Algo ha ido mal. Vuelva a intentarlo','Form ID'=>'Formulario ID','Unique identifier for this form'=>'Identificador \u00fanico para este formulario','Contact List'=>'Lista de contactos','Create New List'=>'Crear nueva lista','New Contact List'=>'Nueva lista de contactos','Name for the new Contact List'=>'Nombre de la nueva lista de contactos','Show Name Field?'=>'\u00bfMostrar campo de nombre?','Show Surname Field?'=>'\u00bfMostrar campo de apellidos?','Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block title\u0004Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formulario de suscripci\u00f3n a Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-tr_TR.l10n.php","ext":"php","size":8391,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Turkish','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:34+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'tr_TR','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'WordPress sitenizi Hostinger Reach ile entegre edin.','Hostinger'=>'Hostinger','Attention:'=>'Dikkat:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach minimum <b>%s<\/b> PHP s\u00fcr\u00fcm\u00fc gerektirir.','You are running <b>%s<\/b> PHP version.'=>'<b>%s<\/b> PHP s\u00fcr\u00fcm\u00fcn\u00fc \u00e7al\u0131\u015ft\u0131r\u0131yorsunuz.','Email Marketing'=>'E-posta Pazarlama','Thanks for subscribing.'=>'Abone oldu\u011funuz i\u00e7in te\u015fekk\u00fcrler.','Something went wrong. Please try again.'=>'Bir \u015feyler yanl\u0131\u015f gitti. L\u00fctfen tekrar deneyin.','Email'=>'E-posta','Name'=>'\u0130sim','Surname'=>'Soyad\u0131','Subscribe'=>'Abone Olun','Contact Form 7'=>'\u0130leti\u015fim Formu 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Bir \u015feyler ters gitti','Welcome to Reach'=>'Reach\\'e Ho\u015f Geldiniz','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Tarz\u0131n\u0131za uygun yapay zeka ile haz\u0131rlanm\u0131\u015f \u015fablonlar\u0131 kullanarak e-posta kampanyalar\u0131 olu\u015fturun. WordPress sitenizle an\u0131nda senkronize edin ve hedef kitlenizle kolayca ba\u011flant\u0131 kurun.','Reach is already connected to another site.'=>'Reach zaten ba\u015fka bir siteye ba\u011fl\u0131.','Disconnect it to link this site instead.'=>'Bunun yerine bu siteye ba\u011flanmak i\u00e7in ba\u011flant\u0131s\u0131n\u0131 kesin.','Manage'=>'Y\u00f6netmek','Start for free'=>'\u00dccretsiz ba\u015flay\u0131n','This month'=>'Bu ay','Your plan'=>'Sizin plan\u0131n\u0131z','Upgrade'=>'Y\u00fckseltme','Emails'=>'E-postalar','Sent'=>'G\u00f6nderildi','Remaining'=>'Kalan','Campaigns'=>'Kampanyalar','Average CTOR'=>'Ortalama CTOR','Subscribers'=>'Aboneler','New subscribers'=>'Yeni aboneler','Unsubscribes'=>'Abonelikten \u00c7\u0131kanlar','Total subscribers'=>'Toplam abone say\u0131s\u0131','Templates'=>'\u015eablonlar','Settings'=>'Ayarlar','Forms'=>'Formlar','Add form'=>'Form ekle','Start collecting form submissions'=>'Form g\u00f6nderilerini toplamaya ba\u015flay\u0131n','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Web sitenizdeki formlar\u0131 nas\u0131l y\u00f6netmek istedi\u011finizi se\u00e7in. Hostinger Reach ile yeni bir form olu\u015fturun veya \u00fc\u00e7\u00fcnc\u00fc taraf bir eklenti ba\u011flay\u0131n.','Add more forms'=>'Daha fazla form ekleyin','Connect more forms to expand your contact list and capture leads from different pages.'=>'Ki\u015fi listenizi geni\u015fletmek ve farkl\u0131 sayfalardan potansiyel m\u00fc\u015fterileri yakalamak i\u00e7in daha fazla form ba\u011flay\u0131n.','New page'=>'Yeni sayfa','FAQ'=>'SSS','What is Hostinger Reach email marketing service?'=>'Hostinger Reach e-posta pazarlama hizmeti nedir?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach, k\u00fc\u00e7\u00fck i\u015fletmeler ve i\u00e7erik olu\u015fturucular i\u00e7in yapay zeka destekli bir e-posta pazarlama arac\u0131d\u0131r. Ki\u015fi listeleri olu\u015fturmaktan kampanya g\u00f6ndermeye ve sonu\u00e7lar\u0131 izlemeye kadar t\u00fcm e-posta pazarlama yolculu\u011funuzu destekler.','How is Hostinger Reach different from other email marketing apps?'=>'Hostinger Reach\\'in di\u011fer e-posta pazarlama uygulamalar\u0131ndan fark\u0131 nedir?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach basitlik, h\u0131z ve sonu\u00e7lar i\u00e7in tasarlanm\u0131\u015ft\u0131r - tasar\u0131m veya pazarlama deneyimi gerekmez. \u00c7o\u011fu e-posta arac\u0131n\u0131n aksine, Reach\\'in \u00f6z\u00fcnde yapay zeka destekli \u015fablon olu\u015fturucusu vard\u0131r. \u0130ster \u00fcr\u00fcn lansman\u0131, ister \u00f6zel teklif veya b\u00fclten g\u00fcncellemesi olsun, an\u0131nda profesyonel, mobil uyumlu bir e-posta haz\u0131rlar. Yaln\u0131zca i\u00e7eri\u011fi sizin i\u00e7in yazmakla kalmaz, ayn\u0131 zamanda mesaj\u0131n\u0131z i\u00e7in en iyi d\u00fczeni \u00f6nerir ve stil ayarlar\u0131n\u0131z\u0131 kaydeder, b\u00f6ylece asla s\u0131f\u0131rdan ba\u015flamazs\u0131n\u0131z.<br><br>Her \u015fablon \u00f6zelle\u015ftirilebilir, b\u00f6ylece e-postalar\u0131n\u0131z markan\u0131z\u0131n g\u00f6r\u00fcn\u00fcm\u00fcn\u00fc, hissini ve sesini yans\u0131t\u0131r. Ve \u015fablonlar kan\u0131tlanm\u0131\u015f en iyi uygulamalar kullan\u0131larak olu\u015fturuldu\u011fundan, okunabilirlik, eri\u015filebilirlik ve okuyucu etkile\u015fimi i\u00e7in optimize edilmi\u015ftir.','How much does it cost to use Hostinger Reach?'=>'Hostinger Reach\\'i kullanman\u0131n maliyeti nedir?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach, ba\u015flang\u0131\u00e7 i\u00e7in m\u00fckemmel olan bir y\u0131ll\u0131k \u00fccretsiz bir plan sunar. \u00dccretli planlar, ka\u00e7 benzersiz ki\u015fiye ula\u015fmay\u0131 hedefledi\u011finize ve ayl\u0131k ka\u00e7 e-posta g\u00f6nderdi\u011finize ba\u011fl\u0131d\u0131r. Kitleniz b\u00fcy\u00fcd\u00fck\u00e7e, ihtiya\u00e7lar\u0131n\u0131za uygun bir plana y\u00fckseltebilirsiniz. Reach ki\u015fi listenizi s\u0131n\u0131rlamaz, bu nedenle veri kayb\u0131 konusunda endi\u015felenmenize gerek kalmaz ve kitlenizi s\u00fcrekli olarak b\u00fcy\u00fctebilirsiniz.','opens in new tab'=>'yeni sekmede a\u00e7\u0131l\u0131r','Banner background image for'=>'Banner arka plan g\u00f6r\u00fcnt\u00fcs\u00fc i\u00e7in','Background image for'=>'Arka plan g\u00f6r\u00fcnt\u00fcs\u00fc i\u00e7in','usage statistics'=>'kullan\u0131m istatistikleri','remaining out of'=>'d\u0131\u015f\u0131nda kalan','total'=>'toplam','Progress: {current} of {total} used ({percentage}%)'=>'\u0130lerleme: kullan\u0131lan {toplam}\\'\u0131n {mevcut}\\'u ({y\u00fczde}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'T\u0131klama-a\u00e7ma oran\u0131, a\u00e7\u0131lan mesajlar\u0131n y\u00fczde ka\u00e7\u0131n\u0131n t\u0131klamayla sonu\u00e7land\u0131\u011f\u0131n\u0131 g\u00f6sterir. \u0130yi bir CTOR, sekt\u00f6r\u00fcn\u00fcze ba\u011fl\u0131 olarak %6-17\\'dir.','Add form clicked'=>'Form ekle t\u0131kland\u0131','Select page'=>'Sayfa se\u00e7iniz','Plugin'=>'Eklenti','Entries'=>'Giri\u015fler','Status'=>'Durum','Active'=>'Aktif','Inactive'=>'Aktif de\u011fil','Go to plugin'=>'Eklentiye git','Disconnect'=>'Ba\u011flant\u0131y\u0131 Kes','View form'=>'Formu g\u00f6r\u00fcnt\u00fcle','Edit form'=>'Formu d\u00fczenle','Loading plugins...'=>'Eklentiler y\u00fckleniyor...','Expand {pluginName} details'=>'EklentiAd\u0131} ayr\u0131nt\u0131lar\u0131n\u0131 geni\u015fletin','Collapse {pluginName} details'=>'Collapse {pluginName} ayr\u0131nt\u0131lar\u0131','Thanks for subscribing'=>'Abone oldu\u011funuz i\u00e7in te\u015fekk\u00fcrler','Something went wrong. Please try again'=>'Bir \u015feyler yanl\u0131\u015f gitti. L\u00fctfen tekrar deneyin','Form ID'=>'Form Kimli\u011fi','Unique identifier for this form'=>'Bu form i\u00e7in benzersiz tan\u0131mlay\u0131c\u0131','Contact List'=>'\u0130leti\u015fim Listesi','Create New List'=>'Yeni Liste Olu\u015ftur','New Contact List'=>'Yeni Ki\u015fi Listesi','Name for the new Contact List'=>'Yeni Ki\u015fi Listesi i\u00e7in \u0130sim','Show Name Field?'=>'Ad Alan\u0131n\u0131 G\u00f6ster?','Show Surname Field?'=>'Soyad\u0131 Alan\u0131n\u0131 G\u00f6ster?','Reach Subscription Form'=>'Abonelik Formuna Ula\u015f\u0131n','block title\u0004Reach Subscription Form'=>'Abonelik Formuna Ula\u015f\u0131n','block description\u0004Subscription form for Hostinger Reach'=>'Hostinger Reach i\u00e7in abonelik formu']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-hi_IN-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":618,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-05 08:46+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"hi_IN\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Email\":[\"\"],\"Name\":[\"\"],\"Surname\":[\"\"],\"Settings\":[\"\"],\"Thanks for subscribing\":[\"\"],\"Something went wrong. Please try again\":[\"\"],\"Form ID\":[\"\"],\"Unique identifier for this form\":[\"\"],\"Contact List\":[\"\"],\"Create New List\":[\"\"],\"New Contact List\":[\"\"],\"Name for the new Contact List\":[\"\"],\"Show Name Field?\":[\"\"],\"Show Surname Field?\":[\"\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ar-40280f641851c0bceee91722c888f369.json","ext":"json","size":2390,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 15:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ar\",\"plural-forms\":\"nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100 >= 3 && n%100<=10 ? 3 : n%100 >= 11 && n%100<=99 ? 4 : 5;\"},\"Connect Now\":[\"\"],\"Contact List\":[\"\\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u0647\\u0627\\u062a \\u0627\\u0644\\u0627\\u062a\\u0635\\u0627\\u0644\"],\"Create New List\":[\"\\u0625\\u0646\\u0634\\u0627\\u0621 \\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u062f\\u064a\\u062f\\u0629\"],\"Email\":[\"\\u0627\\u0644\\u0628\\u0631\\u064a\\u062f \\u0627\\u0644\\u0625\\u0644\\u0643\\u062a\\u0631\\u0648\\u0646\\u064a\"],\"Form ID\":[\"\\u0645\\u0639\\u0631\\u0651\\u0641 \\u0627\\u0644\\u0646\\u0645\\u0648\\u0630\\u062c\"],\"Name\":[\"\\u0627\\u0644\\u0627\\u0633\\u0645\"],\"Name for the new Contact List\":[\"\\u0627\\u0633\\u0645 \\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u0647\\u0627\\u062a \\u0627\\u0644\\u0627\\u062a\\u0635\\u0627\\u0644 \\u0627\\u0644\\u062c\\u062f\\u064a\\u062f\\u0629\"],\"New Contact List\":[\"\\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u0647\\u0627\\u062a \\u0627\\u0644\\u0627\\u062a\\u0635\\u0627\\u0644 \\u0627\\u0644\\u062c\\u062f\\u064a\\u062f\\u0629\"],\"Reach Subscription Form\":[\"\\u0627\\u0633\\u062a\\u0645\\u0627\\u0631\\u0629 \\u0627\\u0644\\u0627\\u0634\\u062a\\u0631\\u0627\\u0643 \\u0641\\u064a \\u0631\\u064a\\u062a\\u0634\"],\"Settings\":[\"\\u0627\\u0644\\u0625\\u0639\\u062f\\u0627\\u062f\\u0627\\u062a\"],\"Show Name Field?\":[\"\\u0625\\u0638\\u0647\\u0627\\u0631 \\u062d\\u0642\\u0644 \\u0627\\u0644\\u0627\\u0633\\u0645\\u061f\"],\"Show Surname Field?\":[\"\\u0625\\u0638\\u0647\\u0627\\u0631 \\u062d\\u0642\\u0644 \\u0627\\u0644\\u0644\\u0642\\u0628\\u061f\"],\"Something went wrong. Please try again\":[\"\\u062d\\u062f\\u062b \\u062e\\u0637\\u0623 \\u0645\\u0627. \\u064a\\u0631\\u062c\\u0649 \\u0627\\u0644\\u0645\\u062d\\u0627\\u0648\\u0644\\u0629 \\u0645\\u0631\\u0629 \\u0623\\u062e\\u0631\\u0649\"],\"Surname\":[\"\\u0627\\u0644\\u0644\\u0642\\u0628\"],\"Thanks for subscribing\":[\"\\u0634\\u0643\\u0631\\u0627\\u064b \\u0644\\u0627\\u0634\\u062a\\u0631\\u0627\\u0643\\u0643\"],\"Unique identifier for this form\":[\"\\u0627\\u0644\\u0645\\u0639\\u0631\\u0641 \\u0627\\u0644\\u0641\\u0631\\u064a\\u062f \\u0644\\u0647\\u0630\\u0627 \\u0627\\u0644\\u0646\\u0645\\u0648\\u0630\\u062c\"],\"You are not connected to Hostinger Reach\":[\"\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-hi_IN-40280f641851c0bceee91722c888f369.json","ext":"json","size":638,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-05 08:46+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"hi_IN\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Email\":[\"\"],\"Name\":[\"\"],\"Surname\":[\"\"],\"Settings\":[\"\"],\"Thanks for subscribing\":[\"\"],\"Something went wrong. Please try again\":[\"\"],\"Form ID\":[\"\"],\"Unique identifier for this form\":[\"\"],\"Contact List\":[\"\"],\"Create New List\":[\"\"],\"New Contact List\":[\"\"],\"Name for the new Contact List\":[\"\"],\"Show Name Field?\":[\"\"],\"Show Surname Field?\":[\"\"],\"Reach Subscription Form\":[\"\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-uk-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":1375,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"uk\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Connect Now\":[\"\\u041f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0456\\u0442\\u044c\\u0441\\u044f \\u0437\\u0430\\u0440\\u0430\\u0437\"],\"You are not connected to Hostinger Reach\":[\"\\u0412\\u0438 \\u043d\\u0435 \\u043f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0456 \\u0434\\u043e Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u0412\\u0438 \\u043d\\u0435 \\u043f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0456 \\u0434\\u043e Hostinger Reach. \\u0429\\u043e\\u0431 \\u043e\\u0442\\u0440\\u0438\\u043c\\u0430\\u0442\\u0438 \\u043f\\u043e\\u0432\\u043d\\u0438\\u0439 \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f \\u0434\\u043e \\u0446\\u044c\\u043e\\u0433\\u043e \\u0431\\u043b\\u043e\\u043a\\u0443, \\u0432\\u0430\\u043c \\u043f\\u043e\\u0442\\u0440\\u0456\\u0431\\u043d\\u043e \\u043f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u0438 \\u0441\\u0432\\u0456\\u0439 \\u043e\\u0431\\u043b\\u0456\\u043a\\u043e\\u0432\\u0438\\u0439 \\u0437\\u0430\\u043f\\u0438\\u0441 Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-fr_FR.l10n.php","ext":"php","size":8850,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'French (France)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:02+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'fr_FR','plural-forms'=>'nplurals=2; plural=n > 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Int\u00e9grez votre site WordPress \u00e0 Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Attention :','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach requiert une version minimale de PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Vous utilisez <b>%s<\/b> version PHP.','Email Marketing'=>'Marketing par courrier \u00e9lectronique','Thanks for subscribing.'=>'Merci de vous \u00eatre abonn\u00e9.','Something went wrong. Please try again.'=>'Un probl\u00e8me s\\'est produit. Veuillez r\u00e9essayer.','Email'=>'Courriel','Name'=>'Nom','Surname'=>'Nom de famille','Subscribe'=>'S\\'abonner','Contact Form 7'=>'Formulaire de contact 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Quelque chose n\\'a pas fonctionn\u00e9','Welcome to Reach'=>'Bienvenue \u00e0 Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Cr\u00e9ez des campagnes d\\'emailing \u00e0 l\\'aide de mod\u00e8les con\u00e7us par l\\'IA qui correspondent \u00e0 votre style. Synchronisez instantan\u00e9ment avec votre site WordPress et communiquez facilement avec votre public.','Reach is already connected to another site.'=>'Reach est d\u00e9j\u00e0 connect\u00e9 \u00e0 un autre site.','Disconnect it to link this site instead.'=>'D\u00e9connectez-le pour relier ce site \u00e0 la place.','Manage'=>'G\u00e9rer','Start for free'=>'Commencer gratuitement','This month'=>'Ce mois-ci','Your plan'=>'Votre plan','Upgrade'=>'Mise \u00e0 niveau','Emails'=>'Emails','Sent'=>'Envoy\u00e9','Remaining'=>'Restant','Campaigns'=>'Campagnes','Average CTOR'=>'Moyenne CTOR','Subscribers'=>'Abonn\u00e9s','New subscribers'=>'Nouveaux abonn\u00e9s','Unsubscribes'=>'D\u00e9sabonnements','Total subscribers'=>'Nombre total d\\'abonn\u00e9s','Templates'=>'Mod\u00e8les','Settings'=>'Param\u00e8tres','Forms'=>'Formulaires','Add form'=>'Ajouter un formulaire','Start collecting form submissions'=>'Commencer \u00e0 collecter les soumissions de formulaires','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Choisissez comment vous souhaitez g\u00e9rer les formulaires sur votre site web. Cr\u00e9ez un nouveau formulaire avec Hostinger Reach ou connectez un plugin tiers.','Add more forms'=>'Ajouter des formulaires','Connect more forms to expand your contact list and capture leads from different pages.'=>'Connectez d\\'autres formulaires pour \u00e9largir votre liste de contacts et capturer des prospects \u00e0 partir de diff\u00e9rentes pages.','New page'=>'Nouvelle page','FAQ'=>'FAQ','What is Hostinger Reach email marketing service?'=>'Qu\\'est-ce que le service de marketing par courriel Hostinger Reach ?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach est un outil d\\'email marketing aliment\u00e9 par l\\'IA pour les petites entreprises et les cr\u00e9ateurs. Il prend en charge l\\'ensemble de votre parcours d\\'email marketing, de la cr\u00e9ation de listes de contacts \u00e0 l\\'envoi de campagnes et au suivi des r\u00e9sultats.','How is Hostinger Reach different from other email marketing apps?'=>'En quoi Hostinger Reach est-il diff\u00e9rent des autres applications de marketing par courriel ?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach est con\u00e7u pour la simplicit\u00e9, la rapidit\u00e9 et les r\u00e9sultats - aucune exp\u00e9rience en design ou en marketing n\\'est n\u00e9cessaire. Contrairement \u00e0 la plupart des outils d\\'email, le c\u0153ur de Reach est son cr\u00e9ateur de mod\u00e8les aliment\u00e9 par l\\'IA. Qu\\'il s\\'agisse du lancement d\\'un produit, d\\'une offre sp\u00e9ciale ou de la mise \u00e0 jour d\\'une newsletter, il cr\u00e9e instantan\u00e9ment un email professionnel et adapt\u00e9 aux mobiles. Il ne se contente pas de r\u00e9diger le contenu pour vous, il sugg\u00e8re \u00e9galement la meilleure mise en page pour votre message et enregistre vos param\u00e8tres de style afin que vous ne repartiez jamais de z\u00e9ro.<br><br>Chaque mod\u00e8le est personnalisable, de sorte que vos e-mails refl\u00e8tent l\\'aspect, la convivialit\u00e9 et la voix de votre marque. Et comme les mod\u00e8les sont con\u00e7us \u00e0 l\\'aide des meilleures pratiques \u00e9prouv\u00e9es, ils sont optimis\u00e9s pour la lisibilit\u00e9, l\\'accessibilit\u00e9 et l\\'engagement des lecteurs.','How much does it cost to use Hostinger Reach?'=>'Combien co\u00fbte l\\'utilisation de Hostinger Reach ?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach propose un plan gratuit d\\'une dur\u00e9e d\\'un an, id\u00e9al pour d\u00e9buter. Les formules payantes sont bas\u00e9es sur le nombre de contacts uniques que vous souhaitez atteindre et sur le nombre d\\'e-mails que vous envoyez chaque mois. Au fur et \u00e0 mesure que votre audience grandit, vous pouvez passer \u00e0 un plan qui correspond \u00e0 vos besoins. Reach ne limite pas votre liste de contacts, vous n\\'avez donc pas \u00e0 vous soucier de la perte de donn\u00e9es et vous pouvez accro\u00eetre votre audience de fa\u00e7on constante.','opens in new tab'=>'s\\'ouvre dans un nouvel onglet','Banner background image for'=>'Image d\\'arri\u00e8re-plan de la banni\u00e8re pour','Background image for'=>'Image de fond pour','usage statistics'=>'statistiques d\\'utilisation','remaining out of'=>'restant en dehors de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progr\u00e8s : {courant} de {total} utilis\u00e9 ({pourcentage}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Le taux de clics par rapport au nombre d\\'ouvertures vous indique le pourcentage d\\'ouvertures qui ont abouti \u00e0 un clic. Un bon CTOR se situe entre 6 et 17 %, en fonction de votre secteur d\\'activit\u00e9.','Add form clicked'=>'Ajout d\\'un formulaire cliqu\u00e9','Select page'=>'S\u00e9lectionner une page','Plugin'=>'Plugin','Entries'=>'Entr\u00e9es','Status'=>'Statut','Active'=>'Actif','Inactive'=>'Inactif','Go to plugin'=>'Aller au plugin','Disconnect'=>'D\u00e9connexion','View form'=>'Voir le formulaire','Edit form'=>'Modifier le formulaire','Loading plugins...'=>'Chargement des plugins...','Expand {pluginName} details'=>'D\u00e9velopper les d\u00e9tails de {nom du plugin}','Collapse {pluginName} details'=>'R\u00e9duire les d\u00e9tails de {nom du plugin}','Thanks for subscribing'=>'Merci de vous inscrire','Something went wrong. Please try again'=>'Un probl\u00e8me s\\'est produit. Veuillez r\u00e9essayer','Form ID'=>'ID du formulaire','Unique identifier for this form'=>'Identifiant unique pour ce formulaire','Contact List'=>'Liste de contacts','Create New List'=>'Cr\u00e9er une nouvelle liste','New Contact List'=>'Nouvelle liste de contacts','Name for the new Contact List'=>'Nom de la nouvelle liste de contacts','Show Name Field?'=>'Afficher le champ Nom ?','Show Surname Field?'=>'Afficher le champ du nom de famille ?','Reach Subscription Form'=>'Formulaire d\\'abonnement \u00e0 Reach','block title\u0004Reach Subscription Form'=>'Formulaire d\\'abonnement \u00e0 Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formulaire d\\'inscription pour Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-fr_FR-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":955,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"fr_FR\",\"plural-forms\":\"nplurals=2; plural=n > 1;\"},\"Contact List\":[\"Liste de contacts\"],\"Create New List\":[\"Cr\\u00e9er une nouvelle liste\"],\"Email\":[\"Courriel\"],\"Form ID\":[\"ID du formulaire\"],\"Name\":[\"Nom\"],\"Name for the new Contact List\":[\"Nom de la nouvelle liste de contacts\"],\"New Contact List\":[\"Nouvelle liste de contacts\"],\"Settings\":[\"Param\\u00e8tres\"],\"Show Name Field?\":[\"Afficher le champ Nom ?\"],\"Show Surname Field?\":[\"Afficher le champ du nom de famille ?\"],\"Something went wrong. Please try again\":[\"Un probl\\u00e8me s'est produit. Veuillez r\\u00e9essayer\"],\"Surname\":[\"Nom de famille\"],\"Thanks for subscribing\":[\"Merci de vous inscrire\"],\"Unique identifier for this form\":[\"Identifiant unique pour ce formulaire\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-de_DE-40280f641851c0bceee91722c888f369.json","ext":"json","size":1357,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"de_DE\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Jetzt verbinden\"],\"Contact List\":[\"Kontaktliste\"],\"Create New List\":[\"Neue Liste erstellen\"],\"Email\":[\"E-Mail\"],\"Form ID\":[\"Formular ID\"],\"Name\":[\"Name\"],\"Name for the new Contact List\":[\"Name f\\u00fcr die neue Kontaktliste\"],\"New Contact List\":[\"Neue Kontaktliste\"],\"Reach Subscription Form\":[\"Reach-Abonnementformular\"],\"Settings\":[\"Einstellungen\"],\"Show Name Field?\":[\"Namensfeld anzeigen?\"],\"Show Surname Field?\":[\"Nachnamenfeld anzeigen?\"],\"Something went wrong. Please try again\":[\"Etwas ist schief gelaufen. Bitte versuche es erneut\"],\"Surname\":[\"Nachname\"],\"Thanks for subscribing\":[\"Danke f\\u00fcr dein Abonnement\"],\"Unique identifier for this form\":[\"Eindeutiger Bezeichner f\\u00fcr dieses Formular\"],\"You are not connected to Hostinger Reach\":[\"Du bist nicht mit Hostinger Reach verbunden\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Du bist nicht mit Hostinger Reach verbunden. Um vollen Zugriff auf diesen Block zu erhalten, musst du dein Hostinger Reach-Konto verbinden.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-it_IT-40280f641851c0bceee91722c888f369.json","ext":"json","size":1357,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 08:44+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"it_IT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Collega ora\"],\"Contact List\":[\"Elenco dei contatti\"],\"Create New List\":[\"Crea un nuovo elenco\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID del modulo\"],\"Name\":[\"Nome\"],\"Name for the new Contact List\":[\"Nome per il nuovo elenco contatti\"],\"New Contact List\":[\"Nuovo elenco di contatti\"],\"Reach Subscription Form\":[\"Modulo di iscrizione a Reach\"],\"Settings\":[\"Impostazioni\"],\"Show Name Field?\":[\"Mostrare il campo del nome?\"],\"Show Surname Field?\":[\"Mostrare il campo del cognome?\"],\"Something went wrong. Please try again\":[\"Qualcosa \\u00e8 andato storto. Riprova\"],\"Surname\":[\"Cognome\"],\"Thanks for subscribing\":[\"Grazie per esserti iscritto\"],\"Unique identifier for this form\":[\"Identificatore unico per questo modulo\"],\"You are not connected to Hostinger Reach\":[\"Non sei connesso a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Non sei connesso a Hostinger Reach. Per ottenere l'accesso completo a questo blocco, \\u00e8 necessario collegare il proprio account Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_AR.l10n.php","ext":"php","size":8594,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Spanish (Argentina)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:32+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'es_AR','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integre su sitio WordPress con Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Atenci\u00f3n:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach requiere una versi\u00f3n m\u00ednima de PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Est\u00e1 ejecutando <b>%s<\/b> versi\u00f3n de PHP.','Email Marketing'=>'Marketing por correo electr\u00f3nico','Thanks for subscribing.'=>'Gracias por suscribirse.','Something went wrong. Please try again.'=>'Algo ha ido mal. Por favor, int\u00e9ntelo de nuevo.','Email'=>'Correo electr\u00f3nico','Name'=>'Nombre','Surname'=>'Apellido','Subscribe'=>'Suscr\u00edbase a','Contact Form 7'=>'Formulario de contacto 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'Formularios WP Lite','Something went wrong'=>'Algo sali\u00f3 mal','Welcome to Reach'=>'Bienvenido a Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Cree campa\u00f1as de correo electr\u00f3nico con plantillas creadas con IA que se adapten a su estilo. Sincroniza instant\u00e1neamente con tu sitio WordPress y conecta con tu audiencia f\u00e1cilmente.','Reach is already connected to another site.'=>'Reach ya est\u00e1 conectado a otro sitio.','Disconnect it to link this site instead.'=>'Descon\u00e9ctelo para enlazar este sitio en su lugar.','Manage'=>'Gestione','Start for free'=>'Empezar gratis','This month'=>'Este mes','Your plan'=>'Su plan','Upgrade'=>'Actualizar','Emails'=>'Correos electr\u00f3nicos','Sent'=>'Enviado','Remaining'=>'Resto','Campaigns'=>'Campa\u00f1as','Average CTOR'=>'CTOR medio','Subscribers'=>'Abonados','New subscribers'=>'Nuevos abonados','Unsubscribes'=>'Darse de baja','Total subscribers'=>'Total de abonados','Templates'=>'Plantillas','Settings'=>'Ajustes','Forms'=>'Formularios','Add form'=>'A\u00f1adir formulario','Start collecting form submissions'=>'Empezar a recopilar formularios','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Elija c\u00f3mo desea gestionar los formularios de su sitio web. Crea un nuevo formulario con Hostinger Reach o conecta un plugin de terceros.','Add more forms'=>'A\u00f1adir m\u00e1s formularios','Connect more forms to expand your contact list and capture leads from different pages.'=>'Conecte m\u00e1s formularios para ampliar su lista de contactos y captar clientes potenciales de distintas p\u00e1ginas.','New page'=>'P\u00e1gina nueva','FAQ'=>'PREGUNTAS FRECUENTES','What is Hostinger Reach email marketing service?'=>'\u00bfQu\u00e9 es el servicio de marketing por correo electr\u00f3nico Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach es una herramienta de marketing por correo electr\u00f3nico basada en IA para peque\u00f1as empresas y creadores. Es compatible con todo el proceso de marketing por correo electr\u00f3nico, desde la creaci\u00f3n de listas de contactos hasta el env\u00edo de campa\u00f1as y el seguimiento de los resultados.','How is Hostinger Reach different from other email marketing apps?'=>'\u00bfEn qu\u00e9 se diferencia Hostinger Reach de otras aplicaciones de marketing por correo electr\u00f3nico?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach se ha creado para ofrecer simplicidad, velocidad y resultados, sin necesidad de tener experiencia en dise\u00f1o o marketing. A diferencia de la mayor\u00eda de las herramientas de correo electr\u00f3nico, el n\u00facleo de Reach es su creador de plantillas basado en inteligencia artificial. Ya se trate del lanzamiento de un producto, de una oferta especial o de la actualizaci\u00f3n de un bolet\u00edn, crea al instante un correo electr\u00f3nico profesional y apto para dispositivos m\u00f3viles. No s\u00f3lo redacta el contenido por ti, sino que tambi\u00e9n sugiere el mejor dise\u00f1o para tu mensaje y guarda tus ajustes de estilo para que nunca tengas que empezar de cero.<br><br>Cada plantilla es personalizable, para que tus correos electr\u00f3nicos reflejen el aspecto, la sensaci\u00f3n y la voz de tu marca. Y como las plantillas se han creado utilizando las mejores pr\u00e1cticas, est\u00e1n optimizadas para facilitar la lectura, la accesibilidad y la participaci\u00f3n del lector.','How much does it cost to use Hostinger Reach?'=>'\u00bfCu\u00e1nto cuesta utilizar Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach ofrece un plan gratuito de un a\u00f1o, perfecto para empezar. Los planes de pago se basan en el n\u00famero de contactos \u00fanicos a los que quieres llegar y el n\u00famero de correos electr\u00f3nicos que env\u00edas al mes. A medida que aumente tu audiencia, podr\u00e1s cambiar a un plan que se adapte a tus necesidades. Reach no limita tu lista de contactos, as\u00ed que no tienes que preocuparte por la p\u00e9rdida de datos y puedes hacer crecer tu audiencia de forma constante.','opens in new tab'=>'se abre en una nueva pesta\u00f1a','Banner background image for'=>'Imagen de fondo del banner para','Background image for'=>'Imagen de fondo para','usage statistics'=>'estad\u00edsticas de uso','remaining out of'=>'quedando fuera de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progreso: {actual} de {total} utilizado ({porcentaje}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'La tasa de clics por apertura le indica qu\u00e9 porcentaje de aperturas tambi\u00e9n dio lugar a un clic. Un buen CTOR es del 6-17%, dependiendo de tu sector.','Add form clicked'=>'A\u00f1adir formulario pulsado','Select page'=>'Seleccionar p\u00e1gina','Plugin'=>'Plugin','Entries'=>'Entradas','Status'=>'Estado','Active'=>'Activo','Inactive'=>'Inactivo','Go to plugin'=>'Ir al plugin','Disconnect'=>'Desconecte','View form'=>'Ver formulario','Edit form'=>'Editar formulario','Loading plugins...'=>'Cargando plugins...','Expand {pluginName} details'=>'Ampliar {pluginName} detalles','Collapse {pluginName} details'=>'Contraer {pluginName} detalles','Thanks for subscribing'=>'Gracias por suscribirse','Something went wrong. Please try again'=>'Algo ha ido mal. Vuelva a intentarlo','Form ID'=>'Formulario ID','Unique identifier for this form'=>'Identificador \u00fanico para este formulario','Contact List'=>'Lista de contactos','Create New List'=>'Crear nueva lista','New Contact List'=>'Nueva lista de contactos','Name for the new Contact List'=>'Nombre de la nueva lista de contactos','Show Name Field?'=>'\u00bfMostrar campo de nombre?','Show Surname Field?'=>'\u00bfMostrar campo de apellidos?','Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block title\u0004Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formulario de suscripci\u00f3n a Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-th-40280f641851c0bceee91722c888f369.json","ext":"json","size":3167,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"th\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e40\\u0e14\\u0e35\\u0e4b\\u0e22\\u0e27\\u0e19\\u0e35\\u0e49\"],\"Contact List\":[\"\\u0e23\\u0e32\\u0e22\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e1c\\u0e39\\u0e49\\u0e15\\u0e34\\u0e14\\u0e15\\u0e48\\u0e2d\"],\"Create New List\":[\"\\u0e2a\\u0e23\\u0e49\\u0e32\\u0e07\\u0e23\\u0e32\\u0e22\\u0e01\\u0e32\\u0e23\\u0e43\\u0e2b\\u0e21\\u0e48\"],\"Email\":[\"\\u0e2d\\u0e35\\u0e40\\u0e21\\u0e25\"],\"Form ID\":[\"\\u0e23\\u0e2b\\u0e31\\u0e2a\\u0e41\\u0e1a\\u0e1a\\u0e1f\\u0e2d\\u0e23\\u0e4c\\u0e21\"],\"Name\":[\"\\u0e0a\\u0e37\\u0e48\\u0e2d\"],\"Name for the new Contact List\":[\"\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e2a\\u0e33\\u0e2b\\u0e23\\u0e31\\u0e1a\\u0e23\\u0e32\\u0e22\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e1c\\u0e39\\u0e49\\u0e15\\u0e34\\u0e14\\u0e15\\u0e48\\u0e2d\\u0e43\\u0e2b\\u0e21\\u0e48\"],\"New Contact List\":[\"\\u0e23\\u0e32\\u0e22\\u0e01\\u0e32\\u0e23\\u0e15\\u0e34\\u0e14\\u0e15\\u0e48\\u0e2d\\u0e43\\u0e2b\\u0e21\\u0e48\"],\"Reach Subscription Form\":[\"\\u0e41\\u0e1a\\u0e1a\\u0e1f\\u0e2d\\u0e23\\u0e4c\\u0e21\\u0e2a\\u0e21\\u0e31\\u0e04\\u0e23\\u0e2a\\u0e21\\u0e32\\u0e0a\\u0e34\\u0e01\"],\"Settings\":[\"\\u0e01\\u0e32\\u0e23\\u0e15\\u0e31\\u0e49\\u0e07\\u0e04\\u0e48\\u0e32\"],\"Show Name Field?\":[\"\\u0e41\\u0e2a\\u0e14\\u0e07\\u0e1f\\u0e34\\u0e25\\u0e14\\u0e4c\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e2b\\u0e23\\u0e37\\u0e2d\\u0e44\\u0e21\\u0e48?\"],\"Show Surname Field?\":[\"\\u0e41\\u0e2a\\u0e14\\u0e07\\u0e0a\\u0e48\\u0e2d\\u0e07\\u0e19\\u0e32\\u0e21\\u0e2a\\u0e01\\u0e38\\u0e25\\u0e2b\\u0e23\\u0e37\\u0e2d\\u0e44\\u0e21\\u0e48?\"],\"Something went wrong. Please try again\":[\"\\u0e40\\u0e01\\u0e34\\u0e14\\u0e02\\u0e49\\u0e2d\\u0e1c\\u0e34\\u0e14\\u0e1e\\u0e25\\u0e32\\u0e14 \\u0e01\\u0e23\\u0e38\\u0e13\\u0e32\\u0e25\\u0e2d\\u0e07\\u0e2d\\u0e35\\u0e01\\u0e04\\u0e23\\u0e31\\u0e49\\u0e07\"],\"Surname\":[\"\\u0e19\\u0e32\\u0e21\\u0e2a\\u0e01\\u0e38\\u0e25\"],\"Thanks for subscribing\":[\"\\u0e02\\u0e2d\\u0e1a\\u0e04\\u0e38\\u0e13\\u0e17\\u0e35\\u0e48\\u0e2a\\u0e21\\u0e31\\u0e04\\u0e23\"],\"Unique identifier for this form\":[\"\\u0e23\\u0e2b\\u0e31\\u0e2a\\u0e1b\\u0e23\\u0e30\\u0e08\\u0e33\\u0e15\\u0e31\\u0e27\\u0e17\\u0e35\\u0e48\\u0e44\\u0e21\\u0e48\\u0e0b\\u0e49\\u0e33\\u0e01\\u0e31\\u0e19\\u0e2a\\u0e33\\u0e2b\\u0e23\\u0e31\\u0e1a\\u0e41\\u0e1a\\u0e1a\\u0e1f\\u0e2d\\u0e23\\u0e4c\\u0e21\\u0e19\\u0e35\\u0e49\"],\"You are not connected to Hostinger Reach\":[\"\\u0e04\\u0e38\\u0e13\\u0e44\\u0e21\\u0e48\\u0e44\\u0e14\\u0e49\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e01\\u0e31\\u0e1a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u0e04\\u0e38\\u0e13\\u0e44\\u0e21\\u0e48\\u0e44\\u0e14\\u0e49\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e01\\u0e31\\u0e1a Hostinger Reach. \\u0e40\\u0e1e\\u0e37\\u0e48\\u0e2d\\u0e40\\u0e02\\u0e49\\u0e32\\u0e16\\u0e36\\u0e07\\u0e1a\\u0e25\\u0e47\\u0e2d\\u0e01\\u0e19\\u0e35\\u0e49\\u0e2d\\u0e22\\u0e48\\u0e32\\u0e07\\u0e40\\u0e15\\u0e47\\u0e21\\u0e17\\u0e35\\u0e48 \\u0e04\\u0e38\\u0e13\\u0e15\\u0e49\\u0e2d\\u0e07\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e1a\\u0e31\\u0e0d\\u0e0a\\u0e35 Hostinger Reach \\u0e02\\u0e2d\\u0e07\\u0e04\\u0e38\\u0e13.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ja-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":355,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ja\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Reach Subscription Form\":[\"\\u30ea\\u30fc\\u30c1\\u8cfc\\u8aad\\u30d5\\u30a9\\u30fc\\u30e0\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_ES-40280f641851c0bceee91722c888f369.json","ext":"json","size":1365,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:43+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_ES\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ya\"],\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID del formulario\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellido?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelve a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirte\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1s conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debes conectar tu cuenta de Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-id_ID-40280f641851c0bceee91722c888f369.json","ext":"json","size":1333,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"id_ID\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"Hubungkan Sekarang\"],\"Contact List\":[\"Daftar Kontak\"],\"Create New List\":[\"Buat Daftar Baru\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID Formulir\"],\"Name\":[\"Nama\"],\"Name for the new Contact List\":[\"Nama untuk Daftar Kontak baru\"],\"New Contact List\":[\"Daftar Kontak Baru\"],\"Reach Subscription Form\":[\"Formulir Berlangganan Jangkauan\"],\"Settings\":[\"Pengaturan\"],\"Show Name Field?\":[\"Tampilkan Bidang Nama?\"],\"Show Surname Field?\":[\"Tampilkan Bidang Nama Keluarga?\"],\"Something went wrong. Please try again\":[\"Ada yang tidak beres. Silakan coba lagi\"],\"Surname\":[\"Nama keluarga\"],\"Thanks for subscribing\":[\"Terima kasih telah berlangganan\"],\"Unique identifier for this form\":[\"Pengenal unik untuk formulir ini\"],\"You are not connected to Hostinger Reach\":[\"Anda tidak terhubung ke Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Anda tidak terhubung ke Hostinger Reach. Untuk mendapatkan akses penuh ke blokir ini, Anda perlu menghubungkan akun Hostinger Reach Anda.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ja.l10n.php","ext":"php","size":9169,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Japanese','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:27+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'ja','plural-forms'=>'nplurals=1; plural=0;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'\u30db\u30b9\u30c6\u30a3\u30f3\u30ac\u30fc\u30fb\u30ea\u30fc\u30c1','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'WordPress\u30b5\u30a4\u30c8\u3092Hostinger Reach\u306b\u7d71\u5408\u3057\u307e\u3057\u3087\u3046\u3002','Hostinger'=>'\u30db\u30b9\u30c6\u30a3\u30f3\u30ac\u30fc','Attention:'=>'\u6ce8\u76ee\u3057\u3066\u307b\u3057\u3044\uff1a','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach\u306f\u6700\u4f4e<b>%s<\/b>\u306ePHP\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002','You are running <b>%s<\/b> PHP version.'=>'PHP \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f <b>%s<\/b> \u3067\u3059\u3002','Email Marketing'=>'\u30e1\u30fc\u30eb\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0','Thanks for subscribing.'=>'\u3054\u8cfc\u8aad\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002','Something went wrong. Please try again.'=>'\u4f55\u304b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002','Email'=>'\u96fb\u5b50\u30e1\u30fc\u30eb','Name'=>'\u540d\u79f0','Surname'=>'\u82d7\u5b57','Subscribe'=>'\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6','Contact Form 7'=>'\u30b3\u30f3\u30bf\u30af\u30c8\u30d5\u30a9\u30fc\u30e07','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP\u30d5\u30a9\u30fc\u30e0\u30ba\u30e9\u30a4\u30c8','Something went wrong'=>'\u4f55\u304b\u304c\u9593\u9055\u3063\u3066\u3044\u305f','Welcome to Reach'=>'\u30ea\u30fc\u30c1\u3078\u3088\u3046\u3053\u305d','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'AI\u304c\u4f5c\u6210\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u3001\u3042\u306a\u305f\u306e\u30b9\u30bf\u30a4\u30eb\u306b\u5408\u3063\u305f\u30e1\u30fc\u30eb\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002WordPress\u30b5\u30a4\u30c8\u3068\u5373\u5ea7\u306b\u540c\u671f\u3057\u3001\u8996\u8074\u8005\u3068\u7c21\u5358\u306b\u3064\u306a\u304c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002','Reach is already connected to another site.'=>'\u30ea\u30fc\u30c1\u306f\u3059\u3067\u306b\u5225\u306e\u30b5\u30a4\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u3002','Disconnect it to link this site instead.'=>'\u3053\u306e\u30b5\u30a4\u30c8\u3092\u30ea\u30f3\u30af\u3059\u308b\u305f\u3081\u306b\u3001\u63a5\u7d9a\u3092\u89e3\u9664\u3059\u308b\u3002','Manage'=>'\u7ba1\u7406','Start for free'=>'\u7121\u6599\u3067\u59cb\u3081\u308b','This month'=>'\u4eca\u6708','Your plan'=>'\u3042\u306a\u305f\u306e\u30d7\u30e9\u30f3','Upgrade'=>'\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9','Emails'=>'\u96fb\u5b50\u30e1\u30fc\u30eb','Sent'=>'\u9001\u4fe1\u6e08\u307f','Remaining'=>'\u6b8b\u308a','Campaigns'=>'\u30ad\u30e3\u30f3\u30da\u30fc\u30f3','Average CTOR'=>'\u5e73\u5747CTOR','Subscribers'=>'\u8cfc\u8aad\u8005','New subscribers'=>'\u65b0\u898f\u52a0\u5165\u8005','Unsubscribes'=>'\u914d\u4fe1\u505c\u6b62','Total subscribers'=>'\u7dcf\u52a0\u5165\u8005\u6570','Templates'=>'\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8','Settings'=>'\u8a2d\u5b9a','Forms'=>'\u30d5\u30a9\u30fc\u30e0','Add form'=>'\u30d5\u30a9\u30fc\u30e0\u3092\u8ffd\u52a0\u3059\u308b','Start collecting form submissions'=>'\u30d5\u30a9\u30fc\u30e0\u9001\u4fe1\u306e\u53ce\u96c6\u958b\u59cb','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u4e0a\u3067\u30d5\u30a9\u30fc\u30e0\u3092\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3092\u9078\u629e\u3057\u307e\u3059\u3002Hostinger Reach\u3067\u65b0\u3057\u3044\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u6210\u3059\u308b\u304b\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002','Add more forms'=>'\u30d5\u30a9\u30fc\u30e0\u306e\u8ffd\u52a0','Connect more forms to expand your contact list and capture leads from different pages.'=>'\u3088\u308a\u591a\u304f\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u63a5\u7d9a\u3057\u3066\u30b3\u30f3\u30bf\u30af\u30c8\u30ea\u30b9\u30c8\u3092\u62e1\u5927\u3057\u3001\u3055\u307e\u3056\u307e\u306a\u30da\u30fc\u30b8\u304b\u3089\u30ea\u30fc\u30c9\u3092\u7372\u5f97\u3057\u307e\u3057\u3087\u3046\u3002','New page'=>'\u65b0\u3057\u3044\u30da\u30fc\u30b8','FAQ'=>'\u3088\u304f\u3042\u308b\u3054\u8cea\u554f','What is Hostinger Reach email marketing service?'=>'Hostinger Reach\u30e1\u30fc\u30eb\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3068\u306f\u4f55\u3067\u3059\u304b\uff1f','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach\u306f\u3001AI\u3092\u6d3b\u7528\u3057\u305f\u4e2d\u5c0f\u4f01\u696d\u3084\u30af\u30ea\u30a8\u30a4\u30bf\u30fc\u306e\u305f\u3081\u306e\u30e1\u30fc\u30eb\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u30c4\u30fc\u30eb\u3067\u3059\u3002\u30b3\u30f3\u30bf\u30af\u30c8\u30ea\u30b9\u30c8\u306e\u4f5c\u6210\u304b\u3089\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u306e\u9001\u4fe1\u3001\u7d50\u679c\u306e\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u307e\u3067\u3001\u30e1\u30fc\u30eb\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u5168\u4f53\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002','How is Hostinger Reach different from other email marketing apps?'=>'Hostinger Reach\u306f\u4ed6\u306eE\u30e1\u30fc\u30eb\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u30a2\u30d7\u30ea\u3068\u3069\u3046\u9055\u3046\u306e\u3067\u3059\u304b\uff1f','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u3055\u3001\u30b9\u30d4\u30fc\u30c9\u3001\u7d50\u679c\u306e\u305f\u3081\u306b\u69cb\u7bc9\u3055\u308c\u3066\u304a\u308a\u3001\u30c7\u30b6\u30a4\u30f3\u3084\u30de\u30fc\u30b1\u30c6\u30a3\u30f3\u30b0\u306e\u7d4c\u9a13\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u4e00\u822c\u7684\u306a\u30e1\u30fc\u30eb\u30c4\u30fc\u30eb\u3068\u306f\u7570\u306a\u308a\u3001Reach\u306e\u4e2d\u6838\u3092\u6210\u3059\u306e\u306fAI\u3092\u642d\u8f09\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f5c\u6210\u6a5f\u80fd\u3067\u3059\u3002\u88fd\u54c1\u767a\u8868\u3001\u7279\u5225\u30aa\u30d5\u30a1\u30fc\u3001\u30cb\u30e5\u30fc\u30b9\u30ec\u30bf\u30fc\u306e\u66f4\u65b0\u306a\u3069\u3001\u3069\u306e\u3088\u3046\u306a\u5185\u5bb9\u3067\u3042\u3063\u3066\u3082\u3001\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u3067\u30e2\u30d0\u30a4\u30eb\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30e1\u30fc\u30eb\u3092\u77ac\u6642\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002<br><br>\u3059\u3079\u3066\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u306a\u306e\u3067\u3001E\u30e1\u30fc\u30eb\u306b\u30d6\u30e9\u30f3\u30c9\u306e\u30eb\u30c3\u30af\u3001\u30d5\u30a3\u30fc\u30eb\u3001\u30dc\u30a4\u30b9\u3092\u53cd\u6620\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u5b9f\u7e3e\u306e\u3042\u308b\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u4f7f\u7528\u3057\u3066\u69cb\u7bc9\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u8aad\u307f\u3084\u3059\u3055\u3001\u30a2\u30af\u30bb\u30b7\u30d3\u30ea\u30c6\u30a3\u3001\u8aad\u8005\u306e\u30a8\u30f3\u30b2\u30fc\u30b8\u30e1\u30f3\u30c8\u304c\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002','How much does it cost to use Hostinger Reach?'=>'Hostinger Reach\u306e\u5229\u7528\u6599\u91d1\u306f\u3044\u304f\u3089\u3067\u3059\u304b\uff1f','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach\u306f1\u5e74\u9593\u306e\u7121\u6599\u30d7\u30e9\u30f3\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u6709\u6599\u30d7\u30e9\u30f3\u306f\u3001\u30e6\u30cb\u30fc\u30af\u306a\u30b3\u30f3\u30bf\u30af\u30c8\u306e\u6570\u3068\u6bce\u6708\u9001\u4fe1\u3059\u308b\u30e1\u30fc\u30eb\u306e\u6570\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u5229\u7528\u8005\u304c\u5897\u3048\u308c\u3070\u3001\u30cb\u30fc\u30ba\u306b\u5408\u3063\u305f\u30d7\u30e9\u30f3\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002Reach\u306f\u30b3\u30f3\u30bf\u30af\u30c8\u30ea\u30b9\u30c8\u3092\u5236\u9650\u3057\u306a\u3044\u306e\u3067\u3001\u30c7\u30fc\u30bf\u306e\u7d1b\u5931\u3092\u5fc3\u914d\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u4e00\u8cab\u3057\u3066\u30aa\u30fc\u30c7\u30a3\u30a8\u30f3\u30b9\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002','opens in new tab'=>'\u65b0\u3057\u3044\u30bf\u30d6\u3067\u958b\u304f','Banner background image for'=>'\u30d0\u30ca\u30fc\u80cc\u666f\u753b\u50cf','Background image for'=>'\u306e\u80cc\u666f\u753b\u50cf','usage statistics'=>'\u5229\u7528\u7d71\u8a08','remaining out of'=>'\u6b8b\u308a','total'=>'\u5408\u8a08','Progress: {current} of {total} used ({percentage}%)'=>'\u9032\u6357\u72b6\u6cc1\u4f7f\u7528\u3057\u305f{\u5408\u8a08}\u306e{\u73fe\u5728} ({\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\u30af\u30ea\u30c3\u30af\u7387\uff08Click-to-open rate\uff09\u306f\u3001\u958b\u5c01\u306e\u3046\u3061\u4f55\u30d1\u30fc\u30bb\u30f3\u30c8\u304c\u30af\u30ea\u30c3\u30af\u306b\u3064\u306a\u304c\u3063\u305f\u304b\u3092\u793a\u3059\u3002\u696d\u7a2e\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001CTOR\u306f6\uff5e17\uff05\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002','Add form clicked'=>'\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30d5\u30a9\u30fc\u30e0\u3092\u8ffd\u52a0','Select page'=>'\u30da\u30fc\u30b8\u3092\u9078\u629e','Plugin'=>'\u30d7\u30e9\u30b0\u30a4\u30f3','Entries'=>'\u30a8\u30f3\u30c8\u30ea\u30fc','Status'=>'\u30b9\u30c6\u30fc\u30bf\u30b9','Active'=>'\u30a2\u30af\u30c6\u30a3\u30d6','Inactive'=>'\u6d3b\u52d5\u4f11\u6b62\u4e2d','Go to plugin'=>'\u30d7\u30e9\u30b0\u30a4\u30f3\u3078','Disconnect'=>'\u5207\u65ad','View form'=>'\u30d5\u30a9\u30fc\u30e0\u3092\u898b\u308b','Edit form'=>'\u7de8\u96c6\u30d5\u30a9\u30fc\u30e0','Loading plugins...'=>'\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059...','Expand {pluginName} details'=>'\u30d7\u30e9\u30b0\u30a4\u30f3\u540d}\u306e\u8a73\u7d30\u3092\u5c55\u958b\u3059\u308b','Collapse {pluginName} details'=>'\u30d7\u30e9\u30b0\u30a4\u30f3\u540d}\u306e\u8a73\u7d30\u3092\u6298\u308a\u305f\u305f\u3080','Thanks for subscribing'=>'\u3054\u8cfc\u8aad\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002','Something went wrong. Please try again'=>'\u4f55\u304b\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u3082\u3046\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002','Form ID'=>'\u30d5\u30a9\u30fc\u30e0ID','Unique identifier for this form'=>'\u3053\u306e\u30d5\u30a9\u30fc\u30e0\u306e\u30e6\u30cb\u30fc\u30af\u306a\u8b58\u5225\u5b50','Contact List'=>'\u9023\u7d61\u5148\u30ea\u30b9\u30c8','Create New List'=>'\u65b0\u898f\u30ea\u30b9\u30c8\u4f5c\u6210','New Contact List'=>'\u65b0\u3057\u3044\u9023\u7d61\u5148\u30ea\u30b9\u30c8','Name for the new Contact List'=>'\u65b0\u3057\u3044\u30b3\u30f3\u30bf\u30af\u30c8\u30ea\u30b9\u30c8\u306e\u540d\u524d','Show Name Field?'=>'\u540d\u524d\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8868\u793a\u3057\u307e\u3059\u304b\uff1f','Show Surname Field?'=>'\u82d7\u5b57\u6b04\u3092\u8868\u793a\u3057\u307e\u3059\u304b\uff1f','Reach Subscription Form'=>'\u30ea\u30fc\u30c1\u8cfc\u8aad\u30d5\u30a9\u30fc\u30e0','block title\u0004Reach Subscription Form'=>'\u30ea\u30fc\u30c1\u8cfc\u8aad\u30d5\u30a9\u30fc\u30e0','block description\u0004Subscription form for Hostinger Reach'=>'Hostinger Reach\u306e\u8cfc\u8aad\u30d5\u30a9\u30fc\u30e0']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-he_IL-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":371,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 16:03+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"he_IL\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"\\u05d8\\u05d5\\u05e4\\u05e1 \\u05de\\u05e0\\u05d5\\u05d9 \\u05dc-Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-uk-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":2301,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"uk\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Contact List\":[\"\\u0421\\u043f\\u0438\\u0441\\u043e\\u043a \\u043a\\u043e\\u043d\\u0442\\u0430\\u043a\\u0442\\u0456\\u0432\"],\"Create New List\":[\"\\u0421\\u0442\\u0432\\u043e\\u0440\\u0438\\u0442\\u0438 \\u043d\\u043e\\u0432\\u0438\\u0439 \\u0441\\u043f\\u0438\\u0441\\u043e\\u043a\"],\"Email\":[\"\\u0415\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u0430 \\u043f\\u043e\\u0448\\u0442\\u0430\"],\"Form ID\":[\"\\u0406\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0456\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0444\\u043e\\u0440\\u043c\\u0438\"],\"Name\":[\"\\u0406\\u043c'\\u044f\"],\"Name for the new Contact List\":[\"\\u0406\\u043c'\\u044f \\u0434\\u043b\\u044f \\u043d\\u043e\\u0432\\u043e\\u0433\\u043e \\u0441\\u043f\\u0438\\u0441\\u043a\\u0443 \\u043a\\u043e\\u043d\\u0442\\u0430\\u043a\\u0442\\u0456\\u0432\"],\"New Contact List\":[\"\\u041d\\u043e\\u0432\\u0438\\u0439 \\u0441\\u043f\\u0438\\u0441\\u043e\\u043a \\u043a\\u043e\\u043d\\u0442\\u0430\\u043a\\u0442\\u0456\\u0432\"],\"Settings\":[\"\\u041d\\u0430\\u043b\\u0430\\u0448\\u0442\\u0443\\u0432\\u0430\\u043d\\u043d\\u044f\"],\"Show Name Field?\":[\"\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u0438 \\u043f\\u043e\\u043b\\u0435 \\\"\\u0406\\u043c'\\u044f\\\"?\"],\"Show Surname Field?\":[\"\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u0438 \\u043f\\u043e\\u043b\\u0435 \\\"\\u041f\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\\\"?\"],\"Something went wrong. Please try again\":[\"\\u0429\\u043e\\u0441\\u044c \\u043f\\u0456\\u0448\\u043b\\u043e \\u043d\\u0435 \\u0442\\u0430\\u043a. \\u0411\\u0443\\u0434\\u044c \\u043b\\u0430\\u0441\\u043a\\u0430, \\u0441\\u043f\\u0440\\u043e\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0449\\u0435 \\u0440\\u0430\\u0437\"],\"Surname\":[\"\\u041f\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\"],\"Thanks for subscribing\":[\"\\u0414\\u044f\\u043a\\u0443\\u0454\\u043c\\u043e \\u0437\\u0430 \\u043f\\u0456\\u0434\\u043f\\u0438\\u0441\\u043a\\u0443\"],\"Unique identifier for this form\":[\"\\u0423\\u043d\\u0456\\u043a\\u0430\\u043b\\u044c\\u043d\\u0438\\u0439 \\u0456\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0456\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f \\u0446\\u0456\\u0454\\u0457 \\u0444\\u043e\\u0440\\u043c\\u0438\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-de_DE.l10n.php","ext":"php","size":8440,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'German','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:02+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'de_DE','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reichweite','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integriere deine WordPress-Seite mit Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Achtung!','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach ben\u00f6tigt mindestens eine PHP-Version von <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Du benutzt <b>%s<\/b> PHP Version.','Email Marketing'=>'E-Mail-Marketing','Thanks for subscribing.'=>'Danke, dass du abonniert hast.','Something went wrong. Please try again.'=>'Etwas ist schief gelaufen. Bitte versuche es noch einmal.','Email'=>'E-Mail','Name'=>'Name','Surname'=>'Nachname','Subscribe'=>'Abonnieren','Contact Form 7'=>'Kontakt-Formular 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Etwas ist schief gelaufen','Welcome to Reach'=>'Willkommen bei Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Erstelle E-Mail-Kampagnen mit KI-gefertigten Vorlagen, die zu deinem Stil passen. Synchronisiere sie sofort mit deiner WordPress-Website und verbinde dich ganz einfach mit deinem Publikum.','Reach is already connected to another site.'=>'Reach ist bereits mit einem anderen Standort verbunden.','Disconnect it to link this site instead.'=>'Trenne sie, um stattdessen diese Seite zu verlinken.','Manage'=>'Verwalte','Start for free'=>'Kostenlos starten','This month'=>'Diesen Monat','Your plan'=>'Dein Plan','Upgrade'=>'Upgrade','Emails'=>'Emails','Sent'=>'Gesendet','Remaining'=>'Verbleibende','Campaigns'=>'Kampagnen','Average CTOR'=>'Durchschnittliche CTOR','Subscribers'=>'Abonnenten','New subscribers'=>'Neue Abonnenten','Unsubscribes'=>'Abbestellungen','Total subscribers'=>'Abonnenten insgesamt','Templates'=>'Schablonen','Settings'=>'Einstellungen','Forms'=>'Formulare','Add form'=>'Formular hinzuf\u00fcgen','Start collecting form submissions'=>'Beginne mit dem Sammeln von Formulareingaben','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'W\u00e4hle, wie du die Formulare auf deiner Website verwalten m\u00f6chtest. Erstelle ein neues Formular mit Hostinger Reach oder binde ein Plugin eines Drittanbieters ein.','Add more forms'=>'Weitere Formulare hinzuf\u00fcgen','Connect more forms to expand your contact list and capture leads from different pages.'=>'Verbinde weitere Formulare, um deine Kontaktliste zu erweitern und Leads von verschiedenen Seiten zu erfassen.','New page'=>'Neue Seite','FAQ'=>'FAQ','What is Hostinger Reach email marketing service?'=>'Was ist der Hostinger Reach E-Mail Marketing Service?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach ist ein KI-gest\u00fctztes E-Mail-Marketing-Tool f\u00fcr kleine Unternehmen und Kreative. Es unterst\u00fctzt dein gesamtes E-Mail-Marketing - vom Aufbau von Kontaktlisten \u00fcber den Versand von Kampagnen bis hin zur Verfolgung der Ergebnisse.','How is Hostinger Reach different from other email marketing apps?'=>'Wie unterscheidet sich Hostinger Reach von anderen E-Mail-Marketing-Apps?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach ist einfach, schnell und ergebnisorientiert - Design- oder Marketingerfahrung ist nicht erforderlich. Im Gegensatz zu den meisten E-Mail-Tools ist das Herzst\u00fcck von Reach sein KI-gest\u00fctzter Vorlagenersteller. Ganz gleich, ob es sich um eine Produkteinf\u00fchrung, ein Sonderangebot oder ein Newsletter-Update handelt, es erstellt sofort eine professionelle, mobilfreundliche E-Mail. Er schreibt nicht nur den Inhalt f\u00fcr dich, sondern schl\u00e4gt dir auch das beste Layout f\u00fcr deine Nachricht vor und speichert deine Stileinstellungen, damit du nie wieder bei Null anfangen musst.<br><br>Jede Vorlage ist anpassbar, damit deine E-Mails das Aussehen, das Gef\u00fchl und die Stimme deiner Marke widerspiegeln. Und weil die Vorlagen nach bew\u00e4hrten Best Practices erstellt werden, sind sie f\u00fcr Lesbarkeit, Barrierefreiheit und Leserbindung optimiert.','How much does it cost to use Hostinger Reach?'=>'Wie viel kostet es, Hostinger Reach zu nutzen?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach bietet einen kostenlosen Plan f\u00fcr ein Jahr - perfekt f\u00fcr den Einstieg. Die kostenpflichtigen Tarife richten sich danach, wie viele Kontakte du erreichen willst und wie viele E-Mails du monatlich versendest. Wenn deine Zielgruppe w\u00e4chst, kannst du auf einen Plan upgraden, der deinen Bed\u00fcrfnissen entspricht. Reach schr\u00e4nkt deine Kontaktliste nicht ein, so dass du dir keine Sorgen um verlorene Daten machen musst und deine Zielgruppe kontinuierlich vergr\u00f6\u00dfern kannst.','opens in new tab'=>'\u00f6ffnet in neuem Tab','Banner background image for'=>'Banner-Hintergrundbild f\u00fcr','Background image for'=>'Hintergrundbild f\u00fcr','usage statistics'=>'nutzungsstatistiken','remaining out of'=>'ausbleibend','total'=>'gesamt','Progress: {current} of {total} used ({percentage}%)'=>'Fortschritt: {Aktuell} von {Gesamt} verwendet ({Prozentsatz}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Die Klick-zu-Offen-Rate sagt dir, wie viel Prozent der ge\u00f6ffneten E-Mails auch angeklickt wurden. Eine gute CTOR liegt bei 6-17%, je nach deiner Branche.','Add form clicked'=>'Formular hinzuf\u00fcgen angeklickt','Select page'=>'Seite ausw\u00e4hlen','Plugin'=>'Plugin','Entries'=>'Eintr\u00e4ge','Status'=>'Status','Active'=>'Aktiv','Inactive'=>'Inaktiv','Go to plugin'=>'Zum Plugin gehen','Disconnect'=>'Trennen Sie die Verbindung','View form'=>'Formular ansehen','Edit form'=>'Formular bearbeiten','Loading plugins...'=>'Plugins laden...','Expand {pluginName} details'=>'Erweitern Sie {pluginName} Details','Collapse {pluginName} details'=>'Details von {pluginName} ausblenden','Thanks for subscribing'=>'Danke f\u00fcr dein Abonnement','Something went wrong. Please try again'=>'Etwas ist schief gelaufen. Bitte versuche es erneut','Form ID'=>'Formular ID','Unique identifier for this form'=>'Eindeutiger Bezeichner f\u00fcr dieses Formular','Contact List'=>'Kontaktliste','Create New List'=>'Neue Liste erstellen','New Contact List'=>'Neue Kontaktliste','Name for the new Contact List'=>'Name f\u00fcr die neue Kontaktliste','Show Name Field?'=>'Namensfeld anzeigen?','Show Surname Field?'=>'Nachnamenfeld anzeigen?','Reach Subscription Form'=>'Reach-Abonnementformular','block title\u0004Reach Subscription Form'=>'Reach-Abonnementformular','block description\u0004Subscription form for Hostinger Reach'=>'Anmeldeformular f\u00fcr Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ro_RO-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1087,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ro_RO\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 :(((n%100>19)||(( n%100==0)&&(n!=0)))? 2 : 1));\"},\"Contact List\":[\"Lista de contacte\"],\"Create New List\":[\"Crea\\u021bi o list\\u0103 nou\\u0103\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"ID formular\"],\"Name\":[\"Nume \\u0219i prenume\"],\"Name for the new Contact List\":[\"Nume pentru noua list\\u0103 de contacte\"],\"New Contact List\":[\"Noua list\\u0103 de contacte\"],\"Settings\":[\"Set\\u0103ri\"],\"Show Name Field?\":[\"Afi\\u0219a\\u021bi c\\u00e2mpul Nume?\"],\"Show Surname Field?\":[\"Afi\\u0219a\\u021bi c\\u00e2mpul de nume de familie?\"],\"Something went wrong. Please try again\":[\"Ceva nu a mers bine. V\\u0103 rug\\u0103m s\\u0103 \\u00eencerca\\u021bi din nou\"],\"Surname\":[\"Numele de familie\"],\"Thanks for subscribing\":[\"V\\u0103 mul\\u021bumim pentru abonament\"],\"Unique identifier for this form\":[\"Identificator unic pentru acest formular\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-he_IL-40280f641851c0bceee91722c888f369.json","ext":"json","size":2384,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 16:03+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"he_IL\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"\\u05d4\\u05ea\\u05d7\\u05d1\\u05e8\\u05d5 \\u05e2\\u05db\\u05e9\\u05d9\\u05d5\"],\"Contact List\":[\"\\u05e8\\u05e9\\u05d9\\u05de\\u05ea \\u05d0\\u05e0\\u05e9\\u05d9 \\u05e7\\u05e9\\u05e8\"],\"Create New List\":[\"\\u05e6\\u05e8\\u05d5 \\u05e8\\u05e9\\u05d9\\u05de\\u05d4 \\u05d7\\u05d3\\u05e9\\u05d4\"],\"Email\":[\"\\u05d0\\u05d9\\u05de\\u05d9\\u05d9\\u05dc\"],\"Form ID\":[\"\\u05de\\u05e1\\u05e4\\u05e8 \\u05d8\\u05d5\\u05e4\\u05e1\"],\"Name\":[\"\\u05e9\\u05dd\"],\"Name for the new Contact List\":[\"\\u05e9\\u05dd \\u05dc\\u05e8\\u05e9\\u05d9\\u05de\\u05ea \\u05d0\\u05e0\\u05e9\\u05d9 \\u05d4\\u05e7\\u05e9\\u05e8 \\u05d4\\u05d7\\u05d3\\u05e9\\u05d4\"],\"New Contact List\":[\"\\u05e8\\u05e9\\u05d9\\u05de\\u05ea \\u05d0\\u05e0\\u05e9\\u05d9 \\u05e7\\u05e9\\u05e8 \\u05d7\\u05d3\\u05e9\\u05d9\\u05dd\"],\"Reach Subscription Form\":[\"\\u05d8\\u05d5\\u05e4\\u05e1 \\u05de\\u05e0\\u05d5\\u05d9 \\u05dc-Reach\"],\"Settings\":[\"\\u05d4\\u05d2\\u05d3\\u05e8\\u05d5\\u05ea\"],\"Show Name Field?\":[\"\\u05d4\\u05e6\\u05d2 \\u05e9\\u05d3\\u05d4 \\u05e9\\u05dd?\"],\"Show Surname Field?\":[\"\\u05d4\\u05e6\\u05d2 \\u05e9\\u05d3\\u05d4 \\u05e9\\u05dd \\u05de\\u05e9\\u05e4\\u05d7\\u05d4?\"],\"Something went wrong. Please try again\":[\"\\u05de\\u05e9\\u05d4\\u05d5 \\u05d4\\u05e9\\u05ea\\u05d1\\u05e9. \\u05d0\\u05e0\\u05d0 \\u05e0\\u05e1\\u05d4 \\u05e9\\u05d5\\u05d1\"],\"Surname\":[\"\\u05e9\\u05dd \\u05de\\u05e9\\u05e4\\u05d7\\u05d4\"],\"Thanks for subscribing\":[\"\\u05ea\\u05d5\\u05d3\\u05d4 \\u05e2\\u05dc \\u05d4\\u05d4\\u05e8\\u05e9\\u05de\\u05d4\"],\"Unique identifier for this form\":[\"\\u05de\\u05d6\\u05d4\\u05d4 \\u05d9\\u05d9\\u05d7\\u05d5\\u05d3\\u05d9 \\u05dc\\u05d8\\u05d5\\u05e4\\u05e1 \\u05d6\\u05d4\"],\"You are not connected to Hostinger Reach\":[\"\\u05d0\\u05d9\\u05e0\\u05da \\u05de\\u05d7\\u05d5\\u05d1\\u05e8 \\u05dc-Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u05d0\\u05d9\\u05e0\\u05da \\u05de\\u05d7\\u05d5\\u05d1\\u05e8 \\u05dc-Hostinger Reach. \\u05db\\u05d3\\u05d9 \\u05dc\\u05e7\\u05d1\\u05dc \\u05d2\\u05d9\\u05e9\\u05d4 \\u05de\\u05dc\\u05d0\\u05d4 \\u05dc\\u05d7\\u05e1\\u05d9\\u05de\\u05d4 \\u05d6\\u05d5, \\u05e2\\u05dc\\u05d9\\u05da \\u05dc\\u05d7\\u05d1\\u05e8 \\u05d0\\u05ea \\u05d7\\u05e9\\u05d1\\u05d5\\u05df Hostinger Reach \\u05e9\\u05dc\\u05da.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ko_KR-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":877,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-10 12:39+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ko_KR\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\uc9c0\\uae08 \\uc5f0\\uacb0\"],\"You are not connected to Hostinger Reach\":[\"Hostinger Reach\\uc5d0 \\uc5f0\\uacb0\\ub418\\uc5b4 \\uc788\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Hostinger Reach\\uc5d0 \\uc5f0\\uacb0\\ub418\\uc5b4 \\uc788\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4. \\uc774 \\ube14\\ub85d\\uc5d0 \\ub300\\ud55c \\uc804\\uccb4 \\uc561\\uc138\\uc2a4 \\uad8c\\ud55c\\uc744 \\uc5bb\\uc73c\\ub824\\uba74 Hostinger Reach \\uacc4\\uc815\\uc744 \\uc5f0\\uacb0\\ud574\\uc57c \\ud569\\ub2c8\\ub2e4.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pl_PL-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":403,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pl_PL\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Reach Subscription Form\":[\"Formularz subskrypcji zasi\\u0119gu\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_PT-40280f641851c0bceee91722c888f369.json","ext":"json","size":1366,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-08 08:31+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_PT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Ligar agora\"],\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Criar nova lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID do formul\\u00e1rio\"],\"Name\":[\"Nome\"],\"Name for the new Contact List\":[\"Nome da nova lista de contactos\"],\"New Contact List\":[\"Nova lista de contactos\"],\"Reach Subscription Form\":[\"Formul\\u00e1rio de subscri\\u00e7\\u00e3o do Reach\"],\"Settings\":[\"Defini\\u00e7\\u00f5es\"],\"Show Name Field?\":[\"Mostrar campo de nome?\"],\"Show Surname Field?\":[\"Mostrar campo do apelido?\"],\"Something went wrong. Please try again\":[\"Ocorreu um erro. Tente de novo\"],\"Surname\":[\"Apelido\"],\"Thanks for subscribing\":[\"Obrigado por subscrever\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formul\\u00e1rio\"],\"You are not connected to Hostinger Reach\":[\"N\\u00e3o est\\u00e1 ligado ao Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"N\\u00e3o est\\u00e1 ligado ao Hostinger Reach. Para obter acesso total a este bloco, precisa de ligar a sua conta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-tr_TR-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1029,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"tr_TR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"\\u0130leti\\u015fim Listesi\"],\"Create New List\":[\"Yeni Liste Olu\\u015ftur\"],\"Email\":[\"E-posta\"],\"Form ID\":[\"Form Kimli\\u011fi\"],\"Name\":[\"\\u0130sim\"],\"Name for the new Contact List\":[\"Yeni Ki\\u015fi Listesi i\\u00e7in \\u0130sim\"],\"New Contact List\":[\"Yeni Ki\\u015fi Listesi\"],\"Settings\":[\"Ayarlar\"],\"Show Name Field?\":[\"Ad Alan\\u0131n\\u0131 G\\u00f6ster?\"],\"Show Surname Field?\":[\"Soyad\\u0131 Alan\\u0131n\\u0131 G\\u00f6ster?\"],\"Something went wrong. Please try again\":[\"Bir \\u015feyler yanl\\u0131\\u015f gitti. L\\u00fctfen tekrar deneyin\"],\"Surname\":[\"Soyad\\u0131\"],\"Thanks for subscribing\":[\"Abone oldu\\u011funuz i\\u00e7in te\\u015fekk\\u00fcrler\"],\"Unique identifier for this form\":[\"Bu form i\\u00e7in benzersiz tan\\u0131mlay\\u0131c\\u0131\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-hi_IN-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":309,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-05 08:46+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"hi_IN\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-lt_LT-40280f641851c0bceee91722c888f369.json","ext":"json","size":1573,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"lt_LT\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Connect Now\":[\"Prisijunkite dabar\"],\"Contact List\":[\"Kontakt\\u0173 s\\u0105ra\\u0161as\"],\"Create New List\":[\"Sukurti nauj\\u0105 s\\u0105ra\\u0161\\u0105\"],\"Email\":[\"El. pa\\u0161tas\"],\"Form ID\":[\"Formos ID\"],\"Name\":[\"Pavadinimas\"],\"Name for the new Contact List\":[\"Naujojo kontakt\\u0173 s\\u0105ra\\u0161o pavadinimas\"],\"New Contact List\":[\"Naujas kontakt\\u0173 s\\u0105ra\\u0161as\"],\"Reach Subscription Form\":[\"Pasiekti prenumeratos forma\"],\"Settings\":[\"Nustatymai\"],\"Show Name Field?\":[\"Rodyti vardo lauk\\u0105?\"],\"Show Surname Field?\":[\"Rodyti pavard\\u0117s lauk\\u0105?\"],\"Something went wrong. Please try again\":[\"Ka\\u017ekas nutiko ne taip. Bandykite dar kart\\u0105\"],\"Surname\":[\"Pavard\\u0117\"],\"Thanks for subscribing\":[\"A\\u010di\\u016b u\\u017e prenumerat\\u0105\"],\"Unique identifier for this form\":[\"Unikalus \\u0161ios formos identifikatorius\"],\"You are not connected to Hostinger Reach\":[\"Nesate prisijung\\u0119 prie \\\"Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Nesate prisijung\\u0119 prie \\\"Hostinger Reach\\\". Nor\\u0117dami gauti visi\\u0161k\\u0105 prieig\\u0105 prie \\u0161io bloko, turite prisijungti prie \\\"Hostinger Reach\\\" paskyros.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-zh_CN.l10n.php","ext":"php","size":7597,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Chinese (China)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:01+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'zh_CN','plural-forms'=>'nplurals=1; plural=0;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Active'=>'\u6d3b\u8dc3','Add form'=>'\u6dfb\u52a0\u8868\u683c','Add form clicked'=>'\u70b9\u51fb\u6dfb\u52a0\u8868\u683c','Add more forms'=>'\u6dfb\u52a0\u66f4\u591a\u8868\u683c','Attention:'=>'\u8bf7\u6ce8\u610f\uff1a','Average CTOR'=>'\u5e73\u5747 CTOR','Background image for'=>'\u80cc\u666f\u56fe\u7247','Banner background image for'=>'\u6a2a\u5e45\u80cc\u666f\u56fe\u7247','block description\u0004Subscription form for Hostinger Reach'=>'Hostinger Reach\u8ba2\u9605\u8868','block title\u0004Reach Subscription Form'=>'\u8ba2\u9605\u8868\u683c','Campaigns'=>'\u6d3b\u52a8','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\u9009\u62e9\u7ba1\u7406\u7f51\u7ad9\u8868\u5355\u7684\u65b9\u5f0f\u3002\u4f7f\u7528Hostinger Reach\u521b\u5efa\u65b0\u8868\u5355\u6216\u8fde\u63a5\u7b2c\u4e09\u65b9\u63d2\u4ef6\u3002','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\u70b9\u51fb\u6253\u5f00\u7387\u544a\u8bc9\u60a8\u6709\u591a\u5c11\u767e\u5206\u6bd4\u7684\u6253\u5f00\u4e5f\u4f1a\u5e26\u6765\u70b9\u51fb\u3002\u826f\u597d\u7684\u70b9\u51fb\u6253\u5f00\u7387\u4e3a 6-17%\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u6240\u5728\u7684\u884c\u4e1a\u3002','Collapse {pluginName} details'=>'\u6298\u53e0 {pluginName} \u8be6\u60c5','Connect more forms to expand your contact list and capture leads from different pages.'=>'\u8fde\u63a5\u66f4\u591a\u8868\u5355\uff0c\u6269\u5c55\u8054\u7cfb\u4eba\u5217\u8868\uff0c\u4ece\u4e0d\u540c\u9875\u9762\u6355\u6349\u7ebf\u7d22\u3002','Contact Form 7'=>'\u8054\u7cfb\u8868\u5355 7','Contact List'=>'\u8054\u7cfb\u540d\u5355','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'\u4f7f\u7528\u7b26\u5408\u60a8\u98ce\u683c\u7684\u4eba\u5de5\u667a\u80fd\u6a21\u677f\u521b\u5efa\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u6d3b\u52a8\u3002\u4e0e\u60a8\u7684 WordPress \u7f51\u7ad9\u5373\u65f6\u540c\u6b65\uff0c\u8f7b\u677e\u4e0e\u53d7\u4f17\u5efa\u7acb\u8054\u7cfb\u3002','Create New List'=>'\u521b\u5efa\u65b0\u5217\u8868','Disconnect'=>'\u65ad\u5f00','Disconnect it to link this site instead.'=>'\u65ad\u5f00\u8fde\u63a5\uff0c\u8f6c\u800c\u94fe\u63a5\u672c\u7f51\u7ad9\u3002','Edit form'=>'\u7f16\u8f91\u8868\u683c','Email'=>'\u7535\u5b50\u90ae\u4ef6','Email Marketing'=>'\u7535\u5b50\u90ae\u4ef6\u8425\u9500','Emails'=>'\u7535\u5b50\u90ae\u4ef6','Entries'=>'\u53c2\u8d5b\u4f5c\u54c1','Expand {pluginName} details'=>'\u6269\u5c55 {pluginName} \u7684\u8be6\u7ec6\u4fe1\u606f','FAQ'=>'\u5e38\u89c1\u95ee\u9898','Form ID'=>'\u8868\u683c ID','Forms'=>'\u8868\u683c','Go to plugin'=>'\u8f6c\u5230\u63d2\u4ef6','Hostinger'=>'\u970d\u65af\u5ef7\u683c','Hostinger Reach'=>'\u970d\u65af\u5ef7\u683c-\u91cc\u5947','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach\u662f\u4e00\u6b3e\u9762\u5411\u5c0f\u578b\u4f01\u4e1a\u548c\u521b\u4f5c\u8005\u7684\u4eba\u5de5\u667a\u80fd\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u5de5\u5177\u3002\u5b83\u652f\u6301\u60a8\u7684\u6574\u4e2a\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4e4b\u65c5--\u4ece\u5efa\u7acb\u8054\u7cfb\u4eba\u5217\u8868\u5230\u53d1\u9001\u8425\u9500\u6d3b\u52a8\u548c\u8ddf\u8e2a\u7ed3\u679c\u3002','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach\u7b80\u5355\u3001\u5feb\u901f\u3001\u9ad8\u6548\uff0c\u65e0\u9700\u8bbe\u8ba1\u6216\u8425\u9500\u7ecf\u9a8c\u3002\u4e0e\u5927\u591a\u6570\u7535\u5b50\u90ae\u4ef6\u5de5\u5177\u4e0d\u540c\uff0cReach\u7684\u6838\u5fc3\u662f\u5176\u4eba\u5de5\u667a\u80fd\u9a71\u52a8\u7684\u6a21\u677f\u521b\u5efa\u5668\u3002\u65e0\u8bba\u662f\u4ea7\u54c1\u53d1\u5e03\u3001\u7279\u522b\u4f18\u60e0\u8fd8\u662f\u65f6\u4e8b\u901a\u8baf\u66f4\u65b0\uff0c\u5b83\u90fd\u80fd\u7acb\u5373\u5236\u4f5c\u51fa\u4e13\u4e1a\u3001\u79fb\u52a8\u53cb\u597d\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5b83\u4e0d\u4ec5\u80fd\u4e3a\u60a8\u7f16\u5199\u5185\u5bb9\uff0c\u8fd8\u80fd\u4e3a\u60a8\u7684\u4fe1\u606f\u63d0\u51fa\u6700\u4f73\u5e03\u5c40\u5efa\u8bae\uff0c\u5e76\u4fdd\u5b58\u60a8\u7684\u98ce\u683c\u8bbe\u7f6e\uff0c\u8ba9\u60a8\u65e0\u9700\u4ece\u5934\u5f00\u59cb\u3002<br><br>\u6bcf\u4e2a\u6a21\u677f\u90fd\u53ef\u81ea\u5b9a\u4e49\uff0c\u56e0\u6b64\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u90fd\u80fd\u53cd\u6620\u51fa\u60a8\u7684\u54c1\u724c\u5916\u89c2\u3001\u611f\u89c9\u548c\u58f0\u97f3\u3002\u6b64\u5916\uff0c\u7531\u4e8e\u8fd9\u4e9b\u6a21\u677f\u662f\u91c7\u7528\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u6700\u4f73\u5b9e\u8df5\u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u5728\u53ef\u8bfb\u6027\u3001\u53ef\u8bbf\u95ee\u6027\u548c\u8bfb\u8005\u53c2\u4e0e\u5ea6\u65b9\u9762\u90fd\u5f97\u5230\u4e86\u4f18\u5316\u3002','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach\u8981\u6c42\u6700\u4f4ePHP\u7248\u672c<b>%s<\/b>\u3002','How is Hostinger Reach different from other email marketing apps?'=>'Hostinger Reach\u4e0e\u5176\u4ed6\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u5e94\u7528\u7a0b\u5e8f\u6709\u4f55\u4e0d\u540c\uff1f','How much does it cost to use Hostinger Reach?'=>'\u4f7f\u7528Hostinger Reach\u7684\u8d39\u7528\u662f\u591a\u5c11\uff1f','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Inactive'=>'\u4e0d\u6d3b\u52a8','Integrate your WordPress site with Hostinger Reach.'=>'\u5c06\u60a8\u7684WordPress\u7f51\u7ad9\u4e0eHostinger Reach\u6574\u5408\u3002','Loading plugins...'=>'\u6b63\u5728\u52a0\u8f7d\u63d2\u4ef6...','Manage'=>'\u7ba1\u7406','Name'=>'\u540d\u79f0','Name for the new Contact List'=>'\u65b0\u8054\u7cfb\u4eba\u5217\u8868\u7684\u540d\u79f0','New Contact List'=>'\u65b0\u8054\u7cfb\u4eba\u540d\u5355','New page'=>'\u65b0\u9875\u9762','New subscribers'=>'\u65b0\u7528\u6237','opens in new tab'=>'\u5728\u65b0\u6807\u7b7e\u9875\u6253\u5f00','Plugin'=>'\u63d2\u4ef6','Progress: {current} of {total} used ({percentage}%)'=>'\u8fdb\u5ea6\uff1a{\u5f53\u524d}\u5360{\u603b}\u4f7f\u7528\u91cf\u7684\uff08{\u767e\u5206\u6bd4}%\uff09\u3002','Reach is already connected to another site.'=>'Reach \u5df2\u8fde\u63a5\u5230\u53e6\u4e00\u4e2a\u7ad9\u70b9\u3002','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach \u63d0\u4f9b\u4e3a\u671f\u4e00\u5e74\u7684\u514d\u8d39\u8ba1\u5212\uff0c\u975e\u5e38\u9002\u5408\u5165\u95e8\u3002\u4ed8\u8d39\u8ba1\u5212\u5219\u6839\u636e\u60a8\u5e0c\u671b\u63a5\u89e6\u591a\u5c11\u72ec\u7279\u7684\u8054\u7cfb\u4eba\u4ee5\u53ca\u6bcf\u6708\u53d1\u9001\u591a\u5c11\u7535\u5b50\u90ae\u4ef6\u800c\u5b9a\u3002\u968f\u7740\u53d7\u4f17\u7684\u589e\u52a0\uff0c\u60a8\u53ef\u4ee5\u5347\u7ea7\u5230\u9002\u5408\u60a8\u9700\u8981\u7684\u8ba1\u5212\u3002Reach \u4e0d\u4f1a\u9650\u5236\u60a8\u7684\u8054\u7cfb\u4eba\u5217\u8868\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u62c5\u5fc3\u6570\u636e\u4e22\u5931\uff0c\u53ef\u4ee5\u6301\u7eed\u589e\u52a0\u60a8\u7684\u53d7\u4f17\u3002','Reach Subscription Form'=>'\u8ba2\u9605\u8868\u683c','Remaining'=>'\u5269\u4f59','remaining out of'=>'\u5269\u4f59','Select page'=>'\u9009\u62e9\u9875\u9762','Sent'=>'\u53d1\u9001','Settings'=>'\u8bbe\u7f6e','Show Name Field?'=>'\u663e\u793a\u540d\u79f0\u5b57\u6bb5\uff1f','Show Surname Field?'=>'\u663e\u793a\u59d3\u6c0f\u5b57\u6bb5\uff1f','Something went wrong'=>'\u51fa\u4e86\u95ee\u9898','Something went wrong. Please try again'=>'\u51fa\u9519\u4e86\u3002\u8bf7\u91cd\u8bd5','Something went wrong. Please try again.'=>'\u51fa\u9519\u4e86\u3002\u8bf7\u91cd\u8bd5\u3002','Start collecting form submissions'=>'\u5f00\u59cb\u6536\u96c6\u63d0\u4ea4\u7684\u8868\u5355','Start for free'=>'\u514d\u8d39\u5f00\u59cb','Status'=>'\u73b0\u72b6','Subscribe'=>'\u8ba2\u9605','Subscribers'=>'\u8ba2\u9605\u8005','Surname'=>'\u59d3\u6c0f','Templates'=>'\u6a21\u677f','Thanks for subscribing'=>'\u611f\u8c22\u60a8\u7684\u8ba2\u9605','Thanks for subscribing.'=>'\u611f\u8c22\u60a8\u7684\u8ba2\u9605\u3002','This month'=>'\u672c\u6708','total'=>'\u603b\u8ba1','Total subscribers'=>'\u7528\u6237\u603b\u6570','Unique identifier for this form'=>'\u8be5\u8868\u683c\u7684\u552f\u4e00\u6807\u8bc6\u7b26','Unsubscribes'=>'\u9000\u8ba2','Upgrade'=>'\u5347\u7ea7','usage statistics'=>'\u4f7f\u7528\u7edf\u8ba1','View form'=>'\u67e5\u770b\u8868\u683c','Welcome to Reach'=>'\u6b22\u8fce\u6765\u5230\u91cc\u5947','What is Hostinger Reach email marketing service?'=>'\u4ec0\u4e48\u662fHostinger Reach\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u670d\u52a1\uff1f','WP Forms Lite'=>'WP \u8868\u5355\u7cbe\u7b80\u7248','WP Forms Lite %s'=>'WP \u8868\u5355\u7cbe\u7b80\u7248 %s','You are running <b>%s<\/b> PHP version.'=>'\u60a8\u8fd0\u884c\u7684\u662f <b>%s<\/b> PHP \u7248\u672c\u3002','Your plan'=>'\u60a8\u7684\u8ba1\u5212']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-vi.l10n.php","ext":"php","size":9434,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Vietnamese','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:34+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'vi','plural-forms'=>'nplurals=1; plural=0;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger M\u1edf R\u1ed9ng','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'T\u00edch h\u1ee3p trang web WordPress c\u1ee7a b\u1ea1n v\u1edbi Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'L\u01b0u \u00fd:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach y\u00eau c\u1ea7u phi\u00ean b\u1ea3n PHP t\u1ed1i thi\u1ec3u l\u00e0 <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'B\u1ea1n \u0111ang s\u1eed d\u1ee5ng phi\u00ean b\u1ea3n PHP <b>%s<\/b>.','Email Marketing'=>'Ti\u1ebfp th\u1ecb qua email','Thanks for subscribing.'=>'C\u1ea3m \u01a1n b\u1ea1n \u0111\u00e3 \u0111\u0103ng k\u00fd.','Something went wrong. Please try again.'=>'C\u00f3 s\u1ef1 c\u1ed1 x\u1ea3y ra. Vui l\u00f2ng th\u1eed l\u1ea1i.','Email'=>'Th\u01b0 \u0111i\u1ec7n t\u1eed','Name'=>'T\u00ean','Surname'=>'H\u1ecd','Subscribe'=>'\u0110\u0103ng k\u00fd','Contact Form 7'=>'Form li\u00ean h\u1ec7 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'C\u00f3 s\u1ef1 c\u1ed1 x\u1ea3y ra','Welcome to Reach'=>'Ch\u00e0o m\u1eebng \u0111\u1ebfn v\u1edbi Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'T\u1ea1o c\u00e1c chi\u1ebfn d\u1ecbch email s\u1eed d\u1ee5ng c\u00e1c m\u1eabu \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf b\u1edfi tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o (AI) ph\u00f9 h\u1ee3p v\u1edbi phong c\u00e1ch c\u1ee7a b\u1ea1n. \u0110\u1ed3ng b\u1ed9 h\u00f3a ngay l\u1eadp t\u1ee9c v\u1edbi trang web WordPress c\u1ee7a b\u1ea1n v\u00e0 k\u1ebft n\u1ed1i d\u1ec5 d\u00e0ng v\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng m\u1ee5c ti\u00eau.','Reach is already connected to another site.'=>'Reach \u0111\u00e3 \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i v\u1edbi m\u1ed9t trang web kh\u00e1c.','Disconnect it to link this site instead.'=>'Ng\u1eaft k\u1ebft n\u1ed1i \u0111\u1ec3 li\u00ean k\u1ebft trang web n\u00e0y thay th\u1ebf.','Manage'=>'Qu\u1ea3n l\u00fd','Start for free'=>'B\u1eaft \u0111\u1ea7u mi\u1ec5n ph\u00ed','This month'=>'Th\u00e1ng n\u00e0y','Your plan'=>'K\u1ebf ho\u1ea1ch c\u1ee7a b\u1ea1n','Upgrade'=>'N\u00e2ng c\u1ea5p','Emails'=>'Th\u01b0 \u0111i\u1ec7n t\u1eed','Sent'=>'\u0110\u00e3 g\u1eedi','Remaining'=>'C\u00f2n l\u1ea1i','Campaigns'=>'Chi\u1ebfn d\u1ecbch','Average CTOR'=>'CTOR trung b\u00ecnh','Subscribers'=>'Ng\u01b0\u1eddi \u0111\u0103ng k\u00fd','New subscribers'=>'Ng\u01b0\u1eddi \u0111\u0103ng k\u00fd m\u1edbi','Unsubscribes'=>'H\u1ee7y \u0111\u0103ng k\u00fd','Total subscribers'=>'T\u1ed5ng s\u1ed1 ng\u01b0\u1eddi \u0111\u0103ng k\u00fd','Templates'=>'M\u1eabu','Settings'=>'C\u00e0i \u0111\u1eb7t','Forms'=>'Bi\u1ec3u m\u1eabu','Add form'=>'Th\u00eam bi\u1ec3u m\u1eabu','Start collecting form submissions'=>'B\u1eaft \u0111\u1ea7u thu th\u1eadp c\u00e1c bi\u1ec3u m\u1eabu \u0111\u00e3 g\u1eedi','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Ch\u1ecdn c\u00e1ch b\u1ea1n mu\u1ed1n qu\u1ea3n l\u00fd bi\u1ec3u m\u1eabu tr\u00ean trang web c\u1ee7a m\u00ecnh. T\u1ea1o bi\u1ec3u m\u1eabu m\u1edbi v\u1edbi Hostinger Reach ho\u1eb7c k\u1ebft n\u1ed1i plugin c\u1ee7a b\u00ean th\u1ee9 ba.','Add more forms'=>'Th\u00eam nhi\u1ec1u bi\u1ec3u m\u1eabu','Connect more forms to expand your contact list and capture leads from different pages.'=>'K\u1ebft n\u1ed1i th\u00eam c\u00e1c bi\u1ec3u m\u1eabu \u0111\u1ec3 m\u1edf r\u1ed9ng danh s\u00e1ch li\u00ean h\u1ec7 v\u00e0 thu th\u1eadp th\u00f4ng tin kh\u00e1ch h\u00e0ng ti\u1ec1m n\u0103ng t\u1eeb c\u00e1c trang kh\u00e1c nhau.','New page'=>'Trang m\u1edbi','FAQ'=>'C\u00e2u h\u1ecfi th\u01b0\u1eddng g\u1eb7p','What is Hostinger Reach email marketing service?'=>'D\u1ecbch v\u1ee5 ti\u1ebfp th\u1ecb email Hostinger Reach l\u00e0 g\u00ec?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach l\u00e0 c\u00f4ng c\u1ee5 ti\u1ebfp th\u1ecb email \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 b\u1edfi tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o (AI) d\u00e0nh cho doanh nghi\u1ec7p nh\u1ecf v\u00e0 ng\u01b0\u1eddi s\u00e1ng t\u1ea1o. N\u00f3 h\u1ed7 tr\u1ee3 to\u00e0n b\u1ed9 quy tr\u00ecnh ti\u1ebfp th\u1ecb email c\u1ee7a b\u1ea1n - t\u1eeb x\u00e2y d\u1ef1ng danh s\u00e1ch li\u00ean h\u1ec7, g\u1eedi chi\u1ebfn d\u1ecbch cho \u0111\u1ebfn theo d\u00f5i k\u1ebft qu\u1ea3.','How is Hostinger Reach different from other email marketing apps?'=>'Hostinger Reach kh\u00e1c bi\u1ec7t so v\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng ti\u1ebfp th\u1ecb email kh\u00e1c nh\u01b0 th\u1ebf n\u00e0o?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho s\u1ef1 \u0111\u01a1n gi\u1ea3n, t\u1ed1c \u0111\u1ed9 v\u00e0 hi\u1ec7u qu\u1ea3 \u2013 kh\u00f4ng c\u1ea7n kinh nghi\u1ec7m thi\u1ebft k\u1ebf hay marketing. Kh\u00e1c v\u1edbi h\u1ea7u h\u1ebft c\u00e1c c\u00f4ng c\u1ee5 email kh\u00e1c, tr\u00e1i tim c\u1ee7a Reach l\u00e0 tr\u00ecnh t\u1ea1o m\u1eabu email \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 b\u1edfi tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o (AI). D\u00f9 l\u00e0 ra m\u1eaft s\u1ea3n ph\u1ea9m, \u01b0u \u0111\u00e3i \u0111\u1eb7c bi\u1ec7t hay c\u1eadp nh\u1eadt b\u1ea3n tin, Reach s\u1ebd ngay l\u1eadp t\u1ee9c t\u1ea1o ra m\u1ed9t email chuy\u00ean nghi\u1ec7p, t\u01b0\u01a1ng th\u00edch v\u1edbi thi\u1ebft b\u1ecb di \u0111\u1ed9ng. Kh\u00f4ng ch\u1ec9 vi\u1ebft n\u1ed9i dung cho b\u1ea1n, n\u00f3 c\u00f2n \u0111\u1ec1 xu\u1ea5t b\u1ed1 c\u1ee5c t\u1ed1i \u01b0u cho th\u00f4ng \u0111i\u1ec7p c\u1ee7a b\u1ea1n v\u00e0 l\u01b0u l\u1ea1i c\u00e0i \u0111\u1eb7t phong c\u00e1ch c\u1ee7a b\u1ea1n, gi\u00fap b\u1ea1n kh\u00f4ng bao gi\u1edd ph\u1ea3i b\u1eaft \u0111\u1ea7u t\u1eeb \u0111\u1ea7u.<br><br>M\u1ed7i m\u1eabu email \u0111\u1ec1u c\u00f3 th\u1ec3 t\u00f9y ch\u1ec9nh, gi\u00fap email c\u1ee7a b\u1ea1n ph\u1ea3n \u00e1nh \u0111\u00fang phong c\u00e1ch, c\u1ea3m nh\u1eadn v\u00e0 gi\u1ecdng \u0111i\u1ec7u c\u1ee7a th\u01b0\u01a1ng hi\u1ec7u. V\u00e0 v\u00ec c\u00e1c m\u1eabu \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean c\u00e1c nguy\u00ean t\u1eafc t\u1ed1t nh\u1ea5t \u0111\u00e3 \u0111\u01b0\u1ee3c ki\u1ec3m ch\u1ee9ng, ch\u00fang \u0111\u01b0\u1ee3c t\u1ed1i \u01b0u h\u00f3a cho kh\u1ea3 n\u0103ng \u0111\u1ecdc, truy c\u1eadp v\u00e0 t\u01b0\u01a1ng t\u00e1c c\u1ee7a ng\u01b0\u1eddi \u0111\u1ecdc.','How much does it cost to use Hostinger Reach?'=>'Chi ph\u00ed s\u1eed d\u1ee5ng Hostinger Reach l\u00e0 bao nhi\u00eau?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach cung c\u1ea5p g\u00f3i mi\u1ec5n ph\u00ed trong m\u1ed9t n\u0103m \u2013 ho\u00e0n h\u1ea3o cho nh\u1eefng ai m\u1edbi b\u1eaft \u0111\u1ea7u. C\u00e1c g\u00f3i tr\u1ea3 ph\u00ed \u0111\u01b0\u1ee3c t\u00ednh d\u1ef1a tr\u00ean s\u1ed1 l\u01b0\u1ee3ng li\u00ean h\u1ec7 duy nh\u1ea5t m\u00e0 b\u1ea1n mu\u1ed1n ti\u1ebfp c\u1eadn v\u00e0 s\u1ed1 l\u01b0\u1ee3ng email g\u1eedi h\u00e0ng th\u00e1ng. Khi \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a b\u1ea1n ph\u00e1t tri\u1ec3n, b\u1ea1n c\u00f3 th\u1ec3 n\u00e2ng c\u1ea5p l\u00ean g\u00f3i ph\u00f9 h\u1ee3p v\u1edbi nhu c\u1ea7u c\u1ee7a m\u00ecnh. Reach kh\u00f4ng gi\u1edbi h\u1ea1n danh s\u00e1ch li\u00ean h\u1ec7 c\u1ee7a b\u1ea1n, v\u00ec v\u1eady b\u1ea1n kh\u00f4ng c\u1ea7n lo l\u1eafng v\u1ec1 vi\u1ec7c m\u1ea5t d\u1eef li\u1ec7u v\u00e0 c\u00f3 th\u1ec3 ph\u00e1t tri\u1ec3n \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a m\u00ecnh m\u1ed9t c\u00e1ch li\u00ean t\u1ee5c.','opens in new tab'=>'m\u1edf trong tab m\u1edbi','Banner background image for'=>'H\u00ecnh n\u1ec1n cho banner','Background image for'=>'H\u00ecnh n\u1ec1n cho','usage statistics'=>'th\u1ed1ng k\u00ea s\u1eed d\u1ee5ng','remaining out of'=>'c\u00f2n l\u1ea1i ngo\u00e0i','total'=>'t\u1ed5ng c\u1ed9ng','Progress: {current} of {total} used ({percentage}%)'=>'Ti\u1ebfn \u0111\u1ed9: {hi\u1ec7n t\u1ea1i} tr\u00ean {t\u1ed5ng} \u0111\u00e3 s\u1eed d\u1ee5ng ({ph\u1ea7n tr\u0103m}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'T\u1ef7 l\u1ec7 nh\u1ea5p chu\u1ed9t sau khi m\u1edf (CTOR) cho bi\u1ebft t\u1ef7 l\u1ec7 ph\u1ea7n tr\u0103m s\u1ed1 l\u1ea7n m\u1edf email d\u1eabn \u0111\u1ebfn nh\u1ea5p chu\u1ed9t. M\u1ed9t CTOR t\u1ed1t dao \u0111\u1ed9ng t\u1eeb 6% \u0111\u1ebfn 17%, t\u00f9y thu\u1ed9c v\u00e0o ng\u00e0nh ngh\u1ec1 c\u1ee7a b\u1ea1n.','Add form clicked'=>'Th\u00eam bi\u1ec3u m\u1eabu \u0111\u00e3 nh\u1ea5p','Select page'=>'Ch\u1ecdn trang','Plugin'=>'Plugin','Entries'=>'B\u00e0i d\u1ef1 thi','Status'=>'Tr\u1ea1ng th\u00e1i','Active'=>'Ho\u1ea1t \u0111\u1ed9ng','Inactive'=>'Kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng','Go to plugin'=>'\u0110i \u0111\u1ebfn plugin','Disconnect'=>'Ng\u1eaft k\u1ebft n\u1ed1i','View form'=>'Xem bi\u1ec3u m\u1eabu','Edit form'=>'Ch\u1ec9nh s\u1eeda bi\u1ec3u m\u1eabu','Loading plugins...'=>'\u0110ang t\u1ea3i plugin...','Expand {pluginName} details'=>'M\u1edf r\u1ed9ng chi ti\u1ebft {pluginName}','Collapse {pluginName} details'=>'Xu\u1ea5t chi ti\u1ebft {pluginName}','Thanks for subscribing'=>'C\u1ea3m \u01a1n b\u1ea1n \u0111\u00e3 \u0111\u0103ng k\u00fd','Something went wrong. Please try again'=>'C\u00f3 s\u1ef1 c\u1ed1 x\u1ea3y ra. Vui l\u00f2ng th\u1eed l\u1ea1i','Form ID'=>'M\u00e3 bi\u1ec3u m\u1eabu','Unique identifier for this form'=>'M\u00e3 \u0111\u1ecbnh danh duy nh\u1ea5t cho bi\u1ec3u m\u1eabu n\u00e0y','Contact List'=>'Danh s\u00e1ch li\u00ean h\u1ec7','Create New List'=>'T\u1ea1o danh s\u00e1ch m\u1edbi','New Contact List'=>'Danh s\u00e1ch li\u00ean h\u1ec7 m\u1edbi','Name for the new Contact List'=>'T\u00ean cho danh s\u00e1ch li\u00ean h\u1ec7 m\u1edbi','Show Name Field?'=>'Hi\u1ec3n th\u1ecb tr\u01b0\u1eddng t\u00ean?','Show Surname Field?'=>'Hi\u1ec3n th\u1ecb tr\u01b0\u1eddng h\u1ecd?','Reach Subscription Form'=>'Bi\u1ec3u m\u1eabu \u0111\u0103ng k\u00fd d\u1ecbch v\u1ee5','block title\u0004Reach Subscription Form'=>'Bi\u1ec3u m\u1eabu \u0111\u0103ng k\u00fd d\u1ecbch v\u1ee5','block description\u0004Subscription form for Hostinger Reach'=>'Phi\u1ebfu \u0111\u0103ng k\u00fd d\u1ecbch v\u1ee5 Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-nl_NL_formal-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":916,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"nl_NL_formal\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Contactlijst\"],\"Create New List\":[\"Nieuwe lijst maken\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"Formulier ID\"],\"Name\":[\"Naam\"],\"Name for the new Contact List\":[\"Naam voor de nieuwe Contactlijst\"],\"New Contact List\":[\"Nieuwe contactpersonenlijst\"],\"Settings\":[\"Instellingen\"],\"Show Name Field?\":[\"Naamveld weergeven?\"],\"Show Surname Field?\":[\"Achternaamveld weergeven?\"],\"Something went wrong. Please try again\":[\"Er is iets fout gegaan. Probeer het opnieuw\"],\"Surname\":[\"Achternaam\"],\"Thanks for subscribing\":[\"Bedankt voor je inschrijving\"],\"Unique identifier for this form\":[\"Unieke identificatiecode voor dit formulier\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-de_DE-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":690,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"de_DE\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Jetzt verbinden\"],\"You are not connected to Hostinger Reach\":[\"Du bist nicht mit Hostinger Reach verbunden\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Du bist nicht mit Hostinger Reach verbunden. Um vollen Zugriff auf diesen Block zu erhalten, musst du dein Hostinger Reach-Konto verbinden.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_CO-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":671,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_CO\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ya\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1 conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debe conectar su cuenta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-th-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":1252,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"th\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e40\\u0e14\\u0e35\\u0e4b\\u0e22\\u0e27\\u0e19\\u0e35\\u0e49\"],\"You are not connected to Hostinger Reach\":[\"\\u0e04\\u0e38\\u0e13\\u0e44\\u0e21\\u0e48\\u0e44\\u0e14\\u0e49\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e01\\u0e31\\u0e1a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u0e04\\u0e38\\u0e13\\u0e44\\u0e21\\u0e48\\u0e44\\u0e14\\u0e49\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e01\\u0e31\\u0e1a Hostinger Reach. \\u0e40\\u0e1e\\u0e37\\u0e48\\u0e2d\\u0e40\\u0e02\\u0e49\\u0e32\\u0e16\\u0e36\\u0e07\\u0e1a\\u0e25\\u0e47\\u0e2d\\u0e01\\u0e19\\u0e35\\u0e49\\u0e2d\\u0e22\\u0e48\\u0e32\\u0e07\\u0e40\\u0e15\\u0e47\\u0e21\\u0e17\\u0e35\\u0e48 \\u0e04\\u0e38\\u0e13\\u0e15\\u0e49\\u0e2d\\u0e07\\u0e40\\u0e0a\\u0e37\\u0e48\\u0e2d\\u0e21\\u0e15\\u0e48\\u0e2d\\u0e1a\\u0e31\\u0e0d\\u0e0a\\u0e35 Hostinger Reach \\u0e02\\u0e2d\\u0e07\\u0e04\\u0e38\\u0e13.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-vi-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":360,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"vi\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Reach Subscription Form\":[\"Bi\\u1ec3u m\\u1eabu \\u0111\\u0103ng k\\u00fd d\\u1ecbch v\\u1ee5\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-de_DE-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":915,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"de_DE\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Kontaktliste\"],\"Create New List\":[\"Neue Liste erstellen\"],\"Email\":[\"E-Mail\"],\"Form ID\":[\"Formular ID\"],\"Name\":[\"Name\"],\"Name for the new Contact List\":[\"Name f\\u00fcr die neue Kontaktliste\"],\"New Contact List\":[\"Neue Kontaktliste\"],\"Settings\":[\"Einstellungen\"],\"Show Name Field?\":[\"Namensfeld anzeigen?\"],\"Show Surname Field?\":[\"Nachnamenfeld anzeigen?\"],\"Something went wrong. Please try again\":[\"Etwas ist schief gelaufen. Bitte versuche es erneut\"],\"Surname\":[\"Nachname\"],\"Thanks for subscribing\":[\"Danke f\\u00fcr dein Abonnement\"],\"Unique identifier for this form\":[\"Eindeutiger Bezeichner f\\u00fcr dieses Formular\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-he_IL.l10n.php","ext":"php","size":9247,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Hebrew','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:03+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'he_IL','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'\u05d4\u05d9\u05e9\u05d2\u05d9 Hostinger','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'\u05e9\u05dc\u05d1 \u05d0\u05ea \u05d0\u05ea\u05e8 \u05d4\u05d5\u05d5\u05e8\u05d3\u05e4\u05e8\u05e1 \u05e9\u05dc\u05da \u05e2\u05dd Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'\u05e9\u05d9\u05de\u05d5 \u05dc\u05d1:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach \u05d3\u05d5\u05e8\u05e9 \u05d2\u05e8\u05e1\u05ea PHP \u05de\u05d9\u05e0\u05d9\u05de\u05dc\u05d9\u05ea \u05e9\u05dc <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'\u05d0\u05ea\u05d4 \u05de\u05e8\u05d9\u05e5 \u05d0\u05ea \u05d2\u05e8\u05e1\u05ea \u05d4-PHP <b>%s<\/b>.','Email Marketing'=>'\u05e9\u05d9\u05d5\u05d5\u05e7 \u05d1\u05d3\u05d5\u05d0\"\u05dc','Thanks for subscribing.'=>'\u05ea\u05d5\u05d3\u05d4 \u05e2\u05dc \u05d4\u05d4\u05e8\u05e9\u05de\u05d4.','Something went wrong. Please try again.'=>'\u05de\u05e9\u05d4\u05d5 \u05d4\u05e9\u05ea\u05d1\u05e9. \u05d0\u05e0\u05d0 \u05e0\u05e1\u05d4 \u05e9\u05d5\u05d1.','Email'=>'\u05d3\u05d5\u05d0\"\u05dc','Name'=>'\u05e9\u05dd','Surname'=>'\u05e9\u05dd \u05de\u05e9\u05e4\u05d7\u05d4','Subscribe'=>'\u05d4\u05d9\u05e8\u05e9\u05dd','Contact Form 7'=>'\u05d8\u05d5\u05e4\u05e1 \u05d9\u05e6\u05d9\u05e8\u05ea \u05e7\u05e9\u05e8 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'\u05d8\u05e4\u05e1\u05d9 WP Lite','Something went wrong'=>'\u05de\u05e9\u05d4\u05d5 \u05d4\u05e9\u05ea\u05d1\u05e9','Welcome to Reach'=>'\u05d1\u05e8\u05d5\u05db\u05d9\u05dd \u05d4\u05d1\u05d0\u05d9\u05dd \u05dc-Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'\u05e6\u05e8\u05d5 \u05e7\u05de\u05e4\u05d9\u05d9\u05e0\u05d9\u05dd \u05d1\u05d3\u05d5\u05d0\"\u05dc \u05d1\u05d0\u05de\u05e6\u05e2\u05d5\u05ea \u05ea\u05d1\u05e0\u05d9\u05d5\u05ea \u05e9\u05e0\u05d5\u05e6\u05e8\u05d5 \u05e2\u05dc \u05d9\u05d3\u05d9 \u05d1\u05d9\u05e0\u05d4 \u05de\u05dc\u05d0\u05db\u05d5\u05ea\u05d9\u05ea \u05d4\u05de\u05ea\u05d0\u05d9\u05de\u05d5\u05ea \u05dc\u05e1\u05d2\u05e0\u05d5\u05df \u05e9\u05dc\u05db\u05dd. \u05e1\u05e0\u05db\u05e8\u05e0\u05d5 \u05d1\u05d0\u05d5\u05e4\u05df \u05de\u05d9\u05d9\u05d3\u05d9 \u05e2\u05dd \u05d0\u05ea\u05e8 WordPress \u05e9\u05dc\u05db\u05dd \u05d5\u05e6\u05e8\u05d5 \u05e7\u05e9\u05e8 \u05e2\u05dd \u05d4\u05e7\u05d4\u05dc \u05e9\u05dc\u05db\u05dd \u05d1\u05e7\u05dc\u05d5\u05ea.','Reach is already connected to another site.'=>'Reach \u05db\u05d1\u05e8 \u05de\u05d7\u05d5\u05d1\u05e8 \u05dc\u05d0\u05ea\u05e8 \u05d0\u05d7\u05e8.','Disconnect it to link this site instead.'=>'\u05e0\u05ea\u05e7 \u05d0\u05d5\u05ea\u05d5 \u05db\u05d3\u05d9 \u05dc\u05e7\u05e9\u05e8 \u05dc\u05d0\u05ea\u05e8 \u05d6\u05d4 \u05d1\u05de\u05e7\u05d5\u05dd.','Manage'=>'\u05e0\u05d4\u05dc','Start for free'=>'\u05d4\u05ea\u05d7\u05dc \u05d1\u05d7\u05d9\u05e0\u05dd','This month'=>'\u05d4\u05d7\u05d5\u05d3\u05e9','Your plan'=>'\u05d4\u05ea\u05d5\u05db\u05e0\u05d9\u05ea \u05e9\u05dc\u05da','Upgrade'=>'\u05e9\u05d3\u05e8\u05d5\u05d2','Emails'=>'\u05d3\u05d5\u05d0\"\u05dc','Sent'=>'\u05e0\u05e9\u05dc\u05d7','Remaining'=>'\u05e0\u05d5\u05ea\u05e8','Campaigns'=>'\u05e7\u05de\u05e4\u05d9\u05d9\u05e0\u05d9\u05dd','Average CTOR'=>'CTOR \u05de\u05de\u05d5\u05e6\u05e2','Subscribers'=>'\u05de\u05e0\u05d5\u05d9\u05d9\u05dd','New subscribers'=>'\u05de\u05e0\u05d5\u05d9\u05d9\u05dd \u05d7\u05d3\u05e9\u05d9\u05dd','Unsubscribes'=>'\u05d1\u05d9\u05d8\u05d5\u05dc \u05de\u05e0\u05d5\u05d9','Total subscribers'=>'\u05e1\u05da \u05d4\u05de\u05e0\u05d5\u05d9\u05d9\u05dd','Templates'=>'\u05ea\u05d1\u05e0\u05d9\u05d5\u05ea','Settings'=>'\u05d4\u05d2\u05d3\u05e8\u05d5\u05ea','Forms'=>'\u05d8\u05e4\u05e1\u05d9\u05dd','Add form'=>'\u05d4\u05d5\u05e1\u05e3 \u05d8\u05d5\u05e4\u05e1','Start collecting form submissions'=>'\u05d4\u05ea\u05d7\u05dc \u05dc\u05d0\u05e1\u05d5\u05e3 \u05d8\u05e4\u05e1\u05d9\u05dd \u05e9\u05e0\u05e9\u05dc\u05d7\u05d5','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\u05d1\u05d7\u05e8 \u05db\u05d9\u05e6\u05d3 \u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05e0\u05d4\u05dc \u05d8\u05e4\u05e1\u05d9\u05dd \u05d1\u05d0\u05ea\u05e8 \u05e9\u05dc\u05da. \u05e6\u05d5\u05e8 \u05d8\u05d5\u05e4\u05e1 \u05d7\u05d3\u05e9 \u05d1\u05d0\u05de\u05e6\u05e2\u05d5\u05ea Hostinger Reach \u05d0\u05d5 \u05d7\u05d1\u05e8 \u05ea\u05d5\u05e1\u05e3 \u05e6\u05d3 \u05e9\u05dc\u05d9\u05e9\u05d9.','Add more forms'=>'\u05d4\u05d5\u05e1\u05e3 \u05d8\u05e4\u05e1\u05d9\u05dd \u05e0\u05d5\u05e1\u05e4\u05d9\u05dd','Connect more forms to expand your contact list and capture leads from different pages.'=>'\u05d7\u05d1\u05e8 \u05d8\u05e4\u05e1\u05d9\u05dd \u05e0\u05d5\u05e1\u05e4\u05d9\u05dd \u05db\u05d3\u05d9 \u05dc\u05d4\u05e8\u05d7\u05d9\u05d1 \u05d0\u05ea \u05e8\u05e9\u05d9\u05de\u05ea \u05d0\u05e0\u05e9\u05d9 \u05d4\u05e7\u05e9\u05e8 \u05e9\u05dc\u05da \u05d5\u05dc\u05dc\u05db\u05d5\u05d3 \u05dc\u05d9\u05d3\u05d9\u05dd \u05de\u05d3\u05e4\u05d9\u05dd \u05e9\u05d5\u05e0\u05d9\u05dd.','New page'=>'\u05d3\u05e3 \u05d7\u05d3\u05e9','FAQ'=>'\u05e9\u05d0\u05dc\u05d5\u05ea \u05e0\u05e4\u05d5\u05e6\u05d5\u05ea','What is Hostinger Reach email marketing service?'=>'\u05de\u05d4\u05d5 \u05e9\u05d9\u05e8\u05d5\u05ea \u05d4\u05e9\u05d9\u05d5\u05d5\u05e7 \u05d1\u05d3\u05d5\u05d0\"\u05dc Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach \u05d4\u05d5\u05d0 \u05db\u05dc\u05d9 \u05e9\u05d9\u05d5\u05d5\u05e7 \u05d1\u05d3\u05d5\u05d0\"\u05dc \u05de\u05d1\u05d5\u05e1\u05e1 \u05d1\u05d9\u05e0\u05d4 \u05de\u05dc\u05d0\u05db\u05d5\u05ea\u05d9\u05ea \u05dc\u05e2\u05e1\u05e7\u05d9\u05dd \u05e7\u05d8\u05e0\u05d9\u05dd \u05d5\u05d9\u05d5\u05e6\u05e8\u05d9\u05dd. \u05d4\u05d5\u05d0 \u05ea\u05d5\u05de\u05da \u05d1\u05db\u05dc \u05ea\u05d4\u05dc\u05d9\u05da \u05d4\u05e9\u05d9\u05d5\u05d5\u05e7 \u05d1\u05d3\u05d5\u05d0\"\u05dc, \u05d4\u05d7\u05dc \u05de\u05d1\u05e0\u05d9\u05d9\u05ea \u05e8\u05e9\u05d9\u05de\u05d5\u05ea \u05d0\u05e0\u05e9\u05d9 \u05e7\u05e9\u05e8 \u05d5\u05e2\u05d3 \u05e9\u05dc\u05d9\u05d7\u05ea \u05e7\u05de\u05e4\u05d9\u05d9\u05e0\u05d9\u05dd \u05d5\u05de\u05e2\u05e7\u05d1 \u05d0\u05d7\u05e8 \u05ea\u05d5\u05e6\u05d0\u05d5\u05ea.','How is Hostinger Reach different from other email marketing apps?'=>'\u05d1\u05de\u05d4 Hostinger Reach \u05e9\u05d5\u05e0\u05d4 \u05de\u05d0\u05e4\u05dc\u05d9\u05e7\u05e6\u05d9\u05d5\u05ea \u05d0\u05d7\u05e8\u05d5\u05ea \u05dc\u05e9\u05d9\u05d5\u05d5\u05e7 \u05d1\u05d3\u05d5\u05d0\"\u05dc?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach \u05e0\u05d5\u05e6\u05e8 \u05de\u05ea\u05d5\u05da \u05de\u05d7\u05e9\u05d1\u05d4 \u05e2\u05dc \u05e4\u05e9\u05d8\u05d5\u05ea, \u05de\u05d4\u05d9\u05e8\u05d5\u05ea \u05d5\u05ea\u05d5\u05e6\u05d0\u05d5\u05ea \u2013 \u05dc\u05dc\u05d0 \u05e6\u05d5\u05e8\u05da \u05d1\u05e0\u05d9\u05e1\u05d9\u05d5\u05df \u05d1\u05e2\u05d9\u05e6\u05d5\u05d1 \u05d0\u05d5 \u05d1\u05e9\u05d9\u05d5\u05d5\u05e7. \u05d1\u05e0\u05d9\u05d2\u05d5\u05d3 \u05dc\u05e8\u05d5\u05d1 \u05db\u05dc\u05d9 \u05d4\u05d3\u05d5\u05d0\"\u05dc, \u05d1\u05dc\u05d1 Reach \u05e2\u05d5\u05de\u05d3 \u05d1\u05d5\u05e0\u05d4 \u05ea\u05d1\u05e0\u05d9\u05d5\u05ea \u05d4\u05de\u05d5\u05e0\u05e2 \u05e2\u05dc \u05d9\u05d3\u05d9 \u05d1\u05d9\u05e0\u05d4 \u05de\u05dc\u05d0\u05db\u05d5\u05ea\u05d9\u05ea. \u05d1\u05d9\u05df \u05d0\u05dd \u05de\u05d3\u05d5\u05d1\u05e8 \u05d1\u05d4\u05e9\u05e7\u05ea \u05de\u05d5\u05e6\u05e8, \u05de\u05d1\u05e6\u05e2 \u05de\u05d9\u05d5\u05d7\u05d3 \u05d0\u05d5 \u05e2\u05d3\u05db\u05d5\u05df \u05dc\u05e0\u05d9\u05d5\u05d6\u05dc\u05d8\u05e8, \u05d4\u05d5\u05d0 \u05d9\u05d5\u05e6\u05e8 \u05d1\u05d0\u05d5\u05e4\u05df \u05de\u05d9\u05d9\u05d3\u05d9 \u05d3\u05d5\u05d0\"\u05dc \u05de\u05e7\u05e6\u05d5\u05e2\u05d9 \u05d4\u05de\u05d5\u05ea\u05d0\u05dd \u05dc\u05de\u05db\u05e9\u05d9\u05e8\u05d9\u05dd \u05e0\u05d9\u05d9\u05d3\u05d9\u05dd. \u05d4\u05d5\u05d0 \u05dc\u05d0 \u05e8\u05e7 \u05db\u05d5\u05ea\u05d1 \u05d0\u05ea \u05d4\u05ea\u05d5\u05db\u05df \u05e2\u05d1\u05d5\u05e8\u05da, \u05d0\u05dc\u05d0 \u05d2\u05dd \u05de\u05e6\u05d9\u05e2 \u05d0\u05ea \u05d4\u05e4\u05e8\u05d9\u05e1\u05d4 \u05d4\u05d8\u05d5\u05d1\u05d4 \u05d1\u05d9\u05d5\u05ea\u05e8 \u05dc\u05d4\u05d5\u05d3\u05e2\u05d4 \u05e9\u05dc\u05da \u05d5\u05e9\u05d5\u05de\u05e8 \u05d0\u05ea \u05d4\u05d2\u05d3\u05e8\u05d5\u05ea \u05d4\u05e1\u05d2\u05e0\u05d5\u05df \u05e9\u05dc\u05da, \u05db\u05da \u05e9\u05dc\u05e2\u05d5\u05dc\u05dd \u05dc\u05d0 \u05ea\u05e6\u05d8\u05e8\u05da \u05dc\u05d4\u05ea\u05d7\u05d9\u05dc \u05de\u05d0\u05e4\u05e1.<br><br>\u05db\u05dc \u05ea\u05d1\u05e0\u05d9\u05ea \u05e0\u05d9\u05ea\u05e0\u05ea \u05dc\u05d4\u05ea\u05d0\u05de\u05d4 \u05d0\u05d9\u05e9\u05d9\u05ea, \u05db\u05da \u05e9\u05d4\u05d3\u05d5\u05d0\"\u05dc \u05e9\u05dc\u05da \u05d9\u05e9\u05e7\u05e3 \u05d0\u05ea \u05d4\u05de\u05e8\u05d0\u05d4, \u05d4\u05d0\u05d5\u05d5\u05d9\u05e8\u05d4 \u05d5\u05d4\u05e7\u05d5\u05dc \u05e9\u05dc \u05d4\u05de\u05d5\u05ea\u05d2 \u05e9\u05dc\u05da. \u05d5\u05de\u05db\u05d9\u05d5\u05d5\u05df \u05e9\u05d4\u05ea\u05d1\u05e0\u05d9\u05d5\u05ea \u05e0\u05d1\u05e0\u05d5\u05ea \u05e2\u05dc \u05e4\u05d9 \u05e9\u05d9\u05d8\u05d5\u05ea \u05e2\u05d1\u05d5\u05d3\u05d4 \u05de\u05d5\u05de\u05dc\u05e6\u05d5\u05ea \u05d5\u05de\u05d5\u05db\u05d7\u05d5\u05ea, \u05d4\u05df \u05de\u05d5\u05ea\u05d0\u05de\u05d5\u05ea \u05dc\u05e7\u05e8\u05d9\u05d0\u05d5\u05ea, \u05e0\u05d2\u05d9\u05e9\u05d5\u05ea \u05d5\u05de\u05e2\u05d5\u05e8\u05d1\u05d5\u05ea \u05d4\u05e7\u05d5\u05e8\u05d0\u05d9\u05dd.','How much does it cost to use Hostinger Reach?'=>'\u05db\u05de\u05d4 \u05e2\u05d5\u05dc\u05d4 \u05d4\u05e9\u05d9\u05de\u05d5\u05e9 \u05d1-Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach \u05de\u05e6\u05d9\u05e2\u05d4 \u05ea\u05d5\u05db\u05e0\u05d9\u05ea \u05d7\u05d9\u05e0\u05de\u05d9\u05ea \u05dc\u05e9\u05e0\u05d4 \u2013 \u05de\u05d5\u05e9\u05dc\u05de\u05ea \u05dc\u05d4\u05ea\u05d7\u05dc\u05d4. \u05d4\u05ea\u05d5\u05db\u05e0\u05d9\u05d5\u05ea \u05d1\u05ea\u05e9\u05dc\u05d5\u05dd \u05de\u05d1\u05d5\u05e1\u05e1\u05d5\u05ea \u05e2\u05dc \u05de\u05e1\u05e4\u05e8 \u05d0\u05e0\u05e9\u05d9 \u05d4\u05e7\u05e9\u05e8 \u05d4\u05d9\u05d9\u05d7\u05d5\u05d3\u05d9\u05d9\u05dd \u05e9\u05d0\u05ea\u05dd \u05de\u05e2\u05d5\u05e0\u05d9\u05d9\u05e0\u05d9\u05dd \u05dc\u05d4\u05d2\u05d9\u05e2 \u05d0\u05dc\u05d9\u05d4\u05dd \u05d5\u05e2\u05dc \u05de\u05e1\u05e4\u05e8 \u05d4\u05de\u05d9\u05d9\u05dc\u05d9\u05dd \u05e9\u05d0\u05ea\u05dd \u05e9\u05d5\u05dc\u05d7\u05d9\u05dd \u05de\u05d3\u05d9 \u05d7\u05d5\u05d3\u05e9. \u05db\u05db\u05dc \u05e9\u05d4\u05e7\u05d4\u05dc \u05e9\u05dc\u05db\u05dd \u05d2\u05d3\u05dc, \u05ea\u05d5\u05db\u05dc\u05d5 \u05dc\u05e9\u05d3\u05e8\u05d2 \u05dc\u05ea\u05d5\u05db\u05e0\u05d9\u05ea \u05d4\u05de\u05ea\u05d0\u05d9\u05de\u05d4 \u05dc\u05e6\u05e8\u05db\u05d9\u05dd \u05e9\u05dc\u05db\u05dd. Reach \u05dc\u05d0 \u05de\u05d2\u05d1\u05d9\u05dc\u05d4 \u05d0\u05ea \u05e8\u05e9\u05d9\u05de\u05ea \u05d0\u05e0\u05e9\u05d9 \u05d4\u05e7\u05e9\u05e8 \u05e9\u05dc\u05db\u05dd, \u05db\u05da \u05e9\u05d0\u05ea\u05dd \u05dc\u05d0 \u05e6\u05e8\u05d9\u05db\u05d9\u05dd \u05dc\u05d3\u05d0\u05d5\u05d2 \u05dc\u05d0\u05d5\u05d1\u05d3\u05df \u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05d5\u05ea\u05d5\u05db\u05dc\u05d5 \u05dc\u05d4\u05d2\u05d3\u05d9\u05dc \u05d0\u05ea \u05d4\u05e7\u05d4\u05dc \u05e9\u05dc\u05db\u05dd \u05d1\u05d0\u05d5\u05e4\u05df \u05e2\u05e7\u05d1\u05d9.','opens in new tab'=>'\u05e0\u05e4\u05ea\u05d7 \u05d1\u05dc\u05e9\u05d5\u05e0\u05d9\u05ea \u05d7\u05d3\u05e9\u05d4','Banner background image for'=>'\u05ea\u05de\u05d5\u05e0\u05ea \u05e8\u05e7\u05e2 \u05dc\u05d1\u05d0\u05e0\u05e8 \u05e2\u05d1\u05d5\u05e8','Background image for'=>'\u05ea\u05de\u05d5\u05e0\u05ea \u05e8\u05e7\u05e2 \u05e2\u05d1\u05d5\u05e8','usage statistics'=>'\u05e1\u05d8\u05d8\u05d9\u05e1\u05d8\u05d9\u05e7\u05ea \u05e9\u05d9\u05de\u05d5\u05e9','remaining out of'=>'\u05e0\u05e9\u05d0\u05e8 \u05de\u05d7\u05d5\u05e5 \u05dc','total'=>'\u05e1\u05da \u05d4\u05db\u05dc','Progress: {current} of {total} used ({percentage}%)'=>'\u05d4\u05ea\u05e7\u05d3\u05de\u05d5\u05ea: {current} \u05de\u05ea\u05d5\u05da {total} \u05d1\u05e9\u05d9\u05de\u05d5\u05e9 ({percentage}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\u05e9\u05d9\u05e2\u05d5\u05e8 \u05d4\u05e7\u05dc\u05d9\u05e7\u05d9\u05dd \u05dc\u05e4\u05ea\u05d9\u05d7\u05d4 \u05de\u05e6\u05d9\u05d9\u05df \u05d0\u05d9\u05d6\u05d4 \u05d0\u05d7\u05d5\u05d6 \u05de\u05d4\u05e4\u05ea\u05d9\u05d7\u05d5\u05ea \u05d4\u05d5\u05d1\u05d9\u05dc\u05d5 \u05d2\u05dd \u05dc\u05e7\u05dc\u05d9\u05e7. \u05e9\u05d9\u05e2\u05d5\u05e8 \u05e7\u05dc\u05d9\u05e7\u05d9\u05dd \u05dc\u05e4\u05ea\u05d9\u05d7\u05d4 \u05d8\u05d5\u05d1 \u05d4\u05d5\u05d0 6-17%, \u05d1\u05d4\u05ea\u05d0\u05dd \u05dc\u05e2\u05e0\u05e3 \u05e9\u05d1\u05d5 \u05d0\u05ea\u05d4 \u05e4\u05d5\u05e2\u05dc.','Add form clicked'=>'\u05d4\u05d5\u05e1\u05e3 \u05d8\u05d5\u05e4\u05e1 \u05dc\u05d7\u05e5','Select page'=>'\u05d1\u05d7\u05e8 \u05d3\u05e3','Plugin'=>'\u05ea\u05d5\u05e1\u05e3','Entries'=>'\u05e8\u05e9\u05d5\u05de\u05d5\u05ea','Status'=>'\u05e1\u05d8\u05d8\u05d5\u05e1','Active'=>'\u05e4\u05e2\u05d9\u05dc','Inactive'=>'\u05dc\u05d0 \u05e4\u05e2\u05d9\u05dc','Go to plugin'=>'\u05e2\u05d1\u05d5\u05e8 \u05dc\u05ea\u05d5\u05e1\u05e3','Disconnect'=>'\u05e0\u05ea\u05e7','View form'=>'\u05d4\u05e6\u05d2 \u05d8\u05d5\u05e4\u05e1','Edit form'=>'\u05e2\u05e8\u05d5\u05da \u05d8\u05d5\u05e4\u05e1','Loading plugins...'=>'\u05d8\u05e2\u05d9\u05e0\u05ea \u05ea\u05d5\u05e1\u05e4\u05d9\u05dd...','Expand {pluginName} details'=>'\u05d4\u05e8\u05d7\u05d1 \u05d0\u05ea \u05e4\u05e8\u05d8\u05d9 {pluginName}','Collapse {pluginName} details'=>'\u05e7\u05e4\u05dc {pluginName} \u05e4\u05e8\u05d8\u05d9\u05dd','Thanks for subscribing'=>'\u05ea\u05d5\u05d3\u05d4 \u05e2\u05dc \u05d4\u05d4\u05e8\u05e9\u05de\u05d4','Something went wrong. Please try again'=>'\u05de\u05e9\u05d4\u05d5 \u05d4\u05e9\u05ea\u05d1\u05e9. \u05d0\u05e0\u05d0 \u05e0\u05e1\u05d4 \u05e9\u05d5\u05d1','Form ID'=>'\u05de\u05e1\u05e4\u05e8 \u05d8\u05d5\u05e4\u05e1','Unique identifier for this form'=>'\u05de\u05d6\u05d4\u05d4 \u05d9\u05d9\u05d7\u05d5\u05d3\u05d9 \u05dc\u05d8\u05d5\u05e4\u05e1 \u05d6\u05d4','Contact List'=>'\u05e8\u05e9\u05d9\u05de\u05ea \u05d0\u05e0\u05e9\u05d9 \u05e7\u05e9\u05e8','Create New List'=>'\u05e6\u05d5\u05e8 \u05e8\u05e9\u05d9\u05de\u05d4 \u05d7\u05d3\u05e9\u05d4','New Contact List'=>'\u05e8\u05e9\u05d9\u05de\u05ea \u05d0\u05e0\u05e9\u05d9 \u05e7\u05e9\u05e8 \u05d7\u05d3\u05e9\u05d9\u05dd','Name for the new Contact List'=>'\u05e9\u05dd \u05dc\u05e8\u05e9\u05d9\u05de\u05ea \u05d0\u05e0\u05e9\u05d9 \u05d4\u05e7\u05e9\u05e8 \u05d4\u05d7\u05d3\u05e9\u05d4','Show Name Field?'=>'\u05d4\u05e6\u05d2 \u05e9\u05d3\u05d4 \u05e9\u05dd?','Show Surname Field?'=>'\u05d4\u05e6\u05d2 \u05e9\u05d3\u05d4 \u05e9\u05dd \u05de\u05e9\u05e4\u05d7\u05d4?','Reach Subscription Form'=>'\u05d8\u05d5\u05e4\u05e1 \u05de\u05e0\u05d5\u05d9 \u05dc-Reach','block title\u0004Reach Subscription Form'=>'\u05d8\u05d5\u05e4\u05e1 \u05de\u05e0\u05d5\u05d9 \u05dc-Reach','block description\u0004Subscription form for Hostinger Reach'=>'\u05d8\u05d5\u05e4\u05e1 \u05de\u05e0\u05d5\u05d9 \u05dc-Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ar.l10n.php","ext":"php","size":10594,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Arabic','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:00+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'ar','plural-forms'=>'nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100 >= 3 && n%100<=10 ? 3 : n%100 >= 11 && n%100<=99 ? 4 : 5;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'\u0647\u0648\u0633\u062a\u0646\u062c\u0631 \u0631\u064a\u062a\u0634','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'\u0627\u062f\u0645\u062c \u0645\u0648\u0642\u0639 \u0648\u0648\u0631\u062f\u0628\u0631\u064a\u0633 \u0627\u0644\u062e\u0627\u0635 \u0628\u0643 \u0645\u0639 Hostinger Reach.','Hostinger'=>'\u0647\u0648\u0633\u062a\u0646\u062c\u0631','Attention:'=>'\u0627\u0646\u062a\u0628\u0627\u0647:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'\u064a\u062a\u0637\u0644\u0628 Hostinger Reach \u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649 \u0645\u0646 \u0625\u0635\u062f\u0627\u0631 PHP \u0645\u0646 <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'\u0623\u0646\u062a \u062a\u0642\u0648\u0645 \u0628\u062a\u0634\u063a\u064a\u0644 <b>%s<\/b> \u0625\u0635\u062f\u0627\u0631 PHP.','Email Marketing'=>'\u0627\u0644\u062a\u0633\u0648\u064a\u0642 \u0639\u0628\u0631 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a','Thanks for subscribing.'=>'\u0634\u0643\u0631\u0627\u064b \u0644\u0627\u0634\u062a\u0631\u0627\u0643\u0643','Something went wrong. Please try again.'=>'\u062d\u062f\u062b \u062e\u0637\u0623 \u0645\u0627. \u064a\u0631\u062c\u0649 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649.','Email'=>'\u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a','Name'=>'\u0627\u0644\u0627\u0633\u0645','Surname'=>'\u0627\u0644\u0644\u0642\u0628','Subscribe'=>'\u0627\u0634\u062a\u0631\u0627\u0643','Contact Form 7'=>'\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0627\u062a\u0635\u0627\u0644 7','WP Forms Lite %s'=>'\u0646\u0645\u0627\u0630\u062c WP Forms Lite %s','WP Forms Lite'=>'\u0646\u0645\u0627\u0630\u062c WP Forms Lite','Something went wrong'=>'\u062d\u062f\u062b \u062e\u0637\u0623 \u0645\u0627','Welcome to Reach'=>'\u0645\u0631\u062d\u0628\u0627\u064b \u0628\u0643 \u0641\u064a \u0631\u064a\u062a\u0634','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'\u0623\u0646\u0634\u0626 \u062d\u0645\u0644\u0627\u062a \u0628\u0631\u064a\u062f \u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0642\u0648\u0627\u0644\u0628 \u0645\u0635\u0645\u0645\u0629 \u0628\u0627\u0644\u0630\u0643\u0627\u0621 \u0627\u0644\u0627\u0635\u0637\u0646\u0627\u0639\u064a \u062a\u062a\u0646\u0627\u0633\u0628 \u0645\u0639 \u0623\u0633\u0644\u0648\u0628\u0643. \u0642\u0645 \u0628\u0627\u0644\u0645\u0632\u0627\u0645\u0646\u0629 \u0627\u0644\u0641\u0648\u0631\u064a\u0629 \u0645\u0639 \u0645\u0648\u0642\u0639 WordPress \u0627\u0644\u062e\u0627\u0635 \u0628\u0643 \u0648\u062a\u0648\u0627\u0635\u0644 \u0645\u0639 \u062c\u0645\u0647\u0648\u0631\u0643 \u0628\u0633\u0647\u0648\u0644\u0629.','Reach is already connected to another site.'=>'\u0631\u064a\u062a\u0634 \u0645\u062a\u0635\u0644 \u0628\u0627\u0644\u0641\u0639\u0644 \u0628\u0645\u0648\u0642\u0639 \u0622\u062e\u0631.','Disconnect it to link this site instead.'=>'\u0627\u0641\u0635\u0644\u0647 \u0644\u0631\u0628\u0637 \u0647\u0630\u0627 \u0627\u0644\u0645\u0648\u0642\u0639 \u0628\u062f\u0644\u0627\u064b \u0645\u0646 \u0630\u0644\u0643.','Manage'=>'\u0627\u0644\u0625\u062f\u0627\u0631\u0629','Start for free'=>'\u0627\u0628\u062f\u0623 \u0645\u062c\u0627\u0646\u0627\u064b','This month'=>'\u0647\u0630\u0627 \u0627\u0644\u0634\u0647\u0631','Your plan'=>'\u062e\u0637\u062a\u0643','Upgrade'=>'\u0627\u0644\u062a\u0631\u0642\u064a\u0629','Emails'=>'\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a','Sent'=>'\u062a\u0645 \u0627\u0644\u0625\u0631\u0633\u0627\u0644','Remaining'=>'\u0627\u0644\u0645\u062a\u0628\u0642\u064a','Campaigns'=>'\u0627\u0644\u062d\u0645\u0644\u0627\u062a','Average CTOR'=>'\u0645\u062a\u0648\u0633\u0637 \u0633\u0639\u0631 \u0627\u0644\u0641\u0627\u0626\u062f\u0629 \u0627\u0644\u0645\u0642\u0637\u0648\u0639\u0629','Subscribers'=>'\u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0648\u0646','New subscribers'=>'\u0627\u0644\u0645\u0634\u062a\u0631\u0643\u0648\u0646 \u0627\u0644\u062c\u062f\u062f','Unsubscribes'=>'\u0625\u0644\u063a\u0627\u0621 \u0627\u0634\u062a\u0631\u0627\u0643','Total subscribers'=>'\u0625\u062c\u0645\u0627\u0644\u064a \u0627\u0644\u0645\u0634\u062a\u0631\u0643\u064a\u0646','Templates'=>'\u0627\u0644\u0642\u0648\u0627\u0644\u0628','Settings'=>'\u0627\u0644\u0625\u0639\u062f\u0627\u062f\u0627\u062a','Forms'=>'\u0627\u0644\u0646\u0645\u0627\u0630\u062c','Add form'=>'\u0625\u0636\u0627\u0641\u0629 \u0646\u0645\u0648\u0630\u062c','Start collecting form submissions'=>'\u0627\u0644\u0628\u062f\u0621 \u0641\u064a \u062c\u0645\u0639 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062a\u0642\u062f\u064a\u0645\u0627\u062a \u0627\u0644\u0645\u0642\u062f\u0645\u0629 \u0645\u0646 \u0627\u0644\u0646\u0645\u0627\u0630\u062c','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\u0627\u062e\u062a\u0631 \u0627\u0644\u0637\u0631\u064a\u0642\u0629 \u0627\u0644\u062a\u064a \u062a\u0631\u063a\u0628 \u0641\u064a \u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0646\u0645\u0627\u0630\u062c \u0639\u0644\u0649 \u0645\u0648\u0642\u0639\u0643 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a. \u0623\u0646\u0634\u0626 \u0646\u0645\u0648\u0630\u062c\u064b\u0627 \u062c\u062f\u064a\u062f\u064b\u0627 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 Hostinger Reach \u0623\u0648 \u0642\u0645 \u0628\u062a\u0648\u0635\u064a\u0644 \u0645\u0643\u0648\u0646 \u0625\u0636\u0627\u0641\u064a \u062a\u0627\u0628\u0639 \u0644\u062c\u0647\u0629 \u062e\u0627\u0631\u062c\u064a\u0629.','Add more forms'=>'\u0625\u0636\u0627\u0641\u0629 \u0627\u0644\u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0644\u0646\u0645\u0627\u0630\u062c','Connect more forms to expand your contact list and capture leads from different pages.'=>'\u0642\u0645 \u0628\u062a\u0648\u0635\u064a\u0644 \u0627\u0644\u0645\u0632\u064a\u062f \u0645\u0646 \u0627\u0644\u0646\u0645\u0627\u0630\u062c \u0644\u062a\u0648\u0633\u064a\u0639 \u0642\u0627\u0626\u0645\u0629 \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u0648\u0627\u0644\u062a\u0642\u0627\u0637 \u0627\u0644\u0639\u0645\u0644\u0627\u0621 \u0627\u0644\u0645\u062d\u062a\u0645\u0644\u064a\u0646 \u0645\u0646 \u0635\u0641\u062d\u0627\u062a \u0645\u062e\u062a\u0644\u0641\u0629.','New page'=>'\u0635\u0641\u062d\u0629 \u062c\u062f\u064a\u062f\u0629','FAQ'=>'\u0627\u0644\u0623\u0633\u0626\u0644\u0629 \u0627\u0644\u0634\u0627\u0626\u0639\u0629','What is Hostinger Reach email marketing service?'=>'\u0645\u0627 \u0647\u064a \u062e\u062f\u0645\u0629 Hostinger Reach \u0644\u0644\u062a\u0633\u0648\u064a\u0642 \u0639\u0628\u0631 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u061f','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'\u0647\u0648\u0633\u062a\u0646\u062c\u0631 \u0631\u064a\u062a\u0634 \u0647\u0648 \u0623\u062f\u0627\u0629 \u062a\u0633\u0648\u064a\u0642 \u0639\u0628\u0631 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0645\u062f\u0639\u0648\u0645\u0629 \u0628\u0627\u0644\u0630\u0643\u0627\u0621 \u0627\u0644\u0627\u0635\u0637\u0646\u0627\u0639\u064a \u0644\u0644\u0634\u0631\u0643\u0627\u062a \u0627\u0644\u0635\u063a\u064a\u0631\u0629 \u0648\u0627\u0644\u0645\u0628\u062f\u0639\u064a\u0646. \u0648\u0647\u064a \u062a\u062f\u0639\u0645 \u0631\u062d\u0644\u0629 \u0627\u0644\u062a\u0633\u0648\u064a\u0642 \u0639\u0628\u0631 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0628\u0627\u0644\u0643\u0627\u0645\u0644 - \u0645\u0646 \u0625\u0646\u0634\u0627\u0621 \u0642\u0648\u0627\u0626\u0645 \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0625\u0644\u0649 \u0625\u0631\u0633\u0627\u0644 \u0627\u0644\u062d\u0645\u0644\u0627\u062a \u0648\u062a\u062a\u0628\u0639 \u0627\u0644\u0646\u062a\u0627\u0626\u062c.','How is Hostinger Reach different from other email marketing apps?'=>'\u0643\u064a\u0641 \u064a\u062e\u062a\u0644\u0641 Hostinger Reach \u0639\u0646 \u062a\u0637\u0628\u064a\u0642\u0627\u062a \u0627\u0644\u062a\u0633\u0648\u064a\u0642 \u0639\u0628\u0631 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0627\u0644\u0623\u062e\u0631\u0649\u061f','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'\u062a\u0645 \u062a\u0635\u0645\u064a\u0645 Hostinger Reach \u0645\u0646 \u0623\u062c\u0644 \u0627\u0644\u0628\u0633\u0627\u0637\u0629 \u0648\u0627\u0644\u0633\u0631\u0639\u0629 \u0648\u0627\u0644\u0646\u062a\u0627\u0626\u062c - \u0644\u0627 \u062d\u0627\u062c\u0629 \u0625\u0644\u0649 \u062e\u0628\u0631\u0629 \u0641\u064a \u0627\u0644\u062a\u0635\u0645\u064a\u0645 \u0623\u0648 \u0627\u0644\u062a\u0633\u0648\u064a\u0642. \u0639\u0644\u0649 \u0639\u0643\u0633 \u0645\u0639\u0638\u0645 \u0623\u062f\u0648\u0627\u062a \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u060c \u0641\u0625\u0646 \u062c\u0648\u0647\u0631 Reach \u0647\u0648 \u0645\u0646\u0634\u0626 \u0627\u0644\u0642\u0648\u0627\u0644\u0628 \u0627\u0644\u0645\u062f\u0639\u0648\u0645 \u0628\u0627\u0644\u0630\u0643\u0627\u0621 \u0627\u0644\u0627\u0635\u0637\u0646\u0627\u0639\u064a. \u0633\u0648\u0627\u0621 \u0643\u0627\u0646 \u0625\u0637\u0644\u0627\u0642 \u0645\u0646\u062a\u062c \u0623\u0648 \u0639\u0631\u0636\u064b\u0627 \u062e\u0627\u0635\u064b\u0627 \u0623\u0648 \u062a\u062d\u062f\u064a\u062b\u064b\u0627 \u0644\u0644\u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629\u060c \u0641\u0625\u0646\u0647 \u064a\u0635\u0645\u0645 \u0639\u0644\u0649 \u0627\u0644\u0641\u0648\u0631 \u0628\u0631\u064a\u062f\u064b\u0627 \u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u064b\u0627 \u0627\u062d\u062a\u0631\u0627\u0641\u064a\u064b\u0627 \u0645\u062a\u0648\u0627\u0641\u0642\u064b\u0627 \u0645\u0639 \u0627\u0644\u062c\u0648\u0651\u0627\u0644. \u0641\u0647\u0648 \u0644\u0627 \u064a\u0643\u062a\u0628 \u0627\u0644\u0645\u062d\u062a\u0648\u0649 \u0646\u064a\u0627\u0628\u0629\u064b \u0639\u0646\u0643 \u0641\u062d\u0633\u0628\u060c \u0628\u0644 \u064a\u0642\u062a\u0631\u062d \u0623\u064a\u0636\u064b\u0627 \u0623\u0641\u0636\u0644 \u062a\u062e\u0637\u064a\u0637 \u0644\u0631\u0633\u0627\u0644\u062a\u0643 \u0648\u064a\u062d\u0641\u0638 \u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0623\u0633\u0644\u0648\u0628\u0643 \u062d\u062a\u0649 \u0644\u0627 \u062a\u0628\u062f\u0623 \u0645\u0646 \u0627\u0644\u0635\u0641\u0631. <br><br>\u0643\u0644 \u0642\u0627\u0644\u0628 \u0642\u0627\u0628\u0644 \u0644\u0644\u062a\u062e\u0635\u064a\u0635\u060c \u0628\u062d\u064a\u062b \u062a\u0639\u0643\u0633 \u0631\u0633\u0627\u0626\u0644\u0643 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a\u0629 \u0634\u0643\u0644 \u0639\u0644\u0627\u0645\u062a\u0643 \u0627\u0644\u062a\u062c\u0627\u0631\u064a\u0629 \u0648\u0645\u0638\u0647\u0631\u0647\u0627 \u0648\u0635\u0648\u062a\u0647\u0627. \u0648\u0646\u0638\u0631\u064b\u0627 \u0644\u0623\u0646 \u0627\u0644\u0642\u0648\u0627\u0644\u0628 \u0645\u0635\u0645\u0645\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0623\u0641\u0636\u0644 \u0627\u0644\u0645\u0645\u0627\u0631\u0633\u0627\u062a \u0627\u0644\u062a\u064a \u0623\u062b\u0628\u062a\u062a \u062c\u062f\u0648\u0627\u0647\u0627\u060c \u0641\u0642\u062f \u062a\u0645 \u062a\u062d\u0633\u064a\u0646\u0647\u0627 \u0645\u0646 \u0623\u062c\u0644 \u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0642\u0631\u0627\u0621\u0629 \u0648\u0633\u0647\u0648\u0644\u0629 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u064a\u0647\u0627 \u0648\u062a\u0641\u0627\u0639\u0644 \u0627\u0644\u0642\u0627\u0631\u0626.','How much does it cost to use Hostinger Reach?'=>'\u0645\u0627 \u0647\u064a \u062a\u0643\u0644\u0641\u0629 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 Hostinger Reach\u061f','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'\u064a\u0642\u062f\u0645 Reach \u062e\u0637\u0629 \u0645\u062c\u0627\u0646\u064a\u0629 \u0644\u0645\u062f\u0629 \u0639\u0627\u0645 \u0648\u0627\u062d\u062f - \u0645\u062b\u0627\u0644\u064a\u0629 \u0644\u0644\u0628\u062f\u0621. \u062a\u0639\u062a\u0645\u062f \u0627\u0644\u062e\u0637\u0637 \u0627\u0644\u0645\u062f\u0641\u0648\u0639\u0629 \u0639\u0644\u0649 \u0639\u062f\u062f \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u0641\u0631\u064a\u062f\u0629 \u0627\u0644\u062a\u064a \u062a\u0647\u062f\u0641 \u0625\u0644\u0649 \u0627\u0644\u0648\u0635\u0648\u0644 \u0625\u0644\u064a\u0647\u0627 \u0648\u0639\u062f\u062f \u0631\u0633\u0627\u0626\u0644 \u0627\u0644\u0628\u0631\u064a\u062f \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a \u0627\u0644\u062a\u064a \u062a\u0631\u0633\u0644\u0647\u0627 \u0634\u0647\u0631\u064a\u064b\u0627. \u0648\u0645\u0639 \u0646\u0645\u0648 \u062c\u0645\u0647\u0648\u0631\u0643\u060c \u064a\u0645\u0643\u0646\u0643 \u0627\u0644\u062a\u0631\u0642\u064a\u0629 \u0625\u0644\u0649 \u062e\u0637\u0629 \u062a\u0646\u0627\u0633\u0628 \u0627\u062d\u062a\u064a\u0627\u062c\u0627\u062a\u0643. \u0644\u0627 \u062a\u062d\u062f \u0628\u0627\u0642\u0629 Reach \u0645\u0646 \u0642\u0627\u0626\u0645\u0629 \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643\u060c \u0644\u0630\u0644\u0643 \u0644\u0627 \u062f\u0627\u0639\u064a \u0644\u0644\u0642\u0644\u0642 \u0628\u0634\u0623\u0646 \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0627\u0644\u0645\u0641\u0642\u0648\u062f\u0629 \u0648\u064a\u0645\u0643\u0646\u0643 \u0632\u064a\u0627\u062f\u0629 \u062c\u0645\u0647\u0648\u0631\u0643 \u0628\u0627\u0633\u062a\u0645\u0631\u0627\u0631.','opens in new tab'=>'\u064a\u0641\u062a\u062d \u0641\u064a \u0639\u0644\u0627\u0645\u0629 \u062a\u0628\u0648\u064a\u0628 \u062c\u062f\u064a\u062f\u0629','Banner background image for'=>'\u0635\u0648\u0631\u0629 \u062e\u0644\u0641\u064a\u0629 \u0627\u0644\u0634\u0639\u0627\u0631 \u0644\u0640','Background image for'=>'\u0635\u0648\u0631\u0629 \u0627\u0644\u062e\u0644\u0641\u064a\u0629 \u0644','usage statistics'=>'\u0625\u062d\u0635\u0627\u0626\u064a\u0627\u062a \u0627\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645','remaining out of'=>'\u0627\u0644\u0645\u062a\u0628\u0642\u064a \u0645\u0646','total'=>'\u0627\u0644\u0625\u062c\u0645\u0627\u0644\u064a','Progress: {current} of {total} used ({percentage}%)'=>'\u0627\u0644\u062a\u0642\u062f\u0645: {\u0627\u0644\u062d\u0627\u0644\u064a} \u0645\u0646 {\u0627\u0644\u0625\u062c\u0645\u0627\u0644\u064a} \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 ({\u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629} %)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\u064a\u062e\u0628\u0631\u0643 \u0645\u0639\u062f\u0644 \u0627\u0644\u0646\u0642\u0631\u0627\u062a \u0625\u0644\u0649 \u0627\u0644\u0641\u062a\u062d \u0645\u0627 \u0647\u064a \u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064a\u0629 \u0644\u0641\u062a\u062d \u0627\u0644\u0625\u0639\u0644\u0627\u0646\u0627\u062a \u0627\u0644\u062a\u064a \u0646\u062a\u062c \u0639\u0646\u0647\u0627 \u0646\u0642\u0631\u0629 \u0623\u064a\u0636\u064b\u0627. \u0646\u0633\u0628\u0629 \u0627\u0644\u0646\u0642\u0631 \u0625\u0644\u0649 \u0627\u0644\u0641\u062a\u062d \u0627\u0644\u062c\u064a\u062f\u0629 \u0647\u064a 6-17%\u060c \u062d\u0633\u0628 \u0645\u062c\u0627\u0644 \u0639\u0645\u0644\u0643.','Add form clicked'=>'\u062a\u0645 \u0627\u0644\u0646\u0642\u0631 \u0641\u0648\u0642 \u0625\u0636\u0627\u0641\u0629 \u0646\u0645\u0648\u0630\u062c \u0625\u0636\u0627\u0641\u0629','Select page'=>'\u0627\u062e\u062a\u0631 \u0627\u0644\u0635\u0641\u062d\u0629','Plugin'=>'\u0627\u0644\u0645\u0643\u0648\u0651\u0646 \u0627\u0644\u0625\u0636\u0627\u0641\u064a','Entries'=>'\u0627\u0644\u0645\u062f\u062e\u0644\u0627\u062a','Status'=>'\u0627\u0644\u062d\u0627\u0644\u0629','Active'=>'\u0646\u0634\u0637','Inactive'=>'\u063a\u064a\u0631 \u0646\u0634\u0637','Go to plugin'=>'\u0627\u0646\u062a\u0642\u0644 \u0625\u0644\u0649 \u0627\u0644\u0645\u0643\u0648\u0646 \u0627\u0644\u0625\u0636\u0627\u0641\u064a','Disconnect'=>'\u0642\u0637\u0639 \u0627\u0644\u0627\u062a\u0635\u0627\u0644','View form'=>'\u0639\u0631\u0636 \u0627\u0644\u0646\u0645\u0648\u0630\u062c','Edit form'=>'\u062a\u062d\u0631\u064a\u0631 \u0627\u0644\u0646\u0645\u0648\u0630\u062c','Loading plugins...'=>'\u062a\u062d\u0645\u064a\u0644 \u0627\u0644\u0645\u0643\u0648\u0646\u0627\u062a \u0627\u0644\u0625\u0636\u0627\u0641\u064a\u0629...','Expand {pluginName} details'=>'\u0642\u0645 \u0628\u062a\u0648\u0633\u064a\u0639 {\u0627\u0633\u0645 \u0627\u0644\u0645\u0643\u0648\u0646 \u0627\u0644\u0625\u0636\u0627\u0641\u064a} \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644','Collapse {pluginName} details'=>'\u0637\u064a {\u0627\u0633\u0645 \u0627\u0644\u0645\u0643\u0648\u0646 \u0627\u0644\u0625\u0636\u0627\u0641\u064a} \u0627\u0644\u062a\u0641\u0627\u0635\u064a\u0644','Thanks for subscribing'=>'\u0634\u0643\u0631\u0627\u064b \u0644\u0627\u0634\u062a\u0631\u0627\u0643\u0643','Something went wrong. Please try again'=>'\u062d\u062f\u062b \u062e\u0637\u0623 \u0645\u0627. \u064a\u0631\u062c\u0649 \u0627\u0644\u0645\u062d\u0627\u0648\u0644\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649','Form ID'=>'\u0645\u0639\u0631\u0651\u0641 \u0627\u0644\u0646\u0645\u0648\u0630\u062c','Unique identifier for this form'=>'\u0627\u0644\u0645\u0639\u0631\u0641 \u0627\u0644\u0641\u0631\u064a\u062f \u0644\u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062c','Contact List'=>'\u0642\u0627\u0626\u0645\u0629 \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644','Create New List'=>'\u0625\u0646\u0634\u0627\u0621 \u0642\u0627\u0626\u0645\u0629 \u062c\u062f\u064a\u062f\u0629','New Contact List'=>'\u0642\u0627\u0626\u0645\u0629 \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u062c\u062f\u064a\u062f\u0629','Name for the new Contact List'=>'\u0627\u0633\u0645 \u0642\u0627\u0626\u0645\u0629 \u062c\u0647\u0627\u062a \u0627\u0644\u0627\u062a\u0635\u0627\u0644 \u0627\u0644\u062c\u062f\u064a\u062f\u0629','Show Name Field?'=>'\u0625\u0638\u0647\u0627\u0631 \u062d\u0642\u0644 \u0627\u0644\u0627\u0633\u0645\u061f','Show Surname Field?'=>'\u0625\u0638\u0647\u0627\u0631 \u062d\u0642\u0644 \u0627\u0644\u0644\u0642\u0628\u061f','Reach Subscription Form'=>'\u0627\u0633\u062a\u0645\u0627\u0631\u0629 \u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0641\u064a \u0631\u064a\u062a\u0634','block title\u0004Reach Subscription Form'=>'\u0627\u0633\u062a\u0645\u0627\u0631\u0629 \u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0641\u064a \u0631\u064a\u062a\u0634','block description\u0004Subscription form for Hostinger Reach'=>'\u0627\u0633\u062a\u0645\u0627\u0631\u0629 \u0627\u0644\u0627\u0634\u062a\u0631\u0627\u0643 \u0641\u064a Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-uk-40280f641851c0bceee91722c888f369.json","ext":"json","size":3472,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"uk\",\"plural-forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Connect Now\":[\"\\u041f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0456\\u0442\\u044c\\u0441\\u044f \\u0437\\u0430\\u0440\\u0430\\u0437\"],\"Contact List\":[\"\\u0421\\u043f\\u0438\\u0441\\u043e\\u043a \\u043a\\u043e\\u043d\\u0442\\u0430\\u043a\\u0442\\u0456\\u0432\"],\"Create New List\":[\"\\u0421\\u0442\\u0432\\u043e\\u0440\\u0438\\u0442\\u0438 \\u043d\\u043e\\u0432\\u0438\\u0439 \\u0441\\u043f\\u0438\\u0441\\u043e\\u043a\"],\"Email\":[\"\\u0415\\u043b\\u0435\\u043a\\u0442\\u0440\\u043e\\u043d\\u043d\\u0430 \\u043f\\u043e\\u0448\\u0442\\u0430\"],\"Form ID\":[\"\\u0406\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0456\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0444\\u043e\\u0440\\u043c\\u0438\"],\"Name\":[\"\\u0406\\u043c'\\u044f\"],\"Name for the new Contact List\":[\"\\u0406\\u043c'\\u044f \\u0434\\u043b\\u044f \\u043d\\u043e\\u0432\\u043e\\u0433\\u043e \\u0441\\u043f\\u0438\\u0441\\u043a\\u0443 \\u043a\\u043e\\u043d\\u0442\\u0430\\u043a\\u0442\\u0456\\u0432\"],\"New Contact List\":[\"\\u041d\\u043e\\u0432\\u0438\\u0439 \\u0441\\u043f\\u0438\\u0441\\u043e\\u043a \\u043a\\u043e\\u043d\\u0442\\u0430\\u043a\\u0442\\u0456\\u0432\"],\"Reach Subscription Form\":[\"\\u0424\\u043e\\u0440\\u043c\\u0430 \\u043f\\u0456\\u0434\\u043f\\u0438\\u0441\\u043a\\u0438 \\u043d\\u0430 \\u0440\\u043e\\u0437\\u0441\\u0438\\u043b\\u043a\\u0443\"],\"Settings\":[\"\\u041d\\u0430\\u043b\\u0430\\u0448\\u0442\\u0443\\u0432\\u0430\\u043d\\u043d\\u044f\"],\"Show Name Field?\":[\"\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u0438 \\u043f\\u043e\\u043b\\u0435 \\\"\\u0406\\u043c'\\u044f\\\"?\"],\"Show Surname Field?\":[\"\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u0438 \\u043f\\u043e\\u043b\\u0435 \\\"\\u041f\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\\\"?\"],\"Something went wrong. Please try again\":[\"\\u0429\\u043e\\u0441\\u044c \\u043f\\u0456\\u0448\\u043b\\u043e \\u043d\\u0435 \\u0442\\u0430\\u043a. \\u0411\\u0443\\u0434\\u044c \\u043b\\u0430\\u0441\\u043a\\u0430, \\u0441\\u043f\\u0440\\u043e\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0449\\u0435 \\u0440\\u0430\\u0437\"],\"Surname\":[\"\\u041f\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\"],\"Thanks for subscribing\":[\"\\u0414\\u044f\\u043a\\u0443\\u0454\\u043c\\u043e \\u0437\\u0430 \\u043f\\u0456\\u0434\\u043f\\u0438\\u0441\\u043a\\u0443\"],\"Unique identifier for this form\":[\"\\u0423\\u043d\\u0456\\u043a\\u0430\\u043b\\u044c\\u043d\\u0438\\u0439 \\u0456\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0456\\u043a\\u0430\\u0442\\u043e\\u0440 \\u0434\\u043b\\u044f \\u0446\\u0456\\u0454\\u0457 \\u0444\\u043e\\u0440\\u043c\\u0438\"],\"You are not connected to Hostinger Reach\":[\"\\u0412\\u0438 \\u043d\\u0435 \\u043f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0456 \\u0434\\u043e Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u0412\\u0438 \\u043d\\u0435 \\u043f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0456 \\u0434\\u043e Hostinger Reach. \\u0429\\u043e\\u0431 \\u043e\\u0442\\u0440\\u0438\\u043c\\u0430\\u0442\\u0438 \\u043f\\u043e\\u0432\\u043d\\u0438\\u0439 \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f \\u0434\\u043e \\u0446\\u044c\\u043e\\u0433\\u043e \\u0431\\u043b\\u043e\\u043a\\u0443, \\u0432\\u0430\\u043c \\u043f\\u043e\\u0442\\u0440\\u0456\\u0431\\u043d\\u043e \\u043f\\u0456\\u0434\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u0438 \\u0441\\u0432\\u0456\\u0439 \\u043e\\u0431\\u043b\\u0456\\u043a\\u043e\\u0432\\u0438\\u0439 \\u0437\\u0430\\u043f\\u0438\\u0441 Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_CO.l10n.php","ext":"php","size":8593,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Spanish (Colombia)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:33+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'es_CO','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integre su sitio WordPress con Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Atenci\u00f3n:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach requiere una versi\u00f3n m\u00ednima de PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Est\u00e1 ejecutando <b>%s<\/b> versi\u00f3n de PHP.','Email Marketing'=>'Marketing por correo electr\u00f3nico','Thanks for subscribing.'=>'Gracias por suscribirse.','Something went wrong. Please try again.'=>'Algo ha ido mal. Por favor, int\u00e9ntelo de nuevo.','Email'=>'Correo electr\u00f3nico','Name'=>'Nombre','Surname'=>'Apellido','Subscribe'=>'Suscr\u00edbase a','Contact Form 7'=>'Formulario de contacto 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'Formularios WP Lite','Something went wrong'=>'Algo sali\u00f3 mal','Welcome to Reach'=>'Bienvenido a Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Cree campa\u00f1as de correo electr\u00f3nico con plantillas creadas con IA que se adapten a su estilo. Sincroniza instant\u00e1neamente con tu sitio WordPress y conecta con tu audiencia f\u00e1cilmente.','Reach is already connected to another site.'=>'Reach ya est\u00e1 conectado a otro sitio.','Disconnect it to link this site instead.'=>'Descon\u00e9ctelo para enlazar este sitio en su lugar.','Manage'=>'Gestione','Start for free'=>'Empezar gratis','This month'=>'Este mes','Your plan'=>'Su plan','Upgrade'=>'Actualizar','Emails'=>'Correos electr\u00f3nicos','Sent'=>'Enviado','Remaining'=>'Resto','Campaigns'=>'Campa\u00f1as','Average CTOR'=>'CTOR medio','Subscribers'=>'Abonados','New subscribers'=>'Nuevos abonados','Unsubscribes'=>'Darse de baja','Total subscribers'=>'Total de abonados','Templates'=>'Plantillas','Settings'=>'Ajustes','Forms'=>'Formularios','Add form'=>'A\u00f1adir formulario','Start collecting form submissions'=>'Empezar a recopilar formularios','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Elija c\u00f3mo desea gestionar los formularios de su sitio web. Crea un nuevo formulario con Hostinger Reach o conecta un plugin de terceros.','Add more forms'=>'A\u00f1adir m\u00e1s formularios','Connect more forms to expand your contact list and capture leads from different pages.'=>'Conecte m\u00e1s formularios para ampliar su lista de contactos y captar clientes potenciales de distintas p\u00e1ginas.','New page'=>'P\u00e1gina nueva','FAQ'=>'PREGUNTAS FRECUENTES','What is Hostinger Reach email marketing service?'=>'\u00bfQu\u00e9 es el servicio de marketing por correo electr\u00f3nico Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach es una herramienta de marketing por correo electr\u00f3nico basada en IA para peque\u00f1as empresas y creadores. Es compatible con todo el proceso de marketing por correo electr\u00f3nico, desde la creaci\u00f3n de listas de contactos hasta el env\u00edo de campa\u00f1as y el seguimiento de los resultados.','How is Hostinger Reach different from other email marketing apps?'=>'\u00bfEn qu\u00e9 se diferencia Hostinger Reach de otras aplicaciones de marketing por correo electr\u00f3nico?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach se ha creado para ofrecer simplicidad, velocidad y resultados, sin necesidad de tener experiencia en dise\u00f1o o marketing. A diferencia de la mayor\u00eda de las herramientas de correo electr\u00f3nico, el n\u00facleo de Reach es su creador de plantillas basado en inteligencia artificial. Ya se trate del lanzamiento de un producto, de una oferta especial o de la actualizaci\u00f3n de un bolet\u00edn, crea al instante un correo electr\u00f3nico profesional y apto para dispositivos m\u00f3viles. No s\u00f3lo redacta el contenido por ti, sino que tambi\u00e9n sugiere el mejor dise\u00f1o para tu mensaje y guarda tus ajustes de estilo para que nunca tengas que empezar de cero.<br><br>Cada plantilla es personalizable, para que tus correos electr\u00f3nicos reflejen el aspecto, la sensaci\u00f3n y la voz de tu marca. Y como las plantillas se han creado utilizando las mejores pr\u00e1cticas, est\u00e1n optimizadas para facilitar la lectura, la accesibilidad y la participaci\u00f3n del lector.','How much does it cost to use Hostinger Reach?'=>'\u00bfCu\u00e1nto cuesta utilizar Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach ofrece un plan gratuito de un a\u00f1o, perfecto para empezar. Los planes de pago se basan en el n\u00famero de contactos \u00fanicos a los que quieres llegar y el n\u00famero de correos electr\u00f3nicos que env\u00edas al mes. A medida que aumente tu audiencia, podr\u00e1s cambiar a un plan que se adapte a tus necesidades. Reach no limita tu lista de contactos, as\u00ed que no tienes que preocuparte por la p\u00e9rdida de datos y puedes hacer crecer tu audiencia de forma constante.','opens in new tab'=>'se abre en una nueva pesta\u00f1a','Banner background image for'=>'Imagen de fondo del banner para','Background image for'=>'Imagen de fondo para','usage statistics'=>'estad\u00edsticas de uso','remaining out of'=>'quedando fuera de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progreso: {actual} de {total} utilizado ({porcentaje}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'La tasa de clics por apertura le indica qu\u00e9 porcentaje de aperturas tambi\u00e9n dio lugar a un clic. Un buen CTOR es del 6-17%, dependiendo de tu sector.','Add form clicked'=>'A\u00f1adir formulario pulsado','Select page'=>'Seleccionar p\u00e1gina','Plugin'=>'Plugin','Entries'=>'Entradas','Status'=>'Estado','Active'=>'Activo','Inactive'=>'Inactivo','Go to plugin'=>'Ir al plugin','Disconnect'=>'Desconecte','View form'=>'Ver formulario','Edit form'=>'Editar formulario','Loading plugins...'=>'Cargando plugins...','Expand {pluginName} details'=>'Ampliar {pluginName} detalles','Collapse {pluginName} details'=>'Contraer {pluginName} detalles','Thanks for subscribing'=>'Gracias por suscribirse','Something went wrong. Please try again'=>'Algo ha ido mal. Vuelva a intentarlo','Form ID'=>'Formulario ID','Unique identifier for this form'=>'Identificador \u00fanico para este formulario','Contact List'=>'Lista de contactos','Create New List'=>'Crear nueva lista','New Contact List'=>'Nueva lista de contactos','Name for the new Contact List'=>'Nombre de la nueva lista de contactos','Show Name Field?'=>'\u00bfMostrar campo de nombre?','Show Surname Field?'=>'\u00bfMostrar campo de apellidos?','Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block title\u0004Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formulario de suscripci\u00f3n a Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-nl_NL_formal-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":340,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"nl_NL_formal\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Inschrijfformulier Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_BR-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":925,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_BR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Lista de contatos\"],\"Create New List\":[\"Criar nova lista\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"ID do formul\\u00e1rio\"],\"Name\":[\"Nome\"],\"Name for the new Contact List\":[\"Nome para a nova lista de contatos\"],\"New Contact List\":[\"Nova lista de contatos\"],\"Settings\":[\"Configura\\u00e7\\u00f5es\"],\"Show Name Field?\":[\"Mostrar campo de nome?\"],\"Show Surname Field?\":[\"Mostrar campo de sobrenome?\"],\"Something went wrong. Please try again\":[\"Algo deu errado. Tente novamente\"],\"Surname\":[\"Sobrenome\"],\"Thanks for subscribing\":[\"Obrigado por se inscrever\"],\"Unique identifier for this form\":[\"Identificador exclusivo para este formul\\u00e1rio\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ro_RO.l10n.php","ext":"php","size":8666,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Romanian','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:31+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'ro_RO','plural-forms'=>'nplurals=3; plural=(n==1 ? 0 :(((n%100>19)||(( n%100==0)&&(n!=0)))? 2 : 1));','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integra\u021bi-v\u0103 site-ul WordPress cu Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Aten\u021bie:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach necesit\u0103 o versiune PHP minim\u0103 de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Utiliza\u021bi <b>%s<\/b> versiunea PHP.','Email Marketing'=>'Marketing prin e-mail','Thanks for subscribing.'=>'V\u0103 mul\u021bumim pentru abonament.','Something went wrong. Please try again.'=>'Ceva nu a mers bine. V\u0103 rug\u0103m s\u0103 \u00eencerca\u021bi din nou.','Email'=>'E-mail','Name'=>'Nume \u0219i prenume','Surname'=>'Numele de familie','Subscribe'=>'Abonare','Contact Form 7'=>'Formular de contact 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Ceva nu a mers bine','Welcome to Reach'=>'Bine a\u021bi venit la Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Crea\u021bi campanii de e-mail folosind \u0219abloane create de AI care se potrivesc stilului dvs. Sincroniza\u021bi instantaneu cu site-ul dvs. WordPress \u0219i conecta\u021bi-v\u0103 cu publicul dvs. cu u\u0219urin\u021b\u0103.','Reach is already connected to another site.'=>'Reach este deja conectat la un alt site.','Disconnect it to link this site instead.'=>'Deconecta\u021bi-l pentru a lega acest site \u00een schimb.','Manage'=>'Gestiona\u021bi','Start for free'=>'\u00cencepe\u021bi gratuit','This month'=>'Luna aceasta','Your plan'=>'Planul dvs','Upgrade'=>'Actualizare','Emails'=>'Email-uri','Sent'=>'Trimis','Remaining'=>'R\u0103mase','Campaigns'=>'Campanii','Average CTOR'=>'CTOR mediu','Subscribers'=>'Abona\u021bi','New subscribers'=>'Abona\u021bi noi','Unsubscribes'=>'Dezabonare','Total subscribers'=>'Total abona\u021bi','Templates'=>'\u0218abloane','Settings'=>'Set\u0103ri','Forms'=>'Formulare','Add form'=>'Ad\u0103uga\u021bi un formular','Start collecting form submissions'=>'\u00cencepe\u021bi s\u0103 colecta\u021bi formulare','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Alege\u021bi modul \u00een care dori\u021bi s\u0103 gestiona\u021bi formularele de pe site-ul dvs. Crea\u021bi un formular nou cu Hostinger Reach sau conecta\u021bi un plugin ter\u021b\u0103 parte.','Add more forms'=>'Ad\u0103uga\u021bi mai multe formulare','Connect more forms to expand your contact list and capture leads from different pages.'=>'Conecta\u021bi mai multe formulare pentru a v\u0103 extinde lista de contacte \u0219i pentru a capta clien\u021bi poten\u021biali din diferite pagini.','New page'=>'Pagin\u0103 nou\u0103','FAQ'=>'\u00ceNTREB\u0102RI FRECVENTE','What is Hostinger Reach email marketing service?'=>'Ce este serviciul de e-mail marketing Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach este un instrument de marketing prin e-mail bazat pe inteligen\u021b\u0103 artificial\u0103 pentru \u00eentreprinderile mici \u0219i creatori. Acesta v\u0103 sprijin\u0103 \u00eentreaga c\u0103l\u0103torie de marketing prin e-mail - de la crearea listelor de contacte la trimiterea campaniilor \u0219i urm\u0103rirea rezultatelor.','How is Hostinger Reach different from other email marketing apps?'=>'Prin ce se deosebe\u0219te Hostinger Reach de alte aplica\u021bii de e-mail marketing?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach este creat pentru simplitate, vitez\u0103 \u0219i rezultate - nu este nevoie de experien\u021b\u0103 \u00een design sau marketing. Spre deosebire de majoritatea instrumentelor de e-mail, \u00een centrul Reach se afl\u0103 creatorul s\u0103u de \u0219abloane cu AI. Fie c\u0103 este vorba de lansarea unui produs, de o ofert\u0103 special\u0103 sau de actualizarea buletinului informativ, acesta creeaz\u0103 instantaneu un e-mail profesional, prietenos cu mobilul. Nu numai c\u0103 scrie con\u021binutul pentru dvs., dar v\u0103 sugereaz\u0103 \u0219i cel mai bun aspect pentru mesajul dvs. \u0219i v\u0103 salveaz\u0103 set\u0103rile de stil, astfel \u00eenc\u00e2t s\u0103 nu o lua\u021bi niciodat\u0103 de la zero.<br><br>Orice \u0219ablon este personalizabil, astfel \u00eenc\u00e2t e-mailurile dvs. s\u0103 reflecte aspectul, senza\u021bia \u0219i vocea brandului dvs. \u0218i pentru c\u0103 \u0219abloanele sunt create folosind cele mai bune practici dovedite, ele sunt optimizate pentru lizibilitate, accesibilitate \u0219i implicarea cititorilor.','How much does it cost to use Hostinger Reach?'=>'C\u00e2t cost\u0103 s\u0103 folosi\u021bi Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach ofer\u0103 un plan gratuit pentru un an - perfect pentru \u00eenceput. Planurile pl\u0103tite se bazeaz\u0103 pe num\u0103rul de contacte unice pe care dori\u021bi s\u0103 le atinge\u021bi \u0219i pe num\u0103rul de e-mailuri pe care le trimite\u021bi lunar. Pe m\u0103sur\u0103 ce audien\u021ba dvs. cre\u0219te, pute\u021bi face upgrade la un plan care se potrive\u0219te nevoilor dvs. Reach nu v\u0103 limiteaz\u0103 lista de contacte, astfel \u00eenc\u00e2t nu trebuie s\u0103 v\u0103 face\u021bi griji cu privire la pierderea datelor \u0219i v\u0103 pute\u021bi cre\u0219te constant audien\u021ba.','opens in new tab'=>'se deschide \u00een fila nou\u0103','Banner background image for'=>'Banner imagine de fundal pentru','Background image for'=>'Imagine de fundal pentru','usage statistics'=>'statistici de utilizare','remaining out of'=>'r\u0103mase \u00een afara','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progres: {actual} din {total} utilizat ({procentual}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Rata click-to-open v\u0103 spune ce procent din deschideri au dus \u0219i la un click. Un CTOR bun este de 6-17%, \u00een func\u021bie de industria dvs.','Add form clicked'=>'Ad\u0103uga\u021bi formularul clicat','Select page'=>'Selecta\u021bi pagina','Plugin'=>'Plugin','Entries'=>'Intr\u0103ri','Status'=>'Statut','Active'=>'Activ','Inactive'=>'Inactiv','Go to plugin'=>'Du-te la plugin','Disconnect'=>'Deconecta\u021bi','View form'=>'Vezi formularul','Edit form'=>'Editare formular','Loading plugins...'=>'\u00cenc\u0103rcarea pluginurilor...','Expand {pluginName} details'=>'Extinde\u021bi detaliile {pluginName}','Collapse {pluginName} details'=>'\u00cenchide\u021bi detaliile {pluginName}','Thanks for subscribing'=>'V\u0103 mul\u021bumim pentru abonament','Something went wrong. Please try again'=>'Ceva nu a mers bine. V\u0103 rug\u0103m s\u0103 \u00eencerca\u021bi din nou','Form ID'=>'ID formular','Unique identifier for this form'=>'Identificator unic pentru acest formular','Contact List'=>'Lista de contacte','Create New List'=>'Crea\u021bi o list\u0103 nou\u0103','New Contact List'=>'Noua list\u0103 de contacte','Name for the new Contact List'=>'Nume pentru noua list\u0103 de contacte','Show Name Field?'=>'Afi\u0219a\u021bi c\u00e2mpul Nume?','Show Surname Field?'=>'Afi\u0219a\u021bi c\u00e2mpul de nume de familie?','Reach Subscription Form'=>'Formular de abonament Reach','block title\u0004Reach Subscription Form'=>'Formular de abonament Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formular de abonament pentru Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_ES-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":923,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:43+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_ES\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID del formulario\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellido?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelve a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirte\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-he_IL-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":992,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 16:03+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"he_IL\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"\\u05d4\\u05ea\\u05d7\\u05d1\\u05e8\\u05d5 \\u05e2\\u05db\\u05e9\\u05d9\\u05d5\"],\"You are not connected to Hostinger Reach\":[\"\\u05d0\\u05d9\\u05e0\\u05da \\u05de\\u05d7\\u05d5\\u05d1\\u05e8 \\u05dc-Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u05d0\\u05d9\\u05e0\\u05da \\u05de\\u05d7\\u05d5\\u05d1\\u05e8 \\u05dc-Hostinger Reach. \\u05db\\u05d3\\u05d9 \\u05dc\\u05e7\\u05d1\\u05dc \\u05d2\\u05d9\\u05e9\\u05d4 \\u05de\\u05dc\\u05d0\\u05d4 \\u05dc\\u05d7\\u05e1\\u05d9\\u05de\\u05d4 \\u05d6\\u05d5, \\u05e2\\u05dc\\u05d9\\u05da \\u05dc\\u05d7\\u05d1\\u05e8 \\u05d0\\u05ea \\u05d7\\u05e9\\u05d1\\u05d5\\u05df Hostinger Reach \\u05e9\\u05dc\\u05da.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-th-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":415,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"th\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Reach Subscription Form\":[\"\\u0e41\\u0e1a\\u0e1a\\u0e1f\\u0e2d\\u0e23\\u0e4c\\u0e21\\u0e2a\\u0e21\\u0e31\\u0e04\\u0e23\\u0e2a\\u0e21\\u0e32\\u0e0a\\u0e34\\u0e01\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_AR-40280f641851c0bceee91722c888f369.json","ext":"json","size":1378,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_AR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ahora\"],\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Correo electr\\u00f3nico\"],\"Form ID\":[\"Formulario ID\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellidos?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelva a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirse\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1 conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debe conectar su cuenta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_BR.l10n.php","ext":"php","size":8530,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Portuguese (Brazil)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:30+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'pt_BR','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Alcance do Hostinger','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integre seu site WordPress com o Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Aten\u00e7\u00e3o:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'O Hostinger Reach requer uma vers\u00e3o m\u00ednima do PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Voc\u00ea est\u00e1 executando a vers\u00e3o <b>%s<\/b> do PHP.','Email Marketing'=>'Marketing por e-mail','Thanks for subscribing.'=>'Obrigado por se inscrever.','Something went wrong. Please try again.'=>'Algo deu errado. Tente novamente.','Email'=>'E-mail','Name'=>'Nome','Surname'=>'Sobrenome','Subscribe'=>'Assine','Contact Form 7'=>'Formul\u00e1rio de contato 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Algo deu errado','Welcome to Reach'=>'Bem-vindo ao Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Crie campanhas de e-mail usando modelos criados por IA que combinam com seu estilo. Sincronize instantaneamente com seu site WordPress e conecte-se facilmente com seu p\u00fablico.','Reach is already connected to another site.'=>'O Reach j\u00e1 est\u00e1 conectado a outro site.','Disconnect it to link this site instead.'=>'Desconecte-o para vincular este site.','Manage'=>'Gerenciar','Start for free'=>'Comece gratuitamente','This month'=>'Este m\u00eas','Your plan'=>'Seu plano','Upgrade'=>'Atualiza\u00e7\u00e3o','Emails'=>'E-mails','Sent'=>'Enviado','Remaining'=>'Restante','Campaigns'=>'Campanhas','Average CTOR'=>'M\u00e9dia CTOR','Subscribers'=>'Assinantes','New subscribers'=>'Novos assinantes','Unsubscribes'=>'Cancelamento de inscri\u00e7\u00e3o','Total subscribers'=>'Total de assinantes','Templates'=>'Modelos','Settings'=>'Configura\u00e7\u00f5es','Forms'=>'Formul\u00e1rios','Add form'=>'Adicionar formul\u00e1rio','Start collecting form submissions'=>'Comece a coletar envios de formul\u00e1rios','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Escolha como deseja gerenciar os formul\u00e1rios em seu site. Crie um novo formul\u00e1rio com o Hostinger Reach ou conecte um plug-in de terceiros.','Add more forms'=>'Adicionar mais formul\u00e1rios','Connect more forms to expand your contact list and capture leads from different pages.'=>'Conecte mais formul\u00e1rios para expandir sua lista de contatos e capturar leads de diferentes p\u00e1ginas.','New page'=>'Nova p\u00e1gina','FAQ'=>'PERGUNTAS FREQUENTES','What is Hostinger Reach email marketing service?'=>'O que \u00e9 o servi\u00e7o de marketing por e-mail do Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'O Hostinger Reach \u00e9 uma ferramenta de marketing por e-mail com tecnologia de IA para pequenas empresas e criadores. Ela oferece suporte a toda a sua jornada de marketing por e-mail - desde a cria\u00e7\u00e3o de listas de contatos at\u00e9 o envio de campanhas e o acompanhamento de resultados.','How is Hostinger Reach different from other email marketing apps?'=>'Qual \u00e9 a diferen\u00e7a entre o Hostinger Reach e outros aplicativos de marketing por e-mail?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'O Hostinger Reach foi desenvolvido para oferecer simplicidade, velocidade e resultados - n\u00e3o \u00e9 necess\u00e1rio ter experi\u00eancia em design ou marketing. Ao contr\u00e1rio da maioria das ferramentas de e-mail, o n\u00facleo do Reach \u00e9 seu criador de modelos com tecnologia de IA. Seja para o lan\u00e7amento de um produto, uma oferta especial ou uma atualiza\u00e7\u00e3o de boletim informativo, ele cria instantaneamente um e-mail profissional e compat\u00edvel com dispositivos m\u00f3veis. Ele n\u00e3o apenas escreve o conte\u00fado para voc\u00ea, mas tamb\u00e9m sugere o melhor layout para a sua mensagem e salva suas configura\u00e7\u00f5es de estilo para que voc\u00ea nunca comece do zero.<br><br>Todos os modelos s\u00e3o personaliz\u00e1veis, para que seus e-mails reflitam a apar\u00eancia, a sensa\u00e7\u00e3o e a voz da sua marca. E como os modelos s\u00e3o criados usando pr\u00e1ticas recomendadas comprovadas, eles s\u00e3o otimizados para facilitar a leitura, a acessibilidade e o envolvimento do leitor.','How much does it cost to use Hostinger Reach?'=>'Qual \u00e9 o custo para usar o Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'O Reach oferece um plano gratuito por um ano - perfeito para come\u00e7ar. Os planos pagos baseiam-se no n\u00famero de contatos exclusivos que voc\u00ea pretende alcan\u00e7ar e no n\u00famero de e-mails que envia mensalmente. \u00c0 medida que seu p\u00fablico cresce, voc\u00ea pode fazer upgrade para um plano que atenda \u00e0s suas necessidades. O Reach n\u00e3o limita sua lista de contatos, portanto, voc\u00ea n\u00e3o precisa se preocupar com a perda de dados e pode aumentar seu p\u00fablico de forma consistente.','opens in new tab'=>'abre em uma nova guia','Banner background image for'=>'Imagem de fundo do banner para','Background image for'=>'Imagem de fundo para','usage statistics'=>'estat\u00edsticas de uso','remaining out of'=>'permanecendo fora de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progresso: {atual} de {total} usado ({porcentagem}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'A taxa de cliques por abertura informa qual porcentagem de aberturas resultou em um clique tamb\u00e9m. Um bom CTOR \u00e9 de 6 a 17%, dependendo do seu setor.','Add form clicked'=>'Adicionar formul\u00e1rio clicado','Select page'=>'Selecionar p\u00e1gina','Plugin'=>'Plug-in','Entries'=>'Entradas','Status'=>'Status','Active'=>'Ativo','Inactive'=>'Inativo','Go to plugin'=>'Ir para o plugin','Disconnect'=>'Desconectar','View form'=>'Exibir formul\u00e1rio','Edit form'=>'Editar formul\u00e1rio','Loading plugins...'=>'Carregando plugins...','Expand {pluginName} details'=>'Expandir os detalhes de {pluginName}','Collapse {pluginName} details'=>'Recolher detalhes de {pluginName}','Thanks for subscribing'=>'Obrigado por se inscrever','Something went wrong. Please try again'=>'Algo deu errado. Tente novamente','Form ID'=>'ID do formul\u00e1rio','Unique identifier for this form'=>'Identificador exclusivo para este formul\u00e1rio','Contact List'=>'Lista de contatos','Create New List'=>'Criar nova lista','New Contact List'=>'Nova lista de contatos','Name for the new Contact List'=>'Nome para a nova lista de contatos','Show Name Field?'=>'Mostrar campo de nome?','Show Surname Field?'=>'Mostrar campo de sobrenome?','Reach Subscription Form'=>'Formul\u00e1rio de assinatura do Reach','block title\u0004Reach Subscription Form'=>'Formul\u00e1rio de assinatura do Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formul\u00e1rio de assinatura do Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ro_RO-40280f641851c0bceee91722c888f369.json","ext":"json","size":1562,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ro_RO\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 :(((n%100>19)||(( n%100==0)&&(n!=0)))? 2 : 1));\"},\"Connect Now\":[\"Conecta\\u021bi-v\\u0103 acum\"],\"Contact List\":[\"Lista de contacte\"],\"Create New List\":[\"Crea\\u021bi o list\\u0103 nou\\u0103\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"ID formular\"],\"Name\":[\"Nume \\u0219i prenume\"],\"Name for the new Contact List\":[\"Nume pentru noua list\\u0103 de contacte\"],\"New Contact List\":[\"Noua list\\u0103 de contacte\"],\"Reach Subscription Form\":[\"Formular de abonament Reach\"],\"Settings\":[\"Set\\u0103ri\"],\"Show Name Field?\":[\"Afi\\u0219a\\u021bi c\\u00e2mpul Nume?\"],\"Show Surname Field?\":[\"Afi\\u0219a\\u021bi c\\u00e2mpul de nume de familie?\"],\"Something went wrong. Please try again\":[\"Ceva nu a mers bine. V\\u0103 rug\\u0103m s\\u0103 \\u00eencerca\\u021bi din nou\"],\"Surname\":[\"Numele de familie\"],\"Thanks for subscribing\":[\"V\\u0103 mul\\u021bumim pentru abonament\"],\"Unique identifier for this form\":[\"Identificator unic pentru acest formular\"],\"You are not connected to Hostinger Reach\":[\"Nu sunte\\u021bi conectat la Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Nu sunte\\u021bi conectat la Hostinger Reach. Pentru a ob\\u021bine acces complet la acest bloc, trebuie s\\u0103 v\\u0103 conecta\\u021bi contul Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-id_ID.l10n.php","ext":"php","size":8280,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Indonesian','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:26+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'id_ID','plural-forms'=>'nplurals=1; plural=0;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Jangkauan Hostinger','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integrasikan situs WordPress Anda dengan Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Perhatian:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach membutuhkan versi PHP minimum <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Anda menjalankan versi PHP <b>%s<\/b>.','Email Marketing'=>'Pemasaran Email','Thanks for subscribing.'=>'Terima kasih telah berlangganan.','Something went wrong. Please try again.'=>'Ada yang tidak beres. Silakan coba lagi.','Email'=>'Email','Name'=>'Nama','Surname'=>'Nama keluarga','Subscribe'=>'Berlangganan','Contact Form 7'=>'Formulir Kontak 7','WP Forms Lite %s'=>'Formulir WP Lite %s','WP Forms Lite'=>'Formulir WP Lite','Something went wrong'=>'Ada yang tidak beres','Welcome to Reach'=>'Selamat datang di Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Buat kampanye email menggunakan templat buatan AI yang sesuai dengan gaya Anda. Sinkronisasi secara instan dengan situs WordPress Anda dan terhubung dengan audiens Anda dengan mudah.','Reach is already connected to another site.'=>'Jangkauan sudah terhubung ke situs lain.','Disconnect it to link this site instead.'=>'Putuskan sambungannya untuk menautkan situs ini.','Manage'=>'Mengelola','Start for free'=>'Mulai secara gratis','This month'=>'Bulan ini','Your plan'=>'Rencanamu','Upgrade'=>'Tingkatkan','Emails'=>'Email','Sent'=>'Terkirim','Remaining'=>'Sisa','Campaigns'=>'Kampanye','Average CTOR'=>'CTOR rata-rata','Subscribers'=>'Pelanggan','New subscribers'=>'Pelanggan baru','Unsubscribes'=>'Berhenti berlangganan','Total subscribers'=>'Total pelanggan','Templates'=>'Templat','Settings'=>'Pengaturan','Forms'=>'Formulir','Add form'=>'Tambahkan formulir','Start collecting form submissions'=>'Mulai mengumpulkan pengiriman formulir','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Pilih cara Anda ingin mengelola formulir di situs web Anda. Buat formulir baru dengan Hostinger Reach atau hubungkan plugin pihak ketiga.','Add more forms'=>'Tambahkan lebih banyak formulir','Connect more forms to expand your contact list and capture leads from different pages.'=>'Hubungkan lebih banyak formulir untuk memperluas daftar kontak Anda dan tangkap prospek dari halaman yang berbeda.','New page'=>'Halaman baru','FAQ'=>'PERTANYAAN YANG SERING DIAJUKAN','What is Hostinger Reach email marketing service?'=>'Apa itu layanan email marketing Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach merupakan sebuah perangkat pemasaran email bertenaga AI untuk bisnis kecil dan kreator. Ini mendukung seluruh perjalanan pemasaran email Anda-mulai dari membangun daftar kontak hingga mengirim kampanye dan melacak hasil.','How is Hostinger Reach different from other email marketing apps?'=>'Apa perbedaan Hostinger Reach dengan aplikasi email marketing lainnya?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach dibuat untuk kesederhanaan, kecepatan, dan hasil - tidak perlu pengalaman desain atau pemasaran. Tidak seperti kebanyakan perangkat email, inti dari Reach adalah kreator templatnya yang bertenaga AI. Baik itu peluncuran produk, penawaran khusus, atau pembaruan buletin, Reach langsung membuat email yang profesional dan ramah seluler. Tidak hanya menulis konten untuk Anda; tetapi juga menyarankan tata letak terbaik untuk pesan Anda dan menyimpan pengaturan gaya Anda sehingga Anda tidak perlu memulai dari awal.<br>Setiap templat dapat disesuaikan, sehingga email Anda mencerminkan tampilan, nuansa, dan suara merek Anda. Dan karena templat dibuat menggunakan praktik terbaik yang telah terbukti, templat dioptimalkan untuk keterbacaan, aksesibilitas, dan keterlibatan pembaca.','How much does it cost to use Hostinger Reach?'=>'Berapa biaya yang dibutuhkan untuk menggunakan Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach menawarkan paket gratis selama satu tahun - sempurna untuk memulai. Paket berbayar didasarkan pada jumlah kontak unik yang ingin Anda jangkau dan jumlah email yang Anda kirim setiap bulan. Seiring dengan bertambahnya audiens Anda, Anda bisa meningkatkan ke paket yang sesuai dengan kebutuhan Anda. Reach tidak membatasi daftar kontak Anda, jadi Anda tidak perlu khawatir akan kehilangan data dan bisa mengembangkan audiens Anda secara konsisten.','opens in new tab'=>'terbuka di tab baru','Banner background image for'=>'Gambar latar belakang spanduk untuk','Background image for'=>'Gambar latar belakang untuk','usage statistics'=>'statistik penggunaan','remaining out of'=>'yang tersisa dari','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Kemajuan: {saat ini} dari {total} yang digunakan ({persentase}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Rasio klik-terbuka memberi tahu Anda berapa persen dari pembukaan yang menghasilkan klik juga. CTOR yang baik adalah 6-17%, tergantung pada industri Anda.','Add form clicked'=>'Tambahkan formulir diklik','Select page'=>'Pilih halaman','Plugin'=>'Plugin','Entries'=>'Entri','Status'=>'Status','Active'=>'Aktif','Inactive'=>'Tidak aktif','Go to plugin'=>'Pergi ke plugin','Disconnect'=>'Putuskan sambungan','View form'=>'Lihat formulir','Edit form'=>'Formulir edit','Loading plugins...'=>'Memuat plugin...','Expand {pluginName} details'=>'Perluas detail {nama_plugin}','Collapse {pluginName} details'=>'Tutup detail {namaPengguna}','Thanks for subscribing'=>'Terima kasih telah berlangganan','Something went wrong. Please try again'=>'Ada yang tidak beres. Silakan coba lagi','Form ID'=>'ID Formulir','Unique identifier for this form'=>'Pengenal unik untuk formulir ini','Contact List'=>'Daftar Kontak','Create New List'=>'Buat Daftar Baru','New Contact List'=>'Daftar Kontak Baru','Name for the new Contact List'=>'Nama untuk Daftar Kontak baru','Show Name Field?'=>'Tampilkan Bidang Nama?','Show Surname Field?'=>'Tampilkan Bidang Nama Keluarga?','Reach Subscription Form'=>'Formulir Berlangganan Jangkauan','block title\u0004Reach Subscription Form'=>'Formulir Berlangganan Jangkauan','block description\u0004Subscription form for Hostinger Reach'=>'Formulir berlangganan untuk Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_PT-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":913,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-08 08:31+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_PT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Criar nova lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID do formul\\u00e1rio\"],\"Name\":[\"Nome\"],\"Name for the new Contact List\":[\"Nome da nova lista de contactos\"],\"New Contact List\":[\"Nova lista de contactos\"],\"Settings\":[\"Defini\\u00e7\\u00f5es\"],\"Show Name Field?\":[\"Mostrar campo de nome?\"],\"Show Surname Field?\":[\"Mostrar campo do apelido?\"],\"Something went wrong. Please try again\":[\"Ocorreu um erro. Tente de novo\"],\"Surname\":[\"Apelido\"],\"Thanks for subscribing\":[\"Obrigado por subscrever\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formul\\u00e1rio\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ar-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":579,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 15:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ar\",\"plural-forms\":\"nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100 >= 3 && n%100<=10 ? 3 : n%100 >= 11 && n%100<=99 ? 4 : 5;\"},\"Connect Now\":[\"\"],\"You are not connected to Hostinger Reach\":[\"\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-tr_TR-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":737,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"tr_TR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"\\u015eimdi Ba\\u011flan\"],\"You are not connected to Hostinger Reach\":[\"Hostinger Reach'e ba\\u011fl\\u0131 de\\u011filsiniz\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Hostinger Reach'e ba\\u011fl\\u0131 de\\u011filsiniz. Bu blo\\u011fa tam eri\\u015fim elde etmek i\\u00e7in Hostinger Reach hesab\\u0131n\\u0131z\\u0131 ba\\u011flaman\\u0131z gerekir.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_ES-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":676,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:43+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_ES\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ya\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1s conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debes conectar tu cuenta de Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-tr_TR-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":342,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"tr_TR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Abonelik Formuna Ula\\u015f\\u0131n\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-nl_NL_formal.l10n.php","ext":"php","size":8224,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Dutch (Formal)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:01+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'nl_NL_formal','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hoster Bereik','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integreer uw WordPress site met Hostinger Reach.','Hostinger'=>'Hoster','Attention:'=>'Attentie:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach vereist een minimale PHP-versie van <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'U gebruikt <b>%s<\/b> PHP versie.','Email Marketing'=>'E-mailmarketing','Thanks for subscribing.'=>'Bedankt voor uw inschrijving.','Something went wrong. Please try again.'=>'Er is iets fout gegaan. Probeer het opnieuw.','Email'=>'E-mail','Name'=>'Naam','Surname'=>'Achternaam','Subscribe'=>'Abonneer u op','Contact Form 7'=>'Contactformulier 7','WP Forms Lite %s'=>'WP Formulieren Lite %s','WP Forms Lite'=>'WP Formulieren Lite','Something went wrong'=>'Er ging iets mis','Welcome to Reach'=>'Welkom bij Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Maak e-mailcampagnes met behulp van AI-ontworpen sjablonen die bij uw stijl passen. Synchroniseer onmiddellijk met uw WordPress site en maak gemakkelijk contact met uw publiek.','Reach is already connected to another site.'=>'Reach is al verbonden met een andere site.','Disconnect it to link this site instead.'=>'Koppel het los om in plaats daarvan deze site te koppelen.','Manage'=>'Beheer','Start for free'=>'Gratis starten','This month'=>'Deze maand','Your plan'=>'Uw plan','Upgrade'=>'Upgrade','Emails'=>'E-mails','Sent'=>'Verzonden','Remaining'=>'Overblijvend','Campaigns'=>'Campagnes','Average CTOR'=>'Gemiddelde CTOR','Subscribers'=>'Abonnees','New subscribers'=>'Nieuwe abonnees','Unsubscribes'=>'Uitschrijvingen','Total subscribers'=>'Totaal aantal abonnees','Templates'=>'Sjablonen','Settings'=>'Instellingen','Forms'=>'Formulieren','Add form'=>'Formulier toevoegen','Start collecting form submissions'=>'Begin met het verzamelen van formulierinzendingen','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Kies hoe u formulieren op uw website wilt beheren. Maak een nieuw formulier met Hostinger Reach of sluit een plugin van derden aan.','Add more forms'=>'Meer formulieren toevoegen','Connect more forms to expand your contact list and capture leads from different pages.'=>'Sluit meer formulieren aan om uw lijst met contactpersonen uit te breiden en leads van verschillende pagina\\'s vast te leggen.','New page'=>'Nieuwe pagina','FAQ'=>'FAQ','What is Hostinger Reach email marketing service?'=>'Wat is de e-mailmarketingdienst van Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach is een AI-aangedreven e-mailmarketingtool voor kleine bedrijven en ontwerpers. Het ondersteunt uw hele e-mailmarketingtraject, van het opbouwen van contactlijsten tot het verzenden van campagnes en het bijhouden van resultaten.','How is Hostinger Reach different from other email marketing apps?'=>'Waarin verschilt Hostinger Reach van andere e-mailmarketingapps?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach is gebouwd voor eenvoud, snelheid en resultaat - ontwerp- of marketingervaring is niet nodig. In tegenstelling tot de meeste e-mailtools is de kern van Reach de AI-gestuurde sjabloonmaker. Of het nu gaat om een productlancering, speciale aanbieding of nieuwsbriefupdate, er wordt direct een professionele, mobielvriendelijke e-mail gemaakt. Het schrijft niet alleen de inhoud voor u; het stelt ook de beste lay-out voor uw bericht voor en slaat uw stijlinstellingen op, zodat u nooit helemaal opnieuw hoeft te beginnen.<br><br>Elke sjabloon is aanpasbaar, zodat uw e-mails de look, feel en stem van uw merk weerspiegelen. En omdat de sjablonen zijn gemaakt op basis van bewezen best practices, zijn ze geoptimaliseerd voor leesbaarheid, toegankelijkheid en lezersbetrokkenheid.','How much does it cost to use Hostinger Reach?'=>'Hoeveel kost het om Hostinger Reach te gebruiken?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach biedt een gratis plan voor \u00e9\u00e9n jaar - perfect om mee te beginnen. Betaalde plannen zijn gebaseerd op hoeveel unieke contacten u wilt bereiken en hoeveel e-mails u maandelijks verstuurt. Als uw doelgroep groeit, kunt u upgraden naar een plan dat bij uw behoeften past. Reach beperkt uw contactenlijst niet, dus u hoeft zich geen zorgen te maken over verloren gegevens en kunt uw publiek consistent laten groeien.','opens in new tab'=>'opent in nieuw tabblad','Banner background image for'=>'Achtergrondafbeelding voor banner','Background image for'=>'Achtergrondafbeelding voor','usage statistics'=>'gebruiksstatistieken','remaining out of'=>'die uit','total'=>'totaal','Progress: {current} of {total} used ({percentage}%)'=>'Voortgang: {huidig} van {totaal} gebruikt ({percentage}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Click-to-open rate vertelt u hoeveel procent van de opens resulteerde in een klik. Een goed CTOR is 6-17%, afhankelijk van uw branche.','Add form clicked'=>'Formulier toevoegen geklikt','Select page'=>'Selecteer pagina','Plugin'=>'Plugin','Entries'=>'Inzendingen','Status'=>'Status','Active'=>'Actief','Inactive'=>'Inactief','Go to plugin'=>'Ga naar plugin','Disconnect'=>'Ontkoppelen','View form'=>'Bekijk formulier','Edit form'=>'Formulier bewerken','Loading plugins...'=>'Plugins laden...','Expand {pluginName} details'=>'{pluginnaam} details uitbreiden','Collapse {pluginName} details'=>'Details samenvouwen {pluginName}','Thanks for subscribing'=>'Bedankt voor uw inschrijving','Something went wrong. Please try again'=>'Er is iets fout gegaan. Probeer het opnieuw','Form ID'=>'Formulier ID','Unique identifier for this form'=>'Unieke identificatie voor dit formulier','Contact List'=>'Contactlijst','Create New List'=>'Nieuwe lijst maken','New Contact List'=>'Nieuwe contactpersonenlijst','Name for the new Contact List'=>'Naam voor de nieuwe Contactlijst','Show Name Field?'=>'Naamveld tonen?','Show Surname Field?'=>'Achternaam veld tonen?','Reach Subscription Form'=>'Inschrijvingsformulier voor bereik','block title\u0004Reach Subscription Form'=>'Inschrijvingsformulier voor bereik','block description\u0004Subscription form for Hostinger Reach'=>'Inschrijvingsformulier voor Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_AR-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":938,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_AR\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Correo electr\\u00f3nico\"],\"Form ID\":[\"Formulario ID\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellidos?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelva a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirse\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-id_ID-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":682,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"id_ID\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"Hubungkan Sekarang\"],\"You are not connected to Hostinger Reach\":[\"Anda tidak terhubung ke Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Anda tidak terhubung ke Hostinger Reach. Untuk mendapatkan akses penuh ke blokir ini, Anda perlu menghubungkan akun Hostinger Reach Anda.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_PT-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":357,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-08 08:31+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pt_PT\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Formul\\u00e1rio de subscri\\u00e7\\u00e3o do Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_ES-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":347,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:43+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_ES\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_CO-40280f641851c0bceee91722c888f369.json","ext":"json","size":1357,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_CO\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ya\"],\"Contact List\":[\"Lista de contactos\"],\"Create New List\":[\"Crear nueva lista\"],\"Email\":[\"Email\"],\"Form ID\":[\"Formulario ID\"],\"Name\":[\"Nombre\"],\"Name for the new Contact List\":[\"Nombre de la nueva lista de contactos\"],\"New Contact List\":[\"Nueva lista de contactos\"],\"Reach Subscription Form\":[\"Formulario de suscripci\\u00f3n a Reach\"],\"Settings\":[\"Ajustes\"],\"Show Name Field?\":[\"\\u00bfMostrar campo de nombre?\"],\"Show Surname Field?\":[\"\\u00bfMostrar campo de apellidos?\"],\"Something went wrong. Please try again\":[\"Algo ha ido mal. Vuelva a intentarlo\"],\"Surname\":[\"Apellido\"],\"Thanks for subscribing\":[\"Gracias por suscribirse\"],\"Unique identifier for this form\":[\"Identificador \\u00fanico para este formulario\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1 conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debe conectar su cuenta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-vi-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":806,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"vi\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"K\\u1ebft n\\u1ed1i ngay\"],\"You are not connected to Hostinger Reach\":[\"B\\u1ea1n kh\\u00f4ng k\\u1ebft n\\u1ed1i v\\u1edbi Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"B\\u1ea1n ch\\u01b0a k\\u1ebft n\\u1ed1i v\\u1edbi Hostinger Reach. \\u0110\\u1ec3 truy c\\u1eadp \\u0111\\u1ea7y \\u0111\\u1ee7 v\\u00e0o ph\\u1ea7n n\\u00e0y, b\\u1ea1n c\\u1ea7n k\\u1ebft n\\u1ed1i t\\u00e0i kho\\u1ea3n Hostinger Reach c\\u1ee7a m\\u00ecnh.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-zh_CN-40280f641851c0bceee91722c888f369.json","ext":"json","size":1566,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"zh_CN\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\u7acb\\u5373\\u8fde\\u63a5\"],\"Contact List\":[\"\\u8054\\u7cfb\\u540d\\u5355\"],\"Create New List\":[\"\\u521b\\u5efa\\u65b0\\u5217\\u8868\"],\"Email\":[\"\\u7535\\u5b50\\u90ae\\u4ef6\"],\"Form ID\":[\"\\u8868\\u683c ID\"],\"Name\":[\"\\u540d\\u79f0\"],\"Name for the new Contact List\":[\"\\u65b0\\u8054\\u7cfb\\u4eba\\u5217\\u8868\\u7684\\u540d\\u79f0\"],\"New Contact List\":[\"\\u65b0\\u8054\\u7cfb\\u4eba\\u540d\\u5355\"],\"Reach Subscription Form\":[\"\\u8ba2\\u9605\\u8868\\u683c\"],\"Settings\":[\"\\u8bbe\\u7f6e\"],\"Show Name Field?\":[\"\\u663e\\u793a\\u540d\\u79f0\\u5b57\\u6bb5\\uff1f\"],\"Show Surname Field?\":[\"\\u663e\\u793a\\u59d3\\u6c0f\\u5b57\\u6bb5\\uff1f\"],\"Something went wrong. Please try again\":[\"\\u51fa\\u9519\\u4e86\\u3002\\u8bf7\\u91cd\\u8bd5\"],\"Surname\":[\"\\u59d3\\u6c0f\"],\"Thanks for subscribing\":[\"\\u611f\\u8c22\\u60a8\\u7684\\u8ba2\\u9605\"],\"Unique identifier for this form\":[\"\\u8be5\\u8868\\u683c\\u7684\\u552f\\u4e00\\u6807\\u8bc6\\u7b26\"],\"You are not connected to Hostinger Reach\":[\"\\u60a8\\u6ca1\\u6709\\u8fde\\u63a5\\u5230Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"\\u60a8\\u8fd8\\u6ca1\\u6709\\u8fde\\u63a5\\u5230Hostinger Reach\\u3002\\u60a8\\u9700\\u8981\\u8fde\\u63a5\\u60a8\\u7684Hostinger Reach\\u8d26\\u6237\\uff0c\\u624d\\u80fd\\u5b8c\\u5168\\u8bbf\\u95ee\\u8be5\\u533a\\u5757\\u3002\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-it_IT.l10n.php","ext":"php","size":8520,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Italian','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:27+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'it_IT','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integrate il vostro sito WordPress con Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Attenzione:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach richiede una versione minima di PHP di <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'\u00c8 in esecuzione la versione di PHP <b>%s<\/b>.','Email Marketing'=>'Marketing via e-mail','Thanks for subscribing.'=>'Grazie per esservi iscritti.','Something went wrong. Please try again.'=>'Qualcosa \u00e8 andato storto. Riprovare.','Email'=>'Email','Name'=>'Nome','Surname'=>'Cognome','Subscribe'=>'Abbonarsi','Contact Form 7'=>'Modulo di contatto 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Qualcosa \u00e8 andato storto','Welcome to Reach'=>'Benvenuti a Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Create campagne e-mail utilizzando modelli creati dall\\'intelligenza artificiale che si adattano al vostro stile. Sincronizzatevi istantaneamente con il vostro sito WordPress e connettetevi facilmente con il vostro pubblico.','Reach is already connected to another site.'=>'Reach \u00e8 gi\u00e0 collegato a un altro sito.','Disconnect it to link this site instead.'=>'Disconnetterlo per collegare questo sito.','Manage'=>'Gestire','Start for free'=>'Iniziare gratuitamente','This month'=>'Questo mese','Your plan'=>'Il vostro piano','Upgrade'=>'Aggiornamento','Emails'=>'Email','Sent'=>'Inviato','Remaining'=>'Rimanente','Campaigns'=>'Campagne','Average CTOR'=>'CTOR medio','Subscribers'=>'Abbonati','New subscribers'=>'Nuovi abbonati','Unsubscribes'=>'Disiscrizioni','Total subscribers'=>'Totale abbonati','Templates'=>'Modelli','Settings'=>'Impostazioni','Forms'=>'Moduli','Add form'=>'Aggiungi modulo','Start collecting form submissions'=>'Iniziare a raccogliere gli invii dei moduli','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Scegliete come gestire i moduli sul vostro sito web. Create un nuovo modulo con Hostinger Reach o collegate un plugin di terze parti.','Add more forms'=>'Aggiungere altri moduli','Connect more forms to expand your contact list and capture leads from different pages.'=>'Collegate pi\u00f9 moduli per ampliare l\\'elenco dei contatti e acquisire lead da pagine diverse.','New page'=>'Nuova pagina','FAQ'=>'FAQ','What is Hostinger Reach email marketing service?'=>'Che cos\\'\u00e8 il servizio di email marketing di Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach \u00e8 uno strumento di email marketing potenziato dall\\'intelligenza artificiale per piccole imprese e creatori. Supporta l\\'intero percorso di email marketing, dalla creazione di liste di contatti all\\'invio di campagne e al monitoraggio dei risultati.','How is Hostinger Reach different from other email marketing apps?'=>'In che modo Hostinger Reach \u00e8 diverso dalle altre applicazioni di email marketing?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach \u00e8 costruito per la semplicit\u00e0, la velocit\u00e0 e i risultati - non \u00e8 necessaria alcuna esperienza di design o di marketing. A differenza della maggior parte degli strumenti di posta elettronica, il cuore di Reach \u00e8 il suo creatore di modelli alimentato dall\\'intelligenza artificiale. Che si tratti del lancio di un prodotto, di un\\'offerta speciale o di un aggiornamento della newsletter, Reach crea immediatamente un\\'e-mail professionale e adatta ai dispositivi mobili. Non solo scrive il contenuto per voi, ma suggerisce anche il layout migliore per il vostro messaggio e salva le vostre impostazioni di stile, in modo da non dover mai ricominciare da zero.<br><br>Ogni modello \u00e8 personalizzabile, in modo che le vostre e-mail riflettano l\\'aspetto, l\\'atmosfera e la voce del vostro marchio. Inoltre, poich\u00e9 i modelli sono costruiti utilizzando best practice comprovate, sono ottimizzati per la leggibilit\u00e0, l\\'accessibilit\u00e0 e il coinvolgimento dei lettori.','How much does it cost to use Hostinger Reach?'=>'Quanto costa utilizzare Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach offre un piano gratuito per un anno, perfetto per iniziare. I piani a pagamento si basano sul numero di contatti unici che si desidera raggiungere e sul numero di e-mail inviate mensilmente. Man mano che il vostro pubblico cresce, potete passare a un piano che si adatti alle vostre esigenze. Reach non limita il vostro elenco di contatti, quindi non dovete preoccuparvi di perdere dati e potete far crescere costantemente il vostro pubblico.','opens in new tab'=>'si apre in una nuova scheda','Banner background image for'=>'Immagine di sfondo del banner per','Background image for'=>'Immagine di sfondo per','usage statistics'=>'statistiche d\\'uso','remaining out of'=>'rimanendo fuori da','total'=>'totale','Progress: {current} of {total} used ({percentage}%)'=>'Progressi: {corrente} di {totale} usato ({percentuale}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Il tasso di clic-apertura indica la percentuale di aperture che ha portato a un clic. Un buon CTOR \u00e8 compreso tra il 6 e il 17%, a seconda del settore.','Add form clicked'=>'Aggiunta di un modulo cliccato','Select page'=>'Selezionare la pagina','Plugin'=>'Plugin','Entries'=>'Entrate','Status'=>'Stato','Active'=>'Attivo','Inactive'=>'Inattivo','Go to plugin'=>'Vai al plugin','Disconnect'=>'Disconnessione','View form'=>'Visualizza il modulo','Edit form'=>'Modifica modulo','Loading plugins...'=>'Caricamento dei plugin...','Expand {pluginName} details'=>'Espandere i dettagli di {pluginName}','Collapse {pluginName} details'=>'Chiudi i dettagli di {pluginName}','Thanks for subscribing'=>'Grazie per esservi iscritti','Something went wrong. Please try again'=>'Qualcosa \u00e8 andato storto. Riprovare','Form ID'=>'ID modulo','Unique identifier for this form'=>'Identificatore unico per questo modulo','Contact List'=>'Elenco dei contatti','Create New List'=>'Creare un nuovo elenco','New Contact List'=>'Nuovo elenco di contatti','Name for the new Contact List'=>'Nome per il nuovo Elenco contatti','Show Name Field?'=>'Mostrare il campo del nome?','Show Surname Field?'=>'Mostrare il campo del cognome?','Reach Subscription Form'=>'Modulo di iscrizione a Reach','block title\u0004Reach Subscription Form'=>'Modulo di iscrizione a Reach','block description\u0004Subscription form for Hostinger Reach'=>'Modulo di iscrizione per Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-lt_LT.l10n.php","ext":"php","size":8572,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Lithuanian','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:30+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'lt_LT','plural-forms'=>'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10 >= 2 &&(n%100<10||n%100 >= 20)? 1 : 2);','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'\"Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integruokite savo \"WordPress\" svetain\u0119 su \"Hostinger Reach\".','Hostinger'=>'Hostinger','Attention:'=>'D\u0117mesio:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'\"Hostinger Reach\" reikalauja minimalios PHP versijos <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'J\u016bs naudojate <b>%s<\/b> PHP versij\u0105.','Email Marketing'=>'El. pa\u0161to rinkodara','Thanks for subscribing.'=>'A\u010di\u016b u\u017e prenumerat\u0105.','Something went wrong. Please try again.'=>'Ka\u017ekas nutiko ne taip. Bandykite dar kart\u0105.','Email'=>'El. pa\u0161tas','Name'=>'Pavadinimas','Surname'=>'Pavard\u0117','Subscribe'=>'Prenumeruoti','Contact Form 7'=>'Kontaktin\u0117 forma 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Ka\u017ekas nutiko ne taip','Welcome to Reach'=>'Sveiki atvyk\u0119 \u012f \"Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Kurkite el. pa\u0161to kampanijas naudodami dirbtinio intelekto sukurtus \u0161ablonus, atitinkan\u010dius j\u016bs\u0173 stili\u0173. Akimirksniu sinchronizuokite su savo \"WordPress\" svetaine ir lengvai u\u017emegzkite ry\u0161\u012f su savo auditorija.','Reach is already connected to another site.'=>'\"Reach\" jau yra prijungtas prie kitos svetain\u0117s.','Disconnect it to link this site instead.'=>'Atjunkite j\u012f ir vietoj jo susiekite \u0161i\u0105 svetain\u0119.','Manage'=>'Tvarkykite','Start for free'=>'Prad\u0117kite nemokamai','This month'=>'\u0160\u012f m\u0117nes\u012f','Your plan'=>'J\u016bs\u0173 planas','Upgrade'=>'Atnaujinti','Emails'=>'Elektroniniai lai\u0161kai','Sent'=>'I\u0161si\u0173sta','Remaining'=>'Likusi','Campaigns'=>'Kampanijos','Average CTOR'=>'Vidutinis CTOR','Subscribers'=>'Prenumeratoriai','New subscribers'=>'Nauji abonentai','Unsubscribes'=>'Atsisakoma prenumeratos','Total subscribers'=>'I\u0161 viso abonent\u0173','Templates'=>'\u0160ablonai','Settings'=>'Nustatymai','Forms'=>'Formos','Add form'=>'Prid\u0117ti form\u0105','Start collecting form submissions'=>'Prad\u0117kite rinkti form\u0173 pateikimus','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Pasirinkite, kaip norite tvarkyti svetaini\u0173 formas. Sukurkite nauj\u0105 form\u0105 su \"Hostinger Reach\" arba prijunkite tre\u010diosios \u0161alies \u012fskiep\u012f.','Add more forms'=>'Prid\u0117ti daugiau form\u0173','Connect more forms to expand your contact list and capture leads from different pages.'=>'Prijunkite daugiau form\u0173, kad i\u0161pl\u0117stum\u0117te kontakt\u0173 s\u0105ra\u0161\u0105 ir gaudytum\u0117te potencialius klientus i\u0161 skirting\u0173 puslapi\u0173.','New page'=>'Naujas puslapis','FAQ'=>'DUK','What is Hostinger Reach email marketing service?'=>'Kas yra \"Hostinger Reach\" el. pa\u0161to rinkodaros paslauga?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'\"Hostinger Reach\" yra dirbtinio intelekto valdomas el. pa\u0161to rinkodaros \u012frankis ma\u017eosioms \u012fmon\u0117ms ir k\u016br\u0117jams. Ji palaiko vis\u0105 j\u016bs\u0173 el. pa\u0161to rinkodaros keli\u0105 - nuo kontakt\u0173 s\u0105ra\u0161\u0173 sudarymo iki kampanij\u0173 siuntimo ir rezultat\u0173 steb\u0117jimo.','How is Hostinger Reach different from other email marketing apps?'=>'Kuo \"Hostinger Reach\" skiriasi nuo kit\u0173 el. pa\u0161to rinkodaros program\u0173?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'\"Hostinger Reach\" sukurta siekiant paprastumo, grei\u010dio ir rezultat\u0173 - nereikia jokios dizaino ar rinkodaros patirties. Skirtingai nuo daugumos el. pa\u0161to \u012franki\u0173, \"Reach\" pagrindas yra dirbtinio intelekto valdomas \u0161ablon\u0173 k\u016br\u0117jas. Nesvarbu, ar tai b\u016bt\u0173 produkto pristatymas, specialus pasi\u016blymas, ar naujienlai\u0161kio atnaujinimas, jis akimirksniu sukuria profesional\u0173, mobiliesiems \u012frenginiams pritaikyt\u0105 el. lai\u0161k\u0105. Jis ne tik sukuria turin\u012f u\u017e jus; jis taip pat pasi\u016blo geriausi\u0105 prane\u0161imo i\u0161d\u0117stym\u0105 ir i\u0161saugo stiliaus nustatymus, kad niekada nereik\u0117t\u0173 prad\u0117ti nuo nulio.<br><br>Kiekvienas \u0161ablonas yra pritaikomas, tod\u0117l j\u016bs\u0173 el. lai\u0161kai atspindi j\u016bs\u0173 prek\u0117s \u017eenklo i\u0161vaizd\u0105, jausm\u0105 ir bals\u0105. O kadangi \u0161ablonai sukurti naudojant patikrint\u0105 geriausi\u0105 praktik\u0105, jie optimizuoti taip, kad b\u016bt\u0173 lengvai skaitomi, prieinami ir skatint\u0173 skaitytoj\u0173 \u012fsitraukim\u0105.','How much does it cost to use Hostinger Reach?'=>'Kiek kainuoja naudotis \"Hostinger Reach\"?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'\"Reach\" si\u016blo nemokam\u0105 plan\u0105 vieneriems metams - puikiai tinka prad\u017eiai. Mokami planai priklauso nuo to, kiek unikali\u0173 kontakt\u0173 norite pasiekti ir kiek el. lai\u0161k\u0173 siun\u010diate per m\u0117nes\u012f. Augant auditorijai, galite pereiti prie j\u016bs\u0173 poreikius atitinkan\u010dio plano. Programa \"Reach\" neriboja j\u016bs\u0173 kontakt\u0173 s\u0105ra\u0161o, tod\u0117l jums nereikia nerimauti d\u0117l prarast\u0173 duomen\u0173 ir galite nuolat didinti savo auditorij\u0105.','opens in new tab'=>'atsidaro naujame skirtuke','Banner background image for'=>'Skelbimo fono vaizdas','Background image for'=>'Fono paveiksl\u0117lis','usage statistics'=>'naudojimo statistika','remaining out of'=>'lik\u0119 i\u0161','total'=>'i\u0161 viso','Progress: {current} of {total} used ({percentage}%)'=>'Pa\u017eanga: ({procentais}%) i\u0161 {i\u0161 viso} panaudota ({procentais}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\"Click-to-open\" rodiklis parodo, kiek procent\u0173 atidarymo atvej\u0173 taip pat buvo paspausti. Geras CTOR yra 6-17 %, priklausomai nuo j\u016bs\u0173 pramon\u0117s \u0161akos.','Add form clicked'=>'Spustel\u0117ta Prid\u0117ti form\u0105','Select page'=>'Pasirinkite puslap\u012f','Plugin'=>'\u012eskiepis','Entries'=>'\u012era\u0161ai','Status'=>'Statusas','Active'=>'Aktyvus','Inactive'=>'Neaktyvus','Go to plugin'=>'Eiti \u012f \u012fskiep\u012f','Disconnect'=>'Atjunkite','View form'=>'Per\u017ei\u016br\u0117ti form\u0105','Edit form'=>'Redaguoti form\u0105','Loading plugins...'=>'\u012eskiepi\u0173 \u012fk\u0117limas...','Expand {pluginName} details'=>'I\u0161skleisti {pluginName} informacij\u0105','Collapse {pluginName} details'=>'\u017dlugti {pluginName} informacija','Thanks for subscribing'=>'A\u010di\u016b u\u017e prenumerat\u0105','Something went wrong. Please try again'=>'Ka\u017ekas nutiko ne taip. Bandykite dar kart\u0105','Form ID'=>'Formos ID','Unique identifier for this form'=>'Unikalus \u0161ios formos identifikatorius','Contact List'=>'Kontakt\u0173 s\u0105ra\u0161as','Create New List'=>'Sukurti nauj\u0105 s\u0105ra\u0161\u0105','New Contact List'=>'Naujas kontakt\u0173 s\u0105ra\u0161as','Name for the new Contact List'=>'Naujojo kontakt\u0173 s\u0105ra\u0161o pavadinimas','Show Name Field?'=>'Rodyti vardo lauk\u0105?','Show Surname Field?'=>'Rodyti pavard\u0117s lauk\u0105?','Reach Subscription Form'=>'Pasiekti prenumeratos forma','block title\u0004Reach Subscription Form'=>'Pasiekti prenumeratos forma','block description\u0004Subscription form for Hostinger Reach'=>'\"Hostinger Reach\" prenumeratos forma']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ko_KR-40280f641851c0bceee91722c888f369.json","ext":"json","size":1833,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-10 12:39+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ko_KR\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\uc9c0\\uae08 \\uc5f0\\uacb0\"],\"Contact List\":[\"\\uc5f0\\ub77d\\ucc98 \\ubaa9\\ub85d\"],\"Create New List\":[\"\\uc0c8 \\ubaa9\\ub85d \\ub9cc\\ub4e4\\uae30\"],\"Email\":[\"\\uc774\\uba54\\uc77c\"],\"Form ID\":[\"\\uc591\\uc2dd ID\"],\"Name\":[\"\\uc774\\ub984\"],\"Name for the new Contact List\":[\"\\uc0c8 \\uc5f0\\ub77d\\ucc98 \\ubaa9\\ub85d\\uc758 \\uc774\\ub984\"],\"New Contact List\":[\"\\uc0c8 \\uc5f0\\ub77d\\ucc98 \\ubaa9\\ub85d\"],\"Reach Subscription Form\":[\"Reach \\uad6c\\ub3c5 \\uc591\\uc2dd\"],\"Settings\":[\"\\uc124\\uc815\"],\"Show Name Field?\":[\"\\uc774\\ub984 \\ud544\\ub4dc\\ub97c \\ud45c\\uc2dc\\ud560\\uae4c\\uc694?\"],\"Show Surname Field?\":[\"\\uc131 \\ud544\\ub4dc\\ub97c \\ud45c\\uc2dc\\ud560\\uae4c\\uc694?\"],\"Something went wrong. Please try again\":[\"\\ubb38\\uc81c\\uac00 \\ubc1c\\uc0dd\\ud588\\uc2b5\\ub2c8\\ub2e4. \\ub2e4\\uc2dc \\uc2dc\\ub3c4\\ud574 \\uc8fc\\uc138\\uc694\"],\"Surname\":[\"\\uc131\"],\"Thanks for subscribing\":[\"\\uad6c\\ub3c5\\ud574 \\uc8fc\\uc154\\uc11c \\uac10\\uc0ac\\ud569\\ub2c8\\ub2e4\"],\"Unique identifier for this form\":[\"\\uc774 \\uc591\\uc2dd\\uc758 \\uace0\\uc720 \\uc2dd\\ubcc4\\uc790\"],\"You are not connected to Hostinger Reach\":[\"Hostinger Reach\\uc5d0 \\uc5f0\\uacb0\\ub418\\uc5b4 \\uc788\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Hostinger Reach\\uc5d0 \\uc5f0\\uacb0\\ub418\\uc5b4 \\uc788\\uc9c0 \\uc54a\\uc2b5\\ub2c8\\ub2e4. \\uc774 \\ube14\\ub85d\\uc5d0 \\ub300\\ud55c \\uc804\\uccb4 \\uc561\\uc138\\uc2a4 \\uad8c\\ud55c\\uc744 \\uc5bb\\uc73c\\ub824\\uba74 Hostinger Reach \\uacc4\\uc815\\uc744 \\uc5f0\\uacb0\\ud574\\uc57c \\ud569\\ub2c8\\ub2e4.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ja-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1392,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ja\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Contact List\":[\"\\u9023\\u7d61\\u5148\\u30ea\\u30b9\\u30c8\"],\"Create New List\":[\"\\u65b0\\u898f\\u30ea\\u30b9\\u30c8\\u4f5c\\u6210\"],\"Email\":[\"\\u96fb\\u5b50\\u30e1\\u30fc\\u30eb\"],\"Form ID\":[\"\\u30d5\\u30a9\\u30fc\\u30e0ID\"],\"Name\":[\"\\u540d\\u79f0\"],\"Name for the new Contact List\":[\"\\u65b0\\u3057\\u3044\\u30b3\\u30f3\\u30bf\\u30af\\u30c8\\u30ea\\u30b9\\u30c8\\u306e\\u540d\\u524d\"],\"New Contact List\":[\"\\u65b0\\u3057\\u3044\\u9023\\u7d61\\u5148\\u30ea\\u30b9\\u30c8\"],\"Settings\":[\"\\u8a2d\\u5b9a\"],\"Show Name Field?\":[\"\\u540d\\u524d\\u30d5\\u30a3\\u30fc\\u30eb\\u30c9\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u304b\\uff1f\"],\"Show Surname Field?\":[\"\\u82d7\\u5b57\\u6b04\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u304b\\uff1f\"],\"Something went wrong. Please try again\":[\"\\u4f55\\u304b\\u554f\\u984c\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f\\u3002\\u3082\\u3046\\u4e00\\u5ea6\\u304a\\u8a66\\u3057\\u304f\\u3060\\u3055\\u3044\\u3002\"],\"Surname\":[\"\\u82d7\\u5b57\"],\"Thanks for subscribing\":[\"\\u3054\\u8cfc\\u8aad\\u3042\\u308a\\u304c\\u3068\\u3046\\u3054\\u3056\\u3044\\u307e\\u3059\\u3002\"],\"Unique identifier for this form\":[\"\\u3053\\u306e\\u30d5\\u30a9\\u30fc\\u30e0\\u306e\\u30e6\\u30cb\\u30fc\\u30af\\u306a\\u8b58\\u5225\\u5b50\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-id_ID-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":887,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"id_ID\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Contact List\":[\"Daftar Kontak\"],\"Create New List\":[\"Buat Daftar Baru\"],\"Email\":[\"Email\"],\"Form ID\":[\"ID Formulir\"],\"Name\":[\"Nama\"],\"Name for the new Contact List\":[\"Nama untuk Daftar Kontak baru\"],\"New Contact List\":[\"Daftar Kontak Baru\"],\"Settings\":[\"Pengaturan\"],\"Show Name Field?\":[\"Tampilkan Bidang Nama?\"],\"Show Surname Field?\":[\"Tampilkan Bidang Nama Keluarga?\"],\"Something went wrong. Please try again\":[\"Ada yang tidak beres. Silakan coba lagi\"],\"Surname\":[\"Nama keluarga\"],\"Thanks for subscribing\":[\"Terima kasih telah berlangganan\"],\"Unique identifier for this form\":[\"Pengenal unik untuk formulir ini\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-he_IL-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":1602,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 16:03+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"he_IL\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Contact List\":[\"\\u05e8\\u05e9\\u05d9\\u05de\\u05ea \\u05d0\\u05e0\\u05e9\\u05d9 \\u05e7\\u05e9\\u05e8\"],\"Create New List\":[\"\\u05e6\\u05e8\\u05d5 \\u05e8\\u05e9\\u05d9\\u05de\\u05d4 \\u05d7\\u05d3\\u05e9\\u05d4\"],\"Email\":[\"\\u05d0\\u05d9\\u05de\\u05d9\\u05d9\\u05dc\"],\"Form ID\":[\"\\u05de\\u05e1\\u05e4\\u05e8 \\u05d8\\u05d5\\u05e4\\u05e1\"],\"Name\":[\"\\u05e9\\u05dd\"],\"Name for the new Contact List\":[\"\\u05e9\\u05dd \\u05dc\\u05e8\\u05e9\\u05d9\\u05de\\u05ea \\u05d0\\u05e0\\u05e9\\u05d9 \\u05d4\\u05e7\\u05e9\\u05e8 \\u05d4\\u05d7\\u05d3\\u05e9\\u05d4\"],\"New Contact List\":[\"\\u05e8\\u05e9\\u05d9\\u05de\\u05ea \\u05d0\\u05e0\\u05e9\\u05d9 \\u05e7\\u05e9\\u05e8 \\u05d7\\u05d3\\u05e9\\u05d9\\u05dd\"],\"Settings\":[\"\\u05d4\\u05d2\\u05d3\\u05e8\\u05d5\\u05ea\"],\"Show Name Field?\":[\"\\u05d4\\u05e6\\u05d2 \\u05e9\\u05d3\\u05d4 \\u05e9\\u05dd?\"],\"Show Surname Field?\":[\"\\u05d4\\u05e6\\u05d2 \\u05e9\\u05d3\\u05d4 \\u05e9\\u05dd \\u05de\\u05e9\\u05e4\\u05d7\\u05d4?\"],\"Something went wrong. Please try again\":[\"\\u05de\\u05e9\\u05d4\\u05d5 \\u05d4\\u05e9\\u05ea\\u05d1\\u05e9. \\u05d0\\u05e0\\u05d0 \\u05e0\\u05e1\\u05d4 \\u05e9\\u05d5\\u05d1\"],\"Surname\":[\"\\u05e9\\u05dd \\u05de\\u05e9\\u05e4\\u05d7\\u05d4\"],\"Thanks for subscribing\":[\"\\u05ea\\u05d5\\u05d3\\u05d4 \\u05e2\\u05dc \\u05d4\\u05d4\\u05e8\\u05e9\\u05de\\u05d4\"],\"Unique identifier for this form\":[\"\\u05de\\u05d6\\u05d4\\u05d4 \\u05d9\\u05d9\\u05d7\\u05d5\\u05d3\\u05d9 \\u05dc\\u05d8\\u05d5\\u05e4\\u05e1 \\u05d6\\u05d4\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pl_PL-40280f641851c0bceee91722c888f369.json","ext":"json","size":1522,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:30+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"pl_PL\",\"plural-forms\":\"nplurals=3; plural=(n==1 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);\"},\"Connect Now\":[\"Po\\u0142\\u0105cz teraz\"],\"Contact List\":[\"Lista kontakt\\u00f3w\"],\"Create New List\":[\"Utw\\u00f3rz now\\u0105 list\\u0119\"],\"Email\":[\"E-mail\"],\"Form ID\":[\"Identyfikator formularza\"],\"Name\":[\"Nazwa\"],\"Name for the new Contact List\":[\"Nazwa dla nowej listy kontakt\\u00f3w\"],\"New Contact List\":[\"Nowa lista kontakt\\u00f3w\"],\"Reach Subscription Form\":[\"Formularz subskrypcji zasi\\u0119gu\"],\"Settings\":[\"Ustawienia\"],\"Show Name Field?\":[\"Pokaza\\u0107 pole nazwy?\"],\"Show Surname Field?\":[\"Pokaza\\u0107 pole nazwiska?\"],\"Something went wrong. Please try again\":[\"Co\\u015b posz\\u0142o nie tak. Spr\\u00f3buj ponownie\"],\"Surname\":[\"Nazwisko\"],\"Thanks for subscribing\":[\"Dzi\\u0119kujemy za subskrypcj\\u0119\"],\"Unique identifier for this form\":[\"Unikalny identyfikator dla tego formularza\"],\"You are not connected to Hostinger Reach\":[\"Nie jeste\\u015b po\\u0142\\u0105czony z Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Nie jeste\\u015b po\\u0142\\u0105czony z Hostinger Reach. Aby uzyska\\u0107 pe\\u0142ny dost\\u0119p do tego bloku, musisz po\\u0142\\u0105czy\\u0107 swoje konto Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ja-40280f641851c0bceee91722c888f369.json","ext":"json","size":2090,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/dist\\\/blocks\\\/subscription.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ja\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Connect Now\":[\"\\u4eca\\u3059\\u3050\\u63a5\\u7d9a\"],\"Contact List\":[\"\\u9023\\u7d61\\u5148\\u30ea\\u30b9\\u30c8\"],\"Create New List\":[\"\\u65b0\\u898f\\u30ea\\u30b9\\u30c8\\u4f5c\\u6210\"],\"Email\":[\"\\u96fb\\u5b50\\u30e1\\u30fc\\u30eb\"],\"Form ID\":[\"\\u30d5\\u30a9\\u30fc\\u30e0ID\"],\"Name\":[\"\\u540d\\u79f0\"],\"Name for the new Contact List\":[\"\\u65b0\\u3057\\u3044\\u30b3\\u30f3\\u30bf\\u30af\\u30c8\\u30ea\\u30b9\\u30c8\\u306e\\u540d\\u524d\"],\"New Contact List\":[\"\\u65b0\\u3057\\u3044\\u9023\\u7d61\\u5148\\u30ea\\u30b9\\u30c8\"],\"Reach Subscription Form\":[\"\\u30ea\\u30fc\\u30c1\\u8cfc\\u8aad\\u30d5\\u30a9\\u30fc\\u30e0\"],\"Settings\":[\"\\u8a2d\\u5b9a\"],\"Show Name Field?\":[\"\\u540d\\u524d\\u30d5\\u30a3\\u30fc\\u30eb\\u30c9\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u304b\\uff1f\"],\"Show Surname Field?\":[\"\\u82d7\\u5b57\\u6b04\\u3092\\u8868\\u793a\\u3057\\u307e\\u3059\\u304b\\uff1f\"],\"Something went wrong. Please try again\":[\"\\u4f55\\u304b\\u554f\\u984c\\u304c\\u767a\\u751f\\u3057\\u307e\\u3057\\u305f\\u3002\\u3082\\u3046\\u4e00\\u5ea6\\u304a\\u8a66\\u3057\\u304f\\u3060\\u3055\\u3044\\u3002\"],\"Surname\":[\"\\u82d7\\u5b57\"],\"Thanks for subscribing\":[\"\\u3054\\u8cfc\\u8aad\\u3042\\u308a\\u304c\\u3068\\u3046\\u3054\\u3056\\u3044\\u307e\\u3059\\u3002\"],\"Unique identifier for this form\":[\"\\u3053\\u306e\\u30d5\\u30a9\\u30fc\\u30e0\\u306e\\u30e6\\u30cb\\u30fc\\u30af\\u306a\\u8b58\\u5225\\u5b50\"],\"You are not connected to Hostinger Reach\":[\"Hostinger Reach\\u306b\\u63a5\\u7d9a\\u3055\\u308c\\u3066\\u3044\\u307e\\u305b\\u3093\\u3002\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Hostinger Reach\\u306b\\u63a5\\u7d9a\\u3057\\u3066\\u3044\\u307e\\u305b\\u3093\\u3002\\u3053\\u306e\\u30d6\\u30ed\\u30c3\\u30af\\u306b\\u5b8c\\u5168\\u306b\\u30a2\\u30af\\u30bb\\u30b9\\u3059\\u308b\\u306b\\u306f\\u3001Hostinger Reach\\u30a2\\u30ab\\u30a6\\u30f3\\u30c8\\u306b\\u63a5\\u7d9a\\u3059\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308a\\u307e\\u3059\\u3002\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pl_PL.l10n.php","ext":"php","size":8515,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Polish','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:59+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'pl_PL','plural-forms'=>'nplurals=3; plural=(n==1 ? 0 : n%10 >= 2 && n%10<=4 &&(n%100<10||n%100 >= 20)? 1 : 2);','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Zintegruj swoj\u0105 witryn\u0119 WordPress z Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Uwaga:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach wymaga minimalnej wersji PHP <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'U\u017cywana jest <b>%s<\/b> wersja PHP.','Email Marketing'=>'Marketing e-mailowy','Thanks for subscribing.'=>'Dzi\u0119kujemy za subskrypcj\u0119.','Something went wrong. Please try again.'=>'Co\u015b posz\u0142o nie tak. Spr\u00f3buj ponownie.','Email'=>'E-mail','Name'=>'Nazwa','Surname'=>'Nazwisko','Subscribe'=>'Subskrybuj','Contact Form 7'=>'Formularz kontaktowy 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Co\u015b posz\u0142o nie tak','Welcome to Reach'=>'Witamy w Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Tw\u00f3rz kampanie e-mail za pomoc\u0105 szablon\u00f3w stworzonych przez sztuczn\u0105 inteligencj\u0119, kt\u00f3re pasuj\u0105 do Twojego stylu. Natychmiastowa synchronizacja z witryn\u0105 WordPress i \u0142atwe \u0142\u0105czenie si\u0119 z odbiorcami.','Reach is already connected to another site.'=>'Zasi\u0119g jest ju\u017c po\u0142\u0105czony z inn\u0105 witryn\u0105.','Disconnect it to link this site instead.'=>'Od\u0142\u0105cz go, aby po\u0142\u0105czy\u0107 si\u0119 z t\u0105 stron\u0105.','Manage'=>'Zarz\u0105dzanie','Start for free'=>'Zacznij za darmo','This month'=>'W tym miesi\u0105cu','Your plan'=>'Tw\u00f3j plan','Upgrade'=>'Aktualizacja','Emails'=>'E-maile','Sent'=>'Wys\u0142any','Remaining'=>'Pozosta\u0142e','Campaigns'=>'Kampanie','Average CTOR'=>'\u015aredni CTOR','Subscribers'=>'Subskrybenci','New subscribers'=>'Nowi subskrybenci','Unsubscribes'=>'Rezygnacja z subskrypcji','Total subscribers'=>'Ca\u0142kowita liczba subskrybent\u00f3w','Templates'=>'Szablony','Settings'=>'Ustawienia','Forms'=>'Formularze','Add form'=>'Dodaj formularz','Start collecting form submissions'=>'Rozpocznij zbieranie zg\u0142osze\u0144 formularzy','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Wybierz spos\u00f3b zarz\u0105dzania formularzami na swojej stronie. Utw\u00f3rz nowy formularz za pomoc\u0105 Hostinger Reach lub pod\u0142\u0105cz wtyczk\u0119 innej firmy.','Add more forms'=>'Dodaj wi\u0119cej formularzy','Connect more forms to expand your contact list and capture leads from different pages.'=>'Po\u0142\u0105cz wi\u0119cej formularzy, aby rozszerzy\u0107 list\u0119 kontakt\u00f3w i pozyskiwa\u0107 potencjalnych klient\u00f3w z r\u00f3\u017cnych stron.','New page'=>'Nowa strona','FAQ'=>'FAQ','What is Hostinger Reach email marketing service?'=>'Czym jest us\u0142uga e-mail marketingu Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach to oparte na sztucznej inteligencji narz\u0119dzie do e-mail marketingu dla ma\u0142ych firm i tw\u00f3rc\u00f3w. Obs\u0142uguje ca\u0142\u0105 podr\u00f3\u017c e-mail marketingu - od tworzenia list kontakt\u00f3w po wysy\u0142anie kampanii i \u015bledzenie wynik\u00f3w.','How is Hostinger Reach different from other email marketing apps?'=>'Czym Hostinger Reach r\u00f3\u017cni si\u0119 od innych aplikacji do e-mail marketingu?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach zosta\u0142 stworzony z my\u015bl\u0105 o prostocie, szybko\u015bci i wynikach - nie wymaga do\u015bwiadczenia w projektowaniu ani marketingu. W przeciwie\u0144stwie do wi\u0119kszo\u015bci narz\u0119dzi e-mail, rdzeniem Reach jest oparty na sztucznej inteligencji kreator szablon\u00f3w. Niezale\u017cnie od tego, czy chodzi o wprowadzenie produktu, ofert\u0119 specjaln\u0105 czy aktualizacj\u0119 biuletynu, natychmiast tworzy profesjonaln\u0105, przyjazn\u0105 dla urz\u0105dze\u0144 mobilnych wiadomo\u015b\u0107 e-mail. Nie tylko pisze tre\u015b\u0107 za Ciebie, ale tak\u017ce sugeruje najlepszy uk\u0142ad wiadomo\u015bci i zapisuje ustawienia stylu, dzi\u0119ki czemu nigdy nie zaczynasz od zera.<br><br>Ka\u017cdy szablon mo\u017cna dostosowa\u0107, dzi\u0119ki czemu e-maile odzwierciedlaj\u0105 wygl\u0105d, styl i g\u0142os Twojej marki. A poniewa\u017c szablony s\u0105 zbudowane przy u\u017cyciu sprawdzonych najlepszych praktyk, s\u0105 zoptymalizowane pod k\u0105tem czytelno\u015bci, dost\u0119pno\u015bci i zaanga\u017cowania czytelnik\u00f3w.','How much does it cost to use Hostinger Reach?'=>'Ile kosztuje korzystanie z Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach oferuje darmowy plan na okres jednego roku - idealny na pocz\u0105tek. P\u0142atne plany s\u0105 oparte na liczbie unikalnych kontakt\u00f3w, do kt\u00f3rych chcesz dotrze\u0107 i liczbie wysy\u0142anych miesi\u0119cznie wiadomo\u015bci e-mail. Wraz ze wzrostem liczby odbiorc\u00f3w mo\u017cesz przej\u015b\u0107 na plan, kt\u00f3ry odpowiada Twoim potrzebom. Reach nie ogranicza listy kontakt\u00f3w, wi\u0119c nie musisz martwi\u0107 si\u0119 o utrat\u0119 danych i mo\u017cesz konsekwentnie powi\u0119ksza\u0107 grono odbiorc\u00f3w.','opens in new tab'=>'otwiera si\u0119 w nowej karcie','Banner background image for'=>'Obraz t\u0142a banera dla','Background image for'=>'Obraz t\u0142a dla','usage statistics'=>'statystyki u\u017cytkowania','remaining out of'=>'pozostaj\u0105cy poza','total'=>'ca\u0142kowity','Progress: {current} of {total} used ({percentage}%)'=>'Post\u0119p: {bie\u017c\u0105cy} z {ca\u0142kowity} wykorzystany ({procent}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'Wsp\u00f3\u0142czynnik klikni\u0119\u0107 do otwar\u0107 informuje o tym, jaki procent otwar\u0107 spowodowa\u0142 r\u00f3wnie\u017c klikni\u0119cie. Dobry wska\u017anik CTOR wynosi 6-17%, w zale\u017cno\u015bci od bran\u017cy.','Add form clicked'=>'Dodano klikni\u0119ty formularz','Select page'=>'Wybierz stron\u0119','Plugin'=>'Wtyczka','Entries'=>'Wpisy','Status'=>'Status','Active'=>'Aktywny','Inactive'=>'Nieaktywny','Go to plugin'=>'Przejd\u017a do wtyczki','Disconnect'=>'Roz\u0142\u0105czenie','View form'=>'Wy\u015bwietl formularz','Edit form'=>'Edytuj formularz','Loading plugins...'=>'\u0141adowanie wtyczek...','Expand {pluginName} details'=>'Rozwi\u0144 szczeg\u00f3\u0142y {pluginName}','Collapse {pluginName} details'=>'Zwi\u0144 szczeg\u00f3\u0142y {pluginName}','Thanks for subscribing'=>'Dzi\u0119kujemy za subskrypcj\u0119','Something went wrong. Please try again'=>'Co\u015b posz\u0142o nie tak. Spr\u00f3buj ponownie','Form ID'=>'Identyfikator formularza','Unique identifier for this form'=>'Unikalny identyfikator dla tego formularza','Contact List'=>'Lista kontakt\u00f3w','Create New List'=>'Utw\u00f3rz now\u0105 list\u0119','New Contact List'=>'Nowa lista kontakt\u00f3w','Name for the new Contact List'=>'Nazwa dla nowej listy kontakt\u00f3w','Show Name Field?'=>'Pokaza\u0107 pole nazwy?','Show Surname Field?'=>'Pokaza\u0107 pole nazwiska?','Reach Subscription Form'=>'Formularz subskrypcji zasi\u0119gu','block title\u0004Reach Subscription Form'=>'Formularz subskrypcji zasi\u0119gu','block description\u0004Subscription form for Hostinger Reach'=>'Formularz subskrypcji dla Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_ES.l10n.php","ext":"php","size":8590,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Spanish (Spain)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:32+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'es_ES','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integre su sitio WordPress con Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Atenci\u00f3n:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach requiere una versi\u00f3n m\u00ednima de PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Est\u00e1 ejecutando <b>%s<\/b> versi\u00f3n de PHP.','Email Marketing'=>'Marketing por correo electr\u00f3nico','Thanks for subscribing.'=>'Gracias por suscribirse.','Something went wrong. Please try again.'=>'Algo ha ido mal. Por favor, int\u00e9ntelo de nuevo.','Email'=>'Correo electr\u00f3nico','Name'=>'Nombre','Surname'=>'Apellido','Subscribe'=>'Suscr\u00edbase a','Contact Form 7'=>'Formulario de contacto 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'Formularios WP Lite','Something went wrong'=>'Algo sali\u00f3 mal','Welcome to Reach'=>'Bienvenido a Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Cree campa\u00f1as de correo electr\u00f3nico con plantillas creadas con IA que se adapten a su estilo. Sincroniza instant\u00e1neamente con tu sitio WordPress y conecta con tu audiencia f\u00e1cilmente.','Reach is already connected to another site.'=>'Reach ya est\u00e1 conectado a otro sitio.','Disconnect it to link this site instead.'=>'Descon\u00e9ctelo para enlazar este sitio en su lugar.','Manage'=>'Gestione','Start for free'=>'Empezar gratis','This month'=>'Este mes','Your plan'=>'Su plan','Upgrade'=>'Actualizar','Emails'=>'Correos electr\u00f3nicos','Sent'=>'Enviado','Remaining'=>'Resto','Campaigns'=>'Campa\u00f1as','Average CTOR'=>'CTOR medio','Subscribers'=>'Abonados','New subscribers'=>'Nuevos abonados','Unsubscribes'=>'Darse de baja','Total subscribers'=>'Total de abonados','Templates'=>'Plantillas','Settings'=>'Ajustes','Forms'=>'Formularios','Add form'=>'A\u00f1adir formulario','Start collecting form submissions'=>'Empezar a recopilar formularios','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Elija c\u00f3mo desea gestionar los formularios de su sitio web. Crea un nuevo formulario con Hostinger Reach o conecta un plugin de terceros.','Add more forms'=>'A\u00f1adir m\u00e1s formularios','Connect more forms to expand your contact list and capture leads from different pages.'=>'Conecte m\u00e1s formularios para ampliar su lista de contactos y captar clientes potenciales de distintas p\u00e1ginas.','New page'=>'P\u00e1gina nueva','FAQ'=>'PREGUNTAS FRECUENTES','What is Hostinger Reach email marketing service?'=>'\u00bfQu\u00e9 es el servicio de marketing por correo electr\u00f3nico Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach es una herramienta de marketing por correo electr\u00f3nico basada en IA para peque\u00f1as empresas y creadores. Es compatible con todo el proceso de marketing por correo electr\u00f3nico, desde la creaci\u00f3n de listas de contactos hasta el env\u00edo de campa\u00f1as y el seguimiento de los resultados.','How is Hostinger Reach different from other email marketing apps?'=>'\u00bfEn qu\u00e9 se diferencia Hostinger Reach de otras aplicaciones de marketing por correo electr\u00f3nico?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach se ha creado para ofrecer simplicidad, velocidad y resultados, sin necesidad de tener experiencia en dise\u00f1o o marketing. A diferencia de la mayor\u00eda de las herramientas de correo electr\u00f3nico, el n\u00facleo de Reach es su creador de plantillas basado en inteligencia artificial. Ya se trate del lanzamiento de un producto, de una oferta especial o de la actualizaci\u00f3n de un bolet\u00edn, crea al instante un correo electr\u00f3nico profesional y apto para dispositivos m\u00f3viles. No s\u00f3lo redacta el contenido por ti, sino que tambi\u00e9n sugiere el mejor dise\u00f1o para tu mensaje y guarda tus ajustes de estilo para que nunca tengas que empezar de cero.<br><br>Cada plantilla es personalizable, para que tus correos electr\u00f3nicos reflejen el aspecto, la sensaci\u00f3n y la voz de tu marca. Y como las plantillas se han creado utilizando las mejores pr\u00e1cticas, est\u00e1n optimizadas para facilitar la lectura, la accesibilidad y la participaci\u00f3n del lector.','How much does it cost to use Hostinger Reach?'=>'\u00bfCu\u00e1nto cuesta utilizar Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach ofrece un plan gratuito de un a\u00f1o, perfecto para empezar. Los planes de pago se basan en el n\u00famero de contactos \u00fanicos a los que quieres llegar y el n\u00famero de correos electr\u00f3nicos que env\u00edas al mes. A medida que aumente tu audiencia, podr\u00e1s cambiar a un plan que se adapte a tus necesidades. Reach no limita tu lista de contactos, as\u00ed que no tienes que preocuparte por la p\u00e9rdida de datos y puedes hacer crecer tu audiencia de forma constante.','opens in new tab'=>'se abre en una nueva pesta\u00f1a','Banner background image for'=>'Imagen de fondo del banner para','Background image for'=>'Imagen de fondo para','usage statistics'=>'estad\u00edsticas de uso','remaining out of'=>'quedando fuera de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progreso: {actual} de {total} utilizado ({porcentaje}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'La tasa de clics por apertura le indica qu\u00e9 porcentaje de aperturas tambi\u00e9n dio lugar a un clic. Un buen CTOR es del 6-17%, dependiendo de tu sector.','Add form clicked'=>'A\u00f1adir formulario pulsado','Select page'=>'Seleccionar p\u00e1gina','Plugin'=>'Plugin','Entries'=>'Entradas','Status'=>'Estado','Active'=>'Activo','Inactive'=>'Inactivo','Go to plugin'=>'Ir al plugin','Disconnect'=>'Desconecte','View form'=>'Ver formulario','Edit form'=>'Editar formulario','Loading plugins...'=>'Cargando plugins...','Expand {pluginName} details'=>'Ampliar {pluginName} detalles','Collapse {pluginName} details'=>'Contraer {pluginName} detalles','Thanks for subscribing'=>'Gracias por suscribirse','Something went wrong. Please try again'=>'Algo ha ido mal. Vuelva a intentarlo','Form ID'=>'Formulario ID','Unique identifier for this form'=>'Identificador \u00fanico para este formulario','Contact List'=>'Lista de contactos','Create New List'=>'Crear nueva lista','New Contact List'=>'Nueva lista de contactos','Name for the new Contact List'=>'Nombre de la nueva lista de contactos','Show Name Field?'=>'\u00bfMostrar campo de nombre?','Show Surname Field?'=>'\u00bfMostrar campo de apellidos?','Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block title\u0004Reach Subscription Form'=>'Formulario de suscripci\u00f3n a Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formulario de suscripci\u00f3n a Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ko_KR-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":335,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-10 12:39+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ko_KR\",\"plural-forms\":\"nplurals=1; plural=0;\"},\"Reach Subscription Form\":[\"Reach \\uad6c\\ub3c5 \\uc591\\uc2dd\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ar-cd826e3eb5697ab3737f63c1ffc52339.json","ext":"json","size":524,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 15:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/index.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ar\",\"plural-forms\":\"nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100 >= 3 && n%100<=10 ? 3 : n%100 >= 11 && n%100<=99 ? 4 : 5;\"},\"Reach Subscription Form\":[\"\\u0627\\u0633\\u062a\\u0645\\u0627\\u0631\\u0629 \\u0627\\u0644\\u0627\\u0634\\u062a\\u0631\\u0627\\u0643 \\u0641\\u064a \\u0631\\u064a\\u062a\\u0634\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-es_MX-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":671,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-07 19:25+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"es_MX\",\"plural-forms\":\"nplurals=2; plural=n != 1;\"},\"Connect Now\":[\"Conectar ya\"],\"You are not connected to Hostinger Reach\":[\"No est\\u00e1s conectado a Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"No est\\u00e1 conectado a Hostinger Reach. Para obtener acceso completo a este bloque, debe conectar su cuenta Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-th.l10n.php","ext":"php","size":13658,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Thai','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:33+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'th','plural-forms'=>'nplurals=1; plural=0;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'\u0e42\u0e2e\u0e2a\u0e15\u0e34\u0e49\u0e07\u0e40\u0e01\u0e2d\u0e23\u0e4c \u0e23\u0e35\u0e0a','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'\u0e1c\u0e2a\u0e32\u0e19\u0e40\u0e27\u0e47\u0e1a\u0e44\u0e0b\u0e15\u0e4c WordPress \u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e01\u0e31\u0e1a Hostinger Reach','Hostinger'=>'\u0e42\u0e2e\u0e2a\u0e15\u0e34\u0e49\u0e07\u0e40\u0e01\u0e2d\u0e23\u0e4c','Attention:'=>'\u0e40\u0e23\u0e35\u0e22\u0e19 \u0e1c\u0e39\u0e49\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach \u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e0a\u0e31\u0e19 PHP \u0e02\u0e31\u0e49\u0e19\u0e15\u0e48\u0e33 <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'\u0e04\u0e38\u0e13\u0e01\u0e33\u0e25\u0e31\u0e07\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 <b>%s<\/b> PHP \u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e0a\u0e31\u0e19','Email Marketing'=>'\u0e01\u0e32\u0e23\u0e15\u0e25\u0e32\u0e14\u0e17\u0e32\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25','Thanks for subscribing.'=>'\u0e02\u0e2d\u0e1a\u0e04\u0e38\u0e13\u0e17\u0e35\u0e48\u0e2a\u0e21\u0e31\u0e04\u0e23','Something went wrong. Please try again.'=>'\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 \u0e01\u0e23\u0e38\u0e13\u0e32\u0e25\u0e2d\u0e07\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07','Email'=>'\u0e2d\u0e35\u0e40\u0e21\u0e25','Name'=>'\u0e0a\u0e37\u0e48\u0e2d','Surname'=>'\u0e19\u0e32\u0e21\u0e2a\u0e01\u0e38\u0e25','Subscribe'=>'\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01','Contact Form 7'=>'\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14','Welcome to Reach'=>'\u0e22\u0e34\u0e19\u0e14\u0e35\u0e15\u0e49\u0e2d\u0e19\u0e23\u0e31\u0e1a\u0e2a\u0e39\u0e48 Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e04\u0e21\u0e40\u0e1b\u0e0d\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e40\u0e17\u0e21\u0e40\u0e1e\u0e25\u0e15\u0e17\u0e35\u0e48\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e14\u0e49\u0e27\u0e22 AI \u0e0b\u0e36\u0e48\u0e07\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a\u0e2a\u0e44\u0e15\u0e25\u0e4c\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13 \u0e0b\u0e34\u0e07\u0e04\u0e4c\u0e01\u0e31\u0e1a\u0e40\u0e27\u0e47\u0e1a\u0e44\u0e0b\u0e15\u0e4c WordPress \u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e44\u0e14\u0e49\u0e17\u0e31\u0e19\u0e17\u0e35\u0e41\u0e25\u0e30\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e1a\u0e1c\u0e39\u0e49\u0e0a\u0e21\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e07\u0e48\u0e32\u0e22\u0e14\u0e32\u0e22','Reach is already connected to another site.'=>'Reach \u0e44\u0e14\u0e49\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e1a\u0e2d\u0e35\u0e01\u0e44\u0e0b\u0e15\u0e4c\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e41\u0e25\u0e49\u0e27','Disconnect it to link this site instead.'=>'\u0e15\u0e31\u0e14\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e40\u0e27\u0e47\u0e1a\u0e44\u0e0b\u0e15\u0e4c\u0e19\u0e35\u0e49\u0e41\u0e17\u0e19','Manage'=>'\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23','Start for free'=>'\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e1f\u0e23\u0e35','This month'=>'\u0e40\u0e14\u0e37\u0e2d\u0e19\u0e19\u0e35\u0e49','Your plan'=>'\u0e41\u0e1c\u0e19\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13','Upgrade'=>'\u0e2d\u0e31\u0e1b\u0e40\u0e01\u0e23\u0e14','Emails'=>'\u0e2d\u0e35\u0e40\u0e21\u0e25','Sent'=>'\u0e2a\u0e48\u0e07\u0e41\u0e25\u0e49\u0e27','Remaining'=>'\u0e04\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d','Campaigns'=>'\u0e41\u0e04\u0e21\u0e40\u0e1b\u0e0d','Average CTOR'=>'\u0e04\u0e48\u0e32\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22 CTOR','Subscribers'=>'\u0e1c\u0e39\u0e49\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01','New subscribers'=>'\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e43\u0e2b\u0e21\u0e48','Unsubscribes'=>'\u0e22\u0e01\u0e40\u0e25\u0e34\u0e01\u0e01\u0e32\u0e23\u0e2a\u0e21\u0e31\u0e04\u0e23','Total subscribers'=>'\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1c\u0e39\u0e49\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14','Templates'=>'\u0e40\u0e17\u0e21\u0e40\u0e1e\u0e25\u0e15','Settings'=>'\u0e01\u0e32\u0e23\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32','Forms'=>'\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Add form'=>'\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Start collecting form submissions'=>'\u0e40\u0e23\u0e34\u0e48\u0e21\u0e23\u0e27\u0e1a\u0e23\u0e27\u0e21\u0e01\u0e32\u0e23\u0e2a\u0e48\u0e07\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e27\u0e34\u0e18\u0e35\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e1a\u0e19\u0e40\u0e27\u0e47\u0e1a\u0e44\u0e0b\u0e15\u0e4c\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13 \u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e43\u0e2b\u0e21\u0e48\u0e14\u0e49\u0e27\u0e22 Hostinger Reach \u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e1b\u0e25\u0e31\u0e4a\u0e01\u0e2d\u0e34\u0e19\u0e08\u0e32\u0e01\u0e1a\u0e38\u0e04\u0e04\u0e25\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21','Add more forms'=>'\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Connect more forms to expand your contact list and capture leads from different pages.'=>'\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e02\u0e22\u0e32\u0e22\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e41\u0e25\u0e30\u0e14\u0e36\u0e07\u0e14\u0e39\u0e14\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e08\u0e32\u0e01\u0e2b\u0e19\u0e49\u0e32\u0e15\u0e48\u0e32\u0e07\u0e46','New page'=>'\u0e2b\u0e19\u0e49\u0e32\u0e43\u0e2b\u0e21\u0e48','FAQ'=>'\u0e04\u0e33\u0e16\u0e32\u0e21\u0e17\u0e35\u0e48\u0e1e\u0e1a\u0e1a\u0e48\u0e2d\u0e22','What is Hostinger Reach email marketing service?'=>'\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e01\u0e32\u0e23\u0e15\u0e25\u0e32\u0e14\u0e17\u0e32\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25 Hostinger Reach \u0e04\u0e37\u0e2d\u0e2d\u0e30\u0e44\u0e23?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'Hostinger Reach \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e15\u0e25\u0e32\u0e14\u0e17\u0e32\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e17\u0e35\u0e48\u0e02\u0e31\u0e1a\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e14\u0e49\u0e27\u0e22 AI \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e02\u0e19\u0e32\u0e14\u0e40\u0e25\u0e47\u0e01\u0e41\u0e25\u0e30\u0e1c\u0e39\u0e49\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e23\u0e23\u0e04\u0e4c \u0e21\u0e31\u0e19\u0e23\u0e2d\u0e07\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e40\u0e14\u0e34\u0e19\u0e17\u0e32\u0e07\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e15\u0e25\u0e32\u0e14\u0e17\u0e32\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u2014\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e48\u0e07\u0e41\u0e04\u0e21\u0e40\u0e1b\u0e0d\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e15\u0e34\u0e14\u0e15\u0e32\u0e21\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c','How is Hostinger Reach different from other email marketing apps?'=>'Hostinger Reach \u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01\u0e41\u0e2d\u0e1b\u0e01\u0e32\u0e23\u0e15\u0e25\u0e32\u0e14\u0e17\u0e32\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e2d\u0e37\u0e48\u0e19 \u0e46 \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'Hostinger Reach \u0e16\u0e39\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e36\u0e49\u0e19\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e40\u0e23\u0e35\u0e22\u0e1a\u0e07\u0e48\u0e32\u0e22 \u0e04\u0e27\u0e32\u0e21\u0e40\u0e23\u0e47\u0e27 \u0e41\u0e25\u0e30\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c \u2013 \u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e1b\u0e23\u0e30\u0e2a\u0e1a\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e14\u0e49\u0e32\u0e19\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e41\u0e1a\u0e1a\u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e15\u0e25\u0e32\u0e14 \u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48 \u0e17\u0e35\u0e48\u0e41\u0e01\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e02\u0e2d\u0e07 Reach \u0e04\u0e37\u0e2d\u0e1c\u0e39\u0e49\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e17\u0e21\u0e40\u0e1e\u0e25\u0e15\u0e17\u0e35\u0e48\u0e02\u0e31\u0e1a\u0e40\u0e04\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e14\u0e49\u0e27\u0e22 AI \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e1b\u0e34\u0e14\u0e15\u0e31\u0e27\u0e1c\u0e25\u0e34\u0e15\u0e20\u0e31\u0e13\u0e11\u0e4c \u0e02\u0e49\u0e2d\u0e40\u0e2a\u0e19\u0e2d\u0e1e\u0e34\u0e40\u0e28\u0e29 \u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2d\u0e31\u0e1b\u0e40\u0e14\u0e15\u0e08\u0e14\u0e2b\u0e21\u0e32\u0e22\u0e02\u0e48\u0e32\u0e27 \u0e21\u0e31\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e17\u0e35\u0e48\u0e14\u0e39\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e37\u0e2d\u0e2d\u0e32\u0e0a\u0e35\u0e1e\u0e41\u0e25\u0e30\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e01\u0e31\u0e1a\u0e21\u0e37\u0e2d\u0e16\u0e37\u0e2d\u0e44\u0e14\u0e49\u0e17\u0e31\u0e19\u0e17\u0e35 \u0e44\u0e21\u0e48\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e41\u0e15\u0e48\u0e40\u0e02\u0e35\u0e22\u0e19\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e2b\u0e32\u0e43\u0e2b\u0e49\u0e04\u0e38\u0e13\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19 \u0e41\u0e15\u0e48\u0e22\u0e31\u0e07\u0e41\u0e19\u0e30\u0e19\u0e33\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e17\u0e35\u0e48\u0e14\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e41\u0e25\u0e30\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01\u0e01\u0e32\u0e23\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32\u0e2a\u0e44\u0e15\u0e25\u0e4c\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e44\u0e27\u0e49 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e43\u0e2b\u0e21\u0e48\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e49\u0e19<br><br>\u0e17\u0e38\u0e01\u0e40\u0e17\u0e21\u0e40\u0e1e\u0e25\u0e15\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e1b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e07\u0e44\u0e14\u0e49 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e08\u0e30\u0e2a\u0e30\u0e17\u0e49\u0e2d\u0e19\u0e16\u0e36\u0e07\u0e25\u0e38\u0e04, \u0e1a\u0e23\u0e23\u0e22\u0e32\u0e01\u0e32\u0e28, \u0e41\u0e25\u0e30\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e02\u0e2d\u0e07\u0e41\u0e1a\u0e23\u0e19\u0e14\u0e4c\u0e04\u0e38\u0e13 \u0e41\u0e25\u0e30\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e40\u0e17\u0e21\u0e40\u0e1e\u0e25\u0e15\u0e16\u0e39\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e36\u0e49\u0e19\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e41\u0e19\u0e27\u0e17\u0e32\u0e07\u0e17\u0e35\u0e48\u0e14\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e1e\u0e34\u0e2a\u0e39\u0e08\u0e19\u0e4c\u0e41\u0e25\u0e49\u0e27 \u0e1e\u0e27\u0e01\u0e21\u0e31\u0e19\u0e08\u0e36\u0e07\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e07\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2d\u0e48\u0e32\u0e19, \u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07, \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e21\u0e35\u0e2a\u0e48\u0e27\u0e19\u0e23\u0e48\u0e27\u0e21\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e2d\u0e48\u0e32\u0e19','How much does it cost to use Hostinger Reach?'=>'\u0e04\u0e48\u0e32\u0e43\u0e0a\u0e49\u0e08\u0e48\u0e32\u0e22\u0e43\u0e19\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 Hostinger Reach \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'Reach \u0e43\u0e2b\u0e49\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e41\u0e1c\u0e19\u0e1f\u0e23\u0e35\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e27\u0e25\u0e32\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e1b\u0e35 \u2013 \u0e40\u0e2b\u0e21\u0e32\u0e30\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19. \u0e41\u0e1c\u0e19\u0e0a\u0e33\u0e23\u0e30\u0e40\u0e07\u0e34\u0e19\u0e08\u0e30\u0e02\u0e36\u0e49\u0e19\u0e2d\u0e22\u0e39\u0e48\u0e01\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e41\u0e25\u0e30\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2d\u0e35\u0e40\u0e21\u0e25\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e2a\u0e48\u0e07\u0e15\u0e48\u0e2d\u0e40\u0e14\u0e37\u0e2d\u0e19. \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e0a\u0e21\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e36\u0e49\u0e19 \u0e04\u0e38\u0e13\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e31\u0e1b\u0e40\u0e01\u0e23\u0e14\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e1c\u0e19\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e01\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e44\u0e14\u0e49. Reach \u0e44\u0e21\u0e48\u0e08\u0e33\u0e01\u0e31\u0e14\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e43\u0e19\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e07\u0e27\u0e25\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e39\u0e0d\u0e40\u0e2a\u0e35\u0e22\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e25\u0e30\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e15\u0e34\u0e1a\u0e42\u0e15\u0e1c\u0e39\u0e49\u0e0a\u0e21\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07.','opens in new tab'=>'\u0e40\u0e1b\u0e34\u0e14\u0e43\u0e19\u0e41\u0e17\u0e47\u0e1a\u0e43\u0e2b\u0e21\u0e48','Banner background image for'=>'\u0e20\u0e32\u0e1e\u0e1e\u0e37\u0e49\u0e19\u0e2b\u0e25\u0e31\u0e07\u0e41\u0e1a\u0e19\u0e40\u0e19\u0e2d\u0e23\u0e4c\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a','Background image for'=>'\u0e20\u0e32\u0e1e\u0e1e\u0e37\u0e49\u0e19\u0e2b\u0e25\u0e31\u0e07\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a','usage statistics'=>'\u0e2a\u0e16\u0e34\u0e15\u0e34\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19','remaining out of'=>'\u0e22\u0e31\u0e07\u0e04\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e19\u0e2d\u0e01','total'=>'\u0e23\u0e27\u0e21','Progress: {current} of {total} used ({percentage}%)'=>'\u0e04\u0e27\u0e32\u0e21\u0e04\u0e37\u0e1a\u0e2b\u0e19\u0e49\u0e32: {\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19} \u0e08\u0e32\u0e01 {\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14} \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49 ({\u0e40\u0e1b\u0e2d\u0e23\u0e4c\u0e40\u0e0b\u0e47\u0e19\u0e15\u0e4c}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'\u0e2d\u0e31\u0e15\u0e23\u0e32\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e04\u0e25\u0e34\u0e01\u0e1a\u0e2d\u0e01\u0e04\u0e38\u0e13\u0e27\u0e48\u0e32\u0e01\u0e35\u0e48\u0e40\u0e1b\u0e2d\u0e23\u0e4c\u0e40\u0e0b\u0e47\u0e19\u0e15\u0e4c\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e17\u0e35\u0e48\u0e2a\u0e48\u0e07\u0e1c\u0e25\u0e43\u0e2b\u0e49\u0e40\u0e01\u0e34\u0e14\u0e01\u0e32\u0e23\u0e04\u0e25\u0e34\u0e01\u0e14\u0e49\u0e27\u0e22 \u0e2d\u0e31\u0e15\u0e23\u0e32\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e04\u0e25\u0e34\u0e01\u0e17\u0e35\u0e48\u0e14\u0e35\u0e04\u0e37\u0e2d 6-17% \u0e02\u0e36\u0e49\u0e19\u0e2d\u0e22\u0e39\u0e48\u0e01\u0e31\u0e1a\u0e2d\u0e38\u0e15\u0e2a\u0e32\u0e2b\u0e01\u0e23\u0e23\u0e21\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13','Add form clicked'=>'\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e04\u0e25\u0e34\u0e01','Select page'=>'\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e2b\u0e19\u0e49\u0e32','Plugin'=>'\u0e1b\u0e25\u0e31\u0e4a\u0e01\u0e2d\u0e34\u0e19','Entries'=>'\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23','Status'=>'\u0e2a\u0e16\u0e32\u0e19\u0e30','Active'=>'\u0e41\u0e2d\u0e04\u0e17\u0e35\u0e1f','Inactive'=>'\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19','Go to plugin'=>'\u0e44\u0e1b\u0e17\u0e35\u0e48\u0e1b\u0e25\u0e31\u0e4a\u0e01\u0e2d\u0e34\u0e19','Disconnect'=>'\u0e15\u0e31\u0e14\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d','View form'=>'\u0e14\u0e39\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Edit form'=>'\u0e41\u0e01\u0e49\u0e44\u0e02\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Loading plugins...'=>'\u0e01\u0e33\u0e25\u0e31\u0e07\u0e42\u0e2b\u0e25\u0e14\u0e1b\u0e25\u0e31\u0e4a\u0e01\u0e2d\u0e34\u0e19...','Expand {pluginName} details'=>'\u0e02\u0e22\u0e32\u0e22\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14 {pluginName}','Collapse {pluginName} details'=>'\u0e22\u0e38\u0e1a\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14 {\u0e0a\u0e37\u0e48\u0e2d\u0e1b\u0e25\u0e31\u0e4a\u0e01\u0e2d\u0e34\u0e19}','Thanks for subscribing'=>'\u0e02\u0e2d\u0e1a\u0e04\u0e38\u0e13\u0e17\u0e35\u0e48\u0e2a\u0e21\u0e31\u0e04\u0e23','Something went wrong. Please try again'=>'\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 \u0e01\u0e23\u0e38\u0e13\u0e32\u0e25\u0e2d\u0e07\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07','Form ID'=>'\u0e23\u0e2b\u0e31\u0e2a\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21','Unique identifier for this form'=>'\u0e23\u0e2b\u0e31\u0e2a\u0e1b\u0e23\u0e30\u0e08\u0e33\u0e15\u0e31\u0e27\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e19\u0e35\u0e49','Contact List'=>'\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d','Create New List'=>'\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e21\u0e48','New Contact List'=>'\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e43\u0e2b\u0e21\u0e48','Name for the new Contact List'=>'\u0e0a\u0e37\u0e48\u0e2d\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e23\u0e32\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e43\u0e2b\u0e21\u0e48','Show Name Field?'=>'\u0e41\u0e2a\u0e14\u0e07\u0e1f\u0e34\u0e25\u0e14\u0e4c\u0e0a\u0e37\u0e48\u0e2d\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48?','Show Surname Field?'=>'\u0e41\u0e2a\u0e14\u0e07\u0e0a\u0e48\u0e2d\u0e07\u0e19\u0e32\u0e21\u0e2a\u0e01\u0e38\u0e25\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48?','Reach Subscription Form'=>'\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01','block title\u0004Reach Subscription Form'=>'\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01','block description\u0004Subscription form for Hostinger Reach'=>'\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e2a\u0e21\u0e31\u0e04\u0e23\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-ar-4494d724fa3bd53a14be52d451bab181.json","ext":"json","size":2040,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 15:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/edit.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"ar\",\"plural-forms\":\"nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100 >= 3 && n%100<=10 ? 3 : n%100 >= 11 && n%100<=99 ? 4 : 5;\"},\"Contact List\":[\"\\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u0647\\u0627\\u062a \\u0627\\u0644\\u0627\\u062a\\u0635\\u0627\\u0644\"],\"Create New List\":[\"\\u0625\\u0646\\u0634\\u0627\\u0621 \\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u062f\\u064a\\u062f\\u0629\"],\"Email\":[\"\\u0627\\u0644\\u0628\\u0631\\u064a\\u062f \\u0627\\u0644\\u0625\\u0644\\u0643\\u062a\\u0631\\u0648\\u0646\\u064a\"],\"Form ID\":[\"\\u0645\\u0639\\u0631\\u0651\\u0641 \\u0627\\u0644\\u0646\\u0645\\u0648\\u0630\\u062c\"],\"Name\":[\"\\u0627\\u0644\\u0627\\u0633\\u0645\"],\"Name for the new Contact List\":[\"\\u0627\\u0633\\u0645 \\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u0647\\u0627\\u062a \\u0627\\u0644\\u0627\\u062a\\u0635\\u0627\\u0644 \\u0627\\u0644\\u062c\\u062f\\u064a\\u062f\\u0629\"],\"New Contact List\":[\"\\u0642\\u0627\\u0626\\u0645\\u0629 \\u062c\\u0647\\u0627\\u062a \\u0627\\u0644\\u0627\\u062a\\u0635\\u0627\\u0644 \\u0627\\u0644\\u062c\\u062f\\u064a\\u062f\\u0629\"],\"Settings\":[\"\\u0627\\u0644\\u0625\\u0639\\u062f\\u0627\\u062f\\u0627\\u062a\"],\"Show Name Field?\":[\"\\u0625\\u0638\\u0647\\u0627\\u0631 \\u062d\\u0642\\u0644 \\u0627\\u0644\\u0627\\u0633\\u0645\\u061f\"],\"Show Surname Field?\":[\"\\u0625\\u0638\\u0647\\u0627\\u0631 \\u062d\\u0642\\u0644 \\u0627\\u0644\\u0644\\u0642\\u0628\\u061f\"],\"Something went wrong. Please try again\":[\"\\u062d\\u062f\\u062b \\u062e\\u0637\\u0623 \\u0645\\u0627. \\u064a\\u0631\\u062c\\u0649 \\u0627\\u0644\\u0645\\u062d\\u0627\\u0648\\u0644\\u0629 \\u0645\\u0631\\u0629 \\u0623\\u062e\\u0631\\u0649\"],\"Surname\":[\"\\u0627\\u0644\\u0644\\u0642\\u0628\"],\"Thanks for subscribing\":[\"\\u0634\\u0643\\u0631\\u0627\\u064b \\u0644\\u0627\\u0634\\u062a\\u0631\\u0627\\u0643\\u0643\"],\"Unique identifier for this form\":[\"\\u0627\\u0644\\u0645\\u0639\\u0631\\u0641 \\u0627\\u0644\\u0641\\u0631\\u064a\\u062f \\u0644\\u0647\\u0630\\u0627 \\u0627\\u0644\\u0646\\u0645\\u0648\\u0630\\u062c\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-pt_PT.l10n.php","ext":"php","size":8576,"mtime":1757330207,"type":"text","content":"<?php\nreturn ['project-id-version'=>'Hostinger Reach 1.0.0','report-msgid-bugs-to'=>'https:\/\/wordpress.org\/support\/plugin\/hostinger-reach','last-translator'=>'','language-team'=>'Portuguese (Portugal)','mime-version'=>'1.0','content-type'=>'text\/plain; charset=UTF-8','content-transfer-encoding'=>'8bit','pot-creation-date'=>'2025-07-31T11:19:40+03:00','po-revision-date'=>'2025-08-04 11:31+0000','x-generator'=>'Loco https:\/\/localise.biz\/','x-domain'=>'hostinger-reach','language'=>'pt_PT','plural-forms'=>'nplurals=2; plural=n != 1;','x-loco-version'=>'2.8.0; wp-6.8.1; php-8.2.27','messages'=>['Hostinger Reach'=>'Hostinger Reach','https:\/\/hostinger.com'=>'https:\/\/hostinger.com','Integrate your WordPress site with Hostinger Reach.'=>'Integre o seu site WordPress com o Hostinger Reach.','Hostinger'=>'Hostinger','Attention:'=>'Aten\u00e7\u00e3o:','Hostinger Reach requires minimum PHP version of <b>%s<\/b>. '=>'Hostinger Reach requer uma vers\u00e3o m\u00ednima de PHP de <b>%s<\/b>.','You are running <b>%s<\/b> PHP version.'=>'Voc\u00ea est\u00e1 executando a vers\u00e3o <b>%s<\/b> do PHP.','Email Marketing'=>'Marketing por correio eletr\u00f3nico','Thanks for subscribing.'=>'Obrigado por subscrever.','Something went wrong. Please try again.'=>'Algo correu mal. Por favor, tente novamente.','Email'=>'Correio eletr\u00f3nico','Name'=>'Nome','Surname'=>'Apelido','Subscribe'=>'Subscrever','Contact Form 7'=>'Formul\u00e1rio de contacto 7','WP Forms Lite %s'=>'WP Forms Lite %s','WP Forms Lite'=>'WP Forms Lite','Something went wrong'=>'Algo correu mal','Welcome to Reach'=>'Bem-vindo ao Reach','Create email campaigns using AI-crafted templates that match your style. Instantly sync with your WordPress site and connect with your audience easily.'=>'Crie campanhas de correio eletr\u00f3nico utilizando modelos criados por IA que correspondem ao seu estilo. Sincronize instantaneamente com o seu site WordPress e ligue-se facilmente ao seu p\u00fablico.','Reach is already connected to another site.'=>'O Reach j\u00e1 est\u00e1 ligado a outro s\u00edtio.','Disconnect it to link this site instead.'=>'Desligue-o para ligar a este s\u00edtio.','Manage'=>'Gerir','Start for free'=>'Comece gratuitamente','This month'=>'Este m\u00eas','Your plan'=>'O seu plano','Upgrade'=>'Atualiza\u00e7\u00e3o','Emails'=>'Emails','Sent'=>'Enviado','Remaining'=>'Restante','Campaigns'=>'Campanhas','Average CTOR'=>'M\u00e9dia CTOR','Subscribers'=>'Subscritores','New subscribers'=>'Novos subscritores','Unsubscribes'=>'Cancelamento de subscri\u00e7\u00f5es','Total subscribers'=>'Total de assinantes','Templates'=>'Modelos','Settings'=>'Defini\u00e7\u00f5es','Forms'=>'Formul\u00e1rios','Add form'=>'Adicionar formul\u00e1rio','Start collecting form submissions'=>'Come\u00e7ar a recolher envios de formul\u00e1rios','Choose how you\u2019d like to manage forms on your website. Create a new form with Hostinger Reach or connect a third-party plugin.'=>'Escolha como gostaria de gerir os formul\u00e1rios no seu site. Crie um novo formul\u00e1rio com o Hostinger Reach ou ligue um plugin de terceiros.','Add more forms'=>'Adicionar mais formul\u00e1rios','Connect more forms to expand your contact list and capture leads from different pages.'=>'Ligue mais formul\u00e1rios para expandir a sua lista de contactos e captar contactos de diferentes p\u00e1ginas.','New page'=>'Nova p\u00e1gina','FAQ'=>'FAQ','What is Hostinger Reach email marketing service?'=>'O que \u00e9 o servi\u00e7o de marketing por correio eletr\u00f3nico do Hostinger Reach?','Hostinger Reach is an AI-powered email marketing tool for small businesses and creators. It supports your entire email marketing journey\u2014from building contact lists to sending campaigns and tracking results.'=>'O Hostinger Reach \u00e9 uma ferramenta de marketing por e-mail alimentada por IA para pequenas empresas e criadores. Ele suporta toda a sua jornada de marketing por e-mail - desde a cria\u00e7\u00e3o de listas de contactos at\u00e9 ao envio de campanhas e acompanhamento de resultados.','How is Hostinger Reach different from other email marketing apps?'=>'Em que \u00e9 que o Hostinger Reach \u00e9 diferente de outras aplica\u00e7\u00f5es de marketing por correio eletr\u00f3nico?','Hostinger Reach is built for simplicity, speed, and results \u2013 no design or marketing experience needed. Unlike most email tools, at the core of Reach is its AI-powered template creator. Whether it is a product launch, special offer, or newsletter update, it instantly crafts a professional, mobile-friendly email. It not only writes the content for you; it also suggests the best layout for your message and saves your style settings so you\\'re never starting from scratch.<br><br>Every template is customizable, so your emails reflect your brand\\'s look, feel, and voice. And because the templates are built using proven best practices, they\\'re optimized for readability, accessibility, and reader engagement.'=>'O Hostinger Reach foi criado para ser simples, r\u00e1pido e ter resultados - n\u00e3o \u00e9 necess\u00e1rio ter experi\u00eancia em design ou marketing. Ao contr\u00e1rio da maioria das ferramentas de e-mail, no centro do Reach est\u00e1 o seu criador de modelos alimentado por IA. Quer se trate do lan\u00e7amento de um produto, de uma oferta especial ou da atualiza\u00e7\u00e3o de uma newsletter, cria instantaneamente um e-mail profissional e compat\u00edvel com dispositivos m\u00f3veis. Ele n\u00e3o apenas escreve o conte\u00fado para voc\u00ea; ele tamb\u00e9m sugere o melhor layout para sua mensagem e salva suas configura\u00e7\u00f5es de estilo para que voc\u00ea nunca comece do zero.<br><br>Todos os modelos s\u00e3o personaliz\u00e1veis, para que seus emails reflitam a apar\u00eancia, a sensa\u00e7\u00e3o e a voz da sua marca. E como os modelos s\u00e3o criados usando pr\u00e1ticas recomendadas comprovadas, eles s\u00e3o otimizados para facilitar a leitura, a acessibilidade e o envolvimento do leitor.','How much does it cost to use Hostinger Reach?'=>'Quanto \u00e9 que custa utilizar o Hostinger Reach?','Reach offers a free plan for one year\u2013 perfect for getting started. Paid plans are based on how many unique contacts you aim to reach and how many emails you send monthly. As your audience grows, you can upgrade to a plan that fits your needs. Reach does not limit your contact list, so you don\\'t need to worry about lost data and can consistently grow your audience.'=>'O Reach oferece um plano gratuito durante um ano - perfeito para come\u00e7ar. Os planos pagos baseiam-se no n\u00famero de contactos \u00fanicos que pretende alcan\u00e7ar e no n\u00famero de e-mails que envia mensalmente. \u00c0 medida que o seu p\u00fablico cresce, pode atualizar para um plano adequado \u00e0s suas necessidades. O Reach n\u00e3o limita a sua lista de contactos, pelo que n\u00e3o precisa de se preocupar com a perda de dados e pode aumentar consistentemente o seu p\u00fablico.','opens in new tab'=>'abre num novo separador','Banner background image for'=>'Imagem de fundo do banner para','Background image for'=>'Imagem de fundo para','usage statistics'=>'estat\u00edsticas de utiliza\u00e7\u00e3o','remaining out of'=>'restante fora de','total'=>'total','Progress: {current} of {total} used ({percentage}%)'=>'Progresso: {atual} de {total} utilizado ({percentagem}%)','Click-to-open rate tells you what percent of opens resulted in a click too. A good CTOR is 6-17%, depending on your industry.'=>'A taxa de cliques por abertura indica a percentagem de aberturas que tamb\u00e9m resultaram num clique. Uma boa CTOR \u00e9 de 6-17%, dependendo do seu sector.','Add form clicked'=>'Adicionar formul\u00e1rio clicado','Select page'=>'Selecionar p\u00e1gina','Plugin'=>'Plugin','Entries'=>'Entradas','Status'=>'Estado','Active'=>'Ativo','Inactive'=>'Inativo','Go to plugin'=>'Ir para o plugin','Disconnect'=>'Desligar','View form'=>'Ver formul\u00e1rio','Edit form'=>'Editar formul\u00e1rio','Loading plugins...'=>'Carregando plugins...','Expand {pluginName} details'=>'Expandir os detalhes de {pluginName}','Collapse {pluginName} details'=>'Recolher os detalhes de {pluginName}','Thanks for subscribing'=>'Obrigado por subscrever','Something went wrong. Please try again'=>'Algo correu mal. Por favor, tente novamente','Form ID'=>'ID do formul\u00e1rio','Unique identifier for this form'=>'Identificador \u00fanico para este formul\u00e1rio','Contact List'=>'Lista de contactos','Create New List'=>'Criar nova lista','New Contact List'=>'Nova lista de contactos','Name for the new Contact List'=>'Nome para a nova lista de contactos','Show Name Field?'=>'Mostrar campo de nome?','Show Surname Field?'=>'Mostrar o campo do apelido?','Reach Subscription Form'=>'Formul\u00e1rio de subscri\u00e7\u00e3o do Reach','block title\u0004Reach Subscription Form'=>'Formul\u00e1rio de subscri\u00e7\u00e3o do Reach','block description\u0004Subscription form for Hostinger Reach'=>'Formul\u00e1rio de subscri\u00e7\u00e3o para Hostinger Reach']];\n"},{"base":"plugins","rel":"hostinger-reach\/languages\/hostinger-reach-fr_FR-a6380abf6f0a07ec710952d558abb12c.json","ext":"json","size":733,"mtime":1757330207,"type":"text","content":"{\"translation-revision-date\":\"2025-08-06 16:29+0000\",\"generator\":\"WP-CLI\\\/2.11.0\",\"source\":\"frontend\\\/blocks\\\/subscription-block\\\/src\\\/Components\\\/Connect.js\",\"domain\":\"messages\",\"locale_data\":{\"messages\":{\"\":{\"domain\":\"messages\",\"lang\":\"fr_FR\",\"plural-forms\":\"nplurals=2; plural=n > 1;\"},\"Connect Now\":[\"Se connecter\"],\"You are not connected to Hostinger Reach\":[\"Vous n'\\u00eates pas connect\\u00e9 \\u00e0 Hostinger Reach\"],\"You are not connected to Hostinger Reach. To gain full access to this block, you need to connect your Hostinger Reach account.\":[\"Vous n'\\u00eates pas connect\\u00e9 \\u00e0 Hostinger Reach. Pour obtenir un acc\\u00e8s complet \\u00e0 ce bloc, vous devez vous connecter \\u00e0 votre compte Hostinger Reach.\"]}}}"},{"base":"plugins","rel":"hostinger-reach\/hostinger-reach.php","ext":"php","size":3649,"mtime":1757330207,"type":"text","content":"<?php\n\/**\n * Plugin Name:       Hostinger Reach\n * Plugin URI:        https:\/\/hostinger.com\n * Description:       Integrate your WordPress site with Hostinger Reach.\n * Version:           1.0.7\n * Author:            Hostinger\n * Requires PHP:      8.0\n * Requires at least: 6.0\n * Tested up to:      6.8\n * Author URI:        https:\/\/www.hostinger.com\/email-marketing\n * License:           GPL-2.0+\n * License URI:       http:\/\/www.gnu.org\/licenses\/gpl-2.0.txt\n * Text Domain:       hostinger-reach\n * Domain Path:       \/languages\n *\n * @package HostingerReach\n *\/\n\nuse Hostinger\\Reach\\Setup\\Activator;\nuse Hostinger\\WpMenuManager\\Manager;\nuse Hostinger\\Surveys\\Loader;\n\nif ( ! defined( 'ABSPATH' ) ) {\n    die;\n}\n\ndefine( 'HOSTINGER_REACH_PLUGIN_VERSION', '1.0.7' );\ndefine( 'HOSTINGER_REACH_DB_VERSION', '1.0.0' );\ndefine( 'HOSTINGER_REACH_MINIMUM_PHP_VERSION', '8.0' );\ndefine( 'HOSTINGER_REACH_PLUGIN_FILE', __FILE__ );\ndefine( 'HOSTINGER_REACH_PLUGIN_SLUG', basename( __FILE__, '.php' ) );\ndefine( 'HOSTINGER_REACH_PLUGIN_URL', plugin_dir_url( HOSTINGER_REACH_PLUGIN_FILE ) );\ndefine( 'HOSTINGER_REACH_PLUGIN_DIR', plugin_dir_path( __FILE__ ) );\ndefine( 'HOSTINGER_REACH_PLUGIN_REST_API_BASE', 'hostinger-reach\/v1' );\ndefine( 'HOSTINGER_REACH_REST_URI', 'https:\/\/reach.hostinger.com' );\ndefine( 'HOSTINGER_REACH_DEFAULT_CONTACT_LIST', 'WordPress' );\n\n$hostinger_dir_parts        = explode( '\/', __DIR__ );\n$hostinger_server_root_path = '\/' . $hostinger_dir_parts[1] . '\/' . $hostinger_dir_parts[2];\ndefine( 'HOSTINGER_REACH_WP_TOKEN', $hostinger_server_root_path . '\/.api_token' );\n\nif ( ! version_compare( phpversion(), HOSTINGER_REACH_MINIMUM_PHP_VERSION, '>=' ) ) {\n    add_action(\n        'admin_notices',\n        function (): void {\n            ?>\n            <div class=\"notice notice-error is-dismissible hts-theme-settings\">\n                <p>\n                    <strong><?php echo esc_html( __( 'Attention:', 'hostinger-reach' ) ); ?><\/strong>\n                    <?php \/* translators: %s: PHP version *\/ ?>\n                    <?php echo esc_html( sprintf( __( 'Hostinger Reach requires minimum PHP version of <b>%s<\/b>. ', 'hostinger-reach' ), HOSTINGER_REACH_MINIMUM_PHP_VERSION ) ); ?>\n                <\/p>\n                <p>\n                    <?php \/* translators: %s: PHP version *\/ ?>\n                    <?php echo esc_html( sprintf( __( 'You are running <b>%s<\/b> PHP version.', 'hostinger-reach' ), phpversion() ) ); ?>\n                <\/p>\n            <\/div>\n            <?php\n        }\n    );\n\n    return;\n}\n\n$vendor_file       = __DIR__ . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'autoload_packages.php';\n$composer_autoload = __DIR__ . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'autoload.php';\n\nif ( file_exists( $vendor_file ) ) {\n    require_once $vendor_file;\n}\n\nif ( file_exists( $composer_autoload ) ) {\n    require_once $composer_autoload;\n}\n\nif ( class_exists( 'Hostinger\\Reach\\Setup\\Activator' ) ) {\n    new Activator( __FILE__ );\n}\n\nif ( ! function_exists( 'hostinger_load_menus' ) ) {\n    function hostinger_load_menus(): void {\n        $manager = Manager::getInstance();\n        $manager->boot();\n    }\n}\n\nif ( ! has_action( 'plugins_loaded', 'hostinger_load_menus' ) ) {\n    add_action( 'plugins_loaded', 'hostinger_load_menus' );\n}\n\nif ( ! function_exists( 'hostinger_add_surveys' ) ) {\n    function hostinger_add_surveys(): void {\n        $surveys = Loader::getInstance();\n        $surveys->boot();\n    }\n}\n\nif ( ! empty( $_SERVER['H_PLATFORM'] ) && ! has_action( 'plugins_loaded', 'hostinger_add_surveys' ) ) {\n    add_action( 'plugins_loaded', 'hostinger_add_surveys' );\n}\n"},{"base":"plugins","rel":"hostinger-reach\/changelog.txt","ext":"txt","size":1678,"mtime":1757330207,"type":"text","content":"Changelog\n=========\n\n1.0.0 (2025-08-06)\n\n- Initial release\n\n1.0.1 (2025-08-06)\n\n- Bump version logic\n\n1.0.2 (2025-08-12)\n\n- Update translations\n- Fix: loader in select page redirection\n- Fix: Apostrophe is not displayed correctly in page name on Select page modal\n- Fix: Link Go to Reach in welcome screen should open in new tab\n- Fix: Buttons are not aligned in Forms\n- Fix: Subscription form not being auto-loaded sometimes\n- Fix: Change Menu load priority\n- Tweak: Toasts UI\n- Tweak:  Add scrollbar to select page modal\n- Tweak: Add header to overview page\n\n1.0.3 (2025-08-21)\n\n- Fix: Replace Connect Hero image\n- Fix: Reach plugin content not visible when no other Hostinger plugin is installed\n- Feat: Implement ServerSideRendering component in the Gutenberg Block\n\n1.0.4 (2025-08-25)\n\n- Fix: Lock background scroll if a modal is open\n- Fix: Remove Warnings when running FE linter\n- Fix: Footer and View form links\n- Feat: Add satisfaction survey\n\n1.0.5 (2025-08-26)\n\n- Fix: Assets compiler flag\n\n1.0.6 (2025-09-01)\n\n- Feature: Elementor integration\n- Tweak: Load plugin entries if any 3rd party plugin is active\n- Tweak: Update translations\n- Tweak: Remove Bootstrap dependencies\n- Fix: update Reach URLs to use new route structure\n\n1.0.7 (2025-09-08)\n\n- Feature: Add Dialog when a post is published with Reach Block\n- Fix: Add\/edit forms for elementor pages doesn't open Elementor\n- Fix: Elementor pages with Reach forms not recognized\n- Fix: Submit button style overrides theme styles\n- Fix: Prevent Toggle On\/Off an invalid form\n- Dev: Update PR templates\n- Dev: Add staging support for Reach API\n- Dev: Fix Lint workflow\n- Dev: Implement JavaScript unit test coverage\n"},{"base":"plugins","rel":"hostinger-reach\/frontend\/vue\/assets\/images\/backgrounds\/email-reach-background.svg","ext":"svg","size":2478149,"mtime":1757330207},{"base":"plugins","rel":"hostinger-reach\/frontend\/vue\/assets\/images\/backgrounds\/email-reach-background-image.svg","ext":"svg","size":865067,"mtime":1757330207},{"base":"plugins","rel":"hostinger-reach\/frontend\/vue\/assets\/images\/icons\/email-reach-plugin.svg","ext":"svg","size":39630,"mtime":1757330207,"type":"text","content":"<svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n<rect width=\"28\" height=\"28\" rx=\"7\" fill=\"url(#pattern0_9775_52311)\"\/>\n<rect width=\"28\" height=\"28\" rx=\"7\" fill=\"url(#pattern1_9775_52311)\"\/>\n<rect width=\"28\" height=\"28\" rx=\"7\" fill=\"url(#pattern2_9775_52311)\"\/>\n<defs>\n<pattern id=\"pattern0_9775_52311\" patternContentUnits=\"objectBoundingBox\" width=\"1\" height=\"1\">\n<use xlink:href=\"#image0_9775_52311\" transform=\"translate(-0.00626305) scale(0.00208768)\"\/>\n<\/pattern>\n<pattern id=\"pattern1_9775_52311\" patternContentUnits=\"objectBoundingBox\" width=\"1\" height=\"1\">\n<use xlink:href=\"#image1_9775_52311\" transform=\"scale(0.0178571)\"\/>\n<\/pattern>\n<pattern id=\"pattern2_9775_52311\" patternContentUnits=\"objectBoundingBox\" width=\"1\" height=\"1\">\n<use xlink:href=\"#image2_9775_52311\" transform=\"scale(0.00961538)\"\/>\n<\/pattern>\n<image id=\"image0_9775_52311\" width=\"485\" height=\"479\" preserveAspectRatio=\"none\" xlink:href=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAeUAAAHfCAYAAABu0cCpAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAFDlSURBVHgB7d0LcF3VmSf6b+0jyfJL0jFxQwLYh9fEmDuNcyumTegaTFPhVZUCBmc63bcBO2HmQqiAnc6t0J00Np1KXeiYAJ1KTLrTF9vcyZvGzEzFmApgukLjiZmJnanYTmPMkXF4NGAd+SlLOnvP+tY5Wz6Wj6Rz9lpr77X3\/v9SiiQ\/ZCNL53++tb71LUEAEKtSqdTXTdQ3Kt8MqtQnf6gvELXXgmi++kUiUO\/zm0FApXEfYuznWlCpv4y9L8TY+xUKRCUgX77vDaqfC+RLgcr8kx1E5T3lcpkAIDaCAMCYBTJxqzIw\/SotqgWtP1+Q1xdQsIhOhmmrgeoKDvFyPcwrQSB2Ui3Ay54M8BH5c1KFAEAbQhmgTRy89Sq3FAj\/UiFESVazjaGbR1yB76B6aMvA3iEr7or8PO1AYAO0DqEMMAFeZpZLuIt8nxbJb5RL69VuifIbvFGpwA6CQIa21+95tANhDdAcQhmAatXviFpy9q9sqHxLBDbtkGFdlpX1SwhqgBqEMuTOKRWwCK6UAbyUUP264pSg3lsubyWAHEEoQ+ZxCBeqtJSrYPklv1T+0CKCtKgvfauQ3opqGrIOoQyZgxDONhnSW3l\/2vO8Z1BJQ9YglCETLiyVlvq+2g9eWl+OhpyohbR4piAr6dfK5R0EkGIIZUglroY9n5ZjTxjGKQsKtlLgPVMt0FYsdUPaIJQhNS4qlRZVff9GVMPQKq6iyRcbOmVAYzoZpAFCGZxWX5a+UX6p3kQ4ogR65NK22NDl0SYENLgKoQzOaQji5YRlabADAQ1OQiiDE8JGrXoQlwggPjtEIB7DEje4AKEMiWlo1rox73vE3tyPqNeFuWeTmNlDYsZs9b6YObvh7ZM\/3i7\/vd+NvR0cO0zB0cP114fUj1XlzwfHjoy9n1fhHnS1QJvQJAZJQChD7LgqDoJgddaDuBais1TQeurlI2PB6tV\/jN\/m4HUJB7b\/\/u9qwT329iGq9v+29loGuP\/eW5RxFUHBJuF5G3AWGuKEUIZYhJ3T8ktuJWVon5hDtiDDtjB\/gQpdDtpCaYEM256x6jerOJh9FdC1Fw5t9Vr+eMYq7rJc3n4Ay9sQB4QyWKMma5GshoPg3rRXxRy+HfM\/qgJXBa8MYX5xrcp1RbV\/j6qy+fXoru0qpEfrlXaayep5PapnsAmhDMbV9or9e9NaFXMAdy5cLENXhvD8i+tBnO2qNy4c0v6\/vkWju39J1fKeNAc1qmewAqEMxqRxr7ixAu64+DIEcAIag5qr6lEZ1imi9p47Pe8BhDOYgFAGbRecW1pOXnB7GsI4rII7VCW8QL0Gt5xc9q6F9Ih8SQPu3BZCPIClbdCBUIZI0rJEHVbCnYuvHgtiSB9VQacnpNXS9utvltcTQJsQytCWNIRxrRK+TIUwKuHsCSvp4Zc2qYBuPIPtGIQztA2hDC2RYVySYXy7i2HM1XDXx\/9IBXDnx69GR3TOcChzBR2GtIPK8qnE+i7P24B9Z5gKQhkmVQ\/j1fXxl87gIJ525Y0qhFENQ4iraLXE\/erzNPzqC651dpcRzjAVhDI05WIYI4ihXY0VtEPL3GWEM0wEoQyncC2MEcRgShjQDlXQZYQzjIdQBsWlBi4EMdimqmcZzsPbnycHlOVX\/WP79pcfJcg9hHLOuRTG3DU97fpbVec0mrUgDmGT2InNT7owtATd2oBQzrPzS6V7yQ\/WUIJhzFVxtwxiDmMEMSSJA3rop99xYf8Z4ZxjCOUc4nGYvh88Id8sUUK4Ku5edjeWp8FJau854SNWPCGsU4gV2G\/OF4RyjvD1iX4QPJLUOExUxZA2YfWcZHMY30yF2dr5gVDOgfq+8er6vnHsUBVD2vH5Zz77fFwGdEJL22Xu1N63f\/8DBJmGUM64JPeNuxb\/kayKb0MYQ6aMbH+BTmzemNTSNvabMw6hnFFJXaOIJWrIi3Bp+4Tce44blrSzC6GcMUktVSOMIa8SDOeKXNJ+FEva2YJQzpALzi3dFIjgEYqxqxphDFDD4Tz80jMqnGPedy53eeIqVM3ZgFDOAB6NWQiCJ+Jcqvbmnk3Tl32euq68iQDgpOTCOXjUl0vaMpsrBKmFUE65uBu5EMYArUkonNEIlnII5ZSKuzoOl6m7ZSADQOvCcD7+029TXNAIll4I5RSKszrGnjGAGQk0hKFqTiGEcorEWR0jjAHsiDucUTWnC0I5JeKsjqfJ\/WJepub9YwCwg8P52LqvxDWEpOx5YsXecnkrgdMQyo7jc8f16th6ZxXGYQLEjy++iG98Z7AG55rdhlB2WFy3OXFFPOO2L1Pn4qsJAJIRLmnHEM441+ywAoGTzp83j29zepwsLlfzvvH0G++gmXd9nQqlBQQAyeEVKp4XT8cOU7V\/D1nUVw1oebG3eGJgsLKNwCmolB3DzVyeHzwt31xEFvFS9QwZxtg3BnAPV8uH\/3qF9aoZTWDuQSg75IJS6fbADx4li9UxhzBXxtg3BnDfic1Pqv1my3c5YznbIVi+dgQvV1NAD8o3u8mSaTfcSrPuWUuFs88jAHBfx0WXUtcnrre9pM3L2SuLvb00MDj4EkGiUCknLI7lat4vnnHbfaiOAVIsji5tXs6uet4qzM9ODkI5QfXuag5kK8vVqpFr2efVABAASL+YBo9gOTtBWL5OyPnzSquDIFhPlparuZFr1l98lzov\/UMCgGzgJ9p8dLFz4WU0ums7BXJZ2wLVnT2np\/juwKHKDoJYIZRjxsNAzujt\/YF8806ygL9pZ\/zpKppxx2r1NgBkDzds8uQ9Gh2m0dd2kgXdch31Juwzxw\/L1zGq7x+\/SJaGgeCYE0D+cMV8dN1XrO01C0GbqkKswD5zPBDKMbG9fzx92d24VhEgp2LYa8Y+c0ywfB0Dvkwi8IMfkoX9Y66KZ33pW9R1pfXR2ADgqHCvuSAfD6r9v7Wx18z7zDedUSzuPFiplAmsQShbVj9\/vIYswLljAGjExx95VKffv0dWz2+RYX2BGs+JfWabEMqW1Bu6NsvnsJ8hw\/hZ8cw7VlP3jXeQ6JpGAAAhfnzglTMh\/zdq5VpIsRTBbA\/2lC2w2dDFz4Rn\/fnfopkLAKbEU8COrL3HShMYGsDsQKVsmM1AVsvVf\/4tHHUCgJZ4fR9Sy9nB+29R9a03yLAFIqDrziwWt7xfqSCYDUEoG8Qd1lQL5LPIoMblagCAdqjl7E9cb2s5+yxuAJPB\/AyC2QyEsiH1G574PILRDmtepu752vcxtxoAtPBjiKVJYKoz+0PF4ksHK5V3CLRgT9kAHplJFKwhw7hZgy+SEDNnEwCACRbvaq54nrh5b7m8lSAyVMqabAXyjNvvo+l\/sgrd1QBgFC9nd99wK9GxI6ZHdHbzkak5xWJ5oFKxMvszDxDKGmwEMn\/DzP6L79buUAUAsIQvq7GyzxxgZrYOhHJE58+b94R8tZIMCveP+dgTAIBtvM\/ctfhqGtn5suF9ZpxljgqhHEEtkMVyMogvk5h9\/3p1hAEAIC7hsamRV19AMDsAodwGntI1p6dnnelA5vPHM+9Zi\/1jAEgEb5vxVZD+228YPs+MYG4XQrlFHMi1oSDiOjJINXQtu5sAAJLERYGd88wI5nYglFtwMpBpERnCz0xn3fMN3O4EAE7hfWYEc3IQylOwEcjc0MUd1h0LLyMAANdwMPM1kLzPbA6CuRUI5UlYC+T7n6DCR84nAABX1a6BNN2ZjWCeCkJ5EnN6el8hg4HMX+RcIeOGJwBIAzud2QjmySCUJ1A\/9mSsqYuPPM267+9w5AkAUkVdaIFgjg1CuQnT55C5mWvWl76FI08AkEphMI\/u3k5B5X0yA8HcDEJ5HBnIj8gvljvJEHUG+Y7VBACQZiqYL7+BRn79CwSzRQjlBrVZ1nQfGdK97G6a8SerCAAgC9RZZhnMZoeMiKW4xOIkhHKd6cslOJCnL\/s8AQBkSThkxH\/vLar27yEjAroJwVyDUCYEMgBAu\/i4lOFgXvqhYnHLwUrlHcqx3IfyBaXS7RQEj5IhCGQAyAvDwcz3MX\/mzGLxR+9XKhXKqVyH8kWl0iLfD34o3+wmAxDIAJA3poO5KpeyZTA\/k9dgzm0olyTyg83yzbPIAAQyAOSV4WDu42DuLRY3yFweopzJZShzINfHZ5bIAAQyAOSd6WD2iJYMDA5uoJzJZSjP6enlQF5ABiCQAQBqDAdzqdjb2yeDeQvlSO5CuT4cxMh9iQhkAIBTdS68zOCAEbEkb8NFchXKJoeD8KQuDAYBADhVOGDEYDDnariIoJw4v1S6l3wzR594lvXMu75OAADQXHD0MB267xa5nP07MqBS8MRVr5XLOyjjchHK9cYuIzPh+PrFngefIgAAmBwH8uG\/XmEqmMtdMpj3lMtlyjCPMq6h01ob34M8+6\/WEwAATE09Zt7\/hKk75EvDfvA0ZVzm95RNdVqPfXHhPmQAgJbx7VKdlyym4VeeJRo5QZrOynpHdqZD2VSnteFnewAAucLFTOEj58tg3kz6uCO7ODgwWNlGGZTZUFaNXQGtIQNmr16vvqAAACCawtnnkSer5pGdvyADrvtQsfhMFi+vyGQo8z6y8INnyYAZt99HnR+\/mgAAQE\/HRZeSkP8b3bWddAUBXZfFGdmZC+WGxq4+0sTDQbpvvIMAAMCMjoWLTU396vOJFmVtFGfmQvmM3t4n5KslpAnDQQAA7DA49auUtYlfmQrl+sSuO0kTn0We9effIgAAMI+nfnVe+oc08uoLFBw7THrE0jOKxZfk\/nKZMiAzw0P4buSqH\/yKNKHTGgAgHryEzcNFgqOHSFOlyxMfy8JgkUxUyg13I2vtI\/N5up6vfR+BDAAQAz4qxS9cMWvqzsr+ciZCeU5PD59HXkqaZvzpKrWkAgAA8eDtQjp2hEZf075vIhP7y6kP5fp5ZO2bn9BpDQCQDC6Gqru2q65sPenfX071nrKpiyY6Fy6mWfevJwAASIbBW6XKvtxfltvLqTy\/nOoLKUxcNMH7xzNwDSMAQKLEzNk060t\/q3p7NJUKvv8IpVRql6\/rx5+051r3PPQUGrsAABzATV98XEp\/FKdYNKdYLA9UKtob1XFLZShfWCotDYJgPWnifeSuxRihCQDgCh7FaaTxK6ClZxaLP0rbGM7ULV\/LbeQ+3w+eIE3TrryJpi\/7PAEAgFu6b\/m8iRXMvpFAPyvilrpQ9mp7BSXSwP\/Y3QhkAAAn8f4yD3HS3V8OZLUstzpXUoqkavn6gnNLy0noX8eIfWQAALdxIJvZX6YlaVrGTk2lzMefAhGsJk28j4xABgBw37TrbzXR95OqZezUhLJctuZALpEGPo+MfWQAgPSYcefXtQupNC1jpyKUudtaLmYsJw04jwwAkD68vzzTyGN3sHoB35PguFSEsolua66QsWwNAJA+HXKVs\/uG20hTKpaxnQ\/l+pCQEmng409dV2rPGQEAgIRMv+3LtcsrNPAy9gXnlpwOA6dDWV3JSMEa0oDjTwAA2cDL2NrHpETwBM+7IEc5fSRqTk\/vr0jzjuRZX\/qW9rMrAABInqExnN0iCLoHBge3kIOcrZTVmWTdZesbblV7EQAAkA18TKpT+3FdrKw1ELvHyVA2cSaZl62n33I3AQBAtswwsYwd6M+9sMHJ5es5PT2P8GXVpGHG7ffVBpsDAECmqEAeOUGju7aThlKxtzg4MFjZRg4R5Biukj0\/eIM0cLc1ziQDAGTboftuoWp5D2mo+J44r1wuOzOC07nlaxnIL5IGdFsDAOSDgaEiffVpkc5wKpRNNHdhSAgAQD4U5i8wMFTEraYvZ0LZRHMXhoQAAOSLibuXXWr6ciaUPZ9uJ80qGcvWAAD5YmI2tkuTvpwIZROTu3AlIwBAPvE8Ct2zy3Kl9hEXJn05Ecq6G+3qTDKqZACA3DJwdrkksyjx6x0TD+Valax3LSMCGQAg39TJm+v\/jPSIe5OulhMP5UJAWldpobkLAADYtOtv093G7Eu6Wk40lPkIVBAES0kDmrsAAICZaPrianmBWsFNRqKhrHsECs1dAADQyEDTV99IggNFEgtl3UEhHMbTrryRAAAAGk2\/\/T7SEZBYnlS1nFgo61bJmNwFAADNmJj0NRIEWv1OUSUSyiaqZDR3AQDARHjSl84RKR4oksT4zURC2USVDAAAMBFu+tI9IpXE+M3YQ1m3SuZNfFTJAAAwFT4ilbZquUAxK\/b1Pi1fRT6cPfv+9bpTWwAAIAdE1zT1MrLzF6ShNDA4uIFiEmulrFsl86AQNHcBAECrpl1\/q1ZuxF0tx1op61bJs770t6iSIVP8996iav8e9Zpf5HN7tRcGAOZ48ntq5NUXSENs1XIHxURN76KgRBGhSoYsGN21nUZ2\/VK95pdm+IlnYf5H1dc891BE\/brnkBczZiPkIfe4D2n4pU3ye297pN\/P1fJFpdKi18rlHWSZoJicP2\/+G6SxdN37recQypBa\/IBwQr6MtvmgwAE97fo\/m\/BJKQfvKIe8qrZ\/R9XynnrFffrH4aDnj8HTjnTCHiCN+Hvv8F8vp6gEBetf379\/BVkWSyirKllEP4jND0gztOeZAsRvZPvzdGzjQyowdXCAzrjty9S5+Gr14DL86vPqYzcL4FZxMONCF8iTIzKUo1bLzPdEsVwuV8iieEJ5fulFnYsnUCVD2nAIH133lbYr46lwxRscPUQmhfeRI5wh63SrZbmQ\/cC+\/fvXkEXWQ5m71nw\/eJEiQpUMacNL1Vwdmw5P2zicZ9\/\/BJ4AQ6ZpVssVWS2fZ7Natn4kyvf920kDrmaENBn66bdVhZy2QGZc3Q9+4Ro6sXkjAWQV3y6owfp9y1ZDuaRu2RDLKSJ0XENaBEcPyzD+Szr+0+9Q2h3b8JD87\/g2AWSRfpOjuJcssnpOeU5PzyPyP2ARRYRzyZAGHMiHv7acRne+TFkR7oV3LryMALJG89xy95yeYv\/AoYqV41HWKmVZJPfJQF5KEaFKhjQIA5mPImXNkKz6UTFDFnFTo1bB5wVa27KTfmiypFAlbuUsUUToBIU0OP7UtzMZyCEOZuwxQxbp3CBlc\/SmtVDWuZ6xUFqg1v0BXMbjMU\/87EnKOt5j5o5ygCzRv0EqsLK3bCWU688gShRR9\/W3EoDrjqy9h\/LCxplrgCTp3rfM1XJtm9YsK6GscwyK95GxdA2uO7H5Se0pXWlz5OEvqNUBgKzgalmDleNRxkNZ9xjUdJxLBsdxGA\/lYNl6PNXU9tfLc\/dkBLKLq+WuxVdTdOaPRxkPZc+n5aQBe8ngOj6LbCqYblm2jL7\/ox\/Sf938M7rl08vIdbVgXoFghsyYprdd2me64cv4mE2d26AwUhNcxw1PvL+qa+HChfTQw2vV69ChQ4foU9ffQAcOHKAozjnnHPqDJUvoYvkxzzn3HOrpqTWx7PrNLtq9exc99ZOfkim8zdTz4FO4FhIyQWf0phC09fX+\/qvIEKOhrDvnGhdPgOt4DKVulbjic5+lr95\/f9Of++\/bttGf\/vFnqFUcvPzxOIz5ZTIc9nf+x\/9Eu3ftIhP4lMTsv1qPYIbU032ybfL2KKPL1zoNXrjfFVzHc611A\/meVSsnDGTGwbris5+lqXBVzB\/npZd\/QfesXDllIIe\/h5fKL26oznXw+eyjj\/8lAaRd58ev1joeZbLhy1gom5hzDeAqDmPduda8f3zvyqm\/dzm4w6XnZu6VP8970FwhT\/brmuFfbzKYR7a\/QMc2PkgAaaZ7PEp+hBvJEGOhXKjSUooIx6DAddzcpIPDkMNW59dyNRxWxu2G8fiPbzKYeYAKxnFC2mlm0CJTDV\/GQjkQ0aebdKLjGhxmYtl6uaxqefm4VbyEvaS+JM0h+ler71dB2s7HmAx\/zMf\/\/u+MfTzMyYa04+JQJ4vk9q2RytLILVG8dC0CiryGhdugwFUcxkce1pvcxcHHAdiuP7h8CXd2qt\/byp5xuziYP3ntNfTz555Tnd+6eOJXQT6wcQMYQBqJGT00\/MpmikYs6C0Wv1upVIZIg5FK2fMp8iY3GrzAZbrL1ixKILOwmUtnqbqVP+M\/G6zAeX8ZU78grTiPNArEvg65jE2aDC1fB5E3udHgBa4ysWzNzV2m9m5t4UBeJ584mAh\/TP2CNOOGr2lXRu\/ZCoLoFzGFtENZ5\/IJ\/gRwKzqAa0x0W3PYtdrclTQeYhK1oh8PU78gzXQyKQhoke4lFdqhrHM2uUudDcPgAXCPiWVr7pI2tSwcB963\/puH15IJHMj8OeSABkgTXsLWaPjq0x01bWD5WiyliHAMClzE+6Imlq3TMMt6PHWW2lB1r4L5a8sRzJA6OncwCBFonVnWCmWdpWtu7sLlE+Cake3Pq3O3OtK0bN0MV\/imgpmnfmG4CKSNzpWOuvcsa4WyztI1ziaDa7iyO7bxIdKVtmXrZvi\/wVSlz3OFEcyQJqrfSSOjdJawNZevoy9dT7tBZ6QZgHkmrmRM67J1M3+zdu3YABNdmPoFadOpcc+yzhJ25FDWXbouzL+YAFxxYvOTqqLTkfZl62b4qJSpI1089evE5o0EkAZd\/y56z5POEnbkUNZaul78RwTgCrVsvUF\/eTULy9bjmR7HeWzDQ9pPfgDioLuEXahSpFTXWL7WWLq+0tiFGgBawjO1urK0bD0epn5BXumcEPJFjKF8UanEo8RKFAGWrsElx5\/Sn9qVxWXr8TD1C\/JIZ5CIoODKKEvYkUK5StGvacTSNbiC95F1jz+xLC5bN4OpX5A3mkvYkWZhRwplEZDGrGssXUPyTIzRZCs+99nMLls3Y2PqF4IZXKbThR3lOse2Q5mvaQyCYClFgKVrcEFYpQVH9a4rVMvWK7O9bN2M6alffDUmpn6Bq3S6sGUJ23YV2nYoF6oaS9cYGAIOMLGPzLj5yea1ii4zPfXryMNfIAAXaS5hlxbIQrad39B2KAfCv5IiwqxrSBpfx2hkH3lVPvaRJ2Ny6tforu10dN1XCMBFOiOhh\/32urAj7ClHOwrFzzYw6xqSxMdwTOwj877qvTlctm7G5NQvPr+MqV\/gIq0u7Dane7UVyjpHobB0DUlSe5dr7yFdXB2banTKCtNTvxDM4JpCaYHqiYqi3TuW2wplraNQGs80AHRxM5GJfeSvrr4\/98vW45me+oVxnOCirujHeds6GtVWKOschcLSNSSF95G5mUgX7yN\/8pprCE5nfOoXxnGCYzouvoyiaudoVFuhHPUolE7pD6CDB4SY2EfmwRnYR56cyalfjBu\/MI4TXKFTWAohLm3117YcyvVboSJBlQxJMHXRRBg2MDWTU78Yj+NEMIMLdI5GtXNrVMuh7PvR95O7sJ8MMQunRZnAjV3YR26dyalfPFSEG\/Qw9QtcoFNgFlrsyWo5lIWgyOeTC\/MXEECcTDV28T7yHxg68pMnpqd+YRwnuKBjYfR95cD3l7by61oO5aj7yfzMgst+gLioqwENNHZxUxf2kaMzOfULwQwuqOVZtJ6JVveVWwplnf1kbvICiIupiV28XM3Hn0APB\/OKz36WTMCcbHBBx\/yPUhSt7iu3FMp+hOunQthPhriMbH\/eSKc1dw+bPN6Td\/zkxtQ4Tl4BOfy15QSQFJ1bo1o5r9xSKIsgwH4yOI2rqKOPf5VMuBdzrY376v33G5v6xcGMOdmQFJ1M831DocxjwigC7CdDHML9Rt2rGBk3di03tNwKJ\/Hqw\/fl6oOpYObBItw7ABA3nX3loIUO7ClDuVS7dqpEEWA\/GWwL70Y20QCEASF2mR7Hyb0DmJMNSYi6ryxo6lXnKUO5UI2+n9x5MYaGgF1HH\/+KkUDGgJB4mB7HiQssIAkaBWffVPcrTxnKgYg+NASVMtjEndbc3KULjV3xCoPZ1DhOBDPETWcO9kh18kydMpSFoJZndp7ygeeejXnXYA0HsolOa4bGrvjZCGZcYAFx0ZnsFQh\/0tXnqStlCqI1eZWirbkDTIUffE0FMhq7ksN7+CbvpuaObAQzxIEbmKMWnVMNEZk0lC8qlRbJVG75cuZGuIQCbODLCY5tfIhMwMSu5PG\/gelgHt21nQBs07icInql7FejdV2zwvyLCcAkNdFp7T1Gjj7x8qnJMIDoTM7JZkce\/gJulgLrbDV7TRrKWk1eGBoCBpmcfWx6PxP0mZyTXTsmtxxzssEqnYybrNlr0lCO2uTFzyAwNARMMXkWGZ3W7jIfzLjAAuzRCeXJmr0mr5QjNnkV5n6EAEzhWcemHlxxN7LbOJhNzcnGzVJgk06zV0BeaaKfmzCU1W0WEZu8sHQNphxd95dGrmFk3GnNjUXgtr9ZuxbBDKkQdV9ZUDDhKvSEodyhcTOUzkXQACE+izz80jNkAgcyOq3Tg4PZ1JxsBDPYEnXcJtUmWDcteicMZZ3rGsXMWQSgw+RwEBx9SieTF1icvLQEdzGDOZqnjErNfnDiPWU\/2nEoXmfHcSjQYTKQcfQpvcKbpUz1AKhg\/tpyBDMYU9AYkjXRvRIThnLkzmvsJ4OGE5ufNBrIOPqUbqa75bk\/AcEMpnCjV+RrHCfowJ4wlIMgiNbkhXnXEJG6I3eDmTtyTd9GBMkx\/W\/JwcwDRgBMiDxuk7zeph9vkt8T7TgUZl5DBDyBiUckmsDV1TqD9\/ZC8kwHM4\/iNPX1BvkWtdkroGBpsx9vGspq5nVE3odQKUN7OJC5CceUr66+X112ANliejuCV2YQzKDLiz6Xo\/Xua52Z197vYXAItO5kV6z+PGvGR594ljJkE4IZXKNxRXHTGdhNQzko4CIKsM9GIOPoU\/bxKojpYD620UwvA+SPTnPzUJNqufmecsTjUBq3ZkDOmB7ogEDOFw5m3qYw5cTPuOv\/2wTQLo1KuemxqKahHPU4lJiBSyhgaqYDmUcyIpDzh7cpTJ5BH\/rpdxDM0DaezRH9WNTpBXDz5WschwJLTAfyHyxZokYyQj4hmMEF0Y9F0fzTPtYEv7JEEXi4HQomYTqQeQnz8b\/\/O4J842A2deUjQzBDuyJnnwhK43+oMP4HeEi2CGgNRdB9\/a1UOPt8AhjPdCBzF+7\/t3EDzZ07lwB4xURuu9F\/37aNTOBzzKwTl+tAC6p7d9Loa7+mKAYGBx9rfP+0SrmTondeR11Xh2yzEciY1gXj8V3MqJghCTrHok77WON\/IKBodyirD4blaxgHgQxxQjBDEjSanPvGX+F4eijrDA5Boxc0QCBDEhDMEDeds8rd4wrh00NZRL+yESBkOpBN3xYE2YZghjjp5N\/IuHsmmnVfR1q+RpUMIQQyuICDmc+wm4Jgholo5V91ikpZiGA+RYDBIcBsBTIumIAo+Aw7ghnioDFAZPJQlh8ag0MgEgQyuAjBDHGIXpj6pcb3Tt9TjjjNC53X+WY6kBmuYARTEMxgWyFiBgryehvfN7anDPllI5B5dCKuYASTEMxgU9R9ZZ+oeMrHafJrShQBGr3yCYEMacLB\/MlrriFTEMygyxPBKZVyBxmCRq\/8QSDn26EjQ\/Tsy3vowLsD6v2eWd10yQUfpssvLZHL+GvsT\/\/4M7R71y4ygYOZTV92N0F+Rd3CDYJTC+FTQrkkkR9QFBixmS\/V\/j10ZO09COQcu\/bOdfTmu5XTfrxnZjddd8UC+vQ1H3MyoLmB8Ps\/+iGCGYwylYEeGSJmziLIBw5kVMj59uPndjQNZHbo6JD6+U9\/6Qm6\/M8ekW\/\/ilwTBvPFBhsJsZSdbxqrxaXGd04J5Q6dyyhmoFLOgzCQg6OHyBQEcvo8svHFln4dB\/cXv7GJPrfmB3TgnQq5BMEMLjJXKSOUM2\/4pU0IZJi0Sp7IFrn3vOTWR+ibT7YW5nFBMIMpOs3OjZdSnBLKQTX6cSjMvs42DuSj676CQAba8s+7KapvbtzqXNWMYIakNV5KMb5SxhllOM2QfHDhQDbp31yxjGZ9+P8gSB+uenV\/P+83I5ghS0wN0DKyfI0qObs4kI\/XO0tNGT3rCvpf781UFRM3Arm21wgTe2VnmUzg5e9r7lqnHfAmIZghKUMTVcpBIVqljP3kbDIdyIHXpQK52nPh2I+FD86\/ef0dAvdteTn60vV4fM6Zn5i51J1tK5iPbXyQACbSMeHytY\/la6jhBxHTgTxy7rWnBHKIH5zvWP0D9Rrc9pt95p88cXe2Sw1gNoL5xM+eNL4FBG4xVZwa676G7Di67i\/Vg4gpYSAH0+ZM+Gu4YnbxPCucytTy9XjcAJb1YA6bJSGbTG3jYk8ZxgRHD9Oh+26RDx7PkCmtBHLolV+XCdxle4uBgznrS9kczEce\/oL6XgMIBZN0X0eCudfpp+ZYf205VcvmGm+Czlk0UvpUS4HMdu3FvrLLDrwzQLbxUnbWg3lk+wvqew3BDGOqhkMZ0i28WMJ4IHOF3NH6+NV2B1JAvOJqxluz7lmnGv\/CYDZ5uxR\/ryGYoRmEcs7ZmGMdJZDBfXE14vGf4+I55sf\/\/u+M3sfMwczbRSa\/9yD9EMo5Nrpru1OBfO6ZaP53mY3O64mEwexaRz7fx2wymG1cfwrphlDOqdoc6+VGx2YG3XO0KuRzzkIow0m8ncHnmF2DYAabEMo5ZGNspgrkc\/SWrFEpuy2J5WQ+grVm3WZyDYIZbEEo54yNsZnVngtqgex1kY4ll5YI3DV4NJml5O\/94zYnz7BzMK\/47GfJFAQzMIRyjvBQEBuBPHrWH2oHMrvkgg8TuCvJ\/V3uyHZxRvpXV99P965aSaZwIHPzFzdgQj4hlHPAxlAQNnrGpSqQTThX7idfcsFZBNCMq41f7J6VK40GM3+\/cr\/HyPbnCfLHSCj7771F4KaxZ95ls8+8OZCrZywiUy7\/\/RIBTMbVxi9mI5iPPHyPasiE7BMFKodvo1LOMBtnkNno3MVGA5l9+pqPEcBUXG38YqaDmXFDJq5+zBeEckbx0peVQOarF4vmRg4yXrq+HE1e0CJu\/Pre06+Qi2wEM+5kTgdT09lOCWURnCyhIb1ObH5SLX0ZPYPsddHw\/E81vXpRF5auoV1rvuPWKM5GHMzcAGYSgtl9wTEzj7dGKmVTfxnQx0eejm0we6F6uxdLtAtL1xAF38HtYkc246NSf\/PwWjKJg5nvOYdsMxPKGKqeOP43sHHkyfYcayxdQ1Tc+OVqRza7Zdky48HM95zj6kc36fybdNDEjV64pieFwmsXTR950h2b2YpPX2O2YQzs6ZnVTa7hYF619mlyFQfzf938M3WhhSnh1Y8YMuKW4JiNPeVC9FDGF0gybFy7qD7urHnaYzNb8R+wdJ0avTPdC2W25eU9znZks4ULF9J\/\/tEP6ZxzziFT1NWPmP6VGUMNBTG6r1OMb3k6dN8y49+Y1eLFNPKRq4xM6ZrMtVcsoHMw7xoMcLkjm9kIZozldIvO8nW5XG4eyqMUvfsazV7x4g5r07c8MTWla+5lFAdUyeni+i1e3JHN55hdxYFsK5gxljN5pjKwgwwJjh4hiAd3YHLDh2lqKIjhM8gT4Qavaz+xgCA9XNxTHo8nfv1k7YpYRrb+eMsO2vbrN9TRrLDZLHziwn8+rwLxPHd+O\/zchcH8f\/3xZ+jAgQNkQi2Yl9PMO79OnYuvJkiGxopFufGdU0JZltDl8+fNp+h\/ocUE9tRG731BLVsb\/bhymXr07KvInx7f7OlVty4lSBdX95QbcTjyUSkOZpuV\/Re\/8TT9+Lkdp\/04N56x8RU7X0u68MKz1BPRT\/z+eSqY7\/yP\/4l279pFJoRjObuXfZ6mL7ubIEXEqb1cxiplsMvW\/pHtI0\/NcNXwiUvPI0iXtOz\/h0eltjx+l7Xq\/tl\/bm+5mP9O\/MJNaYxD+pKP\/zEdePe7dPgDc3cHDNWPRCKY4xf1Dggx7tRTs0avMkWAZgN7bM2wTiKQ2XWfQINXGp1zZpHSwvblFbqrBvz3e3bbPnr\/jE8an5KHISPJ8CMeifIDMdj4frNQjnQsyj+Gw+w2cEPXoS\/fYj6QZ5xFI\/M\/FXsgsy\/edhVB+vTOmkZpwkvIvMxsg8mlcRvz5DFkJAERm25lCA+Me\/9UQohoZ5Xxj28cP9s1PTKT8ZGnYT6DbPnIUzP\/4ZpFqJJT6pyz0lMph3jf95tPvkimmW5SrN28dimZxENG+NpWrGLGwz8Wrdk5IOpvfP+0UPaDU39Bq6r4hzcmvOTcSod1jEeemkGVnF7npvTJ1Dc3bjV+htnGcb7RMxYZD2acZY6Pxud48j1lEXX5+j1zzQp5xv+w\/OzWSoc1L5MZvge5HRgWkm7cNJWGY1HN8BnmHz\/3KzKFPw82ZrarYP49s6dYcJY5HlFnRohgqkYvL1qjF4aH6LM1oSts6LJx7WI77rj5coJ0S2u1zNasM3vd4xdvtbPqM9q3kEbONjtRTz3Z\/\/ItdGLzRgLzdB6zReHUzD29Uq5Gq5TRUKDH1oSusQ5rS9cutoqrCtwGlX5xDOWwhc8w81EpU9c98tfzuZbOQvsz59W+bzvNNmIe2\/AQ7mW2QGeleHTK5etC9FGb2LdoHz+ZsdXQlWSH9Xi2qgqIV9q3H0wH8+duXkK28BNpdSmM4WDGkSnzNIvScuM7p4Wyzvxr7Cu3J7xy0UZDV5Id1uOhSs6ONJ1Vnkg4XMREMHPDl819drXSZSGY+TGntjKHFU4T\/PejF6SNl1EwY+eUGSrl1oUDQUxfucj4eEWSHdbjoUrOjksuTO\/ydaMwmMOZ1VFxINv++uZAHuYVr26zW1C1HhYcmTIh8udQ0GmzWk8LZZXaImoHNv5xW2FtIIisilVDV0yXSrQCVXK29Ka0+7oZU8F8x79fYm1veYz83h6e9ynj39vozDajamjEJmt+n3IQddQmlq+nYm3\/mJe5Sp+K9VKJVqBKzhbeU07rsahmuBt71Vr9qV+rYvo6tzFkJLxlavilTQTRRM6+QJTH\/1DTUBYiWihjgMjEwvPHNvaPXWroaoQqOZvScFtUO\/iSCN1xnDypLq6vdRtDRnhv+ei6r6AzO6Koq57jp3mxpqEcBCLSVC9Uys3Z3D92qaFrPFTJ2bQwI\/vKjXgc55p1m0lHnF\/vHMw8DMj09z06s9vHT2giDw7xWthTrv9omSLgZwvo5juVrf1j5lpDVyNUydmVtUo59L1\/3KY1Jzvur3keBmTjLDOv5qEBrHU6+\/Et7ymLavRjUZjsVWP1\/LGDDV3joUrOriyPSuU52TrB\/Mj\/czPFydZZZl7Vw8zs1ugUoqPUYqVcLZz+C1tlY4k2bWyeP3a1oatRnPtrEL8sNXo1oxPM\/ITlDosDRZoZO8ts+MhU2Aczsv15golV+3dTRJXxZ5RZ01CWv7BMEekcos6CcH61lf3jngucbOgaDzdBZVvPzOmUdTrBzF\/\/cT9xUWeZzzE\/356rwCMP34MGsEmM9v+WIpmgodqb5LeUKYJqOeJfMAOG5BeujfnVTF25eNYfOtnQ1Qj3JWef9TO5jogazHEMFGlq7CY4s53ZDA1gE4va4DxRQ\/WEoSxEtCXs0RweQj\/5bPI7ZJoLVy62A1Vy9mV9+bpR1GCOZaDIBGwcmWJoAGuuWo62fC2oecZOGMrRj0Xl6x+MO+9s7buE+8dJX7nYKlTJ+ZClqV6tiBrM3\/xSvE1fjTiYTV\/\/yMIGMEwAq9HZpmx2HIpNXCkH0SplrhrzEsy16xbtdCi6OhBkMqiSa7cQHXi3Qq\/sLKvXkA1RgjnpY4Hq+kd+DDHcmY27mU\/Smc1RnWCLuGOi3+AVaEfVp2h\/mHz24M09m7KKn3gcf+rbVrqrGQ8EcfX88UTyXCVzAG\/5591qMtSbTYKY7yDml09f87FMdKX3ZPSc8lQ4mFk7+8V8RGrJnz1CSQk7szvffpHE0EEyie9m9uVj4fRld1NeaXRec0N108K3MNFv6OnrG5LV8n0UQce\/+X3quMj8noYL+FnikQf\/b7lc\/QKZxktN1TOXUHXOv6W0+YcH\/iRXe42Mr\/773JofyApqK\/3P3Qfo0NHmFxu8N3BEzVj+yXM71At\/ni654MOUVtO6OtR\/cx7xEzDeDLz80vNa+vXh98Qrvy5TYgrycWX2eXL10ydv6D0yiU+b8EvnwsUkZvZQ3gxt\/v\/Jf+sNapugHQODg99t9lMTLl\/Xz0+VKQL+R8oi3je2ddwpbfvHjfJYJX\/vH1+ha+5cV3uQbgNX0l\/8xia6XFZP7f5ecEO7S9l3\/PvLk3\/Cyg2jFi6zYPx4n9dBI1GzYLKercJkv3FOX99S+WoBtfsHjgxT9w23UpbwcYDjGx+SyXyCTFP7xzwur5DO8595q5K\/ufFF+n\/\/4ed0YmSUouKqmqvmdqoul+S1Ug61UzHzysK0rk7a+upeSpovH2uErJy9o2bvKQiOHVY9Nt7M2ZldJR1PbWP+INrWhCDxo4HBytZmP+dN+odqdGBnZQZ2eK2Zrf1jPn\/s6oUSrchblcyBbDKQuOq6VlbcvBQO6dJOxZzkEanxRvsW0rCFBjDG+8x5GTSiNfPam7iRetJQjtqBzbLQMh9O57KxHK\/OH599VWrOH08kro5r7mrmB0AOsHM+uVq98Ns\/fu5XFJct\/7zHSoXI+82f\/tIT6r8R0qWdYE7yiNR4tmZmMx40kofzzDoZV51ka3jS5eveOX0VGcwrKYKO0kdTvYzB07n4flEry9W8fzz\/BvK751KacZXMHcU28TLhF9c+TX\/x2H9Tb3PTVIjf5qDkZWA+fnThuXOtLaNzJXv3138yYTOXLv64\/3PPAfk5tfv5NCXvy9eNwuNv115x8aS\/jitlbvhy5qgcN4D1Xkje6BCJE2Y7s4PK+zTy6gvUecli8vo+RFk09F\/+IVqTF1Hljf7+VRP95KShXJGKfX0cym0\/0omuadT1iRsobVR39cP30PBLz5ANPL969Ow\/Su3+cSObe8kcgny\/7Zp1z075IKYCbfcB+t7T28a6XE13N\/PfxXYHrfrvTMEeM\/89+ZpDOIlXO\/gJ4o1L\/63aQ57IuWcWa70ErhAF8mfN4y878o6\/Syapfeaf\/1i93bkwXUc8W8H7yfzf2C4haNvA4OCGiX5+0uVr9QFIRBu3mcIZ2GEXoa3ucXX\/cQrmV7fC5l4yLwdeo5am2\/\/SU5X1NzappW1Ty8H8BOHHMT2Q8nIourLTiYN5qv4AV+8Z5wlgPM7XxmMTL2fzqmNW+owYF29Rl+eDINg52c9PGcpBQDspAp2\/dBLCyySsTOfi5WrH7z9ul429ZA4jPirEwaS7TMwPkHyG2IRVcvk8Tl\/8xtNO7y+\/iaa0CfGRN+4PmCyYXb1rnI9jjlhqABt+aVOm9pl1Ll4Snrd1sp+fulIOaCtFlIbzymF3tY3LJFh43Mnl+4\/bZbpK5gDi5WF+MHvT4H4bh7xuuHGFHHflyp+DqNcGQvL43++au9bJ7ZRXmv68q9Uys3U3MwvvZ87CeM7R3b+kqDpp8gbqKUO5Wojege36jVE2u6sZj8tUx51SNL+6FSarZA48XvKztUfJFbOORzYmE478+eCxnS5CpTw19UTzO89O+OTq2k+0Pf4hNupu5nmfsjJohJew+dgUz31I83K2xgCpyp5yuTzZL5gylMu1D1CmCFyulPmLwtbdx+Fxp7TNr27FtVcsMFIl26qOTeIqOcm\/Gy+bu3h++cC7AwSt4a0Y3pIZ\/+943RSd2i5QV0D+3mKyIe3XQI5EzLaAxEtT\/ZopQ7nVD9QMP5tw7dnQ2BKKpWEgvOyjxmXOnEdZZOLIju3quJFOd3hSVXKIn7jEvZ\/dit\/s01t9yJtmy9lpGbijBo2cd4uVfebwsZj3m9NEp9gUNPV2cAe1QE0f8el2ioAPWHcstPNsq108u\/ro41+1Uh0zXq7mYSBZ6K5uhs9Z6iy7hQNA4jxOc27EB7+kq+QQP4HhB\/M7br6cXIEhJ+0Ll7P\/4alt9OlrFlk7726DzZumuGjjzmze6px+y90kZs4m143uir6f7HlTbwe3FMoFme5Vimb41ecTD2XbVy2q253k\/kuWuqub0Qnk2lGlp2MNOr4uMWqlnHSV3IiXQK+7\/GI6x5Exjbr79HlWa+LbSmkT7jN3fLCDCh9EOpAzKX5s5pv3Zt\/\/hPPX\/upUynvL5a1T\/ZqWlq9f43sfBUV6NLVxo1I7rC9Xh7c7ZTyQWZTpXUnuHXMoR+FKlRziz6Gp4126OJBRKedXuM9sYzWQH6sHv3CN893ZUfeThWjtJFNLoaw+YNQhIvI\/IKl9Zb61hLurbTUT8HK1OteXse7qZnjput2Qi3PvuJlrIzbTuFQlhzgM+cmNC38PyDfeZ7Z1nplxdzYvabvYBKZTJU81NCTUcigHgiLPndRZg4+CnwTwqMxjGx60113N07nmXpbZ\/ePxFrYRyNxp+rnVP0i8s\/ry3y9Ru1yrkhvxk5ukp31t2xlp1i9kjFrOlsHsW7r\/nZu\/eLqiaxcbjcjt2Kg8z2upo63lUPYo+nnlkd3xHY2qnT2+RTV12ZDF6VytuOT8qUM5bOTiEZk8BzhJPJwhyn6yi1VyI17GTvKYFEaAwhhZkIycdYWV88xMbT1++RanroLU2Y4dbTFDWw5ltUEdcV+ZN\/DjEJ49trZc3XNBbdlmmvlpN2kWhvESQyMyTYjSlOZylRxK8pgUB7Lrnx+IH+8zc6FiazmbZ2fzXnPSy9m8Aquzn1wul1v65mk5lNUHjrivbHsOtvVmrnC5OiOXSUTR7IakA\/VxkC6FcSjKTUuuV8khDsck9pd\/EuPd1ZAuPEbY1nhO9fEdONOst5\/c+qyPlo5EjX1g3lcOaClFwGvx066\/jUzjZi6eW23r7HG4XJ2HZq7JhJdFLLywtoy9a+87zlZNUZrS0lAlN+L9Zd7nj\/P+ZSxdw2RsH5sKzzRztTp92edjPzo1rLWf3PodEm2FstZ5ZbmEbTKU1T\/Q41+xtnfMsj4MpF0cWmkIrigNXmmpkhvxXdN8b3TUo1\/tSNuTFkgOL2f7smLu+NftJEaOkGlcLXPVOvOur8c6A0OjUq60cj451NbytdZ55X5zIzetN3PxcvVZV+SquzpL2j0KldbA4f3lO1bH0\/iVxictkBx\/5jzry9ncPxTXxRbc4BX5\/uQ2x1S3FcrqDwhEpKNR\/Ikz0d5uu5lrbHa1pVZ\/sK\/dSjnNgdPK\/b26vik\/P6iSoV02b5sKxXWxhd5RKGprI7ztUPY07lfWWZO33czF1FWL8\/IxDCSr2j0KlYVlWf7781EpG5O2OOyTGv4C2aC6s8++ylp3djgJzObRqeFXoz9x76T2MrPtUK4WKHL7W9TOuXAyl62RnbxEzc1cWbxqMW\/aqZI5cLKyLMuTtrhiNh3M6mOm6PIEcNPYcvYMe\/0Pto5O8cerlndTJILKU92fPF7bocxnrYQQWykCXsJuZ7N8bN\/A0mQu9XeSXyS8XM0t\/ZB+7RyF4tuXsrQsGwazqaVsPnaFZWswRS1ny2C2uZxto2rWOQol93vb3u5tO5TVn6MxcrPVJWxu4uLqWOsTMgU+e8xfJFiuzo5WO5GzuixrKph5HxnL1mADL2cPW5ydzUxWzTpno1sdrXnK76EIfIq+hD3VdC+uprmZi2dX2z57nLdRmVnHdye3up\/syq1LNoTNXz+OMOxD3Ui1+gepvF4Q0oOnIvJytm+xodZE1cwfYySmo1ChSKFcrq2RlykC\/o+cqPoNjzpZbeaqj8rEcnX2tHrfMFeBWb\/tiIP5i9\/YpO6wbrVqDm\/1SnpuOeSDKo54dralqyBDOlWzzkqtIBGpeG1reMi4P3KD\/LSupghGdv3ylEPfXB0ff+rbVsOY\/9F5LwPVcb5xQOWpCuTuchW2VyygO26+\/LQnLlwZc0XNQYyJXZAEvgpSzJxHnQe2WBk2wsKqedoNt9L0W+6Wf97sln6f1lhPL9o2r6CILiyVlvp+EKl1lcej9X7rOfU2n10+svYeq+fMVDOXfEaGveNs4\/3kLY\/fNeHPcyAnfZ1k0vhzxMHcO7NbfR5+s\/cddFeDM2yN6GzE+cNjOruuvGnSXxcGeVS+J4qtXkLRKHIos\/Pnzx+ggFpbMxxn9v3rVcXMSws28dljHHXKj11P\/0XTfWUEMkA6cLVss2oOcShPNkObq2SetR1FQOKZN\/aXb4rwW3mcdXTF3uKH5aslFEE4v9QW3q8YPfsqqvZ+lCA\/tr66l676+EWnBDMv4XLz0nsDdr\/JAcCAgtxq7L2QROCTN\/Qe2cKrtCOvvkBCBNRx0enHtI5vfFBWy29RFJ4nHhqoVCLdqqhVKessYduEiyQgPBr1pqyQsTwLkE6FQ3vVcrbtqpmr5dn3PzFWNSe1dM20QpnpLGGbppq5fm8x5lYDAGQEB3KHDGZPBrRt4ZI2V9A8tCoKnaVrptF9Hf4NVBf2vZQwNHMBAGRPeHSqMONM61WziW3Vdi+gGE9rT5mdUewbCgJaTgniyVyjZ14uPxtYrgYAyCIeOOLPmkfCHyFx4iDZEhw7rF6i8oVYUalUIu+ZaS9fs\/PnzX9DvipRzNQzqI9cpf6xAAAgH+Laa26XILH+9f3lFaQh0kSvJn+VDRQzbubiyVwIZACAfOG+IdtjOiPxot8LETJSKZckzw\/eoBioo05yfwFjMgEAwJmqWVB5X39\/69fUTcBIpcyzsKNe59iOsDpGIAMAAHOlahaBmQzUbvQKFYt9RQroOrJAHXX6yL+jat9C+V9u7K8MAABZUOhSTWAkV1LFiQES\/jDFzfdUg5f2TTdGlq+ZXMHu8wK5hG34zLI66sTNXOisBgCAqchA5nPNhYFdFBtDS9fMWNnJLeB9vcWLZcovIgNUdfyh\/7N21AnVMQAAtELmhT\/zbLWc7R19M5aqWXhiVdSxmuMZ6r6uKXi0ngxQ1XHpU7hmEQAAIuGm4OHzblFX9tpeae0k2kqGGFu+Dp0\/f\/6v5BJ2pGoZdx4DAIBpNkd1mjib3MhopawEIvI5LX6G4PdibjUAAJgTjurk47T8tknCI6NzOoxXyroNX6NnLFLVMgAAgA0dH+xQZ5u1GWzwChmvlPm6KlnOb6WIOgZ2JdLODgAA+cDFH+83q2NUGoQQD5Bh5pevif+i9BhFJQPZO\/ImAQAA2MLL2LoNYCYbvEJWQnlvubxVZ8JXHPdmAgBAfnHzV0Eja7jBa49cGibDrIQyC0T0wdzesXfIO649GAUAAKCpwlG9FdlOj4wvXTNroewTrZdPJSoUkZFNeAAAgCY8jYlfcot2q40qmVkLZW74kuVy5L1lVMsAAGBD4dDrerdKCXvXFVsLZeZ79ChpQLUMAACmFT7QmIgpqPx6ubyeLLEaylwtBxT9GQWqZQAAMEm3SrZxDKqR1VBmuvOwUS0DAIApulVylWgTWWQ9lLWPR8lqWYxqrP0DAACQgSo5EFtVv5RF1kOZCaHXOo5qGQAAdGlVyWTvGFSjWEJZt1ouDO4l78RBAgAAiEK7SrY0LGS8WEKZaVfL720nAACAKNJQJbPYQtnE3jI6sQEAoF1pqZJZbKGsCL17J7G3DAAA7UpLlcxiDWV14FpQmSJCtQwAAO1IU5XM4q2USf\/gNaplAABohboJKkVVMos9lFEtAwBAHNJWJbPYQ5npVssd77xMAAAAE0ljlcwSCWWulnU6sWufbCxjAwBAc7oZkUSVzBIJZaZ7brljYBcJf5gAAAAaqcLt0F7SkUSVzBILZd1zyyQD2UO1DAAA43S+\/SLpSKpKZomFMjNRLWP8JgAAhFRz15BeLiRVJbNEQ1m7WiaM3wQAgBre0tRt7iIKHkiqSmaJhjLTrZb5iFTh6H4CAIB8Kwzs1joCxcd1uzxvPSWoQAk7WKmU+3qL5wmiRRSRGHqf\/N4L5RuJ\/+cAAEACOIw739LcS\/bEqtfkCi4lKPFKmQUerZTPUCJfHM3\/GJ58hgQAAPnUobuVKatkNdwqYU6Esly+r1AgHiMNHXIfQYxqLFsAAEAqcXOXd0RvG1N3qJUpToQy8z16VGf8JsOkLwCAfDExuYuPQLlQJTNnQpmrZflMZRVpUE1fWMYGAMgNntyl1dxFyR6BGs+ZUGbymcom3SNSahkbk74AADJPnBjQntxFFDyW5BGo8ZwKZeYJ0qqWedIXlrEBALKv860XSEvtCNSj5BDnzhAdrFTeKfYWi\/LNJRSRGB4k6p5DQVcvAQBA9nTIZWvt5i4HjkCN51ylzHyP1ugckWIdb7+MZWwAgAwy0dwl7XCluauRk6FsoukLy9gAANnUeWAL6eryxM3kICdDmeneucx4aQMjOAEAsqPDQLd10vOtJ+NsKLOqoBVYxgYAAGZk2VpQ2XesuauR08OiK1KxtzhdvrmUogqqJIYPkT\/7PAIAgHTi4qrzzZ9pF1nc3PVGubyNHCUoBc6fP\/8NCqhEGkbnXkbV4sUEAADpw7OtCwO7SIea3LW\/vIIc5vTydcgTQvuTiNnYAADpxLOtdQOZl61dmtw1kVTcdcjXO+qeXeZlbO\/4u1Tt\/SgBAEA68D5yx7svG1m2du1McjOpqJRZ\/exymTSIoYNU0L3eCwAAYsOP2brd1i5dODGV1IQyn102sowtl0C84+8QAAC4jY8\/FTSndqVl2TqUiuXrkJFlbImXsf3Z8+QbXQQAAO7h6rjzrRdJV1qWrUOpqZRDRpaxeY8C074AAJykAtnA1K40LVuHUhfKvIxdEPrj0dTdy3JpBAAA3GLijuS0LVuHUrV8HarfJMVnrJeSBt5bDmacRUHnLAIAgOSpfeSK5vEnSt+ydSiVocwGBitb5\/QVl8o3S6ShcORN8nvOw\/4yAEDCxImD1Pn2P5G+4LF9\/f0PUgqlbvm6kYnZ2HyblIlmAgAAiM5UY1d9tvUaSqnUVspMzcYuFk9QQNeRBjF6XIbzCAUzzyYAAIhf1++2kBgeJF1dnvjY3nI5tedeUx3KbKBS2WbkmNTQe\/L\/plEwfS4BAEB8eK61d8TENbvBA6\/192+iFEv18nXIxDEp1vHeL8mTexoAABAP1dg1YKCxi8T6ffv3r6GUy0Qojx2T0t1fljrkngYurgAAsI8bu7TvR1YfKJ3Hn5pJ\/fJ1SB2TMrG\/7A\/XJ36dJ9\/JzKcHAMApqrHrdz\/XvmiCFTxx1b+Uy3soAzKVOry\/3Nfbe55cxlhEGlTjV3WI\/FnzCAAAzOIg7nzzZ\/oDQpTggdf7+39IGZGJ5etGgeetNLG\/XBjci4lfAAAWqG1CA4GclX3kRpkLZd5f9oW4ysj+stzrKAzsJgAAMEN1Wh8zcGJJFl9Vj1ZRxmRy05TPL88pFt+V+8s3kSbv2O8wihMAwADVaX3wf5E2WXR1CXF5ms8jTySznUxyf3mHifPLjEdx8mCRoGM6AQBA+3jVseP9\/0EmCE\/clca51q3IdHvxwGDlWRPzsSmoyor5LdzBDAAQgZppbWyccfDAvv7+RymjMrenPF5V0M0mGr9U+\/6bW3CGGQCgDeFjp5GPJcSmrDV2jZf5UDbZ+BUOTDdxrg4AIOvUY+aBLWYeM3lAiMheY9d4uZiOUW\/8+i0F9BnSxGeYa0vZGC4CADCRsUA2cRZZBnKXLK72yCqLMi43qTJQqewp9haFfHMpacJwEQCAiRkNZMnzxM3\/Ui4bmMfpvlyVegODla2mOrL54goxehTBDADQQE3reuvnRq5hrH\/EVa\/3lzMzsWsquVt\/NdaRTVS\/UUqoc8wAAHmnApkr5CFTt+0FD+zb3\/8g5UjmG72aMdWRzdTUL4zjBICcMx3IAQUbst5p3UwuQ7mhI7tMBiCYASDvjFbIgnaoewxyKJehzGQwl00dlWIIZgDIq453XjYZyNxpfTMXT5RDgnLuolJpUdUPfkWGjJ6xiKpnXEoAAFnHS9aFf91OhUN7yYgcHX2aSO4P2h6sVN6ZUyz2m7i8gnnHeT46mr8AINvCPWTv6O\/IiPolE3kOZIbpF1S\/vKJYHJTBfB0ZgGAGgCwz3mUtA7kgK+R\/KZf3UM4hlOtkMG8zNVyEqWD2R9TtUgAAWWH+2FPt1qe95fKzBAjlRvXhIuaCeeg9DBgBgMyoXS7xM4ODQVQgr3i9XF5PoCCUxzEezCcOyqr5XQo4mDErGwBSyvTozJpsX8MYBVKiCQ7mvt7e8wSJRWQAfxGrSyx4KRv3MQNAylgL5BwOB5kKQnkClcHBTUaDmW+XOvIm+bPnIZgBIDWEXO3r3C+XrKvHyRwE8kQQypMwHsz+MIIZAFKjcOh16nj7nwzfIY9AngxCeQo2grkw+Lrqyg46phMAgIsKA7up419fIRFUyRwE8lQQyi0wHcwkv8gLg\/8iq+VpFEyfSwAALun4YCd1vP8\/yCwEcisQyi0yHsySd4wn4WDICAC4gVfyOt7dRoXKLjILgdwqhHIbrAQzhowAgANUh\/VbPzc3NnMMArkdCOU2cTAXe4tF+eYSMoSHjBSOvokjUwCQiLEjTwaHgtQgkNuFUI5gYLDyrMkBIwxHpgAgCarD+q0XDR95YmLVvv39DxK0BaEckenJXyzszCbRgQYwALBONXS990vDHda10Zn7+suPE7QNoazBRjBzZzYawADAJtXQ9fY\/ySLgt2SUoIrnietfL5c3EUSCUNakgtngtY8hbgDzTgzUKmYsZwOAIeGlEtzLYvYDU7kgxPV7y+VtBJEhlA3gax\/nFIs75ZsczN1kCDddYJ8ZAEyxtn8sA7kL9yEbIQiMuahUWlQNgqdl1Vwiw0bnXkbV4sUEABBFx3vbqTBg+vwxjQXynnK5TKANoWxYSfKC4EUbwVztvZCqcxdTgKoZAFqklqvfltXx0EEyTQixtSroZpnHFQIjEMoW1IOZK2ZjQ0ZCQecsGjn3Wgo6ZhEAwGR4\/kHh7V8YvlAiFDy2b\/\/+lQRGIZQtOn9e6VH5hXsvWTB6xiKqnnEpAQCMp45XfrDTznK1gqEgtqDRyyIbQ0ZC3J0tRo9S0D0HTWAAMGZsXOaR\/WScoIrwxF37+vsfJbACoWzZ2JGp2lhOY53ZzDtxUHVnU9csCrp6CQDyTV23yPcfy2A27uSRp2cJrMHydUxsNoCx0eJC8uVyNprAAPKHQ7jj3ZfJO\/YOWSFoR5cQN6PD2j6EcoxsNoAxNIEB5I\/dZi75uELBhsDzVqLDOh4I5QTYbABjaAIDyD7VzPXOy1SwsXd88k9ZtW9\/GfvHMcKecgJUA5iF0ZwhbgLjyT2YBAaQTVwdd7y5RfWVWBHOsO4v\/5AgVqiUE2R7n5mhagbIjliqY+wfJwqhnDAO5kJATwRBsJQs4b1mHtPpzzqXACCduLO68MEOa3vHNRgIkjQsXyesIsnl7A22zjMz9ez68Bs41wyQQuGYTL5m0fS9xyf\/kLHzxw8SJAqVskMuLJWW+kHwhM3lbK6aq7yk3XMBAYC7+Mm0x+eOZXVs9w\/CcrVLEMqOiWM5m+H4FIC7vOPvUsc7v7AzBOQUwWO+563BcSd3IJQddf680hr5DbOaLFM3T\/HQEYQzQOKsDwEZ+4PkcrUQK14vlzcROAWh7LA4urMZlrQBkhUuVfMFEnYbuWrXLXYKWoHlajchlB0nc7nP82mNzWEjIYQzQPzi6aoOYRiI69B97bhKpTLEw0bmFIv98l0ez9lHlqhn60f2o0sbIAZq31guVVvtqg4J2lGoDQPBcrXjEMopMVCp7OgtFp+hQPDZKSuzs0M8JYifvSOcAcwLw5i7qu03cjHVzLViH5arUwHL1yl0Qam0PAiC1bb3mkNoBgPQxwFc+GAnFQ7tpVgIKntCrNhbLm8lSA1UyikUZ9XMxu5t9kfU3c2onAFax9tCHe9uo07uqrY1q\/o0qjr+E1kd7yFIFVTKKRd31ayawXouJL\/3AlTOAJOIs6P65B9KO2R1vArVcXohlDOAj04Jn9YICm6nmCCcAZpLKIwrcuXssX37y2sIUg2hnCFxjOkcD+EMUKP2jCu7yRvcG18YE84dZw1COYPimgbWKJD7zHx\/MxrCIG+4m5qDOLYGrlCtOn4A546zBaGcUUksaYfQrQ15wGHMQz+sj8RsCjOrswqhnHFxN4I18mecpSaE+dPPJIAsqA3YeZM8WRUnEca8VC0EPYBGruxCKOdEEkvaoXB8pz\/rXLXMDZA2iTRvnfIXUBdIrHq9XF5PkGkI5RxJckmbcTjXqmcsbUM6qCVqGcQ8fjYR9a5q36NHsVSdDwjlHKrfPvW0XNK2PnhkIhzOfs+FuPwCnKOq4sHXyTu6P6H94vrfQ4hNnYJWoas6XxDKOZbkfnMI1TO4IqyKhQziRJao67BvnG8IZXAinBlfflHtWyhD+kwENMQi8b3iU\/4ymFUNCGVooJrBhNxvTjicmT9rnnrB8jaY5sry9BgZxrI6fgBNXMAQynAKtd\/s0\/KkOrXHC4eSBBzQM88lgCiSPsrUFJq4oAmEMjSVdKd2M+H+MwIaWtEYxGLoYPLL0yGEMUwCoQyTGgtnEVzpwrJ2iCvogDu41TI3zj9DjXNL040QxtAChDK0ZGxZ25E95\/HUEauZ82pBPa1IkB\/cNc0d097xd9wLYib3jEnIMCZajzCGqSCUoS0czgWipS50a0+kcZmbR3yiis6WsWVpGcLi8H53lqXH4aNN8hF2Axq4oB0IZYjMlaNUU1EBPW2OWuoOZBWNkE4XFcJhNXxkv7oi0WU4Zww6EMqgje9xDgJaLQN6KaUAQtptYvSoWoYWJw7WquGhg5QGgsR64dEGhDHoQCiDMS52bLeCh5b4MqSD6fWwxp50bLgKFicGVPB6wwdr07Qcr4RPgeYtMAyhDMalYd95KmE1Hb4gqPWdFsCyEk5LFTye2i\/26bFqgbYijMEkhDJYxUvbVZ+Wp616boYrah7\/qYK6\/jbC+nQqfEeO1kKXX2TlG75OtVpVvMHzaBOWqMEWhDLEIgvV80RUQPO56Wn10JbvE7\/fOTOz+9WNwUvVYVX58utMhO84XBUHgp7BkSaIA0IZYjdWPYvgRhnQfZRhKpS7ZtVed86qhbZ8TYWuWpDz216nM+HNTVbqNVe3HK4ctBzAo0fGQjf8sUyr7xXLqngrqmKIE0IZEiOL5z5ZPd8kg\/n2tHRu26SCuVAPalZ\/X\/1ck1uzxn7dBE6rWP2GMJXBOvZ+dTgfQTsVGcSC1HGmxxDEkBSEMjjh5PI23UtBsIgAYoLlaXAJQhmco0Z61itoBDTYgCAGVyGUwWlhQIuAbsQSN0RWW5regSAG1yGUITXCJW7sQUNLOIgDsUl+vbxULdAmBDGkAUIZUqneJLbU92UV7di1kpAgIXZwCOMsMaQVQhky4aJSaVFVhrRa5ia5D53xo1ZQh2oYMgahDJnEZ6FlFb1UCLoSS90ZUj+2JPeGX5IrJVtfK5d3EECGIJQhF1RIEy1CJZ0y9Uo48GgnQhjyAKEMucTL3RzS9Wr6Uhy9ckDYIR3QTvnkaUdngbbukevRBJAjCGUAqjWOdXBIy5fAlxU1gtouHmNJosx7wRzAXoF2oAoGQCgDTKpeUZfCoA7k2wjrNqgZ0vV9YKJ+4ckKmGgHKmCA5hDKABGcEtZE8+V3UikIghJRbo9mlYVQS8\/95Mm35fsIX4D2IZQBDFsg18JHObCr8kWokO6TVfZ8fp264K5XuiREhZeZZbU7qEK3ShVeci4QVRC8AOYglAESwHvY3TKkR+sBrQK8QH3k17rCVfVde6PU+Pvqod4+DlWi8AxvLWj548klZfXTAZXVzxRk2Moql8N2SL7g3C9AvP43VB3iUysOce8AAAAASUVORK5CYII=\"\/>\n<image id=\"image1_9775_52311\" width=\"56\" height=\"56\" preserveAspectRatio=\"none\" xlink:href=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAIAAAAn5KxJAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAOKADAAQAAAABAAAAOAAAAAANV2hTAAAJ3UlEQVRoBe1ZC1BU1xm+sOvy2ge7LMtz2WWRhyICRVF5qGiITg3SiTbYjtomRUc7ta+01TamTjTGpDPpTJrYNJJJ6oMqWjIp6lQgVpFHG6oSEJSXvHcXWNhdFhZY3JV+14PrIpdlWTHTzHjmztn\/\/Oc7\/\/nuf\/7zn3PBZXx8nPomFNdvAkma4zOic71Szzz6zKNOeuDM2787FO+Cp+L8WUYTVsCVM58yAhxUPlGMgtxg0RF\/qTwifH7lkSxdjxLP0R9vQf3+KxvBoOZaEQEAU\/2nV9rrvnKQ1lSYy5Mk\/E\/27nS5XVCmvM\/luPp6skyjg5yRwTEPnm3t5s7TDFuGxu6nS81+33s3bcvLU0k4omE7AmLEwJ2q\/14MF\/N2JHKCvDnAsF39CLJda\/qiUV9tZMe6eyQG86DUjVoMo+aW3PcUMfGy6DhGg\/aVTnqUXuJVwT96Md5qHeRyKjXGAc3P0xdC2a4dGzf1Nw9OEIWG5UJjK2oaXq9y5tB2Pkb9AumJzffH8dASRe3IXHPs5D9CQhZBlkUnpP76+Jq4BYQfNBZn6NFmSXGe6EML9C+4hnKNA8tfFiRnlktWelKGqoC1wanbuN\/5jWmwwRbptDw3RMn0HJ2KogIsfUo0+5trKbG4X0XLc1Kc30y207sK\/MyUX0Rr3sU3Mix3S652c12VJRf3rOVd\/8RNvpbjatL2amzxTshOEjX0PZqYxY+QZK4mc+dvPZCemCoJ8pdQ1Kf5506fPgy9WTugvVZVW19NMHq93tvbm8iO1\/aIIl0LfCSXT\/xZWZST+V4hjEojo4V+QdjyJ7bGpy+jdzcpoMIWCSBLgoI+L\/7MwhW2NOu2\/nD9w\/6JX+wnHA0fvBi9\/1+zDolpieIUaT+8zugudLnPAadz+zaHuA9+yZXvKGi9U1meEErJRG7W\/W7SGgjRQ+\/sLLx086\/H8w8eyl63\/luEoLaxy8pY7MFSj6pgfLbZdFqiMA2WIoGkXW+6pRrGAcMX+\/WMPMJbWdLI2rtuIj7hCn7R0bJgqQ8hV327\/15nX8i8CapOJ6lpd\/1Afy+fpYsJ9ly\/0Fvm7YYDBs7wcBnFsckVTIowi6ERLBCFvf+pQwxAJiz7RwXvHy1o+qIqRCq2BugE39n\/PPIQ41icN6e\/6udyWB5saoWUpxC61d0upTZsBpjt6mJ1qkqrChQFUt0abfejTXajtSsqQJq0RNF0rZQYtyZ\/xrnsK6f1KLYRRpJD3GriapMqYd\/HVwY9DYm\/bXeLgJ5j1uEJ4hg7OmpB14qEkBAa7DusvJ7\/2YBGYx5qwDPM8Wn3Xzmy8Z3P24aq2yaBbQcyyvbO+rcy4rZF0yd0RcuQ0J2l1Om5ma+3+C4KCAiQerh0joyr1er7mq75lF6qLA0aaQDjniEL8JoRL9TkTLL4JGlE0aawpXpXT88AmdBXotP0ro5WAFDdO7Q9kX5bR4o9okc+zhX\/bWtMxMQlw9DXHLL3Uo8wFCxFPK9YOX3YwzGXqpsSFYE1HT3D6naQlg803FPerp+n6BHOd12wjLxVZYsKGJlchiFld9pQwwhRpsWEozljsRejcIBasSWo94wbL5Jnbu6LyuIEKnQdPZSvRETf3ehC6F6ta\/nZhhSKSjlR2VihiRWmSjRq9XJFIEggvX9UUg2Wvv4Bw6NjZJRHTbFiRXL8qlh0OUjUnkfhLTCAnyyNlayIxKDFS8mKk7UjFMnEhI07m4UmGLcMjoHTxYobcCfCY0NSAoGR+marKuKfv79Vkhf9izyvGLzexNvaYqbK9ogCDQ+hBj+BwL+2G5Oq0QQhBJktUWIXL0aUIAoNuGq61WS5CYAoCVGZqTHvalVWvqq+b8gRp9pbethFsGN67aARLNFcHxsOKlduNZGJ952\/S4SXYukUcfbWyOlbtKaj1faEpAeSEhIatHO19GGLivCnysvKfKIcuvDPQBRGp3rOOlNiEJfI3kI3+M\/alLgIrZjJwjBp6pAbtCaDRdg6MPac1Hcyhrk1M1HmcQ+0crEn6RVZhil3T7l44hJvMj\/ca9MPNo5Y6jTmzc+lOXiTeiKirxW3EyaH02Vtfbqcqoljqb2pjZFhXCB\/2QI6qTV3DetrGrJPVcke5DhG8GPKGTbTY2jSRIxa8ygjAEqynxh7kUf9dK3r1q1j7J1O6QxR22TEaHfUjBi0V\/ZmrrLXzdTnDFEmO09dN+2l5KnPPMsJnhGdpcNmhD9RerJaLy8vv1ZabtBrX8jISE5OturnUJiDpa+trT108GCPWpmQMOnyMYcsYWoOPFpa8e958+Zl79ixaBH9V6enVBiI4luWresMSsnAlJD5Yl98y1uV+Kgfbro5OkB\/xIVt2Ipar9Wx2Wylkr6IgGthYeGgwRAQGEhiAEl3ZGSkpqaGy+UqFPTFHjIAUQsWQK6\/c4fH55Pkj5WBEXQlp6Tgfohe28KQR8v2ZeqqChb\/sQq4ml\/G+yZlLT9w5vIPooa7G0Kz3mjNOwC9p38kmm5+kYaMQ\/n5+SwWfROVSqWdnZ1Go1Ei8VWp1EkpK3fv2rklK8vDwwNcxWKxxWIZHR318vIigtlsFggEAwMD396YmZq04levvgqMl5cnxp6\/cMGWJWSGGA1I\/S46zG21eFhelLY6D14BLf\/n9wgj4tG18Kcn1x6vF8ZvNPU0LF0YvnLNWkz2wdGjiFGw3LV790fHcgIDAyrKroGfUCiUyWSXCgtP5eby+Tx3d3cImzZtgp2f7NkDGavR0XIXrsX7bNu+HWOnsmQmKlqShg7N9Qva+koIKP3l9PsFLksnK+4uoP96Q94HQUIjHpQbN27gd\/HixajjliSCQUtLC2QweNBPV8T3CAy4E8FA9HgfLDc0f\/nww7+fO2cF2woMHkVEYmXhSENNEb6W8LSdfRNjPMMn\/kQzYb2HJmEtmIzItrSsvTMKCMpjOTmIitzc3CNv\/2EqnoEoQH6rvo8a37vyl\/ajxgPqeAHb8fpG2n+27PneImi6urpQYzVJCNoOsS+DKyIB8V1y5TKC7TEww64HArHYaqSRPskvsPMi8bcDQh0aRK3qy2LEADYcNhNhf+\/ePXStTE3GHLmnTq1OS6uvrw8LC0MSwO6hDT0oRuMwthHEoaEhMmSig6KQK1raOxSyEINhEMqpt2lmoshNdX6R\/LA4DAjL2n83703eMvr\/RqQgJHTVRcgGkbvehcZX6B0fH48VRz7Kzs4uLi46eeJE4vIkbHk4JioqynoQRMfEeovorxREJ4Zgy0MGIEQRBk1DXW15yVW5XP7a\/v1kokk1\/s\/keGm+cLLgeaqrtMDxIXOFZI7RSa\/y\/9GYHVG2fBGyqVn46JP3a3sLhpPpa5t7VhPNzqOzMj234GdE59afFPU\/ZS7eg0tumNYAAAAASUVORK5CYII=\"\/>\n<image id=\"image2_9775_52311\" width=\"104\" height=\"104\" preserveAspectRatio=\"none\" xlink:href=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAGgAAABoCAYAAAAdHLWhAAAACXBIWXMAABYlAAAWJQFJUiTwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAABQnSURBVHgB7V1djCVHdT6n7rV3Z9mfu1lirWML7gTJ2OFnZ6UQZQURMzwQIjkiPODEyYPttzxEsfOY8GD5IeQtYpWXKC\/rfUiiYEVBYpEBQWYk2wxeI80YY4wtYAewMTKsmfGMd9bjuX2ov1N1qrrv39zbdwbv\/aR7u7u6urq7vj4\/daq6GmGMeOnrNLfbKOaR4Aw2cA4RWojUIr1UDQRUYH+gMyilt5G306XidfTHQJbHJpDdb8oKeVHuj0vwx+frmKdLkN9HcTNZN0sic\/o1nXFNr67qpJ90mrB0yy24CmMCwoh47nEyhHwaVHE\/KjSE2FIdAQTkKxwbbjvsa\/gLUBCIssuGr1hf4fwDBdUEVBEk7iyQlN0p9rhzEodQlijJMRtmYc7tttHu1781\/bekV8\/fcvtoZO2ZoOe+TPO6+h\/WFTtvKkmT4ys\/rltJMRXupQX8PqVi5aKQpChh1eSUCDDHe3LKxImbrJIeTIWEs1B+o10kiAkyR9p14HWfxzNlJEvzdv7W9+CjsAcMTdDK\/9F8A+lhLRnzSQXaSvQV7tWYq3BWbUJ6hKpiybFqTUFQW6iiigNMCbIXLlVfJlmSRE4jVomSjbwWqMtNk5CcsO0kxm6SKzRw5iWLxEF6fU3nXrh1FtdgCAxMkCampRcPI9FDkRBHChiJ0QQoTO1MJIg8kSiIELYmlMeSMCBBkhAsq7MoOV4NmkpkogYEVUkQZfuJpSqmscozOwp\/bFHosxN+QdupR2ZncR0GwEBXqslpU6dY1DfWTlSOrGAhPSwtcttWdiNTbZndCdKDkBIEQmKkLQp3EFUl3xWKu4vSI8jpc+clpyAjp9cy2if3QEDhbVNBfolrRQELs3f1lybVL8PlL+7MFW93VnTJbXurohK8CvbbrlYIc03hdUpiB8oeF\/inW2QqrVKlDqqWiKhqyEpO8tiHDH6Vyj+INiRdh1R1hW39R4VfLzw55Mnhcs09OrLaenXlyks0B33Qk6CV\/6H7VNHQ5GCL5N1kN1h9554UWXm+1jDPCv4ph3goL2VFc1kkrwOwfGp+gvP9ELysmK2ac3F8KK6SPJaYgvMXEJyIcBwfW\/jj3LJFb2uSXqD7oAe6Cvrl\/9yZU0qTI2wECLWmpH1g1RVUnbA9bHdQqDqV2x2qcBxQ2Bln51SwQSQkMPXgwn4ptZkAS9ctSJjgRkI6AFZKbCIm7nYkDQU5GEmESE7hDywKZ6OskCk4e8cHqt3xSgla\/m\/StqaxGG8Y2M76JVaoOFEJorYQ+Cklkb\/i6ReQleskJ9apfOSTihWPO+aMlGpdlA3iKc\/ypBLDRGC4jiAVRUynghIJK6iaHFaHhdm3C4svrFAbKlAiyHhrjaIw5LQIIFNDYCu\/SiuEHMIIh0r1T7tCjHmCuspKkxqrpMZE7n6eWFbjRCkB8d5QJEBJdYG3Jak3Rwl5gkP\/w8xZ8ORINafzOK\/OktTSaYtXVqynnKCZJ+xuwsOatnZSL8AaAfPktE5YRen1t64T\/PgH1+HltR147dVdeOP1XZv2TsDhd+nY1akmnH5vE957583Q1r8TepttHpOTOx3SXskHwao7wPY26boH+Ad5rqSuly9QWzWLK8p7Y6oUJ8Nga0J7RkHSWP35T3fg6aUtS8yNhDMfm4EzH52B97z\/UCSocNaQ1ZtTiU4qC2+nqKAgdZanDix86BwucbkJQU9f7FxBZV1ASJ0Db6C9EwANTBuZern5Rge+cWkDXrnBiMnxYU3Sx\/78KBz\/nQZwm4QlxjdUo3QVjihgcpwKXPrwOVzg8gJByxd279cSckHGxWwGT1BIkx6YzUPw4veuw5PfeOMdo8JGxYlTDUvSB88diTaoAN9Q9aQUUYpkHt+uXTjrpSg4CdqAP2hXkI0e+XUs2VHZjnnmyTfhm1pypuREbFztwFce3YAnv7yZOBy2oWqZECowkOd+VgN2rC2ysARdvqCjBQBpq5a8nmNaKjyDZ57a0gRtwRTVeOrSFjx5aTN4a+yWOw8OXB0Xqddo0vVv\/plFmjdlWII62HiQiYjNDHaX2R0G4DiZKffF721PyRkA3\/rKFjz\/7e3gEBTBBcekndQpKDoSzjv\/C3O8U3GasUiI\/0sjJD5I4hI3NzpWeqYYDIv\/uwkbv9oVzkJsGyUueRLLg\/vMseryf+zMaTLbrijf2pE2h+OMQpK+860tS9IUg+Gt7QK+\/l8bLlAaCKHE7hQcYC1cYEKntS4v0pzabTTmYzsdZWQn13J2+erPdqx6m2I4vPzDHXj5RzvCFmFotBLbI4Ikbrf7VjGvNAltbgFjYm\/8Gms2T9KLz0\/J2Ssuf807DEVqfwiy7WiHzpjYwBl3eHCuLQInwu3e3NidEjQCXtESdP2aj78Rcd9QSopwuQnVnOn7bHMBsv1jtzHG3kwA4ecv39hRgnHgim7UF7KvKCOnEMFVE0QNBAXJyaPEzA4agt6GKUbDKz\/ecZJTRG+uihyf3lKxDweSji8q9TMAvP7aLkwxGq7qyH7s5KPgwSVtoEAUtWx3A4lxaKG1w2ngE\/TG5uaUoFGx+euOaw95dxpC\/1CJHCtpijBx0hxEO5UwNlCn8bbRsXPdMVPEBqn33kiQA2EkkIskZMFQmyR0H5YYnGIUWKGh6F67QKokB0KPb1PaIK\/J5JiKuO8AEnTkqIK\/\/fzJnnkufn4drv7igEU9vHRAYnswhHmYQEtQHnMz4K7r0JsKmdNwQDBzFOGOuZvhtw1c+cFrKzCk8yhUzqNkSMfvi8C4nGq48SF3CGR7iIljkuKgEUEGq7TSwPMpxgIpJUwK2yASNsg5CZn0JO0iv8R9EKH7\/rEFdz9wDOqGOYc51yQhG6VJJCHE5lj1WQmKMezgrQmvLnYPTY4hU2Hn\/mwmbF+6sAl1wJBz9wNHw\/bFfxnohYORUUVGou6EZDXtKxnCKXCEgW+osj8HE5OgnByuwHGTlJPD55wESd0IYcIKYYuCkxDGQLOvLXpYE6JqRE4Ow1TkONVdTg7DnHsS6o6KtO2TkAUQvTjwNihpiEqbhBQGp9fdEOpGDsNU6Cc++y4YFd3IYUyCpBDNLoV3yoSpUO9EWctUxuHARbRrQj9yGHN\/cjjZ3t4iWH78GgyKfuQwJkESd28n4R2h5niogSqHeTCoO1RJB3htuPqLvQVhr20V2mZswOfuec3ajl4Rg0HJGfWaBkGIGkAMjBqIFyMCYc3QyS3iPEa1sWgFDQf14dIFN0Jor3bGELP8+Lb9mafflHPqdCPsH5Yc45DwNdWBxJX2uiwQxn\/cUOUeVPSOtONJskITsUGjksRgou44ezOc+5QjaxD1Ga+jXnIMcueAB7Wx3QFhg5qBnBB7w9Lb0dw3VDfGRZLBSys79uckiTRJR\/oeMwlyLIjVGEF8ISzdFwhCEdOxM4P4fMo7BYjy1cP6MU6SDIz6M3bKlGulqgtRq09ch\/9\/7E2YBBwBlNihIDngVCDna7JTwEN67SQhniiVNWAnhW4kmUrcK6Sd2m+EsXA8ZMpA2CGTzE6CYltDKua0IR7fQKWQMlkYkvLowbMjEHSQkL9SSaGFmnpw1kkoTwrBUiMcBfNTE9JxAlKSTHvnwHW87RE8lLoQxLi3ICGLcJPx4uwhyUBFOXOU9PDGhVO3NgbOu\/zVbW3om7Ua7yPHUHf+9Z7TY1u3ua5tjkuTYNLNAJIcn4OXTQjBUQjkQEIOp8PYYFrpw\/SE1i09n\/27E31d8ZdWd+Bf\/\/4qjAMll5qX0g551pRshWKFO53HTvcDRorqgpHmYdpJ4wB7adKl9qOvvN8QJbXp08Qcb5BKj39ZOM5ZMFkYyTHtmbqwX2MaKGvv8ERLLAn8drhKJjWqUG2htH1CXZ11jEn02pbQpf0T38HySwzdDZiQJG1SELh9UHHcdqkLRrXJmN2kwDOCRdvjIza5hwBCgiQwi8Ptlw16R0oPQOxeAOm5VVRwbKhS1gaC9BDE\/eCnXtujwz77IT0GaYiHIAyKh7JtEs4\/uVlExHYcq0ATl6C6Xetzn+ofPK0L0q1m1RYkSao\/4JGlyY+DpDGigDDecXH\/\/k+vw8yxPg3DzQLqAjeUP\/eXr8G+IKg1ZijZFYFybHa2QzoJFYeOhGu6q\/ra1v6Fbe6+3\/URGQmt285VIdYkRulhScryhUEj0c3GrBAA2CcnoQ7Ihum4RwsNA2mHysMOIKg+R5Dq0g7ivO8Qcgzyhul+kJR0b2OFbhL13ZRzfTpJooSkMOsVTA5meFU+godhnAcTF7v66t5UZFWHXV2DIweGVG0sTT7B9qjmk1xWxd9oQgz1G+DBEmAasJce3dwzUeXzTpYkadklOSR3ovfiwlSWYU5RSO0OTkaChhl94+yIU+DLX702ljbTxEgSDoHsRbXItptJtMDvcP0\/lEhR3RK0l6FRRor++Yu3JB7ZqKGhSZCUDPM1qHISPIQX52gN3+TJCqiTn3GMWzNRAdPPxIQN0ylYvp56HYesy8etSsYEYa67oSruljNSI0PDhFz6DY1iogyMND32bxu23TX8NfX9asLoEHWKWG4DGSjZr+CG+lJaQCCrPobMsN1BVNOw49aMJOVd2YMMPDGeohmqVRcS9SbSqtZV4hgw2M3Gsr9QF\/qRNK5Bhd987M2e9qVucvohsUsohl2V3gFCucz21YRuJI17xGfVkC6D\/SKnVzBN5d5apUMwwWh2TlJdw3Fzkg4UOTKSEDeoFOrBzP2eFPg1RPMKSJ3Drbhs41gcRHIM3Gv4wcXOCYku9wQ0XIJJvdA7kcHyPdCLnMQGxfhOhdRMwku40YCDbSsU0lPOIHrLpwSND1gdSYCKbdFQxZLkhPAQHlx+TGS7F8yQ3YOGyhhcl3zNYGNyctB\/0hIOLjkm\/jau4biTRE9ysrhcMl8cT\/0PeVR7ivFjAHKckxDQ3007NDNla1Q0D6mByTFQkHUzhGwVhuv4ySZMMRoOH6sIDOfkCJjw6HqYZRFTtZZHtn\/3tilBo+LoqawOq8gRwqElyH1TmgYwNrf\/\/m\/f7IYHDSdvOxQ3+pCjsaYJonUnJdm4BC8+KFzu932weiDHFIOj9Xv+Ie9PjtlcU9qVftZuiJ2yPSTfPDFOwu3vm0rRXnH6\/TPOBg1AjtnWLbhnlc61mreBYvcChUYsj0n44z8dvGt6ihSn7zwyMDkeWsUptZSkZ+ou7\/0zEjSVouFhpOfkba7eepIj0FSwpM4u2I98r\/c6BrNBJJ+898S0TTQEjFqb\/UjFIJQqyRHSc889uOoaqkQXOUOcvKI7jp9swMc\/fRymGAyGnMPHXfuna4BUwA8JXjIL5f7Ul5IDeDhQt0I0iX\/wRzNTezQA2pqc03e6wfo9yclsk6bzvFlagj60gEtoGXPOQe9BihhG3hmCpiR1hyFn9iOufoYhR2PVqDezImJx+AhnysuoUnecZgj65F+dcN+unsKieQjhrk+0hiJHbmthOV+5+7knikWdMu8zuQwYDoLgfmNWoF5svN6Bp7+2Bd9\/5sb+xl1Le2p3LbQGszkijeL22l\/fg7OVhz33BGlyaDGQo2Iuxw+WIg6yBLP6sx\/uWJJeuMGIMsTM\/uFRHSk4NGxbJx1i3YHZe+\/FtW6HaZI6X0CFD0IiOWlu7Hp0PNkbWqLMd0PNlw9\/+coubP56F97anvDIk5pwk1Zhh4814ei7m5aQd88egubNUuXsjRyN81p6Hup1KKwsUuumQ7SiV9tRcsq5XfQbyjBzoWUDjfmdF8oGCJH4kFHoBib0s99SnBEq\/DDMtebmGnDncfNNUzIHqPvAOYZykp+\/vjBvm58ajPi1A0xn5QV\/r3lakBS+idHIWZu5Cc5+5jOYtElLI8R1w3W9gbigj16HrEIlkhH64cJ9JzlluwiSVy7kxN0g0mxIqUQOp6XkSGIlwXIJkJGbX48gg8kRtxOXCFCqi3JrPt1fmQfK9eeqa12rtoWcHIPKIfx3ncM1HcdeAMxOKK8e0ovOJ1sikV\/uSqQCIJ3AjkhIkicFfFr6hd5sSYI0DJUtv1caLzdKDwRJgkAOcpo\/oOrt66Si09uuzFM6ppy2IO2ORNd3LD7wUVzVJD0gC\/UPOZTSuBL5aZckZETI7ao8ch7p9OmnCqlICWZy3GZqPCnUdnofacVH1RbaG0QliUrgbTUB9JAuSOoM0vM\/8De+zdOt+J54\/ima0z2txv1uVZ04XH5mkIIEQSYpkC5lepFIV1RpThr80qQXFG0NUfx6FW8HtSjP4Qhyxbjar1K1UlqI4hRhVeRQ1foQak2vLfQix6DvW0pGkrRNOqsLXZNXJKUgIadKgnqQAzJdVhjFXyDQRzFKEuTvuhB2RJ4rRSqh8n4gI4vL7Yeu5HTPs6Y6cLYfOQYDvUZmbNLb23hWP1Hnk5P5pxLk0wrV65CTxGlQUdnBW8OSSiwoSouUML6mArB0LhK2yP2wTEROpj9H1S6Z1pOcamk6b7y1bjanXxF9sbJM7Zu0ytM33E4u0BfHzkJZXUBCSImcPN2qLXaTMw+OXCUX\/DUKLz1RRcap9g0KP6VudCY8idIByK5VVnwuicOQw3lsrLMDj2hilmAIDE0Q47vLdD8SPahvci5ciL\/j5IarSMrIAciI8pN+89T5yfd2fJlycvCUnHgt4RwQJUnak0SdAiT5uXZKahLLeUpI\/ZM9EdOr+KGwop0IhcVDOi70cX3lbfnkJhIDmYSAICiTEHeocwaiUxA9tETVdSGQpSTM32rLircc81JsC0FGSEYQ+aMLsb8EF31ZLwq4qKNiX9orMb1OsWcYsnRNzOtS27rizuikdsGqsItaS9LCNwscGSwlkpSgwoiAP7Us2ztMGp\/TpQnVBuK85KMenIf95SRCEGsqkRxwRACE36oZ5EG6m3oQ4z8ofgPB2RXBJ\/3ScgAAAABJRU5ErkJggg==\"\/>\n<\/defs>\n<\/svg>\n"}]