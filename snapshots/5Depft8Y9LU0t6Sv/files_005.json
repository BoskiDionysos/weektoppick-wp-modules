"[{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/config\/src\/ConfigurationInterface.php\",\"ext\":\"php\",\"size\":1174,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/config package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\Config;\\n\\nuse League\\\\Config\\\\Exception\\\\UnknownOptionException;\\nuse League\\\\Config\\\\Exception\\\\ValidationException;\\n\\n\/**\\n * Interface for reading configuration values\\n *\/\\ninterface ConfigurationInterface\\n{\\n    \/**\\n     * @param string $key Configuration option path\/key\\n     *\\n     * @psalm-param non-empty-string $key\\n     *\\n     * @return mixed\\n     *\\n     * @throws ValidationException if the schema failed to validate the given input\\n     * @throws UnknownOptionException if the requested key does not exist or is malformed\\n     *\/\\n    public function get(string $key);\\n\\n    \/**\\n     * @param string $key Configuration option path\/key\\n     *\\n     * @psalm-param non-empty-string $key\\n     *\\n     * @return bool Whether the given option exists\\n     *\\n     * @throws ValidationException if the schema failed to validate the given input\\n     *\/\\n    public function exists(string $key): bool;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/config\/src\/ConfigurationBuilderInterface.php\",\"ext\":\"php\",\"size\":498,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/config package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\Config;\\n\\n\/**\\n * An interface that provides the ability to set both the schema and configuration values\\n *\/\\ninterface ConfigurationBuilderInterface extends MutableConfigurationInterface, SchemaBuilderInterface\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/config\/src\/Exception\/UnknownOptionException.php\",\"ext\":\"php\",\"size\":748,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/config package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\Config\\\\Exception;\\n\\nuse Throwable;\\n\\nfinal class UnknownOptionException extends \\\\InvalidArgumentException implements ConfigurationExceptionInterface\\n{\\n    private string $path;\\n\\n    public function __construct(string $message, string $path, int $code = 0, ?Throwable $previous = null)\\n    {\\n        parent::__construct($message, $code, $previous);\\n\\n        $this->path = $path;\\n    }\\n\\n    public function getPath(): string\\n    {\\n        return $this->path;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/config\/src\/Exception\/ValidationException.php\",\"ext\":\"php\",\"size\":862,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/config package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\Config\\\\Exception;\\n\\nuse Nette\\\\Schema\\\\ValidationException as NetteException;\\n\\nfinal class ValidationException extends InvalidConfigurationException\\n{\\n    \/** @var string[] *\/\\n    private array $messages;\\n\\n    public function __construct(NetteException $innerException)\\n    {\\n        parent::__construct($innerException->getMessage(), (int) $innerException->getCode(), $innerException);\\n\\n        $this->messages = $innerException->getMessages();\\n    }\\n\\n    \/**\\n     * @return string[]\\n     *\/\\n    public function getMessages(): array\\n    {\\n        return $this->messages;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/config\/src\/Exception\/ConfigurationExceptionInterface.php\",\"ext\":\"php\",\"size\":443,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/config package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\Config\\\\Exception;\\n\\n\/**\\n * Marker interface for any\/all exceptions thrown by this library\\n *\/\\ninterface ConfigurationExceptionInterface extends \\\\Throwable\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/config\/src\/Exception\/InvalidConfigurationException.php\",\"ext\":\"php\",\"size\":1338,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/config package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\Config\\\\Exception;\\n\\nclass InvalidConfigurationException extends \\\\UnexpectedValueException implements ConfigurationExceptionInterface\\n{\\n    \/**\\n     * @param string  $option      Name\/path of the option\\n     * @param mixed   $valueGiven  The invalid option that was provided\\n     * @param ?string $description Additional text describing the issue (optional)\\n     *\/\\n    public static function forConfigOption(string $option, $valueGiven, ?string $description = null): self\\n    {\\n        $message = \\\\sprintf('Invalid config option for \\\"%s\\\": %s', $option, self::getDebugValue($valueGiven));\\n        if ($description !== null) {\\n            $message .= \\\\sprintf(' (%s)', $description);\\n        }\\n\\n        return new self($message);\\n    }\\n\\n    \/**\\n     * @param mixed $value\\n     *\\n     * @psalm-pure\\n     *\/\\n    private static function getDebugValue($value): string\\n    {\\n        if (\\\\is_object($value)) {\\n            return \\\\get_class($value);\\n        }\\n\\n        \/\/ @phpstan-ignore possiblyImpure.functionCall\\n        return \\\\print_r($value, true);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/.phpstorm.meta.php\",\"ext\":\"php\",\"size\":6201,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace PHPSTORM_META\\n{\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Util\\\\HtmlElement::__construct(), 0, 'a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kdb', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr');\\n\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading::__construct(), 0, 1, 2, 3, 4, 5, 6);\\n    expectedReturnValues(\\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading::getLevel(), 1, 2, 3, 4, 5, 6);\\n\\n    registerArgumentsSet('league_commonmark_htmlblock_types', \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_1_CODE_CONTAINER, \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_2_COMMENT, \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_3, \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_4, \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_5_CDATA, \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_6_BLOCK_ELEMENT, \\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::TYPE_7_MISC_ELEMENT);\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::__construct(), 0, argumentsSet('league_commonmark_htmlblock_types'));\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::setType(), 0, argumentsSet('league_commonmark_htmlblock_types'));\\n    expectedReturnValues(\\\\League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock::getType(), argumentsSet('league_commonmark_htmlblock_types'));\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Util\\\\RegexHelper::getHtmlBlockOpenRegex(), 0, argumentsSet('league_commonmark_htmlblock_types'));\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Util\\\\RegexHelper::getHtmlBlockCloseRegex(), 0, argumentsSet('league_commonmark_htmlblock_types'));\\n\\n    registerArgumentsSet('league_commonmark_newline_types', \\\\League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline::HARDBREAK, \\\\League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline::SOFTBREAK);\\n    expectedArguments(\\\\League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline::__construct(), 0, argumentsSet('league_commonmark_newline_types'));\\n    expectedReturnValues(\\\\League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline::getType(), argumentsSet('league_commonmark_newline_types'));\\n\\n    registerArgumentsSet('league_commonmark_options',\\n        'html_input',\\n        'allow_unsafe_links',\\n        'max_nesting_level',\\n        'max_delimiters_per_line',\\n        'renderer',\\n        'renderer\/block_separator',\\n        'renderer\/inner_separator',\\n        'renderer\/soft_break',\\n        'commonmark',\\n        'commonmark\/enable_em',\\n        'commonmark\/enable_strong',\\n        'commonmark\/use_asterisk',\\n        'commonmark\/use_underscore',\\n        'commonmark\/unordered_list_markers',\\n        'disallowed_raw_html',\\n        'disallowed_raw_html\/disallowed_tags',\\n        'external_link',\\n        'external_link\/html_class',\\n        'external_link\/internal_hosts',\\n        'external_link\/nofollow',\\n        'external_link\/noopener',\\n        'external_link\/noreferrer',\\n        'external_link\/open_in_new_window',\\n        'footnote',\\n        'footnote\/backref_class',\\n        'footnote\/backref_symbol',\\n        'footnote\/container_add_hr',\\n        'footnote\/container_class',\\n        'footnote\/ref_class',\\n        'footnote\/ref_id_prefix',\\n        'footnote\/footnote_class',\\n        'footnote\/footnote_id_prefix',\\n        'heading_permalink',\\n        'heading_permalink\/apply_id_to_heading',\\n        'heading_permalink\/heading_class',\\n        'heading_permalink\/html_class',\\n        'heading_permalink\/fragment_prefix',\\n        'heading_permalink\/id_prefix',\\n        'heading_permalink\/inner_contents',\\n        'heading_permalink\/insert',\\n        'heading_permalink\/max_heading_level',\\n        'heading_permalink\/min_heading_level',\\n        'heading_permalink\/symbol',\\n        'heading_permalink\/title',\\n        'mentions',\\n        'smartpunct\/double_quote_closer',\\n        'smartpunct\/double_quote_opener',\\n        'smartpunct\/single_quote_closer',\\n        'smartpunct\/single_quote_opener',\\n        'slug_normalizer',\\n        'slug_normalizer\/instance',\\n        'slug_normalizer\/max_length',\\n        'slug_normalizer\/unique',\\n        'table',\\n        'table\/wrap',\\n        'table\/wrap\/attributes',\\n        'table\/wrap\/enabled',\\n        'table\/wrap\/tag',\\n        'table\/alignment_attributes',\\n        'table\/alignment_attributes\/left',\\n        'table\/alignment_attributes\/center',\\n        'table\/alignment_attributes\/right',\\n        'table\/max_autocompleted_cells',\\n        'table_of_contents',\\n        'table_of_contents\/html_class',\\n        'table_of_contents\/max_heading_level',\\n        'table_of_contents\/min_heading_level',\\n        'table_of_contents\/normalize',\\n        'table_of_contents\/placeholder',\\n        'table_of_contents\/position',\\n        'table_of_contents\/style',\\n    );\\n    expectedArguments(\\\\League\\\\Config\\\\ConfigurationInterface::get(), 0, argumentsSet('league_commonmark_options'));\\n    expectedArguments(\\\\League\\\\Config\\\\ConfigurationInterface::exists(), 0, argumentsSet('league_commonmark_options'));\\n    expectedArguments(\\\\League\\\\Config\\\\MutableConfigurationInterface::set(), 0, argumentsSet('league_commonmark_options'));\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/CHANGELOG.md\",\"ext\":\"md\",\"size\":34246,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"# Change Log\\nAll notable changes to this project will be documented in this file.\\nUpdates should follow the [Keep a CHANGELOG](https:\/\/keepachangelog.com\/) principles.\\n\\n**Upgrading from 1.x?** See <https:\/\/commonmark.thephpleague.com\/2.0\/upgrading\/> for additional information.\\n\\n## [Unreleased][unreleased]\\n\\n## [2.7.0]\\n\\nThis is a **security release** to address a potential cross-site scripting (XSS) vulnerability when using the `AttributesExtension` with untrusted user input.\\n\\n### Added\\n- Added `attributes\/allow` config option to specify which attributes users are allowed to set on elements (default allows virtually all attributes)\\n\\n### Changed\\n- The `AttributesExtension` blocks all attributes starting with `on` unless explicitly allowed via the `attributes\/allow` config option\\n- The `allow_unsafe_links` option is now respected by the `AttributesExtension` when users specify `href` and `src` attributes\\n\\n## [2.6.2] - 2025-04-18\\n\\n### Fixed\\n\\n- Fixed Attributes extension parsing regression (#1071)\\n\\n## [2.6.1] - 2024-12-29\\n\\n### Fixed\\n\\n- Rendered list items should only add newlines around block-level children (#1059, #1061)\\n\\n## [2.6.0] - 2024-12-07\\n\\nThis is a **security release** to address potential denial of service attacks when parsing specially crafted,\\nmalicious input from untrusted sources (like user input).\\n\\n### Added\\n\\n- Added `max_delimiters_per_line` config option to prevent denial of service attacks when parsing malicious input\\n- Added `table\/max_autocompleted_cells` config option to prevent denial of service attacks when parsing large tables\\n- The `AttributesExtension` now supports attributes without values (#985, #986)\\n- The `AutolinkExtension` exposes two new configuration options to override the default behavior (#969, #987):\\n    - `autolink\/allowed_protocols` - an array of protocols to allow autolinking for\\n    - `autolink\/default_protocol` - the default protocol to use when none is specified\\n- Added `RegexHelper::isWhitespace()` method to check if a given character is an ASCII whitespace character\\n- Added `CacheableDelimiterProcessorInterface` to ensure linear complexity for dynamic delimiter processing\\n- Added `Bracket` delimiter type to optimize bracket parsing\\n\\n### Changed\\n\\n- `[` and `]` are no longer added as `Delimiter` objects on the stack; a new `Bracket` type with its own stack is used instead\\n- `UrlAutolinkParser` no longer parses URLs with more than 127 subdomains\\n- Expanded reference links can no longer exceed 100kb, or the size of the input document (whichever is greater)\\n- Delimiters should always provide a non-null value via `DelimiterInterface::getIndex()`\\n  - We'll attempt to infer the index based on surrounding delimiters where possible\\n- The `DelimiterStack` now accepts integer positions for any `$stackBottom` argument\\n- Several small performance optimizations\\n\\n## [2.5.3] - 2024-08-16\\n\\n### Changed\\n\\n- Made compatible with CommonMark spec 0.31.1, including:\\n  - Remove `source`, add `search` to list of recognized block tags\\n\\n## [2.5.2] - 2024-08-14\\n\\n### Changed\\n\\n- Boolean attributes now require an explicit `true` value (#1040)\\n\\n### Fixed\\n\\n- Fixed regression where text could be misinterpreted as an attribute (#1040)\\n\\n## [2.5.1] - 2024-07-24\\n\\n### Fixed\\n\\n- Fixed attribute parsing incorrectly parsing mustache-like syntax (#1035)\\n- Fixed incorrect `Table` start line numbers (#1037)\\n\\n## [2.5.0] - 2024-07-22\\n\\n### Added\\n\\n- The `AttributesExtension` now supports attributes without values (#985, #986)\\n- The `AutolinkExtension` exposes two new configuration options to override the default behavior (#969, #987):\\n    - `autolink\/allowed_protocols` - an array of protocols to allow autolinking for\\n    - `autolink\/default_protocol` - the default protocol to use when none is specified\\n\\n### Changed\\n\\n- Made compatible with CommonMark spec 0.31.0, including:\\n    - Allow closing fence to be followed by tabs\\n    - Remove restrictive limitation on inline comments\\n    - Unicode symbols now treated like punctuation (for purposes of flankingness)\\n    - Trailing tabs on the last line of indented code blocks will be excluded\\n    - Improved HTML comment matching\\n- `Paragraph`s only containing link reference definitions will be kept in the AST until the `Document` is finalized\\n    - (These were previously removed immediately after parsing the `Paragraph`)\\n\\n### Fixed\\n\\n- Fixed list tightness not being determined properly in some edge cases\\n- Fixed incorrect ending line numbers for several block types in various scenarios\\n- Fixed lowercase inline HTML declarations not being accepted\\n\\n## [2.4.4] - 2024-07-22\\n\\n### Fixed\\n\\n- Fixed SmartPunct extension changing already-formatted quotation marks (#1030)\\n\\n## [2.4.3] - 2024-07-22\\n\\n### Fixed\\n\\n- Fixed the Attributes extension not supporting CSS level 3 selectors (#1013)\\n- Fixed `UrlAutolinkParser` incorrectly parsing text containing `www` anywhere before an autolink (#1025)\\n\\n\\n## [2.4.2] - 2024-02-02\\n\\n### Fixed\\n\\n- Fixed declaration parser being too strict\\n- `FencedCodeRenderer`: don't add `language-` to class if already prefixed\\n\\n### Deprecated\\n\\n- Returning dynamic values from `DelimiterProcessorInterface::getDelimiterUse()` is deprecated\\n    - You should instead implement `CacheableDelimiterProcessorInterface` to help the engine perform caching to avoid performance issues.\\n- Failing to set a delimiter's index (or returning `null` from `DelimiterInterface::getIndex()`) is deprecated and will not be supported in 3.0\\n- Deprecated `DelimiterInterface::isActive()` and `DelimiterInterface::setActive()`, as these are no longer used by the engine\\n- Deprecated `DelimiterStack::removeEarlierMatches()` and `DelimiterStack::searchByCharacter()`, as these are no longer used by the engine\\n- Passing a `DelimiterInterface` as the `$stackBottom` argument to `DelimiterStack::processDelimiters()` or `::removeAll()` is deprecated and will not be supported in 3.0; pass the integer position instead.\\n\\n### Fixed\\n\\n- Fixed NUL characters not being replaced in the input\\n- Fixed quadratic complexity parsing unclosed inline links\\n- Fixed quadratic complexity parsing emphasis and strikethrough delimiters\\n- Fixed issue where having 500,000+ delimiters could trigger a [known segmentation fault issue in PHP's garbage collection](https:\/\/bugs.php.net\/bug.php?id=68606)\\n- Fixed quadratic complexity deactivating link openers\\n- Fixed quadratic complexity parsing long backtick code spans with no matching closers\\n- Fixed catastrophic backtracking when parsing link labels\/titles\\n\\n## [2.4.1] - 2023-08-30\\n\\n### Fixed\\n\\n- Fixed `ExternalLinkProcessor` not fully disabling the `rel` attribute when configured to do so (#992)\\n\\n## [2.4.0] - 2023-03-24\\n\\n### Added\\n\\n- Added generic `CommonMarkException` marker interface for all exceptions thrown by the library\\n- Added several new specific exception types implementing that marker interface:\\n    - `AlreadyInitializedException`\\n    - `InvalidArgumentException`\\n    - `IOException`\\n    - `LogicException`\\n    - `MissingDependencyException`\\n    - `NoMatchingRendererException`\\n    - `ParserLogicException`\\n- Added more configuration options to the Heading Permalinks extension (#939):\\n    - `heading_permalink\/apply_id_to_heading` - When `true`, the `id` attribute will be applied to the heading element itself instead of the `<a>` tag\\n    - `heading_permalink\/heading_class` - class to apply to the heading element\\n    - `heading_permalink\/insert` - now accepts `none` to prevent the creation of the `<a>` link\\n- Added new `table\/alignment_attributes` configuration option to control how table cell alignment is rendered (#959)\\n\\n### Changed\\n\\n- Change several thrown exceptions from `RuntimeException` to `LogicException` (or something extending it), including:\\n    - `CallbackGenerator`s that fail to set a URL or return an expected value\\n    - `MarkdownParser` when deactivating the last block parser or attempting to get an active block parser when they've all been closed\\n    - Adding items to an already-initialized `Environment`\\n    - Rendering a `Node` when no renderer has been registered for it\\n- `HeadingPermalinkProcessor` now throws `InvalidConfigurationException` instead of `RuntimeException` when invalid config values are given.\\n- `HtmlElement::setAttribute()` no longer requires the second parameter for boolean attributes\\n- Several small micro-optimizations\\n- Changed Strikethrough to only allow 1 or 2 tildes per the updated GFM spec\\n\\n### Fixed\\n\\n- Fixed inaccurate `@throws` docblocks throughout the codebase, including `ConverterInterface`, `MarkdownConverter`, and `MarkdownConverterInterface`.\\n    - These previously suggested that only `\\\\RuntimeException`s were thrown, which was inaccurate as `\\\\LogicException`s were also possible.\\n\\n## [2.3.9] - 2023-02-15\\n\\n### Fixed\\n\\n- Fixed autolink extension not detecting some URIs with underscores (#956)\\n\\n## [2.3.8] - 2022-12-10\\n\\n### Fixed\\n\\n- Fixed parsing issues when `mb_internal_encoding()` is set to something other than `UTF-8` (#951)\\n\\n## [2.3.7] - 2022-11-03\\n\\n### Fixed\\n\\n- Fixed `TaskListItemMarkerRenderer` not including HTML attributes set on the node by other extensions (#947)\\n\\n## [2.3.6] - 2022-10-30\\n\\n### Fixed\\n\\n- Fixed unquoted attribute parsing when closing curly brace is followed by certain characters (like a `.`) (#943)\\n\\n## [2.3.5] - 2022-07-29\\n\\n### Fixed\\n\\n- Fixed error using `InlineParserEngine` when no inline parsers are registered in the `Environment` (#908)\\n\\n## [2.3.4] - 2022-07-17\\n\\n### Changed\\n\\n- Made a number of small tweaks to the embed extension's parsing behavior to fix #898:\\n    - Changed `EmbedStartParser` to always capture embed-like lines in container blocks, regardless of parent block type\\n    - Changed `EmbedProcessor` to also remove `Embed` blocks that aren't direct children of the `Document`\\n    - Increased the priority of `EmbedProcessor` to `1010`\\n\\n### Fixed\\n\\n- Fixed `EmbedExtension` not parsing embeds following a list block (#898)\\n\\n## [2.3.3] - 2022-06-07\\n\\n### Fixed\\n\\n- Fixed `DomainFilteringAdapter` not reindexing the embed list (#884, #885)\\n\\n## [2.3.2] - 2022-06-03\\n\\n### Fixed\\n\\n- Fixed FootnoteExtension stripping extra characters from tab-indented footnotes (#881)\\n\\n## [2.2.5] - 2022-06-03\\n\\n### Fixed\\n\\n- Fixed FootnoteExtension stripping extra characters from tab-indented footnotes (#881)\\n\\n## [2.3.1] - 2022-05-14\\n\\n### Fixed\\n\\n- Fixed AutolinkExtension not ignoring trailing strikethrough syntax (#867)\\n\\n## [2.2.4] - 2022-05-14\\n\\n### Fixed\\n\\n- Fixed AutolinkExtension not ignoring trailing strikethrough syntax (#867)\\n\\n## [2.3.0] - 2022-04-07\\n\\n### Added\\n\\n- Added new `EmbedExtension` (#805)\\n- Added `DocumentRendererInterface` as a replacement for the now-deprecated `MarkdownRendererInterface`\\n\\n### Deprecated\\n\\n- Deprecated `MarkdownRendererInterface`; use `DocumentRendererInterface` instead\\n\\n## [2.2.3] - 2022-02-26\\n\\n### Fixed\\n\\n- Fixed front matter parsing with Windows line endings (#821)\\n\\n## [2.1.3] - 2022-02-26\\n\\n### Fixed\\n\\n- Fixed front matter parsing with Windows line endings (#821)\\n\\n## [2.0.4] - 2022-02-26\\n\\n### Fixed\\n\\n- Fixed front matter parsing with Windows line endings (#821)\\n\\n## [2.2.2] - 2022-02-13\\n\\n### Fixed\\n\\n- Fixed double-escaping of image alt text (#806, #810)\\n- Fixed Psalm typehints for event class names\\n\\n## [2.2.1] - 2022-01-25\\n\\n### Fixed\\n\\n - Fixed `symfony\/deprecation-contracts` constraint\\n\\n### Removed\\n\\n - Removed deprecation trigger from `MarkdownConverterInterface` to reduce noise\\n\\n## [2.2.0] - 2022-01-22\\n\\n### Added\\n\\n - Added new `ConverterInterface`\\n - Added new `MarkdownToXmlConverter` class\\n - Added new `HtmlDecorator` class which can wrap existing renderers with additional HTML tags\\n - Added new `table\/wrap` config to apply an optional wrapping\/container element around a table (#780)\\n\\n### Changed\\n\\n - `HtmlElement` contents can now consist of any `Stringable`, not just `HtmlElement` and `string`\\n\\n### Deprecated\\n\\n - Deprecated `MarkdownConverterInterface` and its `convertToHtml()` method; use `ConverterInterface` and `convert()` instead\\n\\n## [2.1.2] - 2022-02-13\\n\\n### Fixed\\n\\n- Fixed double-escaping of image alt text (#806, #810)\\n- Fixed Psalm typehints for event class names\\n\\n## [2.1.1] - 2022-01-02\\n\\n### Added\\n\\n - Added missing return type to `Environment::dispatch()` to fix deprecation warning (#778)\\n\\n## [2.1.0] - 2021-12-05\\n\\n### Added\\n\\n- Added support for ext-yaml in FrontMatterExtension (#715)\\n- Added support for symfony\/yaml v6.0 in FrontMatterExtension (#739)\\n- Added new `heading_permalink\/aria_hidden` config option (#741)\\n\\n### Fixed\\n\\n - Fixed PHP 8.1 deprecation warning (#759, #762)\\n\\n## [2.0.3] - 2022-02-13\\n\\n### Fixed\\n\\n- Fixed double-escaping of image alt text (#806, #810)\\n- Fixed Psalm typehints for event class names\\n\\n## [2.0.2] - 2021-08-14\\n\\n### Changed\\n\\n- Bumped minimum version of league\/config to support PHP 8.1\\n\\n### Fixed\\n\\n- Fixed ability to register block parsers that identify lines starting with letters (#706)\\n\\n## [2.0.1] - 2021-07-31\\n\\n### Fixed\\n\\n- Fixed nested autolinks (#689)\\n- Fixed description lists being parsed incorrectly (#692)\\n- Fixed Table of Contents not respecting Heading Permalink prefixes (#690)\\n\\n## [2.0.0] - 2021-07-24\\n\\nNo changes were introduced since the previous RC2 release.\\nSee all entries below for a list of changes between 1.x and 2.0.\\n\\n## [2.0.0-rc2] - 2021-07-17\\n\\n### Fixed\\n\\n- Fixed Mentions inside of links creating nested links against the spec's rules (#688)\\n\\n## [2.0.0-rc1] - 2021-07-10\\n\\nNo changes were introduced since the previous release.\\n\\n## [2.0.0-beta3] - 2021-07-03\\n\\n### Changed\\n\\n - Any leading UTF-8 BOM will be stripped from the input\\n - The `getEnvironment()` method of `CommonMarkConverter` and `GithubFlavoredMarkdownConverter` will always return the concrete, configurable `Environment` for upgrading convenience\\n - Optimized AST iteration\\n - Lots of small micro-optimizations\\n\\n## [2.0.0-beta2] - 2021-06-27\\n\\n### Added\\n\\n- Added new `Node::iterator()` method and `NodeIterator` class for faster AST iteration (#683, #684)\\n\\n### Changed\\n\\n- Made compatible with CommonMark spec 0.30.0\\n- Optimized link label parsing\\n- Optimized AST iteration for a 50% performance boost in some event listeners (#683, #684)\\n\\n### Fixed\\n\\n- Fixed processing instructions with EOLs\\n- Fixed case-insensitive matching for HTML tag types\\n- Fixed type 7 HTML blocks incorrectly interrupting lazy paragraphs\\n- Fixed newlines in reference labels not collapsing into spaces\\n- Fixed link label normalization with escaped newlines\\n- Fixed unnecessary AST iteration when no default attributes are configured\\n\\n## [2.0.0-beta1] - 2021-06-20\\n\\n### Added\\n\\n - **Added three new extensions:**\\n   - `FrontMatterExtension` ([see documentation](https:\/\/commonmark.thephpleague.com\/extensions\/front-matter\/))\\n   - `DescriptionListExtension` ([see documentation](https:\/\/commonmark.thephpleague.com\/extensions\/description-lists\/))\\n   - `DefaultAttributesExtension` ([see documentation](https:\/\/commonmark.thephpleague.com\/extensions\/default-attributes\/))\\n - **Added new `XmlRenderer` to simplify AST debugging** ([see documentation](https:\/\/commonmark.thephpleague.com\/xml\/)) (#431)\\n - **Added the ability to configure disallowed raw HTML tags** (#507)\\n - **Added the ability for Mentions to use multiple characters for their symbol** (#514, #550)\\n - **Added the ability to delegate event dispatching to PSR-14 compliant event dispatcher libraries**\\n - **Added new configuration options:**\\n   - Added `heading_permalink\/min_heading_level` and `heading_permalink\/max_heading_level` options to control which headings get permalinks (#519)\\n   - Added `heading_permalink\/fragment_prefix` to allow customizing the URL fragment prefix (#602)\\n   - Added `footnote\/backref_symbol` option for customizing backreference link appearance (#522)\\n   - Added `slug_normalizer\/max_length` option to control the maximum length of generated URL slugs\\n   - Added `slug_normalizer\/unique` option to control whether unique slugs should be generated per-document or per-environment\\n - **Added purity markers throughout the codebase** (verified with Psalm)\\n - Added `Query` class to simplify Node traversal when looking to take action on certain Nodes\\n - Added new `HtmlFilter` and `StringContainerHelper` utility classes\\n - Added new `AbstractBlockContinueParser` class to simplify the creation of custom block parsers\\n - Added several new classes and interfaces:\\n   - `BlockContinue`\\n   - `BlockContinueParserInterface`\\n   - `BlockContinueParserWithInlinesInterface`\\n   - `BlockStart`\\n   - `BlockStartParserInterface`\\n   - `ChildNodeRendererInterface`\\n   - `ConfigurableExtensionInterface`\\n   - `CursorState`\\n   - `DashParser` (extracted from `PunctuationParser`)\\n   - `DelimiterParser`\\n   - `DocumentBlockParser`\\n   - `DocumentPreRenderEvent`\\n   - `DocumentRenderedEvent`\\n   - `EllipsesParser` (extracted from `PunctuationParser`)\\n   - `ExpressionInterface`\\n   - `FallbackNodeXmlRenderer`\\n   - `InlineParserEngineInterface`\\n   - `InlineParserMatch`\\n   - `MarkdownParserState`\\n   - `MarkdownParserStateInterface`\\n   - `MarkdownRendererInterface`\\n   - `Query`\\n   - `RawMarkupContainerInterface`\\n   - `ReferenceableInterface`\\n   - `RenderedContent`\\n   - `RenderedContentInterface`\\n   - `ReplaceUnpairedQuotesListener`\\n   - `SpecReader`\\n   - `TableOfContentsRenderer`\\n   - `UniqueSlugNormalizer`\\n   - `UniqueSlugNormalizerInterface`\\n   - `XmlRenderer`\\n   - `XmlNodeRendererInterface`\\n - Added several new methods:\\n   - `Cursor::getCurrentCharacter()`\\n   - `Environment::createDefaultConfiguration()`\\n   - `Environment::setEventDispatcher()`\\n   - `EnvironmentInterface::getExtensions()`\\n   - `EnvironmentInterface::getInlineParsers()`\\n   - `EnvironmentInterface::getSlugNormalizer()`\\n   - `FencedCode::setInfo()`\\n   - `Heading::setLevel()`\\n   - `HtmlRenderer::renderDocument()`\\n   - `InlineParserContext::getFullMatch()`\\n   - `InlineParserContext::getFullMatchLength()`\\n   - `InlineParserContext::getMatches()`\\n   - `InlineParserContext::getSubMatches()`\\n   - `LinkParserHelper::parsePartialLinkLabel()`\\n   - `LinkParserHelper::parsePartialLinkTitle()`\\n   - `Node::assertInstanceOf()`\\n   - `RegexHelper::isLetter()`\\n   - `StringContainerInterface::setLiteral()`\\n   - `TableCell::getType()`\\n   - `TableCell::setType()`\\n   - `TableCell::getAlign()`\\n   - `TableCell::setAlign()`\\n\\n### Changed\\n\\n - **Changed the converter return type**\\n   - `CommonMarkConverter::convertToHtml()` now returns an instance of `RenderedContentInterface`. This can be cast to a string for backward compatibility with 1.x.\\n - **Table of Contents items are no longer wrapped with `<p>` tags** (#613)\\n - **Heading Permalinks now link to element IDs instead of using `name` attributes** (#602)\\n - **Heading Permalink IDs and URL fragments now have a `content` prefix by default** (#602)\\n - **Changes to configuration options:**\\n     - `enable_em` has been renamed to `commonmark\/enable_em`\\n     - `enable_strong` has been renamed to `commonmark\/enable_strong`\\n     - `use_asterisk` has been renamed to `commonmark\/use_asterisk`\\n     - `use_underscore` has been renamed to `commonmark\/use_underscore`\\n     - `unordered_list_markers` has been renamed to `commonmark\/unordered_list_markers`\\n     - `mentions\/*\/symbol` has been renamed to `mentions\/*\/prefix`\\n     - `mentions\/*\/regex` has been renamed to `mentions\/*\/pattern` and requires partial regular expressions (without delimiters or flags)\\n     - `max_nesting_level` now defaults to `PHP_INT_MAX` and no longer supports floats\\n     - `heading_permalink\/slug_normalizer` has been renamed to `slug_normalizer\/instance`\\n - **Event dispatching is now fully PSR-14 compliant**\\n - **Moved and renamed several classes** - [see the full list here](https:\/\/commonmark.thephpleague.com\/2.0\/upgrading\/#classesnamespaces-renamed)\\n - The `HeadingPermalinkExtension` and `FootnoteExtension` were modified to ensure they never produce a slug which conflicts with slugs created by the other extension\\n - `SlugNormalizer::normalizer()` now supports optional prefixes and max length options passed in via the `$context` argument\\n - The `AbstractBlock::$data` and `AbstractInline::$data` arrays were replaced with a `Data` array-like object on the base `Node` class\\n - **Implemented a new approach to block parsing.** This was a massive change, so here are the highlights:\\n   - Functionality previously found in block parsers and node elements has moved to block parser factories and block parsers, respectively ([more details](https:\/\/commonmark.thephpleague.com\/2.0\/upgrading\/#new-block-parsing-approach))\\n   - `ConfigurableEnvironmentInterface::addBlockParser()` is now `EnvironmentBuilderInterface::addBlockParserFactory()`\\n   - `ReferenceParser` was re-implemented and works completely different than before\\n   - The paragraph parser no longer needs to be added manually to the environment\\n - **Implemented a new approach to inline parsing** where parsers can now specify longer strings or regular expressions they want to parse (instead of just single characters):\\n   - `InlineParserInterface::getCharacters()` is now `getMatchDefinition()` and returns an instance of `InlineParserMatch`\\n   - `InlineParserContext::__construct()` now requires the contents to be provided as a `Cursor` instead of a `string`\\n - **Implemented delimiter parsing as a special type of inline parser** (via the new `DelimiterParser` class)\\n - **Changed block and inline rendering to use common methods and interfaces**\\n   - `BlockRendererInterface` and `InlineRendererInterface` were replaced by `NodeRendererInterface` with slightly different parameters. All core renderers now implement this interface.\\n   - `ConfigurableEnvironmentInterface::addBlockRenderer()` and `addInlineRenderer()` were combined into `EnvironmentBuilderInterface::addRenderer()`\\n   - `EnvironmentInterface::getBlockRenderersForClass()` and `getInlineRenderersForClass()` are now just `getRenderersForClass()`\\n - **Completely refactored the Configuration implementation**\\n   - All configuration-specific classes have been moved into a new `league\/config` package with a new namespace\\n   - `Configuration` objects must now be configured with a schema and all options must match that schema - arbitrary keys are no longer permitted\\n   - `Configuration::__construct()` no longer accepts the default configuration values - use `Configuration::merge()` instead\\n   - `ConfigurationInterface` now only contains a `get(string $key)`; this method no longer allows arbitrary default values to be returned if the option is missing\\n   - `ConfigurableEnvironmentInterface` was renamed to `EnvironmentBuilderInterface`\\n   - `ExtensionInterface::register()` now requires an `EnvironmentBuilderInterface` param instead of `ConfigurableEnvironmentInterface`\\n - **Added missing return types to virtually every class and interface method**\\n - Re-implemented the GFM Autolink extension using the new inline parser approach instead of document processors\\n   - `EmailAutolinkProcessor` is now `EmailAutolinkParser`\\n   - `UrlAutolinkProcessor` is now `UrlAutolinkParser`\\n - `HtmlElement` can now properly handle array (i.e. `class`) and boolean (i.e. `checked`) attribute values\\n - `HtmlElement` automatically flattens any attributes with array values into space-separated strings, removing duplicate entries\\n - Combined separate classes\/interfaces into one:\\n   - `DisallowedRawHtmlRenderer` replaces `DisallowedRawHtmlBlockRenderer` and `DisallowedRawHtmlInlineRenderer`\\n   - `NodeRendererInterface` replaces `BlockRendererInterface` and `InlineRendererInterface`\\n - Renamed the following methods:\\n   - `Environment` and `ConfigurableEnvironmentInterface`:\\n     - `addBlockParser()` is now `addBlockStartParser()`\\n   - `ReferenceMap` and `ReferenceMapInterface`:\\n     - `addReference()` is now `add()`\\n     - `getReference()` is now `get()`\\n     - `listReferences()` is now `getIterator()`\\n   - Various node (block\/inline) classes:\\n     - `getContent()` is now `getLiteral()`\\n     - `setContent()` is now `setLiteral()`\\n - Moved and renamed the following constants:\\n   - `EnvironmentInterface::HTML_INPUT_ALLOW` is now `HtmlFilter::ALLOW`\\n   - `EnvironmentInterface::HTML_INPUT_ESCAPE` is now `HtmlFilter::ESCAPE`\\n   - `EnvironmentInterface::HTML_INPUT_STRIP` is now `HtmlFilter::STRIP`\\n   - `TableCell::TYPE_HEAD` is now `TableCell::TYPE_HEADER`\\n   - `TableCell::TYPE_BODY` is now `TableCell::TYPE_DATA`\\n - Changed the visibility of the following properties:\\n   - `AttributesInline::$attributes` is now `private`\\n   - `AttributesInline::$block` is now `private`\\n   - `TableCell::$align` is now `private`\\n   - `TableCell::$type` is now `private`\\n   - `TableSection::$type` is now `private`\\n - Several methods which previously returned `$this` now return `void`\\n   - `Delimiter::setPrevious()`\\n   - `Node::replaceChildren()`\\n   - `Context::setTip()`\\n   - `Context::setContainer()`\\n   - `Context::setBlocksParsed()`\\n   - `AbstractStringContainer::setContent()`\\n   - `AbstractWebResource::setUrl()`\\n - Several classes are now marked `final`:\\n   - `ArrayCollection`\\n   - `Emphasis`\\n   - `FencedCode`\\n   - `Heading`\\n   - `HtmlBlock`\\n   - `HtmlElement`\\n   - `HtmlInline`\\n   - `IndentedCode`\\n   - `Newline`\\n   - `Strikethrough`\\n   - `Strong`\\n   - `Text`\\n - `Heading` nodes no longer directly contain a copy of their inner text\\n - `StringContainerInterface` can now be used for inlines, not just blocks\\n - `ArrayCollection` only supports integer keys\\n - `HtmlElement` now implements `Stringable`\\n - `Cursor::saveState()` and `Cursor::restoreState()` now use `CursorState` objects instead of arrays\\n - `NodeWalker::next()` now enters, traverses any children, and leaves all elements which may have children (basically all blocks plus any inlines with children). Previously, it only did this for elements explicitly marked as \\\"containers\\\".\\n - `InvalidOptionException` was removed\\n - Anything with a `getReference(): ReferenceInterface` method now implements `ReferencableInterface`\\n - The `SmartPunct` extension now replaces all unpaired `Quote` elements with `Text` elements towards the end of parsing, making the `QuoteRenderer` unnecessary\\n - Several changes made to the Footnote extension:\\n   - Footnote identifiers can no longer contain spaces\\n   - Anonymous footnotes can now span subsequent lines\\n   - Footnotes can now contain multiple lines of content, including sub-blocks, by indenting them\\n   - Footnote event listeners now have numbered priorities (but still execute in the same order)\\n   - Footnotes must now be separated from previous content by a blank line\\n - The line numbers (keys) returned via `MarkdownInput::getLines()` now start at 1 instead of 0\\n - `DelimiterProcessorCollectionInterface` now extends `Countable`\\n - `RegexHelper::PARTIAL_` constants must always be used in case-insensitive contexts\\n - `HeadingPermalinkProcessor` no longer accepts text normalizers via the constructor - these must be provided via configuration instead\\n - Blocks which can't contain inlines will no longer be asked to render inlines\\n - `AnonymousFootnoteRefParser` and `HeadingPermalinkProcessor` now implement `EnvironmentAwareInterface` instead of `ConfigurationAwareInterface`\\n - The second argument to `TextNormalizerInterface::normalize()` must now be an array\\n - The `title` attribute for `Link` and `Image` nodes is now stored using a dedicated property instead of stashing it in `$data`\\n - `ListData::$delimiter` now returns either `ListBlock::DELIM_PERIOD` or `ListBlock::DELIM_PAREN` instead of the literal delimiter\\n\\n### Fixed\\n\\n - **Fixed parsing of footnotes without content**\\n - **Fixed rendering of orphaned footnotes and footnote refs**\\n - **Fixed some URL autolinks breaking too early** (#492)\\n - Fixed `AbstractStringContainer` not actually being `abstract`\\n\\n### Removed\\n\\n - **Removed support for PHP 7.1, 7.2, and 7.3** (#625, #671)\\n - **Removed all previously-deprecated functionality:**\\n   - Removed the ability to pass custom `Environment` instances into the `CommonMarkConverter` and `GithubFlavoredMarkdownConverter` constructors\\n   - Removed the `Converter` class and `ConverterInterface`\\n   - Removed the `bin\/commonmark` script\\n   - Removed the `Html5Entities` utility class\\n   - Removed the `InlineMentionParser` (use `MentionParser` instead)\\n   - Removed `DefaultSlugGenerator` and `SlugGeneratorInterface` from the `Extension\/HeadingPermalink\/Slug` sub-namespace (use the new ones under `.\/SlugGenerator` instead)\\n   - Removed the following `ArrayCollection` methods:\\n     - `add()`\\n     - `set()`\\n     - `get()`\\n     - `remove()`\\n     - `isEmpty()`\\n     - `contains()`\\n     - `indexOf()`\\n     - `containsKey()`\\n     - `replaceWith()`\\n     - `removeGaps()`\\n   - Removed the `ConfigurableEnvironmentInterface::setConfig()` method\\n   - Removed the `ListBlock::TYPE_UNORDERED` constant\\n   - Removed the `CommonMarkConverter::VERSION` constant\\n   - Removed the `HeadingPermalinkRenderer::DEFAULT_INNER_CONTENTS` constant\\n   - Removed the `heading_permalink\/inner_contents` configuration option\\n - **Removed now-unused classes:**\\n   - `AbstractStringContainerBlock`\\n   - `BlockRendererInterface`\\n   - `Context`\\n   - `ContextInterface`\\n   - `Converter`\\n   - `ConverterInterface`\\n   - `InlineRendererInterface`\\n   - `PunctuationParser` (was split into two classes: `DashParser` and `EllipsesParser`)\\n   - `QuoteRenderer`\\n   - `UnmatchedBlockCloser`\\n - Removed the following methods, properties, and constants:\\n   - `AbstractBlock::$open`\\n   - `AbstractBlock::$lastLineBlank`\\n   - `AbstractBlock::isContainer()`\\n   - `AbstractBlock::canContain()`\\n   - `AbstractBlock::isCode()`\\n   - `AbstractBlock::matchesNextLine()`\\n   - `AbstractBlock::endsWithBlankLine()`\\n   - `AbstractBlock::setLastLineBlank()`\\n   - `AbstractBlock::shouldLastLineBeBlank()`\\n   - `AbstractBlock::isOpen()`\\n   - `AbstractBlock::finalize()`\\n   - `AbstractBlock::getData()`\\n   - `AbstractInline::getData()`\\n   - `ConfigurableEnvironmentInterface::addBlockParser()`\\n   - `ConfigurableEnvironmentInterface::mergeConfig()`\\n   - `Delimiter::setCanClose()`\\n   - `EnvironmentInterface::getConfig()`\\n   - `EnvironmentInterface::getInlineParsersForCharacter()`\\n   - `EnvironmentInterface::getInlineParserCharacterRegex()`\\n   - `HtmlRenderer::renderBlock()`\\n   - `HtmlRenderer::renderBlocks()`\\n   - `HtmlRenderer::renderInline()`\\n   - `HtmlRenderer::renderInlines()`\\n   - `Node::isContainer()`\\n   - `RegexHelper::matchAll()` (use the new `matchFirst()` method instead)\\n   - `RegexHelper::REGEX_WHITESPACE`\\n - Removed the second `$contents` argument from the `Heading` constructor\\n\\n### Deprecated\\n\\n**The following things have been deprecated and will not be supported in v3.0:**\\n\\n - `Environment::mergeConfig()` (set configuration before instantiation instead)\\n - `Environment::createCommonMarkEnvironment()` and `Environment::createGFMEnvironment()`\\n    - Alternative 1: Use `CommonMarkConverter` or `GithubFlavoredMarkdownConverter` if you don't need to customize the environment\\n    - Alternative 2: Instantiate a new `Environment` and add the necessary extensions yourself\\n\\n[unreleased]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.7.0...HEAD\\n[2.7.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.6.2...2.7.0\\n[2.6.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.6.1...2.6.2\\n[2.6.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.6.0...2.6.1\\n[2.6.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.5.3...2.6.0\\n[2.5.3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.5.2...2.5.3\\n[2.5.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.5.1...2.5.2\\n[2.5.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.5.0...2.5.1\\n[2.5.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.4.4...2.5.0\\n[2.4.4]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.4.3...2.4.4\\n[2.4.3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.4.2...2.4.3\\n[2.4.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.4.1...2.4.2\\n[2.4.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.4.0...2.4.1\\n[2.4.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.9...2.4.0\\n[2.3.9]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.8...2.3.9\\n[2.3.8]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.7...2.3.8\\n[2.3.7]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.6...2.3.7\\n[2.3.6]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.5...2.3.6\\n[2.3.5]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.4...2.3.5\\n[2.3.4]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.3...2.3.4\\n[2.3.3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.2...2.3.3\\n[2.3.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.2...main\\n[2.3.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.3.0...2.3.1\\n[2.3.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.2.3...2.3.0\\n[2.2.5]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.2.4...2.2.5\\n[2.2.4]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.2.3...2.2.4\\n[2.2.3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.2.2...2.2.3\\n[2.2.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.2.1...2.2.2\\n[2.2.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.2.0...2.2.1\\n[2.2.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.1.1...2.2.0\\n[2.1.3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.1.2...2.1.3\\n[2.1.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.1.1...2.1.2\\n[2.1.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.2...2.1.1\\n[2.1.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.2...2.1.0\\n[2.0.4]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.3...2.0.4\\n[2.0.3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.2...2.0.3\\n[2.0.2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.1...2.0.2\\n[2.0.1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.0...2.0.1\\n[2.0.0]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.0-rc2...2.0.0\\n[2.0.0-rc2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.0-rc1...2.0.0-rc2\\n[2.0.0-rc1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.0-beta3...2.0.0-rc1\\n[2.0.0-beta3]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.0-beta2...2.0.0-beta3\\n[2.0.0-beta2]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/2.0.0-beta1...2.0.0-beta2\\n[2.0.0-beta1]: https:\/\/github.com\/thephpleague\/commonmark\/compare\/1.6...2.0.0-beta1\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/MarkdownRendererInterface.php\",\"ext\":\"php\",\"size\":728,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\n\\n\/**\\n * Renders a parsed Document AST\\n *\\n * @deprecated since 2.3; use {@link DocumentRendererInterface} instead\\n *\/\\ninterface MarkdownRendererInterface\\n{\\n    \/**\\n     * Render the given Document node (and all of its children)\\n     *\/\\n    public function renderDocument(Document $document): RenderedContentInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/NodeRendererInterface.php\",\"ext\":\"php\",\"size\":662,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\ninterface NodeRendererInterface\\n{\\n    \/**\\n     * @return \\\\Stringable|string|null\\n     *\\n     * @throws InvalidArgumentException if the wrong type of Node is provided\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer);\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/HtmlRenderer.php\",\"ext\":\"php\",\"size\":2869,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentPreRenderEvent;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentRenderedEvent;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContent;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\n\\nfinal class HtmlRenderer implements DocumentRendererInterface, ChildNodeRendererInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private EnvironmentInterface $environment;\\n\\n    public function __construct(EnvironmentInterface $environment)\\n    {\\n        $this->environment = $environment;\\n    }\\n\\n    public function renderDocument(Document $document): RenderedContentInterface\\n    {\\n        $this->environment->dispatch(new DocumentPreRenderEvent($document, 'html'));\\n\\n        $output = new RenderedContent($document, (string) $this->renderNode($document));\\n\\n        $event = new DocumentRenderedEvent($output);\\n        $this->environment->dispatch($event);\\n\\n        return $event->getOutput();\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function renderNodes(iterable $nodes): string\\n    {\\n        $output = '';\\n\\n        $isFirstItem = true;\\n\\n        foreach ($nodes as $node) {\\n            if (! $isFirstItem && $node instanceof AbstractBlock) {\\n                $output .= $this->getBlockSeparator();\\n            }\\n\\n            $output .= $this->renderNode($node);\\n\\n            $isFirstItem = false;\\n        }\\n\\n        return $output;\\n    }\\n\\n    \/**\\n     * @return \\\\Stringable|string\\n     *\\n     * @throws NoMatchingRendererException\\n     *\/\\n    private function renderNode(Node $node)\\n    {\\n        $renderers = $this->environment->getRenderersForClass(\\\\get_class($node));\\n\\n        foreach ($renderers as $renderer) {\\n            \\\\assert($renderer instanceof NodeRendererInterface);\\n            if (($result = $renderer->render($node, $this)) !== null) {\\n                return $result;\\n            }\\n        }\\n\\n        throw new NoMatchingRendererException('Unable to find corresponding renderer for node type ' . \\\\get_class($node));\\n    }\\n\\n    public function getBlockSeparator(): string\\n    {\\n        return $this->environment->getConfiguration()->get('renderer\/block_separator');\\n    }\\n\\n    public function getInnerSeparator(): string\\n    {\\n        return $this->environment->getConfiguration()->get('renderer\/inner_separator');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/ChildNodeRendererInterface.php\",\"ext\":\"php\",\"size\":701,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\n\/**\\n * Renders multiple nodes by delegating to the individual node renderers and adding spacing where needed\\n *\/\\ninterface ChildNodeRendererInterface\\n{\\n    \/**\\n     * @param Node[] $nodes\\n     *\/\\n    public function renderNodes(iterable $nodes): string;\\n\\n    public function getBlockSeparator(): string;\\n\\n    public function getInnerSeparator(): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/Block\/ParagraphRenderer.php\",\"ext\":\"php\",\"size\":1978,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\TightBlockInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class ParagraphRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Paragraph $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer)\\n    {\\n        Paragraph::assertInstanceOf($node);\\n\\n        if ($this->inTightList($node)) {\\n            return $childRenderer->renderNodes($node->children());\\n        }\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement('p', $attrs, $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'paragraph';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n\\n    private function inTightList(Paragraph $node): bool\\n    {\\n        \/\/ Only check up to two (2) levels above this for tightness\\n        $i = 2;\\n        while (($node = $node->parent()) && $i--) {\\n            if ($node instanceof TightBlockInterface) {\\n                return $node->isTight();\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/Block\/DocumentRenderer.php\",\"ext\":\"php\",\"size\":1467,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class DocumentRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Document $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        Document::assertInstanceOf($node);\\n\\n        $wholeDoc = $childRenderer->renderNodes($node->children());\\n\\n        return $wholeDoc === '' ? '' : $wholeDoc . \\\"\\\\n\\\";\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'document';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [\\n            'xmlns' => 'http:\/\/commonmark.org\/xml\/1.0',\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/Inline\/TextRenderer.php\",\"ext\":\"php\",\"size\":1339,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\Xml;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TextRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Text $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        Text::assertInstanceOf($node);\\n\\n        return Xml::escape($node->getLiteral());\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'text';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/Inline\/NewlineRenderer.php\",\"ext\":\"php\",\"size\":2012,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class NewlineRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    \/**\\n     * @param Newline $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        Newline::assertInstanceOf($node);\\n\\n        if ($node->getType() === Newline::HARDBREAK) {\\n            return \\\"<br \/>\\\\n\\\";\\n        }\\n\\n        return $this->config->get('renderer\/soft_break');\\n    }\\n\\n    \/**\\n     * @param Newline $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlTagName(Node $node): string\\n    {\\n        Newline::assertInstanceOf($node);\\n\\n        return $node->getType() === Newline::SOFTBREAK ? 'softbreak' : 'linebreak';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/NoMatchingRendererException.php\",\"ext\":\"php\",\"size\":421,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\LogicException;\\n\\nclass NoMatchingRendererException extends LogicException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/HtmlDecorator.php\",\"ext\":\"php\",\"size\":1263,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\n\\nfinal class HtmlDecorator implements NodeRendererInterface\\n{\\n    private NodeRendererInterface $inner;\\n    private string $tag;\\n    \/** @var array<string, string|string[]|bool> *\/\\n    private array $attributes;\\n    private bool $selfClosing;\\n\\n    \/**\\n     * @param array<string, string|string[]|bool> $attributes\\n     *\/\\n    public function __construct(NodeRendererInterface $inner, string $tag, array $attributes = [], bool $selfClosing = false)\\n    {\\n        $this->inner       = $inner;\\n        $this->tag         = $tag;\\n        $this->attributes  = $attributes;\\n        $this->selfClosing = $selfClosing;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer)\\n    {\\n        return new HtmlElement($this->tag, $this->attributes, $this->inner->render($node, $childRenderer), $this->selfClosing);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Renderer\/DocumentRendererInterface.php\",\"ext\":\"php\",\"size\":687,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\n\\n\/**\\n * Renders a parsed Document AST\\n *\/\\ninterface DocumentRendererInterface extends MarkdownRendererInterface\\n{\\n    \/**\\n     * Render the given Document node (and all of its children)\\n     *\/\\n    public function renderDocument(Document $document): RenderedContentInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Xml\/XmlNodeRendererInterface.php\",\"ext\":\"php\",\"size\":610,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Xml;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\ninterface XmlNodeRendererInterface\\n{\\n    public function getXmlTagName(Node $node): string;\\n\\n    \/**\\n     * @return array<string, string|int|float|bool>\\n     *\\n     * @psalm-return array<string, scalar>\\n     *\/\\n    public function getXmlAttributes(Node $node): array;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Xml\/FallbackNodeXmlRenderer.php\",\"ext\":\"php\",\"size\":2222,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Xml;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\n\/**\\n * @internal\\n *\/\\nfinal class FallbackNodeXmlRenderer implements XmlNodeRendererInterface\\n{\\n    \/**\\n     * @var array<string, string>\\n     *\\n     * @psalm-allow-private-mutation\\n     *\/\\n    private array $classCache = [];\\n\\n    \/**\\n     * @psalm-allow-private-mutation\\n     *\/\\n    public function getXmlTagName(Node $node): string\\n    {\\n        $className = \\\\get_class($node);\\n        if (isset($this->classCache[$className])) {\\n            return $this->classCache[$className];\\n        }\\n\\n        $type      = $node instanceof AbstractBlock ? 'block' : 'inline';\\n        $shortName = \\\\strtolower((new \\\\ReflectionClass($node))->getShortName());\\n\\n        return $this->classCache[$className] = \\\\sprintf('custom_%s_%s', $type, $shortName);\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        $attrs = [];\\n        foreach ($node->data->export() as $k => $v) {\\n            if (self::isValueUsable($v)) {\\n                $attrs[$k] = $v;\\n            }\\n        }\\n\\n        $reflClass = new \\\\ReflectionClass($node);\\n        foreach ($reflClass->getProperties() as $property) {\\n            if (\\\\in_array($property->getDeclaringClass()->getName(), [Node::class, AbstractBlock::class, AbstractInline::class], true)) {\\n                continue;\\n            }\\n\\n            $property->setAccessible(true);\\n            $value = $property->getValue($node);\\n            if (self::isValueUsable($value)) {\\n                $attrs[$property->getName()] = $value;\\n            }\\n        }\\n\\n        return $attrs;\\n    }\\n\\n    \/**\\n     * @param mixed $var\\n     *\\n     * @psalm-pure\\n     *\/\\n    private static function isValueUsable($var): bool\\n    {\\n        return \\\\is_string($var) || \\\\is_int($var) || \\\\is_float($var) || \\\\is_bool($var);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Xml\/MarkdownToXmlConverter.php\",\"ext\":\"php\",\"size\":1604,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Xml;\\n\\nuse League\\\\CommonMark\\\\ConverterInterface;\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParser;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\DocumentRendererInterface;\\n\\nfinal class MarkdownToXmlConverter implements ConverterInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private MarkdownParserInterface $parser;\\n\\n    \/** @psalm-readonly *\/\\n    private DocumentRendererInterface $renderer;\\n\\n    public function __construct(EnvironmentInterface $environment)\\n    {\\n        $this->parser   = new MarkdownParser($environment);\\n        $this->renderer = new XmlRenderer($environment);\\n    }\\n\\n    \/**\\n     * Converts Markdown to XML\\n     *\\n     * @throws CommonMarkException\\n     *\/\\n    public function convert(string $input): RenderedContentInterface\\n    {\\n        return $this->renderer->renderDocument($this->parser->parse($input));\\n    }\\n\\n    \/**\\n     * Converts CommonMark to HTML.\\n     *\\n     * @see MarkdownToXmlConverter::convert()\\n     *\\n     * @throws CommonMarkException\\n     *\/\\n    public function __invoke(string $input): RenderedContentInterface\\n    {\\n        return $this->convert($input);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Xml\/XmlRenderer.php\",\"ext\":\"php\",\"size\":4166,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Xml;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentPreRenderEvent;\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerInterface;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContent;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\DocumentRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\Xml;\\n\\nfinal class XmlRenderer implements DocumentRendererInterface\\n{\\n    private const INDENTATION = '    ';\\n\\n    private EnvironmentInterface $environment;\\n\\n    private XmlNodeRendererInterface $fallbackRenderer;\\n\\n    \/** @var array<class-string, XmlNodeRendererInterface> *\/\\n    private array $rendererCache = [];\\n\\n    public function __construct(EnvironmentInterface $environment)\\n    {\\n        $this->environment      = $environment;\\n        $this->fallbackRenderer = new FallbackNodeXmlRenderer();\\n    }\\n\\n    public function renderDocument(Document $document): RenderedContentInterface\\n    {\\n        $this->environment->dispatch(new DocumentPreRenderEvent($document, 'xml'));\\n\\n        $xml = '<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>';\\n\\n        $indent = 0;\\n        $walker = $document->walker();\\n        while ($event = $walker->next()) {\\n            $node = $event->getNode();\\n\\n            $closeImmediately = ! $node->hasChildren();\\n            $selfClosing      = $closeImmediately && ! $node instanceof StringContainerInterface;\\n\\n            $renderer = $this->findXmlRenderer($node);\\n            $tagName  = $renderer->getXmlTagName($node);\\n\\n            if ($event->isEntering()) {\\n                $attrs = $renderer->getXmlAttributes($node);\\n\\n                $xml .= \\\"\\\\n\\\" . \\\\str_repeat(self::INDENTATION, $indent);\\n                $xml .= self::tag($tagName, $attrs, $selfClosing);\\n\\n                if ($node instanceof StringContainerInterface) {\\n                    $xml .= Xml::escape($node->getLiteral());\\n                }\\n\\n                if ($closeImmediately && ! $selfClosing) {\\n                    $xml .= self::tag('\/' . $tagName);\\n                }\\n\\n                if (! $closeImmediately) {\\n                    $indent++;\\n                }\\n            } elseif (! $closeImmediately) {\\n                $indent--;\\n                $xml .= \\\"\\\\n\\\" . \\\\str_repeat(self::INDENTATION, $indent);\\n                $xml .= self::tag('\/' . $tagName);\\n            }\\n        }\\n\\n        return new RenderedContent($document, $xml . \\\"\\\\n\\\");\\n    }\\n\\n    \/**\\n     * @param array<string, string|int|float|bool> $attrs\\n     *\/\\n    private static function tag(string $name, array $attrs = [], bool $selfClosing = \\\\false): string\\n    {\\n        $result = '<' . $name;\\n        foreach ($attrs as $key => $value) {\\n            $result .= \\\\sprintf(' %s=\\\"%s\\\"', $key, self::convertAndEscape($value));\\n        }\\n\\n        if ($selfClosing) {\\n            $result .= ' \/';\\n        }\\n\\n        $result .= '>';\\n\\n        return $result;\\n    }\\n\\n    \/**\\n     * @param string|int|float|bool $value\\n     *\/\\n    private static function convertAndEscape($value): string\\n    {\\n        if (\\\\is_string($value)) {\\n            return Xml::escape($value);\\n        }\\n\\n        if (\\\\is_int($value) || \\\\is_float($value)) {\\n            return (string) $value;\\n        }\\n\\n        if (\\\\is_bool($value)) {\\n            return $value ? 'true' : 'false';\\n        }\\n\\n        \/\/ @phpstan-ignore-next-line\\n        throw new InvalidArgumentException('$value must be a string, int, float, or bool');\\n    }\\n\\n    private function findXmlRenderer(Node $node): XmlNodeRendererInterface\\n    {\\n        $class = \\\\get_class($node);\\n\\n        if (\\\\array_key_exists($class, $this->rendererCache)) {\\n            return $this->rendererCache[$class];\\n        }\\n\\n        foreach ($this->environment->getRenderersForClass($class) as $renderer) {\\n            if ($renderer instanceof XmlNodeRendererInterface) {\\n                return $this->rendererCache[$class] = $renderer;\\n            }\\n        }\\n\\n        return $this->rendererCache[$class] = $this->fallbackRenderer;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Input\/MarkdownInputInterface.php\",\"ext\":\"php\",\"size\":525,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Input;\\n\\ninterface MarkdownInputInterface\\n{\\n    public function getContent(): string;\\n\\n    \/**\\n     * @return iterable<int, string>\\n     *\/\\n    public function getLines(): iterable;\\n\\n    public function getLineCount(): int;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Input\/MarkdownInput.php\",\"ext\":\"php\",\"size\":2574,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Input;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\UnexpectedEncodingException;\\n\\nclass MarkdownInput implements MarkdownInputInterface\\n{\\n    \/**\\n     * @var array<int, string>|null\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private ?array $lines = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private string $content;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?int $lineCount = null;\\n\\n    \/** @psalm-readonly *\/\\n    private int $lineOffset;\\n\\n    public function __construct(string $content, int $lineOffset = 0)\\n    {\\n        if (! \\\\mb_check_encoding($content, 'UTF-8')) {\\n            throw new UnexpectedEncodingException('Unexpected encoding - UTF-8 or ASCII was expected');\\n        }\\n\\n        \/\/ Strip any leading UTF-8 BOM\\n        if (\\\\substr($content, 0, 3) === \\\"\\\\xEF\\\\xBB\\\\xBF\\\") {\\n            $content = \\\\substr($content, 3);\\n        }\\n\\n        $this->content    = $content;\\n        $this->lineOffset = $lineOffset;\\n    }\\n\\n    public function getContent(): string\\n    {\\n        return $this->content;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getLines(): iterable\\n    {\\n        $this->splitLinesIfNeeded();\\n\\n        \\\\assert($this->lines !== null);\\n\\n        \/** @psalm-suppress PossiblyNullIterator *\/\\n        foreach ($this->lines as $i => $line) {\\n            yield $this->lineOffset + $i + 1 => $line;\\n        }\\n    }\\n\\n    public function getLineCount(): int\\n    {\\n        $this->splitLinesIfNeeded();\\n\\n        \\\\assert($this->lineCount !== null);\\n\\n        return $this->lineCount;\\n    }\\n\\n    private function splitLinesIfNeeded(): void\\n    {\\n        if ($this->lines !== null) {\\n            return;\\n        }\\n\\n        $lines = \\\\preg_split('\/\\\\r\\\\n|\\\\n|\\\\r\/', $this->content);\\n        if ($lines === false) {\\n            throw new UnexpectedEncodingException('Failed to split Markdown content by line');\\n        }\\n\\n        $this->lines = $lines;\\n\\n        \/\/ Remove any newline which appears at the very end of the string.\\n        \/\/ We've already split the document by newlines, so we can simply drop\\n        \/\/ any empty element which appears on the end.\\n        if (\\\\end($this->lines) === '') {\\n            \\\\array_pop($this->lines);\\n        }\\n\\n        $this->lineCount = \\\\count($this->lines);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Event\/DocumentRenderedEvent.php\",\"ext\":\"php\",\"size\":900,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\n\\nfinal class DocumentRenderedEvent extends AbstractEvent\\n{\\n    private RenderedContentInterface $output;\\n\\n    public function __construct(RenderedContentInterface $output)\\n    {\\n        $this->output = $output;\\n    }\\n\\n    \/**\\n     * @psalm-mutation-free\\n     *\/\\n    public function getOutput(): RenderedContentInterface\\n    {\\n        return $this->output;\\n    }\\n\\n    \/**\\n     * @psalm-external-mutation-free\\n     *\/\\n    public function replaceOutput(RenderedContentInterface $output): void\\n    {\\n        $this->output = $output;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Event\/DocumentParsedEvent.php\",\"ext\":\"php\",\"size\":728,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\n\/**\\n * Event dispatched when the document has been fully parsed\\n *\/\\nfinal class DocumentParsedEvent extends AbstractEvent\\n{\\n    \/** @psalm-readonly *\/\\n    private Document $document;\\n\\n    public function __construct(Document $document)\\n    {\\n        $this->document = $document;\\n    }\\n\\n    public function getDocument(): Document\\n    {\\n        return $this->document;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Event\/DocumentPreParsedEvent.php\",\"ext\":\"php\",\"size\":1140,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Input\\\\MarkdownInputInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\n\/**\\n * Event dispatched when the document is about to be parsed\\n *\/\\nfinal class DocumentPreParsedEvent extends AbstractEvent\\n{\\n    \/** @psalm-readonly *\/\\n    private Document $document;\\n\\n    private MarkdownInputInterface $markdown;\\n\\n    public function __construct(Document $document, MarkdownInputInterface $markdown)\\n    {\\n        $this->document = $document;\\n        $this->markdown = $markdown;\\n    }\\n\\n    public function getDocument(): Document\\n    {\\n        return $this->document;\\n    }\\n\\n    public function getMarkdown(): MarkdownInputInterface\\n    {\\n        return $this->markdown;\\n    }\\n\\n    public function replaceMarkdown(MarkdownInputInterface $markdownInput): void\\n    {\\n        $this->markdown = $markdownInput;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Event\/ListenerData.php\",\"ext\":\"php\",\"size\":901,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Event;\\n\\n\/**\\n * @internal\\n *\\n * @psalm-immutable\\n *\/\\nfinal class ListenerData\\n{\\n    \/** @var class-string *\/\\n    private string $event;\\n\\n    \/** @var callable *\/\\n    private $listener;\\n\\n    \/**\\n     * @param class-string $event\\n     *\/\\n    public function __construct(string $event, callable $listener)\\n    {\\n        $this->event    = $event;\\n        $this->listener = $listener;\\n    }\\n\\n    \/**\\n     * @return class-string\\n     *\/\\n    public function getEvent(): string\\n    {\\n        return $this->event;\\n    }\\n\\n    public function getListener(): callable\\n    {\\n        return $this->listener;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Event\/DocumentPreRenderEvent.php\",\"ext\":\"php\",\"size\":910,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\n\/**\\n * Event dispatched just before rendering begins\\n *\/\\nfinal class DocumentPreRenderEvent extends AbstractEvent\\n{\\n    \/** @psalm-readonly *\/\\n    private Document $document;\\n\\n    \/** @psalm-readonly *\/\\n    private string $format;\\n\\n    public function __construct(Document $document, string $format)\\n    {\\n        $this->document = $document;\\n        $this->format   = $format;\\n    }\\n\\n    public function getDocument(): Document\\n    {\\n        return $this->document;\\n    }\\n\\n    public function getFormat(): string\\n    {\\n        return $this->format;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Event\/AbstractEvent.php\",\"ext\":\"php\",\"size\":1514,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the Symfony EventDispatcher \\\"Event\\\" contract\\n *  - (c) 2018-2019 Fabien Potencier\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Event;\\n\\nuse Psr\\\\EventDispatcher\\\\StoppableEventInterface;\\n\\n\/**\\n * Base class for classes containing event data.\\n *\\n * This class contains no event data. It is used by events that do not pass\\n * state information to an event handler when an event is raised.\\n *\\n * You can call the method stopPropagation() to abort the execution of\\n * further listeners in your event listener.\\n *\/\\nabstract class AbstractEvent implements StoppableEventInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $propagationStopped = false;\\n\\n    \/**\\n     * Returns whether further event listeners should be triggered.\\n     *\/\\n    final public function isPropagationStopped(): bool\\n    {\\n        return $this->propagationStopped;\\n    }\\n\\n    \/**\\n     * Stops the propagation of the event to further event listeners.\\n     *\\n     * If multiple event listeners are connected to the same event, no\\n     * further event listener will be triggered once any trigger calls\\n     * stopPropagation().\\n     *\/\\n    final public function stopPropagation(): void\\n    {\\n        $this->propagationStopped = true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Environment\/Environment.php\",\"ext\":\"php\",\"size\":15149,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Environment;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterParser;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorCollection;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Event\\\\ListenerData;\\nuse League\\\\CommonMark\\\\Exception\\\\AlreadyInitializedException;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\CommonMarkCoreExtension;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\GithubFlavoredMarkdownExtension;\\nuse League\\\\CommonMark\\\\Normalizer\\\\SlugNormalizer;\\nuse League\\\\CommonMark\\\\Normalizer\\\\TextNormalizerInterface;\\nuse League\\\\CommonMark\\\\Normalizer\\\\UniqueSlugNormalizer;\\nuse League\\\\CommonMark\\\\Normalizer\\\\UniqueSlugNormalizerInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\SkipLinesStartingWithLettersParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlFilter;\\nuse League\\\\CommonMark\\\\Util\\\\PrioritizedList;\\nuse League\\\\Config\\\\Configuration;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\nuse Nette\\\\Schema\\\\Expect;\\nuse Psr\\\\EventDispatcher\\\\EventDispatcherInterface;\\nuse Psr\\\\EventDispatcher\\\\ListenerProviderInterface;\\nuse Psr\\\\EventDispatcher\\\\StoppableEventInterface;\\n\\nfinal class Environment implements EnvironmentInterface, EnvironmentBuilderInterface, ListenerProviderInterface\\n{\\n    \/**\\n     * @var ExtensionInterface[]\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $extensions = [];\\n\\n    \/**\\n     * @var ExtensionInterface[]\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $uninitializedExtensions = [];\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $extensionsInitialized = false;\\n\\n    \/**\\n     * @var PrioritizedList<BlockStartParserInterface>\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private PrioritizedList $blockStartParsers;\\n\\n    \/**\\n     * @var PrioritizedList<InlineParserInterface>\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private PrioritizedList $inlineParsers;\\n\\n    \/** @psalm-readonly *\/\\n    private DelimiterProcessorCollection $delimiterProcessors;\\n\\n    \/**\\n     * @var array<string, PrioritizedList<NodeRendererInterface>>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $renderersByClass = [];\\n\\n    \/**\\n     * @var PrioritizedList<ListenerData>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private PrioritizedList $listenerData;\\n\\n    private ?EventDispatcherInterface $eventDispatcher = null;\\n\\n    \/** @psalm-readonly *\/\\n    private Configuration $config;\\n\\n    private ?TextNormalizerInterface $slugNormalizer = null;\\n\\n    \/**\\n     * @param array<string, mixed> $config\\n     *\/\\n    public function __construct(array $config = [])\\n    {\\n        $this->config = self::createDefaultConfiguration();\\n        $this->config->merge($config);\\n\\n        $this->blockStartParsers   = new PrioritizedList();\\n        $this->inlineParsers       = new PrioritizedList();\\n        $this->listenerData        = new PrioritizedList();\\n        $this->delimiterProcessors = new DelimiterProcessorCollection();\\n\\n        \/\/ Performance optimization: always include a block \\\"parser\\\" that aborts parsing if a line starts with a letter\\n        \/\/ and is therefore unlikely to match any lines as a block start.\\n        $this->addBlockStartParser(new SkipLinesStartingWithLettersParser(), 249);\\n    }\\n\\n    public function getConfiguration(): ConfigurationInterface\\n    {\\n        return $this->config->reader();\\n    }\\n\\n    \/**\\n     * @deprecated Environment::mergeConfig() is deprecated since league\/commonmark v2.0 and will be removed in v3.0. Configuration should be set when instantiating the environment instead.\\n     *\\n     * @param array<string, mixed> $config\\n     *\/\\n    public function mergeConfig(array $config): void\\n    {\\n        @\\\\trigger_error('Environment::mergeConfig() is deprecated since league\/commonmark v2.0 and will be removed in v3.0. Configuration should be set when instantiating the environment instead.', \\\\E_USER_DEPRECATED);\\n\\n        $this->assertUninitialized('Failed to modify configuration.');\\n\\n        $this->config->merge($config);\\n    }\\n\\n    public function addBlockStartParser(BlockStartParserInterface $parser, int $priority = 0): EnvironmentBuilderInterface\\n    {\\n        $this->assertUninitialized('Failed to add block start parser.');\\n\\n        $this->blockStartParsers->add($parser, $priority);\\n        $this->injectEnvironmentAndConfigurationIfNeeded($parser);\\n\\n        return $this;\\n    }\\n\\n    public function addInlineParser(InlineParserInterface $parser, int $priority = 0): EnvironmentBuilderInterface\\n    {\\n        $this->assertUninitialized('Failed to add inline parser.');\\n\\n        $this->inlineParsers->add($parser, $priority);\\n        $this->injectEnvironmentAndConfigurationIfNeeded($parser);\\n\\n        return $this;\\n    }\\n\\n    public function addDelimiterProcessor(DelimiterProcessorInterface $processor): EnvironmentBuilderInterface\\n    {\\n        $this->assertUninitialized('Failed to add delimiter processor.');\\n        $this->delimiterProcessors->add($processor);\\n        $this->injectEnvironmentAndConfigurationIfNeeded($processor);\\n\\n        return $this;\\n    }\\n\\n    public function addRenderer(string $nodeClass, NodeRendererInterface $renderer, int $priority = 0): EnvironmentBuilderInterface\\n    {\\n        $this->assertUninitialized('Failed to add renderer.');\\n\\n        if (! isset($this->renderersByClass[$nodeClass])) {\\n            $this->renderersByClass[$nodeClass] = new PrioritizedList();\\n        }\\n\\n        $this->renderersByClass[$nodeClass]->add($renderer, $priority);\\n        $this->injectEnvironmentAndConfigurationIfNeeded($renderer);\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getBlockStartParsers(): iterable\\n    {\\n        if (! $this->extensionsInitialized) {\\n            $this->initializeExtensions();\\n        }\\n\\n        return $this->blockStartParsers->getIterator();\\n    }\\n\\n    public function getDelimiterProcessors(): DelimiterProcessorCollection\\n    {\\n        if (! $this->extensionsInitialized) {\\n            $this->initializeExtensions();\\n        }\\n\\n        return $this->delimiterProcessors;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getRenderersForClass(string $nodeClass): iterable\\n    {\\n        if (! $this->extensionsInitialized) {\\n            $this->initializeExtensions();\\n        }\\n\\n        \/\/ If renderers are defined for this specific class, return them immediately\\n        if (isset($this->renderersByClass[$nodeClass])) {\\n            return $this->renderersByClass[$nodeClass];\\n        }\\n\\n        \/** @psalm-suppress TypeDoesNotContainType -- Bug: https:\/\/github.com\/vimeo\/psalm\/issues\/3332 *\/\\n        while (\\\\class_exists($parent ??= $nodeClass) && $parent = \\\\get_parent_class($parent)) {\\n            if (! isset($this->renderersByClass[$parent])) {\\n                continue;\\n            }\\n\\n            \/\/ \\\"Cache\\\" this result to avoid future loops\\n            return $this->renderersByClass[$nodeClass] = $this->renderersByClass[$parent];\\n        }\\n\\n        return [];\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getExtensions(): iterable\\n    {\\n        return $this->extensions;\\n    }\\n\\n    \/**\\n     * Add a single extension\\n     *\\n     * @return $this\\n     *\/\\n    public function addExtension(ExtensionInterface $extension): EnvironmentBuilderInterface\\n    {\\n        $this->assertUninitialized('Failed to add extension.');\\n\\n        $this->extensions[]              = $extension;\\n        $this->uninitializedExtensions[] = $extension;\\n\\n        if ($extension instanceof ConfigurableExtensionInterface) {\\n            $extension->configureSchema($this->config);\\n        }\\n\\n        return $this;\\n    }\\n\\n    private function initializeExtensions(): void\\n    {\\n        \/\/ Initialize the slug normalizer\\n        $this->getSlugNormalizer();\\n\\n        \/\/ Ask all extensions to register their components\\n        while (\\\\count($this->uninitializedExtensions) > 0) {\\n            foreach ($this->uninitializedExtensions as $i => $extension) {\\n                $extension->register($this);\\n                unset($this->uninitializedExtensions[$i]);\\n            }\\n        }\\n\\n        $this->extensionsInitialized = true;\\n\\n        \/\/ Create the special delimiter parser if any processors were registered\\n        if ($this->delimiterProcessors->count() > 0) {\\n            $this->inlineParsers->add(new DelimiterParser($this->delimiterProcessors), PHP_INT_MIN);\\n        }\\n    }\\n\\n    private function injectEnvironmentAndConfigurationIfNeeded(object $object): void\\n    {\\n        if ($object instanceof EnvironmentAwareInterface) {\\n            $object->setEnvironment($this);\\n        }\\n\\n        if ($object instanceof ConfigurationAwareInterface) {\\n            $object->setConfiguration($this->config->reader());\\n        }\\n    }\\n\\n    \/**\\n     * @deprecated Instantiate the environment and add the extension yourself\\n     *\\n     * @param array<string, mixed> $config\\n     *\/\\n    public static function createCommonMarkEnvironment(array $config = []): Environment\\n    {\\n        $environment = new self($config);\\n        $environment->addExtension(new CommonMarkCoreExtension());\\n\\n        return $environment;\\n    }\\n\\n    \/**\\n     * @deprecated Instantiate the environment and add the extension yourself\\n     *\\n     * @param array<string, mixed> $config\\n     *\/\\n    public static function createGFMEnvironment(array $config = []): Environment\\n    {\\n        $environment = new self($config);\\n        $environment->addExtension(new CommonMarkCoreExtension());\\n        $environment->addExtension(new GithubFlavoredMarkdownExtension());\\n\\n        return $environment;\\n    }\\n\\n    public function addEventListener(string $eventClass, callable $listener, int $priority = 0): EnvironmentBuilderInterface\\n    {\\n        $this->assertUninitialized('Failed to add event listener.');\\n\\n        $this->listenerData->add(new ListenerData($eventClass, $listener), $priority);\\n\\n        if (\\\\is_object($listener)) {\\n            $this->injectEnvironmentAndConfigurationIfNeeded($listener);\\n        } elseif (\\\\is_array($listener) && \\\\is_object($listener[0])) {\\n            $this->injectEnvironmentAndConfigurationIfNeeded($listener[0]);\\n        }\\n\\n        return $this;\\n    }\\n\\n    public function dispatch(object $event): object\\n    {\\n        if (! $this->extensionsInitialized) {\\n            $this->initializeExtensions();\\n        }\\n\\n        if ($this->eventDispatcher !== null) {\\n            return $this->eventDispatcher->dispatch($event);\\n        }\\n\\n        foreach ($this->getListenersForEvent($event) as $listener) {\\n            if ($event instanceof StoppableEventInterface && $event->isPropagationStopped()) {\\n                return $event;\\n            }\\n\\n            $listener($event);\\n        }\\n\\n        return $event;\\n    }\\n\\n    public function setEventDispatcher(EventDispatcherInterface $dispatcher): void\\n    {\\n        $this->eventDispatcher = $dispatcher;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\\n     * @return iterable<callable>\\n     *\/\\n    public function getListenersForEvent(object $event): iterable\\n    {\\n        foreach ($this->listenerData as $listenerData) {\\n            \\\\assert($listenerData instanceof ListenerData);\\n\\n            \/** @psalm-suppress ArgumentTypeCoercion *\/\\n            if (! \\\\is_a($event, $listenerData->getEvent())) {\\n                continue;\\n            }\\n\\n            yield function (object $event) use ($listenerData) {\\n                if (! $this->extensionsInitialized) {\\n                    $this->initializeExtensions();\\n                }\\n\\n                return \\\\call_user_func($listenerData->getListener(), $event);\\n            };\\n        }\\n    }\\n\\n    \/**\\n     * @return iterable<InlineParserInterface>\\n     *\/\\n    public function getInlineParsers(): iterable\\n    {\\n        if (! $this->extensionsInitialized) {\\n            $this->initializeExtensions();\\n        }\\n\\n        return $this->inlineParsers->getIterator();\\n    }\\n\\n    public function getSlugNormalizer(): TextNormalizerInterface\\n    {\\n        if ($this->slugNormalizer === null) {\\n            $normalizer = $this->config->get('slug_normalizer\/instance');\\n            \\\\assert($normalizer instanceof TextNormalizerInterface);\\n            $this->injectEnvironmentAndConfigurationIfNeeded($normalizer);\\n\\n            if ($this->config->get('slug_normalizer\/unique') !== UniqueSlugNormalizerInterface::DISABLED && ! $normalizer instanceof UniqueSlugNormalizer) {\\n                $normalizer = new UniqueSlugNormalizer($normalizer);\\n            }\\n\\n            if ($normalizer instanceof UniqueSlugNormalizer) {\\n                if ($this->config->get('slug_normalizer\/unique') === UniqueSlugNormalizerInterface::PER_DOCUMENT) {\\n                    $this->addEventListener(DocumentParsedEvent::class, [$normalizer, 'clearHistory'], -1000);\\n                }\\n            }\\n\\n            $this->slugNormalizer = $normalizer;\\n        }\\n\\n        return $this->slugNormalizer;\\n    }\\n\\n    \/**\\n     * @throws AlreadyInitializedException\\n     *\/\\n    private function assertUninitialized(string $message): void\\n    {\\n        if ($this->extensionsInitialized) {\\n            throw new AlreadyInitializedException($message . ' Extensions have already been initialized.');\\n        }\\n    }\\n\\n    public static function createDefaultConfiguration(): Configuration\\n    {\\n        return new Configuration([\\n            'html_input' => Expect::anyOf(HtmlFilter::STRIP, HtmlFilter::ALLOW, HtmlFilter::ESCAPE)->default(HtmlFilter::ALLOW),\\n            'allow_unsafe_links' => Expect::bool(true),\\n            'max_nesting_level' => Expect::type('int')->default(PHP_INT_MAX),\\n            'max_delimiters_per_line' => Expect::type('int')->default(PHP_INT_MAX),\\n            'renderer' => Expect::structure([\\n                'block_separator' => Expect::string(\\\"\\\\n\\\"),\\n                'inner_separator' => Expect::string(\\\"\\\\n\\\"),\\n                'soft_break' => Expect::string(\\\"\\\\n\\\"),\\n            ]),\\n            'slug_normalizer' => Expect::structure([\\n                'instance' => Expect::type(TextNormalizerInterface::class)->default(new SlugNormalizer()),\\n                'max_length' => Expect::int()->min(0)->default(255),\\n                'unique' => Expect::anyOf(UniqueSlugNormalizerInterface::DISABLED, UniqueSlugNormalizerInterface::PER_ENVIRONMENT, UniqueSlugNormalizerInterface::PER_DOCUMENT)->default(UniqueSlugNormalizerInterface::PER_DOCUMENT),\\n            ]),\\n        ]);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Environment\/EnvironmentAwareInterface.php\",\"ext\":\"php\",\"size\":431,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Environment;\\n\\ninterface EnvironmentAwareInterface\\n{\\n    public function setEnvironment(EnvironmentInterface $environment): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Environment\/EnvironmentBuilderInterface.php\",\"ext\":\"php\",\"size\":3938,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Environment;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Exception\\\\AlreadyInitializedException;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationProviderInterface;\\n\\n\/**\\n * Interface for building the Environment with any extensions, parsers, listeners, etc. that it may need\\n *\/\\ninterface EnvironmentBuilderInterface extends ConfigurationProviderInterface\\n{\\n    \/**\\n     * Registers the given extension with the Environment\\n     *\\n     * @throws AlreadyInitializedException if the Environment has already been initialized\\n     *\/\\n    public function addExtension(ExtensionInterface $extension): EnvironmentBuilderInterface;\\n\\n    \/**\\n     * Registers the given block start parser with the Environment\\n     *\\n     * @param BlockStartParserInterface $parser   Block parser instance\\n     * @param int                       $priority Priority (a higher number will be executed earlier)\\n     *\\n     * @return $this\\n     *\\n     * @throws AlreadyInitializedException if the Environment has already been initialized\\n     *\/\\n    public function addBlockStartParser(BlockStartParserInterface $parser, int $priority = 0): EnvironmentBuilderInterface;\\n\\n    \/**\\n     * Registers the given inline parser with the Environment\\n     *\\n     * @param InlineParserInterface $parser   Inline parser instance\\n     * @param int                   $priority Priority (a higher number will be executed earlier)\\n     *\\n     * @return $this\\n     *\\n     * @throws AlreadyInitializedException if the Environment has already been initialized\\n     *\/\\n    public function addInlineParser(InlineParserInterface $parser, int $priority = 0): EnvironmentBuilderInterface;\\n\\n    \/**\\n     * Registers the given delimiter processor with the Environment\\n     *\\n     * @param DelimiterProcessorInterface $processor Delimiter processors instance\\n     *\\n     * @throws AlreadyInitializedException if the Environment has already been initialized\\n     *\/\\n    public function addDelimiterProcessor(DelimiterProcessorInterface $processor): EnvironmentBuilderInterface;\\n\\n    \/**\\n     * Registers the given node renderer with the Environment\\n     *\\n     * @param string                $nodeClass The fully-qualified node element class name the renderer below should handle\\n     * @param NodeRendererInterface $renderer  The renderer responsible for rendering the type of element given above\\n     * @param int                   $priority  Priority (a higher number will be executed earlier)\\n     *\\n     * @psalm-param class-string<Node> $nodeClass\\n     *\\n     * @return $this\\n     *\\n     * @throws AlreadyInitializedException if the Environment has already been initialized\\n     *\/\\n    public function addRenderer(string $nodeClass, NodeRendererInterface $renderer, int $priority = 0): EnvironmentBuilderInterface;\\n\\n    \/**\\n     * Registers the given event listener\\n     *\\n     * @param class-string $eventClass Fully-qualified class name of the event this listener should respond to\\n     * @param callable     $listener   Listener to be executed\\n     * @param int          $priority   Priority (a higher number will be executed earlier)\\n     *\\n     * @return $this\\n     *\\n     * @throws AlreadyInitializedException if the Environment has already been initialized\\n     *\/\\n    public function addEventListener(string $eventClass, callable $listener, int $priority = 0): EnvironmentBuilderInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Environment\/EnvironmentInterface.php\",\"ext\":\"php\",\"size\":1620,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Environment;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorCollection;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Normalizer\\\\TextNormalizerInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationProviderInterface;\\nuse Psr\\\\EventDispatcher\\\\EventDispatcherInterface;\\n\\ninterface EnvironmentInterface extends ConfigurationProviderInterface, EventDispatcherInterface\\n{\\n    \/**\\n     * Get all registered extensions\\n     *\\n     * @return ExtensionInterface[]\\n     *\/\\n    public function getExtensions(): iterable;\\n\\n    \/**\\n     * @return iterable<BlockStartParserInterface>\\n     *\/\\n    public function getBlockStartParsers(): iterable;\\n\\n    \/**\\n     * @return iterable<InlineParserInterface>\\n     *\/\\n    public function getInlineParsers(): iterable;\\n\\n    public function getDelimiterProcessors(): DelimiterProcessorCollection;\\n\\n    \/**\\n     * @psalm-param class-string<Node> $nodeClass\\n     *\\n     * @return iterable<NodeRendererInterface>\\n     *\/\\n    public function getRenderersForClass(string $nodeClass): iterable;\\n\\n    public function getSlugNormalizer(): TextNormalizerInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/CommonMarkConverter.php\",\"ext\":\"php\",\"size\":1182,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\Environment;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\CommonMarkCoreExtension;\\n\\n\/**\\n * Converts CommonMark-compatible Markdown to HTML.\\n *\/\\nfinal class CommonMarkConverter extends MarkdownConverter\\n{\\n    \/**\\n     * Create a new Markdown converter pre-configured for CommonMark\\n     *\\n     * @param array<string, mixed> $config\\n     *\/\\n    public function __construct(array $config = [])\\n    {\\n        $environment = new Environment($config);\\n        $environment->addExtension(new CommonMarkCoreExtension());\\n\\n        parent::__construct($environment);\\n    }\\n\\n    public function getEnvironment(): Environment\\n    {\\n        \\\\assert($this->environment instanceof Environment);\\n\\n        return $this->environment;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/DelimiterStack.php\",\"ext\":\"php\",\"size\":13187,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\CacheableDelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorCollection;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AdjacentTextMerger;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\nfinal class DelimiterStack\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?DelimiterInterface $top = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?Bracket $brackets = null;\\n\\n    \/**\\n     * @deprecated This property will be removed in 3.0 once all delimiters MUST have an index\/position\\n     *\\n     * @var \\\\SplObjectStorage<DelimiterInterface, int>|\\\\WeakMap<DelimiterInterface, int>\\n     *\/\\n    private $missingIndexCache;\\n\\n\\n    private int $remainingDelimiters = 0;\\n\\n    public function __construct(int $maximumStackSize = PHP_INT_MAX)\\n    {\\n        $this->remainingDelimiters = $maximumStackSize;\\n\\n        if (\\\\PHP_VERSION_ID >= 80000) {\\n            \/** @psalm-suppress PropertyTypeCoercion *\/\\n            $this->missingIndexCache = new \\\\WeakMap(); \/\/ @phpstan-ignore-line\\n        } else {\\n            $this->missingIndexCache = new \\\\SplObjectStorage(); \/\/ @phpstan-ignore-line\\n        }\\n    }\\n\\n    public function push(DelimiterInterface $newDelimiter): void\\n    {\\n        if ($this->remainingDelimiters-- <= 0) {\\n            return;\\n        }\\n\\n        $newDelimiter->setPrevious($this->top);\\n\\n        if ($this->top !== null) {\\n            $this->top->setNext($newDelimiter);\\n        }\\n\\n        $this->top = $newDelimiter;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function addBracket(Node $node, int $index, bool $image): void\\n    {\\n        if ($this->brackets !== null) {\\n            $this->brackets->setHasNext(true);\\n        }\\n\\n        $this->brackets = new Bracket($node, $this->brackets, $index, $image);\\n    }\\n\\n    \/**\\n     * @psalm-immutable\\n     *\/\\n    public function getLastBracket(): ?Bracket\\n    {\\n        return $this->brackets;\\n    }\\n\\n    private function findEarliest(int $stackBottom): ?DelimiterInterface\\n    {\\n        \/\/ Move back to first relevant delim.\\n        $delimiter   = $this->top;\\n        $lastChecked = null;\\n\\n        while ($delimiter !== null && self::getIndex($delimiter) > $stackBottom) {\\n            $lastChecked = $delimiter;\\n            $delimiter   = $delimiter->getPrevious();\\n        }\\n\\n        return $lastChecked;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function removeBracket(): void\\n    {\\n        if ($this->brackets === null) {\\n            return;\\n        }\\n\\n        $this->brackets = $this->brackets->getPrevious();\\n\\n        if ($this->brackets !== null) {\\n            $this->brackets->setHasNext(false);\\n        }\\n    }\\n\\n    public function removeDelimiter(DelimiterInterface $delimiter): void\\n    {\\n        if ($delimiter->getPrevious() !== null) {\\n            \/** @psalm-suppress PossiblyNullReference *\/\\n            $delimiter->getPrevious()->setNext($delimiter->getNext());\\n        }\\n\\n        if ($delimiter->getNext() === null) {\\n            \/\/ top of stack\\n            $this->top = $delimiter->getPrevious();\\n        } else {\\n            \/** @psalm-suppress PossiblyNullReference *\/\\n            $delimiter->getNext()->setPrevious($delimiter->getPrevious());\\n        }\\n\\n        \/\/ Nullify all references from the removed delimiter to other delimiters.\\n        \/\/ All references to this particular delimiter in the linked list should be gone,\\n        \/\/ but it's possible we're still hanging on to other references to things that\\n        \/\/ have been (or soon will be) removed, which may interfere with efficient\\n        \/\/ garbage collection by the PHP runtime.\\n        \/\/ Explicitly releasing these references should help to avoid possible\\n        \/\/ segfaults like in https:\/\/bugs.php.net\/bug.php?id=68606.\\n        $delimiter->setPrevious(null);\\n        $delimiter->setNext(null);\\n\\n        \/\/ TODO: Remove the line below once PHP 7.4 support is dropped, as WeakMap won't hold onto the reference, making this unnecessary\\n        unset($this->missingIndexCache[$delimiter]);\\n    }\\n\\n    private function removeDelimiterAndNode(DelimiterInterface $delimiter): void\\n    {\\n        $delimiter->getInlineNode()->detach();\\n        $this->removeDelimiter($delimiter);\\n    }\\n\\n    private function removeDelimitersBetween(DelimiterInterface $opener, DelimiterInterface $closer): void\\n    {\\n        $delimiter      = $closer->getPrevious();\\n        $openerPosition = self::getIndex($opener);\\n        while ($delimiter !== null && self::getIndex($delimiter) > $openerPosition) {\\n            $previous = $delimiter->getPrevious();\\n            $this->removeDelimiter($delimiter);\\n            $delimiter = $previous;\\n        }\\n    }\\n\\n    \/**\\n     * @param DelimiterInterface|int|null $stackBottom\\n     *\/\\n    public function removeAll($stackBottom = null): void\\n    {\\n        $stackBottomPosition = \\\\is_int($stackBottom) ? $stackBottom : self::getIndex($stackBottom);\\n\\n        while ($this->top && $this->getIndex($this->top) > $stackBottomPosition) {\\n            $this->removeDelimiter($this->top);\\n        }\\n    }\\n\\n    \/**\\n     * @deprecated This method is no longer used internally and will be removed in 3.0\\n     *\/\\n    public function removeEarlierMatches(string $character): void\\n    {\\n        $opener = $this->top;\\n        while ($opener !== null) {\\n            if ($opener->getChar() === $character) {\\n                $opener->setActive(false);\\n            }\\n\\n            $opener = $opener->getPrevious();\\n        }\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function deactivateLinkOpeners(): void\\n    {\\n        $opener = $this->brackets;\\n        while ($opener !== null && $opener->isActive()) {\\n            $opener->setActive(false);\\n            $opener = $opener->getPrevious();\\n        }\\n    }\\n\\n    \/**\\n     * @deprecated This method is no longer used internally and will be removed in 3.0\\n     *\\n     * @param string|string[] $characters\\n     *\/\\n    public function searchByCharacter($characters): ?DelimiterInterface\\n    {\\n        if (! \\\\is_array($characters)) {\\n            $characters = [$characters];\\n        }\\n\\n        $opener = $this->top;\\n        while ($opener !== null) {\\n            if (\\\\in_array($opener->getChar(), $characters, true)) {\\n                break;\\n            }\\n\\n            $opener = $opener->getPrevious();\\n        }\\n\\n        return $opener;\\n    }\\n\\n    \/**\\n     * @param DelimiterInterface|int|null $stackBottom\\n     *\\n     * @todo change $stackBottom to an int in 3.0\\n     *\/\\n    public function processDelimiters($stackBottom, DelimiterProcessorCollection $processors): void\\n    {\\n        \/** @var array<string, int> $openersBottom *\/\\n        $openersBottom = [];\\n\\n        $stackBottomPosition = \\\\is_int($stackBottom) ? $stackBottom : self::getIndex($stackBottom);\\n\\n        \/\/ Find first closer above stackBottom\\n        $closer = $this->findEarliest($stackBottomPosition);\\n\\n        \/\/ Move forward, looking for closers, and handling each\\n        while ($closer !== null) {\\n            $closingDelimiterChar = $closer->getChar();\\n\\n            $delimiterProcessor = $processors->getDelimiterProcessor($closingDelimiterChar);\\n            if (! $closer->canClose() || $delimiterProcessor === null) {\\n                $closer = $closer->getNext();\\n                continue;\\n            }\\n\\n            if ($delimiterProcessor instanceof CacheableDelimiterProcessorInterface) {\\n                $openersBottomCacheKey = $delimiterProcessor->getCacheKey($closer);\\n            } else {\\n                $openersBottomCacheKey = $closingDelimiterChar;\\n            }\\n\\n            $openingDelimiterChar = $delimiterProcessor->getOpeningCharacter();\\n\\n            $useDelims            = 0;\\n            $openerFound          = false;\\n            $potentialOpenerFound = false;\\n            $opener               = $closer->getPrevious();\\n            while ($opener !== null && ($openerPosition = self::getIndex($opener)) > $stackBottomPosition && $openerPosition >= ($openersBottom[$openersBottomCacheKey] ?? 0)) {\\n                if ($opener->canOpen() && $opener->getChar() === $openingDelimiterChar) {\\n                    $potentialOpenerFound = true;\\n                    $useDelims            = $delimiterProcessor->getDelimiterUse($opener, $closer);\\n                    if ($useDelims > 0) {\\n                        $openerFound = true;\\n                        break;\\n                    }\\n                }\\n\\n                $opener = $opener->getPrevious();\\n            }\\n\\n            if (! $openerFound) {\\n                \/\/ Set lower bound for future searches\\n                \/\/ TODO: Remove this conditional check in 3.0. It only exists to prevent behavioral BC breaks in 2.x.\\n                if ($potentialOpenerFound === false || $delimiterProcessor instanceof CacheableDelimiterProcessorInterface) {\\n                    $openersBottom[$openersBottomCacheKey] = self::getIndex($closer);\\n                }\\n\\n                if (! $potentialOpenerFound && ! $closer->canOpen()) {\\n                    \/\/ We can remove a closer that can't be an opener,\\n                    \/\/ once we've seen there's no matching opener.\\n                    $next = $closer->getNext();\\n                    $this->removeDelimiter($closer);\\n                    $closer = $next;\\n                } else {\\n                    $closer = $closer->getNext();\\n                }\\n\\n                continue;\\n            }\\n\\n            \\\\assert($opener !== null);\\n\\n            $openerNode = $opener->getInlineNode();\\n            $closerNode = $closer->getInlineNode();\\n\\n            \/\/ Remove number of used delimiters from stack and inline nodes.\\n            $opener->setLength($opener->getLength() - $useDelims);\\n            $closer->setLength($closer->getLength() - $useDelims);\\n\\n            $openerNode->setLiteral(\\\\substr($openerNode->getLiteral(), 0, -$useDelims));\\n            $closerNode->setLiteral(\\\\substr($closerNode->getLiteral(), 0, -$useDelims));\\n\\n            $this->removeDelimitersBetween($opener, $closer);\\n            \/\/ The delimiter processor can re-parent the nodes between opener and closer,\\n            \/\/ so make sure they're contiguous already. Exclusive because we want to keep opener\/closer themselves.\\n            AdjacentTextMerger::mergeTextNodesBetweenExclusive($openerNode, $closerNode);\\n            $delimiterProcessor->process($openerNode, $closerNode, $useDelims);\\n\\n            \/\/ No delimiter characters left to process, so we can remove delimiter and the now empty node.\\n            if ($opener->getLength() === 0) {\\n                $this->removeDelimiterAndNode($opener);\\n            }\\n\\n            \/\/ phpcs:disable SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed\\n            if ($closer->getLength() === 0) {\\n                $next = $closer->getNext();\\n                $this->removeDelimiterAndNode($closer);\\n                $closer = $next;\\n            }\\n        }\\n\\n        \/\/ Remove all delimiters\\n        $this->removeAll($stackBottomPosition);\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function __destruct()\\n    {\\n        while ($this->top) {\\n            $this->removeDelimiter($this->top);\\n        }\\n\\n        while ($this->brackets) {\\n            $this->removeBracket();\\n        }\\n    }\\n\\n    \/**\\n     * @deprecated This method will be dropped in 3.0 once all delimiters MUST have an index\/position\\n     *\/\\n    private function getIndex(?DelimiterInterface $delimiter): int\\n    {\\n        if ($delimiter === null) {\\n            return -1;\\n        }\\n\\n        if (($index = $delimiter->getIndex()) !== null) {\\n            return $index;\\n        }\\n\\n        if (isset($this->missingIndexCache[$delimiter])) {\\n            return $this->missingIndexCache[$delimiter];\\n        }\\n\\n        $prev = $delimiter->getPrevious();\\n        $next = $delimiter->getNext();\\n\\n        $i = 0;\\n        do {\\n            $i++;\\n            if ($prev === null) {\\n                break;\\n            }\\n\\n            if ($prev->getIndex() !== null) {\\n                return $this->missingIndexCache[$delimiter] = $prev->getIndex() + $i;\\n            }\\n        } while ($prev = $prev->getPrevious());\\n\\n        $j = 0;\\n        do {\\n            $j++;\\n            if ($next === null) {\\n                break;\\n            }\\n\\n            if ($next->getIndex() !== null) {\\n                return $this->missingIndexCache[$delimiter] = $next->getIndex() - $j;\\n            }\\n        } while ($next = $next->getNext());\\n\\n        \/\/ No index was defined on this delimiter, and none could be guesstimated based on the stack.\\n        return $this->missingIndexCache[$delimiter] = $this->getIndex($delimiter->getPrevious()) + 1;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/DelimiterInterface.php\",\"ext\":\"php\",\"size\":1425,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\ninterface DelimiterInterface\\n{\\n    public function canClose(): bool;\\n\\n    public function canOpen(): bool;\\n\\n    \/**\\n     * @deprecated This method is no longer used internally and will be removed in 3.0\\n     *\/\\n    public function isActive(): bool;\\n\\n    \/**\\n     * @deprecated This method is no longer used internally and will be removed in 3.0\\n     *\/\\n    public function setActive(bool $active): void;\\n\\n    public function getChar(): string;\\n\\n    public function getIndex(): ?int;\\n\\n    public function getNext(): ?DelimiterInterface;\\n\\n    public function setNext(?DelimiterInterface $next): void;\\n\\n    public function getLength(): int;\\n\\n    public function setLength(int $length): void;\\n\\n    public function getOriginalLength(): int;\\n\\n    public function getInlineNode(): AbstractStringContainer;\\n\\n    public function getPrevious(): ?DelimiterInterface;\\n\\n    public function setPrevious(?DelimiterInterface $previous): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Processor\/DelimiterProcessorInterface.php\",\"ext\":\"php\",\"size\":3009,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter\\\\Processor;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\n\/**\\n * Interface for a delimiter processor\\n *\/\\ninterface DelimiterProcessorInterface\\n{\\n    \/**\\n     * Returns the character that marks the beginning of a delimited node.\\n     *\\n     * This must not clash with any other processors being added to the environment.\\n     *\/\\n    public function getOpeningCharacter(): string;\\n\\n    \/**\\n     * Returns the character that marks the ending of a delimited node.\\n     *\\n     * This must not clash with any other processors being added to the environment.\\n     *\\n     * Note that for a symmetric delimiter such as \\\"*\\\", this is the same as the opening.\\n     *\/\\n    public function getClosingCharacter(): string;\\n\\n    \/**\\n     * Minimum number of delimiter characters that are needed to active this.\\n     *\\n     * Must be at least 1.\\n     *\/\\n    public function getMinLength(): int;\\n\\n    \/**\\n     * Determine how many (if any) of the delimiter characters should be used.\\n     *\\n     * This allows implementations to decide how many characters to be used\\n     * based on the properties of the delimiter runs. An implementation can also\\n     * return 0 when it doesn't want to allow this particular combination of\\n     * delimiter runs.\\n     *\\n     * IMPORTANT: Unless this method returns the same hard-coded value in all cases,\\n     * you MUST implement the CacheableDelimiterProcessorInterface interface instead.\\n     *\\n     * @param DelimiterInterface $opener The opening delimiter run\\n     * @param DelimiterInterface $closer The closing delimiter run\\n     *\/\\n    public function getDelimiterUse(DelimiterInterface $opener, DelimiterInterface $closer): int;\\n\\n    \/**\\n     * Process the matched delimiters, e.g. by wrapping the nodes between opener\\n     * and closer in a new node, or appending a new node after the opener.\\n     *\\n     * Note that removal of the delimiter from the delimiter nodes and detaching\\n     * them is done by the caller.\\n     *\\n     * @param AbstractStringContainer $opener       The node that contained the opening delimiter\\n     * @param AbstractStringContainer $closer       The node that contained the closing delimiter\\n     * @param int                     $delimiterUse The number of delimiters that were used\\n     *\/\\n    public function process(AbstractStringContainer $opener, AbstractStringContainer $closer, int $delimiterUse): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Processor\/DelimiterProcessorCollectionInterface.php\",\"ext\":\"php\",\"size\":1450,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter\\\\Processor;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\n\\ninterface DelimiterProcessorCollectionInterface extends \\\\Countable\\n{\\n    \/**\\n     * Add the given delim processor to the collection\\n     *\\n     * @param DelimiterProcessorInterface $processor The delim processor to add\\n     *\\n     * @throws InvalidArgumentException Exception will be thrown if attempting to add multiple processors for the same character\\n     *\/\\n    public function add(DelimiterProcessorInterface $processor): void;\\n\\n    \/**\\n     * Returns the delim processor which handles the given character if one exists\\n     *\/\\n    public function getDelimiterProcessor(string $char): ?DelimiterProcessorInterface;\\n\\n    \/**\\n     * Returns an array of delimiter characters who have associated processors\\n     *\\n     * @return string[]\\n     *\/\\n    public function getDelimiterCharacters(): array;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Processor\/CacheableDelimiterProcessorInterface.php\",\"ext\":\"php\",\"size\":2263,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter\\\\Processor;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterInterface;\\n\\n\/**\\n * Special marker interface for delimiter processors that return dynamic values from getDelimiterUse()\\n *\\n * In order to guarantee linear performance of delimiter processing, the delimiter stack must be able to\\n * cache the lower bound when searching for a matching opener. This gets complicated for delimiter processors\\n * that use a dynamic number of characters (like with emphasis and its \\\"multiple of 3\\\" rule).\\n *\/\\ninterface CacheableDelimiterProcessorInterface extends DelimiterProcessorInterface\\n{\\n    \/**\\n     * Returns a cache key of the factors that determine the number of characters to use.\\n     *\\n     * In order to guarantee linear performance of delimiter processing, the delimiter stack must be able to\\n     * cache the lower bound when searching for a matching opener. This lower bound is usually quite simple;\\n     * for example, with quotes, it's just the last opener with that characted. However, this gets complicated\\n     * for delimiter processors that use a dynamic number of characters (like with emphasis and its \\\"multiple\\n     * of 3\\\" rule), because the delimiter length being considered may change during processing because of that\\n     * dynamic logic in getDelimiterUse(). Therefore, we cannot safely cache the lower bound for these dynamic\\n     * processors without knowing the factors that determine the number of characters to use.\\n     *\\n     * At a minimum, this should include the delimiter character, plus any other factors used to determine\\n     * the result of getDelimiterUse(). The format of the string is not important so long as it is unique\\n     * (compared to other processors) and consistent for a given set of factors.\\n     *\\n     * If getDelimiterUse() always returns the same hard-coded value, this method should return just\\n     * the delimiter character.\\n     *\/\\n    public function getCacheKey(DelimiterInterface $closer): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Processor\/StaggeredDelimiterProcessor.php\",\"ext\":\"php\",\"size\":3603,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter\\\\Processor;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterInterface;\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\n\/**\\n * An implementation of DelimiterProcessorInterface that dispatches all calls to two or more other DelimiterProcessors\\n * depending on the length of the delimiter run. All child DelimiterProcessors must have different minimum\\n * lengths. A given delimiter run is dispatched to the child with the largest acceptable minimum length. If no\\n * child is applicable, the one with the largest minimum length is chosen.\\n *\\n * @internal\\n *\/\\nfinal class StaggeredDelimiterProcessor implements DelimiterProcessorInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private string $delimiterChar;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private int $minLength = 0;\\n\\n    \/**\\n     * @var array<int, DelimiterProcessorInterface>|DelimiterProcessorInterface[]\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $processors = []; \/\/ keyed by minLength in reverse order\\n\\n    public function __construct(string $char, DelimiterProcessorInterface $processor)\\n    {\\n        $this->delimiterChar = $char;\\n        $this->add($processor);\\n    }\\n\\n    public function getOpeningCharacter(): string\\n    {\\n        return $this->delimiterChar;\\n    }\\n\\n    public function getClosingCharacter(): string\\n    {\\n        return $this->delimiterChar;\\n    }\\n\\n    public function getMinLength(): int\\n    {\\n        return $this->minLength;\\n    }\\n\\n    \/**\\n     * Adds the given processor to this staggered delimiter processor\\n     *\\n     * @throws InvalidArgumentException if attempting to add another processors for the same character and minimum length\\n     *\/\\n    public function add(DelimiterProcessorInterface $processor): void\\n    {\\n        $len = $processor->getMinLength();\\n\\n        if (isset($this->processors[$len])) {\\n            throw new InvalidArgumentException(\\\\sprintf('Cannot add two delimiter processors for char \\\"%s\\\" and minimum length %d', $this->delimiterChar, $len));\\n        }\\n\\n        $this->processors[$len] = $processor;\\n        \\\\krsort($this->processors);\\n\\n        $this->minLength = \\\\min($this->minLength, $len);\\n    }\\n\\n    public function getDelimiterUse(DelimiterInterface $opener, DelimiterInterface $closer): int\\n    {\\n        return $this->findProcessor($opener->getLength())->getDelimiterUse($opener, $closer);\\n    }\\n\\n    public function process(AbstractStringContainer $opener, AbstractStringContainer $closer, int $delimiterUse): void\\n    {\\n        $this->findProcessor($delimiterUse)->process($opener, $closer, $delimiterUse);\\n    }\\n\\n    private function findProcessor(int $len): DelimiterProcessorInterface\\n    {\\n        \/\/ Find the \\\"longest\\\" processor which can handle this length\\n        foreach ($this->processors as $processor) {\\n            if ($processor->getMinLength() <= $len) {\\n                return $processor;\\n            }\\n        }\\n\\n        \/\/ Just use the first one in our list\\n        $first = \\\\reset($this->processors);\\n        \\\\assert($first instanceof DelimiterProcessorInterface);\\n\\n        return $first;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Processor\/DelimiterProcessorCollection.php\",\"ext\":\"php\",\"size\":2921,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter\\\\Processor;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\n\\nfinal class DelimiterProcessorCollection implements DelimiterProcessorCollectionInterface\\n{\\n    \/**\\n     * @var array<string,DelimiterProcessorInterface>|DelimiterProcessorInterface[]\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $processorsByChar = [];\\n\\n    public function add(DelimiterProcessorInterface $processor): void\\n    {\\n        $opening = $processor->getOpeningCharacter();\\n        $closing = $processor->getClosingCharacter();\\n\\n        if ($opening === $closing) {\\n            $old = $this->processorsByChar[$opening] ?? null;\\n            if ($old !== null && $old->getOpeningCharacter() === $old->getClosingCharacter()) {\\n                $this->addStaggeredDelimiterProcessorForChar($opening, $old, $processor);\\n            } else {\\n                $this->addDelimiterProcessorForChar($opening, $processor);\\n            }\\n        } else {\\n            $this->addDelimiterProcessorForChar($opening, $processor);\\n            $this->addDelimiterProcessorForChar($closing, $processor);\\n        }\\n    }\\n\\n    public function getDelimiterProcessor(string $char): ?DelimiterProcessorInterface\\n    {\\n        return $this->processorsByChar[$char] ?? null;\\n    }\\n\\n    \/**\\n     * @return string[]\\n     *\/\\n    public function getDelimiterCharacters(): array\\n    {\\n        return \\\\array_keys($this->processorsByChar);\\n    }\\n\\n    private function addDelimiterProcessorForChar(string $delimiterChar, DelimiterProcessorInterface $processor): void\\n    {\\n        if (isset($this->processorsByChar[$delimiterChar])) {\\n            throw new InvalidArgumentException(\\\\sprintf('Delim processor for character \\\"%s\\\" already exists', $processor->getOpeningCharacter()));\\n        }\\n\\n        $this->processorsByChar[$delimiterChar] = $processor;\\n    }\\n\\n    private function addStaggeredDelimiterProcessorForChar(string $opening, DelimiterProcessorInterface $old, DelimiterProcessorInterface $new): void\\n    {\\n        if ($old instanceof StaggeredDelimiterProcessor) {\\n            $s = $old;\\n        } else {\\n            $s = new StaggeredDelimiterProcessor($opening, $old);\\n        }\\n\\n        $s->add($new);\\n        $this->processorsByChar[$opening] = $s;\\n    }\\n\\n    public function count(): int\\n    {\\n        return \\\\count($this->processorsByChar);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/DelimiterParser.php\",\"ext\":\"php\",\"size\":3867,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Delimiter;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorCollection;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\n\/**\\n * Delimiter parsing is implemented as an Inline Parser with the lowest-possible priority\\n *\\n * @internal\\n *\/\\nfinal class DelimiterParser implements InlineParserInterface\\n{\\n    private DelimiterProcessorCollection $collection;\\n\\n    public function __construct(DelimiterProcessorCollection $collection)\\n    {\\n        $this->collection = $collection;\\n    }\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::oneOf(...$this->collection->getDelimiterCharacters());\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $character = $inlineContext->getFullMatch();\\n        $numDelims = 0;\\n        $cursor    = $inlineContext->getCursor();\\n        $processor = $this->collection->getDelimiterProcessor($character);\\n\\n        \\\\assert($processor !== null); \/\/ Delimiter processor should never be null here\\n\\n        $charBefore = $cursor->peek(-1);\\n        if ($charBefore === null) {\\n            $charBefore = \\\"\\\\n\\\";\\n        }\\n\\n        while ($cursor->peek($numDelims) === $character) {\\n            ++$numDelims;\\n        }\\n\\n        if ($numDelims < $processor->getMinLength()) {\\n            return false;\\n        }\\n\\n        $cursor->advanceBy($numDelims);\\n\\n        $charAfter = $cursor->getCurrentCharacter();\\n        if ($charAfter === null) {\\n            $charAfter = \\\"\\\\n\\\";\\n        }\\n\\n        [$canOpen, $canClose] = self::determineCanOpenOrClose($charBefore, $charAfter, $character, $processor);\\n\\n        if (! ($canOpen || $canClose)) {\\n            $inlineContext->getContainer()->appendChild(new Text(\\\\str_repeat($character, $numDelims)));\\n\\n            return true;\\n        }\\n\\n        $node = new Text(\\\\str_repeat($character, $numDelims), [\\n            'delim' => true,\\n        ]);\\n        $inlineContext->getContainer()->appendChild($node);\\n\\n        \/\/ Add entry to stack to this opener\\n        $delimiter = new Delimiter($character, $numDelims, $node, $canOpen, $canClose, $inlineContext->getCursor()->getPosition());\\n        $inlineContext->getDelimiterStack()->push($delimiter);\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return bool[]\\n     *\/\\n    private static function determineCanOpenOrClose(string $charBefore, string $charAfter, string $character, DelimiterProcessorInterface $delimiterProcessor): array\\n    {\\n        $afterIsWhitespace   = \\\\preg_match(RegexHelper::REGEX_UNICODE_WHITESPACE_CHAR, $charAfter);\\n        $afterIsPunctuation  = \\\\preg_match(RegexHelper::REGEX_PUNCTUATION, $charAfter);\\n        $beforeIsWhitespace  = \\\\preg_match(RegexHelper::REGEX_UNICODE_WHITESPACE_CHAR, $charBefore);\\n        $beforeIsPunctuation = \\\\preg_match(RegexHelper::REGEX_PUNCTUATION, $charBefore);\\n\\n        $leftFlanking  = ! $afterIsWhitespace && (! $afterIsPunctuation || $beforeIsWhitespace || $beforeIsPunctuation);\\n        $rightFlanking = ! $beforeIsWhitespace && (! $beforeIsPunctuation || $afterIsWhitespace || $afterIsPunctuation);\\n\\n        if ($character === '_') {\\n            $canOpen  = $leftFlanking && (! $rightFlanking || $beforeIsPunctuation);\\n            $canClose = $rightFlanking && (! $leftFlanking || $afterIsPunctuation);\\n        } else {\\n            $canOpen  = $leftFlanking && $character === $delimiterProcessor->getOpeningCharacter();\\n            $canClose = $rightFlanking && $character === $delimiterProcessor->getClosingCharacter();\\n        }\\n\\n        return [$canOpen, $canClose];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Bracket.php\",\"ext\":\"php\",\"size\":1613,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\nfinal class Bracket\\n{\\n    private Node $node;\\n    private ?Bracket $previous;\\n    private bool $hasNext = false;\\n    private int $position;\\n    private bool $image;\\n    private bool $active = true;\\n\\n    public function __construct(Node $node, ?Bracket $previous, int $position, bool $image)\\n    {\\n        $this->node     = $node;\\n        $this->previous = $previous;\\n        $this->position = $position;\\n        $this->image    = $image;\\n    }\\n\\n    public function getNode(): Node\\n    {\\n        return $this->node;\\n    }\\n\\n    public function getPrevious(): ?Bracket\\n    {\\n        return $this->previous;\\n    }\\n\\n    public function hasNext(): bool\\n    {\\n        return $this->hasNext;\\n    }\\n\\n    public function getPosition(): int\\n    {\\n        return $this->position;\\n    }\\n\\n    public function isImage(): bool\\n    {\\n        return $this->image;\\n    }\\n\\n    \/**\\n     * Only valid in the context of non-images (links)\\n     *\/\\n    public function isActive(): bool\\n    {\\n        return $this->active;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function setHasNext(bool $hasNext): void\\n    {\\n        $this->hasNext = $hasNext;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function setActive(bool $active): void\\n    {\\n        $this->active = $active;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Delimiter\/Delimiter.php\",\"ext\":\"php\",\"size\":3040,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Delimiter;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\nfinal class Delimiter implements DelimiterInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private string $char;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private int $length;\\n\\n    \/** @psalm-readonly *\/\\n    private int $originalLength;\\n\\n    \/** @psalm-readonly *\/\\n    private AbstractStringContainer $inlineNode;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?DelimiterInterface $previous = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?DelimiterInterface $next = null;\\n\\n    \/** @psalm-readonly *\/\\n    private bool $canOpen;\\n\\n    \/** @psalm-readonly *\/\\n    private bool $canClose;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $active;\\n\\n    \/** @psalm-readonly *\/\\n    private ?int $index = null;\\n\\n    public function __construct(string $char, int $numDelims, AbstractStringContainer $node, bool $canOpen, bool $canClose, ?int $index = null)\\n    {\\n        $this->char           = $char;\\n        $this->length         = $numDelims;\\n        $this->originalLength = $numDelims;\\n        $this->inlineNode     = $node;\\n        $this->canOpen        = $canOpen;\\n        $this->canClose       = $canClose;\\n        $this->active         = true;\\n        $this->index          = $index;\\n    }\\n\\n    public function canClose(): bool\\n    {\\n        return $this->canClose;\\n    }\\n\\n    public function canOpen(): bool\\n    {\\n        return $this->canOpen;\\n    }\\n\\n    public function isActive(): bool\\n    {\\n        return $this->active;\\n    }\\n\\n    public function setActive(bool $active): void\\n    {\\n        $this->active = $active;\\n    }\\n\\n    public function getChar(): string\\n    {\\n        return $this->char;\\n    }\\n\\n    public function getIndex(): ?int\\n    {\\n        return $this->index;\\n    }\\n\\n    public function getNext(): ?DelimiterInterface\\n    {\\n        return $this->next;\\n    }\\n\\n    public function setNext(?DelimiterInterface $next): void\\n    {\\n        $this->next = $next;\\n    }\\n\\n    public function getLength(): int\\n    {\\n        return $this->length;\\n    }\\n\\n    public function setLength(int $length): void\\n    {\\n        $this->length = $length;\\n    }\\n\\n    public function getOriginalLength(): int\\n    {\\n        return $this->originalLength;\\n    }\\n\\n    public function getInlineNode(): AbstractStringContainer\\n    {\\n        return $this->inlineNode;\\n    }\\n\\n    public function getPrevious(): ?DelimiterInterface\\n    {\\n        return $this->previous;\\n    }\\n\\n    public function setPrevious(?DelimiterInterface $previous): void\\n    {\\n        $this->previous = $previous;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Normalizer\/SlugNormalizer.php\",\"ext\":\"php\",\"size\":1782,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Normalizer;\\n\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\n\/**\\n * Creates URL-friendly strings based on the given string input\\n *\/\\nfinal class SlugNormalizer implements TextNormalizerInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-allow-private-mutation *\/\\n    private int $defaultMaxLength = 255;\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->defaultMaxLength = $configuration->get('slug_normalizer\/max_length');\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\\n     * @psalm-immutable\\n     *\/\\n    public function normalize(string $text, array $context = []): string\\n    {\\n        \/\/ Add any requested prefix\\n        $slug = ($context['prefix'] ?? '') . $text;\\n        \/\/ Trim whitespace\\n        $slug = \\\\trim($slug);\\n        \/\/ Convert to lowercase\\n        $slug = \\\\mb_strtolower($slug, 'UTF-8');\\n        \/\/ Try replacing whitespace with a dash\\n        $slug = \\\\preg_replace('\/\\\\s+\/u', '-', $slug) ?? $slug;\\n        \/\/ Try removing characters other than letters, numbers, and marks.\\n        $slug = \\\\preg_replace('\/[^\\\\p{L}\\\\p{Nd}\\\\p{Nl}\\\\p{M}-]+\/u', '', $slug) ?? $slug;\\n        \/\/ Trim to requested length if given\\n        if ($length = $context['length'] ?? $this->defaultMaxLength) {\\n            $slug = \\\\mb_substr($slug, 0, $length, 'UTF-8');\\n        }\\n\\n        \/\/ @phpstan-ignore-next-line Because it thinks mb_substr() returns false on PHP 7.4\\n        return $slug;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Normalizer\/TextNormalizerInterface.php\",\"ext\":\"php\",\"size\":1039,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Normalizer;\\n\\n\/**\\n * Creates a normalized version of the given input text\\n *\/\\ninterface TextNormalizerInterface\\n{\\n    \/**\\n     * @param string               $text    The text to normalize\\n     * @param array<string, mixed> $context Additional context about the text being normalized (optional)\\n     *\\n     * $context may include (but is not required to include) the following:\\n     *   - `prefix` - A string prefix to prepend to each normalized result\\n     *   - `length` - The requested maximum length\\n     *   - `node` - The node we're normalizing text for\\n     *\\n     * Implementations do not have to use or respect any information within that $context\\n     *\/\\n    public function normalize(string $text, array $context = []): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Normalizer\/TextNormalizer.php\",\"ext\":\"php\",\"size\":1155,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Normalizer;\\n\\n\/***\\n * Normalize text input using the steps given by the CommonMark spec to normalize labels\\n *\\n * @see https:\/\/spec.commonmark.org\/0.29\/#matches\\n *\\n * @psalm-immutable\\n *\/\\nfinal class TextNormalizer implements TextNormalizerInterface\\n{\\n    \/**\\n     * {@inheritDoc}\\n     *\\n     * @psalm-pure\\n     *\/\\n    public function normalize(string $text, array $context = []): string\\n    {\\n        \/\/ Collapse internal whitespace to single space and remove\\n        \/\/ leading\/trailing whitespace\\n        $text = \\\\preg_replace('\/[ \\\\t\\\\r\\\\n]+\/', ' ', \\\\trim($text));\\n        \\\\assert(\\\\is_string($text));\\n\\n        \/\/ Is it strictly ASCII? If so, we can use strtolower() instead (faster)\\n        if (\\\\mb_check_encoding($text, 'ASCII')) {\\n            return \\\\strtolower($text);\\n        }\\n\\n        return \\\\mb_convert_case($text, \\\\MB_CASE_FOLD, 'UTF-8');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Normalizer\/UniqueSlugNormalizerInterface.php\",\"ext\":\"php\",\"size\":722,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Normalizer;\\n\\ninterface UniqueSlugNormalizerInterface extends TextNormalizerInterface\\n{\\n    public const DISABLED        = false;\\n    public const PER_ENVIRONMENT = 'environment';\\n    public const PER_DOCUMENT    = 'document';\\n\\n    \/**\\n     * Called by the Environment whenever the configured scope changes\\n     *\\n     * Currently, this will only be called PER_DOCUMENT.\\n     *\/\\n    public function clearHistory(): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Normalizer\/UniqueSlugNormalizer.php\",\"ext\":\"php\",\"size\":1500,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Normalizer;\\n\\n\/\/ phpcs:disable Squiz.Strings.DoubleQuoteUsage.ContainsVar\\nfinal class UniqueSlugNormalizer implements UniqueSlugNormalizerInterface\\n{\\n    private TextNormalizerInterface $innerNormalizer;\\n    \/** @var array<string, bool> *\/\\n    private array $alreadyUsed = [];\\n\\n    public function __construct(TextNormalizerInterface $innerNormalizer)\\n    {\\n        $this->innerNormalizer = $innerNormalizer;\\n    }\\n\\n    public function clearHistory(): void\\n    {\\n        $this->alreadyUsed = [];\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\\n     * @psalm-allow-private-mutation\\n     *\/\\n    public function normalize(string $text, array $context = []): string\\n    {\\n        $normalized = $this->innerNormalizer->normalize($text, $context);\\n\\n        \/\/ If it's not unique, add an incremental number to the end until we get a unique version\\n        if (\\\\array_key_exists($normalized, $this->alreadyUsed)) {\\n            $suffix = 0;\\n            do {\\n                ++$suffix;\\n            } while (\\\\array_key_exists(\\\"$normalized-$suffix\\\", $this->alreadyUsed));\\n\\n            $normalized = \\\"$normalized-$suffix\\\";\\n        }\\n\\n        $this->alreadyUsed[$normalized] = true;\\n\\n        return $normalized;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/MarkdownConverterInterface.php\",\"ext\":\"php\",\"size\":846,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\n\\n\/**\\n * Interface for a service which converts Markdown to HTML.\\n *\\n * @deprecated since 2.2; use {@link ConverterInterface} instead\\n *\/\\ninterface MarkdownConverterInterface\\n{\\n    \/**\\n     * Converts Markdown to HTML.\\n     *\\n     * @deprecated since 2.2; use {@link ConverterInterface::convert()} instead\\n     *\\n     * @throws CommonMarkException\\n     *\/\\n    public function convertToHtml(string $markdown): RenderedContentInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/StringContainerInterface.php\",\"ext\":\"php\",\"size\":640,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\n\/**\\n * Interface for a node which directly contains line(s) of text\\n *\/\\ninterface StringContainerInterface\\n{\\n    public function setLiteral(string $literal): void;\\n\\n    public function getLiteral(): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/RawMarkupContainerInterface.php\",\"ext\":\"php\",\"size\":465,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\n\/**\\n * Interface for a node which contains raw, unprocessed markup (like HTML)\\n *\/\\ninterface RawMarkupContainerInterface extends StringContainerInterface\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/NodeWalker.php\",\"ext\":\"php\",\"size\":2201,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class NodeWalker\\n{\\n    \/** @psalm-readonly *\/\\n    private Node $root;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?Node $current = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $entering;\\n\\n    public function __construct(Node $root)\\n    {\\n        $this->root     = $root;\\n        $this->current  = $this->root;\\n        $this->entering = true;\\n    }\\n\\n    \/**\\n     * Returns an event which contains node and entering flag\\n     * (entering is true when we enter a Node from a parent or sibling,\\n     * and false when we reenter it from child)\\n     *\/\\n    public function next(): ?NodeWalkerEvent\\n    {\\n        $current  = $this->current;\\n        $entering = $this->entering;\\n        if ($current === null) {\\n            return null;\\n        }\\n\\n        if ($entering && ($current instanceof AbstractBlock || $current->hasChildren())) {\\n            if ($current->firstChild()) {\\n                $this->current  = $current->firstChild();\\n                $this->entering = true;\\n            } else {\\n                $this->entering = false;\\n            }\\n        } elseif ($current === $this->root) {\\n            $this->current = null;\\n        } elseif ($current->next() === null) {\\n            $this->current  = $current->parent();\\n            $this->entering = false;\\n        } else {\\n            $this->current  = $current->next();\\n            $this->entering = true;\\n        }\\n\\n        return new NodeWalkerEvent($current, $entering);\\n    }\\n\\n    \/**\\n     * Resets the iterator to resume at the specified node\\n     *\/\\n    public function resumeAt(Node $node, bool $entering = true): void\\n    {\\n        $this->current  = $node;\\n        $this->entering = $entering;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Query.php\",\"ext\":\"php\",\"size\":3312,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Query\\\\AndExpr;\\nuse League\\\\CommonMark\\\\Node\\\\Query\\\\OrExpr;\\n\\nfinal class Query\\n{\\n    \/** @var callable(Node): bool $condition *\/\\n    private $condition;\\n\\n    public function __construct()\\n    {\\n        $this->condition = new AndExpr();\\n    }\\n\\n    public function where(callable ...$conditions): self\\n    {\\n        return $this->andWhere(...$conditions);\\n    }\\n\\n    public function andWhere(callable ...$conditions): self\\n    {\\n        if ($this->condition instanceof AndExpr) {\\n            foreach ($conditions as $condition) {\\n                $this->condition->add($condition);\\n            }\\n        } else {\\n            $this->condition = new AndExpr($this->condition, ...$conditions);\\n        }\\n\\n        return $this;\\n    }\\n\\n    public function orWhere(callable ...$conditions): self\\n    {\\n        if ($this->condition instanceof OrExpr) {\\n            foreach ($conditions as $condition) {\\n                $this->condition->add($condition);\\n            }\\n        } else {\\n            $this->condition = new OrExpr($this->condition, ...$conditions);\\n        }\\n\\n        return $this;\\n    }\\n\\n    public function findOne(Node $node): ?Node\\n    {\\n        foreach ($node->iterator() as $n) {\\n            if (\\\\call_user_func($this->condition, $n)) {\\n                return $n;\\n            }\\n        }\\n\\n        return null;\\n    }\\n\\n    \/**\\n     * @return iterable<Node>\\n     *\/\\n    public function findAll(Node $node, ?int $limit = PHP_INT_MAX): iterable\\n    {\\n        $resultCount = 0;\\n\\n        foreach ($node->iterator() as $n) {\\n            if ($resultCount >= $limit) {\\n                break;\\n            }\\n\\n            if (! \\\\call_user_func($this->condition, $n)) {\\n                continue;\\n            }\\n\\n            ++$resultCount;\\n\\n            yield $n;\\n        }\\n    }\\n\\n    \/**\\n     * @return callable(Node): bool\\n     *\/\\n    public static function type(string $class): callable\\n    {\\n        return static fn (Node $node): bool => $node instanceof $class;\\n    }\\n\\n    \/**\\n     * @psalm-param ?callable(Node): bool $condition\\n     *\\n     * @return callable(Node): bool\\n     *\/\\n    public static function hasChild(?callable $condition = null): callable\\n    {\\n        return static function (Node $node) use ($condition): bool {\\n            foreach ($node->children() as $child) {\\n                if ($condition === null || $condition($child)) {\\n                    return true;\\n                }\\n            }\\n\\n            return false;\\n        };\\n    }\\n\\n    \/**\\n     * @psalm-param ?callable(Node): bool $condition\\n     *\\n     * @return callable(Node): bool\\n     *\/\\n    public static function hasParent(?callable $condition = null): callable\\n    {\\n        return static function (Node $node) use ($condition): bool {\\n            $parent = $node->parent();\\n            if ($parent === null) {\\n                return false;\\n            }\\n\\n            if ($condition === null) {\\n                return true;\\n            }\\n\\n            return $condition($parent);\\n        };\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/StringContainerHelper.php\",\"ext\":\"php\",\"size\":1356,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\nfinal class StringContainerHelper\\n{\\n    \/**\\n     * Extract text literals from all descendant nodes\\n     *\\n     * @param Node          $node         Parent node\\n     * @param array<string> $excludeTypes Optional list of node class types to exclude\\n     *\\n     * @return string Concatenated literals\\n     *\/\\n    public static function getChildText(Node $node, array $excludeTypes = []): string\\n    {\\n        $text = '';\\n\\n        foreach ($node->iterator() as $child) {\\n            if ($child instanceof StringContainerInterface && ! self::isOneOf($child, $excludeTypes)) {\\n                $text .= $child->getLiteral();\\n            }\\n        }\\n\\n        return $text;\\n    }\\n\\n    \/**\\n     * @param string[] $classesOrInterfacesToCheck\\n     *\\n     * @psalm-pure\\n     *\/\\n    private static function isOneOf(object $object, array $classesOrInterfacesToCheck): bool\\n    {\\n        foreach ($classesOrInterfacesToCheck as $type) {\\n            if ($object instanceof $type) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Block\/TightBlockInterface.php\",\"ext\":\"php\",\"size\":434,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Block;\\n\\ninterface TightBlockInterface\\n{\\n    public function isTight(): bool;\\n\\n    public function setTight(bool $tight): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Block\/Paragraph.php\",\"ext\":\"php\",\"size\":563,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Block;\\n\\nclass Paragraph extends AbstractBlock\\n{\\n    \/** @internal *\/\\n    public bool $onlyContainsLinkReferenceDefinitions = false;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Block\/AbstractBlock.php\",\"ext\":\"php\",\"size\":1457,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\n\/**\\n * Block-level element\\n *\\n * @method parent() ?AbstractBlock\\n *\/\\nabstract class AbstractBlock extends Node\\n{\\n    protected ?int $startLine = null;\\n\\n    protected ?int $endLine = null;\\n\\n    protected function setParent(?Node $node = null): void\\n    {\\n        if ($node && ! $node instanceof self) {\\n            throw new InvalidArgumentException('Parent of block must also be block (cannot be inline)');\\n        }\\n\\n        parent::setParent($node);\\n    }\\n\\n    public function setStartLine(?int $startLine): void\\n    {\\n        $this->startLine = $startLine;\\n        if ($this->endLine === null) {\\n            $this->endLine = $startLine;\\n        }\\n    }\\n\\n    public function getStartLine(): ?int\\n    {\\n        return $this->startLine;\\n    }\\n\\n    public function setEndLine(?int $endLine): void\\n    {\\n        $this->endLine = $endLine;\\n    }\\n\\n    public function getEndLine(): ?int\\n    {\\n        return $this->endLine;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Block\/Document.php\",\"ext\":\"php\",\"size\":1282,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMap;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMapInterface;\\n\\nclass Document extends AbstractBlock\\n{\\n    \/** @psalm-readonly *\/\\n    protected ReferenceMapInterface $referenceMap;\\n\\n    public function __construct(?ReferenceMapInterface $referenceMap = null)\\n    {\\n        parent::__construct();\\n\\n        $this->setStartLine(1);\\n\\n        $this->referenceMap = $referenceMap ?? new ReferenceMap();\\n    }\\n\\n    public function getReferenceMap(): ReferenceMapInterface\\n    {\\n        return $this->referenceMap;\\n    }\\n\\n    public function canContain(AbstractBlock $block): bool\\n    {\\n        return true;\\n    }\\n\\n    public function isCode(): bool\\n    {\\n        return false;\\n    }\\n\\n    public function matchesNextLine(Cursor $cursor): bool\\n    {\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Inline\/DelimitedInterface.php\",\"ext\":\"php\",\"size\":450,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Inline;\\n\\ninterface DelimitedInterface\\n{\\n    public function getOpeningDelimiter(): string;\\n\\n    public function getClosingDelimiter(): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Inline\/Text.php\",\"ext\":\"php\",\"size\":589,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Inline;\\n\\nfinal class Text extends AbstractStringContainer\\n{\\n    public function append(string $literal): void\\n    {\\n        $this->literal .= $literal;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Inline\/Newline.php\",\"ext\":\"php\",\"size\":929,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Inline;\\n\\nfinal class Newline extends AbstractInline\\n{\\n    \/\/ Any changes to these constants should be reflected in .phpstorm.meta.php\\n    public const HARDBREAK = 0;\\n    public const SOFTBREAK = 1;\\n\\n    \/** @psalm-readonly *\/\\n    private int $type;\\n\\n    public function __construct(int $breakType = self::HARDBREAK)\\n    {\\n        parent::__construct();\\n\\n        $this->type = $breakType;\\n    }\\n\\n    \/** @psalm-immutable *\/\\n    public function getType(): int\\n    {\\n        return $this->type;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Inline\/AdjacentTextMerger.php\",\"ext\":\"php\",\"size\":2948,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\n\/**\\n * @internal\\n *\/\\nfinal class AdjacentTextMerger\\n{\\n    public static function mergeChildNodes(Node $node): void\\n    {\\n        \/\/ No children or just one child node, no need for merging\\n        if ($node->firstChild() === $node->lastChild() || $node->firstChild() === null || $node->lastChild() === null) {\\n            return;\\n        }\\n\\n        \/** @psalm-suppress PossiblyNullArgument *\/\\n        self::mergeTextNodesInclusive($node->firstChild(), $node->lastChild());\\n    }\\n\\n    public static function mergeTextNodesBetweenExclusive(Node $fromNode, Node $toNode): void\\n    {\\n        \/\/ No nodes between them\\n        if ($fromNode === $toNode || $fromNode->next() === $toNode || $fromNode->next() === null || $toNode->previous() === null) {\\n            return;\\n        }\\n\\n        \/** @psalm-suppress PossiblyNullArgument *\/\\n        self::mergeTextNodesInclusive($fromNode->next(), $toNode->previous());\\n    }\\n\\n    public static function mergeWithDirectlyAdjacentNodes(Text $node): void\\n    {\\n        $start = ($previous = $node->previous()) instanceof Text ? $previous : $node;\\n        $end   = ($next = $node->next()) instanceof Text ? $next : $node;\\n\\n        self::mergeIfNeeded($start, $end);\\n    }\\n\\n    private static function mergeTextNodesInclusive(Node $fromNode, Node $toNode): void\\n    {\\n        $first = null;\\n        $last  = null;\\n\\n        $node = $fromNode;\\n        while ($node !== null) {\\n            if ($node instanceof Text) {\\n                if ($first === null) {\\n                    $first = $node;\\n                }\\n\\n                $last = $node;\\n            } else {\\n                self::mergeIfNeeded($first, $last);\\n                $first = null;\\n                $last  = null;\\n            }\\n\\n            if ($node === $toNode) {\\n                break;\\n            }\\n\\n            $node = $node->next();\\n        }\\n\\n        self::mergeIfNeeded($first, $last);\\n    }\\n\\n    private static function mergeIfNeeded(?Text $first, ?Text $last): void\\n    {\\n        if ($first === null || $last === null || $first === $last) {\\n            \/\/ No merging needed\\n            return;\\n        }\\n\\n        $s = $first->getLiteral();\\n\\n        $node = $first->next();\\n        $stop = $last->next();\\n        while ($node !== $stop && $node instanceof Text) {\\n            $s     .= $node->getLiteral();\\n            $unlink = $node;\\n            $node   = $node->next();\\n            $unlink->detach();\\n        }\\n\\n        $first->setLiteral($s);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Inline\/AbstractStringContainer.php\",\"ext\":\"php\",\"size\":1111,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerInterface;\\n\\nabstract class AbstractStringContainer extends AbstractInline implements StringContainerInterface\\n{\\n    protected string $literal = '';\\n\\n    \/**\\n     * @param array<string, mixed> $data\\n     *\/\\n    public function __construct(string $contents = '', array $data = [])\\n    {\\n        parent::__construct();\\n\\n        $this->literal = $contents;\\n        if (\\\\count($data) > 0) {\\n            $this->data->import($data);\\n        }\\n    }\\n\\n    public function getLiteral(): string\\n    {\\n        return $this->literal;\\n    }\\n\\n    public function setLiteral(string $literal): void\\n    {\\n        $this->literal = $literal;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Inline\/AbstractInline.php\",\"ext\":\"php\",\"size\":519,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\nabstract class AbstractInline extends Node\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/NodeWalkerEvent.php\",\"ext\":\"php\",\"size\":893,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\nfinal class NodeWalkerEvent\\n{\\n    \/** @psalm-readonly *\/\\n    private Node $node;\\n\\n    \/** @psalm-readonly *\/\\n    private bool $isEntering;\\n\\n    public function __construct(Node $node, bool $isEntering = true)\\n    {\\n        $this->node       = $node;\\n        $this->isEntering = $isEntering;\\n    }\\n\\n    public function getNode(): Node\\n    {\\n        return $this->node;\\n    }\\n\\n    public function isEntering(): bool\\n    {\\n        return $this->isEntering;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Node.php\",\"ext\":\"php\",\"size\":6466,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\nuse Dflydev\\\\DotAccessData\\\\Data;\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\n\\nabstract class Node\\n{\\n    \/** @psalm-readonly *\/\\n    public Data $data;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    protected int $depth = 0;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    protected ?Node $parent = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    protected ?Node $previous = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    protected ?Node $next = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    protected ?Node $firstChild = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    protected ?Node $lastChild = null;\\n\\n    public function __construct()\\n    {\\n        $this->data = new Data([\\n            'attributes' => [],\\n        ]);\\n    }\\n\\n    public function previous(): ?Node\\n    {\\n        return $this->previous;\\n    }\\n\\n    public function next(): ?Node\\n    {\\n        return $this->next;\\n    }\\n\\n    public function parent(): ?Node\\n    {\\n        return $this->parent;\\n    }\\n\\n    protected function setParent(?Node $node = null): void\\n    {\\n        $this->parent = $node;\\n        $this->depth  = $node === null ? 0 : $node->depth + 1;\\n    }\\n\\n    \/**\\n     * Inserts the $sibling node after $this\\n     *\/\\n    public function insertAfter(Node $sibling): void\\n    {\\n        $sibling->detach();\\n        $sibling->next = $this->next;\\n\\n        if ($sibling->next) {\\n            $sibling->next->previous = $sibling;\\n        }\\n\\n        $sibling->previous = $this;\\n        $this->next        = $sibling;\\n        $sibling->setParent($this->parent);\\n\\n        if (! $sibling->next && $sibling->parent) {\\n            $sibling->parent->lastChild = $sibling;\\n        }\\n    }\\n\\n    \/**\\n     * Inserts the $sibling node before $this\\n     *\/\\n    public function insertBefore(Node $sibling): void\\n    {\\n        $sibling->detach();\\n        $sibling->previous = $this->previous;\\n\\n        if ($sibling->previous) {\\n            $sibling->previous->next = $sibling;\\n        }\\n\\n        $sibling->next  = $this;\\n        $this->previous = $sibling;\\n        $sibling->setParent($this->parent);\\n\\n        if (! $sibling->previous && $sibling->parent) {\\n            $sibling->parent->firstChild = $sibling;\\n        }\\n    }\\n\\n    public function replaceWith(Node $replacement): void\\n    {\\n        $replacement->detach();\\n        $this->insertAfter($replacement);\\n        $this->detach();\\n    }\\n\\n    public function detach(): void\\n    {\\n        if ($this->previous) {\\n            $this->previous->next = $this->next;\\n        } elseif ($this->parent) {\\n            $this->parent->firstChild = $this->next;\\n        }\\n\\n        if ($this->next) {\\n            $this->next->previous = $this->previous;\\n        } elseif ($this->parent) {\\n            $this->parent->lastChild = $this->previous;\\n        }\\n\\n        $this->parent   = null;\\n        $this->next     = null;\\n        $this->previous = null;\\n        $this->depth    = 0;\\n    }\\n\\n    public function hasChildren(): bool\\n    {\\n        return $this->firstChild !== null;\\n    }\\n\\n    public function firstChild(): ?Node\\n    {\\n        return $this->firstChild;\\n    }\\n\\n    public function lastChild(): ?Node\\n    {\\n        return $this->lastChild;\\n    }\\n\\n    \/**\\n     * @return Node[]\\n     *\/\\n    public function children(): iterable\\n    {\\n        $children = [];\\n        for ($current = $this->firstChild; $current !== null; $current = $current->next) {\\n            $children[] = $current;\\n        }\\n\\n        return $children;\\n    }\\n\\n    public function appendChild(Node $child): void\\n    {\\n        if ($this->lastChild) {\\n            $this->lastChild->insertAfter($child);\\n        } else {\\n            $child->detach();\\n            $child->setParent($this);\\n            $this->lastChild = $this->firstChild = $child;\\n        }\\n    }\\n\\n    \/**\\n     * Adds $child as the very first child of $this\\n     *\/\\n    public function prependChild(Node $child): void\\n    {\\n        if ($this->firstChild) {\\n            $this->firstChild->insertBefore($child);\\n        } else {\\n            $child->detach();\\n            $child->setParent($this);\\n            $this->lastChild = $this->firstChild = $child;\\n        }\\n    }\\n\\n    \/**\\n     * Detaches all child nodes of given node\\n     *\/\\n    public function detachChildren(): void\\n    {\\n        foreach ($this->children() as $children) {\\n            $children->setParent(null);\\n        }\\n\\n        $this->firstChild = $this->lastChild = null;\\n    }\\n\\n    \/**\\n     * Replace all children of given node with collection of another\\n     *\\n     * @param iterable<Node> $children\\n     *\/\\n    public function replaceChildren(iterable $children): void\\n    {\\n        $this->detachChildren();\\n        foreach ($children as $item) {\\n            $this->appendChild($item);\\n        }\\n    }\\n\\n    public function getDepth(): int\\n    {\\n        return $this->depth;\\n    }\\n\\n    public function walker(): NodeWalker\\n    {\\n        return new NodeWalker($this);\\n    }\\n\\n    public function iterator(int $flags = 0): NodeIterator\\n    {\\n        return new NodeIterator($this, $flags);\\n    }\\n\\n    \/**\\n     * Clone the current node and its children\\n     *\\n     * WARNING: This is a recursive function and should not be called on deeply-nested node trees!\\n     *\/\\n    public function __clone()\\n    {\\n        \/\/ Cloned nodes are detached from their parents, siblings, and children\\n        $this->parent   = null;\\n        $this->previous = null;\\n        $this->next     = null;\\n        \/\/ But save a copy of the children since we'll need that in a moment\\n        $children = $this->children();\\n        $this->detachChildren();\\n\\n        \/\/ The original children get cloned and re-added\\n        foreach ($children as $child) {\\n            $this->appendChild(clone $child);\\n        }\\n    }\\n\\n    public static function assertInstanceOf(Node $node): void\\n    {\\n        if (! $node instanceof static) {\\n            throw new InvalidArgumentException(\\\\sprintf('Incompatible node type: expected %s, got %s', static::class, \\\\get_class($node)));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Query\/OrExpr.php\",\"ext\":\"php\",\"size\":1131,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Query;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\n\/**\\n * @internal\\n *\/\\nfinal class OrExpr implements ExpressionInterface\\n{\\n    \/**\\n     * @var callable[]\\n     * @psalm-var list<callable(Node): bool>\\n     *\/\\n    private array $conditions;\\n\\n    \/**\\n     * @psalm-param callable(Node): bool $expressions\\n     *\/\\n    public function __construct(callable ...$expressions)\\n    {\\n        $this->conditions = \\\\array_values($expressions);\\n    }\\n\\n    \/**\\n     * @param callable(Node): bool $expression\\n     *\/\\n    public function add(callable $expression): void\\n    {\\n        $this->conditions[] = $expression;\\n    }\\n\\n    public function __invoke(Node $node): bool\\n    {\\n        foreach ($this->conditions as $condition) {\\n            if ($condition($node)) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Query\/AndExpr.php\",\"ext\":\"php\",\"size\":1134,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Query;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\n\/**\\n * @internal\\n *\/\\nfinal class AndExpr implements ExpressionInterface\\n{\\n    \/**\\n     * @var callable[]\\n     * @psalm-var list<callable(Node): bool>\\n     *\/\\n    private array $conditions;\\n\\n    \/**\\n     * @psalm-param callable(Node): bool $expressions\\n     *\/\\n    public function __construct(callable ...$expressions)\\n    {\\n        $this->conditions = \\\\array_values($expressions);\\n    }\\n\\n    \/**\\n     * @param callable(Node): bool $expression\\n     *\/\\n    public function add(callable $expression): void\\n    {\\n        $this->conditions[] = $expression;\\n    }\\n\\n    public function __invoke(Node $node): bool\\n    {\\n        foreach ($this->conditions as $condition) {\\n            if (! $condition($node)) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/Query\/ExpressionInterface.php\",\"ext\":\"php\",\"size\":429,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node\\\\Query;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\ninterface ExpressionInterface\\n{\\n    public function __invoke(Node $node): bool;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Node\/NodeIterator.php\",\"ext\":\"php\",\"size\":1378,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\n\/**\\n * @implements \\\\IteratorAggregate<int, Node>\\n *\/\\nfinal class NodeIterator implements \\\\IteratorAggregate\\n{\\n    public const FLAG_BLOCKS_ONLY = 1;\\n\\n    private Node $node;\\n    private bool $blocksOnly;\\n\\n    public function __construct(Node $node, int $flags = 0)\\n    {\\n        $this->node       = $node;\\n        $this->blocksOnly = ($flags & self::FLAG_BLOCKS_ONLY) === self::FLAG_BLOCKS_ONLY;\\n    }\\n\\n    \/**\\n     * @return \\\\Generator<int, Node>\\n     *\/\\n    public function getIterator(): \\\\Generator\\n    {\\n        $stack = [$this->node];\\n        $index = 0;\\n\\n        while ($stack) {\\n            $node = \\\\array_pop($stack);\\n\\n            yield $index++ => $node;\\n\\n            \/\/ Push all children onto the stack in reverse order\\n            $child = $node->lastChild();\\n            while ($child !== null) {\\n                if (! $this->blocksOnly || $child instanceof AbstractBlock) {\\n                    $stack[] = $child;\\n                }\\n\\n                $child = $child->previous();\\n            }\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/ConverterInterface.php\",\"ext\":\"php\",\"size\":787,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\nuse League\\\\Config\\\\Exception\\\\ConfigurationExceptionInterface;\\n\\n\/**\\n * Interface for a service which converts content from one format (like Markdown) to another (like HTML).\\n *\/\\ninterface ConverterInterface\\n{\\n    \/**\\n     * @throws CommonMarkException\\n     * @throws ConfigurationExceptionInterface\\n     *\/\\n    public function convert(string $input): RenderedContentInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/GithubFlavoredMarkdownConverter.php\",\"ext\":\"php\",\"size\":1197,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\Environment;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\CommonMarkCoreExtension;\\nuse League\\\\CommonMark\\\\Extension\\\\GithubFlavoredMarkdownExtension;\\n\\n\/**\\n * Converts GitHub Flavored Markdown to HTML.\\n *\/\\nfinal class GithubFlavoredMarkdownConverter extends MarkdownConverter\\n{\\n    \/**\\n     * Create a new Markdown converter pre-configured for GFM\\n     *\\n     * @param array<string, mixed> $config\\n     *\/\\n    public function __construct(array $config = [])\\n    {\\n        $environment = new Environment($config);\\n        $environment->addExtension(new CommonMarkCoreExtension());\\n        $environment->addExtension(new GithubFlavoredMarkdownExtension());\\n\\n        parent::__construct($environment);\\n    }\\n\\n    public function getEnvironment(): Environment\\n    {\\n        \\\\assert($this->environment instanceof Environment);\\n\\n        return $this->environment;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Output\/RenderedContentInterface.php\",\"ext\":\"php\",\"size\":588,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Output;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\ninterface RenderedContentInterface extends \\\\Stringable\\n{\\n    \/**\\n     * @psalm-mutation-free\\n     *\/\\n    public function getDocument(): Document;\\n\\n    \/**\\n     * @psalm-mutation-free\\n     *\/\\n    public function getContent(): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Output\/RenderedContent.php\",\"ext\":\"php\",\"size\":1002,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Output;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\nclass RenderedContent implements RenderedContentInterface, \\\\Stringable\\n{\\n    \/** @psalm-readonly *\/\\n    private Document $document;\\n\\n    \/** @psalm-readonly *\/\\n    private string $content;\\n\\n    public function __construct(Document $document, string $content)\\n    {\\n        $this->document = $document;\\n        $this->content  = $content;\\n    }\\n\\n    public function getDocument(): Document\\n    {\\n        return $this->document;\\n    }\\n\\n    public function getContent(): string\\n    {\\n        return $this->content;\\n    }\\n\\n    \/**\\n     * @psalm-mutation-free\\n     *\/\\n    public function __toString(): string\\n    {\\n        return $this->content;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DisallowedRawHtml\/DisallowedRawHtmlRenderer.php\",\"ext\":\"php\",\"size\":1923,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DisallowedRawHtml;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class DisallowedRawHtmlRenderer implements NodeRendererInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private NodeRendererInterface $innerRenderer;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    public function __construct(NodeRendererInterface $innerRenderer)\\n    {\\n        $this->innerRenderer = $innerRenderer;\\n    }\\n\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): ?string\\n    {\\n        $rendered = (string) $this->innerRenderer->render($node, $childRenderer);\\n\\n        if ($rendered === '') {\\n            return '';\\n        }\\n\\n        $tags = (array) $this->config->get('disallowed_raw_html\/disallowed_tags');\\n        if (\\\\count($tags) === 0) {\\n            return $rendered;\\n        }\\n\\n        $regex = \\\\sprintf('\/<(\\\\\/?(?:%s)[ \\\\\/>])\/i', \\\\implode('|', \\\\array_map('preg_quote', $tags)));\\n\\n        \/\/ Match these types of tags: <title> <\/title> <title x=\\\"sdf\\\"> <title\/> <title \/>\\n        return \\\\preg_replace($regex, '&lt;$1', $rendered);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n\\n        if ($this->innerRenderer instanceof ConfigurationAwareInterface) {\\n            $this->innerRenderer->setConfiguration($configuration);\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DisallowedRawHtml\/DisallowedRawHtmlExtension.php\",\"ext\":\"php\",\"size\":1741,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DisallowedRawHtml;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\HtmlInline;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block\\\\HtmlBlockRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline\\\\HtmlInlineRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class DisallowedRawHtmlExtension implements ConfigurableExtensionInterface\\n{\\n    private const DEFAULT_DISALLOWED_TAGS = [\\n        'title',\\n        'textarea',\\n        'style',\\n        'xmp',\\n        'iframe',\\n        'noembed',\\n        'noframes',\\n        'script',\\n        'plaintext',\\n    ];\\n\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('disallowed_raw_html', Expect::structure([\\n            'disallowed_tags' => Expect::listOf('string')->default(self::DEFAULT_DISALLOWED_TAGS)->mergeDefaults(false),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addRenderer(HtmlBlock::class, new DisallowedRawHtmlRenderer(new HtmlBlockRenderer()), 50);\\n        $environment->addRenderer(HtmlInline::class, new DisallowedRawHtmlRenderer(new HtmlInlineRenderer()), 50);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsRenderer.php\",\"ext\":\"php\",\"size\":1523,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TableOfContentsRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/** @var NodeRendererInterface&XmlNodeRendererInterface *\/\\n    private $innerRenderer;\\n\\n    \/**\\n     * @psalm-param NodeRendererInterface&XmlNodeRendererInterface $innerRenderer\\n     *\\n     * @phpstan-param NodeRendererInterface&XmlNodeRendererInterface $innerRenderer\\n     *\/\\n    public function __construct(NodeRendererInterface $innerRenderer)\\n    {\\n        $this->innerRenderer = $innerRenderer;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer)\\n    {\\n        return $this->innerRenderer->render($node, $childRenderer);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'table_of_contents';\\n    }\\n\\n    \/**\\n     * @return array<string, scalar>\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return $this->innerRenderer->getXmlAttributes($node);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsPlaceholderRenderer.php\",\"ext\":\"php\",\"size\":1040,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TableOfContentsPlaceholderRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        return '<!-- table of contents -->';\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'table_of_contents_placeholder';\\n    }\\n\\n    \/**\\n     * @return array<string, scalar>\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsGenerator.php\",\"ext\":\"php\",\"size\":6072,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListData;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Extension\\\\HeadingPermalink\\\\HeadingPermalink;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer\\\\AsIsNormalizerStrategy;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer\\\\FlatNormalizerStrategy;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer\\\\NormalizerStrategyInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer\\\\RelativeNormalizerStrategy;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\nuse League\\\\CommonMark\\\\Node\\\\RawMarkupContainerInterface;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerHelper;\\nuse League\\\\Config\\\\Exception\\\\InvalidConfigurationException;\\n\\nfinal class TableOfContentsGenerator implements TableOfContentsGeneratorInterface\\n{\\n    public const STYLE_BULLET  = ListBlock::TYPE_BULLET;\\n    public const STYLE_ORDERED = ListBlock::TYPE_ORDERED;\\n\\n    public const NORMALIZE_DISABLED = 'as-is';\\n    public const NORMALIZE_RELATIVE = 'relative';\\n    public const NORMALIZE_FLAT     = 'flat';\\n\\n    \/** @psalm-readonly *\/\\n    private string $style;\\n\\n    \/** @psalm-readonly *\/\\n    private string $normalizationStrategy;\\n\\n    \/** @psalm-readonly *\/\\n    private int $minHeadingLevel;\\n\\n    \/** @psalm-readonly *\/\\n    private int $maxHeadingLevel;\\n\\n    \/** @psalm-readonly *\/\\n    private string $fragmentPrefix;\\n\\n    public function __construct(string $style, string $normalizationStrategy, int $minHeadingLevel, int $maxHeadingLevel, string $fragmentPrefix)\\n    {\\n        $this->style                 = $style;\\n        $this->normalizationStrategy = $normalizationStrategy;\\n        $this->minHeadingLevel       = $minHeadingLevel;\\n        $this->maxHeadingLevel       = $maxHeadingLevel;\\n        $this->fragmentPrefix        = $fragmentPrefix;\\n\\n        if ($fragmentPrefix !== '') {\\n            $this->fragmentPrefix .= '-';\\n        }\\n    }\\n\\n    public function generate(Document $document): ?TableOfContents\\n    {\\n        $toc = $this->createToc($document);\\n\\n        $normalizer = $this->getNormalizer($toc);\\n\\n        $firstHeading = null;\\n\\n        foreach ($this->getHeadingLinks($document) as $headingLink) {\\n            $heading = $headingLink->parent();\\n            \/\/ Make sure this is actually tied to a heading\\n            if (! $heading instanceof Heading) {\\n                continue;\\n            }\\n\\n            \/\/ Skip any headings outside the configured min\/max levels\\n            if ($heading->getLevel() < $this->minHeadingLevel || $heading->getLevel() > $this->maxHeadingLevel) {\\n                continue;\\n            }\\n\\n            \/\/ Keep track of the first heading we see - we might need this later\\n            $firstHeading ??= $heading;\\n\\n            \/\/ Keep track of the start and end lines\\n            $toc->setStartLine($firstHeading->getStartLine());\\n            $toc->setEndLine($heading->getEndLine());\\n\\n            \/\/ Create the new link\\n            $link = new Link('#' . $this->fragmentPrefix . $headingLink->getSlug(), StringContainerHelper::getChildText($heading, [RawMarkupContainerInterface::class]));\\n\\n            $listItem = new ListItem($toc->getListData());\\n            $listItem->setStartLine($heading->getStartLine());\\n            $listItem->setEndLine($heading->getEndLine());\\n            $listItem->appendChild($link);\\n\\n            \/\/ Add it to the correct place\\n            $normalizer->addItem($heading->getLevel(), $listItem);\\n        }\\n\\n        \/\/ Don't add the TOC if no headings were present\\n        if (! $toc->hasChildren() || $firstHeading === null) {\\n            return null;\\n        }\\n\\n        return $toc;\\n    }\\n\\n    private function createToc(Document $document): TableOfContents\\n    {\\n        $listData = new ListData();\\n\\n        if ($this->style === self::STYLE_BULLET) {\\n            $listData->type = ListBlock::TYPE_BULLET;\\n        } elseif ($this->style === self::STYLE_ORDERED) {\\n            $listData->type = ListBlock::TYPE_ORDERED;\\n        } else {\\n            throw new InvalidConfigurationException(\\\\sprintf('Invalid table of contents list style: \\\"%s\\\"', $this->style));\\n        }\\n\\n        $toc = new TableOfContents($listData);\\n\\n        $toc->setStartLine($document->getStartLine());\\n        $toc->setEndLine($document->getEndLine());\\n\\n        return $toc;\\n    }\\n\\n    \/**\\n     * @return iterable<HeadingPermalink>\\n     *\/\\n    private function getHeadingLinks(Document $document): iterable\\n    {\\n        foreach ($document->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $node) {\\n            if (! $node instanceof Heading) {\\n                continue;\\n            }\\n\\n            foreach ($node->children() as $child) {\\n                if ($child instanceof HeadingPermalink) {\\n                    yield $child;\\n                }\\n            }\\n        }\\n    }\\n\\n    private function getNormalizer(TableOfContents $toc): NormalizerStrategyInterface\\n    {\\n        switch ($this->normalizationStrategy) {\\n            case self::NORMALIZE_DISABLED:\\n                return new AsIsNormalizerStrategy($toc);\\n            case self::NORMALIZE_RELATIVE:\\n                return new RelativeNormalizerStrategy($toc);\\n            case self::NORMALIZE_FLAT:\\n                return new FlatNormalizerStrategy($toc);\\n            default:\\n                throw new InvalidConfigurationException(\\\\sprintf('Invalid table of contents normalization strategy: \\\"%s\\\"', $this->normalizationStrategy));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsBuilder.php\",\"ext\":\"php\",\"size\":3828,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading;\\nuse League\\\\CommonMark\\\\Extension\\\\HeadingPermalink\\\\HeadingPermalink;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContentsPlaceholder;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\nuse League\\\\Config\\\\Exception\\\\InvalidConfigurationException;\\n\\nfinal class TableOfContentsBuilder implements ConfigurationAwareInterface\\n{\\n    public const POSITION_TOP             = 'top';\\n    public const POSITION_BEFORE_HEADINGS = 'before-headings';\\n    public const POSITION_PLACEHOLDER     = 'placeholder';\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    public function onDocumentParsed(DocumentParsedEvent $event): void\\n    {\\n        $document = $event->getDocument();\\n\\n        $generator = new TableOfContentsGenerator(\\n            (string) $this->config->get('table_of_contents\/style'),\\n            (string) $this->config->get('table_of_contents\/normalize'),\\n            (int) $this->config->get('table_of_contents\/min_heading_level'),\\n            (int) $this->config->get('table_of_contents\/max_heading_level'),\\n            (string) $this->config->get('heading_permalink\/fragment_prefix'),\\n        );\\n\\n        $toc = $generator->generate($document);\\n        if ($toc === null) {\\n            \/\/ No linkable headers exist, so no TOC could be generated\\n            return;\\n        }\\n\\n        \/\/ Add custom CSS class(es), if defined\\n        $class = $this->config->get('table_of_contents\/html_class');\\n        if ($class !== null) {\\n            $toc->data->append('attributes\/class', $class);\\n        }\\n\\n        \/\/ Add the TOC to the Document\\n        $position = $this->config->get('table_of_contents\/position');\\n        if ($position === self::POSITION_TOP) {\\n            $document->prependChild($toc);\\n        } elseif ($position === self::POSITION_BEFORE_HEADINGS) {\\n            $this->insertBeforeFirstLinkedHeading($document, $toc);\\n        } elseif ($position === self::POSITION_PLACEHOLDER) {\\n            $this->replacePlaceholders($document, $toc);\\n        } else {\\n            throw InvalidConfigurationException::forConfigOption('table_of_contents\/position', $position);\\n        }\\n    }\\n\\n    private function insertBeforeFirstLinkedHeading(Document $document, TableOfContents $toc): void\\n    {\\n        foreach ($document->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $node) {\\n            if (! $node instanceof Heading) {\\n                continue;\\n            }\\n\\n            foreach ($node->children() as $child) {\\n                if ($child instanceof HeadingPermalink) {\\n                    $node->insertBefore($toc);\\n\\n                    return;\\n                }\\n            }\\n        }\\n    }\\n\\n    private function replacePlaceholders(Document $document, TableOfContents $toc): void\\n    {\\n        foreach ($document->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $node) {\\n            \/\/ Add the block once we find a placeholder\\n            if (! $node instanceof TableOfContentsPlaceholder) {\\n                continue;\\n            }\\n\\n            $node->replaceWith(clone $toc);\\n        }\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsPlaceholderParser.php\",\"ext\":\"php\",\"size\":2535,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContentsPlaceholder;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class TableOfContentsPlaceholderParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private TableOfContentsPlaceholder $block;\\n\\n    public function __construct()\\n    {\\n        $this->block = new TableOfContentsPlaceholder();\\n    }\\n\\n    public function getBlock(): TableOfContentsPlaceholder\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        return BlockContinue::none();\\n    }\\n\\n    public static function blockStartParser(): BlockStartParserInterface\\n    {\\n        return new class () implements BlockStartParserInterface, ConfigurationAwareInterface {\\n            \/** @psalm-readonly-allow-private-mutation *\/\\n            private ConfigurationInterface $config;\\n\\n            public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n            {\\n                $placeholder = $this->config->get('table_of_contents\/placeholder');\\n                if ($placeholder === null) {\\n                    return BlockStart::none();\\n                }\\n\\n                \/\/ The placeholder must be the only thing on the line\\n                if ($cursor->match('\/^' . \\\\preg_quote($placeholder, '\/') . '$\/') === null) {\\n                    return BlockStart::none();\\n                }\\n\\n                return BlockStart::of(new TableOfContentsPlaceholderParser())->at($cursor);\\n            }\\n\\n            public function setConfiguration(ConfigurationInterface $configuration): void\\n            {\\n                $this->config = $configuration;\\n            }\\n        };\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsGeneratorInterface.php\",\"ext\":\"php\",\"size\":558,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\ninterface TableOfContentsGeneratorInterface\\n{\\n    public function generate(Document $document): ?TableOfContents;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/Normalizer\/AsIsNormalizerStrategy.php\",\"ext\":\"php\",\"size\":2405,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\n\\nfinal class AsIsNormalizerStrategy implements NormalizerStrategyInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ListBlock $parentListBlock;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private int $parentLevel = 1;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?ListItem $lastListItem = null;\\n\\n    public function __construct(TableOfContents $toc)\\n    {\\n        $this->parentListBlock = $toc;\\n    }\\n\\n    public function addItem(int $level, ListItem $listItemToAdd): void\\n    {\\n        while ($level > $this->parentLevel) {\\n            \/\/ Descend downwards, creating new ListBlocks if needed, until we reach the correct depth\\n            if ($this->lastListItem === null) {\\n                $this->lastListItem = new ListItem($this->parentListBlock->getListData());\\n                $this->parentListBlock->appendChild($this->lastListItem);\\n            }\\n\\n            $newListBlock = new ListBlock($this->parentListBlock->getListData());\\n            $newListBlock->setStartLine($listItemToAdd->getStartLine());\\n            $newListBlock->setEndLine($listItemToAdd->getEndLine());\\n            $this->lastListItem->appendChild($newListBlock);\\n            $this->parentListBlock = $newListBlock;\\n            $this->lastListItem    = null;\\n\\n            $this->parentLevel++;\\n        }\\n\\n        while ($level < $this->parentLevel) {\\n            \/\/ Search upwards for the previous parent list block\\n            $search = $this->parentListBlock;\\n            while ($search = $search->parent()) {\\n                if ($search instanceof ListBlock) {\\n                    $this->parentListBlock = $search;\\n                    break;\\n                }\\n            }\\n\\n            $this->parentLevel--;\\n        }\\n\\n        $this->parentListBlock->appendChild($listItemToAdd);\\n\\n        $this->lastListItem = $listItemToAdd;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/Normalizer\/RelativeNormalizerStrategy.php\",\"ext\":\"php\",\"size\":2220,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\n\\nfinal class RelativeNormalizerStrategy implements NormalizerStrategyInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private TableOfContents $toc;\\n\\n    \/**\\n     * @var array<int, ListItem>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $listItemStack = [];\\n\\n    public function __construct(TableOfContents $toc)\\n    {\\n        $this->toc = $toc;\\n    }\\n\\n    public function addItem(int $level, ListItem $listItemToAdd): void\\n    {\\n        $previousLevel = \\\\array_key_last($this->listItemStack);\\n\\n        \/\/ Pop the stack if we're too deep\\n        while ($previousLevel !== null && $level < $previousLevel) {\\n            \\\\array_pop($this->listItemStack);\\n            $previousLevel = \\\\array_key_last($this->listItemStack);\\n        }\\n\\n        $lastListItem = \\\\end($this->listItemStack);\\n\\n        \/\/ Need to go one level deeper? Add that level\\n        if ($lastListItem !== false && $level > $previousLevel) {\\n            $targetListBlock = new ListBlock($lastListItem->getListData());\\n            $targetListBlock->setStartLine($listItemToAdd->getStartLine());\\n            $targetListBlock->setEndLine($listItemToAdd->getEndLine());\\n            $lastListItem->appendChild($targetListBlock);\\n        \/\/ Otherwise we're at the right level\\n        \/\/ If there's no stack we're adding this item directly to the TOC element\\n        } elseif ($lastListItem === false) {\\n            $targetListBlock = $this->toc;\\n        \/\/ Otherwise add it to the last list item\\n        } else {\\n            $targetListBlock = $lastListItem->parent();\\n        }\\n\\n        $targetListBlock->appendChild($listItemToAdd);\\n        $this->listItemStack[$level] = $listItemToAdd;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/Normalizer\/NormalizerStrategyInterface.php\",\"ext\":\"php\",\"size\":518,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\n\\ninterface NormalizerStrategyInterface\\n{\\n    public function addItem(int $level, ListItem $listItemToAdd): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/Normalizer\/FlatNormalizerStrategy.php\",\"ext\":\"php\",\"size\":840,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Normalizer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\n\\nfinal class FlatNormalizerStrategy implements NormalizerStrategyInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private TableOfContents $toc;\\n\\n    public function __construct(TableOfContents $toc)\\n    {\\n        $this->toc = $toc;\\n    }\\n\\n    public function addItem(int $level, ListItem $listItemToAdd): void\\n    {\\n        $this->toc->appendChild($listItemToAdd);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/Node\/TableOfContents.php\",\"ext\":\"php\",\"size\":449,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\n\\nfinal class TableOfContents extends ListBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/Node\/TableOfContentsPlaceholder.php\",\"ext\":\"php\",\"size\":447,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class TableOfContentsPlaceholder extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TableOfContents\/TableOfContentsExtension.php\",\"ext\":\"php\",\"size\":2938,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TableOfContents;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block\\\\ListBlockRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContents;\\nuse League\\\\CommonMark\\\\Extension\\\\TableOfContents\\\\Node\\\\TableOfContentsPlaceholder;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class TableOfContentsExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('table_of_contents', Expect::structure([\\n            'position' => Expect::anyOf(TableOfContentsBuilder::POSITION_BEFORE_HEADINGS, TableOfContentsBuilder::POSITION_PLACEHOLDER, TableOfContentsBuilder::POSITION_TOP)->default(TableOfContentsBuilder::POSITION_TOP),\\n            'style' => Expect::anyOf(ListBlock::TYPE_BULLET, ListBlock::TYPE_ORDERED)->default(ListBlock::TYPE_BULLET),\\n            'normalize' => Expect::anyOf(TableOfContentsGenerator::NORMALIZE_RELATIVE, TableOfContentsGenerator::NORMALIZE_FLAT, TableOfContentsGenerator::NORMALIZE_DISABLED)->default(TableOfContentsGenerator::NORMALIZE_RELATIVE),\\n            'min_heading_level' => Expect::int()->min(1)->max(6)->default(1),\\n            'max_heading_level' => Expect::int()->min(1)->max(6)->default(6),\\n            'html_class' => Expect::string()->default('table-of-contents'),\\n            'placeholder' => Expect::anyOf(Expect::string(), Expect::null())->default(null),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addRenderer(TableOfContents::class, new TableOfContentsRenderer(new ListBlockRenderer()));\\n        $environment->addEventListener(DocumentParsedEvent::class, [new TableOfContentsBuilder(), 'onDocumentParsed'], -150);\\n\\n        \/\/ phpcs:ignore SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed\\n        if ($environment->getConfiguration()->get('table_of_contents\/position') === TableOfContentsBuilder::POSITION_PLACEHOLDER) {\\n            $environment->addBlockStartParser(TableOfContentsPlaceholderParser::blockStartParser(), 200);\\n            \/\/ If a placeholder cannot be replaced with a TOC element this renderer will ensure the parser won't error out\\n            $environment->addRenderer(TableOfContentsPlaceholder::class, new TableOfContentsPlaceholderRenderer());\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/GithubFlavoredMarkdownExtension.php\",\"ext\":\"php\",\"size\":1181,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\Autolink\\\\AutolinkExtension;\\nuse League\\\\CommonMark\\\\Extension\\\\DisallowedRawHtml\\\\DisallowedRawHtmlExtension;\\nuse League\\\\CommonMark\\\\Extension\\\\Strikethrough\\\\StrikethroughExtension;\\nuse League\\\\CommonMark\\\\Extension\\\\Table\\\\TableExtension;\\nuse League\\\\CommonMark\\\\Extension\\\\TaskList\\\\TaskListExtension;\\n\\nfinal class GithubFlavoredMarkdownExtension implements ExtensionInterface\\n{\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addExtension(new AutolinkExtension());\\n        $environment->addExtension(new DisallowedRawHtmlExtension());\\n        $environment->addExtension(new StrikethroughExtension());\\n        $environment->addExtension(new TableExtension());\\n        $environment->addExtension(new TaskListExtension());\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/ExtensionInterface.php\",\"ext\":\"php\",\"size\":611,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\n\\ninterface ExtensionInterface\\n{\\n    public function register(EnvironmentBuilderInterface $environment): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DefaultAttributes\/ApplyDefaultAttributesProcessor.php\",\"ext\":\"php\",\"size\":2127,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DefaultAttributes;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util\\\\AttributesHelper;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class ApplyDefaultAttributesProcessor implements ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    public function onDocumentParsed(DocumentParsedEvent $event): void\\n    {\\n        \/** @var array<string, array<string, mixed>> $map *\/\\n        $map = $this->config->get('default_attributes');\\n\\n        \/\/ Don't bother iterating if no default attributes are configured\\n        if (! $map) {\\n            return;\\n        }\\n\\n        foreach ($event->getDocument()->iterator() as $node) {\\n            \/\/ Check to see if any default attributes were defined\\n            if (($attributesToApply = $map[\\\\get_class($node)] ?? []) === []) {\\n                continue;\\n            }\\n\\n            $newAttributes = [];\\n            foreach ($attributesToApply as $name => $value) {\\n                if (\\\\is_callable($value)) {\\n                    $value = $value($node);\\n                    \/\/ Callables are allowed to return `null` indicating that no changes should be made\\n                    if ($value !== null) {\\n                        $newAttributes[$name] = $value;\\n                    }\\n                } else {\\n                    $newAttributes[$name] = $value;\\n                }\\n            }\\n\\n            \/\/ Merge these attributes into the node\\n            if (\\\\count($newAttributes) > 0) {\\n                $node->data->set('attributes', AttributesHelper::mergeAttributes($node, $newAttributes));\\n            }\\n        }\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DefaultAttributes\/DefaultAttributesExtension.php\",\"ext\":\"php\",\"size\":1277,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DefaultAttributes;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class DefaultAttributesExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('default_attributes', Expect::arrayOf(\\n            Expect::arrayOf(\\n                Expect::type('string|string[]|bool|callable'), \/\/ attribute value(s)\\n                'string' \/\/ attribute name\\n            ),\\n            'string' \/\/ node FQCN\\n        )->default([]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addEventListener(DocumentParsedEvent::class, [new ApplyDefaultAttributesProcessor(), 'onDocumentParsed']);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/ExternalLink\/ExternalLinkExtension.php\",\"ext\":\"php\",\"size\":1785,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\ExternalLink;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class ExternalLinkExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $applyOptions = [\\n            ExternalLinkProcessor::APPLY_NONE,\\n            ExternalLinkProcessor::APPLY_ALL,\\n            ExternalLinkProcessor::APPLY_INTERNAL,\\n            ExternalLinkProcessor::APPLY_EXTERNAL,\\n        ];\\n\\n        $builder->addSchema('external_link', Expect::structure([\\n            'internal_hosts' => Expect::type('string|string[]'),\\n            'open_in_new_window' => Expect::bool(false),\\n            'html_class' => Expect::string()->default(''),\\n            'nofollow' => Expect::anyOf(...$applyOptions)->default(ExternalLinkProcessor::APPLY_NONE),\\n            'noopener' => Expect::anyOf(...$applyOptions)->default(ExternalLinkProcessor::APPLY_EXTERNAL),\\n            'noreferrer' => Expect::anyOf(...$applyOptions)->default(ExternalLinkProcessor::APPLY_EXTERNAL),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addEventListener(DocumentParsedEvent::class, new ExternalLinkProcessor($environment->getConfiguration()), -50);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/ExternalLink\/ExternalLinkProcessor.php\",\"ext\":\"php\",\"size\":3779,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\ExternalLink;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class ExternalLinkProcessor\\n{\\n    public const APPLY_NONE     = '';\\n    public const APPLY_ALL      = 'all';\\n    public const APPLY_EXTERNAL = 'external';\\n    public const APPLY_INTERNAL = 'internal';\\n\\n    \/** @psalm-readonly *\/\\n    private ConfigurationInterface $config;\\n\\n    public function __construct(ConfigurationInterface $config)\\n    {\\n        $this->config = $config;\\n    }\\n\\n    public function __invoke(DocumentParsedEvent $e): void\\n    {\\n        $internalHosts   = $this->config->get('external_link\/internal_hosts');\\n        $openInNewWindow = $this->config->get('external_link\/open_in_new_window');\\n        $classes         = $this->config->get('external_link\/html_class');\\n\\n        foreach ($e->getDocument()->iterator() as $link) {\\n            if (! ($link instanceof Link)) {\\n                continue;\\n            }\\n\\n            $host = \\\\parse_url($link->getUrl(), PHP_URL_HOST);\\n            if (! \\\\is_string($host)) {\\n                \/\/ Something is terribly wrong with this URL\\n                continue;\\n            }\\n\\n            if (self::hostMatches($host, $internalHosts)) {\\n                $link->data->set('external', false);\\n                $this->applyRelAttribute($link, false);\\n                continue;\\n            }\\n\\n            \/\/ Host does not match our list\\n            $this->markLinkAsExternal($link, $openInNewWindow, $classes);\\n        }\\n    }\\n\\n    private function markLinkAsExternal(Link $link, bool $openInNewWindow, string $classes): void\\n    {\\n        $link->data->set('external', true);\\n        $this->applyRelAttribute($link, true);\\n\\n        if ($openInNewWindow) {\\n            $link->data->set('attributes\/target', '_blank');\\n        }\\n\\n        if ($classes !== '') {\\n            $link->data->append('attributes\/class', $classes);\\n        }\\n    }\\n\\n    private function applyRelAttribute(Link $link, bool $isExternal): void\\n    {\\n        $options = [\\n            'nofollow'   => $this->config->get('external_link\/nofollow'),\\n            'noopener'   => $this->config->get('external_link\/noopener'),\\n            'noreferrer' => $this->config->get('external_link\/noreferrer'),\\n        ];\\n\\n        foreach ($options as $type => $option) {\\n            switch (true) {\\n                case $option === self::APPLY_ALL:\\n                case $isExternal && $option === self::APPLY_EXTERNAL:\\n                case ! $isExternal && $option === self::APPLY_INTERNAL:\\n                    $link->data->append('attributes\/rel', $type);\\n            }\\n        }\\n\\n        \/\/ No rel attributes? Mark the attribute as 'false' so LinkRenderer doesn't add defaults\\n        if (! $link->data->has('attributes\/rel')) {\\n            $link->data->set('attributes\/rel', false);\\n        }\\n    }\\n\\n    \/**\\n     * @internal This method is only public so we can easily test it. DO NOT USE THIS OUTSIDE OF THIS EXTENSION!\\n     *\\n     * @param non-empty-string|list<non-empty-string> $compareTo\\n     *\/\\n    public static function hostMatches(string $host, $compareTo): bool\\n    {\\n        foreach ((array) $compareTo as $c) {\\n            if (\\\\strpos($c, '\/') === 0) {\\n                if (\\\\preg_match($c, $host)) {\\n                    return true;\\n                }\\n            } elseif ($c === $host) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Data\/SymfonyYamlFrontMatterParser.php\",\"ext\":\"php\",\"size\":1121,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\MissingDependencyException;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Exception\\\\InvalidFrontMatterException;\\nuse Symfony\\\\Component\\\\Yaml\\\\Exception\\\\ParseException;\\nuse Symfony\\\\Component\\\\Yaml\\\\Yaml;\\n\\nfinal class SymfonyYamlFrontMatterParser implements FrontMatterDataParserInterface\\n{\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function parse(string $frontMatter)\\n    {\\n        if (! \\\\class_exists(Yaml::class)) {\\n            throw new MissingDependencyException('Failed to parse yaml: \\\"symfony\/yaml\\\" library is missing');\\n        }\\n\\n        try {\\n            \/** @psalm-suppress ReservedWord *\/\\n            return Yaml::parse($frontMatter);\\n        } catch (ParseException $ex) {\\n            throw InvalidFrontMatterException::wrap($ex);\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Data\/LibYamlFrontMatterParser.php\",\"ext\":\"php\",\"size\":1214,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\MissingDependencyException;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Exception\\\\InvalidFrontMatterException;\\n\\nfinal class LibYamlFrontMatterParser implements FrontMatterDataParserInterface\\n{\\n    public static function capable(): ?LibYamlFrontMatterParser\\n    {\\n        if (! \\\\extension_loaded('yaml')) {\\n            return null;\\n        }\\n\\n        return new LibYamlFrontMatterParser();\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function parse(string $frontMatter)\\n    {\\n        if (! \\\\extension_loaded('yaml')) {\\n            throw new MissingDependencyException('Failed to parse yaml: \\\"ext-yaml\\\" extension is missing');\\n        }\\n\\n        $result = @\\\\yaml_parse($frontMatter);\\n\\n        if ($result === false) {\\n            throw new InvalidFrontMatterException('Failed to parse front matter');\\n        }\\n\\n        return $result;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Data\/FrontMatterDataParserInterface.php\",\"ext\":\"php\",\"size\":689,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Exception\\\\InvalidFrontMatterException;\\n\\ninterface FrontMatterDataParserInterface\\n{\\n    \/**\\n     * @return mixed|null The parsed data (which may be null, if the input represents a null value)\\n     *\\n     * @throws InvalidFrontMatterException if parsing fails\\n     *\/\\n    public function parse(string $frontMatter);\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Input\/MarkdownInputWithFrontMatter.php\",\"ext\":\"php\",\"size\":1186,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Input;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\FrontMatterProviderInterface;\\nuse League\\\\CommonMark\\\\Input\\\\MarkdownInput;\\n\\nfinal class MarkdownInputWithFrontMatter extends MarkdownInput implements FrontMatterProviderInterface\\n{\\n    \/** @var mixed|null *\/\\n    private $frontMatter;\\n\\n    \/**\\n     * @param string     $content     Markdown content without the raw front matter\\n     * @param int        $lineOffset  Line offset (based on number of front matter lines removed)\\n     * @param mixed|null $frontMatter Parsed front matter\\n     *\/\\n    public function __construct(string $content, int $lineOffset = 0, $frontMatter = null)\\n    {\\n        parent::__construct($content, $lineOffset);\\n\\n        $this->frontMatter = $frontMatter;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getFrontMatter()\\n    {\\n        return $this->frontMatter;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/FrontMatterParser.php\",\"ext\":\"php\",\"size\":2343,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data\\\\FrontMatterDataParserInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Exception\\\\InvalidFrontMatterException;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Input\\\\MarkdownInputWithFrontMatter;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class FrontMatterParser implements FrontMatterParserInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private FrontMatterDataParserInterface $frontMatterParser;\\n\\n    private const REGEX_FRONT_MATTER = '\/^---\\\\\\\\R.*?\\\\\\\\R---\\\\\\\\R\/s';\\n\\n    public function __construct(FrontMatterDataParserInterface $frontMatterParser)\\n    {\\n        $this->frontMatterParser = $frontMatterParser;\\n    }\\n\\n    \/**\\n     * @throws InvalidFrontMatterException if the front matter cannot be parsed\\n     *\/\\n    public function parse(string $markdownContent): MarkdownInputWithFrontMatter\\n    {\\n        $cursor = new Cursor($markdownContent);\\n\\n        \/\/ Locate the front matter\\n        $frontMatter = $cursor->match(self::REGEX_FRONT_MATTER);\\n        if ($frontMatter === null) {\\n            return new MarkdownInputWithFrontMatter($markdownContent);\\n        }\\n\\n        \/\/ Trim the last line (ending ---s and newline)\\n        $frontMatter = \\\\preg_replace('\/---\\\\R$\/', '', $frontMatter);\\n        if ($frontMatter === null) {\\n            return new MarkdownInputWithFrontMatter($markdownContent);\\n        }\\n\\n        \/\/ Parse the resulting YAML data\\n        $data = $this->frontMatterParser->parse($frontMatter);\\n\\n        \/\/ Advance through any remaining newlines which separated the front matter from the Markdown text\\n        $trailingNewlines = $cursor->match('\/^\\\\R+\/');\\n\\n        \/\/ Calculate how many lines the Markdown is offset from the front matter by counting the number of newlines\\n        \/\/ Don't forget to add 1 because we stripped one out when trimming the trailing delims\\n        $lineOffset = \\\\preg_match_all('\/\\\\R\/', $frontMatter . $trailingNewlines) + 1;\\n\\n        return new MarkdownInputWithFrontMatter($cursor->getRemainder(), $lineOffset, $data);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/FrontMatterParserInterface.php\",\"ext\":\"php\",\"size\":528,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Input\\\\MarkdownInputWithFrontMatter;\\n\\ninterface FrontMatterParserInterface\\n{\\n    public function parse(string $markdownContent): MarkdownInputWithFrontMatter;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Listener\/FrontMatterPreParser.php\",\"ext\":\"php\",\"size\":971,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Listener;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentPreParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\FrontMatterParserInterface;\\n\\nfinal class FrontMatterPreParser\\n{\\n    private FrontMatterParserInterface $parser;\\n\\n    public function __construct(FrontMatterParserInterface $parser)\\n    {\\n        $this->parser = $parser;\\n    }\\n\\n    public function __invoke(DocumentPreParsedEvent $event): void\\n    {\\n        $content = $event->getMarkdown()->getContent();\\n\\n        $parsed = $this->parser->parse($content);\\n\\n        $event->getDocument()->data->set('front_matter', $parsed->getFrontMatter());\\n        $event->replaceMarkdown($parsed);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Listener\/FrontMatterPostRenderListener.php\",\"ext\":\"php\",\"size\":999,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Listener;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentRenderedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Output\\\\RenderedContentWithFrontMatter;\\n\\nfinal class FrontMatterPostRenderListener\\n{\\n    public function __invoke(DocumentRenderedEvent $event): void\\n    {\\n        if ($event->getOutput()->getDocument()->data->get('front_matter', null) === null) {\\n            return;\\n        }\\n\\n        $frontMatter = $event->getOutput()->getDocument()->data->get('front_matter');\\n\\n        $event->replaceOutput(new RenderedContentWithFrontMatter(\\n            $event->getOutput()->getDocument(),\\n            $event->getOutput()->getContent(),\\n            $frontMatter\\n        ));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/FrontMatterExtension.php\",\"ext\":\"php\",\"size\":1786,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentPreParsedEvent;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentRenderedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data\\\\FrontMatterDataParserInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data\\\\LibYamlFrontMatterParser;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Data\\\\SymfonyYamlFrontMatterParser;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Listener\\\\FrontMatterPostRenderListener;\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Listener\\\\FrontMatterPreParser;\\n\\nfinal class FrontMatterExtension implements ExtensionInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private FrontMatterParserInterface $frontMatterParser;\\n\\n    public function __construct(?FrontMatterDataParserInterface $dataParser = null)\\n    {\\n        $this->frontMatterParser = new FrontMatterParser($dataParser ?? LibYamlFrontMatterParser::capable() ?? new SymfonyYamlFrontMatterParser());\\n    }\\n\\n    public function getFrontMatterParser(): FrontMatterParserInterface\\n    {\\n        return $this->frontMatterParser;\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addEventListener(DocumentPreParsedEvent::class, new FrontMatterPreParser($this->frontMatterParser));\\n        $environment->addEventListener(DocumentRenderedEvent::class, new FrontMatterPostRenderListener(), -500);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Output\/RenderedContentWithFrontMatter.php\",\"ext\":\"php\",\"size\":1232,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Output;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\FrontMatterProviderInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContent;\\n\\n\/**\\n * @psalm-immutable\\n *\/\\nfinal class RenderedContentWithFrontMatter extends RenderedContent implements FrontMatterProviderInterface\\n{\\n    \/**\\n     * @var mixed\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private $frontMatter;\\n\\n    \/**\\n     * @param Document   $document    The parsed Document object\\n     * @param string     $content     The final HTML\\n     * @param mixed|null $frontMatter Any parsed front matter\\n     *\/\\n    public function __construct(Document $document, string $content, $frontMatter)\\n    {\\n        parent::__construct($document, $content);\\n\\n        $this->frontMatter = $frontMatter;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getFrontMatter()\\n    {\\n        return $this->frontMatter;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/Exception\/InvalidFrontMatterException.php\",\"ext\":\"php\",\"size\":656,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter\\\\Exception;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\n\\nclass InvalidFrontMatterException extends \\\\RuntimeException implements CommonMarkException\\n{\\n    public static function wrap(\\\\Throwable $t): self\\n    {\\n        return new InvalidFrontMatterException('Failed to parse front matter: ' . $t->getMessage(), 0, $t);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/FrontMatter\/FrontMatterProviderInterface.php\",\"ext\":\"php\",\"size\":447,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\FrontMatter;\\n\\ninterface FrontMatterProviderInterface\\n{\\n    \/**\\n     * @return mixed|null\\n     *\/\\n    public function getFrontMatter();\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/InlinesOnly\/ChildRenderer.php\",\"ext\":\"php\",\"size\":949,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\InlinesOnly;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\n\\n\/**\\n * Simply renders child elements as-is, adding newlines as needed.\\n *\/\\nfinal class ChildRenderer implements NodeRendererInterface\\n{\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        $out = $childRenderer->renderNodes($node->children());\\n        if (! $node instanceof Document) {\\n            $out .= $childRenderer->getBlockSeparator();\\n        }\\n\\n        return $out;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/InlinesOnly\/InlinesOnlyExtension.php\",\"ext\":\"php\",\"size\":3715,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\InlinesOnly;\\n\\nuse League\\\\CommonMark as Core;\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Delimiter\\\\Processor\\\\EmphasisDelimiterProcessor;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class InlinesOnlyExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('commonmark', Expect::structure([\\n            'use_asterisk' => Expect::bool(true),\\n            'use_underscore' => Expect::bool(true),\\n            'enable_strong' => Expect::bool(true),\\n            'enable_em' => Expect::bool(true),\\n        ]));\\n    }\\n\\n    \/\/ phpcs:disable Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma,Squiz.WhiteSpace.SemicolonSpacing.Incorrect\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $childRenderer = new ChildRenderer();\\n\\n        $environment\\n            ->addInlineParser(new Core\\\\Parser\\\\Inline\\\\NewlineParser(),           200)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\BacktickParser(),    150)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\EscapableParser(),    80)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\EntityParser(),       70)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\AutolinkParser(),     50)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\HtmlInlineParser(),   40)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\CloseBracketParser(), 30)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\OpenBracketParser(),  20)\\n            ->addInlineParser(new CommonMark\\\\Parser\\\\Inline\\\\BangParser(),         10)\\n\\n            ->addRenderer(Core\\\\Node\\\\Block\\\\Document::class,  $childRenderer, 0)\\n            ->addRenderer(Core\\\\Node\\\\Block\\\\Paragraph::class, $childRenderer, 0)\\n\\n            ->addRenderer(CommonMark\\\\Node\\\\Inline\\\\Code::class,       new CommonMark\\\\Renderer\\\\Inline\\\\CodeRenderer(),       0)\\n            ->addRenderer(CommonMark\\\\Node\\\\Inline\\\\Emphasis::class,   new CommonMark\\\\Renderer\\\\Inline\\\\EmphasisRenderer(),   0)\\n            ->addRenderer(CommonMark\\\\Node\\\\Inline\\\\HtmlInline::class, new CommonMark\\\\Renderer\\\\Inline\\\\HtmlInlineRenderer(), 0)\\n            ->addRenderer(CommonMark\\\\Node\\\\Inline\\\\Image::class,      new CommonMark\\\\Renderer\\\\Inline\\\\ImageRenderer(),      0)\\n            ->addRenderer(CommonMark\\\\Node\\\\Inline\\\\Link::class,       new CommonMark\\\\Renderer\\\\Inline\\\\LinkRenderer(),       0)\\n            ->addRenderer(Core\\\\Node\\\\Inline\\\\Newline::class,          new Core\\\\Renderer\\\\Inline\\\\NewlineRenderer(),          0)\\n            ->addRenderer(CommonMark\\\\Node\\\\Inline\\\\Strong::class,     new CommonMark\\\\Renderer\\\\Inline\\\\StrongRenderer(),     0)\\n            ->addRenderer(Core\\\\Node\\\\Inline\\\\Text::class,             new Core\\\\Renderer\\\\Inline\\\\TextRenderer(),             0)\\n        ;\\n\\n        if ($environment->getConfiguration()->get('commonmark\/use_asterisk')) {\\n            $environment->addDelimiterProcessor(new EmphasisDelimiterProcessor('*'));\\n        }\\n\\n        if ($environment->getConfiguration()->get('commonmark\/use_underscore')) {\\n            $environment->addDelimiterProcessor(new EmphasisDelimiterProcessor('_'));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Renderer\/FootnoteBackrefRenderer.php\",\"ext\":\"php\",\"size\":2392,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteBackref;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class FootnoteBackrefRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    public const DEFAULT_SYMBOL = '\u21a9';\\n\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param FootnoteBackref $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        FootnoteBackref::assertInstanceOf($node);\\n\\n        $attrs = $node->data->getData('attributes');\\n\\n        $attrs->append('class', $this->config->get('footnote\/backref_class'));\\n        $attrs->set('rev', 'footnote');\\n        $attrs->set('href', \\\\mb_strtolower($node->getReference()->getDestination(), 'UTF-8'));\\n        $attrs->set('role', 'doc-backlink');\\n\\n        $symbol = $this->config->get('footnote\/backref_symbol');\\n        \\\\assert(\\\\is_string($symbol));\\n\\n        return '&nbsp;' . new HtmlElement('a', $attrs->export(), \\\\htmlspecialchars($symbol), true);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'footnote_backref';\\n    }\\n\\n    \/**\\n     * @param FootnoteBackref $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        FootnoteBackref::assertInstanceOf($node);\\n\\n        return [\\n            'reference' => $node->getReference()->getLabel(),\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Renderer\/FootnoteContainerRenderer.php\",\"ext\":\"php\",\"size\":2113,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteContainer;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class FootnoteContainerRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param FootnoteContainer $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        FootnoteContainer::assertInstanceOf($node);\\n\\n        $attrs = $node->data->getData('attributes');\\n\\n        $attrs->append('class', $this->config->get('footnote\/container_class'));\\n        $attrs->set('role', 'doc-endnotes');\\n\\n        $contents = new HtmlElement('ol', [], $childRenderer->renderNodes($node->children()));\\n        if ($this->config->get('footnote\/container_add_hr')) {\\n            $contents = [new HtmlElement('hr', [], null, true), $contents];\\n        }\\n\\n        return new HtmlElement('div', $attrs->export(), $contents);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'footnote_container';\\n    }\\n\\n    \/**\\n     * @return array<string, scalar>\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Renderer\/FootnoteRefRenderer.php\",\"ext\":\"php\",\"size\":2497,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class FootnoteRefRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param FootnoteRef $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        FootnoteRef::assertInstanceOf($node);\\n\\n        $attrs = $node->data->getData('attributes');\\n        $attrs->append('class', $this->config->get('footnote\/ref_class'));\\n        $attrs->set('href', \\\\mb_strtolower($node->getReference()->getDestination(), 'UTF-8'));\\n        $attrs->set('role', 'doc-noteref');\\n\\n        $idPrefix = $this->config->get('footnote\/ref_id_prefix');\\n\\n        return new HtmlElement(\\n            'sup',\\n            [\\n                'id' => $idPrefix . \\\\mb_strtolower($node->getReference()->getLabel(), 'UTF-8'),\\n            ],\\n            new HtmlElement(\\n                'a',\\n                $attrs->export(),\\n                $node->getReference()->getTitle()\\n            ),\\n            true\\n        );\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'footnote_ref';\\n    }\\n\\n    \/**\\n     * @param FootnoteRef $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        FootnoteRef::assertInstanceOf($node);\\n\\n        return [\\n            'reference' => $node->getReference()->getLabel(),\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Renderer\/FootnoteRenderer.php\",\"ext\":\"php\",\"size\":2273,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\Footnote;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class FootnoteRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param Footnote $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Footnote::assertInstanceOf($node);\\n\\n        $attrs = $node->data->getData('attributes');\\n\\n        $attrs->append('class', $this->config->get('footnote\/footnote_class'));\\n        $attrs->set('id', $this->config->get('footnote\/footnote_id_prefix') . \\\\mb_strtolower($node->getReference()->getLabel(), 'UTF-8'));\\n        $attrs->set('role', 'doc-endnote');\\n\\n        return new HtmlElement(\\n            'li',\\n            $attrs->export(),\\n            $childRenderer->renderNodes($node->children()),\\n            true\\n        );\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'footnote';\\n    }\\n\\n    \/**\\n     * @param Footnote $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        Footnote::assertInstanceOf($node);\\n\\n        return [\\n            'reference' => $node->getReference()->getLabel(),\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Event\/AnonymousFootnotesListener.php\",\"ext\":\"php\",\"size\":2102,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\Footnote;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteBackref;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Reference\\\\Reference;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class AnonymousFootnotesListener implements ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    public function onDocumentParsed(DocumentParsedEvent $event): void\\n    {\\n        $document = $event->getDocument();\\n        foreach ($document->iterator() as $node) {\\n            if (! $node instanceof FootnoteRef || ($text = $node->getContent()) === null) {\\n                continue;\\n            }\\n\\n            \/\/ Anonymous footnote needs to create a footnote from its content\\n            $existingReference = $node->getReference();\\n            $newReference      = new Reference(\\n                $existingReference->getLabel(),\\n                '#' . $this->config->get('footnote\/ref_id_prefix') . $existingReference->getLabel(),\\n                $existingReference->getTitle()\\n            );\\n\\n            $paragraph = new Paragraph();\\n            $paragraph->appendChild(new Text($text));\\n            $paragraph->appendChild(new FootnoteBackref($newReference));\\n\\n            $footnote = new Footnote($newReference);\\n            $footnote->appendChild($paragraph);\\n\\n            $document->appendChild($footnote);\\n        }\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Event\/FixOrphanedFootnotesAndRefsListener.php\",\"ext\":\"php\",\"size\":2353,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\Footnote;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\n\\nfinal class FixOrphanedFootnotesAndRefsListener\\n{\\n    public function onDocumentParsed(DocumentParsedEvent $event): void\\n    {\\n        $document = $event->getDocument();\\n        $map      = $this->buildMapOfKnownFootnotesAndRefs($document);\\n\\n        foreach ($map['_flat'] as $node) {\\n            if ($node instanceof FootnoteRef && ! isset($map[Footnote::class][$node->getReference()->getLabel()])) {\\n                \/\/ Found an orphaned FootnoteRef without a corresponding Footnote\\n                \/\/ Restore the original footnote ref text\\n                $node->replaceWith(new Text(\\\\sprintf('[^%s]', $node->getReference()->getLabel())));\\n            }\\n\\n            \/\/ phpcs:disable SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed\\n            if ($node instanceof Footnote && ! isset($map[FootnoteRef::class][$node->getReference()->getLabel()])) {\\n                \/\/ Found an orphaned Footnote without a corresponding FootnoteRef\\n                \/\/ Remove the footnote\\n                $node->detach();\\n            }\\n        }\\n    }\\n\\n    \/** @phpstan-ignore-next-line *\/\\n    private function buildMapOfKnownFootnotesAndRefs(Document $document): array \/\/ @phpcs:ignore\\n    {\\n        $map = [\\n            Footnote::class => [],\\n            FootnoteRef::class => [],\\n            '_flat' => [],\\n        ];\\n\\n        foreach ($document->iterator() as $node) {\\n            if ($node instanceof Footnote) {\\n                $map[Footnote::class][$node->getReference()->getLabel()] = true;\\n\\n                $map['_flat'][] = $node;\\n            } elseif ($node instanceof FootnoteRef) {\\n                $map[FootnoteRef::class][$node->getReference()->getLabel()] = true;\\n\\n                $map['_flat'][] = $node;\\n            }\\n        }\\n\\n        return $map;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Event\/GatherFootnotesListener.php\",\"ext\":\"php\",\"size\":3543,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\Footnote;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteBackref;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteContainer;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\nuse League\\\\CommonMark\\\\Reference\\\\Reference;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class GatherFootnotesListener implements ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    public function onDocumentParsed(DocumentParsedEvent $event): void\\n    {\\n        $document  = $event->getDocument();\\n        $footnotes = [];\\n\\n        foreach ($document->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $node) {\\n            if (! $node instanceof Footnote) {\\n                continue;\\n            }\\n\\n            \/\/ Look for existing reference with footnote label\\n            $ref = $document->getReferenceMap()->get($node->getReference()->getLabel());\\n            if ($ref !== null) {\\n                \/\/ Use numeric title to get footnotes order\\n                $footnotes[(int) $ref->getTitle()] = $node;\\n            } else {\\n                \/\/ Footnote call is missing, append footnote at the end\\n                $footnotes[\\\\PHP_INT_MAX] = $node;\\n            }\\n\\n            $key = '#' . $this->config->get('footnote\/footnote_id_prefix') . $node->getReference()->getDestination();\\n            if ($document->data->has($key)) {\\n                $this->createBackrefs($node, $document->data->get($key));\\n            }\\n        }\\n\\n        \/\/ Only add a footnote container if there are any\\n        if (\\\\count($footnotes) === 0) {\\n            return;\\n        }\\n\\n        $container = $this->getFootnotesContainer($document);\\n\\n        \\\\ksort($footnotes);\\n        foreach ($footnotes as $footnote) {\\n            $container->appendChild($footnote);\\n        }\\n    }\\n\\n    private function getFootnotesContainer(Document $document): FootnoteContainer\\n    {\\n        $footnoteContainer = new FootnoteContainer();\\n        $document->appendChild($footnoteContainer);\\n\\n        return $footnoteContainer;\\n    }\\n\\n    \/**\\n     * Look for all footnote refs pointing to this footnote and create each footnote backrefs.\\n     *\\n     * @param Footnote    $node     The target footnote\\n     * @param Reference[] $backrefs References to create backrefs for\\n     *\/\\n    private function createBackrefs(Footnote $node, array $backrefs): void\\n    {\\n        \/\/ Backrefs should be added to the child paragraph\\n        $target = $node->lastChild();\\n        if ($target === null) {\\n            \/\/ This should never happen, but you never know\\n            $target = $node;\\n        }\\n\\n        foreach ($backrefs as $backref) {\\n            $target->appendChild(new FootnoteBackref(new Reference(\\n                $backref->getLabel(),\\n                '#' . $this->config->get('footnote\/ref_id_prefix') . $backref->getLabel(),\\n                $backref->getTitle()\\n            )));\\n        }\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Event\/NumberFootnotesListener.php\",\"ext\":\"php\",\"size\":2342,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Reference\\\\Reference;\\n\\nfinal class NumberFootnotesListener\\n{\\n    public function onDocumentParsed(DocumentParsedEvent $event): void\\n    {\\n        $document     = $event->getDocument();\\n        $nextCounter  = 1;\\n        $usedLabels   = [];\\n        $usedCounters = [];\\n\\n        foreach ($document->iterator() as $node) {\\n            if (! $node instanceof FootnoteRef) {\\n                continue;\\n            }\\n\\n            $existingReference   = $node->getReference();\\n            $label               = $existingReference->getLabel();\\n            $counter             = $nextCounter;\\n            $canIncrementCounter = true;\\n\\n            if (\\\\array_key_exists($label, $usedLabels)) {\\n                \/*\\n                 * Reference is used again, we need to point\\n                 * to the same footnote. But with a different ID\\n                 *\/\\n                $counter             = $usedCounters[$label];\\n                $label              .= '__' . ++$usedLabels[$label];\\n                $canIncrementCounter = false;\\n            }\\n\\n            \/\/ rewrite reference title to use a numeric link\\n            $newReference = new Reference(\\n                $label,\\n                $existingReference->getDestination(),\\n                (string) $counter\\n            );\\n\\n            \/\/ Override reference with numeric link\\n            $node->setReference($newReference);\\n            $document->getReferenceMap()->add($newReference);\\n\\n            \/*\\n             * Store created references in document for\\n             * creating FootnoteBackrefs\\n             *\/\\n            $document->data->append($existingReference->getDestination(), $newReference);\\n\\n            $usedLabels[$label]   = 1;\\n            $usedCounters[$label] = $nextCounter;\\n\\n            if ($canIncrementCounter) {\\n                $nextCounter++;\\n            }\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Node\/Footnote.php\",\"ext\":\"php\",\"size\":918,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceableInterface;\\n\\nfinal class Footnote extends AbstractBlock implements ReferenceableInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private ReferenceInterface $reference;\\n\\n    public function __construct(ReferenceInterface $reference)\\n    {\\n        parent::__construct();\\n\\n        $this->reference = $reference;\\n    }\\n\\n    public function getReference(): ReferenceInterface\\n    {\\n        return $this->reference;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Node\/FootnoteRef.php\",\"ext\":\"php\",\"size\":1383,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceableInterface;\\n\\nfinal class FootnoteRef extends AbstractInline implements ReferenceableInterface\\n{\\n    private ReferenceInterface $reference;\\n\\n    \/** @psalm-readonly *\/\\n    private ?string $content = null;\\n\\n    \/**\\n     * @param array<mixed> $data\\n     *\/\\n    public function __construct(ReferenceInterface $reference, ?string $content = null, array $data = [])\\n    {\\n        parent::__construct();\\n\\n        $this->reference = $reference;\\n        $this->content   = $content;\\n\\n        if (\\\\count($data) > 0) {\\n            $this->data->import($data);\\n        }\\n    }\\n\\n    public function getReference(): ReferenceInterface\\n    {\\n        return $this->reference;\\n    }\\n\\n    public function setReference(ReferenceInterface $reference): void\\n    {\\n        $this->reference = $reference;\\n    }\\n\\n    public function getContent(): ?string\\n    {\\n        return $this->content;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Node\/FootnoteContainer.php\",\"ext\":\"php\",\"size\":467,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class FootnoteContainer extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Node\/FootnoteBackref.php\",\"ext\":\"php\",\"size\":1014,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceableInterface;\\n\\n\/**\\n * Link from the footnote on the bottom of the document back to the reference\\n *\/\\nfinal class FootnoteBackref extends AbstractInline implements ReferenceableInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private ReferenceInterface $reference;\\n\\n    public function __construct(ReferenceInterface $reference)\\n    {\\n        parent::__construct();\\n\\n        $this->reference = $reference;\\n    }\\n\\n    public function getReference(): ReferenceInterface\\n    {\\n        return $this->reference;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Parser\/FootnoteParser.php\",\"ext\":\"php\",\"size\":1796,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\Footnote;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\n\\nfinal class FootnoteParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private Footnote $block;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?int $indentation = null;\\n\\n    public function __construct(ReferenceInterface $reference)\\n    {\\n        $this->block = new Footnote($reference);\\n    }\\n\\n    public function getBlock(): Footnote\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if ($cursor->isBlank()) {\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        if ($cursor->isIndented()) {\\n            $this->indentation ??= $cursor->getIndent();\\n            $cursor->advanceBy($this->indentation, true);\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        return BlockContinue::none();\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Parser\/FootnoteRefParser.php\",\"ext\":\"php\",\"size\":1707,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Reference\\\\Reference;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class FootnoteRefParser implements InlineParserInterface, ConfigurationAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex('\\\\[\\\\^([^\\\\s\\\\]]+)\\\\]');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inlineContext->getCursor()->advanceBy($inlineContext->getFullMatchLength());\\n\\n        [$label] = $inlineContext->getSubMatches();\\n        $inlineContext->getContainer()->appendChild(new FootnoteRef($this->createReference($label)));\\n\\n        return true;\\n    }\\n\\n    private function createReference(string $label): Reference\\n    {\\n        return new Reference(\\n            $label,\\n            '#' . $this->config->get('footnote\/footnote_id_prefix') . $label,\\n            $label\\n        );\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Parser\/FootnoteStartParser.php\",\"ext\":\"php\",\"size\":1797,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\Reference;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class FootnoteStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented() || $parserState->getLastMatchedBlockParser()->canHaveLazyContinuationLines()) {\\n            return BlockStart::none();\\n        }\\n\\n        $match = RegexHelper::matchFirst(\\n            '\/^\\\\[\\\\^([^\\\\s^\\\\]]+)\\\\]\\\\:(?:\\\\s|$)\/',\\n            $cursor->getLine(),\\n            $cursor->getNextNonSpacePosition()\\n        );\\n\\n        if (! $match) {\\n            return BlockStart::none();\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        $cursor->advanceBy(\\\\strlen($match[0]));\\n        $str = $cursor->getRemainder();\\n        \\\\preg_replace('\/^\\\\[\\\\^([^\\\\s^\\\\]]+)\\\\]\\\\:(?:\\\\s|$)\/', '', $str);\\n\\n        if (\\\\preg_match('\/^\\\\[\\\\^([^\\\\s^\\\\]]+)\\\\]\\\\:(?:\\\\s|$)\/', $match[0], $matches) !== 1) {\\n            return BlockStart::none();\\n        }\\n\\n        $reference      = new Reference($matches[1], $matches[1], $matches[1]);\\n        $footnoteParser = new FootnoteParser($reference);\\n\\n        return BlockStart::of($footnoteParser)->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/Parser\/AnonymousFootnoteRefParser.php\",\"ext\":\"php\",\"size\":2161,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentAwareInterface;\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Normalizer\\\\TextNormalizerInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Reference\\\\Reference;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class AnonymousFootnoteRefParser implements InlineParserInterface, EnvironmentAwareInterface\\n{\\n    private ConfigurationInterface $config;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private TextNormalizerInterface $slugNormalizer;\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex('\\\\^\\\\[([^\\\\]]+)\\\\]');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inlineContext->getCursor()->advanceBy($inlineContext->getFullMatchLength());\\n\\n        [$label]   = $inlineContext->getSubMatches();\\n        $reference = $this->createReference($label);\\n        $inlineContext->getContainer()->appendChild(new FootnoteRef($reference, $label));\\n\\n        return true;\\n    }\\n\\n    private function createReference(string $label): Reference\\n    {\\n        $refLabel = $this->slugNormalizer->normalize($label, ['length' => 20]);\\n\\n        return new Reference(\\n            $refLabel,\\n            '#' . $this->config->get('footnote\/footnote_id_prefix') . $refLabel,\\n            $label\\n        );\\n    }\\n\\n    public function setEnvironment(EnvironmentInterface $environment): void\\n    {\\n        $this->config         = $environment->getConfiguration();\\n        $this->slugNormalizer = $environment->getSlugNormalizer();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Footnote\/FootnoteExtension.php\",\"ext\":\"php\",\"size\":3541,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) Rezo Zero \/ Ambroise Maupate\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Footnote;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event\\\\AnonymousFootnotesListener;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event\\\\FixOrphanedFootnotesAndRefsListener;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event\\\\GatherFootnotesListener;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Event\\\\NumberFootnotesListener;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\Footnote;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteBackref;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteContainer;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Node\\\\FootnoteRef;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser\\\\AnonymousFootnoteRefParser;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser\\\\FootnoteRefParser;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Parser\\\\FootnoteStartParser;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer\\\\FootnoteBackrefRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer\\\\FootnoteContainerRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer\\\\FootnoteRefRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\Footnote\\\\Renderer\\\\FootnoteRenderer;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class FootnoteExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('footnote', Expect::structure([\\n            'backref_class' => Expect::string('footnote-backref'),\\n            'backref_symbol' => Expect::string('\u21a9'),\\n            'container_add_hr' => Expect::bool(true),\\n            'container_class' => Expect::string('footnotes'),\\n            'ref_class' => Expect::string('footnote-ref'),\\n            'ref_id_prefix' => Expect::string('fnref:'),\\n            'footnote_class' => Expect::string('footnote'),\\n            'footnote_id_prefix' => Expect::string('fn:'),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addBlockStartParser(new FootnoteStartParser(), 51);\\n        $environment->addInlineParser(new AnonymousFootnoteRefParser(), 35);\\n        $environment->addInlineParser(new FootnoteRefParser(), 51);\\n\\n        $environment->addRenderer(FootnoteContainer::class, new FootnoteContainerRenderer());\\n        $environment->addRenderer(Footnote::class, new FootnoteRenderer());\\n        $environment->addRenderer(FootnoteRef::class, new FootnoteRefRenderer());\\n        $environment->addRenderer(FootnoteBackref::class, new FootnoteBackrefRenderer());\\n\\n        $environment->addEventListener(DocumentParsedEvent::class, [new AnonymousFootnotesListener(), 'onDocumentParsed'], 40);\\n        $environment->addEventListener(DocumentParsedEvent::class, [new FixOrphanedFootnotesAndRefsListener(), 'onDocumentParsed'], 30);\\n        $environment->addEventListener(DocumentParsedEvent::class, [new NumberFootnotesListener(), 'onDocumentParsed'], 20);\\n        $environment->addEventListener(DocumentParsedEvent::class, [new GatherFootnotesListener(), 'onDocumentParsed'], 10);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/DashParser.php\",\"ext\":\"php\",\"size\":1906,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (http:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class DashParser implements InlineParserInterface\\n{\\n    private const EN_DASH = '\u2013';\\n    private const EM_DASH = '\u2014';\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex('(?<!-)(-{2,})');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $count = $inlineContext->getFullMatchLength();\\n        $inlineContext->getCursor()->advanceBy($count);\\n\\n        $enCount = 0;\\n        $emCount = 0;\\n        if ($count % 3 === 0) { \/\/ If divisible by 3, use all em dashes\\n            $emCount = (int) ($count \/ 3);\\n        } elseif ($count % 2 === 0) { \/\/ If divisible by 2, use all en dashes\\n            $enCount = (int) ($count \/ 2);\\n        } elseif ($count % 3 === 2) { \/\/ If 2 extra dashes, use en dash for last 2; em dashes for rest\\n            $emCount = (int) (($count - 2) \/ 3);\\n            $enCount = 1;\\n        } else { \/\/ Use en dashes for last 4 hyphens; em dashes for rest\\n            $emCount = (int) (($count - 4) \/ 3);\\n            $enCount = 2;\\n        }\\n\\n        $inlineContext->getContainer()->appendChild(new Text(\\n            \\\\str_repeat(self::EM_DASH, $emCount) . \\\\str_repeat(self::EN_DASH, $enCount)\\n        ));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/ReplaceUnpairedQuotesListener.php\",\"ext\":\"php\",\"size\":1330,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AdjacentTextMerger;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Node\\\\Query;\\n\\n\/**\\n * Identifies any lingering Quote nodes that were missing pairs and converts them into Text nodes\\n *\/\\nfinal class ReplaceUnpairedQuotesListener\\n{\\n    public function __invoke(DocumentParsedEvent $event): void\\n    {\\n        $query = (new Query())->where(Query::type(Quote::class));\\n        foreach ($query->findAll($event->getDocument()) as $quote) {\\n            \\\\assert($quote instanceof Quote);\\n\\n            $literal = $quote->getLiteral();\\n            if ($literal === Quote::SINGLE_QUOTE) {\\n                $literal = Quote::SINGLE_QUOTE_CLOSER;\\n            } elseif ($literal === Quote::DOUBLE_QUOTE) {\\n                $literal = Quote::DOUBLE_QUOTE_OPENER;\\n            }\\n\\n            $quote->replaceWith($new = new Text($literal));\\n            AdjacentTextMerger::mergeWithDirectlyAdjacentNodes($new);\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/QuoteProcessor.php\",\"ext\":\"php\",\"size\":2363,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (http:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterInterface;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\DelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\nfinal class QuoteProcessor implements DelimiterProcessorInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private string $normalizedCharacter;\\n\\n    \/** @psalm-readonly *\/\\n    private string $openerCharacter;\\n\\n    \/** @psalm-readonly *\/\\n    private string $closerCharacter;\\n\\n    private function __construct(string $char, string $opener, string $closer)\\n    {\\n        $this->normalizedCharacter = $char;\\n        $this->openerCharacter     = $opener;\\n        $this->closerCharacter     = $closer;\\n    }\\n\\n    public function getOpeningCharacter(): string\\n    {\\n        return $this->normalizedCharacter;\\n    }\\n\\n    public function getClosingCharacter(): string\\n    {\\n        return $this->normalizedCharacter;\\n    }\\n\\n    public function getMinLength(): int\\n    {\\n        return 1;\\n    }\\n\\n    public function getDelimiterUse(DelimiterInterface $opener, DelimiterInterface $closer): int\\n    {\\n        return 1;\\n    }\\n\\n    public function process(AbstractStringContainer $opener, AbstractStringContainer $closer, int $delimiterUse): void\\n    {\\n        $opener->insertAfter(new Quote($this->openerCharacter));\\n        $closer->insertBefore(new Quote($this->closerCharacter));\\n    }\\n\\n    \/**\\n     * Create a double-quote processor\\n     *\/\\n    public static function createDoubleQuoteProcessor(string $opener = Quote::DOUBLE_QUOTE_OPENER, string $closer = Quote::DOUBLE_QUOTE_CLOSER): self\\n    {\\n        return new self(Quote::DOUBLE_QUOTE, $opener, $closer);\\n    }\\n\\n    \/**\\n     * Create a single-quote processor\\n     *\/\\n    public static function createSingleQuoteProcessor(string $opener = Quote::SINGLE_QUOTE_OPENER, string $closer = Quote::SINGLE_QUOTE_CLOSER): self\\n    {\\n        return new self(Quote::SINGLE_QUOTE, $opener, $closer);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/Quote.php\",\"ext\":\"php\",\"size\":833,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (http:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\nfinal class Quote extends AbstractStringContainer\\n{\\n    public const DOUBLE_QUOTE        = '\\\"';\\n    public const DOUBLE_QUOTE_OPENER = '\u201c';\\n    public const DOUBLE_QUOTE_CLOSER = '\u201d';\\n\\n    public const SINGLE_QUOTE        = \\\"'\\\";\\n    public const SINGLE_QUOTE_OPENER = '\u2018';\\n    public const SINGLE_QUOTE_CLOSER = '\u2019';\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/SmartPunctExtension.php\",\"ext\":\"php\",\"size\":2688,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (http:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Renderer\\\\Block as CoreBlockRenderer;\\nuse League\\\\CommonMark\\\\Renderer\\\\Inline as CoreInlineRenderer;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class SmartPunctExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('smartpunct', Expect::structure([\\n            'double_quote_opener' => Expect::string(Quote::DOUBLE_QUOTE_OPENER),\\n            'double_quote_closer' => Expect::string(Quote::DOUBLE_QUOTE_CLOSER),\\n            'single_quote_opener' => Expect::string(Quote::SINGLE_QUOTE_OPENER),\\n            'single_quote_closer' => Expect::string(Quote::SINGLE_QUOTE_CLOSER),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment\\n            ->addInlineParser(new QuoteParser(), 10)\\n            ->addInlineParser(new DashParser(), 0)\\n            ->addInlineParser(new EllipsesParser(), 0)\\n\\n            ->addDelimiterProcessor(QuoteProcessor::createDoubleQuoteProcessor(\\n                $environment->getConfiguration()->get('smartpunct\/double_quote_opener'),\\n                $environment->getConfiguration()->get('smartpunct\/double_quote_closer')\\n            ))\\n            ->addDelimiterProcessor(QuoteProcessor::createSingleQuoteProcessor(\\n                $environment->getConfiguration()->get('smartpunct\/single_quote_opener'),\\n                $environment->getConfiguration()->get('smartpunct\/single_quote_closer')\\n            ))\\n\\n            ->addEventListener(DocumentParsedEvent::class, new ReplaceUnpairedQuotesListener())\\n\\n            ->addRenderer(Document::class, new CoreBlockRenderer\\\\DocumentRenderer(), 0)\\n            ->addRenderer(Paragraph::class, new CoreBlockRenderer\\\\ParagraphRenderer(), 0)\\n            ->addRenderer(Text::class, new CoreInlineRenderer\\\\TextRenderer(), 0);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/QuoteParser.php\",\"ext\":\"php\",\"size\":3331,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (http:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\Delimiter;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class QuoteParser implements InlineParserInterface\\n{\\n    \/**\\n     * @deprecated This constant is no longer used and will be removed in a future major release\\n     *\/\\n    public const DOUBLE_QUOTES = [Quote::DOUBLE_QUOTE, Quote::DOUBLE_QUOTE_OPENER, Quote::DOUBLE_QUOTE_CLOSER];\\n\\n    \/**\\n     * @deprecated This constant is no longer used and will be removed in a future major release\\n     *\/\\n    public const SINGLE_QUOTES = [Quote::SINGLE_QUOTE, Quote::SINGLE_QUOTE_OPENER, Quote::SINGLE_QUOTE_CLOSER];\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::oneOf(Quote::SINGLE_QUOTE, Quote::DOUBLE_QUOTE);\\n    }\\n\\n    \/**\\n     * Normalizes any quote characters found and manually adds them to the delimiter stack\\n     *\/\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $char   = $inlineContext->getFullMatch();\\n        $cursor = $inlineContext->getCursor();\\n        $index  = $cursor->getPosition();\\n\\n        $charBefore = $cursor->peek(-1);\\n        if ($charBefore === null) {\\n            $charBefore = \\\"\\\\n\\\";\\n        }\\n\\n        $cursor->advance();\\n\\n        $charAfter = $cursor->getCurrentCharacter();\\n        if ($charAfter === null) {\\n            $charAfter = \\\"\\\\n\\\";\\n        }\\n\\n        [$leftFlanking, $rightFlanking] = $this->determineFlanking($charBefore, $charAfter);\\n        $canOpen                        = $leftFlanking && ! $rightFlanking;\\n        $canClose                       = $rightFlanking;\\n\\n        $node = new Quote($char, ['delim' => true]);\\n        $inlineContext->getContainer()->appendChild($node);\\n\\n        \/\/ Add entry to stack to this opener\\n        $inlineContext->getDelimiterStack()->push(new Delimiter($char, 1, $node, $canOpen, $canClose, $index));\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return bool[]\\n     *\/\\n    private function determineFlanking(string $charBefore, string $charAfter): array\\n    {\\n        $afterIsWhitespace   = \\\\preg_match('\/\\\\pZ|\\\\s\/u', $charAfter);\\n        $afterIsPunctuation  = \\\\preg_match(RegexHelper::REGEX_PUNCTUATION, $charAfter);\\n        $beforeIsWhitespace  = \\\\preg_match('\/\\\\pZ|\\\\s\/u', $charBefore);\\n        $beforeIsPunctuation = \\\\preg_match(RegexHelper::REGEX_PUNCTUATION, $charBefore);\\n\\n        $leftFlanking = ! $afterIsWhitespace &&\\n            ! ($afterIsPunctuation &&\\n                ! $beforeIsWhitespace &&\\n                ! $beforeIsPunctuation);\\n\\n        $rightFlanking = ! $beforeIsWhitespace &&\\n            ! ($beforeIsPunctuation &&\\n                ! $afterIsWhitespace &&\\n                ! $afterIsPunctuation);\\n\\n        return [$leftFlanking, $rightFlanking];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/SmartPunct\/EllipsesParser.php\",\"ext\":\"php\",\"size\":1103,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (http:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\SmartPunct;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class EllipsesParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::oneOf('...', '. . .');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inlineContext->getCursor()->advanceBy($inlineContext->getFullMatchLength());\\n        $inlineContext->getContainer()->appendChild(new Text('\u2026'));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableSectionRenderer.php\",\"ext\":\"php\",\"size\":1837,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TableSectionRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param TableSection $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer)\\n    {\\n        TableSection::assertInstanceOf($node);\\n\\n        if (! $node->hasChildren()) {\\n            return '';\\n        }\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        $separator = $childRenderer->getInnerSeparator();\\n\\n        $tag = $node->getType() === TableSection::TYPE_HEAD ? 'thead' : 'tbody';\\n\\n        return new HtmlElement($tag, $attrs, $separator . $childRenderer->renderNodes($node->children()) . $separator);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'table_section';\\n    }\\n\\n    \/**\\n     * @param TableSection $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        TableSection::assertInstanceOf($node);\\n\\n        return [\\n            'type' => $node->getType(),\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableRow.php\",\"ext\":\"php\",\"size\":493,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class TableRow extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableExtension.php\",\"ext\":\"php\",\"size\":2673,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\HtmlDecorator;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class TableExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $attributeArraySchema = Expect::arrayOf(\\n            Expect::type('string|string[]|bool'), \/\/ attribute value(s)\\n            'string' \/\/ attribute name\\n        )->mergeDefaults(false);\\n\\n        $builder->addSchema('table', Expect::structure([\\n            'wrap' => Expect::structure([\\n                'enabled' => Expect::bool()->default(false),\\n                'tag' => Expect::string()->default('div'),\\n                'attributes' => Expect::arrayOf(Expect::string()),\\n            ]),\\n            'alignment_attributes' => Expect::structure([\\n                'left' => (clone $attributeArraySchema)->default(['align' => 'left']),\\n                'center' => (clone $attributeArraySchema)->default(['align' => 'center']),\\n                'right' => (clone $attributeArraySchema)->default(['align' => 'right']),\\n            ]),\\n            'max_autocompleted_cells' => Expect::int()->min(0)->default(TableParser::DEFAULT_MAX_AUTOCOMPLETED_CELLS),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $tableRenderer = new TableRenderer();\\n        if ($environment->getConfiguration()->get('table\/wrap\/enabled')) {\\n            $tableRenderer = new HtmlDecorator($tableRenderer, $environment->getConfiguration()->get('table\/wrap\/tag'), $environment->getConfiguration()->get('table\/wrap\/attributes'));\\n        }\\n\\n        $environment\\n            ->addBlockStartParser(new TableStartParser($environment->getConfiguration()->get('table\/max_autocompleted_cells')))\\n\\n            ->addRenderer(Table::class, $tableRenderer)\\n            ->addRenderer(TableSection::class, new TableSectionRenderer())\\n            ->addRenderer(TableRow::class, new TableRowRenderer())\\n            ->addRenderer(TableCell::class, new TableCellRenderer($environment->getConfiguration()->get('table\/alignment_attributes')));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableParser.php\",\"ext\":\"php\",\"size\":6611,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserWithInlinesInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserEngineInterface;\\nuse League\\\\CommonMark\\\\Util\\\\ArrayCollection;\\n\\nfinal class TableParser extends AbstractBlockContinueParser implements BlockContinueParserWithInlinesInterface\\n{\\n    \/**\\n     * @internal\\n     *\/\\n    public const DEFAULT_MAX_AUTOCOMPLETED_CELLS = 10_000;\\n\\n    \/** @psalm-readonly *\/\\n    private Table $block;\\n\\n    \/**\\n     * @var ArrayCollection<string>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private ArrayCollection $bodyLines;\\n\\n    \/**\\n     * @var array<int, string|null>\\n     * @psalm-var array<int, TableCell::ALIGN_*|null>\\n     * @phpstan-var array<int, TableCell::ALIGN_*|null>\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private array $columns;\\n\\n    \/**\\n     * @var array<int, string>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $headerCells;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $nextIsSeparatorLine = true;\\n\\n    private int $remainingAutocompletedCells;\\n\\n    \/**\\n     * @param array<int, string|null> $columns\\n     * @param array<int, string>      $headerCells\\n     *\\n     * @psalm-param array<int, TableCell::ALIGN_*|null> $columns\\n     *\\n     * @phpstan-param array<int, TableCell::ALIGN_*|null> $columns\\n     *\/\\n    public function __construct(array $columns, array $headerCells, int $remainingAutocompletedCells = self::DEFAULT_MAX_AUTOCOMPLETED_CELLS)\\n    {\\n        $this->block                       = new Table();\\n        $this->bodyLines                   = new ArrayCollection();\\n        $this->columns                     = $columns;\\n        $this->headerCells                 = $headerCells;\\n        $this->remainingAutocompletedCells = $remainingAutocompletedCells;\\n    }\\n\\n    public function canHaveLazyContinuationLines(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function getBlock(): Table\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if (\\\\strpos($cursor->getLine(), '|') === false) {\\n            return BlockContinue::none();\\n        }\\n\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n        if ($this->nextIsSeparatorLine) {\\n            $this->nextIsSeparatorLine = false;\\n        } else {\\n            $this->bodyLines[] = $line;\\n        }\\n    }\\n\\n    public function parseInlines(InlineParserEngineInterface $inlineParser): void\\n    {\\n        $headerColumns = \\\\count($this->headerCells);\\n\\n        $head = new TableSection(TableSection::TYPE_HEAD);\\n        $this->block->appendChild($head);\\n\\n        $headerRow = new TableRow();\\n        $head->appendChild($headerRow);\\n        for ($i = 0; $i < $headerColumns; $i++) {\\n            $cell      = $this->headerCells[$i];\\n            $tableCell = $this->parseCell($cell, $i, $inlineParser);\\n            $tableCell->setType(TableCell::TYPE_HEADER);\\n            $headerRow->appendChild($tableCell);\\n        }\\n\\n        $body = null;\\n        foreach ($this->bodyLines as $rowLine) {\\n            $cells = self::split($rowLine);\\n            $row   = new TableRow();\\n\\n            \/\/ Body can not have more columns than head\\n            for ($i = 0; $i < $headerColumns; $i++) {\\n                \/\/ It can have less columns though, in which case we'll autocomplete the empty ones (up to some limit)\\n                if (! isset($cells[$i]) && $this->remainingAutocompletedCells-- <= 0) {\\n                    \/\/ Too many cells were auto-completed, so we'll just stop here\\n                    return;\\n                }\\n\\n                $cell      = $cells[$i] ?? '';\\n                $tableCell = $this->parseCell($cell, $i, $inlineParser);\\n                $row->appendChild($tableCell);\\n            }\\n\\n            if ($body === null) {\\n                \/\/ It's valid to have a table without body. In that case, don't add an empty TableBody node.\\n                $body = new TableSection();\\n                $this->block->appendChild($body);\\n            }\\n\\n            $body->appendChild($row);\\n        }\\n    }\\n\\n    private function parseCell(string $cell, int $column, InlineParserEngineInterface $inlineParser): TableCell\\n    {\\n        $tableCell = new TableCell(TableCell::TYPE_DATA, $this->columns[$column] ?? null);\\n\\n        if ($cell !== '') {\\n            $inlineParser->parse(\\\\trim($cell), $tableCell);\\n        }\\n\\n        return $tableCell;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\\n     * @return array<int, string>\\n     *\/\\n    public static function split(string $line): array\\n    {\\n        $cursor = new Cursor(\\\\trim($line));\\n\\n        if ($cursor->getCurrentCharacter() === '|') {\\n            $cursor->advanceBy(1);\\n        }\\n\\n        $cells = [];\\n        $sb    = '';\\n\\n        while (! $cursor->isAtEnd()) {\\n            switch ($c = $cursor->getCurrentCharacter()) {\\n                case '\\\\\\\\':\\n                    if ($cursor->peek() === '|') {\\n                        \/\/ Pipe is special for table parsing. An escaped pipe doesn't result in a new cell, but is\\n                        \/\/ passed down to inline parsing as an unescaped pipe. Note that that applies even for the `\\\\|`\\n                        \/\/ in an input like `\\\\\\\\|` - in other words, table parsing doesn't support escaping backslashes.\\n                        $sb .= '|';\\n                        $cursor->advanceBy(1);\\n                    } else {\\n                        \/\/ Preserve backslash before other characters or at end of line.\\n                        $sb .= '\\\\\\\\';\\n                    }\\n\\n                    break;\\n                case '|':\\n                    $cells[] = $sb;\\n                    $sb      = '';\\n                    break;\\n                default:\\n                    $sb .= $c;\\n            }\\n\\n            $cursor->advanceBy(1);\\n        }\\n\\n        if ($sb !== '') {\\n            $cells[] = $sb;\\n        }\\n\\n        return $cells;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableRowRenderer.php\",\"ext\":\"php\",\"size\":1464,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TableRowRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param TableRow $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        TableRow::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        $separator = $childRenderer->getInnerSeparator();\\n\\n        return new HtmlElement('tr', $attrs, $separator . $childRenderer->renderNodes($node->children()) . $separator);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'table_row';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/Table.php\",\"ext\":\"php\",\"size\":490,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class Table extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableCellRenderer.php\",\"ext\":\"php\",\"size\":2617,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util\\\\AttributesHelper;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TableCellRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    private const DEFAULT_ATTRIBUTES = [\\n        TableCell::ALIGN_LEFT   => ['align' => 'left'],\\n        TableCell::ALIGN_CENTER => ['align' => 'center'],\\n        TableCell::ALIGN_RIGHT  => ['align' => 'right'],\\n    ];\\n\\n    \/** @var array<TableCell::ALIGN_*, array<string, string|string[]|bool>> *\/\\n    private array $alignmentAttributes;\\n\\n    \/**\\n     * @param array<TableCell::ALIGN_*, array<string, string|string[]|bool>> $alignmentAttributes\\n     *\/\\n    public function __construct(array $alignmentAttributes = self::DEFAULT_ATTRIBUTES)\\n    {\\n        $this->alignmentAttributes = $alignmentAttributes;\\n    }\\n\\n    \/**\\n     * @param TableCell $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        TableCell::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n        if (($alignment = $node->getAlign()) !== null) {\\n            $attrs = AttributesHelper::mergeAttributes($attrs, $this->alignmentAttributes[$alignment]);\\n        }\\n\\n        $tag = $node->getType() === TableCell::TYPE_HEADER ? 'th' : 'td';\\n\\n        return new HtmlElement($tag, $attrs, $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'table_cell';\\n    }\\n\\n    \/**\\n     * @param TableCell $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        TableCell::assertInstanceOf($node);\\n\\n        $ret = ['type' => $node->getType()];\\n\\n        if (($align = $node->getAlign()) !== null) {\\n            $ret['align'] = $align;\\n        }\\n\\n        return $ret;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableSection.php\",\"ext\":\"php\",\"size\":1313,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class TableSection extends AbstractBlock\\n{\\n    public const TYPE_HEAD = 'head';\\n    public const TYPE_BODY = 'body';\\n\\n    \/**\\n     * @psalm-var self::TYPE_*\\n     * @phpstan-var self::TYPE_*\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private string $type;\\n\\n    \/**\\n     * @psalm-param self::TYPE_* $type\\n     *\\n     * @phpstan-param self::TYPE_* $type\\n     *\/\\n    public function __construct(string $type = self::TYPE_BODY)\\n    {\\n        parent::__construct();\\n\\n        $this->type = $type;\\n    }\\n\\n    \/**\\n     * @psalm-return self::TYPE_*\\n     *\\n     * @phpstan-return self::TYPE_*\\n     *\/\\n    public function getType(): string\\n    {\\n        return $this->type;\\n    }\\n\\n    public function isHead(): bool\\n    {\\n        return $this->type === self::TYPE_HEAD;\\n    }\\n\\n    public function isBody(): bool\\n    {\\n        return $this->type === self::TYPE_BODY;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableCell.php\",\"ext\":\"php\",\"size\":2211,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class TableCell extends AbstractBlock\\n{\\n    public const TYPE_HEADER = 'header';\\n    public const TYPE_DATA   = 'data';\\n\\n    public const ALIGN_LEFT   = 'left';\\n    public const ALIGN_RIGHT  = 'right';\\n    public const ALIGN_CENTER = 'center';\\n\\n    \/**\\n     * @psalm-var self::TYPE_*\\n     * @phpstan-var self::TYPE_*\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private string $type = self::TYPE_DATA;\\n\\n    \/**\\n     * @psalm-var self::ALIGN_*|null\\n     * @phpstan-var self::ALIGN_*|null\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private ?string $align = null;\\n\\n    \/**\\n     * @psalm-param self::TYPE_* $type\\n     * @psalm-param self::ALIGN_*|null $align\\n     *\\n     * @phpstan-param self::TYPE_* $type\\n     * @phpstan-param self::ALIGN_*|null $align\\n     *\/\\n    public function __construct(string $type = self::TYPE_DATA, ?string $align = null)\\n    {\\n        parent::__construct();\\n\\n        $this->type  = $type;\\n        $this->align = $align;\\n    }\\n\\n    \/**\\n     * @psalm-return self::TYPE_*\\n     *\\n     * @phpstan-return self::TYPE_*\\n     *\/\\n    public function getType(): string\\n    {\\n        return $this->type;\\n    }\\n\\n    \/**\\n     * @psalm-param self::TYPE_* $type\\n     *\\n     * @phpstan-param self::TYPE_* $type\\n     *\/\\n    public function setType(string $type): void\\n    {\\n        $this->type = $type;\\n    }\\n\\n    \/**\\n     * @psalm-return self::ALIGN_*|null\\n     *\\n     * @phpstan-return self::ALIGN_*|null\\n     *\/\\n    public function getAlign(): ?string\\n    {\\n        return $this->align;\\n    }\\n\\n    \/**\\n     * @psalm-param self::ALIGN_*|null $align\\n     *\\n     * @phpstan-param self::ALIGN_*|null $align\\n     *\/\\n    public function setAlign(?string $align): void\\n    {\\n        $this->align = $align;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableRenderer.php\",\"ext\":\"php\",\"size\":1493,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TableRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Table $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Table::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        $separator = $childRenderer->getInnerSeparator();\\n\\n        $children = $childRenderer->renderNodes($node->children());\\n\\n        return new HtmlElement('table', $attrs, $separator . \\\\trim($children) . $separator);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'table';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Table\/TableStartParser.php\",\"ext\":\"php\",\"size\":4912,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This is part of the league\/commonmark package.\\n *\\n * (c) Martin Haso\u0148 <martin.hason@gmail.com>\\n * (c) Webuni s.r.o. <info@webuni.cz>\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Table;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\ParagraphParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\nfinal class TableStartParser implements BlockStartParserInterface\\n{\\n    private int $maxAutocompletedCells;\\n\\n    public function __construct(int $maxAutocompletedCells = TableParser::DEFAULT_MAX_AUTOCOMPLETED_CELLS)\\n    {\\n        $this->maxAutocompletedCells = $maxAutocompletedCells;\\n    }\\n\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        $paragraph = $parserState->getParagraphContent();\\n        if ($paragraph === null || \\\\strpos($paragraph, '|') === false) {\\n            return BlockStart::none();\\n        }\\n\\n        $columns = self::parseSeparator($cursor);\\n        if (\\\\count($columns) === 0) {\\n            return BlockStart::none();\\n        }\\n\\n        $lastLineBreak = \\\\strrpos($paragraph, \\\"\\\\n\\\");\\n        $lastLine      = $lastLineBreak === false ? $paragraph : \\\\substr($paragraph, $lastLineBreak + 1);\\n\\n        $headerCells = TableParser::split($lastLine);\\n        if (\\\\count($headerCells) > \\\\count($columns)) {\\n            return BlockStart::none();\\n        }\\n\\n        $cursor->advanceToEnd();\\n\\n        $parsers = [];\\n\\n        if ($lastLineBreak !== false) {\\n            $p = new ParagraphParser();\\n            $p->addLine(\\\\substr($paragraph, 0, $lastLineBreak));\\n            $parsers[] = $p;\\n        }\\n\\n        $parsers[] = new TableParser($columns, $headerCells, $this->maxAutocompletedCells);\\n\\n        return BlockStart::of(...$parsers)\\n            ->at($cursor)\\n            ->replaceActiveBlockParser();\\n    }\\n\\n    \/**\\n     * @return array<int, string|null>\\n     *\\n     * @psalm-return array<int, TableCell::ALIGN_*|null>\\n     *\\n     * @phpstan-return array<int, TableCell::ALIGN_*|null>\\n     *\/\\n    private static function parseSeparator(Cursor $cursor): array\\n    {\\n        $columns = [];\\n        $pipes   = 0;\\n        $valid   = false;\\n\\n        while (! $cursor->isAtEnd()) {\\n            switch ($c = $cursor->getCurrentCharacter()) {\\n                case '|':\\n                    $cursor->advanceBy(1);\\n                    $pipes++;\\n                    if ($pipes > 1) {\\n                        \/\/ More than one adjacent pipe not allowed\\n                        return [];\\n                    }\\n\\n                    \/\/ Need at least one pipe, even for a one-column table\\n                    $valid = true;\\n                    break;\\n                case '-':\\n                case ':':\\n                    if ($pipes === 0 && \\\\count($columns) > 0) {\\n                        \/\/ Need a pipe after the first column (first column doesn't need to start with one)\\n                        return [];\\n                    }\\n\\n                    $left  = false;\\n                    $right = false;\\n                    if ($c === ':') {\\n                        $left = true;\\n                        $cursor->advanceBy(1);\\n                    }\\n\\n                    if ($cursor->match('\/^-+\/') === null) {\\n                        \/\/ Need at least one dash\\n                        return [];\\n                    }\\n\\n                    if ($cursor->getCurrentCharacter() === ':') {\\n                        $right = true;\\n                        $cursor->advanceBy(1);\\n                    }\\n\\n                    $columns[] = self::getAlignment($left, $right);\\n                    \/\/ Next, need another pipe\\n                    $pipes = 0;\\n                    break;\\n                case ' ':\\n                case \\\"\\\\t\\\":\\n                    \/\/ White space is allowed between pipes and columns\\n                    $cursor->advanceToNextNonSpaceOrTab();\\n                    break;\\n                default:\\n                    \/\/ Any other character is invalid\\n                    return [];\\n            }\\n        }\\n\\n        if (! $valid) {\\n            return [];\\n        }\\n\\n        return $columns;\\n    }\\n\\n    \/**\\n     * @psalm-return TableCell::ALIGN_*|null\\n     *\\n     * @phpstan-return TableCell::ALIGN_*|null\\n     *\\n     * @psalm-pure\\n     *\/\\n    private static function getAlignment(bool $left, bool $right): ?string\\n    {\\n        if ($left && $right) {\\n            return TableCell::ALIGN_CENTER;\\n        }\\n\\n        if ($left) {\\n            return TableCell::ALIGN_LEFT;\\n        }\\n\\n        if ($right) {\\n            return TableCell::ALIGN_RIGHT;\\n        }\\n\\n        return null;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TaskList\/TaskListExtension.php\",\"ext\":\"php\",\"size\":761,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TaskList;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\n\\nfinal class TaskListExtension implements ExtensionInterface\\n{\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addInlineParser(new TaskListItemMarkerParser(), 35);\\n        $environment->addRenderer(TaskListItemMarker::class, new TaskListItemMarkerRenderer());\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TaskList\/TaskListItemMarker.php\",\"ext\":\"php\",\"size\":824,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TaskList;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\nfinal class TaskListItemMarker extends AbstractInline\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $checked;\\n\\n    public function __construct(bool $isCompleted)\\n    {\\n        parent::__construct();\\n\\n        $this->checked = $isCompleted;\\n    }\\n\\n    public function isChecked(): bool\\n    {\\n        return $this->checked;\\n    }\\n\\n    public function setChecked(bool $checked): void\\n    {\\n        $this->checked = $checked;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TaskList\/TaskListItemMarkerParser.php\",\"ext\":\"php\",\"size\":1625,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TaskList;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class TaskListItemMarkerParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::oneOf('[ ]', '[x]');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $container = $inlineContext->getContainer();\\n\\n        \/\/ Checkbox must come at the beginning of the first paragraph of the list item\\n        if ($container->hasChildren() || ! ($container instanceof Paragraph && $container->parent() && $container->parent() instanceof ListItem)) {\\n            return false;\\n        }\\n\\n        $cursor   = $inlineContext->getCursor();\\n        $oldState = $cursor->saveState();\\n\\n        $cursor->advanceBy(3);\\n\\n        if ($cursor->getNextNonSpaceCharacter() === null) {\\n            $cursor->restoreState($oldState);\\n\\n            return false;\\n        }\\n\\n        $isChecked = $inlineContext->getFullMatch() !== '[ ]';\\n\\n        $container->appendChild(new TaskListItemMarker($isChecked));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/TaskList\/TaskListItemMarkerRenderer.php\",\"ext\":\"php\",\"size\":1813,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\TaskList;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class TaskListItemMarkerRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param TaskListItemMarker $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        TaskListItemMarker::assertInstanceOf($node);\\n\\n        $attrs    = $node->data->get('attributes');\\n        $checkbox = new HtmlElement('input', $attrs, '', true);\\n\\n        if ($node->isChecked()) {\\n            $checkbox->setAttribute('checked', '');\\n        }\\n\\n        $checkbox->setAttribute('disabled', '');\\n        $checkbox->setAttribute('type', 'checkbox');\\n\\n        return $checkbox;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'task_list_item_marker';\\n    }\\n\\n    \/**\\n     * @param TaskListItemMarker $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        TaskListItemMarker::assertInstanceOf($node);\\n\\n        if ($node->isChecked()) {\\n            return ['checked' => 'checked'];\\n        }\\n\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/AttributesExtension.php\",\"ext\":\"php\",\"size\":1713,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Event\\\\AttributesListener;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Parser\\\\AttributesBlockStartParser;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Parser\\\\AttributesInlineParser;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class AttributesExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('attributes', Expect::structure([\\n            'allow' => Expect::arrayOf('string')->default([]),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $allowList        = $environment->getConfiguration()->get('attributes.allow');\\n        $allowUnsafeLinks = $environment->getConfiguration()->get('allow_unsafe_links');\\n\\n        $environment->addBlockStartParser(new AttributesBlockStartParser());\\n        $environment->addInlineParser(new AttributesInlineParser());\\n        $environment->addEventListener(DocumentParsedEvent::class, [new AttributesListener($allowList, $allowUnsafeLinks), 'processDocument']);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Event\/AttributesListener.php\",\"ext\":\"php\",\"size\":4846,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Node\\\\Attributes;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Node\\\\AttributesInline;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util\\\\AttributesHelper;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\FencedCode;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\n\\nfinal class AttributesListener\\n{\\n    private const DIRECTION_PREFIX = 'prefix';\\n    private const DIRECTION_SUFFIX = 'suffix';\\n\\n    \/** @var list<string> *\/\\n    private array $allowList;\\n    private bool $allowUnsafeLinks;\\n\\n    \/**\\n     * @param list<string> $allowList\\n     *\/\\n    public function __construct(array $allowList = [], bool $allowUnsafeLinks = true)\\n    {\\n        $this->allowList        = $allowList;\\n        $this->allowUnsafeLinks = $allowUnsafeLinks;\\n    }\\n\\n    public function processDocument(DocumentParsedEvent $event): void\\n    {\\n        foreach ($event->getDocument()->iterator() as $node) {\\n            if (! ($node instanceof Attributes || $node instanceof AttributesInline)) {\\n                continue;\\n            }\\n\\n            [$target, $direction] = self::findTargetAndDirection($node);\\n\\n            if ($target instanceof Node) {\\n                $parent = $target->parent();\\n                if ($parent instanceof ListItem && $parent->parent() instanceof ListBlock && $parent->parent()->isTight()) {\\n                    $target = $parent;\\n                }\\n\\n                if ($direction === self::DIRECTION_SUFFIX) {\\n                    $attributes = AttributesHelper::mergeAttributes($target, $node->getAttributes());\\n                } else {\\n                    $attributes = AttributesHelper::mergeAttributes($node->getAttributes(), $target);\\n                }\\n\\n                $target->data->set('attributes', AttributesHelper::filterAttributes($attributes, $this->allowList, $this->allowUnsafeLinks));\\n            }\\n\\n            $node->detach();\\n        }\\n    }\\n\\n    \/**\\n     * @param Attributes|AttributesInline $node\\n     *\\n     * @return array<Node|string|null>\\n     *\/\\n    private static function findTargetAndDirection($node): array\\n    {\\n        $target    = null;\\n        $direction = null;\\n        $previous  = $next = $node;\\n        while (true) {\\n            $previous = self::getPrevious($previous);\\n            $next     = self::getNext($next);\\n\\n            if ($previous === null && $next === null) {\\n                if (! $node->parent() instanceof FencedCode) {\\n                    $target    = $node->parent();\\n                    $direction = self::DIRECTION_SUFFIX;\\n                }\\n\\n                break;\\n            }\\n\\n            if ($node instanceof AttributesInline && ($previous === null || ($previous instanceof AbstractInline && $node->isBlock()))) {\\n                continue;\\n            }\\n\\n            if ($previous !== null && ! self::isAttributesNode($previous)) {\\n                $target    = $previous;\\n                $direction = self::DIRECTION_SUFFIX;\\n\\n                break;\\n            }\\n\\n            if ($next !== null && ! self::isAttributesNode($next)) {\\n                $target    = $next;\\n                $direction = self::DIRECTION_PREFIX;\\n\\n                break;\\n            }\\n        }\\n\\n        return [$target, $direction];\\n    }\\n\\n    \/**\\n     * Get any previous block (sibling or parent) this might apply to\\n     *\/\\n    private static function getPrevious(?Node $node = null): ?Node\\n    {\\n        if ($node instanceof Attributes) {\\n            if ($node->getTarget() === Attributes::TARGET_NEXT) {\\n                return null;\\n            }\\n\\n            if ($node->getTarget() === Attributes::TARGET_PARENT) {\\n                return $node->parent();\\n            }\\n        }\\n\\n        return $node instanceof Node ? $node->previous() : null;\\n    }\\n\\n    \/**\\n     * Get any previous block (sibling or parent) this might apply to\\n     *\/\\n    private static function getNext(?Node $node = null): ?Node\\n    {\\n        if ($node instanceof Attributes && $node->getTarget() !== Attributes::TARGET_NEXT) {\\n            return null;\\n        }\\n\\n        return $node instanceof Node ? $node->next() : null;\\n    }\\n\\n    private static function isAttributesNode(Node $node): bool\\n    {\\n        return $node instanceof Attributes || $node instanceof AttributesInline;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Node\/Attributes.php\",\"ext\":\"php\",\"size\":1399,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class Attributes extends AbstractBlock\\n{\\n    public const TARGET_PARENT   = 0;\\n    public const TARGET_PREVIOUS = 1;\\n    public const TARGET_NEXT     = 2;\\n\\n    \/** @var array<string, mixed> *\/\\n    private array $attributes;\\n\\n    private int $target = self::TARGET_NEXT;\\n\\n    \/**\\n     * @param array<string, mixed> $attributes\\n     *\/\\n    public function __construct(array $attributes)\\n    {\\n        parent::__construct();\\n\\n        $this->attributes = $attributes;\\n    }\\n\\n    \/**\\n     * @return array<string, mixed>\\n     *\/\\n    public function getAttributes(): array\\n    {\\n        return $this->attributes;\\n    }\\n\\n    \/**\\n     * @param array<string, mixed> $attributes\\n     *\/\\n    public function setAttributes(array $attributes): void\\n    {\\n        $this->attributes = $attributes;\\n    }\\n\\n    public function getTarget(): int\\n    {\\n        return $this->target;\\n    }\\n\\n    public function setTarget(int $target): void\\n    {\\n        $this->target = $target;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Node\/AttributesInline.php\",\"ext\":\"php\",\"size\":1225,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\nfinal class AttributesInline extends AbstractInline\\n{\\n    \/** @var array<string, mixed> *\/\\n    private array $attributes;\\n\\n    private bool $block;\\n\\n    \/**\\n     * @param array<string, mixed> $attributes\\n     *\/\\n    public function __construct(array $attributes, bool $block)\\n    {\\n        parent::__construct();\\n\\n        $this->attributes = $attributes;\\n        $this->block      = $block;\\n    }\\n\\n    \/**\\n     * @return array<string, mixed>\\n     *\/\\n    public function getAttributes(): array\\n    {\\n        return $this->attributes;\\n    }\\n\\n    \/**\\n     * @param array<string, mixed> $attributes\\n     *\/\\n    public function setAttributes(array $attributes): void\\n    {\\n        $this->attributes = $attributes;\\n    }\\n\\n    public function isBlock(): bool\\n    {\\n        return $this->block;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Parser\/AttributesInlineParser.php\",\"ext\":\"php\",\"size\":1690,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Node\\\\AttributesInline;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util\\\\AttributesHelper;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class AttributesInlineParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::string('{');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $cursor = $inlineContext->getCursor();\\n        $char   = (string) $cursor->peek(-1);\\n\\n        $attributes = AttributesHelper::parseAttributes($cursor);\\n        if ($attributes === []) {\\n            return false;\\n        }\\n\\n        if ($char === ' ' && ($prev = $inlineContext->getContainer()->lastChild()) instanceof StringContainerInterface) {\\n            $prev->setLiteral(\\\\rtrim($prev->getLiteral(), ' '));\\n        }\\n\\n        if ($char === '') {\\n            $cursor->advanceToNextNonSpaceOrNewline();\\n        }\\n\\n        $node = new AttributesInline($attributes, $char === ' ' || $char === '');\\n        $inlineContext->getContainer()->appendChild($node);\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Parser\/AttributesBlockContinueParser.php\",\"ext\":\"php\",\"size\":3257,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Node\\\\Attributes;\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util\\\\AttributesHelper;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class AttributesBlockContinueParser extends AbstractBlockContinueParser\\n{\\n    private Attributes $block;\\n\\n    private AbstractBlock $container;\\n\\n    private bool $hasSubsequentLine = false;\\n\\n    \/**\\n     * @param array<string, mixed> $attributes The attributes identified by the block start parser\\n     * @param AbstractBlock        $container  The node we were in when these attributes were discovered\\n     *\/\\n    public function __construct(array $attributes, AbstractBlock $container)\\n    {\\n        $this->block = new Attributes($attributes);\\n\\n        $this->container = $container;\\n    }\\n\\n    public function getBlock(): AbstractBlock\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        $this->hasSubsequentLine = true;\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        \/\/ Does this next line also have attributes?\\n        $attributes = AttributesHelper::parseAttributes($cursor);\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        if ($cursor->isAtEnd() && $attributes !== []) {\\n            \/\/ It does! Merge them into what we parsed previously\\n            $this->block->setAttributes(AttributesHelper::mergeAttributes(\\n                $this->block->getAttributes(),\\n                $attributes\\n            ));\\n\\n            \/\/ Tell the core parser we've consumed everything\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        \/\/ Okay, so there are no attributes on the next line\\n        \/\/ If this next line is blank we know we can't target the next node, it must be a previous one\\n        if ($cursor->isBlank()) {\\n            $this->block->setTarget(Attributes::TARGET_PREVIOUS);\\n        }\\n\\n        return BlockContinue::none();\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        \/\/ Attributes appearing at the very end of the document won't have any last lines to check\\n        \/\/ so we can make that determination here\\n        if (! $this->hasSubsequentLine) {\\n            $this->block->setTarget(Attributes::TARGET_PREVIOUS);\\n        }\\n\\n        \/\/ We know this block must apply to the \\\"previous\\\" block, but that could be a sibling or parent,\\n        \/\/ so we check the containing block to see which one it might be.\\n        if ($this->block->getTarget() === Attributes::TARGET_PREVIOUS && $this->block->parent() === $this->container) {\\n            $this->block->setTarget(Attributes::TARGET_PARENT);\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Parser\/AttributesBlockStartParser.php\",\"ext\":\"php\",\"size\":1355,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util\\\\AttributesHelper;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\nfinal class AttributesBlockStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        $originalPosition = $cursor->getPosition();\\n        $attributes       = AttributesHelper::parseAttributes($cursor);\\n\\n        if ($attributes === [] && $originalPosition === $cursor->getPosition()) {\\n            return BlockStart::none();\\n        }\\n\\n        if ($cursor->getNextNonSpaceCharacter() !== null) {\\n            return BlockStart::none();\\n        }\\n\\n        return BlockStart::of(new AttributesBlockContinueParser($attributes, $parserState->getActiveBlockParser()->getBlock()))->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Attributes\/Util\/AttributesHelper.php\",\"ext\":\"php\",\"size\":5824,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n * (c) 2015 Martin Haso\u0148 <martin.hason@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Attributes\\\\Util;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\n\/**\\n * @internal\\n *\/\\nfinal class AttributesHelper\\n{\\n    private const SINGLE_ATTRIBUTE = '\\\\s*([.]-?[_a-z][^\\\\s.}]*|[#][^\\\\s}]+|' . RegexHelper::PARTIAL_ATTRIBUTENAME . RegexHelper::PARTIAL_ATTRIBUTEVALUESPEC . ')\\\\s*';\\n    private const ATTRIBUTE_LIST   = '\/^{:?(' . self::SINGLE_ATTRIBUTE . ')+}\/i';\\n\\n    \/**\\n     * @return array<string, mixed>\\n     *\/\\n    public static function parseAttributes(Cursor $cursor): array\\n    {\\n        $state = $cursor->saveState();\\n        $cursor->advanceToNextNonSpaceOrNewline();\\n\\n        \/\/ Quick check to see if we might have attributes\\n        if ($cursor->getCharacter() !== '{') {\\n            $cursor->restoreState($state);\\n\\n            return [];\\n        }\\n\\n        \/\/ Attempt to match the entire attribute list expression\\n        \/\/ While this is less performant than checking for '{' now and '}' later, it simplifies\\n        \/\/ matching individual attributes since they won't need to look ahead for the closing '}'\\n        \/\/ while dealing with the fact that attributes can technically contain curly braces.\\n        \/\/ So we'll just match the start and end braces up front.\\n        $attributeExpression = $cursor->match(self::ATTRIBUTE_LIST);\\n        if ($attributeExpression === null) {\\n            $cursor->restoreState($state);\\n\\n            return [];\\n        }\\n\\n        \/\/ Trim the leading '{' or '{:' and the trailing '}'\\n        $attributeExpression = \\\\ltrim(\\\\substr($attributeExpression, 1, -1), ':');\\n        $attributeCursor     = new Cursor($attributeExpression);\\n\\n        \/** @var array<string, mixed> $attributes *\/\\n        $attributes = [];\\n        while ($attribute = \\\\trim((string) $attributeCursor->match('\/^' . self::SINGLE_ATTRIBUTE . '\/i'))) {\\n            if ($attribute[0] === '#') {\\n                $attributes['id'] = \\\\substr($attribute, 1);\\n\\n                continue;\\n            }\\n\\n            if ($attribute[0] === '.') {\\n                $attributes['class'][] = \\\\substr($attribute, 1);\\n\\n                continue;\\n            }\\n\\n            \/** @psalm-suppress PossiblyUndefinedArrayOffset *\/\\n            [$name, $value] = \\\\explode('=', $attribute, 2);\\n\\n            if ($value === 'true') {\\n                $attributes[$name] = true;\\n                continue;\\n            }\\n\\n            $first = $value[0];\\n            $last  = \\\\substr($value, -1);\\n            if (($first === '\\\"' && $last === '\\\"') || ($first === \\\"'\\\" && $last === \\\"'\\\") && \\\\strlen($value) > 1) {\\n                $value = \\\\substr($value, 1, -1);\\n            }\\n\\n            if (\\\\strtolower(\\\\trim($name)) === 'class') {\\n                foreach (\\\\array_filter(\\\\explode(' ', \\\\trim($value))) as $class) {\\n                    $attributes['class'][] = $class;\\n                }\\n            } else {\\n                $attributes[\\\\trim($name)] = \\\\trim($value);\\n            }\\n        }\\n\\n        if (isset($attributes['class'])) {\\n            $attributes['class'] = \\\\implode(' ', (array) $attributes['class']);\\n        }\\n\\n        return $attributes;\\n    }\\n\\n    \/**\\n     * @param Node|array<string, mixed> $attributes1\\n     * @param Node|array<string, mixed> $attributes2\\n     *\\n     * @return array<string, mixed>\\n     *\/\\n    public static function mergeAttributes($attributes1, $attributes2): array\\n    {\\n        $attributes = [];\\n        foreach ([$attributes1, $attributes2] as $arg) {\\n            if ($arg instanceof Node) {\\n                $arg = $arg->data->get('attributes');\\n            }\\n\\n            \/** @var array<string, mixed> $arg *\/\\n            $arg = (array) $arg;\\n            if (isset($arg['class'])) {\\n                if (\\\\is_string($arg['class'])) {\\n                    $arg['class'] = \\\\array_filter(\\\\explode(' ', \\\\trim($arg['class'])));\\n                }\\n\\n                foreach ($arg['class'] as $class) {\\n                    $attributes['class'][] = $class;\\n                }\\n\\n                unset($arg['class']);\\n            }\\n\\n            $attributes = \\\\array_merge($attributes, $arg);\\n        }\\n\\n        if (isset($attributes['class'])) {\\n            $attributes['class'] = \\\\implode(' ', $attributes['class']);\\n        }\\n\\n        return $attributes;\\n    }\\n\\n    \/**\\n     * @param array<string, mixed> $attributes\\n     * @param list<string>         $allowList\\n     *\\n     * @return array<string, mixed>\\n     *\/\\n    public static function filterAttributes(array $attributes, array $allowList, bool $allowUnsafeLinks): array\\n    {\\n        $allowList = \\\\array_fill_keys($allowList, true);\\n\\n        foreach ($attributes as $name => $value) {\\n            $attrNameLower = \\\\strtolower($name);\\n\\n            \/\/ Remove any unsafe links\\n            if (! $allowUnsafeLinks && ($attrNameLower === 'href' || $attrNameLower === 'src') && \\\\is_string($value) && RegexHelper::isLinkPotentiallyUnsafe($value)) {\\n                unset($attributes[$name]);\\n                continue;\\n            }\\n\\n            \/\/ No allowlist?\\n            if ($allowList === []) {\\n                \/\/ Just remove JS event handlers\\n                if (\\\\str_starts_with($attrNameLower, 'on')) {\\n                    unset($attributes[$name]);\\n                }\\n\\n                continue;\\n            }\\n\\n            \/\/ Remove any attributes not in that allowlist (case-sensitive)\\n            if (! isset($allowList[$name])) {\\n                unset($attributes[$name]);\\n            }\\n        }\\n\\n        return $attributes;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/ConfigurableExtensionInterface.php\",\"ext\":\"php\",\"size\":517,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension;\\n\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\n\\ninterface ConfigurableExtensionInterface extends ExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Renderer\/DescriptionRenderer.php\",\"ext\":\"php\",\"size\":1042,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\Description;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\n\\nfinal class DescriptionRenderer implements NodeRendererInterface\\n{\\n    \/**\\n     * @param Description $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Description::assertInstanceOf($node);\\n\\n        return new HtmlElement('dd', [], $childRenderer->renderNodes($node->children()));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Renderer\/DescriptionListRenderer.php\",\"ext\":\"php\",\"size\":1143,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionList;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\n\\nfinal class DescriptionListRenderer implements NodeRendererInterface\\n{\\n    \/**\\n     * @param DescriptionList $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): HtmlElement\\n    {\\n        DescriptionList::assertInstanceOf($node);\\n\\n        $separator = $childRenderer->getBlockSeparator();\\n\\n        return new HtmlElement('dl', [], $separator . $childRenderer->renderNodes($node->children()) . $separator);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Renderer\/DescriptionTermRenderer.php\",\"ext\":\"php\",\"size\":1058,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Renderer;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionTerm;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\n\\nfinal class DescriptionTermRenderer implements NodeRendererInterface\\n{\\n    \/**\\n     * @param DescriptionTerm $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        DescriptionTerm::assertInstanceOf($node);\\n\\n        return new HtmlElement('dt', [], $childRenderer->renderNodes($node->children()));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Event\/ConsecutiveDescriptionListMerger.php\",\"ext\":\"php\",\"size\":1171,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionList;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\n\\nfinal class ConsecutiveDescriptionListMerger\\n{\\n    public function __invoke(DocumentParsedEvent $event): void\\n    {\\n        foreach ($event->getDocument()->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $node) {\\n            if (! $node instanceof DescriptionList) {\\n                continue;\\n            }\\n\\n            if (! ($prev = $node->previous()) instanceof DescriptionList) {\\n                continue;\\n            }\\n\\n            \/\/ There's another description list behind this one; merge the current one into that\\n            foreach ($node->children() as $child) {\\n                $prev->appendChild($child);\\n            }\\n\\n            $node->detach();\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Event\/LooseDescriptionHandler.php\",\"ext\":\"php\",\"size\":2270,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Event;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\Description;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionList;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionTerm;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\n\\nfinal class LooseDescriptionHandler\\n{\\n    public function __invoke(DocumentParsedEvent $event): void\\n    {\\n        foreach ($event->getDocument()->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $description) {\\n            if (! $description instanceof Description) {\\n                continue;\\n            }\\n\\n            \/\/ Does this description need to be added to a list?\\n            if (! $description->parent() instanceof DescriptionList) {\\n                $list = new DescriptionList();\\n                \/\/ Taking any preceding paragraphs with it\\n                if (($paragraph = $description->previous()) instanceof Paragraph) {\\n                    $list->appendChild($paragraph);\\n                }\\n\\n                $description->replaceWith($list);\\n                $list->appendChild($description);\\n            }\\n\\n            \/\/ Is this description preceded by a paragraph that should really be a term?\\n            if (! (($paragraph = $description->previous()) instanceof Paragraph)) {\\n                continue;\\n            }\\n\\n            \/\/ Convert the paragraph into one or more terms\\n            $term = new DescriptionTerm();\\n            $paragraph->replaceWith($term);\\n\\n            foreach ($paragraph->children() as $child) {\\n                if ($child instanceof Newline) {\\n                    $newTerm = new DescriptionTerm();\\n                    $term->insertAfter($newTerm);\\n                    $term = $newTerm;\\n                    continue;\\n                }\\n\\n                $term->appendChild($child);\\n            }\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/DescriptionListExtension.php\",\"ext\":\"php\",\"size\":1903,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Event\\\\ConsecutiveDescriptionListMerger;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Event\\\\LooseDescriptionHandler;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\Description;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionList;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionTerm;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Parser\\\\DescriptionStartParser;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Renderer\\\\DescriptionListRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Renderer\\\\DescriptionRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Renderer\\\\DescriptionTermRenderer;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\n\\nfinal class DescriptionListExtension implements ExtensionInterface\\n{\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addBlockStartParser(new DescriptionStartParser());\\n\\n        $environment->addEventListener(DocumentParsedEvent::class, new LooseDescriptionHandler(), 1001);\\n        $environment->addEventListener(DocumentParsedEvent::class, new ConsecutiveDescriptionListMerger(), 1000);\\n\\n        $environment->addRenderer(DescriptionList::class, new DescriptionListRenderer());\\n        $environment->addRenderer(DescriptionTerm::class, new DescriptionTermRenderer());\\n        $environment->addRenderer(Description::class, new DescriptionRenderer());\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Node\/DescriptionTerm.php\",\"ext\":\"php\",\"size\":430,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nclass DescriptionTerm extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Node\/Description.php\",\"ext\":\"php\",\"size\":835,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\TightBlockInterface;\\n\\nclass Description extends AbstractBlock implements TightBlockInterface\\n{\\n    private bool $tight;\\n\\n    public function __construct(bool $tight = false)\\n    {\\n        parent::__construct();\\n\\n        $this->tight = $tight;\\n    }\\n\\n    public function isTight(): bool\\n    {\\n        return $this->tight;\\n    }\\n\\n    public function setTight(bool $tight): void\\n    {\\n        $this->tight = $tight;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Node\/DescriptionList.php\",\"ext\":\"php\",\"size\":430,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nclass DescriptionList extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Parser\/DescriptionStartParser.php\",\"ext\":\"php\",\"size\":2555,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\Description;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\nfinal class DescriptionStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented()) {\\n            return BlockStart::none();\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        if ($cursor->match('\/^:[ \\\\t]+\/') === null) {\\n            return BlockStart::none();\\n        }\\n\\n        $terms = $parserState->getParagraphContent();\\n\\n        $activeBlock = $parserState->getActiveBlockParser()->getBlock();\\n\\n        if ($terms !== null && $terms !== '') {\\n            \/\/ New description; tight; term(s) sitting in pending block that we will replace\\n            return BlockStart::of(...[new DescriptionListContinueParser()], ...self::splitTerms($terms), ...[new DescriptionContinueParser(true, $cursor->getPosition())])\\n                ->at($cursor)\\n                ->replaceActiveBlockParser();\\n        }\\n\\n        if ($activeBlock instanceof Paragraph && $activeBlock->parent() instanceof Description) {\\n            \/\/ Additional description in the same list as the parent description\\n            return BlockStart::of(new DescriptionContinueParser(true, $cursor->getPosition()))->at($cursor);\\n        }\\n\\n        if ($activeBlock->lastChild() instanceof Paragraph) {\\n            \/\/ New description; loose; term(s) sitting in previous closed paragraph block\\n            return BlockStart::of(new DescriptionContinueParser(false, $cursor->getPosition()))->at($cursor);\\n        }\\n\\n        \/\/ No preceding terms\\n        return BlockStart::none();\\n    }\\n\\n    \/**\\n     * @return array<int, DescriptionTermContinueParser>\\n     *\/\\n    private static function splitTerms(string $terms): array\\n    {\\n        $ret = [];\\n        foreach (\\\\explode(\\\"\\\\n\\\", $terms) as $term) {\\n            $ret[] = new DescriptionTermContinueParser($term);\\n        }\\n\\n        return $ret;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Parser\/DescriptionContinueParser.php\",\"ext\":\"php\",\"size\":1884,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\Description;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class DescriptionContinueParser extends AbstractBlockContinueParser\\n{\\n    private Description $block;\\n\\n    private int $indentation;\\n\\n    public function __construct(bool $tight, int $indentation)\\n    {\\n        $this->block       = new Description($tight);\\n        $this->indentation = $indentation;\\n    }\\n\\n    public function getBlock(): Description\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if ($cursor->isBlank()) {\\n            if ($this->block->firstChild() === null) {\\n                \/\/ Blank line after empty item\\n                return BlockContinue::none();\\n            }\\n\\n            $cursor->advanceToNextNonSpaceOrTab();\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        if ($cursor->getIndent() >= $this->indentation) {\\n            $cursor->advanceBy($this->indentation, true);\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        return BlockContinue::none();\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Parser\/DescriptionListContinueParser.php\",\"ext\":\"php\",\"size\":1520,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\Description;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionList;\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionTerm;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class DescriptionListContinueParser extends AbstractBlockContinueParser\\n{\\n    private DescriptionList $block;\\n\\n    public function __construct()\\n    {\\n        $this->block = new DescriptionList();\\n    }\\n\\n    public function getBlock(): DescriptionList\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return $childBlock instanceof DescriptionTerm || $childBlock instanceof Description;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/DescriptionList\/Parser\/DescriptionTermContinueParser.php\",\"ext\":\"php\",\"size\":1545,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\DescriptionList\\\\Node\\\\DescriptionTerm;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserWithInlinesInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserEngineInterface;\\n\\nfinal class DescriptionTermContinueParser extends AbstractBlockContinueParser implements BlockContinueParserWithInlinesInterface\\n{\\n    private DescriptionTerm $block;\\n\\n    private string $term;\\n\\n    public function __construct(string $term)\\n    {\\n        $this->block = new DescriptionTerm();\\n        $this->term  = $term;\\n    }\\n\\n    public function getBlock(): DescriptionTerm\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        return BlockContinue::finished();\\n    }\\n\\n    public function parseInlines(InlineParserEngineInterface $inlineParser): void\\n    {\\n        if ($this->term !== '') {\\n            $inlineParser->parse($this->term, $this->block);\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Mention\/Generator\/MentionGeneratorInterface.php\",\"ext\":\"php\",\"size\":542,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Mention;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\ninterface MentionGeneratorInterface\\n{\\n    public function generateMention(Mention $mention): ?AbstractInline;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Mention\/Generator\/CallbackGenerator.php\",\"ext\":\"php\",\"size\":1607,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\LogicException;\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Mention;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\nfinal class CallbackGenerator implements MentionGeneratorInterface\\n{\\n    \/**\\n     * A callback function which sets the URL on the passed mention and returns the mention, return a new AbstractInline based object or null if the mention is not a match\\n     *\\n     * @var callable(Mention): ?AbstractInline\\n     *\/\\n    private $callback;\\n\\n    public function __construct(callable $callback)\\n    {\\n        $this->callback = $callback;\\n    }\\n\\n    \/**\\n     * @throws LogicException\\n     *\/\\n    public function generateMention(Mention $mention): ?AbstractInline\\n    {\\n        $result = \\\\call_user_func($this->callback, $mention);\\n        if ($result === null) {\\n            return null;\\n        }\\n\\n        if ($result instanceof AbstractInline && ! ($result instanceof Mention)) {\\n            return $result;\\n        }\\n\\n        if ($result instanceof Mention && $result->hasUrl()) {\\n            return $mention;\\n        }\\n\\n        throw new LogicException('CallbackGenerator callable must set the URL on the passed mention and return the mention, return a new AbstractInline based object or null if the mention is not a match');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Mention\/Generator\/StringTemplateLinkGenerator.php\",\"ext\":\"php\",\"size\":846,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Mention;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\nfinal class StringTemplateLinkGenerator implements MentionGeneratorInterface\\n{\\n    private string $urlTemplate;\\n\\n    public function __construct(string $urlTemplate)\\n    {\\n        $this->urlTemplate = $urlTemplate;\\n    }\\n\\n    public function generateMention(Mention $mention): ?AbstractInline\\n    {\\n        $mention->setUrl(\\\\sprintf($this->urlTemplate, $mention->getIdentifier()));\\n\\n        return $mention;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Mention\/Mention.php\",\"ext\":\"php\",\"size\":2050,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Mention;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\n\\nclass Mention extends Link\\n{\\n    private string $name;\\n\\n    private string $prefix;\\n\\n    private string $identifier;\\n\\n    public function __construct(string $name, string $prefix, string $identifier, ?string $label = null)\\n    {\\n        $this->name       = $name;\\n        $this->prefix     = $prefix;\\n        $this->identifier = $identifier;\\n\\n        parent::__construct('', $label ?? \\\\sprintf('%s%s', $prefix, $identifier));\\n    }\\n\\n    public function getLabel(): ?string\\n    {\\n        if (($labelNode = $this->findLabelNode()) === null) {\\n            return null;\\n        }\\n\\n        return $labelNode->getLiteral();\\n    }\\n\\n    public function getIdentifier(): string\\n    {\\n        return $this->identifier;\\n    }\\n\\n    public function getName(): ?string\\n    {\\n        return $this->name;\\n    }\\n\\n    public function getPrefix(): string\\n    {\\n        return $this->prefix;\\n    }\\n\\n    public function hasUrl(): bool\\n    {\\n        return $this->url !== '';\\n    }\\n\\n    \/**\\n     * @return $this\\n     *\/\\n    public function setLabel(string $label): self\\n    {\\n        if (($labelNode = $this->findLabelNode()) === null) {\\n            $labelNode = new Text();\\n            $this->prependChild($labelNode);\\n        }\\n\\n        $labelNode->setLiteral($label);\\n\\n        return $this;\\n    }\\n\\n    private function findLabelNode(): ?Text\\n    {\\n        foreach ($this->children() as $child) {\\n            if ($child instanceof Text) {\\n                return $child;\\n            }\\n        }\\n\\n        return null;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Mention\/MentionParser.php\",\"ext\":\"php\",\"size\":2950,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Mention;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator\\\\CallbackGenerator;\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator\\\\MentionGeneratorInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator\\\\StringTemplateLinkGenerator;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class MentionParser implements InlineParserInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private string $name;\\n\\n    \/** @psalm-readonly *\/\\n    private string $prefix;\\n\\n    \/** @psalm-readonly *\/\\n    private string $identifierPattern;\\n\\n    \/** @psalm-readonly *\/\\n    private MentionGeneratorInterface $mentionGenerator;\\n\\n    public function __construct(string $name, string $prefix, string $identifierPattern, MentionGeneratorInterface $mentionGenerator)\\n    {\\n        $this->name              = $name;\\n        $this->prefix            = $prefix;\\n        $this->identifierPattern = $identifierPattern;\\n        $this->mentionGenerator  = $mentionGenerator;\\n    }\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::join(\\n            InlineParserMatch::string($this->prefix),\\n            InlineParserMatch::regex($this->identifierPattern)\\n        );\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $cursor = $inlineContext->getCursor();\\n\\n        \/\/ The prefix must not have any other characters immediately prior\\n        $previousChar = $cursor->peek(-1);\\n        if ($previousChar !== null && \\\\preg_match('\/\\\\w\/', $previousChar)) {\\n            \/\/ peek() doesn't modify the cursor, so no need to restore state first\\n            return false;\\n        }\\n\\n        [$prefix, $identifier] = $inlineContext->getSubMatches();\\n\\n        $mention = $this->mentionGenerator->generateMention(new Mention($this->name, $prefix, $identifier));\\n\\n        if ($mention === null) {\\n            return false;\\n        }\\n\\n        $cursor->advanceBy($inlineContext->getFullMatchLength());\\n        $inlineContext->getContainer()->appendChild($mention);\\n\\n        return true;\\n    }\\n\\n    public static function createWithStringTemplate(string $name, string $prefix, string $mentionRegex, string $urlTemplate): MentionParser\\n    {\\n        return new self($name, $prefix, $mentionRegex, new StringTemplateLinkGenerator($urlTemplate));\\n    }\\n\\n    public static function createWithCallback(string $name, string $prefix, string $mentionRegex, callable $callback): MentionParser\\n    {\\n        return new self($name, $prefix, $mentionRegex, new CallbackGenerator($callback));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Mention\/MentionExtension.php\",\"ext\":\"php\",\"size\":2718,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Mention;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Generator\\\\MentionGeneratorInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse League\\\\Config\\\\Exception\\\\InvalidConfigurationException;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class MentionExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $isAValidPartialRegex = static function (string $regex): bool {\\n            $regex = '\/' . $regex . '\/i';\\n\\n            return @\\\\preg_match($regex, '') !== false;\\n        };\\n\\n        $builder->addSchema('mentions', Expect::arrayOf(\\n            Expect::structure([\\n                'prefix' => Expect::string()->required(),\\n                'pattern' => Expect::string()->assert($isAValidPartialRegex, 'Pattern must not include starting\/ending delimiters (like \\\"\/\\\")')->required(),\\n                'generator' => Expect::anyOf(\\n                    Expect::type(MentionGeneratorInterface::class),\\n                    Expect::string(),\\n                    Expect::type('callable')\\n                )->required(),\\n            ])\\n        ));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $mentions = $environment->getConfiguration()->get('mentions');\\n        foreach ($mentions as $name => $mention) {\\n            if ($mention['generator'] instanceof MentionGeneratorInterface) {\\n                $environment->addInlineParser(new MentionParser($name, $mention['prefix'], $mention['pattern'], $mention['generator']));\\n            } elseif (\\\\is_string($mention['generator'])) {\\n                $environment->addInlineParser(MentionParser::createWithStringTemplate($name, $mention['prefix'], $mention['pattern'], $mention['generator']));\\n            } elseif (\\\\is_callable($mention['generator'])) {\\n                $environment->addInlineParser(MentionParser::createWithCallback($name, $mention['prefix'], $mention['pattern'], $mention['generator']));\\n            } else {\\n                throw new InvalidConfigurationException(\\\\sprintf('The \\\"generator\\\" provided for the \\\"%s\\\" MentionParser configuration must be a string template, callable, or an object that implements %s.', $name, MentionGeneratorInterface::class));\\n            }\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Autolink\/UrlAutolinkParser.php\",\"ext\":\"php\",\"size\":7335,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Autolink;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class UrlAutolinkParser implements InlineParserInterface\\n{\\n    private const ALLOWED_AFTER = [null, ' ', \\\"\\\\t\\\", \\\"\\\\n\\\", \\\"\\\\x0b\\\", \\\"\\\\x0c\\\", \\\"\\\\x0d\\\", '*', '_', '~', '('];\\n\\n    \/\/ RegEx adapted from https:\/\/github.com\/symfony\/symfony\/blob\/6.3\/src\/Symfony\/Component\/Validator\/Constraints\/UrlValidator.php\\n    private const REGEX = '~\\n        (\\n            # Must start with a supported scheme + auth, or \\\"www\\\"\\n            (?:\\n                (?:%s):\/\/                                                                            # protocol\\n                (?:(?:(?:[\\\\_\\\\.\\\\pL\\\\pN-]|%%[0-9A-Fa-f]{2})+:)?((?:[\\\\_\\\\.\\\\pL\\\\pN-]|%%[0-9A-Fa-f]{2})+)@)? # basic auth\\n            |www\\\\.)\\n            (?:\\n                (?:\\n                    (?:xn--[a-z0-9-]++\\\\.)*+xn--[a-z0-9-]++            # a domain name using punycode\\n                        |\\n                    (?:[\\\\pL\\\\pN\\\\pS\\\\pM\\\\-\\\\_]++\\\\.){1,127}[\\\\pL\\\\pN\\\\pM]++    # a multi-level domain name; total length must be 253 bytes or less\\n                        |\\n                    [a-z0-9\\\\-\\\\_]++                                    # a single-level domain name\\n                )\\\\.?\\n                    |                                                 # or\\n                \\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}                    # an IP address\\n                    |                                                 # or\\n                \\\\[\\n                    (?:(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-f]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,1}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,2}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,3}(?:(?:[0-9a-f]{1,4})))?::(?:(?:[0-9a-f]{1,4})):)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,4}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,5}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,6}(?:(?:[0-9a-f]{1,4})))?::))))\\n                \\\\]  # an IPv6 address\\n            )\\n            (?::[0-9]+)?                              # a port (optional)\\n            (?:\/ (?:[\\\\pL\\\\pN\\\\-._\\\\~!$&\\\\'()*+,;=:@]|%%[0-9A-Fa-f]{2})* )*        # a path\\n            (?:\\\\? (?:[\\\\pL\\\\pN\\\\-._\\\\~!$&\\\\'\\\\[\\\\]()*+,;=:@\/?]|%%[0-9A-Fa-f]{2})* )? # a query (optional)\\n            (?:\\\\# (?:[\\\\pL\\\\pN\\\\-._\\\\~!$&\\\\'()*+,;=:@\/?]|%%[0-9A-Fa-f]{2})* )?     # a fragment (optional)\\n        )~ixu';\\n\\n    \/**\\n     * @var string[]\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private array $prefixes = ['www.'];\\n\\n    \/**\\n     * @psalm-var non-empty-string\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private string $finalRegex;\\n\\n    private string $defaultProtocol;\\n\\n    \/**\\n     * @param array<int, string> $allowedProtocols\\n     *\/\\n    public function __construct(array $allowedProtocols = ['http', 'https', 'ftp'], string $defaultProtocol = 'http')\\n    {\\n        \/**\\n         * @psalm-suppress PropertyTypeCoercion\\n         *\/\\n        $this->finalRegex = \\\\sprintf(self::REGEX, \\\\implode('|', $allowedProtocols));\\n\\n        foreach ($allowedProtocols as $protocol) {\\n            $this->prefixes[] = $protocol . ':\/\/';\\n        }\\n\\n        $this->defaultProtocol = $defaultProtocol;\\n    }\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::oneOf(...$this->prefixes);\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $cursor = $inlineContext->getCursor();\\n\\n        \/\/ Autolinks can only come at the beginning of a line, after whitespace, or certain delimiting characters\\n        $previousChar = $cursor->peek(-1);\\n        if (! \\\\in_array($previousChar, self::ALLOWED_AFTER, true)) {\\n            return false;\\n        }\\n\\n        \/\/ Check if we have a valid URL\\n        if (! \\\\preg_match($this->finalRegex, $cursor->getRemainder(), $matches)) {\\n            return false;\\n        }\\n\\n        $url = $matches[0];\\n\\n        \/\/ Does the URL end with punctuation that should be stripped?\\n        if (\\\\preg_match('\/(.+?)([?!.,:*_~]+)$\/', $url, $matches)) {\\n            \/\/ Add the punctuation later\\n            $url = $matches[1];\\n        }\\n\\n        \/\/ Does the URL end with something that looks like an entity reference?\\n        if (\\\\preg_match('\/(.+)(&[A-Za-z0-9]+;)$\/', $url, $matches)) {\\n            $url = $matches[1];\\n        }\\n\\n        \/\/ Does the URL need unmatched parens chopped off?\\n        if (\\\\substr($url, -1) === ')' && ($diff = self::diffParens($url)) > 0) {\\n            $url = \\\\substr($url, 0, -$diff);\\n        }\\n\\n        $cursor->advanceBy(\\\\mb_strlen($url, 'UTF-8'));\\n\\n        \/\/ Auto-prefix 'http(s):\/\/' onto 'www' URLs\\n        if (\\\\substr($url, 0, 4) === 'www.') {\\n            $inlineContext->getContainer()->appendChild(new Link($this->defaultProtocol . ':\/\/' . $url, $url));\\n\\n            return true;\\n        }\\n\\n        $inlineContext->getContainer()->appendChild(new Link($url, $url));\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    private static function diffParens(string $content): int\\n    {\\n        \/\/ Scan the entire autolink for the total number of parentheses.\\n        \/\/ If there is a greater number of closing parentheses than opening ones,\\n        \/\/ we don\u2019t consider ANY of the last characters as part of the autolink,\\n        \/\/ in order to facilitate including an autolink inside a parenthesis.\\n        \\\\preg_match_all('\/[()]\/', $content, $matches);\\n\\n        $charCount = ['(' => 0, ')' => 0];\\n        foreach ($matches[0] as $char) {\\n            $charCount[$char]++;\\n        }\\n\\n        return $charCount[')'] - $charCount['('];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Autolink\/EmailAutolinkParser.php\",\"ext\":\"php\",\"size\":1449,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Autolink;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class EmailAutolinkParser implements InlineParserInterface\\n{\\n    private const REGEX = '[A-Za-z0-9.\\\\-_+]+@[A-Za-z0-9\\\\-_]+\\\\.[A-Za-z0-9\\\\-_.]+';\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex(self::REGEX);\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $email = $inlineContext->getFullMatch();\\n        \/\/ The last character cannot be - or _\\n        if (\\\\in_array(\\\\substr($email, -1), ['-', '_'], true)) {\\n            return false;\\n        }\\n\\n        \/\/ Does the URL end with punctuation that should be stripped?\\n        if (\\\\substr($email, -1) === '.') {\\n            $email = \\\\substr($email, 0, -1);\\n        }\\n\\n        $inlineContext->getCursor()->advanceBy(\\\\strlen($email));\\n        $inlineContext->getContainer()->appendChild(new Link('mailto:' . $email, $email));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Autolink\/AutolinkExtension.php\",\"ext\":\"php\",\"size\":1343,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Autolink;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class AutolinkExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('autolink', Expect::structure([\\n            'allowed_protocols' => Expect::listOf('string')->default(['http', 'https', 'ftp'])->mergeDefaults(false),\\n            'default_protocol' => Expect::string()->default('http'),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addInlineParser(new EmailAutolinkParser());\\n        $environment->addInlineParser(new UrlAutolinkParser(\\n            $environment->getConfiguration()->get('autolink.allowed_protocols'),\\n            $environment->getConfiguration()->get('autolink.default_protocol'),\\n        ));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Strikethrough\/Strikethrough.php\",\"ext\":\"php\",\"size\":916,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com> and uAfrica.com (http:\/\/uafrica.com)\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Strikethrough;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\DelimitedInterface;\\n\\nfinal class Strikethrough extends AbstractInline implements DelimitedInterface\\n{\\n    private string $delimiter;\\n\\n    public function __construct(string $delimiter = '~~')\\n    {\\n        parent::__construct();\\n\\n        $this->delimiter = $delimiter;\\n    }\\n\\n    public function getOpeningDelimiter(): string\\n    {\\n        return $this->delimiter;\\n    }\\n\\n    public function getClosingDelimiter(): string\\n    {\\n        return $this->delimiter;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Strikethrough\/StrikethroughDelimiterProcessor.php\",\"ext\":\"php\",\"size\":1892,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com> and uAfrica.com (http:\/\/uafrica.com)\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Strikethrough;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterInterface;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\CacheableDelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\nfinal class StrikethroughDelimiterProcessor implements CacheableDelimiterProcessorInterface\\n{\\n    public function getOpeningCharacter(): string\\n    {\\n        return '~';\\n    }\\n\\n    public function getClosingCharacter(): string\\n    {\\n        return '~';\\n    }\\n\\n    public function getMinLength(): int\\n    {\\n        return 1;\\n    }\\n\\n    public function getDelimiterUse(DelimiterInterface $opener, DelimiterInterface $closer): int\\n    {\\n        if ($opener->getLength() > 2 && $closer->getLength() > 2) {\\n            return 0;\\n        }\\n\\n        if ($opener->getLength() !== $closer->getLength()) {\\n            return 0;\\n        }\\n\\n        \/\/ $opener and $closer are the same length so we just return one of them\\n        return $opener->getLength();\\n    }\\n\\n    public function process(AbstractStringContainer $opener, AbstractStringContainer $closer, int $delimiterUse): void\\n    {\\n        $strikethrough = new Strikethrough(\\\\str_repeat('~', $delimiterUse));\\n\\n        $tmp = $opener->next();\\n        while ($tmp !== null && $tmp !== $closer) {\\n            $next = $tmp->next();\\n            $strikethrough->appendChild($tmp);\\n            $tmp = $next;\\n        }\\n\\n        $opener->insertAfter($strikethrough);\\n    }\\n\\n    public function getCacheKey(DelimiterInterface $closer): string\\n    {\\n        return '~' . $closer->getLength();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Strikethrough\/StrikethroughRenderer.php\",\"ext\":\"php\",\"size\":1339,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com> and uAfrica.com (http:\/\/uafrica.com)\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Strikethrough;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class StrikethroughRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Strikethrough $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Strikethrough::assertInstanceOf($node);\\n\\n        return new HtmlElement('del', $node->data->get('attributes'), $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'strikethrough';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Strikethrough\/StrikethroughExtension.php\",\"ext\":\"php\",\"size\":807,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com> and uAfrica.com (http:\/\/uafrica.com)\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Strikethrough;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\ExtensionInterface;\\n\\nfinal class StrikethroughExtension implements ExtensionInterface\\n{\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addDelimiterProcessor(new StrikethroughDelimiterProcessor());\\n        $environment->addRenderer(Strikethrough::class, new StrikethroughRenderer());\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/EmbedStartParser.php\",\"ext\":\"php\",\"size\":1696,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Util\\\\LinkParserHelper;\\n\\nclass EmbedStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented() || $parserState->getParagraphContent() !== null || ! ($parserState->getActiveBlockParser()->isContainer())) {\\n            return BlockStart::none();\\n        }\\n\\n        \/\/ 0-3 leading spaces are okay\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        \/\/ The line must begin with \\\"https:\/\/\\\"\\n        if (! str_starts_with($cursor->getRemainder(), 'https:\/\/')) {\\n            return BlockStart::none();\\n        }\\n\\n        \/\/ A valid link must be found next\\n        if (($dest = LinkParserHelper::parseLinkDestination($cursor)) === null) {\\n            return BlockStart::none();\\n        }\\n\\n        \/\/ Skip any trailing whitespace\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        \/\/ We must be at the end of the line; otherwise, this link was not by itself\\n        if (! $cursor->isAtEnd()) {\\n            return BlockStart::none();\\n        }\\n\\n        return BlockStart::of(new EmbedParser($dest))->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/DomainFilteringAdapter.php\",\"ext\":\"php\",\"size\":1396,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nclass DomainFilteringAdapter implements EmbedAdapterInterface\\n{\\n    private EmbedAdapterInterface $decorated;\\n\\n    \/** @psalm-var non-empty-string *\/\\n    private string $regex;\\n\\n    \/**\\n     * @param string[] $allowedDomains\\n     *\/\\n    public function __construct(EmbedAdapterInterface $decorated, array $allowedDomains)\\n    {\\n        $this->decorated = $decorated;\\n        $this->regex     = self::createRegex($allowedDomains);\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function updateEmbeds(array $embeds): void\\n    {\\n        $this->decorated->updateEmbeds(\\\\array_values(\\\\array_filter($embeds, function (Embed $embed): bool {\\n            return \\\\preg_match($this->regex, $embed->getUrl()) === 1;\\n        })));\\n    }\\n\\n    \/**\\n     * @param string[] $allowedDomains\\n     *\\n     * @psalm-return non-empty-string\\n     *\/\\n    private static function createRegex(array $allowedDomains): string\\n    {\\n        $allowedDomains = \\\\array_map('preg_quote', $allowedDomains);\\n\\n        return '\/^(?:https?:\\\\\/\\\\\/)?(?:[^.]+\\\\.)*(' . \\\\implode('|', $allowedDomains) . ')\/';\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/EmbedParser.php\",\"ext\":\"php\",\"size\":1336,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nclass EmbedParser implements BlockContinueParserInterface\\n{\\n    private Embed $embed;\\n\\n    public function __construct(string $url)\\n    {\\n        $this->embed = new Embed($url);\\n    }\\n\\n    public function getBlock(): AbstractBlock\\n    {\\n        return $this->embed;\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return false;\\n    }\\n\\n    public function canHaveLazyContinuationLines(): bool\\n    {\\n        return false;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return false;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        return BlockContinue::none();\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/EmbedExtension.php\",\"ext\":\"php\",\"size\":1765,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class EmbedExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('embed', Expect::structure([\\n            'adapter' => Expect::type(EmbedAdapterInterface::class),\\n            'allowed_domains' => Expect::arrayOf('string')->default([]),\\n            'fallback' => Expect::anyOf('link', 'remove')->default('link'),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $adapter = $environment->getConfiguration()->get('embed.adapter');\\n        \\\\assert($adapter instanceof EmbedAdapterInterface);\\n\\n        $allowedDomains = $environment->getConfiguration()->get('embed.allowed_domains');\\n        if ($allowedDomains !== []) {\\n            $adapter = new DomainFilteringAdapter($adapter, $allowedDomains);\\n        }\\n\\n        $environment\\n            ->addBlockStartParser(new EmbedStartParser(), 300)\\n            ->addEventListener(DocumentParsedEvent::class, new EmbedProcessor($adapter, $environment->getConfiguration()->get('embed.fallback')), 1010)\\n            ->addRenderer(Embed::class, new EmbedRenderer());\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/EmbedProcessor.php\",\"ext\":\"php\",\"size\":2069,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\n\\nfinal class EmbedProcessor\\n{\\n    public const FALLBACK_REMOVE = 'remove';\\n    public const FALLBACK_LINK   = 'link';\\n\\n    private EmbedAdapterInterface $adapter;\\n    private string $fallback;\\n\\n    public function __construct(EmbedAdapterInterface $adapter, string $fallback = self::FALLBACK_REMOVE)\\n    {\\n        $this->adapter  = $adapter;\\n        $this->fallback = $fallback;\\n    }\\n\\n    public function __invoke(DocumentParsedEvent $event): void\\n    {\\n        $document = $event->getDocument();\\n        $embeds   = [];\\n        foreach (new NodeIterator($document) as $node) {\\n            if (! ($node instanceof Embed)) {\\n                continue;\\n            }\\n\\n            if ($node->parent() !== $document) {\\n                $replacement = new Paragraph();\\n                $replacement->appendChild(new Text($node->getUrl()));\\n                $node->replaceWith($replacement);\\n            } else {\\n                $embeds[] = $node;\\n            }\\n        }\\n\\n        $this->adapter->updateEmbeds($embeds);\\n\\n        foreach ($embeds as $embed) {\\n            if ($embed->getEmbedCode() !== null) {\\n                continue;\\n            }\\n\\n            if ($this->fallback === self::FALLBACK_REMOVE) {\\n                $embed->detach();\\n            } elseif ($this->fallback === self::FALLBACK_LINK) {\\n                $paragraph = new Paragraph();\\n                $paragraph->appendChild(new Link($embed->getUrl(), $embed->getUrl()));\\n                $embed->replaceWith($paragraph);\\n            }\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/EmbedRenderer.php\",\"ext\":\"php\",\"size\":834,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\n\\nclass EmbedRenderer implements NodeRendererInterface\\n{\\n    \/**\\n     * @param Embed $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer)\\n    {\\n        Embed::assertInstanceOf($node);\\n\\n        return $node->getEmbedCode() ?? '';\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/EmbedAdapterInterface.php\",\"ext\":\"php\",\"size\":552,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\n\/**\\n * Interface for a service which updates the embed code(s) for the given array of embeds\\n *\/\\ninterface EmbedAdapterInterface\\n{\\n    \/**\\n     * @param Embed[] $embeds\\n     *\/\\n    public function updateEmbeds(array $embeds): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/Bridge\/OscaroteroEmbedAdapter.php\",\"ext\":\"php\",\"size\":1438,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed\\\\Bridge;\\n\\nuse Embed\\\\Embed as EmbedLib;\\nuse League\\\\CommonMark\\\\Exception\\\\MissingDependencyException;\\nuse League\\\\CommonMark\\\\Extension\\\\Embed\\\\Embed;\\nuse League\\\\CommonMark\\\\Extension\\\\Embed\\\\EmbedAdapterInterface;\\n\\nfinal class OscaroteroEmbedAdapter implements EmbedAdapterInterface\\n{\\n    private EmbedLib $embedLib;\\n\\n    public function __construct(?EmbedLib $embed = null)\\n    {\\n        if ($embed === null) {\\n            if (! \\\\class_exists(EmbedLib::class)) {\\n                throw new MissingDependencyException('The embed\/embed package is not installed. Please install it with Composer to use this adapter.');\\n            }\\n\\n            $embed = new EmbedLib();\\n        }\\n\\n        $this->embedLib = $embed;\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function updateEmbeds(array $embeds): void\\n    {\\n        $extractors = $this->embedLib->getMulti(...\\\\array_map(static fn (Embed $embed) => $embed->getUrl(), $embeds));\\n        foreach ($extractors as $i => $extractor) {\\n            if ($extractor->code !== null) {\\n                $embeds[$i]->setEmbedCode($extractor->code->html);\\n            }\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/Embed\/Embed.php\",\"ext\":\"php\",\"size\":1021,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\Embed;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class Embed extends AbstractBlock\\n{\\n    private string $url;\\n    private ?string $embedCode;\\n\\n    public function __construct(string $url, ?string $embedCode = null)\\n    {\\n        parent::__construct();\\n\\n        $this->url       = $url;\\n        $this->embedCode = $embedCode;\\n    }\\n\\n    public function getUrl(): string\\n    {\\n        return $this->url;\\n    }\\n\\n    public function setUrl(string $url): void\\n    {\\n        $this->url = $url;\\n    }\\n\\n    public function getEmbedCode(): ?string\\n    {\\n        return $this->embedCode;\\n    }\\n\\n    public function setEmbedCode(?string $embedCode): void\\n    {\\n        $this->embedCode = $embedCode;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/HeadingPermalink\/HeadingPermalinkExtension.php\",\"ext\":\"php\",\"size\":2131,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\HeadingPermalink;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\n\/**\\n * Extension which automatically anchor links to heading elements\\n *\/\\nfinal class HeadingPermalinkExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('heading_permalink', Expect::structure([\\n            'min_heading_level' => Expect::int()->min(1)->max(6)->default(1),\\n            'max_heading_level' => Expect::int()->min(1)->max(6)->default(6),\\n            'insert' => Expect::anyOf(HeadingPermalinkProcessor::INSERT_BEFORE, HeadingPermalinkProcessor::INSERT_AFTER, HeadingPermalinkProcessor::INSERT_NONE)->default(HeadingPermalinkProcessor::INSERT_BEFORE),\\n            'id_prefix' => Expect::string()->default('content'),\\n            'apply_id_to_heading' => Expect::bool()->default(false),\\n            'heading_class' => Expect::string()->default(''),\\n            'fragment_prefix' => Expect::string()->default('content'),\\n            'html_class' => Expect::string()->default('heading-permalink'),\\n            'title' => Expect::string()->default('Permalink'),\\n            'symbol' => Expect::string()->default(HeadingPermalinkRenderer::DEFAULT_SYMBOL),\\n            'aria_hidden' => Expect::bool()->default(true),\\n        ]));\\n    }\\n\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment->addEventListener(DocumentParsedEvent::class, new HeadingPermalinkProcessor(), -100);\\n        $environment->addRenderer(HeadingPermalink::class, new HeadingPermalinkRenderer());\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/HeadingPermalink\/HeadingPermalinkProcessor.php\",\"ext\":\"php\",\"size\":3819,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\HeadingPermalink;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentAwareInterface;\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\nuse League\\\\CommonMark\\\\Node\\\\RawMarkupContainerInterface;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerHelper;\\nuse League\\\\CommonMark\\\\Normalizer\\\\TextNormalizerInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\nuse League\\\\Config\\\\Exception\\\\InvalidConfigurationException;\\n\\n\/**\\n * Searches the Document for Heading elements and adds HeadingPermalinks to each one\\n *\/\\nfinal class HeadingPermalinkProcessor implements EnvironmentAwareInterface\\n{\\n    public const INSERT_BEFORE = 'before';\\n    public const INSERT_AFTER  = 'after';\\n    public const INSERT_NONE   = 'none';\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private TextNormalizerInterface $slugNormalizer;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    public function setEnvironment(EnvironmentInterface $environment): void\\n    {\\n        $this->config         = $environment->getConfiguration();\\n        $this->slugNormalizer = $environment->getSlugNormalizer();\\n    }\\n\\n    public function __invoke(DocumentParsedEvent $e): void\\n    {\\n        $min            = (int) $this->config->get('heading_permalink\/min_heading_level');\\n        $max            = (int) $this->config->get('heading_permalink\/max_heading_level');\\n        $applyToHeading = (bool) $this->config->get('heading_permalink\/apply_id_to_heading');\\n        $idPrefix       = (string) $this->config->get('heading_permalink\/id_prefix');\\n        $slugLength     = (int) $this->config->get('slug_normalizer\/max_length');\\n        $headingClass   = (string) $this->config->get('heading_permalink\/heading_class');\\n\\n        if ($idPrefix !== '') {\\n            $idPrefix .= '-';\\n        }\\n\\n        foreach ($e->getDocument()->iterator(NodeIterator::FLAG_BLOCKS_ONLY) as $node) {\\n            if ($node instanceof Heading && $node->getLevel() >= $min && $node->getLevel() <= $max) {\\n                $this->addHeadingLink($node, $slugLength, $idPrefix, $applyToHeading, $headingClass);\\n            }\\n        }\\n    }\\n\\n    private function addHeadingLink(Heading $heading, int $slugLength, string $idPrefix, bool $applyToHeading, string $headingClass): void\\n    {\\n        $text = StringContainerHelper::getChildText($heading, [RawMarkupContainerInterface::class]);\\n        $slug = $this->slugNormalizer->normalize($text, [\\n            'node' => $heading,\\n            'length' => $slugLength,\\n        ]);\\n\\n        if ($applyToHeading) {\\n            $heading->data->set('attributes\/id', $idPrefix . $slug);\\n        }\\n\\n        if ($headingClass !== '') {\\n            $heading->data->append('attributes\/class', $headingClass);\\n        }\\n\\n        $headingLinkAnchor = new HeadingPermalink($slug);\\n\\n        switch ($this->config->get('heading_permalink\/insert')) {\\n            case self::INSERT_BEFORE:\\n                $heading->prependChild($headingLinkAnchor);\\n\\n                return;\\n            case self::INSERT_AFTER:\\n                $heading->appendChild($headingLinkAnchor);\\n\\n                return;\\n            case self::INSERT_NONE:\\n                return;\\n            default:\\n                throw new InvalidConfigurationException(\\\"Invalid configuration value for heading_permalink\/insert; expected 'before', 'after', or 'none'\\\");\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/HeadingPermalink\/HeadingPermalink.php\",\"ext\":\"php\",\"size\":742,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\HeadingPermalink;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\n\/**\\n * Represents an anchor link within a heading\\n *\/\\nfinal class HeadingPermalink extends AbstractInline\\n{\\n    \/** @psalm-readonly *\/\\n    private string $slug;\\n\\n    public function __construct(string $slug)\\n    {\\n        parent::__construct();\\n\\n        $this->slug = $slug;\\n    }\\n\\n    public function getSlug(): string\\n    {\\n        return $this->slug;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/HeadingPermalink\/HeadingPermalinkRenderer.php\",\"ext\":\"php\",\"size\":3041,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\HeadingPermalink;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\n\/**\\n * Renders the HeadingPermalink elements\\n *\/\\nfinal class HeadingPermalinkRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    public const DEFAULT_SYMBOL = '\u00b6';\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    \/**\\n     * @param HeadingPermalink $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        HeadingPermalink::assertInstanceOf($node);\\n\\n        $slug = $node->getSlug();\\n\\n        $fragmentPrefix = (string) $this->config->get('heading_permalink\/fragment_prefix');\\n        if ($fragmentPrefix !== '') {\\n            $fragmentPrefix .= '-';\\n        }\\n\\n        $attrs    = $node->data->getData('attributes');\\n        $appendId = ! $this->config->get('heading_permalink\/apply_id_to_heading');\\n\\n        if ($appendId) {\\n            $idPrefix = (string) $this->config->get('heading_permalink\/id_prefix');\\n\\n            if ($idPrefix !== '') {\\n                $idPrefix .= '-';\\n            }\\n\\n            $attrs->set('id', $idPrefix . $slug);\\n        }\\n\\n        $attrs->set('href', '#' . $fragmentPrefix . $slug);\\n        $attrs->append('class', $this->config->get('heading_permalink\/html_class'));\\n\\n        $hidden = $this->config->get('heading_permalink\/aria_hidden');\\n        if ($hidden) {\\n            $attrs->set('aria-hidden', 'true');\\n        }\\n\\n        $attrs->set('title', $this->config->get('heading_permalink\/title'));\\n\\n        $symbol = $this->config->get('heading_permalink\/symbol');\\n        \\\\assert(\\\\is_string($symbol));\\n\\n        return new HtmlElement('a', $attrs->export(), \\\\htmlspecialchars($symbol), false);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'heading_permalink';\\n    }\\n\\n    \/**\\n     * @param HeadingPermalink $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        HeadingPermalink::assertInstanceOf($node);\\n\\n        return [\\n            'slug' => $node->getSlug(),\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/BlockQuoteRenderer.php\",\"ext\":\"php\",\"size\":1941,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\BlockQuote;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class BlockQuoteRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param BlockQuote $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        BlockQuote::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        $filling        = $childRenderer->renderNodes($node->children());\\n        $innerSeparator = $childRenderer->getInnerSeparator();\\n        if ($filling === '') {\\n            return new HtmlElement('blockquote', $attrs, $innerSeparator);\\n        }\\n\\n        return new HtmlElement(\\n            'blockquote',\\n            $attrs,\\n            $innerSeparator . $filling . $innerSeparator\\n        );\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'block_quote';\\n    }\\n\\n    \/**\\n     * @param BlockQuote $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/HeadingRenderer.php\",\"ext\":\"php\",\"size\":1728,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class HeadingRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Heading $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Heading::assertInstanceOf($node);\\n\\n        $tag = 'h' . $node->getLevel();\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement($tag, $attrs, $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'heading';\\n    }\\n\\n    \/**\\n     * @param Heading $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        Heading::assertInstanceOf($node);\\n\\n        return ['level' => $node->getLevel()];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/ThematicBreakRenderer.php\",\"ext\":\"php\",\"size\":1495,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ThematicBreak;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class ThematicBreakRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param ThematicBreak $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        ThematicBreak::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement('hr', $attrs, '', true);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'thematic_break';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/ListBlockRenderer.php\",\"ext\":\"php\",\"size\":2462,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class ListBlockRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param ListBlock $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        ListBlock::assertInstanceOf($node);\\n\\n        $listData = $node->getListData();\\n\\n        $tag = $listData->type === ListBlock::TYPE_BULLET ? 'ul' : 'ol';\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        if ($listData->start !== null && $listData->start !== 1) {\\n            $attrs['start'] = (string) $listData->start;\\n        }\\n\\n        $innerSeparator = $childRenderer->getInnerSeparator();\\n\\n        return new HtmlElement($tag, $attrs, $innerSeparator . $childRenderer->renderNodes($node->children()) . $innerSeparator);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'list';\\n    }\\n\\n    \/**\\n     * @param ListBlock $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        ListBlock::assertInstanceOf($node);\\n\\n        $data = $node->getListData();\\n\\n        if ($data->type === ListBlock::TYPE_BULLET) {\\n            return [\\n                'type' => $data->type,\\n                'tight' => $node->isTight() ? 'true' : 'false',\\n            ];\\n        }\\n\\n        return [\\n            'type' => $data->type,\\n            'start' => $data->start ?? 1,\\n            'tight' => $node->isTight(),\\n            'delimiter' => $data->delimiter ?? ListBlock::DELIM_PERIOD,\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/IndentedCodeRenderer.php\",\"ext\":\"php\",\"size\":1635,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\IndentedCode;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Util\\\\Xml;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class IndentedCodeRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param IndentedCode $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        IndentedCode::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement(\\n            'pre',\\n            [],\\n            new HtmlElement('code', $attrs, Xml::escape($node->getLiteral()))\\n        );\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'code_block';\\n    }\\n\\n    \/**\\n     * @return array<string, scalar>\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/FencedCodeRenderer.php\",\"ext\":\"php\",\"size\":2225,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\FencedCode;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Util\\\\Xml;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class FencedCodeRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param FencedCode $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        FencedCode::assertInstanceOf($node);\\n\\n        $attrs = $node->data->getData('attributes');\\n\\n        $infoWords = $node->getInfoWords();\\n        if (\\\\count($infoWords) !== 0 && $infoWords[0] !== '') {\\n            $class = $infoWords[0];\\n            if (! \\\\str_starts_with($class, 'language-')) {\\n                $class = 'language-' . $class;\\n            }\\n\\n            $attrs->append('class', $class);\\n        }\\n\\n        return new HtmlElement(\\n            'pre',\\n            [],\\n            new HtmlElement('code', $attrs->export(), Xml::escape($node->getLiteral()))\\n        );\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'code_block';\\n    }\\n\\n    \/**\\n     * @param FencedCode $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        FencedCode::assertInstanceOf($node);\\n\\n        if (($info = $node->getInfo()) === null || $info === '') {\\n            return [];\\n        }\\n\\n        return ['info' => $info];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/HtmlBlockRenderer.php\",\"ext\":\"php\",\"size\":1835,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlFilter;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class HtmlBlockRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param HtmlBlock $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        HtmlBlock::assertInstanceOf($node);\\n\\n        $htmlInput = $this->config->get('html_input');\\n\\n        return HtmlFilter::filter($node->getLiteral(), $htmlInput);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'html_block';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Block\/ListItemRenderer.php\",\"ext\":\"php\",\"size\":2283,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\TightBlockInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class ListItemRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param ListItem $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        ListItem::assertInstanceOf($node);\\n\\n        $contents = $childRenderer->renderNodes($node->children());\\n\\n        $inTightList = ($parent = $node->parent()) && $parent instanceof TightBlockInterface && $parent->isTight();\\n\\n        if ($this->needsBlockSeparator($node->firstChild(), $inTightList)) {\\n            $contents = \\\"\\\\n\\\" . $contents;\\n        }\\n\\n        if ($this->needsBlockSeparator($node->lastChild(), $inTightList)) {\\n            $contents .= \\\"\\\\n\\\";\\n        }\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement('li', $attrs, $contents);\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'item';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n\\n    private function needsBlockSeparator(?Node $child, bool $inTightList): bool\\n    {\\n        if ($child instanceof Paragraph && $inTightList) {\\n            return false;\\n        }\\n\\n        return $child instanceof AbstractBlock;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Inline\/LinkRenderer.php\",\"ext\":\"php\",\"size\":2617,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class LinkRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param Link $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Link::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        $forbidUnsafeLinks = ! $this->config->get('allow_unsafe_links');\\n        if (! ($forbidUnsafeLinks && RegexHelper::isLinkPotentiallyUnsafe($node->getUrl()))) {\\n            $attrs['href'] = $node->getUrl();\\n        }\\n\\n        if (($title = $node->getTitle()) !== null) {\\n            $attrs['title'] = $title;\\n        }\\n\\n        if (isset($attrs['target']) && $attrs['target'] === '_blank' && ! isset($attrs['rel'])) {\\n            $attrs['rel'] = 'noopener noreferrer';\\n        }\\n\\n        return new HtmlElement('a', $attrs, $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'link';\\n    }\\n\\n    \/**\\n     * @param Link $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        Link::assertInstanceOf($node);\\n\\n        return [\\n            'destination' => $node->getUrl(),\\n            'title' => $node->getTitle() ?? '',\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Inline\/HtmlInlineRenderer.php\",\"ext\":\"php\",\"size\":1842,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\HtmlInline;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlFilter;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class HtmlInlineRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param HtmlInline $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): string\\n    {\\n        HtmlInline::assertInstanceOf($node);\\n\\n        $htmlInput = $this->config->get('html_input');\\n\\n        return HtmlFilter::filter($node->getLiteral(), $htmlInput);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'html_inline';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Inline\/ImageRenderer.php\",\"ext\":\"php\",\"size\":3037,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Image;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Node\\\\NodeIterator;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class ImageRenderer implements NodeRendererInterface, XmlNodeRendererInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param Image $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Image::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        $forbidUnsafeLinks = ! $this->config->get('allow_unsafe_links');\\n        if ($forbidUnsafeLinks && RegexHelper::isLinkPotentiallyUnsafe($node->getUrl())) {\\n            $attrs['src'] = '';\\n        } else {\\n            $attrs['src'] = $node->getUrl();\\n        }\\n\\n        $attrs['alt'] = $this->getAltText($node);\\n\\n        if (($title = $node->getTitle()) !== null) {\\n            $attrs['title'] = $title;\\n        }\\n\\n        return new HtmlElement('img', $attrs, '', true);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'image';\\n    }\\n\\n    \/**\\n     * @param Image $node\\n     *\\n     * @return array<string, scalar>\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        Image::assertInstanceOf($node);\\n\\n        return [\\n            'destination' => $node->getUrl(),\\n            'title' => $node->getTitle() ?? '',\\n        ];\\n    }\\n\\n    private function getAltText(Image $node): string\\n    {\\n        $altText = '';\\n\\n        foreach ((new NodeIterator($node)) as $n) {\\n            if ($n instanceof StringContainerInterface) {\\n                $altText .= $n->getLiteral();\\n            } elseif ($n instanceof Newline) {\\n                $altText .= \\\"\\\\n\\\";\\n            }\\n        }\\n\\n        return $altText;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Inline\/CodeRenderer.php\",\"ext\":\"php\",\"size\":1509,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Code;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Util\\\\Xml;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class CodeRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Code $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Code::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement('code', $attrs, Xml::escape($node->getLiteral()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'code';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Inline\/EmphasisRenderer.php\",\"ext\":\"php\",\"size\":1505,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Emphasis;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class EmphasisRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Emphasis $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Emphasis::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement('em', $attrs, $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'emph';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Renderer\/Inline\/StrongRenderer.php\",\"ext\":\"php\",\"size\":1503,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Renderer\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Strong;\\nuse League\\\\CommonMark\\\\Node\\\\Node;\\nuse League\\\\CommonMark\\\\Renderer\\\\ChildNodeRendererInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\NodeRendererInterface;\\nuse League\\\\CommonMark\\\\Util\\\\HtmlElement;\\nuse League\\\\CommonMark\\\\Xml\\\\XmlNodeRendererInterface;\\n\\nfinal class StrongRenderer implements NodeRendererInterface, XmlNodeRendererInterface\\n{\\n    \/**\\n     * @param Strong $node\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @psalm-suppress MoreSpecificImplementedParamType\\n     *\/\\n    public function render(Node $node, ChildNodeRendererInterface $childRenderer): \\\\Stringable\\n    {\\n        Strong::assertInstanceOf($node);\\n\\n        $attrs = $node->data->get('attributes');\\n\\n        return new HtmlElement('strong', $attrs, $childRenderer->renderNodes($node->children()));\\n    }\\n\\n    public function getXmlTagName(Node $node): string\\n    {\\n        return 'strong';\\n    }\\n\\n    \/**\\n     * {@inheritDoc}\\n     *\/\\n    public function getXmlAttributes(Node $node): array\\n    {\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Delimiter\/Processor\/EmphasisDelimiterProcessor.php\",\"ext\":\"php\",\"size\":3547,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * Additional emphasis processing code based on commonmark-java (https:\/\/github.com\/atlassian\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Delimiter\\\\Processor;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterInterface;\\nuse League\\\\CommonMark\\\\Delimiter\\\\Processor\\\\CacheableDelimiterProcessorInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Emphasis;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Strong;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class EmphasisDelimiterProcessor implements CacheableDelimiterProcessorInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private string $char;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ConfigurationInterface $config;\\n\\n    \/**\\n     * @param string $char The emphasis character to use (typically '*' or '_')\\n     *\/\\n    public function __construct(string $char)\\n    {\\n        $this->char = $char;\\n    }\\n\\n    public function getOpeningCharacter(): string\\n    {\\n        return $this->char;\\n    }\\n\\n    public function getClosingCharacter(): string\\n    {\\n        return $this->char;\\n    }\\n\\n    public function getMinLength(): int\\n    {\\n        return 1;\\n    }\\n\\n    public function getDelimiterUse(DelimiterInterface $opener, DelimiterInterface $closer): int\\n    {\\n        \/\/ \\\"Multiple of 3\\\" rule for internal delimiter runs\\n        if (($opener->canClose() || $closer->canOpen()) && $closer->getOriginalLength() % 3 !== 0 && ($opener->getOriginalLength() + $closer->getOriginalLength()) % 3 === 0) {\\n            return 0;\\n        }\\n\\n        \/\/ Calculate actual number of delimiters used from this closer\\n        if ($opener->getLength() >= 2 && $closer->getLength() >= 2) {\\n            if ($this->config->get('commonmark\/enable_strong')) {\\n                return 2;\\n            }\\n\\n            return 0;\\n        }\\n\\n        if ($this->config->get('commonmark\/enable_em')) {\\n            return 1;\\n        }\\n\\n        return 0;\\n    }\\n\\n    public function process(AbstractStringContainer $opener, AbstractStringContainer $closer, int $delimiterUse): void\\n    {\\n        if ($delimiterUse === 1) {\\n            $emphasis = new Emphasis($this->char);\\n        } elseif ($delimiterUse === 2) {\\n            $emphasis = new Strong($this->char . $this->char);\\n        } else {\\n            return;\\n        }\\n\\n        $next = $opener->next();\\n        while ($next !== null && $next !== $closer) {\\n            $tmp = $next->next();\\n            $emphasis->appendChild($next);\\n            $next = $tmp;\\n        }\\n\\n        $opener->insertAfter($emphasis);\\n    }\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function getCacheKey(DelimiterInterface $closer): string\\n    {\\n        return \\\\sprintf(\\n            '%s-%s-%d-%d',\\n            $this->char,\\n            $closer->canOpen() ? 'canOpen' : 'cannotOpen',\\n            $closer->getOriginalLength() % 3,\\n            $closer->getLength(),\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/ListBlock.php\",\"ext\":\"php\",\"size\":1336,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\TightBlockInterface;\\n\\nclass ListBlock extends AbstractBlock implements TightBlockInterface\\n{\\n    public const TYPE_BULLET  = 'bullet';\\n    public const TYPE_ORDERED = 'ordered';\\n\\n    public const DELIM_PERIOD = 'period';\\n    public const DELIM_PAREN  = 'paren';\\n\\n    protected bool $tight = false; \/\/ TODO Make lists tight by default in v3\\n\\n    \/** @psalm-readonly *\/\\n    protected ListData $listData;\\n\\n    public function __construct(ListData $listData)\\n    {\\n        parent::__construct();\\n\\n        $this->listData = $listData;\\n    }\\n\\n    public function getListData(): ListData\\n    {\\n        return $this->listData;\\n    }\\n\\n    public function isTight(): bool\\n    {\\n        return $this->tight;\\n    }\\n\\n    public function setTight(bool $tight): void\\n    {\\n        $this->tight = $tight;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/Heading.php\",\"ext\":\"php\",\"size\":866,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nfinal class Heading extends AbstractBlock\\n{\\n    private int $level;\\n\\n    public function __construct(int $level)\\n    {\\n        parent::__construct();\\n\\n        $this->level = $level;\\n    }\\n\\n    public function getLevel(): int\\n    {\\n        return $this->level;\\n    }\\n\\n    public function setLevel(int $level): void\\n    {\\n        $this->level = $level;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/BlockQuote.php\",\"ext\":\"php\",\"size\":426,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nclass BlockQuote extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/ListItem.php\",\"ext\":\"php\",\"size\":832,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nclass ListItem extends AbstractBlock\\n{\\n    \/** @psalm-readonly *\/\\n    protected ListData $listData;\\n\\n    public function __construct(ListData $listData)\\n    {\\n        parent::__construct();\\n\\n        $this->listData = $listData;\\n    }\\n\\n    public function getListData(): ListData\\n    {\\n        return $this->listData;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/IndentedCode.php\",\"ext\":\"php\",\"size\":744,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerInterface;\\n\\nfinal class IndentedCode extends AbstractBlock implements StringContainerInterface\\n{\\n    private string $literal = '';\\n\\n    public function getLiteral(): string\\n    {\\n        return $this->literal;\\n    }\\n\\n    public function setLiteral(string $literal): void\\n    {\\n        $this->literal = $literal;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/FencedCode.php\",\"ext\":\"php\",\"size\":2040,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\StringContainerInterface;\\n\\nfinal class FencedCode extends AbstractBlock implements StringContainerInterface\\n{\\n    private ?string $info = null;\\n\\n    private string $literal = '';\\n\\n    private int $length;\\n\\n    private string $char;\\n\\n    private int $offset;\\n\\n    public function __construct(int $length, string $char, int $offset)\\n    {\\n        parent::__construct();\\n\\n        $this->length = $length;\\n        $this->char   = $char;\\n        $this->offset = $offset;\\n    }\\n\\n    public function getInfo(): ?string\\n    {\\n        return $this->info;\\n    }\\n\\n    \/**\\n     * @return string[]\\n     *\/\\n    public function getInfoWords(): array\\n    {\\n        return \\\\preg_split('\/\\\\s+\/', $this->info ?? '') ?: [];\\n    }\\n\\n    public function setInfo(string $info): void\\n    {\\n        $this->info = $info;\\n    }\\n\\n    public function getLiteral(): string\\n    {\\n        return $this->literal;\\n    }\\n\\n    public function setLiteral(string $literal): void\\n    {\\n        $this->literal = $literal;\\n    }\\n\\n    public function getChar(): string\\n    {\\n        return $this->char;\\n    }\\n\\n    public function setChar(string $char): void\\n    {\\n        $this->char = $char;\\n    }\\n\\n    public function getLength(): int\\n    {\\n        return $this->length;\\n    }\\n\\n    public function setLength(int $length): void\\n    {\\n        $this->length = $length;\\n    }\\n\\n    public function getOffset(): int\\n    {\\n        return $this->offset;\\n    }\\n\\n    public function setOffset(int $offset): void\\n    {\\n        $this->offset = $offset;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/ThematicBreak.php\",\"ext\":\"php\",\"size\":429,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\nclass ThematicBreak extends AbstractBlock\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/ListData.php\",\"ext\":\"php\",\"size\":1080,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nclass ListData\\n{\\n    public ?int $start = null;\\n\\n    public int $padding = 0;\\n\\n    \/**\\n     * @psalm-var ListBlock::TYPE_*\\n     * @phpstan-var ListBlock::TYPE_*\\n     *\/\\n    public string $type;\\n\\n    \/**\\n     * @psalm-var ListBlock::DELIM_*|null\\n     * @phpstan-var ListBlock::DELIM_*|null\\n     *\/\\n    public ?string $delimiter = null;\\n\\n    public ?string $bulletChar = null;\\n\\n    public int $markerOffset;\\n\\n    public function equals(ListData $data): bool\\n    {\\n        return $this->type === $data->type &&\\n            $this->delimiter === $data->delimiter &&\\n            $this->bulletChar === $data->bulletChar;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Block\/HtmlBlock.php\",\"ext\":\"php\",\"size\":1831,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\RawMarkupContainerInterface;\\n\\nfinal class HtmlBlock extends AbstractBlock implements RawMarkupContainerInterface\\n{\\n    \/\/ Any changes to these constants should be reflected in .phpstorm.meta.php\\n    public const TYPE_1_CODE_CONTAINER = 1;\\n    public const TYPE_2_COMMENT        = 2;\\n    public const TYPE_3                = 3;\\n    public const TYPE_4                = 4;\\n    public const TYPE_5_CDATA          = 5;\\n    public const TYPE_6_BLOCK_ELEMENT  = 6;\\n    public const TYPE_7_MISC_ELEMENT   = 7;\\n\\n    \/**\\n     * @psalm-var self::TYPE_* $type\\n     * @phpstan-var self::TYPE_* $type\\n     *\/\\n    private int $type;\\n\\n    private string $literal = '';\\n\\n    \/**\\n     * @psalm-param self::TYPE_* $type\\n     *\\n     * @phpstan-param self::TYPE_* $type\\n     *\/\\n    public function __construct(int $type)\\n    {\\n        parent::__construct();\\n\\n        $this->type = $type;\\n    }\\n\\n    \/**\\n     * @psalm-return self::TYPE_*\\n     *\\n     * @phpstan-return self::TYPE_*\\n     *\/\\n    public function getType(): int\\n    {\\n        return $this->type;\\n    }\\n\\n    \/**\\n     * @psalm-param self::TYPE_* $type\\n     *\\n     * @phpstan-param self::TYPE_* $type\\n     *\/\\n    public function setType(int $type): void\\n    {\\n        $this->type = $type;\\n    }\\n\\n    public function getLiteral(): string\\n    {\\n        return $this->literal;\\n    }\\n\\n    public function setLiteral(string $literal): void\\n    {\\n        $this->literal = $literal;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/Link.php\",\"ext\":\"php\",\"size\":1108,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\n\\nclass Link extends AbstractWebResource\\n{\\n    protected ?string $title = null;\\n\\n    public function __construct(string $url, ?string $label = null, ?string $title = null)\\n    {\\n        parent::__construct($url);\\n\\n        if ($label !== null && $label !== '') {\\n            $this->appendChild(new Text($label));\\n        }\\n\\n        $this->title = $title;\\n    }\\n\\n    public function getTitle(): ?string\\n    {\\n        if ($this->title === '') {\\n            return null;\\n        }\\n\\n        return $this->title;\\n    }\\n\\n    public function setTitle(?string $title): void\\n    {\\n        $this->title = $title;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/AbstractWebResource.php\",\"ext\":\"php\",\"size\":879,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\n\\nabstract class AbstractWebResource extends AbstractInline\\n{\\n    protected string $url;\\n\\n    public function __construct(string $url)\\n    {\\n        parent::__construct();\\n\\n        $this->url = $url;\\n    }\\n\\n    public function getUrl(): string\\n    {\\n        return $this->url;\\n    }\\n\\n    public function setUrl(string $url): void\\n    {\\n        $this->url = $url;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/Code.php\",\"ext\":\"php\",\"size\":566,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\n\\nclass Code extends AbstractStringContainer\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/Image.php\",\"ext\":\"php\",\"size\":1109,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\n\\nclass Image extends AbstractWebResource\\n{\\n    protected ?string $title = null;\\n\\n    public function __construct(string $url, ?string $label = null, ?string $title = null)\\n    {\\n        parent::__construct($url);\\n\\n        if ($label !== null && $label !== '') {\\n            $this->appendChild(new Text($label));\\n        }\\n\\n        $this->title = $title;\\n    }\\n\\n    public function getTitle(): ?string\\n    {\\n        if ($this->title === '') {\\n            return null;\\n        }\\n\\n        return $this->title;\\n    }\\n\\n    public function setTitle(?string $title): void\\n    {\\n        $this->title = $title;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/Emphasis.php\",\"ext\":\"php\",\"size\":1006,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\DelimitedInterface;\\n\\nfinal class Emphasis extends AbstractInline implements DelimitedInterface\\n{\\n    private string $delimiter;\\n\\n    public function __construct(string $delimiter = '_')\\n    {\\n        parent::__construct();\\n\\n        $this->delimiter = $delimiter;\\n    }\\n\\n    public function getOpeningDelimiter(): string\\n    {\\n        return $this->delimiter;\\n    }\\n\\n    public function getClosingDelimiter(): string\\n    {\\n        return $this->delimiter;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/Strong.php\",\"ext\":\"php\",\"size\":1005,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractInline;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\DelimitedInterface;\\n\\nfinal class Strong extends AbstractInline implements DelimitedInterface\\n{\\n    private string $delimiter;\\n\\n    public function __construct(string $delimiter = '**')\\n    {\\n        parent::__construct();\\n\\n        $this->delimiter = $delimiter;\\n    }\\n\\n    public function getOpeningDelimiter(): string\\n    {\\n        return $this->delimiter;\\n    }\\n\\n    public function getClosingDelimiter(): string\\n    {\\n        return $this->delimiter;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Node\/Inline\/HtmlInline.php\",\"ext\":\"php\",\"size\":673,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractStringContainer;\\nuse League\\\\CommonMark\\\\Node\\\\RawMarkupContainerInterface;\\n\\nfinal class HtmlInline extends AbstractStringContainer implements RawMarkupContainerInterface\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/ListBlockStartParser.php\",\"ext\":\"php\",\"size\":5584,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListData;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\nuse League\\\\Config\\\\ConfigurationAwareInterface;\\nuse League\\\\Config\\\\ConfigurationInterface;\\n\\nfinal class ListBlockStartParser implements BlockStartParserInterface, ConfigurationAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?ConfigurationInterface $config = null;\\n\\n    \/**\\n     * @psalm-var non-empty-string|null\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private ?string $listMarkerRegex = null;\\n\\n    public function setConfiguration(ConfigurationInterface $configuration): void\\n    {\\n        $this->config = $configuration;\\n    }\\n\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented()) {\\n            return BlockStart::none();\\n        }\\n\\n        $listData = $this->parseList($cursor, $parserState->getParagraphContent() !== null);\\n        if ($listData === null) {\\n            return BlockStart::none();\\n        }\\n\\n        $listItemParser = new ListItemParser($listData);\\n\\n        \/\/ prepend the list block if needed\\n        $matched = $parserState->getLastMatchedBlockParser();\\n        if (! ($matched instanceof ListBlockParser) || ! $listData->equals($matched->getBlock()->getListData())) {\\n            $listBlockParser = new ListBlockParser($listData);\\n            \/\/ We start out with assuming a list is tight. If we find a blank line, we set it to loose later.\\n            \/\/ TODO for 3.0: Just make them tight by default in the block so we can remove this call\\n            $listBlockParser->getBlock()->setTight(true);\\n\\n            return BlockStart::of($listBlockParser, $listItemParser)->at($cursor);\\n        }\\n\\n        return BlockStart::of($listItemParser)->at($cursor);\\n    }\\n\\n    private function parseList(Cursor $cursor, bool $inParagraph): ?ListData\\n    {\\n        $indent = $cursor->getIndent();\\n\\n        $tmpCursor = clone $cursor;\\n        $tmpCursor->advanceToNextNonSpaceOrTab();\\n        $rest = $tmpCursor->getRemainder();\\n\\n        if (\\\\preg_match($this->listMarkerRegex ?? $this->generateListMarkerRegex(), $rest) === 1) {\\n            $data               = new ListData();\\n            $data->markerOffset = $indent;\\n            $data->type         = ListBlock::TYPE_BULLET;\\n            $data->delimiter    = null;\\n            $data->bulletChar   = $rest[0];\\n            $markerLength       = 1;\\n        } elseif (($matches = RegexHelper::matchFirst('\/^(\\\\d{1,9})([.)])\/', $rest)) && (! $inParagraph || $matches[1] === '1')) {\\n            $data               = new ListData();\\n            $data->markerOffset = $indent;\\n            $data->type         = ListBlock::TYPE_ORDERED;\\n            $data->start        = (int) $matches[1];\\n            $data->delimiter    = $matches[2] === '.' ? ListBlock::DELIM_PERIOD : ListBlock::DELIM_PAREN;\\n            $data->bulletChar   = null;\\n            $markerLength       = \\\\strlen($matches[0]);\\n        } else {\\n            return null;\\n        }\\n\\n        \/\/ Make sure we have spaces after\\n        $nextChar = $tmpCursor->peek($markerLength);\\n        if (! ($nextChar === null || $nextChar === \\\"\\\\t\\\" || $nextChar === ' ')) {\\n            return null;\\n        }\\n\\n        \/\/ If it interrupts paragraph, make sure first line isn't blank\\n        if ($inParagraph && ! RegexHelper::matchAt(RegexHelper::REGEX_NON_SPACE, $rest, $markerLength)) {\\n            return null;\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab(); \/\/ to start of marker\\n        $cursor->advanceBy($markerLength, true); \/\/ to end of marker\\n        $data->padding = self::calculateListMarkerPadding($cursor, $markerLength);\\n\\n        return $data;\\n    }\\n\\n    private static function calculateListMarkerPadding(Cursor $cursor, int $markerLength): int\\n    {\\n        $start          = $cursor->saveState();\\n        $spacesStartCol = $cursor->getColumn();\\n\\n        while ($cursor->getColumn() - $spacesStartCol < 5) {\\n            if (! $cursor->advanceBySpaceOrTab()) {\\n                break;\\n            }\\n        }\\n\\n        $blankItem         = $cursor->peek() === null;\\n        $spacesAfterMarker = $cursor->getColumn() - $spacesStartCol;\\n\\n        if ($spacesAfterMarker >= 5 || $spacesAfterMarker < 1 || $blankItem) {\\n            $cursor->restoreState($start);\\n            $cursor->advanceBySpaceOrTab();\\n\\n            return $markerLength + 1;\\n        }\\n\\n        return $markerLength + $spacesAfterMarker;\\n    }\\n\\n    \/**\\n     * @psalm-return non-empty-string\\n     *\/\\n    private function generateListMarkerRegex(): string\\n    {\\n        \/\/ No configuration given - use the defaults\\n        if ($this->config === null) {\\n            return $this->listMarkerRegex = '\/^[*+-]\/';\\n        }\\n\\n        $markers = $this->config->get('commonmark\/unordered_list_markers');\\n        \\\\assert(\\\\is_array($markers));\\n\\n        return $this->listMarkerRegex = '\/^[' . \\\\preg_quote(\\\\implode('', $markers), '\/') . ']\/';\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/FencedCodeParser.php\",\"ext\":\"php\",\"size\":2788,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\FencedCode;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Util\\\\ArrayCollection;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class FencedCodeParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private FencedCode $block;\\n\\n    \/** @var ArrayCollection<string> *\/\\n    private ArrayCollection $strings;\\n\\n    public function __construct(int $fenceLength, string $fenceChar, int $fenceOffset)\\n    {\\n        $this->block   = new FencedCode($fenceLength, $fenceChar, $fenceOffset);\\n        $this->strings = new ArrayCollection();\\n    }\\n\\n    public function getBlock(): FencedCode\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        \/\/ Check for closing code fence\\n        if (! $cursor->isIndented() && $cursor->getNextNonSpaceCharacter() === $this->block->getChar()) {\\n            $match = RegexHelper::matchFirst('\/^(?:`{3,}|~{3,})(?=[ \\\\t]*$)\/', $cursor->getLine(), $cursor->getNextNonSpacePosition());\\n            if ($match !== null && \\\\strlen($match[0]) >= $this->block->getLength()) {\\n                \/\/ closing fence - we're at end of line, so we can finalize now\\n                return BlockContinue::finished();\\n            }\\n        }\\n\\n        \/\/ Skip optional spaces of fence offset\\n        \/\/ Optimization: don't attempt to match if we're at a non-space position\\n        if ($cursor->getNextNonSpacePosition() > $cursor->getPosition()) {\\n            $cursor->match('\/^ {0,' . $this->block->getOffset() . '}\/');\\n        }\\n\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n        $this->strings[] = $line;\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        \/\/ first line becomes info string\\n        $firstLine = $this->strings->first();\\n        if ($firstLine === false) {\\n            $firstLine = '';\\n        }\\n\\n        $this->block->setInfo(RegexHelper::unescape(\\\\trim($firstLine)));\\n\\n        if ($this->strings->count() === 1) {\\n            $this->block->setLiteral('');\\n        } else {\\n            $this->block->setLiteral(\\\\implode(\\\"\\\\n\\\", $this->strings->slice(1)) . \\\"\\\\n\\\");\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/HeadingStartParser.php\",\"ext\":\"php\",\"size\":2525,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nclass HeadingStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented() || ! \\\\in_array($cursor->getNextNonSpaceCharacter(), ['#', '-', '='], true)) {\\n            return BlockStart::none();\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        if ($atxHeading = self::getAtxHeader($cursor)) {\\n            return BlockStart::of($atxHeading)->at($cursor);\\n        }\\n\\n        $setextHeadingLevel = self::getSetextHeadingLevel($cursor);\\n        if ($setextHeadingLevel > 0) {\\n            $content = $parserState->getParagraphContent();\\n            if ($content !== null) {\\n                $cursor->advanceToEnd();\\n\\n                return BlockStart::of(new HeadingParser($setextHeadingLevel, $content))\\n                    ->at($cursor)\\n                    ->replaceActiveBlockParser();\\n            }\\n        }\\n\\n        return BlockStart::none();\\n    }\\n\\n    private static function getAtxHeader(Cursor $cursor): ?HeadingParser\\n    {\\n        $match = RegexHelper::matchFirst('\/^#{1,6}(?:[ \\\\t]+|$)\/', $cursor->getRemainder());\\n        if (! $match) {\\n            return null;\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        $cursor->advanceBy(\\\\strlen($match[0]));\\n\\n        $level = \\\\strlen(\\\\trim($match[0]));\\n        $str   = $cursor->getRemainder();\\n        $str   = \\\\preg_replace('\/^[ \\\\t]*#+[ \\\\t]*$\/', '', $str);\\n        \\\\assert(\\\\is_string($str));\\n        $str = \\\\preg_replace('\/[ \\\\t]+#+[ \\\\t]*$\/', '', $str);\\n        \\\\assert(\\\\is_string($str));\\n\\n        return new HeadingParser($level, $str);\\n    }\\n\\n    private static function getSetextHeadingLevel(Cursor $cursor): int\\n    {\\n        $match = RegexHelper::matchFirst('\/^(?:=+|-+)[ \\\\t]*$\/', $cursor->getRemainder());\\n        if ($match === null) {\\n            return 0;\\n        }\\n\\n        return $match[0][0] === '=' ? 1 : 2;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/ListBlockParser.php\",\"ext\":\"php\",\"size\":2944,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListBlock;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListData;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class ListBlockParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private ListBlock $block;\\n\\n    public function __construct(ListData $listData)\\n    {\\n        $this->block = new ListBlock($listData);\\n    }\\n\\n    public function getBlock(): ListBlock\\n    {\\n        return $this->block;\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return $childBlock instanceof ListItem;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        \/\/ List blocks themselves don't have any markers, only list items. So try to stay in the list.\\n        \/\/ If there is a block start other than list item, canContain makes sure that this list is closed.\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        $item = $this->block->firstChild();\\n        while ($item instanceof AbstractBlock) {\\n            \/\/ check for non-final list item ending with blank line:\\n            if ($item->next() !== null && self::endsWithBlankLine($item)) {\\n                $this->block->setTight(false);\\n                break;\\n            }\\n\\n            \/\/ recurse into children of list item, to see if there are spaces between any of them\\n            $subitem = $item->firstChild();\\n            while ($subitem instanceof AbstractBlock) {\\n                if ($subitem->next() && self::endsWithBlankLine($subitem)) {\\n                    $this->block->setTight(false);\\n                    break 2;\\n                }\\n\\n                $subitem = $subitem->next();\\n            }\\n\\n            $item = $item->next();\\n        }\\n\\n        $lastChild = $this->block->lastChild();\\n        if ($lastChild instanceof AbstractBlock) {\\n            $this->block->setEndLine($lastChild->getEndLine());\\n        }\\n    }\\n\\n    private static function endsWithBlankLine(AbstractBlock $block): bool\\n    {\\n        $next = $block->next();\\n\\n        return $next instanceof AbstractBlock && $block->getEndLine() !== $next->getStartLine() - 1;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/FencedCodeStartParser.php\",\"ext\":\"php\",\"size\":1250,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\nfinal class FencedCodeStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented() || ! \\\\in_array($cursor->getNextNonSpaceCharacter(), ['`', '~'], true)) {\\n            return BlockStart::none();\\n        }\\n\\n        $indent = $cursor->getIndent();\\n        $fence  = $cursor->match('\/^[ \\\\t]*(?:`{3,}(?!.*`)|~{3,})\/');\\n        if ($fence === null) {\\n            return BlockStart::none();\\n        }\\n\\n        \/\/ fenced code block\\n        $fence = \\\\ltrim($fence, \\\" \\\\t\\\");\\n\\n        return BlockStart::of(new FencedCodeParser(\\\\strlen($fence), $fence[0], $indent))->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/IndentedCodeParser.php\",\"ext\":\"php\",\"size\":2149,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\IndentedCode;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Util\\\\ArrayCollection;\\n\\nfinal class IndentedCodeParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private IndentedCode $block;\\n\\n    \/** @var ArrayCollection<string> *\/\\n    private ArrayCollection $strings;\\n\\n    public function __construct()\\n    {\\n        $this->block   = new IndentedCode();\\n        $this->strings = new ArrayCollection();\\n    }\\n\\n    public function getBlock(): IndentedCode\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if ($cursor->isIndented()) {\\n            $cursor->advanceBy(Cursor::INDENT_LEVEL, true);\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        if ($cursor->isBlank()) {\\n            $cursor->advanceToNextNonSpaceOrTab();\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        return BlockContinue::none();\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n        $this->strings[] = $line;\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        $lines = $this->strings->toArray();\\n\\n        \/\/ Note that indented code block cannot be empty, so $lines will always have at least one non-empty element\\n        while (\\\\preg_match('\/^[ \\\\t]*$\/', \\\\end($lines))) { \/\/ @phpstan-ignore-line\\n            \\\\array_pop($lines);\\n        }\\n\\n        $this->block->setLiteral(\\\\implode(\\\"\\\\n\\\", $lines) . \\\"\\\\n\\\");\\n        $this->block->setEndLine($this->block->getStartLine() + \\\\count($lines) - 1);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/HtmlBlockStartParser.php\",\"ext\":\"php\",\"size\":2134,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class HtmlBlockStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented() || $cursor->getNextNonSpaceCharacter() !== '<') {\\n            return BlockStart::none();\\n        }\\n\\n        $tmpCursor = clone $cursor;\\n        $tmpCursor->advanceToNextNonSpaceOrTab();\\n        $line = $tmpCursor->getRemainder();\\n\\n        for ($blockType = 1; $blockType <= 7; $blockType++) {\\n            \/** @psalm-var HtmlBlock::TYPE_* $blockType *\/\\n            \/** @phpstan-var HtmlBlock::TYPE_* $blockType *\/\\n            $match = RegexHelper::matchAt(\\n                RegexHelper::getHtmlBlockOpenRegex($blockType),\\n                $line\\n            );\\n\\n            if ($match !== null && ($blockType < 7 || $this->isType7BlockAllowed($cursor, $parserState))) {\\n                return BlockStart::of(new HtmlBlockParser($blockType))->at($cursor);\\n            }\\n        }\\n\\n        return BlockStart::none();\\n    }\\n\\n    private function isType7BlockAllowed(Cursor $cursor, MarkdownParserStateInterface $parserState): bool\\n    {\\n        \/\/ Type 7 blocks can't interrupt paragraphs\\n        if ($parserState->getLastMatchedBlockParser()->getBlock() instanceof Paragraph) {\\n            return false;\\n        }\\n\\n        \/\/ Even lazy ones\\n        return ! $parserState->getActiveBlockParser()->canHaveLazyContinuationLines();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/HtmlBlockParser.php\",\"ext\":\"php\",\"size\":2298,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class HtmlBlockParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private HtmlBlock $block;\\n\\n    private string $content = '';\\n\\n    private bool $finished = false;\\n\\n    \/**\\n     * @psalm-param HtmlBlock::TYPE_* $blockType\\n     *\\n     * @phpstan-param HtmlBlock::TYPE_* $blockType\\n     *\/\\n    public function __construct(int $blockType)\\n    {\\n        $this->block = new HtmlBlock($blockType);\\n    }\\n\\n    public function getBlock(): HtmlBlock\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if ($this->finished) {\\n            return BlockContinue::none();\\n        }\\n\\n        if ($cursor->isBlank() && \\\\in_array($this->block->getType(), [HtmlBlock::TYPE_6_BLOCK_ELEMENT, HtmlBlock::TYPE_7_MISC_ELEMENT], true)) {\\n            return BlockContinue::none();\\n        }\\n\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n        if ($this->content !== '') {\\n            $this->content .= \\\"\\\\n\\\";\\n        }\\n\\n        $this->content .= $line;\\n\\n        \/\/ Check for end condition\\n        \/\/ phpcs:disable SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed\\n        if ($this->block->getType() <= HtmlBlock::TYPE_5_CDATA) {\\n            if (\\\\preg_match(RegexHelper::getHtmlBlockCloseRegex($this->block->getType()), $line) === 1) {\\n                $this->finished = true;\\n            }\\n        }\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        $this->block->setLiteral($this->content);\\n        $this->content = '';\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/BlockQuoteParser.php\",\"ext\":\"php\",\"size\":1578,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\BlockQuote;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class BlockQuoteParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private BlockQuote $block;\\n\\n    public function __construct()\\n    {\\n        $this->block = new BlockQuote();\\n    }\\n\\n    public function getBlock(): BlockQuote\\n    {\\n        return $this->block;\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return true;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if (! $cursor->isIndented() && $cursor->getNextNonSpaceCharacter() === '>') {\\n            $cursor->advanceToNextNonSpaceOrTab();\\n            $cursor->advanceBy(1);\\n            $cursor->advanceBySpaceOrTab();\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        return BlockContinue::none();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/BlockQuoteStartParser.php\",\"ext\":\"php\",\"size\":1113,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\nfinal class BlockQuoteStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented()) {\\n            return BlockStart::none();\\n        }\\n\\n        if ($cursor->getNextNonSpaceCharacter() !== '>') {\\n            return BlockStart::none();\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        $cursor->advanceBy(1);\\n        $cursor->advanceBySpaceOrTab();\\n\\n        return BlockStart::of(new BlockQuoteParser())->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/ListItemParser.php\",\"ext\":\"php\",\"size\":2420,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListData;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ListItem;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class ListItemParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private ListItem $block;\\n\\n    public function __construct(ListData $listData)\\n    {\\n        $this->block = new ListItem($listData);\\n    }\\n\\n    public function getBlock(): ListItem\\n    {\\n        return $this->block;\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return ! $childBlock instanceof ListItem;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if ($cursor->isBlank()) {\\n            if ($this->block->firstChild() === null) {\\n                \/\/ Blank line after empty list item\\n                return BlockContinue::none();\\n            }\\n\\n            $cursor->advanceToNextNonSpaceOrTab();\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        $contentIndent = $this->block->getListData()->markerOffset + $this->getBlock()->getListData()->padding;\\n        if ($cursor->getIndent() >= $contentIndent) {\\n            $cursor->advanceBy($contentIndent, true);\\n\\n            return BlockContinue::at($cursor);\\n        }\\n\\n        \/\/ Note: We'll hit this case for lazy continuation lines, they will get added later.\\n        return BlockContinue::none();\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        if (($lastChild = $this->block->lastChild()) instanceof AbstractBlock) {\\n            $this->block->setEndLine($lastChild->getEndLine());\\n        } else {\\n            \/\/ Empty list item\\n            $this->block->setEndLine($this->block->getStartLine());\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/ThematicBreakStartParser.php\",\"ext\":\"php\",\"size\":1271,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class ThematicBreakStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if ($cursor->isIndented()) {\\n            return BlockStart::none();\\n        }\\n\\n        $match = RegexHelper::matchAt(RegexHelper::REGEX_THEMATIC_BREAK, $cursor->getLine(), $cursor->getNextNonSpacePosition());\\n        if ($match === null) {\\n            return BlockStart::none();\\n        }\\n\\n        \/\/ Advance to the end of the string, consuming the entire line (of the thematic break)\\n        $cursor->advanceToEnd();\\n\\n        return BlockStart::of(new ThematicBreakParser())->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/ThematicBreakParser.php\",\"ext\":\"php\",\"size\":1174,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\ThematicBreak;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\nfinal class ThematicBreakParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private ThematicBreak $block;\\n\\n    public function __construct()\\n    {\\n        $this->block = new ThematicBreak();\\n    }\\n\\n    public function getBlock(): ThematicBreak\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        \/\/ a horizontal rule can never container > 1 line, so fail to match\\n        return BlockContinue::none();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/IndentedCodeStartParser.php\",\"ext\":\"php\",\"size\":1211,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\nfinal class IndentedCodeStartParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if (! $cursor->isIndented()) {\\n            return BlockStart::none();\\n        }\\n\\n        if ($parserState->getActiveBlockParser()->getBlock() instanceof Paragraph) {\\n            return BlockStart::none();\\n        }\\n\\n        if ($cursor->isBlank()) {\\n            return BlockStart::none();\\n        }\\n\\n        $cursor->advanceBy(Cursor::INDENT_LEVEL, true);\\n\\n        return BlockStart::of(new IndentedCodeParser())->at($cursor);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Block\/HeadingParser.php\",\"ext\":\"php\",\"size\":1508,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\Heading;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\AbstractBlockContinueParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinue;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserWithInlinesInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserEngineInterface;\\n\\nfinal class HeadingParser extends AbstractBlockContinueParser implements BlockContinueParserWithInlinesInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private Heading $block;\\n\\n    private string $content;\\n\\n    public function __construct(int $level, string $content)\\n    {\\n        $this->block   = new Heading($level);\\n        $this->content = $content;\\n    }\\n\\n    public function getBlock(): Heading\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        return BlockContinue::none();\\n    }\\n\\n    public function parseInlines(InlineParserEngineInterface $inlineParser): void\\n    {\\n        $inlineParser->parse($this->content, $this->block);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/BacktickParser.php\",\"ext\":\"php\",\"size\":4388,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Code;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class BacktickParser implements InlineParserInterface\\n{\\n    \/**\\n     * Max bound for backtick code span delimiters.\\n     *\\n     * @see https:\/\/github.com\/commonmark\/cmark\/commit\/8ed5c9d\\n     *\/\\n    private const MAX_BACKTICKS = 1000;\\n\\n    \/** @var \\\\WeakReference<Cursor>|null *\/\\n    private ?\\\\WeakReference $lastCursor = null;\\n    private bool $lastCursorScanned     = false;\\n\\n    \/** @var array<int, int> backtick count => position of known ender *\/\\n    private array $seenBackticks = [];\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex('`+');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $ticks  = $inlineContext->getFullMatch();\\n        $cursor = $inlineContext->getCursor();\\n        $cursor->advanceBy($inlineContext->getFullMatchLength());\\n\\n        $currentPosition = $cursor->getPosition();\\n        $previousState   = $cursor->saveState();\\n\\n        if ($this->findMatchingTicks(\\\\strlen($ticks), $cursor)) {\\n            $code = $cursor->getSubstring($currentPosition, $cursor->getPosition() - $currentPosition - \\\\strlen($ticks));\\n\\n            $c = \\\\preg_replace('\/\\\\n\/m', ' ', $code) ?? '';\\n\\n            if (\\n                $c !== '' &&\\n                $c[0] === ' ' &&\\n                \\\\substr($c, -1, 1) === ' ' &&\\n                \\\\preg_match('\/[^ ]\/', $c)\\n            ) {\\n                $c = \\\\substr($c, 1, -1);\\n            }\\n\\n            $inlineContext->getContainer()->appendChild(new Code($c));\\n\\n            return true;\\n        }\\n\\n        \/\/ If we got here, we didn't match a closing backtick sequence\\n        $cursor->restoreState($previousState);\\n        $inlineContext->getContainer()->appendChild(new Text($ticks));\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Locates the matching closer for a backtick code span.\\n     *\\n     * Leverages some caching to avoid traversing the same cursor multiple times when\\n     * we've already seen all the potential backtick closers.\\n     *\\n     * @see https:\/\/github.com\/commonmark\/cmark\/commit\/8ed5c9d\\n     *\\n     * @param int    $openTickLength Number of backticks in the opening sequence\\n     * @param Cursor $cursor         Cursor to scan\\n     *\\n     * @return bool True if a matching closer was found, false otherwise\\n     *\/\\n    private function findMatchingTicks(int $openTickLength, Cursor $cursor): bool\\n    {\\n        \/\/ Reset the seenBackticks cache if this is a new cursor\\n        if ($this->lastCursor === null || $this->lastCursor->get() !== $cursor) {\\n            $this->seenBackticks     = [];\\n            $this->lastCursor        = \\\\WeakReference::create($cursor);\\n            $this->lastCursorScanned = false;\\n        }\\n\\n        if ($openTickLength > self::MAX_BACKTICKS) {\\n            return false;\\n        }\\n\\n        \/\/ Return if we already know there's no closer\\n        if ($this->lastCursorScanned && isset($this->seenBackticks[$openTickLength]) && $this->seenBackticks[$openTickLength] <= $cursor->getPosition()) {\\n            return false;\\n        }\\n\\n        while ($ticks = $cursor->match('\/`{1,' . self::MAX_BACKTICKS . '}\/m')) {\\n            $numTicks = \\\\strlen($ticks);\\n\\n            \/\/ Did we find the closer?\\n            if ($numTicks === $openTickLength) {\\n                return true;\\n            }\\n\\n            \/\/ Store position of closer\\n            if ($numTicks <= self::MAX_BACKTICKS) {\\n                $this->seenBackticks[$numTicks] = $cursor->getPosition() - $numTicks;\\n            }\\n        }\\n\\n        \/\/ Got through whole input without finding closer\\n        $this->lastCursorScanned = true;\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/HtmlInlineParser.php\",\"ext\":\"php\",\"size\":1277,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\HtmlInline;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class HtmlInlineParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex(RegexHelper::PARTIAL_HTMLTAG)->caseSensitive();\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inline = $inlineContext->getFullMatch();\\n\\n        $inlineContext->getCursor()->advanceBy($inlineContext->getFullMatchLength());\\n        $inlineContext->getContainer()->appendChild(new HtmlInline($inline));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/BangParser.php\",\"ext\":\"php\",\"size\":1280,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class BangParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::string('![');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $cursor = $inlineContext->getCursor();\\n        $cursor->advanceBy(2);\\n\\n        $node = new Text('![', ['delim' => true]);\\n        $inlineContext->getContainer()->appendChild($node);\\n\\n        \/\/ Add entry to stack for this opener\\n        $inlineContext->getDelimiterStack()->addBracket($node, $cursor->getPosition(), true);\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/CloseBracketParser.php\",\"ext\":\"php\",\"size\":7637,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\Bracket;\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentAwareInterface;\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\AbstractWebResource;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Image;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Extension\\\\Mention\\\\Mention;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AdjacentTextMerger;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMapInterface;\\nuse League\\\\CommonMark\\\\Util\\\\LinkParserHelper;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class CloseBracketParser implements InlineParserInterface, EnvironmentAwareInterface\\n{\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private EnvironmentInterface $environment;\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::string(']');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        \/\/ Look through stack of delimiters for a [ or !\\n        $opener = $inlineContext->getDelimiterStack()->getLastBracket();\\n        if ($opener === null) {\\n            return false;\\n        }\\n\\n        if (! $opener->isImage() && ! $opener->isActive()) {\\n            \/\/ no matched opener; remove from stack\\n            $inlineContext->getDelimiterStack()->removeBracket();\\n\\n            return false;\\n        }\\n\\n        $cursor = $inlineContext->getCursor();\\n\\n        $startPos      = $cursor->getPosition();\\n        $previousState = $cursor->saveState();\\n\\n        $cursor->advanceBy(1);\\n\\n        \/\/ Check to see if we have a link\/image\\n\\n        \/\/ Inline link?\\n        if ($result = $this->tryParseInlineLinkAndTitle($cursor)) {\\n            $link = $result;\\n        } elseif ($link = $this->tryParseReference($cursor, $inlineContext->getReferenceMap(), $opener, $startPos)) {\\n            $reference = $link;\\n            $link      = ['url' => $link->getDestination(), 'title' => $link->getTitle()];\\n        } else {\\n            \/\/ No match; remove this opener from stack\\n            $inlineContext->getDelimiterStack()->removeBracket();\\n            $cursor->restoreState($previousState);\\n\\n            return false;\\n        }\\n\\n        $inline = $this->createInline($link['url'], $link['title'], $opener->isImage(), $reference ?? null);\\n        $opener->getNode()->replaceWith($inline);\\n        while (($label = $inline->next()) !== null) {\\n            \/\/ Is there a Mention or Link contained within this link?\\n            \/\/ CommonMark does not allow nested links, so we'll restore the original text.\\n            if ($label instanceof Mention) {\\n                $label->replaceWith($replacement = new Text($label->getPrefix() . $label->getIdentifier()));\\n                $inline->appendChild($replacement);\\n            } elseif ($label instanceof Link) {\\n                foreach ($label->children() as $child) {\\n                    $label->insertBefore($child);\\n                }\\n\\n                $label->detach();\\n            } else {\\n                $inline->appendChild($label);\\n            }\\n        }\\n\\n        \/\/ Process delimiters such as emphasis inside link\/image\\n        $delimiterStack = $inlineContext->getDelimiterStack();\\n        $stackBottom    = $opener->getPosition();\\n        $delimiterStack->processDelimiters($stackBottom, $this->environment->getDelimiterProcessors());\\n        $delimiterStack->removeBracket();\\n        $delimiterStack->removeAll($stackBottom);\\n\\n        \/\/ Merge any adjacent Text nodes together\\n        AdjacentTextMerger::mergeChildNodes($inline);\\n\\n        \/\/ processEmphasis will remove this and later delimiters.\\n        \/\/ Now, for a link, we also remove earlier link openers (no links in links)\\n        if (! $opener->isImage()) {\\n            $inlineContext->getDelimiterStack()->deactivateLinkOpeners();\\n        }\\n\\n        return true;\\n    }\\n\\n    public function setEnvironment(EnvironmentInterface $environment): void\\n    {\\n        $this->environment = $environment;\\n    }\\n\\n    \/**\\n     * @return array<string, string>|null\\n     *\/\\n    private function tryParseInlineLinkAndTitle(Cursor $cursor): ?array\\n    {\\n        if ($cursor->getCurrentCharacter() !== '(') {\\n            return null;\\n        }\\n\\n        $previousState = $cursor->saveState();\\n\\n        $cursor->advanceBy(1);\\n        $cursor->advanceToNextNonSpaceOrNewline();\\n        if (($dest = LinkParserHelper::parseLinkDestination($cursor)) === null) {\\n            $cursor->restoreState($previousState);\\n\\n            return null;\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrNewline();\\n        $previousCharacter = $cursor->peek(-1);\\n        \/\/ We know from previous lines that we've advanced at least one space so far, so this next call should never be null\\n        \\\\assert(\\\\is_string($previousCharacter));\\n\\n        $title = '';\\n        \/\/ make sure there's a space before the title:\\n        if (\\\\preg_match(RegexHelper::REGEX_WHITESPACE_CHAR, $previousCharacter)) {\\n            $title = LinkParserHelper::parseLinkTitle($cursor) ?? '';\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrNewline();\\n\\n        if ($cursor->getCurrentCharacter() !== ')') {\\n            $cursor->restoreState($previousState);\\n\\n            return null;\\n        }\\n\\n        $cursor->advanceBy(1);\\n\\n        return ['url' => $dest, 'title' => $title];\\n    }\\n\\n    private function tryParseReference(Cursor $cursor, ReferenceMapInterface $referenceMap, Bracket $opener, int $startPos): ?ReferenceInterface\\n    {\\n        $savePos     = $cursor->saveState();\\n        $beforeLabel = $cursor->getPosition();\\n        $n           = LinkParserHelper::parseLinkLabel($cursor);\\n        if ($n > 2) {\\n            $start  = $beforeLabel + 1;\\n            $length = $n - 2;\\n        } elseif (! $opener->hasNext()) {\\n            \/\/ Empty or missing second label means to use the first label as the reference.\\n            \/\/ The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\\n            $start  = $opener->getPosition();\\n            $length = $startPos - $start;\\n        } else {\\n            $cursor->restoreState($savePos);\\n\\n            return null;\\n        }\\n\\n        $referenceLabel = $cursor->getSubstring($start, $length);\\n\\n        if ($n === 0) {\\n            \/\/ If shortcut reference link, rewind before spaces we skipped\\n            $cursor->restoreState($savePos);\\n        }\\n\\n        return $referenceMap->get($referenceLabel);\\n    }\\n\\n    private function createInline(string $url, string $title, bool $isImage, ?ReferenceInterface $reference = null): AbstractWebResource\\n    {\\n        if ($isImage) {\\n            $inline = new Image($url, null, $title);\\n        } else {\\n            $inline = new Link($url, null, $title);\\n        }\\n\\n        if ($reference) {\\n            $inline->data->set('reference', $reference);\\n        }\\n\\n        return $inline;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/EntityParser.php\",\"ext\":\"php\",\"size\":1297,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Util\\\\Html5EntityDecoder;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class EntityParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex(RegexHelper::PARTIAL_ENTITY);\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $entity = $inlineContext->getFullMatch();\\n\\n        $inlineContext->getCursor()->advanceBy($inlineContext->getFullMatchLength());\\n        $inlineContext->getContainer()->appendChild(new Text(Html5EntityDecoder::decode($entity)));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/OpenBracketParser.php\",\"ext\":\"php\",\"size\":1278,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class OpenBracketParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::string('[');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inlineContext->getCursor()->advanceBy(1);\\n        $node = new Text('[', ['delim' => true]);\\n        $inlineContext->getContainer()->appendChild($node);\\n\\n        \/\/ Add entry to stack for this opener\\n        $inlineContext->getDelimiterStack()->addBracket($node, $inlineContext->getCursor()->getPosition(), false);\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/EscapableParser.php\",\"ext\":\"php\",\"size\":1643,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\nfinal class EscapableParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::string('\\\\\\\\');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $cursor   = $inlineContext->getCursor();\\n        $nextChar = $cursor->peek();\\n\\n        if ($nextChar === \\\"\\\\n\\\") {\\n            $cursor->advanceBy(2);\\n            $inlineContext->getContainer()->appendChild(new Newline(Newline::HARDBREAK));\\n\\n            return true;\\n        }\\n\\n        if ($nextChar !== null && RegexHelper::isEscapable($nextChar)) {\\n            $cursor->advanceBy(2);\\n            $inlineContext->getContainer()->appendChild(new Text($nextChar));\\n\\n            return true;\\n        }\\n\\n        $cursor->advanceBy(1);\\n        $inlineContext->getContainer()->appendChild(new Text('\\\\\\\\'));\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/Parser\/Inline\/AutolinkParser.php\",\"ext\":\"php\",\"size\":1890,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Inline\\\\Link;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserMatch;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\nuse League\\\\CommonMark\\\\Util\\\\UrlEncoder;\\n\\nfinal class AutolinkParser implements InlineParserInterface\\n{\\n    private const EMAIL_REGEX      = '<([a-zA-Z0-9.!#$%&\\\\'*+\\\\\\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>';\\n    private const OTHER_LINK_REGEX = '<([A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\\\x00-\\\\x20]*)>';\\n\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex(self::EMAIL_REGEX . '|' . self::OTHER_LINK_REGEX);\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inlineContext->getCursor()->advanceBy($inlineContext->getFullMatchLength());\\n        $matches = $inlineContext->getMatches();\\n\\n        if ($matches[1] !== '') {\\n            $inlineContext->getContainer()->appendChild(new Link('mailto:' . UrlEncoder::unescapeAndEncode($matches[1]), $matches[1]));\\n\\n            return true;\\n        }\\n\\n        if ($matches[2] !== '') {\\n            $inlineContext->getContainer()->appendChild(new Link(UrlEncoder::unescapeAndEncode($matches[2]), $matches[2]));\\n\\n            return true;\\n        }\\n\\n        return false; \/\/ This should never happen\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Extension\/CommonMark\/CommonMarkCoreExtension.php\",\"ext\":\"php\",\"size\":5205,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Extension\\\\CommonMark;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentBuilderInterface;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Delimiter\\\\Processor\\\\EmphasisDelimiterProcessor;\\nuse League\\\\CommonMark\\\\Extension\\\\ConfigurableExtensionInterface;\\nuse League\\\\CommonMark\\\\Node as CoreNode;\\nuse League\\\\CommonMark\\\\Parser as CoreParser;\\nuse League\\\\CommonMark\\\\Renderer as CoreRenderer;\\nuse League\\\\Config\\\\ConfigurationBuilderInterface;\\nuse Nette\\\\Schema\\\\Expect;\\n\\nfinal class CommonMarkCoreExtension implements ConfigurableExtensionInterface\\n{\\n    public function configureSchema(ConfigurationBuilderInterface $builder): void\\n    {\\n        $builder->addSchema('commonmark', Expect::structure([\\n            'use_asterisk' => Expect::bool(true),\\n            'use_underscore' => Expect::bool(true),\\n            'enable_strong' => Expect::bool(true),\\n            'enable_em' => Expect::bool(true),\\n            'unordered_list_markers' => Expect::listOf('string')->min(1)->default(['*', '+', '-'])->mergeDefaults(false),\\n        ]));\\n    }\\n\\n    \/\/ phpcs:disable Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma,Squiz.WhiteSpace.SemicolonSpacing.Incorrect\\n    public function register(EnvironmentBuilderInterface $environment): void\\n    {\\n        $environment\\n            ->addBlockStartParser(new Parser\\\\Block\\\\BlockQuoteStartParser(),     70)\\n            ->addBlockStartParser(new Parser\\\\Block\\\\HeadingStartParser(),        60)\\n            ->addBlockStartParser(new Parser\\\\Block\\\\FencedCodeStartParser(),     50)\\n            ->addBlockStartParser(new Parser\\\\Block\\\\HtmlBlockStartParser(),      40)\\n            ->addBlockStartParser(new Parser\\\\Block\\\\ThematicBreakStartParser(),  20)\\n            ->addBlockStartParser(new Parser\\\\Block\\\\ListBlockStartParser(),      10)\\n            ->addBlockStartParser(new Parser\\\\Block\\\\IndentedCodeStartParser(), -100)\\n\\n            ->addInlineParser(new CoreParser\\\\Inline\\\\NewlineParser(), 200)\\n            ->addInlineParser(new Parser\\\\Inline\\\\BacktickParser(),    150)\\n            ->addInlineParser(new Parser\\\\Inline\\\\EscapableParser(),    80)\\n            ->addInlineParser(new Parser\\\\Inline\\\\EntityParser(),       70)\\n            ->addInlineParser(new Parser\\\\Inline\\\\AutolinkParser(),     50)\\n            ->addInlineParser(new Parser\\\\Inline\\\\HtmlInlineParser(),   40)\\n            ->addInlineParser(new Parser\\\\Inline\\\\CloseBracketParser(), 30)\\n            ->addInlineParser(new Parser\\\\Inline\\\\OpenBracketParser(),  20)\\n            ->addInlineParser(new Parser\\\\Inline\\\\BangParser(),         10)\\n\\n            ->addRenderer(Node\\\\Block\\\\BlockQuote::class,    new Renderer\\\\Block\\\\BlockQuoteRenderer(),    0)\\n            ->addRenderer(CoreNode\\\\Block\\\\Document::class,  new CoreRenderer\\\\Block\\\\DocumentRenderer(),  0)\\n            ->addRenderer(Node\\\\Block\\\\FencedCode::class,    new Renderer\\\\Block\\\\FencedCodeRenderer(),    0)\\n            ->addRenderer(Node\\\\Block\\\\Heading::class,       new Renderer\\\\Block\\\\HeadingRenderer(),       0)\\n            ->addRenderer(Node\\\\Block\\\\HtmlBlock::class,     new Renderer\\\\Block\\\\HtmlBlockRenderer(),     0)\\n            ->addRenderer(Node\\\\Block\\\\IndentedCode::class,  new Renderer\\\\Block\\\\IndentedCodeRenderer(),  0)\\n            ->addRenderer(Node\\\\Block\\\\ListBlock::class,     new Renderer\\\\Block\\\\ListBlockRenderer(),     0)\\n            ->addRenderer(Node\\\\Block\\\\ListItem::class,      new Renderer\\\\Block\\\\ListItemRenderer(),      0)\\n            ->addRenderer(CoreNode\\\\Block\\\\Paragraph::class, new CoreRenderer\\\\Block\\\\ParagraphRenderer(), 0)\\n            ->addRenderer(Node\\\\Block\\\\ThematicBreak::class, new Renderer\\\\Block\\\\ThematicBreakRenderer(), 0)\\n\\n            ->addRenderer(Node\\\\Inline\\\\Code::class,        new Renderer\\\\Inline\\\\CodeRenderer(),        0)\\n            ->addRenderer(Node\\\\Inline\\\\Emphasis::class,    new Renderer\\\\Inline\\\\EmphasisRenderer(),    0)\\n            ->addRenderer(Node\\\\Inline\\\\HtmlInline::class,  new Renderer\\\\Inline\\\\HtmlInlineRenderer(),  0)\\n            ->addRenderer(Node\\\\Inline\\\\Image::class,       new Renderer\\\\Inline\\\\ImageRenderer(),       0)\\n            ->addRenderer(Node\\\\Inline\\\\Link::class,        new Renderer\\\\Inline\\\\LinkRenderer(),        0)\\n            ->addRenderer(CoreNode\\\\Inline\\\\Newline::class, new CoreRenderer\\\\Inline\\\\NewlineRenderer(), 0)\\n            ->addRenderer(Node\\\\Inline\\\\Strong::class,      new Renderer\\\\Inline\\\\StrongRenderer(),      0)\\n            ->addRenderer(CoreNode\\\\Inline\\\\Text::class,    new CoreRenderer\\\\Inline\\\\TextRenderer(),    0)\\n        ;\\n\\n        if ($environment->getConfiguration()->get('commonmark\/use_asterisk')) {\\n            $environment->addDelimiterProcessor(new EmphasisDelimiterProcessor('*'));\\n        }\\n\\n        if ($environment->getConfiguration()->get('commonmark\/use_underscore')) {\\n            $environment->addDelimiterProcessor(new EmphasisDelimiterProcessor('_'));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/CursorState.php\",\"ext\":\"php\",\"size\":1128,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\n\/**\\n * Encapsulates the current state of a cursor in case you need to rollback later.\\n *\\n * WARNING: Do not attempt to use this class for ANYTHING except for\\n * type hinting and passing this object back into restoreState().\\n * The constructor, methods, and inner contents may change in any\\n * future release without warning!\\n *\\n * @internal\\n *\\n * @psalm-immutable\\n *\/\\nfinal class CursorState\\n{\\n    \/**\\n     * @var array<int, mixed>\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private array $state;\\n\\n    \/**\\n     * @internal\\n     *\\n     * @param array<int, mixed> $state\\n     *\/\\n    public function __construct(array $state)\\n    {\\n        $this->state = $state;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\\n     * @return array<int, mixed>\\n     *\/\\n    public function toArray(): array\\n    {\\n        return $this->state;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/MarkdownParser.php\",\"ext\":\"php\",\"size\":12681,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * Additional code based on commonmark-java (https:\/\/github.com\/commonmark\/commonmark-java)\\n *  - (c) Atlassian Pty Ltd\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentParsedEvent;\\nuse League\\\\CommonMark\\\\Event\\\\DocumentPreParsedEvent;\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\nuse League\\\\CommonMark\\\\Input\\\\MarkdownInput;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserWithInlinesInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStart;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockStartParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\DocumentBlockParser;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\ParagraphParser;\\nuse League\\\\CommonMark\\\\Reference\\\\MemoryLimitedReferenceMap;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMap;\\n\\nfinal class MarkdownParser implements MarkdownParserInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private EnvironmentInterface $environment;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private int $maxNestingLevel;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ReferenceMap $referenceMap;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private int $lineNumber = 0;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private Cursor $cursor;\\n\\n    \/**\\n     * @var array<int, BlockContinueParserInterface>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $activeBlockParsers = [];\\n\\n    \/**\\n     * @var array<int, BlockContinueParserWithInlinesInterface>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $closedBlockParsers = [];\\n\\n    public function __construct(EnvironmentInterface $environment)\\n    {\\n        $this->environment = $environment;\\n    }\\n\\n    private function initialize(): void\\n    {\\n        $this->referenceMap       = new ReferenceMap();\\n        $this->lineNumber         = 0;\\n        $this->activeBlockParsers = [];\\n        $this->closedBlockParsers = [];\\n\\n        $this->maxNestingLevel = $this->environment->getConfiguration()->get('max_nesting_level');\\n    }\\n\\n    \/**\\n     * @throws CommonMarkException\\n     *\/\\n    public function parse(string $input): Document\\n    {\\n        $this->initialize();\\n\\n        $documentParser = new DocumentBlockParser($this->referenceMap);\\n        $this->activateBlockParser($documentParser);\\n\\n        $preParsedEvent = new DocumentPreParsedEvent($documentParser->getBlock(), new MarkdownInput($input));\\n        $this->environment->dispatch($preParsedEvent);\\n        $markdownInput = $preParsedEvent->getMarkdown();\\n\\n        foreach ($markdownInput->getLines() as $lineNumber => $line) {\\n            $this->lineNumber = $lineNumber;\\n            $this->parseLine($line);\\n        }\\n\\n        \/\/ finalizeAndProcess\\n        $this->closeBlockParsers(\\\\count($this->activeBlockParsers), $this->lineNumber);\\n        $this->processInlines(\\\\strlen($input));\\n\\n        $this->environment->dispatch(new DocumentParsedEvent($documentParser->getBlock()));\\n\\n        return $documentParser->getBlock();\\n    }\\n\\n    \/**\\n     * Analyze a line of text and update the document appropriately. We parse markdown text by calling this on each\\n     * line of input, then finalizing the document.\\n     *\/\\n    private function parseLine(string $line): void\\n    {\\n        \/\/ replace NUL characters for security\\n        $line = \\\\str_replace(\\\"\\\\0\\\", \\\"\\\\u{FFFD}\\\", $line);\\n\\n        $this->cursor = new Cursor($line);\\n\\n        $matches = $this->parseBlockContinuation();\\n        if ($matches === null) {\\n            return;\\n        }\\n\\n        $unmatchedBlocks = \\\\count($this->activeBlockParsers) - $matches;\\n        $blockParser     = $this->activeBlockParsers[$matches - 1];\\n        $startedNewBlock = false;\\n\\n        \/\/ Unless last matched container is a code block, try new container starts,\\n        \/\/ adding children to the last matched container:\\n        $tryBlockStarts = $blockParser->getBlock() instanceof Paragraph || $blockParser->isContainer();\\n        while ($tryBlockStarts) {\\n            \/\/ this is a little performance optimization\\n            if ($this->cursor->isBlank()) {\\n                $this->cursor->advanceToEnd();\\n                break;\\n            }\\n\\n            if ($blockParser->getBlock()->getDepth() >= $this->maxNestingLevel) {\\n                break;\\n            }\\n\\n            $blockStart = $this->findBlockStart($blockParser);\\n            if ($blockStart === null || $blockStart->isAborting()) {\\n                $this->cursor->advanceToNextNonSpaceOrTab();\\n                break;\\n            }\\n\\n            if (($state = $blockStart->getCursorState()) !== null) {\\n                $this->cursor->restoreState($state);\\n            }\\n\\n            $startedNewBlock = true;\\n\\n            \/\/ We're starting a new block. If we have any previous blocks that need to be closed, we need to do it now.\\n            if ($unmatchedBlocks > 0) {\\n                $this->closeBlockParsers($unmatchedBlocks, $this->lineNumber - 1);\\n                $unmatchedBlocks = 0;\\n            }\\n\\n            $oldBlockLineStart = null;\\n            if ($blockStart->isReplaceActiveBlockParser()) {\\n                $oldBlockLineStart = $this->prepareActiveBlockParserForReplacement();\\n            }\\n\\n            foreach ($blockStart->getBlockParsers() as $newBlockParser) {\\n                $blockParser    = $this->addChild($newBlockParser, $oldBlockLineStart);\\n                $tryBlockStarts = $newBlockParser->isContainer();\\n            }\\n        }\\n\\n        \/\/ What remains at the offset is a text line. Add the text to the appropriate block.\\n\\n        \/\/ First check for a lazy paragraph continuation:\\n        if (! $startedNewBlock && ! $this->cursor->isBlank() && $this->getActiveBlockParser()->canHaveLazyContinuationLines()) {\\n            $this->getActiveBlockParser()->addLine($this->cursor->getRemainder());\\n        } else {\\n            \/\/ finalize any blocks not matched\\n            if ($unmatchedBlocks > 0) {\\n                $this->closeBlockParsers($unmatchedBlocks, $this->lineNumber - 1);\\n            }\\n\\n            if (! $blockParser->isContainer()) {\\n                $this->getActiveBlockParser()->addLine($this->cursor->getRemainder());\\n            } elseif (! $this->cursor->isBlank()) {\\n                $this->addChild(new ParagraphParser());\\n                $this->getActiveBlockParser()->addLine($this->cursor->getRemainder());\\n            }\\n        }\\n    }\\n\\n    private function parseBlockContinuation(): ?int\\n    {\\n        \/\/ For each containing block, try to parse the associated line start.\\n        \/\/ The document will always match, so we can skip the first block parser and start at 1 matches\\n        $matches = 1;\\n        for ($i = 1; $i < \\\\count($this->activeBlockParsers); $i++) {\\n            $blockParser   = $this->activeBlockParsers[$i];\\n            $blockContinue = $blockParser->tryContinue(clone $this->cursor, $this->getActiveBlockParser());\\n            if ($blockContinue === null) {\\n                break;\\n            }\\n\\n            if ($blockContinue->isFinalize()) {\\n                $this->closeBlockParsers(\\\\count($this->activeBlockParsers) - $i, $this->lineNumber);\\n\\n                return null;\\n            }\\n\\n            if (($state = $blockContinue->getCursorState()) !== null) {\\n                $this->cursor->restoreState($state);\\n            }\\n\\n            $matches++;\\n        }\\n\\n        return $matches;\\n    }\\n\\n    private function findBlockStart(BlockContinueParserInterface $lastMatchedBlockParser): ?BlockStart\\n    {\\n        $matchedBlockParser = new MarkdownParserState($this->getActiveBlockParser(), $lastMatchedBlockParser);\\n\\n        foreach ($this->environment->getBlockStartParsers() as $blockStartParser) {\\n            \\\\assert($blockStartParser instanceof BlockStartParserInterface);\\n            if (($result = $blockStartParser->tryStart(clone $this->cursor, $matchedBlockParser)) !== null) {\\n                return $result;\\n            }\\n        }\\n\\n        return null;\\n    }\\n\\n    private function closeBlockParsers(int $count, int $endLineNumber): void\\n    {\\n        for ($i = 0; $i < $count; $i++) {\\n            $blockParser = $this->deactivateBlockParser();\\n            $this->finalize($blockParser, $endLineNumber);\\n\\n            \/\/ phpcs:disable SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed\\n            if ($blockParser instanceof BlockContinueParserWithInlinesInterface) {\\n                \/\/ Remember for inline parsing\\n                $this->closedBlockParsers[] = $blockParser;\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * Finalize a block. Close it and do any necessary postprocessing, e.g. creating string_content from strings,\\n     * setting the 'tight' or 'loose' status of a list, and parsing the beginnings of paragraphs for reference\\n     * definitions.\\n     *\/\\n    private function finalize(BlockContinueParserInterface $blockParser, int $endLineNumber): void\\n    {\\n        if ($blockParser instanceof ParagraphParser) {\\n            $this->updateReferenceMap($blockParser->getReferences());\\n        }\\n\\n        $blockParser->getBlock()->setEndLine($endLineNumber);\\n        $blockParser->closeBlock();\\n    }\\n\\n    \/**\\n     * Walk through a block & children recursively, parsing string content into inline content where appropriate.\\n     *\/\\n    private function processInlines(int $inputSize): void\\n    {\\n        $p = new InlineParserEngine($this->environment, new MemoryLimitedReferenceMap($this->referenceMap, $inputSize));\\n\\n        foreach ($this->closedBlockParsers as $blockParser) {\\n            $blockParser->parseInlines($p);\\n        }\\n    }\\n\\n    \/**\\n     * Add block of type tag as a child of the tip. If the tip can't accept children, close and finalize it and try\\n     * its parent, and so on til we find a block that can accept children.\\n     *\/\\n    private function addChild(BlockContinueParserInterface $blockParser, ?int $startLineNumber = null): BlockContinueParserInterface\\n    {\\n        $blockParser->getBlock()->setStartLine($startLineNumber ?? $this->lineNumber);\\n\\n        while (! $this->getActiveBlockParser()->canContain($blockParser->getBlock())) {\\n            $this->closeBlockParsers(1, ($startLineNumber ?? $this->lineNumber) - 1);\\n        }\\n\\n        $this->getActiveBlockParser()->getBlock()->appendChild($blockParser->getBlock());\\n        $this->activateBlockParser($blockParser);\\n\\n        return $blockParser;\\n    }\\n\\n    private function activateBlockParser(BlockContinueParserInterface $blockParser): void\\n    {\\n        $this->activeBlockParsers[] = $blockParser;\\n    }\\n\\n    \/**\\n     * @throws ParserLogicException\\n     *\/\\n    private function deactivateBlockParser(): BlockContinueParserInterface\\n    {\\n        $popped = \\\\array_pop($this->activeBlockParsers);\\n        if ($popped === null) {\\n            throw new ParserLogicException('The last block parser should not be deactivated');\\n        }\\n\\n        return $popped;\\n    }\\n\\n    \/**\\n     * @return int|null The line number where the old block started\\n     *\/\\n    private function prepareActiveBlockParserForReplacement(): ?int\\n    {\\n        \/\/ Note that we don't want to parse inlines or finalize this block, as it's getting replaced.\\n        $old = $this->deactivateBlockParser();\\n\\n        if ($old instanceof ParagraphParser) {\\n            $this->updateReferenceMap($old->getReferences());\\n        }\\n\\n        $old->getBlock()->detach();\\n\\n        return $old->getBlock()->getStartLine();\\n    }\\n\\n    \/**\\n     * @param ReferenceInterface[] $references\\n     *\/\\n    private function updateReferenceMap(iterable $references): void\\n    {\\n        foreach ($references as $reference) {\\n            if (! $this->referenceMap->contains($reference->getLabel())) {\\n                $this->referenceMap->add($reference);\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * @throws ParserLogicException\\n     *\/\\n    public function getActiveBlockParser(): BlockContinueParserInterface\\n    {\\n        $active = \\\\end($this->activeBlockParsers);\\n        if ($active === false) {\\n            throw new ParserLogicException('No active block parsers are available');\\n        }\\n\\n        return $active;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/MarkdownParserInterface.php\",\"ext\":\"php\",\"size\":547,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\n\\ninterface MarkdownParserInterface\\n{\\n    \/**\\n     * @throws CommonMarkException\\n     *\/\\n    public function parse(string $input): Document;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/BlockContinueParserInterface.php\",\"ext\":\"php\",\"size\":1856,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\n\/**\\n * Interface for a block continuation parser\\n *\\n * A block continue parser can only handle a single block instance. The current block being parsed is stored within this parser and\\n * can be returned once parsing has completed. If you need to parse multiple block continuations, instantiate a new parser for each one.\\n *\/\\ninterface BlockContinueParserInterface\\n{\\n    \/**\\n     * Return the current block being parsed by this parser\\n     *\/\\n    public function getBlock(): AbstractBlock;\\n\\n    \/**\\n     * Return whether we are parsing a container block\\n     *\/\\n    public function isContainer(): bool;\\n\\n    \/**\\n     * Return whether we are interested in possibly lazily parsing any subsequent lines\\n     *\/\\n    public function canHaveLazyContinuationLines(): bool;\\n\\n    \/**\\n     * Determine whether the current block being parsed can contain the given child block\\n     *\/\\n    public function canContain(AbstractBlock $childBlock): bool;\\n\\n    \/**\\n     * Attempt to parse the given line\\n     *\/\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue;\\n\\n    \/**\\n     * Add the given line of text to the current block\\n     *\/\\n    public function addLine(string $line): void;\\n\\n    \/**\\n     * Close and finalize the current block\\n     *\/\\n    public function closeBlock(): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/AbstractBlockContinueParser.php\",\"ext\":\"php\",\"size\":947,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\n\/**\\n * Base class for a block parser\\n *\\n * Slightly more convenient to extend from vs. implementing the interface\\n *\/\\nabstract class AbstractBlockContinueParser implements BlockContinueParserInterface\\n{\\n    public function isContainer(): bool\\n    {\\n        return false;\\n    }\\n\\n    public function canHaveLazyContinuationLines(): bool\\n    {\\n        return false;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return false;\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/ParagraphParser.php\",\"ext\":\"php\",\"size\":2236,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserEngineInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceParser;\\n\\nfinal class ParagraphParser extends AbstractBlockContinueParser implements BlockContinueParserWithInlinesInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private Paragraph $block;\\n\\n    \/** @psalm-readonly *\/\\n    private ReferenceParser $referenceParser;\\n\\n    public function __construct()\\n    {\\n        $this->block           = new Paragraph();\\n        $this->referenceParser = new ReferenceParser();\\n    }\\n\\n    public function canHaveLazyContinuationLines(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function getBlock(): Paragraph\\n    {\\n        return $this->block;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        if ($cursor->isBlank()) {\\n            return BlockContinue::none();\\n        }\\n\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function addLine(string $line): void\\n    {\\n        $this->referenceParser->parse($line);\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        $this->block->onlyContainsLinkReferenceDefinitions = $this->referenceParser->hasReferences() && $this->referenceParser->getParagraphContent() === '';\\n    }\\n\\n    public function parseInlines(InlineParserEngineInterface $inlineParser): void\\n    {\\n        $content = $this->getContentString();\\n        if ($content !== '') {\\n            $inlineParser->parse($content, $this->block);\\n        }\\n    }\\n\\n    public function getContentString(): string\\n    {\\n        return $this->referenceParser->getParagraphContent();\\n    }\\n\\n    \/**\\n     * @return ReferenceInterface[]\\n     *\/\\n    public function getReferences(): iterable\\n    {\\n        return $this->referenceParser->getReferences();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/BlockContinue.php\",\"ext\":\"php\",\"size\":1567,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\CursorState;\\n\\n\/**\\n * Result object for continuing parsing of a block; see static methods for constructors.\\n *\\n * @psalm-immutable\\n *\/\\nfinal class BlockContinue\\n{\\n    \/** @psalm-readonly *\/\\n    private ?CursorState $cursorState = null;\\n\\n    \/** @psalm-readonly *\/\\n    private bool $finalize;\\n\\n    private function __construct(?CursorState $cursorState = null, bool $finalize = false)\\n    {\\n        $this->cursorState = $cursorState;\\n        $this->finalize    = $finalize;\\n    }\\n\\n    public function getCursorState(): ?CursorState\\n    {\\n        return $this->cursorState;\\n    }\\n\\n    public function isFinalize(): bool\\n    {\\n        return $this->finalize;\\n    }\\n\\n    \/**\\n     * Signal that we cannot continue here\\n     *\\n     * @return null\\n     *\/\\n    public static function none(): ?self\\n    {\\n        return null;\\n    }\\n\\n    \/**\\n     * Signal that we're continuing at the given position\\n     *\/\\n    public static function at(Cursor $cursor): self\\n    {\\n        return new self($cursor->saveState(), false);\\n    }\\n\\n    \/**\\n     * Signal that we want to finalize and close the block\\n     *\/\\n    public static function finished(): self\\n    {\\n        return new self(null, true);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/SkipLinesStartingWithLettersParser.php\",\"ext\":\"php\",\"size\":1678,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\nuse League\\\\CommonMark\\\\Util\\\\RegexHelper;\\n\\n\/**\\n * @internal\\n *\\n * This \\\"parser\\\" is actually a performance optimization.\\n *\\n * Most lines in a typical Markdown document probably won't match a block start. This is especially true for lines starting\\n * with letters - nothing in the core CommonMark spec or our supported extensions will match those lines as blocks. Therefore,\\n * if we can identify those lines and skip block start parsing, we can optimize performance by ~10%.\\n *\\n * Previously this optimization was hard-coded in the MarkdownParser but did not allow users to override this behavior.\\n * By implementing this optimization as a block parser instead, users wanting custom blocks starting with letters\\n * can instead register their block parser with a higher priority to ensure their parser is always called first.\\n *\/\\nfinal class SkipLinesStartingWithLettersParser implements BlockStartParserInterface\\n{\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart\\n    {\\n        if (! $cursor->isIndented() && RegexHelper::isLetter($cursor->getNextNonSpaceCharacter())) {\\n            $cursor->advanceToNextNonSpaceOrTab();\\n\\n            return BlockStart::abort();\\n        }\\n\\n        return BlockStart::none();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/BlockStart.php\",\"ext\":\"php\",\"size\":2721,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\CursorState;\\n\\n\/**\\n * Result object for starting parsing of a block; see static methods for constructors\\n *\/\\nfinal class BlockStart\\n{\\n    \/**\\n     * @var BlockContinueParserInterface[]\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private array $blockParsers;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?CursorState $cursorState = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $replaceActiveBlockParser = false;\\n\\n    private bool $isAborting = false;\\n\\n    private function __construct(BlockContinueParserInterface ...$blockParsers)\\n    {\\n        $this->blockParsers = $blockParsers;\\n    }\\n\\n    \/**\\n     * @return BlockContinueParserInterface[]\\n     *\/\\n    public function getBlockParsers(): iterable\\n    {\\n        return $this->blockParsers;\\n    }\\n\\n    public function getCursorState(): ?CursorState\\n    {\\n        return $this->cursorState;\\n    }\\n\\n    public function isReplaceActiveBlockParser(): bool\\n    {\\n        return $this->replaceActiveBlockParser;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\/\\n    public function isAborting(): bool\\n    {\\n        return $this->isAborting;\\n    }\\n\\n    \/**\\n     * Signal that we want to parse at the given cursor position\\n     *\\n     * @return $this\\n     *\/\\n    public function at(Cursor $cursor): self\\n    {\\n        $this->cursorState = $cursor->saveState();\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * Signal that we want to replace the active block parser with this one\\n     *\\n     * @return $this\\n     *\/\\n    public function replaceActiveBlockParser(): self\\n    {\\n        $this->replaceActiveBlockParser = true;\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * Signal that we cannot parse whatever is here\\n     *\\n     * @return null\\n     *\/\\n    public static function none(): ?self\\n    {\\n        return null;\\n    }\\n\\n    \/**\\n     * Signal that we'd like to register the given parser(s) so they can parse the current block\\n     *\/\\n    public static function of(BlockContinueParserInterface ...$blockParsers): self\\n    {\\n        return new self(...$blockParsers);\\n    }\\n\\n    \/**\\n     * Signal that the block parsing process should be aborted (no other block starts should be checked)\\n     *\\n     * @internal\\n     *\/\\n    public static function abort(): self\\n    {\\n        $ret             = new self();\\n        $ret->isAborting = true;\\n\\n        return $ret;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/BlockContinueParserWithInlinesInterface.php\",\"ext\":\"php\",\"size\":617,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserEngineInterface;\\n\\ninterface BlockContinueParserWithInlinesInterface extends BlockContinueParserInterface\\n{\\n    \/**\\n     * Parse any inlines inside of the current block\\n     *\/\\n    public function parseInlines(InlineParserEngineInterface $inlineParser): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/DocumentBlockParser.php\",\"ext\":\"php\",\"size\":2357,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Document;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\Paragraph;\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMapInterface;\\n\\n\/**\\n * Parser implementation which ensures everything is added to the root-level Document\\n *\/\\nfinal class DocumentBlockParser extends AbstractBlockContinueParser\\n{\\n    \/** @psalm-readonly *\/\\n    private Document $document;\\n\\n    public function __construct(ReferenceMapInterface $referenceMap)\\n    {\\n        $this->document = new Document($referenceMap);\\n    }\\n\\n    public function getBlock(): Document\\n    {\\n        return $this->document;\\n    }\\n\\n    public function isContainer(): bool\\n    {\\n        return true;\\n    }\\n\\n    public function canContain(AbstractBlock $childBlock): bool\\n    {\\n        return true;\\n    }\\n\\n    public function tryContinue(Cursor $cursor, BlockContinueParserInterface $activeBlockParser): ?BlockContinue\\n    {\\n        return BlockContinue::at($cursor);\\n    }\\n\\n    public function closeBlock(): void\\n    {\\n        $this->removeLinkReferenceDefinitions();\\n    }\\n\\n    private function removeLinkReferenceDefinitions(): void\\n    {\\n        $emptyNodes = [];\\n\\n        $walker = $this->document->walker();\\n        while ($event = $walker->next()) {\\n            $node = $event->getNode();\\n            \/\/ TODO for v3: It would be great if we could find an alternate way to identify such paragraphs.\\n            \/\/ Unfortunately, we can't simply check for empty paragraphs here because inlines haven't been processed yet,\\n            \/\/ meaning all paragraphs will appear blank here, and we don't have a way to check the status of the reference parser\\n            \/\/ which is attached to the (already-closed) paragraph parser.\\n            if ($event->isEntering() && $node instanceof Paragraph && $node->onlyContainsLinkReferenceDefinitions) {\\n                $emptyNodes[] = $node;\\n            }\\n        }\\n\\n        foreach ($emptyNodes as $node) {\\n            $node->detach();\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Block\/BlockStartParserInterface.php\",\"ext\":\"php\",\"size\":1073,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Block;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserStateInterface;\\n\\n\/**\\n * Interface for a block parser which identifies block starts.\\n *\/\\ninterface BlockStartParserInterface\\n{\\n    \/**\\n     * Check whether we should handle the block at the current position\\n     *\\n     * @param Cursor                       $cursor      A cloned copy of the cursor at the current parsing location\\n     * @param MarkdownParserStateInterface $parserState Additional information about the state of the Markdown parser\\n     *\\n     * @return BlockStart|null The BlockStart that has been identified, or null if the block doesn't match here\\n     *\/\\n    public function tryStart(Cursor $cursor, MarkdownParserStateInterface $parserState): ?BlockStart;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Inline\/NewlineParser.php\",\"ext\":\"php\",\"size\":1580,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Newline;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\nfinal class NewlineParser implements InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch\\n    {\\n        return InlineParserMatch::regex('\\\\\\\\n');\\n    }\\n\\n    public function parse(InlineParserContext $inlineContext): bool\\n    {\\n        $inlineContext->getCursor()->advanceBy(1);\\n\\n        \/\/ Check previous inline for trailing spaces\\n        $spaces     = 0;\\n        $lastInline = $inlineContext->getContainer()->lastChild();\\n        if ($lastInline instanceof Text) {\\n            $trimmed = \\\\rtrim($lastInline->getLiteral(), ' ');\\n            $spaces  = \\\\strlen($lastInline->getLiteral()) - \\\\strlen($trimmed);\\n            if ($spaces) {\\n                $lastInline->setLiteral($trimmed);\\n            }\\n        }\\n\\n        if ($spaces >= 2) {\\n            $inlineContext->getContainer()->appendChild(new Newline(Newline::HARDBREAK));\\n        } else {\\n            $inlineContext->getContainer()->appendChild(new Newline(Newline::SOFTBREAK));\\n        }\\n\\n        return true;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Inline\/InlineParserInterface.php\",\"ext\":\"php\",\"size\":534,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\InlineParserContext;\\n\\ninterface InlineParserInterface\\n{\\n    public function getMatchDefinition(): InlineParserMatch;\\n\\n    public function parse(InlineParserContext $inlineContext): bool;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Inline\/InlineParserMatch.php\",\"ext\":\"php\",\"size\":2234,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser\\\\Inline;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\n\\nfinal class InlineParserMatch\\n{\\n    private string $regex;\\n\\n    private bool $caseSensitive;\\n\\n    private function __construct(string $regex, bool $caseSensitive = false)\\n    {\\n        $this->regex         = $regex;\\n        $this->caseSensitive = $caseSensitive;\\n    }\\n\\n    public function caseSensitive(): self\\n    {\\n        $this->caseSensitive = true;\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * @internal\\n     *\\n     * @psalm-return non-empty-string\\n     *\/\\n    public function getRegex(): string\\n    {\\n        return '\/' . $this->regex . '\/' . ($this->caseSensitive ? '' : 'i');\\n    }\\n\\n    \/**\\n     * Match the given string (case-insensitive)\\n     *\/\\n    public static function string(string $str): self\\n    {\\n        return new self(\\\\preg_quote($str, '\/'));\\n    }\\n\\n    \/**\\n     * Match any of the given strings (case-insensitive)\\n     *\/\\n    public static function oneOf(string ...$str): self\\n    {\\n        return new self(\\\\implode('|', \\\\array_map(static fn (string $str): string => \\\\preg_quote($str, '\/'), $str)));\\n    }\\n\\n    \/**\\n     * Match a partial regular expression without starting\/ending delimiters, anchors, or flags\\n     *\/\\n    public static function regex(string $regex): self\\n    {\\n        return new self($regex);\\n    }\\n\\n    public static function join(self ...$definitions): self\\n    {\\n        $regex         = '';\\n        $caseSensitive = null;\\n        foreach ($definitions as $definition) {\\n            $regex .= '(' . $definition->regex . ')';\\n\\n            if ($caseSensitive === null) {\\n                $caseSensitive = $definition->caseSensitive;\\n            } elseif ($caseSensitive !== $definition->caseSensitive) {\\n                throw new InvalidArgumentException('Case-sensitive and case-insensitive definitions cannot be combined');\\n            }\\n        }\\n\\n        return new self($regex, $caseSensitive ?? false);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/InlineParserContext.php\",\"ext\":\"php\",\"size\":2932,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Delimiter\\\\DelimiterStack;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMapInterface;\\n\\nfinal class InlineParserContext\\n{\\n    \/** @psalm-readonly *\/\\n    private AbstractBlock $container;\\n\\n    \/** @psalm-readonly *\/\\n    private ReferenceMapInterface $referenceMap;\\n\\n    \/** @psalm-readonly *\/\\n    private Cursor $cursor;\\n\\n    \/** @psalm-readonly *\/\\n    private DelimiterStack $delimiterStack;\\n\\n    \/**\\n     * @var string[]\\n     * @psalm-var non-empty-array<string>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $matches;\\n\\n    public function __construct(Cursor $contents, AbstractBlock $container, ReferenceMapInterface $referenceMap, int $maxDelimitersPerLine = PHP_INT_MAX)\\n    {\\n        $this->referenceMap   = $referenceMap;\\n        $this->container      = $container;\\n        $this->cursor         = $contents;\\n        $this->delimiterStack = new DelimiterStack($maxDelimitersPerLine);\\n    }\\n\\n    public function getContainer(): AbstractBlock\\n    {\\n        return $this->container;\\n    }\\n\\n    public function getReferenceMap(): ReferenceMapInterface\\n    {\\n        return $this->referenceMap;\\n    }\\n\\n    public function getCursor(): Cursor\\n    {\\n        return $this->cursor;\\n    }\\n\\n    public function getDelimiterStack(): DelimiterStack\\n    {\\n        return $this->delimiterStack;\\n    }\\n\\n    \/**\\n     * @return string The full text that matched the InlineParserMatch definition\\n     *\/\\n    public function getFullMatch(): string\\n    {\\n        return $this->matches[0];\\n    }\\n\\n    \/**\\n     * @return int The length of the full match (in characters, not bytes)\\n     *\/\\n    public function getFullMatchLength(): int\\n    {\\n        return \\\\mb_strlen($this->matches[0], 'UTF-8');\\n    }\\n\\n    \/**\\n     * @return string[] Similar to preg_match(), index 0 will contain the full match, and any other array elements will be captured sub-matches\\n     *\\n     * @psalm-return non-empty-array<string>\\n     *\/\\n    public function getMatches(): array\\n    {\\n        return $this->matches;\\n    }\\n\\n    \/**\\n     * @return string[]\\n     *\/\\n    public function getSubMatches(): array\\n    {\\n        return \\\\array_slice($this->matches, 1);\\n    }\\n\\n    \/**\\n     * @param string[] $matches\\n     *\\n     * @psalm-param non-empty-array<string> $matches\\n     *\/\\n    public function withMatches(array $matches): InlineParserContext\\n    {\\n        $ctx = clone $this;\\n\\n        $ctx->matches = $matches;\\n\\n        return $ctx;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/ParserLogicException.php\",\"ext\":\"php\",\"size\":449,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\n\\nclass ParserLogicException extends \\\\LogicException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/MarkdownParserStateInterface.php\",\"ext\":\"php\",\"size\":1076,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\n\\ninterface MarkdownParserStateInterface\\n{\\n    \/**\\n     * Returns the deepest open block parser\\n     *\/\\n    public function getActiveBlockParser(): BlockContinueParserInterface;\\n\\n    \/**\\n     * Open block parser that was last matched during the continue phase. This is different from the currently active\\n     * block parser, as an unmatched block is only closed when a new block is started.\\n     *\/\\n    public function getLastMatchedBlockParser(): BlockContinueParserInterface;\\n\\n    \/**\\n     * Returns the current content of the paragraph if the matched block is a paragraph. The content can be multiple\\n     * lines separated by newlines.\\n     *\/\\n    public function getParagraphContent(): ?string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/InlineParserEngineInterface.php\",\"ext\":\"php\",\"size\":643,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\n\\n\/**\\n * Parser for inline content (text, links, emphasized text, etc).\\n *\/\\ninterface InlineParserEngineInterface\\n{\\n    \/**\\n     * Parse the given contents as inlines and insert them into the given block\\n     *\/\\n    public function parse(string $contents, AbstractBlock $block): void;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/MarkdownParserState.php\",\"ext\":\"php\",\"size\":1632,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\BlockContinueParserInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\Block\\\\ParagraphParser;\\n\\n\/**\\n * @internal You should rely on the interface instead\\n *\/\\nfinal class MarkdownParserState implements MarkdownParserStateInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private BlockContinueParserInterface $activeBlockParser;\\n\\n    \/** @psalm-readonly *\/\\n    private BlockContinueParserInterface $lastMatchedBlockParser;\\n\\n    public function __construct(BlockContinueParserInterface $activeBlockParser, BlockContinueParserInterface $lastMatchedBlockParser)\\n    {\\n        $this->activeBlockParser      = $activeBlockParser;\\n        $this->lastMatchedBlockParser = $lastMatchedBlockParser;\\n    }\\n\\n    public function getActiveBlockParser(): BlockContinueParserInterface\\n    {\\n        return $this->activeBlockParser;\\n    }\\n\\n    public function getLastMatchedBlockParser(): BlockContinueParserInterface\\n    {\\n        return $this->lastMatchedBlockParser;\\n    }\\n\\n    public function getParagraphContent(): ?string\\n    {\\n        if (! $this->lastMatchedBlockParser instanceof ParagraphParser) {\\n            return null;\\n        }\\n\\n        $paragraphParser = $this->lastMatchedBlockParser;\\n        $content         = $paragraphParser->getContentString();\\n\\n        return $content === '' ? null : $content;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/Cursor.php\",\"ext\":\"php\",\"size\":14314,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\UnexpectedEncodingException;\\n\\nclass Cursor\\n{\\n    public const INDENT_LEVEL = 4;\\n\\n    \/** @psalm-readonly *\/\\n    private string $line;\\n\\n    \/** @psalm-readonly *\/\\n    private int $length;\\n\\n    \/**\\n     * @var int\\n     *\\n     * It's possible for this to be 1 char past the end, meaning we've parsed all chars and have\\n     * reached the end.  In this state, any character-returning method MUST return null.\\n     *\/\\n    private int $currentPosition = 0;\\n\\n    private int $column = 0;\\n\\n    private int $indent = 0;\\n\\n    private int $previousPosition = 0;\\n\\n    private ?int $nextNonSpaceCache = null;\\n\\n    private bool $partiallyConsumedTab = false;\\n\\n    \/**\\n     * @var int|false\\n     *\\n     * @psalm-readonly\\n     *\/\\n    private $lastTabPosition;\\n\\n    \/** @psalm-readonly *\/\\n    private bool $isMultibyte;\\n\\n    \/** @var array<int, string> *\/\\n    private array $charCache = [];\\n\\n    \/**\\n     * @param string $line The line being parsed (ASCII or UTF-8)\\n     *\/\\n    public function __construct(string $line)\\n    {\\n        if (! \\\\mb_check_encoding($line, 'UTF-8')) {\\n            throw new UnexpectedEncodingException('Unexpected encoding - UTF-8 or ASCII was expected');\\n        }\\n\\n        $this->line            = $line;\\n        $this->length          = \\\\mb_strlen($line, 'UTF-8') ?: 0;\\n        $this->isMultibyte     = $this->length !== \\\\strlen($line);\\n        $this->lastTabPosition = $this->isMultibyte ? \\\\mb_strrpos($line, \\\"\\\\t\\\", 0, 'UTF-8') : \\\\strrpos($line, \\\"\\\\t\\\");\\n    }\\n\\n    \/**\\n     * Returns the position of the next character which is not a space (or tab)\\n     *\/\\n    public function getNextNonSpacePosition(): int\\n    {\\n        if ($this->nextNonSpaceCache !== null) {\\n            return $this->nextNonSpaceCache;\\n        }\\n\\n        if ($this->currentPosition >= $this->length) {\\n            return $this->length;\\n        }\\n\\n        $cols = $this->column;\\n\\n        for ($i = $this->currentPosition; $i < $this->length; $i++) {\\n            \/\/ This if-else was copied out of getCharacter() for performance reasons\\n            if ($this->isMultibyte) {\\n                $c = $this->charCache[$i] ??= \\\\mb_substr($this->line, $i, 1, 'UTF-8');\\n            } else {\\n                $c = $this->line[$i];\\n            }\\n\\n            if ($c === ' ') {\\n                $cols++;\\n            } elseif ($c === \\\"\\\\t\\\") {\\n                $cols += 4 - ($cols % 4);\\n            } else {\\n                break;\\n            }\\n        }\\n\\n        $this->indent = $cols - $this->column;\\n\\n        return $this->nextNonSpaceCache = $i;\\n    }\\n\\n    \/**\\n     * Returns the next character which isn't a space (or tab)\\n     *\/\\n    public function getNextNonSpaceCharacter(): ?string\\n    {\\n        $index = $this->getNextNonSpacePosition();\\n        if ($index >= $this->length) {\\n            return null;\\n        }\\n\\n        if ($this->isMultibyte) {\\n            return $this->charCache[$index] ??= \\\\mb_substr($this->line, $index, 1, 'UTF-8');\\n        }\\n\\n        return $this->line[$index];\\n    }\\n\\n    \/**\\n     * Calculates the current indent (number of spaces after current position)\\n     *\/\\n    public function getIndent(): int\\n    {\\n        if ($this->nextNonSpaceCache === null) {\\n            $this->getNextNonSpacePosition();\\n        }\\n\\n        return $this->indent;\\n    }\\n\\n    \/**\\n     * Whether the cursor is indented to INDENT_LEVEL\\n     *\/\\n    public function isIndented(): bool\\n    {\\n        if ($this->nextNonSpaceCache === null) {\\n            $this->getNextNonSpacePosition();\\n        }\\n\\n        return $this->indent >= self::INDENT_LEVEL;\\n    }\\n\\n    public function getCharacter(?int $index = null): ?string\\n    {\\n        if ($index === null) {\\n            $index = $this->currentPosition;\\n        }\\n\\n        \/\/ Index out-of-bounds, or we're at the end\\n        if ($index < 0 || $index >= $this->length) {\\n            return null;\\n        }\\n\\n        if ($this->isMultibyte) {\\n            return $this->charCache[$index] ??= \\\\mb_substr($this->line, $index, 1, 'UTF-8');\\n        }\\n\\n        return $this->line[$index];\\n    }\\n\\n    \/**\\n     * Slightly-optimized version of getCurrent(null)\\n     *\/\\n    public function getCurrentCharacter(): ?string\\n    {\\n        if ($this->currentPosition >= $this->length) {\\n            return null;\\n        }\\n\\n        if ($this->isMultibyte) {\\n            return $this->charCache[$this->currentPosition] ??= \\\\mb_substr($this->line, $this->currentPosition, 1, 'UTF-8');\\n        }\\n\\n        return $this->line[$this->currentPosition];\\n    }\\n\\n    \/**\\n     * Returns the next character (or null, if none) without advancing forwards\\n     *\/\\n    public function peek(int $offset = 1): ?string\\n    {\\n        return $this->getCharacter($this->currentPosition + $offset);\\n    }\\n\\n    \/**\\n     * Whether the remainder is blank\\n     *\/\\n    public function isBlank(): bool\\n    {\\n        return $this->nextNonSpaceCache === $this->length || $this->getNextNonSpacePosition() === $this->length;\\n    }\\n\\n    \/**\\n     * Move the cursor forwards\\n     *\/\\n    public function advance(): void\\n    {\\n        $this->advanceBy(1);\\n    }\\n\\n    \/**\\n     * Move the cursor forwards\\n     *\\n     * @param int  $characters       Number of characters to advance by\\n     * @param bool $advanceByColumns Whether to advance by columns instead of spaces\\n     *\/\\n    public function advanceBy(int $characters, bool $advanceByColumns = false): void\\n    {\\n        $this->previousPosition  = $this->currentPosition;\\n        $this->nextNonSpaceCache = null;\\n\\n        if ($this->currentPosition >= $this->length || $characters === 0) {\\n            return;\\n        }\\n\\n        \/\/ Optimization to avoid tab handling logic if we have no tabs\\n        if ($this->lastTabPosition === false || $this->currentPosition > $this->lastTabPosition) {\\n            $length                     = \\\\min($characters, $this->length - $this->currentPosition);\\n            $this->partiallyConsumedTab = false;\\n            $this->currentPosition     += $length;\\n            $this->column              += $length;\\n\\n            return;\\n        }\\n\\n        $nextFewChars = $this->isMultibyte ?\\n            \\\\mb_substr($this->line, $this->currentPosition, $characters, 'UTF-8') :\\n            \\\\substr($this->line, $this->currentPosition, $characters);\\n\\n        if ($characters === 1) {\\n            $asArray = [$nextFewChars];\\n        } elseif ($this->isMultibyte) {\\n            \/** @var string[] $asArray *\/\\n            $asArray = \\\\mb_str_split($nextFewChars, 1, 'UTF-8');\\n        } else {\\n            $asArray = \\\\str_split($nextFewChars);\\n        }\\n\\n        foreach ($asArray as $c) {\\n            if ($c === \\\"\\\\t\\\") {\\n                $charsToTab = 4 - ($this->column % 4);\\n                if ($advanceByColumns) {\\n                    $this->partiallyConsumedTab = $charsToTab > $characters;\\n                    $charsToAdvance             = $charsToTab > $characters ? $characters : $charsToTab;\\n                    $this->column              += $charsToAdvance;\\n                    $this->currentPosition     += $this->partiallyConsumedTab ? 0 : 1;\\n                    $characters                -= $charsToAdvance;\\n                } else {\\n                    $this->partiallyConsumedTab = false;\\n                    $this->column              += $charsToTab;\\n                    $this->currentPosition++;\\n                    $characters--;\\n                }\\n            } else {\\n                $this->partiallyConsumedTab = false;\\n                $this->currentPosition++;\\n                $this->column++;\\n                $characters--;\\n            }\\n\\n            if ($characters <= 0) {\\n                break;\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * Advances the cursor by a single space or tab, if present\\n     *\/\\n    public function advanceBySpaceOrTab(): bool\\n    {\\n        $character = $this->getCurrentCharacter();\\n\\n        if ($character === ' ' || $character === \\\"\\\\t\\\") {\\n            $this->advanceBy(1, true);\\n\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Parse zero or more space\/tab characters\\n     *\\n     * @return int Number of positions moved\\n     *\/\\n    public function advanceToNextNonSpaceOrTab(): int\\n    {\\n        $newPosition = $this->nextNonSpaceCache ?? $this->getNextNonSpacePosition();\\n        if ($newPosition === $this->currentPosition) {\\n            return 0;\\n        }\\n\\n        $this->advanceBy($newPosition - $this->currentPosition);\\n        $this->partiallyConsumedTab = false;\\n\\n        \/\/ We've just advanced to where that non-space is,\\n        \/\/ so any subsequent calls to find the next one will\\n        \/\/ always return the current position.\\n        $this->nextNonSpaceCache = $this->currentPosition;\\n        $this->indent            = 0;\\n\\n        return $this->currentPosition - $this->previousPosition;\\n    }\\n\\n    \/**\\n     * Parse zero or more space characters, including at most one newline.\\n     *\\n     * Tab characters are not parsed with this function.\\n     *\\n     * @return int Number of positions moved\\n     *\/\\n    public function advanceToNextNonSpaceOrNewline(): int\\n    {\\n        $currentCharacter = $this->getCurrentCharacter();\\n\\n        \/\/ Optimization: Avoid the regex if we know there are no spaces or newlines\\n        if ($currentCharacter !== ' ' && $currentCharacter !== \\\"\\\\n\\\") {\\n            $this->previousPosition = $this->currentPosition;\\n\\n            return 0;\\n        }\\n\\n        $matches = [];\\n        \\\\preg_match('\/^ *(?:\\\\n *)?\/', $this->getRemainder(), $matches, \\\\PREG_OFFSET_CAPTURE);\\n\\n        \/\/ [0][0] contains the matched text\\n        \/\/ [0][1] contains the index of that match\\n        \\\\assert(isset($matches[0]));\\n        $increment = $matches[0][1] + \\\\strlen($matches[0][0]);\\n\\n        $this->advanceBy($increment);\\n\\n        return $this->currentPosition - $this->previousPosition;\\n    }\\n\\n    \/**\\n     * Move the position to the very end of the line\\n     *\\n     * @return int The number of characters moved\\n     *\/\\n    public function advanceToEnd(): int\\n    {\\n        $this->previousPosition  = $this->currentPosition;\\n        $this->nextNonSpaceCache = null;\\n\\n        $this->currentPosition = $this->length;\\n\\n        return $this->currentPosition - $this->previousPosition;\\n    }\\n\\n    public function getRemainder(): string\\n    {\\n        if ($this->currentPosition >= $this->length) {\\n            return '';\\n        }\\n\\n        $prefix   = '';\\n        $position = $this->currentPosition;\\n        if ($this->partiallyConsumedTab) {\\n            $position++;\\n            $charsToTab = 4 - ($this->column % 4);\\n            $prefix     = \\\\str_repeat(' ', $charsToTab);\\n        }\\n\\n        $subString = $this->isMultibyte ?\\n            \\\\mb_substr($this->line, $position, null, 'UTF-8') :\\n            \\\\substr($this->line, $position);\\n\\n        return $prefix . $subString;\\n    }\\n\\n    public function getLine(): string\\n    {\\n        return $this->line;\\n    }\\n\\n    public function isAtEnd(): bool\\n    {\\n        return $this->currentPosition >= $this->length;\\n    }\\n\\n    \/**\\n     * Try to match a regular expression\\n     *\\n     * Returns the matching text and advances to the end of that match\\n     *\\n     * @psalm-param non-empty-string $regex\\n     *\/\\n    public function match(string $regex): ?string\\n    {\\n        $subject = $this->getRemainder();\\n\\n        if (! \\\\preg_match($regex, $subject, $matches, \\\\PREG_OFFSET_CAPTURE)) {\\n            return null;\\n        }\\n\\n        \/\/ $matches[0][0] contains the matched text\\n        \/\/ $matches[0][1] contains the index of that match\\n\\n        if ($this->isMultibyte) {\\n            \/\/ PREG_OFFSET_CAPTURE always returns the byte offset, not the char offset, which is annoying\\n            $offset      = \\\\mb_strlen(\\\\substr($subject, 0, $matches[0][1]), 'UTF-8');\\n            $matchLength = \\\\mb_strlen($matches[0][0], 'UTF-8');\\n        } else {\\n            $offset      = $matches[0][1];\\n            $matchLength = \\\\strlen($matches[0][0]);\\n        }\\n\\n        \/\/ [0][0] contains the matched text\\n        \/\/ [0][1] contains the index of that match\\n        $this->advanceBy($offset + $matchLength);\\n\\n        return $matches[0][0];\\n    }\\n\\n    \/**\\n     * Encapsulates the current state of this cursor in case you need to rollback later.\\n     *\\n     * WARNING: Do not parse or use the return value for ANYTHING except for\\n     * passing it back into restoreState(), as the number of values and their\\n     * contents may change in any future release without warning.\\n     *\/\\n    public function saveState(): CursorState\\n    {\\n        return new CursorState([\\n            $this->currentPosition,\\n            $this->previousPosition,\\n            $this->nextNonSpaceCache,\\n            $this->indent,\\n            $this->column,\\n            $this->partiallyConsumedTab,\\n        ]);\\n    }\\n\\n    \/**\\n     * Restore the cursor to a previous state.\\n     *\\n     * Pass in the value previously obtained by calling saveState().\\n     *\/\\n    public function restoreState(CursorState $state): void\\n    {\\n        [\\n            $this->currentPosition,\\n            $this->previousPosition,\\n            $this->nextNonSpaceCache,\\n            $this->indent,\\n            $this->column,\\n            $this->partiallyConsumedTab,\\n        ] = $state->toArray();\\n    }\\n\\n    public function getPosition(): int\\n    {\\n        return $this->currentPosition;\\n    }\\n\\n    public function getPreviousText(): string\\n    {\\n        if ($this->isMultibyte) {\\n            return \\\\mb_substr($this->line, $this->previousPosition, $this->currentPosition - $this->previousPosition, 'UTF-8');\\n        }\\n\\n        return \\\\substr($this->line, $this->previousPosition, $this->currentPosition - $this->previousPosition);\\n    }\\n\\n    public function getSubstring(int $start, ?int $length = null): string\\n    {\\n        if ($this->isMultibyte) {\\n            return \\\\mb_substr($this->line, $start, $length, 'UTF-8');\\n        }\\n\\n        if ($length !== null) {\\n            return \\\\substr($this->line, $start, $length);\\n        }\\n\\n        return \\\\substr($this->line, $start);\\n    }\\n\\n    public function getColumn(): int\\n    {\\n        return $this->column;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Parser\/InlineParserEngine.php\",\"ext\":\"php\",\"size\":6733,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Parser;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Node\\\\Block\\\\AbstractBlock;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\AdjacentTextMerger;\\nuse League\\\\CommonMark\\\\Node\\\\Inline\\\\Text;\\nuse League\\\\CommonMark\\\\Parser\\\\Inline\\\\InlineParserInterface;\\nuse League\\\\CommonMark\\\\Reference\\\\ReferenceMapInterface;\\n\\n\/**\\n * @internal\\n *\/\\nfinal class InlineParserEngine implements InlineParserEngineInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private EnvironmentInterface $environment;\\n\\n    \/** @psalm-readonly *\/\\n    private ReferenceMapInterface $referenceMap;\\n\\n    \/**\\n     * @var array<int, InlineParserInterface|string|bool>\\n     * @psalm-var list<array{0: InlineParserInterface, 1: non-empty-string, 2: bool}>\\n     * @phpstan-var array<int, array{0: InlineParserInterface, 1: non-empty-string, 2: bool}>\\n     *\/\\n    private array $parsers = [];\\n\\n    public function __construct(EnvironmentInterface $environment, ReferenceMapInterface $referenceMap)\\n    {\\n        $this->environment  = $environment;\\n        $this->referenceMap = $referenceMap;\\n\\n        foreach ($environment->getInlineParsers() as $parser) {\\n            \\\\assert($parser instanceof InlineParserInterface);\\n            $regex = $parser->getMatchDefinition()->getRegex();\\n\\n            $this->parsers[] = [$parser, $regex, \\\\strlen($regex) !== \\\\mb_strlen($regex, 'UTF-8')];\\n        }\\n    }\\n\\n    public function parse(string $contents, AbstractBlock $block): void\\n    {\\n        $contents = \\\\trim($contents);\\n        $cursor   = new Cursor($contents);\\n\\n        $inlineParserContext = new InlineParserContext($cursor, $block, $this->referenceMap, $this->environment->getConfiguration()->get('max_delimiters_per_line'));\\n\\n        \/\/ Have all parsers look at the line to determine what they might want to parse and what positions they exist at\\n        foreach ($this->matchParsers($contents) as $matchPosition => $parsers) {\\n            $currentPosition = $cursor->getPosition();\\n            \/\/ We've already gone past this point\\n            if ($currentPosition > $matchPosition) {\\n                continue;\\n            }\\n\\n            \/\/ We've skipped over some uninteresting text that should be added as a plain text node\\n            if ($currentPosition < $matchPosition) {\\n                $cursor->advanceBy($matchPosition - $currentPosition);\\n                $this->addPlainText($cursor->getPreviousText(), $block);\\n            }\\n\\n            \/\/ We're now at a potential start - see which of the current parsers can handle it\\n            $parsed = false;\\n            foreach ($parsers as [$parser, $matches]) {\\n                \\\\assert($parser instanceof InlineParserInterface);\\n                if ($parser->parse($inlineParserContext->withMatches($matches))) {\\n                    \/\/ A parser has successfully handled the text at the given position; don't consider any others at this position\\n                    $parsed = true;\\n                    break;\\n                }\\n            }\\n\\n            if ($parsed) {\\n                continue;\\n            }\\n\\n            \/\/ Despite potentially being interested, nothing actually parsed text here, so add the current character and continue onwards\\n            $this->addPlainText((string) $cursor->getCurrentCharacter(), $block);\\n            $cursor->advance();\\n        }\\n\\n        \/\/ Add any remaining text that wasn't parsed\\n        if (! $cursor->isAtEnd()) {\\n            $this->addPlainText($cursor->getRemainder(), $block);\\n        }\\n\\n        \/\/ Process any delimiters that were found\\n        $delimiterStack = $inlineParserContext->getDelimiterStack();\\n        $delimiterStack->processDelimiters(null, $this->environment->getDelimiterProcessors());\\n        $delimiterStack->removeAll();\\n\\n        \/\/ Combine adjacent text notes into one\\n        AdjacentTextMerger::mergeChildNodes($block);\\n    }\\n\\n    private function addPlainText(string $text, AbstractBlock $container): void\\n    {\\n        $lastInline = $container->lastChild();\\n        if ($lastInline instanceof Text && ! $lastInline->data->has('delim')) {\\n            $lastInline->append($text);\\n        } else {\\n            $container->appendChild(new Text($text));\\n        }\\n    }\\n\\n    \/**\\n     * Given the current line, ask all the parsers which parts of the text they would be interested in parsing.\\n     *\\n     * The resulting array provides a list of character positions, which parsers are interested in trying to parse\\n     * the text at those points, and (for convenience\/optimization) what the matching text happened to be.\\n     *\\n     * @return array<array<int, InlineParserInterface|string>>\\n     *\\n     * @psalm-return array<int, list<array{0: InlineParserInterface, 1: non-empty-array<string>}>>\\n     *\\n     * @phpstan-return array<int, array<int, array{0: InlineParserInterface, 1: non-empty-array<string>}>>\\n     *\/\\n    private function matchParsers(string $contents): array\\n    {\\n        $contents    = \\\\trim($contents);\\n        $isMultibyte = ! \\\\mb_check_encoding($contents, 'ASCII');\\n\\n        $ret = [];\\n\\n        foreach ($this->parsers as [$parser, $regex, $isRegexMultibyte]) {\\n            if ($isMultibyte || $isRegexMultibyte) {\\n                $regex .= 'u';\\n            }\\n\\n            \/\/ See if the parser's InlineParserMatch regex matched against any part of the string\\n            if (! \\\\preg_match_all($regex, $contents, $matches, \\\\PREG_OFFSET_CAPTURE | \\\\PREG_SET_ORDER)) {\\n                continue;\\n            }\\n\\n            \/\/ For each part that matched...\\n            foreach ($matches as $match) {\\n                if ($isMultibyte) {\\n                    \/\/ PREG_OFFSET_CAPTURE always returns the byte offset, not the char offset, which is annoying\\n                    $offset = \\\\mb_strlen(\\\\substr($contents, 0, $match[0][1]), 'UTF-8');\\n                } else {\\n                    $offset = \\\\intval($match[0][1]);\\n                }\\n\\n                \/\/ Remove the offsets, keeping only the matched text\\n                $m = \\\\array_column($match, 0);\\n\\n                if ($m === []) {\\n                    continue;\\n                }\\n\\n                \/\/ Add this match to the list of character positions to stop at\\n                $ret[$offset][] = [$parser, $m];\\n            }\\n        }\\n\\n        \/\/ Sort matches by position so we visit them in order\\n        \\\\ksort($ret);\\n\\n        return $ret;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/MarkdownConverter.php\",\"ext\":\"php\",\"size\":2622,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark;\\n\\nuse League\\\\CommonMark\\\\Environment\\\\EnvironmentInterface;\\nuse League\\\\CommonMark\\\\Exception\\\\CommonMarkException;\\nuse League\\\\CommonMark\\\\Output\\\\RenderedContentInterface;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParser;\\nuse League\\\\CommonMark\\\\Parser\\\\MarkdownParserInterface;\\nuse League\\\\CommonMark\\\\Renderer\\\\HtmlRenderer;\\nuse League\\\\CommonMark\\\\Renderer\\\\MarkdownRendererInterface;\\n\\nclass MarkdownConverter implements ConverterInterface, MarkdownConverterInterface\\n{\\n    \/** @psalm-readonly *\/\\n    protected EnvironmentInterface $environment;\\n\\n    \/** @psalm-readonly *\/\\n    protected MarkdownParserInterface $markdownParser;\\n\\n    \/** @psalm-readonly *\/\\n    protected MarkdownRendererInterface $htmlRenderer;\\n\\n    public function __construct(EnvironmentInterface $environment)\\n    {\\n        $this->environment = $environment;\\n\\n        $this->markdownParser = new MarkdownParser($environment);\\n        $this->htmlRenderer   = new HtmlRenderer($environment);\\n    }\\n\\n    public function getEnvironment(): EnvironmentInterface\\n    {\\n        return $this->environment;\\n    }\\n\\n    \/**\\n     * Converts Markdown to HTML.\\n     *\\n     * @param string $input The Markdown to convert\\n     *\\n     * @return RenderedContentInterface Rendered HTML\\n     *\\n     * @throws CommonMarkException\\n     *\/\\n    public function convert(string $input): RenderedContentInterface\\n    {\\n        $documentAST = $this->markdownParser->parse($input);\\n\\n        return $this->htmlRenderer->renderDocument($documentAST);\\n    }\\n\\n    \/**\\n     * Converts Markdown to HTML.\\n     *\\n     * @deprecated since 2.2; use {@link convert()} instead\\n     *\\n     * @param string $markdown The Markdown to convert\\n     *\\n     * @return RenderedContentInterface Rendered HTML\\n     *\\n     * @throws CommonMarkException\\n     *\/\\n    public function convertToHtml(string $markdown): RenderedContentInterface\\n    {\\n        \\\\trigger_deprecation('league\/commonmark', '2.2.0', 'Calling \\\"convertToHtml()\\\" on a %s class is deprecated, use \\\"convert()\\\" instead.', self::class);\\n\\n        return $this->convert($markdown);\\n    }\\n\\n    \/**\\n     * Converts CommonMark to HTML.\\n     *\\n     * @see MarkdownConverter::convert()\\n     *\\n     * @throws CommonMarkException\\n     *\/\\n    public function __invoke(string $markdown): RenderedContentInterface\\n    {\\n        return $this->convert($markdown);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/LogicException.php\",\"ext\":\"php\",\"size\":392,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\nclass LogicException extends \\\\LogicException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/AlreadyInitializedException.php\",\"ext\":\"php\",\"size\":404,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\nclass AlreadyInitializedException extends LogicException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/IOException.php\",\"ext\":\"php\",\"size\":391,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\nclass IOException extends \\\\RuntimeException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/CommonMarkException.php\",\"ext\":\"php\",\"size\":436,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\n\/**\\n * Marker interface for all exceptions thrown by this library.\\n *\/\\ninterface CommonMarkException extends \\\\Throwable\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/InvalidArgumentException.php\",\"ext\":\"php\",\"size\":412,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\nclass InvalidArgumentException extends \\\\InvalidArgumentException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/UnexpectedEncodingException.php\",\"ext\":\"php\",\"size\":413,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\nfinal class UnexpectedEncodingException extends \\\\RuntimeException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Exception\/MissingDependencyException.php\",\"ext\":\"php\",\"size\":406,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Exception;\\n\\nclass MissingDependencyException extends \\\\RuntimeException implements CommonMarkException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/HtmlElement.php\",\"ext\":\"php\",\"size\":4140,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\nfinal class HtmlElement implements \\\\Stringable\\n{\\n    \/** @psalm-readonly *\/\\n    private string $tagName;\\n\\n    \/** @var array<string, string|bool> *\/\\n    private array $attributes = [];\\n\\n    \/** @var \\\\Stringable|\\\\Stringable[]|string *\/\\n    private $contents;\\n\\n    \/** @psalm-readonly *\/\\n    private bool $selfClosing;\\n\\n    \/**\\n     * @param string                                $tagName     Name of the HTML tag\\n     * @param array<string, string|string[]|bool>   $attributes  Array of attributes (values should be unescaped)\\n     * @param \\\\Stringable|\\\\Stringable[]|string|null $contents    Inner contents, pre-escaped if needed\\n     * @param bool                                  $selfClosing Whether the tag is self-closing\\n     *\/\\n    public function __construct(string $tagName, array $attributes = [], $contents = '', bool $selfClosing = false)\\n    {\\n        $this->tagName     = $tagName;\\n        $this->selfClosing = $selfClosing;\\n\\n        foreach ($attributes as $name => $value) {\\n            $this->setAttribute($name, $value);\\n        }\\n\\n        $this->setContents($contents ?? '');\\n    }\\n\\n    \/** @psalm-immutable *\/\\n    public function getTagName(): string\\n    {\\n        return $this->tagName;\\n    }\\n\\n    \/**\\n     * @return array<string, string|bool>\\n     *\\n     * @psalm-immutable\\n     *\/\\n    public function getAllAttributes(): array\\n    {\\n        return $this->attributes;\\n    }\\n\\n    \/**\\n     * @return string|bool|null\\n     *\\n     * @psalm-immutable\\n     *\/\\n    public function getAttribute(string $key)\\n    {\\n        return $this->attributes[$key] ?? null;\\n    }\\n\\n    \/**\\n     * @param string|string[]|bool $value\\n     *\/\\n    public function setAttribute(string $key, $value = true): self\\n    {\\n        if (\\\\is_array($value)) {\\n            $this->attributes[$key] = \\\\implode(' ', \\\\array_unique($value));\\n        } else {\\n            $this->attributes[$key] = $value;\\n        }\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * @return \\\\Stringable|\\\\Stringable[]|string\\n     *\\n     * @psalm-immutable\\n     *\/\\n    public function getContents(bool $asString = true)\\n    {\\n        if (! $asString) {\\n            return $this->contents;\\n        }\\n\\n        return $this->getContentsAsString();\\n    }\\n\\n    \/**\\n     * Sets the inner contents of the tag (must be pre-escaped if needed)\\n     *\\n     * @param \\\\Stringable|\\\\Stringable[]|string $contents\\n     *\\n     * @return $this\\n     *\/\\n    public function setContents($contents): self\\n    {\\n        $this->contents = $contents ?? ''; \/\/ @phpstan-ignore-line\\n\\n        return $this;\\n    }\\n\\n    \/** @psalm-immutable *\/\\n    public function __toString(): string\\n    {\\n        $result = '<' . $this->tagName;\\n\\n        foreach ($this->attributes as $key => $value) {\\n            if ($value === true) {\\n                $result .= ' ' . $key;\\n            } elseif ($value === false) {\\n                continue;\\n            } else {\\n                $result .= ' ' . $key . '=\\\"' . Xml::escape($value) . '\\\"';\\n            }\\n        }\\n\\n        if ($this->contents !== '') {\\n            $result .= '>' . $this->getContentsAsString() . '<\/' . $this->tagName . '>';\\n        } elseif ($this->selfClosing && $this->tagName === 'input') {\\n            $result .= '>';\\n        } elseif ($this->selfClosing) {\\n            $result .= ' \/>';\\n        } else {\\n            $result .= '><\/' . $this->tagName . '>';\\n        }\\n\\n        return $result;\\n    }\\n\\n    \/** @psalm-immutable *\/\\n    private function getContentsAsString(): string\\n    {\\n        if (\\\\is_string($this->contents)) {\\n            return $this->contents;\\n        }\\n\\n        if (\\\\is_array($this->contents)) {\\n            return \\\\implode('', $this->contents);\\n        }\\n\\n        return (string) $this->contents;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/HtmlFilter.php\",\"ext\":\"php\",\"size\":1468,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\n\\n\/**\\n * @psalm-immutable\\n *\/\\nfinal class HtmlFilter\\n{\\n    \/\/ Return the entire string as-is\\n    public const ALLOW = 'allow';\\n    \/\/ Escape the entire string so any HTML\/JS won't be interpreted as such\\n    public const ESCAPE = 'escape';\\n    \/\/ Return an empty string\\n    public const STRIP = 'strip';\\n\\n    \/**\\n     * Runs the given HTML through the given filter\\n     *\\n     * @param string $html   HTML input to be filtered\\n     * @param string $filter One of the HtmlFilter constants\\n     *\\n     * @return string Filtered HTML\\n     *\\n     * @throws InvalidArgumentException when an invalid $filter is given\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function filter(string $html, string $filter): string\\n    {\\n        switch ($filter) {\\n            case self::STRIP:\\n                return '';\\n            case self::ESCAPE:\\n                return \\\\htmlspecialchars($html, \\\\ENT_NOQUOTES);\\n            case self::ALLOW:\\n                return $html;\\n            default:\\n                throw new InvalidArgumentException(\\\\sprintf('Invalid filter provided: \\\"%s\\\"', $filter));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/ArrayCollection.php\",\"ext\":\"php\",\"size\":3476,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\n\/**\\n * Array collection\\n *\\n * Provides a wrapper around a standard PHP array.\\n *\\n * @internal\\n *\\n * @phpstan-template T\\n * @phpstan-implements \\\\IteratorAggregate<int, T>\\n * @phpstan-implements \\\\ArrayAccess<int, T>\\n *\/\\nfinal class ArrayCollection implements \\\\IteratorAggregate, \\\\Countable, \\\\ArrayAccess\\n{\\n    \/**\\n     * @var array<int, mixed>\\n     * @phpstan-var array<int, T>\\n     *\/\\n    private array $elements;\\n\\n    \/**\\n     * Constructor\\n     *\\n     * @param array<int|string, mixed> $elements\\n     *\\n     * @phpstan-param array<int, T> $elements\\n     *\/\\n    public function __construct(array $elements = [])\\n    {\\n        $this->elements = $elements;\\n    }\\n\\n    \/**\\n     * @return mixed|false\\n     *\\n     * @phpstan-return T|false\\n     *\/\\n    public function first()\\n    {\\n        return \\\\reset($this->elements);\\n    }\\n\\n    \/**\\n     * @return mixed|false\\n     *\\n     * @phpstan-return T|false\\n     *\/\\n    public function last()\\n    {\\n        return \\\\end($this->elements);\\n    }\\n\\n    \/**\\n     * Retrieve an external iterator\\n     *\\n     * @return \\\\ArrayIterator<int, mixed>\\n     *\\n     * @phpstan-return \\\\ArrayIterator<int, T>\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function getIterator(): \\\\ArrayIterator\\n    {\\n        return new \\\\ArrayIterator($this->elements);\\n    }\\n\\n    \/**\\n     * Count elements of an object\\n     *\\n     * @return int The count as an integer.\\n     *\/\\n    public function count(): int\\n    {\\n        return \\\\count($this->elements);\\n    }\\n\\n    \/**\\n     * Whether an offset exists\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @phpstan-param int $offset\\n     *\/\\n    public function offsetExists($offset): bool\\n    {\\n        return \\\\array_key_exists($offset, $this->elements);\\n    }\\n\\n    \/**\\n     * Offset to retrieve\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @phpstan-param int $offset\\n     *\\n     * @phpstan-return T|null\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetGet($offset)\\n    {\\n        return $this->elements[$offset] ?? null;\\n    }\\n\\n    \/**\\n     * Offset to set\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @phpstan-param int|null $offset\\n     * @phpstan-param T        $value\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetSet($offset, $value): void\\n    {\\n        if ($offset === null) {\\n            $this->elements[] = $value;\\n        } else {\\n            $this->elements[$offset] = $value;\\n        }\\n    }\\n\\n    \/**\\n     * Offset to unset\\n     *\\n     * {@inheritDoc}\\n     *\\n     * @phpstan-param int $offset\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetUnset($offset): void\\n    {\\n        if (! \\\\array_key_exists($offset, $this->elements)) {\\n            return;\\n        }\\n\\n        unset($this->elements[$offset]);\\n    }\\n\\n    \/**\\n     * Returns a subset of the array\\n     *\\n     * @return array<int, mixed>\\n     *\\n     * @phpstan-return array<int, T>\\n     *\/\\n    public function slice(int $offset, ?int $length = null): array\\n    {\\n        return \\\\array_slice($this->elements, $offset, $length, true);\\n    }\\n\\n    \/**\\n     * @return array<int, mixed>\\n     *\\n     * @phpstan-return array<int, T>\\n     *\/\\n    public function toArray(): array\\n    {\\n        return $this->elements;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/SpecReader.php\",\"ext\":\"php\",\"size\":2237,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\IOException;\\n\\n\/**\\n * Reads in a CommonMark spec document and extracts the input\/output examples for testing against them\\n *\/\\nfinal class SpecReader\\n{\\n    private function __construct()\\n    {\\n    }\\n\\n    \/**\\n     * @return iterable<string, array{input: string, output: string, type: string, section: string, number: int}>\\n     *\/\\n    public static function read(string $data): iterable\\n    {\\n        \/\/ Normalize newlines for platform independence\\n        $data = \\\\preg_replace('\/\\\\r\\\\n?\/', \\\"\\\\n\\\", $data);\\n        \\\\assert($data !== null);\\n        $data = \\\\preg_replace('\/<!-- END TESTS -->.*$\/', '', $data);\\n        \\\\assert($data !== null);\\n        \\\\preg_match_all('\/^`{32} (example ?\\\\w*)\\\\n([\\\\s\\\\S]*?)^\\\\.\\\\n([\\\\s\\\\S]*?)^`{32}$|^#{1,6} *(.*)$\/m', $data, $matches, PREG_SET_ORDER);\\n\\n        $currentSection = 'Example';\\n        $exampleNumber  = 0;\\n\\n        foreach ($matches as $match) {\\n            \\\\assert(isset($match[1], $match[2], $match[3]));\\n            if (isset($match[4])) {\\n                $currentSection = $match[4];\\n                continue;\\n            }\\n\\n            yield \\\\trim($currentSection . ' #' . $exampleNumber) => [\\n                'input'   => \\\\str_replace('\u2192', \\\"\\\\t\\\", $match[2]),\\n                'output'  => \\\\str_replace('\u2192', \\\"\\\\t\\\", $match[3]),\\n                'type'    => $match[1],\\n                'section' => $currentSection,\\n                'number'  => $exampleNumber++,\\n            ];\\n        }\\n    }\\n\\n    \/**\\n     * @return iterable<string, array{input: string, output: string, type: string, section: string, number: int}>\\n     *\\n     * @throws IOException if the file cannot be loaded\\n     *\/\\n    public static function readFile(string $filename): iterable\\n    {\\n        if (($data = \\\\file_get_contents($filename)) === false) {\\n            throw new IOException(\\\\sprintf('Failed to load spec from %s', $filename));\\n        }\\n\\n        return self::read($data);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/Html5EntityDecoder.php\",\"ext\":\"php\",\"size\":1815,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\n\/**\\n * @psalm-immutable\\n *\/\\nfinal class Html5EntityDecoder\\n{\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    public static function decode(string $entity): string\\n    {\\n        if (\\\\substr($entity, -1) !== ';') {\\n            return $entity;\\n        }\\n\\n        if (\\\\substr($entity, 0, 2) === '&#') {\\n            if (\\\\strtolower(\\\\substr($entity, 2, 1)) === 'x') {\\n                return self::fromHex(\\\\substr($entity, 3, -1));\\n            }\\n\\n            return self::fromDecimal(\\\\substr($entity, 2, -1));\\n        }\\n\\n        return \\\\html_entity_decode($entity, \\\\ENT_QUOTES | \\\\ENT_HTML5, 'UTF-8');\\n    }\\n\\n    \/**\\n     * @param mixed $number\\n     *\\n     * @psalm-pure\\n     *\/\\n    private static function fromDecimal($number): string\\n    {\\n        \/\/ Only convert code points within planes 0-2, excluding NULL\\n        \/\/ phpcs:ignore Generic.PHP.ForbiddenFunctions.Found\\n        if (empty($number) || $number > 0x2FFFF) {\\n            return self::fromHex('fffd');\\n        }\\n\\n        $entity = '&#' . $number . ';';\\n\\n        $converted = \\\\mb_decode_numericentity($entity, [0x0, 0x2FFFF, 0, 0xFFFF], 'UTF-8');\\n\\n        if ($converted === $entity) {\\n            return self::fromHex('fffd');\\n        }\\n\\n        return $converted;\\n    }\\n\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    private static function fromHex(string $hexChars): string\\n    {\\n        return self::fromDecimal(\\\\hexdec($hexChars));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/PrioritizedList.php\",\"ext\":\"php\",\"size\":1641,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\n\/**\\n * @internal\\n *\\n * @phpstan-template T\\n * @phpstan-implements \\\\IteratorAggregate<T>\\n *\/\\nfinal class PrioritizedList implements \\\\IteratorAggregate\\n{\\n    \/**\\n     * @var array<int, array<mixed>>\\n     * @phpstan-var array<int, array<T>>\\n     *\/\\n    private array $list = [];\\n\\n    \/**\\n     * @var \\\\Traversable<mixed>|null\\n     * @phpstan-var \\\\Traversable<T>|null\\n     *\/\\n    private ?\\\\Traversable $optimized = null;\\n\\n    \/**\\n     * @param mixed $item\\n     *\\n     * @phpstan-param T $item\\n     *\/\\n    public function add($item, int $priority): void\\n    {\\n        $this->list[$priority][] = $item;\\n        $this->optimized         = null;\\n    }\\n\\n    \/**\\n     * @return \\\\Traversable<int, mixed>\\n     *\\n     * @phpstan-return \\\\Traversable<int, T>\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function getIterator(): \\\\Traversable\\n    {\\n        if ($this->optimized === null) {\\n            \\\\krsort($this->list);\\n\\n            $sorted = [];\\n            foreach ($this->list as $group) {\\n                foreach ($group as $item) {\\n                    $sorted[] = $item;\\n                }\\n            }\\n\\n            $this->optimized = new \\\\ArrayIterator($sorted);\\n        }\\n\\n        return $this->optimized;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/UrlEncoder.php\",\"ext\":\"php\",\"size\":2619,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\UnexpectedEncodingException;\\n\\n\/**\\n * @psalm-immutable\\n *\/\\nfinal class UrlEncoder\\n{\\n    private consta', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '%7B', '%7C', '%7D', '~', '%7F'];\\n\\n    \/**\\n     * @throws UnexpectedEncodingException if a non-UTF-8-compatible encoding is used\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function unescapeAndEncode(string $uri): string\\n    {\\n        \/\/ Optimization: if the URL only includes characters we know will be kept as-is, then just return the URL as-is.\\n        if (\\\\preg_match('\/^[A-Za-z0-9~!@#$&*()\\\\-_=+;:,.\\\\\/?]+$\/', $uri)) {\\n            return $uri;\\n        }\\n\\n        if (! \\\\mb_check_encoding($uri, 'UTF-8')) {\\n            throw new UnexpectedEncodingException('Unexpected encoding - UTF-8 or ASCII was expected');\\n        }\\n\\n        $result = '';\\n\\n        $chars = \\\\mb_str_split($uri, 1, 'UTF-8');\\n\\n        $l = \\\\count($chars);\\n        for ($i = 0; $i < $l; $i++) {\\n            $code = $chars[$i];\\n            if ($code === '%' && $i + 2 < $l) {\\n                if (\\\\preg_match('\/^[0-9a-f]{2}$\/i', $chars[$i + 1] . $chars[$i + 2]) === 1) {\\n                    $result .= '%' . $chars[$i + 1] . $chars[$i + 2];\\n                    $i      += 2;\\n                    continue;\\n                }\\n            }\\n\\n            if (\\\\ord($code) < 128) {\\n                $result .= self::ENCODE_CACHE[\\\\ord($code)];\\n                continue;\\n            }\\n\\n            $result .= \\\\rawurlencode($code);\\n        }\\n\\n        return $result;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/RegexHelper.php\",\"ext\":\"php\",\"size\":10399,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\nuse League\\\\CommonMark\\\\Exception\\\\InvalidArgumentException;\\nuse League\\\\CommonMark\\\\Extension\\\\CommonMark\\\\Node\\\\Block\\\\HtmlBlock;\\n\\n\/**\\n * Provides regular expressions and utilities for parsing Markdown\\n *\\n * All of the PARTIAL_ regex constants assume that they'll be used in case-insensitive searches\\n * All other complete regexes provided by this class (either via constants or methods) will have case-insensitivity enabled.\\n *\\n * @phpcs:disable Generic.Strings.UnnecessaryStringConcat.Found\\n *\\n * @psalm-immutable\\n *\/\\nfinal class RegexHelper\\n{\\n    \/\/ Partial regular expressions (wrap with `\/` on each side and add the case-insensitive `i` flag before use)\\n    public const PARTIAL_ENTITY                = '&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});';\\n    public const PARTIAL_ESCAPABLE             = '[!\\\"#$%&\\\\'()*+,.\\\\\/:;<=>?@[\\\\\\\\\\\\\\\\\\\\]^_`{|}~-]';\\n    public const PARTIAL_ESCAPED_CHAR          = '\\\\\\\\\\\\\\\\' . self::PARTIAL_ESCAPABLE;\\n    public const PARTIAL_IN_DOUBLE_QUOTES      = '\\\"(' . self::PARTIAL_ESCAPED_CHAR . '|[^\\\"\\\\x00])*\\\"';\\n    public const PARTIAL_IN_SINGLE_QUOTES      = '\\\\'(' . self::PARTIAL_ESCAPED_CHAR . '|[^\\\\'\\\\x00])*\\\\'';\\n    public const PARTIAL_IN_PARENS             = '\\\\\\\\((' . self::PARTIAL_ESCAPED_CHAR . '|[^)\\\\x00])*\\\\\\\\)';\\n    public const PARTIAL_REG_CHAR              = '[^\\\\\\\\\\\\\\\\()\\\\x00-\\\\x20]';\\n    public const PARTIAL_IN_PARENS_NOSP        = '\\\\((' . self::PARTIAL_REG_CHAR . '|' . self::PARTIAL_ESCAPED_CHAR . '|\\\\\\\\\\\\\\\\)*\\\\)';\\n    public const PARTIAL_TAGNAME               = '[a-z][a-z0-9-]*';\\n    public const PARTIAL_BLOCKTAGNAME          = '(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)';\\n    public const PARTIAL_ATTRIBUTENAME         = '[a-z_:][a-z0-9:._-]*';\\n    public const PARTIAL_UNQUOTEDVALUE         = '[^\\\"\\\\'=<>`\\\\x00-\\\\x20]+';\\n    public const PARTIAL_SINGLEQUOTEDVALUE     = '\\\\'[^\\\\']*\\\\'';\\n    public const PARTIAL_DOUBLEQUOTEDVALUE     = '\\\"[^\\\"]*\\\"';\\n    public const PARTIAL_ATTRIBUTEVALUE        = '(?:' . self::PARTIAL_UNQUOTEDVALUE . '|' . self::PARTIAL_SINGLEQUOTEDVALUE . '|' . self::PARTIAL_DOUBLEQUOTEDVALUE . ')';\\n    public const PARTIAL_ATTRIBUTEVALUESPEC    = '(?:' . '\\\\s*=' . '\\\\s*' . self::PARTIAL_ATTRIBUTEVALUE . ')';\\n    public const PARTIAL_ATTRIBUTE             = '(?:' . '\\\\s+' . self::PARTIAL_ATTRIBUTENAME . self::PARTIAL_ATTRIBUTEVALUESPEC . '?)';\\n    public const PARTIAL_OPENTAG               = '<' . self::PARTIAL_TAGNAME . self::PARTIAL_ATTRIBUTE . '*' . '\\\\s*\\\\\/?>';\\n    public const PARTIAL_CLOSETAG              = '<\\\\\/' . self::PARTIAL_TAGNAME . '\\\\s*[>]';\\n    public const PARTIAL_OPENBLOCKTAG          = '<' . self::PARTIAL_BLOCKTAGNAME . self::PARTIAL_ATTRIBUTE . '*' . '\\\\s*\\\\\/?>';\\n    public const PARTIAL_CLOSEBLOCKTAG         = '<\\\\\/' . self::PARTIAL_BLOCKTAGNAME . '\\\\s*[>]';\\n    public const PARTIAL_HTMLCOMMENT           = '<!-->|<!--->|<!--[\\\\s\\\\S]*?-->';\\n    public const PARTIAL_PROCESSINGINSTRUCTION = '[<][?][\\\\s\\\\S]*?[?][>]';\\n    public const PARTIAL_DECLARATION           = '<![A-Za-z]+' . '[^>]*>';\\n    public const PARTIAL_CDATA                 = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?]\\\\]>';\\n    public const PARTIAL_HTMLTAG               = '(?:' . self::PARTIAL_OPENTAG . '|' . self::PARTIAL_CLOSETAG . '|' . self::PARTIAL_HTMLCOMMENT . '|' .\\n        self::PARTIAL_PROCESSINGINSTRUCTION . '|' . self::PARTIAL_DECLARATION . '|' . self::PARTIAL_CDATA . ')';\\n    public const PARTIAL_HTMLBLOCKOPEN         = '<(?:' . self::PARTIAL_BLOCKTAGNAME . '(?:[\\\\s\\\\\/>]|$)' . '|' .\\n        '\\\\\/' . self::PARTIAL_BLOCKTAGNAME . '(?:[\\\\s>]|$)' . '|' . '[?!])';\\n    public const PARTIAL_LINK_TITLE            = '^(?:\\\"(' . self::PARTIAL_ESCAPED_CHAR . '|[^\\\"\\\\x00])*+\\\"' .\\n        '|' . '\\\\'(' . self::PARTIAL_ESCAPED_CHAR . '|[^\\\\'\\\\x00])*+\\\\'' .\\n        '|' . '\\\\((' . self::PARTIAL_ESCAPED_CHAR . '|[^()\\\\x00])*+\\\\))';\\n\\n    public const REGEX_PUNCTUATION        = '\/^[!\\\"#$%&\\\\'()*+,\\\\-.\\\\\\\\\/:;<=>?@\\\\\\\\[\\\\\\\\]\\\\\\\\\\\\\\\\^_`{|}~\\\\p{P}\\\\p{S}]\/u';\\n    public const REGEX_UNSAFE_PROTOCOL    = '\/^javascript:|vbscript:|file:|data:\/i';\\n    public const REGEX_SAFE_DATA_PROTOCOL = '\/^data:image\\\\\/(?:png|gif|jpeg|webp)\/i';\\n    public const REGEX_NON_SPACE          = '\/[^ \\\\t\\\\f\\\\v\\\\r\\\\n]\/';\\n\\n    public const REGEX_WHITESPACE_CHAR         = '\/^[ \\\\t\\\\n\\\\x0b\\\\x0c\\\\x0d]\/';\\n    public const REGEX_UNICODE_WHITESPACE_CHAR = '\/^\\\\pZ|\\\\s\/u';\\n    public const REGEX_THEMATIC_BREAK          = '\/^(?:\\\\*[ \\\\t]*){3,}$|^(?:_[ \\\\t]*){3,}$|^(?:-[ \\\\t]*){3,}$\/';\\n    public const REGEX_LINK_DESTINATION_BRACES = '\/^(?:<(?:[^<>\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\x00]|\\\\\\\\\\\\\\\\.)*>)\/';\\n\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    public static function isEscapable(string $character): bool\\n    {\\n        return \\\\preg_match('\/' . self::PARTIAL_ESCAPABLE . '\/', $character) === 1;\\n    }\\n\\n    public static function isWhitespace(string $character): bool\\n    {\\n        \/** @psalm-suppress InvalidLiteralArgument *\/\\n        return $character !== '' && \\\\strpos(\\\" \\\\t\\\\n\\\\x0b\\\\x0c\\\\x0d\\\", $character) !== false;\\n    }\\n\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    public static function isLetter(?string $character): bool\\n    {\\n        if ($character === null) {\\n            return false;\\n        }\\n\\n        return \\\\preg_match('\/[\\\\pL]\/u', $character) === 1;\\n    }\\n\\n    \/**\\n     * Attempt to match a regex in string s at offset offset\\n     *\\n     * @psalm-param non-empty-string $regex\\n     *\\n     * @return int|null Index of match, or null\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function matchAt(string $regex, string $string, int $offset = 0): ?int\\n    {\\n        $matches = [];\\n        $string  = \\\\mb_substr($string, $offset, null, 'UTF-8');\\n        if (! \\\\preg_match($regex, $string, $matches, \\\\PREG_OFFSET_CAPTURE)) {\\n            return null;\\n        }\\n\\n        \/\/ PREG_OFFSET_CAPTURE always returns the byte offset, not the char offset, which is annoying\\n        $charPos = \\\\mb_strlen(\\\\mb_strcut($string, 0, $matches[0][1], 'UTF-8'), 'UTF-8');\\n\\n        return $offset + $charPos;\\n    }\\n\\n    \/**\\n     * Functional wrapper around preg_match_all which only returns the first set of matches\\n     *\\n     * @psalm-param non-empty-string $pattern\\n     *\\n     * @return string[]|null\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function matchFirst(string $pattern, string $subject, int $offset = 0): ?array\\n    {\\n        if ($offset !== 0) {\\n            $subject = \\\\substr($subject, $offset);\\n        }\\n\\n        \\\\preg_match_all($pattern, $subject, $matches, \\\\PREG_SET_ORDER);\\n\\n        if ($matches === []) {\\n            return null;\\n        }\\n\\n        return $matches[0] ?: null;\\n    }\\n\\n    \/**\\n     * Replace backslash escapes with literal characters\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function unescape(string $string): string\\n    {\\n        $allEscapedChar = '\/\\\\\\\\\\\\\\\\(' . self::PARTIAL_ESCAPABLE . ')\/';\\n\\n        $escaped = \\\\preg_replace($allEscapedChar, '$1', $string);\\n        \\\\assert(\\\\is_string($escaped));\\n\\n        return \\\\preg_replace_callback('\/' . self::PARTIAL_ENTITY . '\/i', static fn ($e) => Html5EntityDecoder::decode($e[0]), $escaped);\\n    }\\n\\n    \/**\\n     * @internal\\n     *\\n     * @param int $type HTML block type\\n     *\\n     * @psalm-param HtmlBlock::TYPE_* $type\\n     *\\n     * @phpstan-param HtmlBlock::TYPE_* $type\\n     *\\n     * @psalm-return non-empty-string\\n     *\\n     * @throws InvalidArgumentException if an invalid type is given\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function getHtmlBlockOpenRegex(int $type): string\\n    {\\n        switch ($type) {\\n            case HtmlBlock::TYPE_1_CODE_CONTAINER:\\n                return '\/^<(?:script|pre|textarea|style)(?:\\\\s|>|$)\/i';\\n            case HtmlBlock::TYPE_2_COMMENT:\\n                return '\/^<!--\/';\\n            case HtmlBlock::TYPE_3:\\n                return '\/^<[?]\/';\\n            case HtmlBlock::TYPE_4:\\n                return '\/^<![A-Z]\/i';\\n            case HtmlBlock::TYPE_5_CDATA:\\n                return '\/^<!\\\\[CDATA\\\\[\/i';\\n            case HtmlBlock::TYPE_6_BLOCK_ELEMENT:\\n                return '%^<[\/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\\\s|[\/]?[>]|$)%i';\\n            case HtmlBlock::TYPE_7_MISC_ELEMENT:\\n                return '\/^(?:' . self::PARTIAL_OPENTAG . '|' . self::PARTIAL_CLOSETAG . ')\\\\\\\\s*$\/i';\\n            default:\\n                throw new InvalidArgumentException('Invalid HTML block type');\\n        }\\n    }\\n\\n    \/**\\n     * @internal\\n     *\\n     * @param int $type HTML block type\\n     *\\n     * @psalm-param HtmlBlock::TYPE_* $type\\n     *\\n     * @phpstan-param HtmlBlock::TYPE_* $type\\n     *\\n     * @psalm-return non-empty-string\\n     *\\n     * @throws InvalidArgumentException if an invalid type is given\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function getHtmlBlockCloseRegex(int $type): string\\n    {\\n        switch ($type) {\\n            case HtmlBlock::TYPE_1_CODE_CONTAINER:\\n                return '%<\\\\\/(?:script|pre|textarea|style)>%i';\\n            case HtmlBlock::TYPE_2_COMMENT:\\n                return '\/-->\/';\\n            case HtmlBlock::TYPE_3:\\n                return '\/\\\\?>\/';\\n            case HtmlBlock::TYPE_4:\\n                return '\/>\/';\\n            case HtmlBlock::TYPE_5_CDATA:\\n                return '\/\\\\]\\\\]>\/';\\n            default:\\n                throw new InvalidArgumentException('Invalid HTML block type');\\n        }\\n    }\\n\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    public static function isLinkPotentiallyUnsafe(string $url): bool\\n    {\\n        return \\\\preg_match(self::REGEX_UNSAFE_PROTOCOL, $url) !== 0 && \\\\preg_match(self::REGEX_SAFE_DATA_PROTOCOL, $url) === 0;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/Xml.php\",\"ext\":\"php\",\"size\":738,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\n\/**\\n * Utility class for handling\/generating XML and HTML\\n *\\n * @psalm-immutable\\n *\/\\nfinal class Xml\\n{\\n    \/**\\n     * @psalm-pure\\n     *\/\\n    public static function escape(string $string): string\\n    {\\n        return \\\\str_replace(['&', '<', '>', '\\\"'], ['&amp;', '&lt;', '&gt;', '&quot;'], $string);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Util\/LinkParserHelper.php\",\"ext\":\"php\",\"size\":4942,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Util;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\n\\n\/**\\n * @psalm-immutable\\n *\/\\nfinal class LinkParserHelper\\n{\\n    \/**\\n     * Attempt to parse link destination\\n     *\\n     * @return string|null The string, or null if no match\\n     *\/\\n    public static function parseLinkDestination(Cursor $cursor): ?string\\n    {\\n        if ($cursor->getCurrentCharacter() === '<') {\\n            return self::parseDestinationBraces($cursor);\\n        }\\n\\n        $destination = self::manuallyParseLinkDestination($cursor);\\n        if ($destination === null) {\\n            return null;\\n        }\\n\\n        return UrlEncoder::unescapeAndEncode(\\n            RegexHelper::unescape($destination)\\n        );\\n    }\\n\\n    public static function parseLinkLabel(Cursor $cursor): int\\n    {\\n        $match = $cursor->match('\/^\\\\[(?:[^\\\\\\\\\\\\\\\\\\\\[\\\\]]|\\\\\\\\\\\\\\\\.){0,1000}\\\\]\/');\\n        if ($match === null) {\\n            return 0;\\n        }\\n\\n        $length = \\\\mb_strlen($match, 'UTF-8');\\n\\n        if ($length > 1001) {\\n            return 0;\\n        }\\n\\n        return $length;\\n    }\\n\\n    public static function parsePartialLinkLabel(Cursor $cursor): ?string\\n    {\\n        return $cursor->match('\/^(?:[^\\\\\\\\\\\\\\\\\\\\[\\\\]]++|\\\\\\\\\\\\\\\\.?)*+\/');\\n    }\\n\\n    \/**\\n     * Attempt to parse link title (sans quotes)\\n     *\\n     * @return string|null The string, or null if no match\\n     *\/\\n    public static function parseLinkTitle(Cursor $cursor): ?string\\n    {\\n        if ($title = $cursor->match('\/' . RegexHelper::PARTIAL_LINK_TITLE . '\/')) {\\n            \/\/ Chop off quotes from title and unescape\\n            return RegexHelper::unescape(\\\\substr($title, 1, -1));\\n        }\\n\\n        return null;\\n    }\\n\\n    public static function parsePartialLinkTitle(Cursor $cursor, string $endDelimiter): ?string\\n    {\\n        $endDelimiter = \\\\preg_quote($endDelimiter, '\/');\\n        $regex        = \\\\sprintf('\/(%s|[^%s\\\\x00])*(?:%s)?\/', RegexHelper::PARTIAL_ESCAPED_CHAR, $endDelimiter, $endDelimiter);\\n        if (($partialTitle = $cursor->match($regex)) === null) {\\n            return null;\\n        }\\n\\n        return RegexHelper::unescape($partialTitle);\\n    }\\n\\n    private static function manuallyParseLinkDestination(Cursor $cursor): ?string\\n    {\\n        $remainder  = $cursor->getRemainder();\\n        $openParens = 0;\\n        $len        = \\\\strlen($remainder);\\n        for ($i = 0; $i < $len; $i++) {\\n            $c = $remainder[$i];\\n            if ($c === '\\\\\\\\' && $i + 1 < $len && RegexHelper::isEscapable($remainder[$i + 1])) {\\n                $i++;\\n            } elseif ($c === '(') {\\n                $openParens++;\\n                \/\/ Limit to 32 nested parens for pathological cases\\n                if ($openParens > 32) {\\n                    return null;\\n                }\\n            } elseif ($c === ')') {\\n                if ($openParens < 1) {\\n                    break;\\n                }\\n\\n                $openParens--;\\n            } elseif (\\\\ord($c) <= 32 && RegexHelper::isWhitespace($c)) {\\n                break;\\n            }\\n        }\\n\\n        if ($openParens !== 0) {\\n            return null;\\n        }\\n\\n        if ($i === 0 && (! isset($c) || $c !== ')')) {\\n            return null;\\n        }\\n\\n        $destination = \\\\substr($remainder, 0, $i);\\n        $cursor->advanceBy(\\\\mb_strlen($destination, 'UTF-8'));\\n\\n        return $destination;\\n    }\\n\\n    \/** @var \\\\WeakReference<Cursor>|null *\/\\n    private static ?\\\\WeakReference $lastCursor       = null;\\n    private static bool $lastCursorLacksClosingBrace = false;\\n\\n    private static function parseDestinationBraces(Cursor $cursor): ?string\\n    {\\n        \/\/ Optimization: If we've previously parsed this cursor and returned `null`, we know\\n        \/\/ that no closing brace exists, so we can skip the regex entirely. This helps avoid\\n        \/\/ certain pathological cases where the regex engine can take a very long time to\\n        \/\/ determine that no match exists.\\n        if (self::$lastCursor !== null && self::$lastCursor->get() === $cursor) {\\n            if (self::$lastCursorLacksClosingBrace) {\\n                return null;\\n            }\\n        } else {\\n            self::$lastCursor = \\\\WeakReference::create($cursor);\\n        }\\n\\n        if ($res = $cursor->match(RegexHelper::REGEX_LINK_DESTINATION_BRACES)) {\\n            self::$lastCursorLacksClosingBrace = false;\\n\\n            \/\/ Chop off surrounding <..>:\\n            return UrlEncoder::unescapeAndEncode(\\n                RegexHelper::unescape(\\\\substr($res, 1, -1))\\n            );\\n        }\\n\\n        self::$lastCursorLacksClosingBrace = true;\\n\\n        return null;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/ReferenceMapInterface.php\",\"ext\":\"php\",\"size\":787,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\n\/**\\n * A collection of references\\n *\\n * @phpstan-extends \\\\IteratorAggregate<ReferenceInterface>\\n *\/\\ninterface ReferenceMapInterface extends \\\\IteratorAggregate, \\\\Countable\\n{\\n    public function add(ReferenceInterface $reference): void;\\n\\n    public function contains(string $label): bool;\\n\\n    public function get(string $label): ?ReferenceInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/ReferenceableInterface.php\",\"ext\":\"php\",\"size\":405,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\ndeclare(strict_types=1);\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\ninterface ReferenceableInterface\\n{\\n    public function getReference(): ReferenceInterface;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/ReferenceParser.php\",\"ext\":\"php\",\"size\":9238,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\nuse League\\\\CommonMark\\\\Parser\\\\Cursor;\\nuse League\\\\CommonMark\\\\Util\\\\LinkParserHelper;\\n\\nfinal class ReferenceParser\\n{\\n    \/\/ Looking for the start of a definition, i.e. `[`\\n    private const START_DEFINITION = 0;\\n    \/\/ Looking for and parsing the label, i.e. `[foo]` within `[foo]`\\n    private const LABEL = 1;\\n    \/\/ Parsing the destination, i.e. `\/url` in `[foo]: \/url`\\n    private const DESTINATION = 2;\\n    \/\/ Looking for the start of a title, i.e. the first `\\\"` in `[foo]: \/url \\\"title\\\"`\\n    private const START_TITLE = 3;\\n    \/\/ Parsing the content of the title, i.e. `title` in `[foo]: \/url \\\"title\\\"`\\n    private const TITLE = 4;\\n    \/\/ End state, no matter what kind of lines we add, they won't be references\\n    private const PARAGRAPH = 5;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private string $paragraph = '';\\n\\n    \/**\\n     * @var array<int, ReferenceInterface>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $references = [];\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private int $state = self::START_DEFINITION;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?string $label = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?string $destination = null;\\n\\n    \/**\\n     * @var string string\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private string $title = '';\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private ?string $titleDelimiter = null;\\n\\n    \/** @psalm-readonly-allow-private-mutation *\/\\n    private bool $referenceValid = false;\\n\\n    public function getParagraphContent(): string\\n    {\\n        return $this->paragraph;\\n    }\\n\\n    \/**\\n     * @return ReferenceInterface[]\\n     *\/\\n    public function getReferences(): iterable\\n    {\\n        $this->finishReference();\\n\\n        return $this->references;\\n    }\\n\\n    public function hasReferences(): bool\\n    {\\n        return $this->references !== [];\\n    }\\n\\n    public function parse(string $line): void\\n    {\\n        if ($this->paragraph !== '') {\\n            $this->paragraph .= \\\"\\\\n\\\";\\n        }\\n\\n        $this->paragraph .= $line;\\n\\n        $cursor = new Cursor($line);\\n        while (! $cursor->isAtEnd()) {\\n            $result = false;\\n            switch ($this->state) {\\n                case self::PARAGRAPH:\\n                    \/\/ We're in a paragraph now. Link reference definitions can only appear at the beginning, so once\\n                    \/\/ we're in a paragraph, there's no going back.\\n                    return;\\n                case self::START_DEFINITION:\\n                    $result = $this->parseStartDefinition($cursor);\\n                    break;\\n                case self::LABEL:\\n                    $result = $this->parseLabel($cursor);\\n                    break;\\n                case self::DESTINATION:\\n                    $result = $this->parseDestination($cursor);\\n                    break;\\n                case self::START_TITLE:\\n                    $result = $this->parseStartTitle($cursor);\\n                    break;\\n                case self::TITLE:\\n                    $result = $this->parseTitle($cursor);\\n                    break;\\n                default:\\n                    \/\/ this should never happen\\n                    break;\\n            }\\n\\n            if (! $result) {\\n                $this->state = self::PARAGRAPH;\\n\\n                return;\\n            }\\n        }\\n    }\\n\\n    private function parseStartDefinition(Cursor $cursor): bool\\n    {\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        if ($cursor->isAtEnd() || $cursor->getCurrentCharacter() !== '[') {\\n            return false;\\n        }\\n\\n        $this->state = self::LABEL;\\n        $this->label = '';\\n\\n        $cursor->advance();\\n        if ($cursor->isAtEnd()) {\\n            $this->label .= \\\"\\\\n\\\";\\n        }\\n\\n        return true;\\n    }\\n\\n    private function parseLabel(Cursor $cursor): bool\\n    {\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        $partialLabel = LinkParserHelper::parsePartialLinkLabel($cursor);\\n        if ($partialLabel === null) {\\n            return false;\\n        }\\n\\n        \\\\assert($this->label !== null);\\n        $this->label .= $partialLabel;\\n\\n        if ($cursor->isAtEnd()) {\\n            \/\/ label might continue on next line\\n            $this->label .= \\\"\\\\n\\\";\\n\\n            return true;\\n        }\\n\\n        if ($cursor->getCurrentCharacter() !== ']') {\\n            return false;\\n        }\\n\\n        $cursor->advance();\\n\\n        \/\/ end of label\\n        if ($cursor->getCurrentCharacter() !== ':') {\\n            return false;\\n        }\\n\\n        $cursor->advance();\\n\\n        \/\/ spec: A link label can have at most 999 characters inside the square brackets\\n        if (\\\\mb_strlen($this->label, 'UTF-8') > 999) {\\n            return false;\\n        }\\n\\n        \/\/ spec: A link label must contain at least one non-whitespace character\\n        if (\\\\trim($this->label) === '') {\\n            return false;\\n        }\\n\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        $this->state = self::DESTINATION;\\n\\n        return true;\\n    }\\n\\n    private function parseDestination(Cursor $cursor): bool\\n    {\\n        $cursor->advanceToNextNonSpaceOrTab();\\n\\n        $destination = LinkParserHelper::parseLinkDestination($cursor);\\n        if ($destination === null) {\\n            return false;\\n        }\\n\\n        $this->destination = $destination;\\n\\n        $advanced = $cursor->advanceToNextNonSpaceOrTab();\\n        if ($cursor->isAtEnd()) {\\n            \/\/ Destination was at end of line, so this is a valid reference for sure (and maybe a title).\\n            \/\/ If not at end of line, wait for title to be valid first.\\n            $this->referenceValid = true;\\n            $this->paragraph      = '';\\n        } elseif ($advanced === 0) {\\n            \/\/ spec: The title must be separated from the link destination by whitespace\\n            return false;\\n        }\\n\\n        $this->state = self::START_TITLE;\\n\\n        return true;\\n    }\\n\\n    private function parseStartTitle(Cursor $cursor): bool\\n    {\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        if ($cursor->isAtEnd()) {\\n            $this->state = self::START_DEFINITION;\\n\\n            return true;\\n        }\\n\\n        $this->titleDelimiter = null;\\n        switch ($c = $cursor->getCurrentCharacter()) {\\n            case '\\\"':\\n            case \\\"'\\\":\\n                $this->titleDelimiter = $c;\\n                break;\\n            case '(':\\n                $this->titleDelimiter = ')';\\n                break;\\n            default:\\n                \/\/ no title delimter found\\n                break;\\n        }\\n\\n        if ($this->titleDelimiter !== null) {\\n            $this->state = self::TITLE;\\n            $cursor->advance();\\n            if ($cursor->isAtEnd()) {\\n                $this->title .= \\\"\\\\n\\\";\\n            }\\n        } else {\\n            $this->finishReference();\\n            \/\/ There might be another reference instead, try that for the same character.\\n            $this->state = self::START_DEFINITION;\\n        }\\n\\n        return true;\\n    }\\n\\n    private function parseTitle(Cursor $cursor): bool\\n    {\\n        \\\\assert($this->titleDelimiter !== null);\\n        $title = LinkParserHelper::parsePartialLinkTitle($cursor, $this->titleDelimiter);\\n\\n        if ($title === null) {\\n            \/\/ Invalid title, stop\\n            return false;\\n        }\\n\\n        \/\/ Did we find the end delimiter?\\n        $endDelimiterFound = false;\\n        if (\\\\substr($title, -1) === $this->titleDelimiter) {\\n            $endDelimiterFound = true;\\n            \/\/ Chop it off\\n            $title = \\\\substr($title, 0, -1);\\n        }\\n\\n        $this->title .= $title;\\n\\n        if (! $endDelimiterFound && $cursor->isAtEnd()) {\\n            \/\/ Title still going, continue on next line\\n            $this->title .= \\\"\\\\n\\\";\\n\\n            return true;\\n        }\\n\\n        \/\/ We either hit the end delimiter or some extra whitespace\\n        $cursor->advanceToNextNonSpaceOrTab();\\n        if (! $cursor->isAtEnd()) {\\n            \/\/ spec: No further non-whitespace characters may occur on the line.\\n            return false;\\n        }\\n\\n        $this->referenceValid = true;\\n        $this->finishReference();\\n        $this->paragraph = '';\\n\\n        \/\/ See if there's another definition\\n        $this->state = self::START_DEFINITION;\\n\\n        return true;\\n    }\\n\\n    private function finishReference(): void\\n    {\\n        if (! $this->referenceValid) {\\n            return;\\n        }\\n\\n        \/** @psalm-suppress PossiblyNullArgument -- these can't possibly be null if we're in this state *\/\\n        $this->references[] = new Reference($this->label, $this->destination, $this->title);\\n\\n        $this->label          = null;\\n        $this->referenceValid = false;\\n        $this->destination    = null;\\n        $this->title          = '';\\n        $this->titleDelimiter = null;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/MemoryLimitedReferenceMap.php\",\"ext\":\"php\",\"size\":1633,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\nfinal class MemoryLimitedReferenceMap implements ReferenceMapInterface\\n{\\n    private ReferenceMapInterface $decorated;\\n\\n    private const MINIMUM_SIZE = 100_000;\\n\\n    private int $remaining;\\n\\n    public function __construct(ReferenceMapInterface $decorated, int $maxSize)\\n    {\\n        $this->decorated = $decorated;\\n        $this->remaining = \\\\max(self::MINIMUM_SIZE, $maxSize);\\n    }\\n\\n    public function add(ReferenceInterface $reference): void\\n    {\\n        $this->decorated->add($reference);\\n    }\\n\\n    public function contains(string $label): bool\\n    {\\n        return $this->decorated->contains($label);\\n    }\\n\\n    public function get(string $label): ?ReferenceInterface\\n    {\\n        $reference = $this->decorated->get($label);\\n        if ($reference === null) {\\n            return null;\\n        }\\n\\n        \/\/ Check for expansion limit\\n        $this->remaining -= \\\\strlen($reference->getDestination()) + \\\\strlen($reference->getTitle());\\n        if ($this->remaining < 0) {\\n            return null;\\n        }\\n\\n        return $reference;\\n    }\\n\\n    \/**\\n     * @return \\\\Traversable<string, ReferenceInterface>\\n     *\/\\n    public function getIterator(): \\\\Traversable\\n    {\\n        return $this->decorated->getIterator();\\n    }\\n\\n    public function count(): int\\n    {\\n        return $this->decorated->count();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/ReferenceMap.php\",\"ext\":\"php\",\"size\":2022,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\nuse League\\\\CommonMark\\\\Normalizer\\\\TextNormalizer;\\n\\n\/**\\n * A collection of references, indexed by label\\n *\/\\nfinal class ReferenceMap implements ReferenceMapInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private TextNormalizer $normalizer;\\n\\n    \/**\\n     * @var array<string, ReferenceInterface>\\n     *\\n     * @psalm-readonly-allow-private-mutation\\n     *\/\\n    private array $references = [];\\n\\n    public function __construct()\\n    {\\n        $this->normalizer = new TextNormalizer();\\n    }\\n\\n    public function add(ReferenceInterface $reference): void\\n    {\\n        \/\/ Normalize the key\\n        $key = $this->normalizer->normalize($reference->getLabel());\\n        \/\/ Store the reference\\n        $this->references[$key] = $reference;\\n    }\\n\\n    public function contains(string $label): bool\\n    {\\n        if ($this->references === []) {\\n            return false;\\n        }\\n\\n        $label = $this->normalizer->normalize($label);\\n\\n        return isset($this->references[$label]);\\n    }\\n\\n    public function get(string $label): ?ReferenceInterface\\n    {\\n        if ($this->references === []) {\\n            return null;\\n        }\\n\\n        $label = $this->normalizer->normalize($label);\\n\\n        return $this->references[$label] ?? null;\\n    }\\n\\n    \/**\\n     * @return \\\\Traversable<string, ReferenceInterface>\\n     *\/\\n    public function getIterator(): \\\\Traversable\\n    {\\n        foreach ($this->references as $normalizedLabel => $reference) {\\n            yield $normalizedLabel => $reference;\\n        }\\n    }\\n\\n    public function count(): int\\n    {\\n        return \\\\count($this->references);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/ReferenceInterface.php\",\"ext\":\"php\",\"size\":623,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\n\/**\\n * Link reference\\n *\/\\ninterface ReferenceInterface\\n{\\n    public function getLabel(): string;\\n\\n    public function getDestination(): string;\\n\\n    public function getTitle(): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/league\/commonmark\/src\/Reference\/Reference.php\",\"ext\":\"php\",\"size\":1158,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of the league\/commonmark package.\\n *\\n * (c) Colin O'Dell <colinodell@gmail.com>\\n *\\n * Original code based on the CommonMark JS reference parser (https:\/\/bitly.com\/commonmark-js)\\n *  - (c) John MacFarlane\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace League\\\\CommonMark\\\\Reference;\\n\\n\/**\\n * @psalm-immutable\\n *\/\\nfinal class Reference implements ReferenceInterface\\n{\\n    \/** @psalm-readonly *\/\\n    private string $label;\\n\\n    \/** @psalm-readonly *\/\\n    private string $destination;\\n\\n    \/** @psalm-readonly *\/\\n    private string $title;\\n\\n    public function __construct(string $label, string $destination, string $title)\\n    {\\n        $this->label       = $label;\\n        $this->destination = $destination;\\n        $this->title       = $title;\\n    }\\n\\n    public function getLabel(): string\\n    {\\n        return $this->label;\\n    }\\n\\n    public function getDestination(): string\\n    {\\n        return $this->destination;\\n    }\\n\\n    public function getTitle(): string\\n    {\\n        return $this->title;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/jetpack_autoload_psr4.php\",\"ext\":\"php\",\"size\":5768,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ This file `jetpack_autoload_psr4.php` was auto generated by automattic\/jetpack-autoloader.\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir   = dirname($vendorDir);\\n\\nreturn array(\\n\\t'voku\\\\\\\\' => array(\\n\\t\\t'version' => '2.0.3.0',\\n\\t\\t'path'    => array( $vendorDir . '\/voku\/portable-ascii\/src\/voku' )\\n\\t),\\n\\t'Symfony\\\\\\\\Polyfill\\\\\\\\Php83\\\\\\\\' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/polyfill-php83' )\\n\\t),\\n\\t'Symfony\\\\\\\\Polyfill\\\\\\\\Php80\\\\\\\\' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/polyfill-php80' )\\n\\t),\\n\\t'Symfony\\\\\\\\Polyfill\\\\\\\\Mbstring\\\\\\\\' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/polyfill-mbstring' )\\n\\t),\\n\\t'Symfony\\\\\\\\Polyfill\\\\\\\\Ctype\\\\\\\\' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/polyfill-ctype' )\\n\\t),\\n\\t'Symfony\\\\\\\\Contracts\\\\\\\\Translation\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-main',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/translation-contracts' )\\n\\t),\\n\\t'Symfony\\\\\\\\Component\\\\\\\\VarDumper\\\\\\\\' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/var-dumper' )\\n\\t),\\n\\t'Symfony\\\\\\\\Component\\\\\\\\Translation\\\\\\\\' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/translation' )\\n\\t),\\n\\t'Symfony\\\\\\\\Component\\\\\\\\Finder\\\\\\\\' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/finder' )\\n\\t),\\n\\t'Symfony\\\\\\\\Component\\\\\\\\DomCrawler\\\\\\\\' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/dom-crawler' )\\n\\t),\\n\\t'Symfony\\\\\\\\Component\\\\\\\\Clock\\\\\\\\' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/symfony\/clock' )\\n\\t),\\n\\t'Ramsey\\\\\\\\Uuid\\\\\\\\' => array(\\n\\t\\t'version' => '4.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/ramsey\/uuid\/src' )\\n\\t),\\n\\t'Ramsey\\\\\\\\Collection\\\\\\\\' => array(\\n\\t\\t'version' => '2.1.1.0',\\n\\t\\t'path'    => array( $vendorDir . '\/ramsey\/collection\/src' )\\n\\t),\\n\\t'Psr\\\\\\\\Log\\\\\\\\' => array(\\n\\t\\t'version' => '2.0.0.0',\\n\\t\\t'path'    => array( $vendorDir . '\/psr\/log\/src' )\\n\\t),\\n\\t'Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\' => array(\\n\\t\\t'version' => '1.1.0.0',\\n\\t\\t'path'    => array( $vendorDir . '\/psr\/http-message\/src', $vendorDir . '\/psr\/http-factory\/src' )\\n\\t),\\n\\t'Psr\\\\\\\\EventDispatcher\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => array( $vendorDir . '\/psr\/event-dispatcher\/src' )\\n\\t),\\n\\t'Psr\\\\\\\\Container\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => array( $vendorDir . '\/psr\/container\/src' )\\n\\t),\\n\\t'Psr\\\\\\\\Clock\\\\\\\\' => array(\\n\\t\\t'version' => '1.0.0.0',\\n\\t\\t'path'    => array( $vendorDir . '\/psr\/clock\/src' )\\n\\t),\\n\\t'PhpOption\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => array( $vendorDir . '\/phpoption\/phpoption\/src\/PhpOption' )\\n\\t),\\n\\t'Nette\\\\\\\\' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/nette\/utils\/src', $vendorDir . '\/nette\/schema\/src' )\\n\\t),\\n\\t'Monolog\\\\\\\\' => array(\\n\\t\\t'version' => '2.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/monolog\/monolog\/src\/Monolog' )\\n\\t),\\n\\t'Masterminds\\\\\\\\' => array(\\n\\t\\t'version' => '2.10.0.0',\\n\\t\\t'path'    => array( $vendorDir . '\/masterminds\/html5\/src' )\\n\\t),\\n\\t'League\\\\\\\\Uri\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => array( $vendorDir . '\/league\/uri-interfaces', $vendorDir . '\/league\/uri' )\\n\\t),\\n\\t'League\\\\\\\\Config\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-main',\\n\\t\\t'path'    => array( $vendorDir . '\/league\/config\/src' )\\n\\t),\\n\\t'League\\\\\\\\CommonMark\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-main',\\n\\t\\t'path'    => array( $vendorDir . '\/league\/commonmark\/src' )\\n\\t),\\n\\t'Hostinger\\\\\\\\WpMenuManager\\\\\\\\' => array(\\n\\t\\t'version' => '1.2.19.0',\\n\\t\\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-menu-manager\/src' )\\n\\t),\\n\\t'Hostinger\\\\\\\\WpHelper\\\\\\\\' => array(\\n\\t\\t'version' => '1.0.12.0',\\n\\t\\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-helper\/src' )\\n\\t),\\n\\t'Hostinger\\\\\\\\Tests\\\\\\\\' => array(\\n\\t\\t'version' => '1.0.12.0',\\n\\t\\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-helper\/tests\/phpunit' )\\n\\t),\\n\\t'Hostinger\\\\\\\\Surveys\\\\\\\\' => array(\\n\\t\\t'version' => '1.1.15.0',\\n\\t\\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-surveys\/src' )\\n\\t),\\n\\t'Hostinger\\\\\\\\Amplitude\\\\\\\\' => array(\\n\\t\\t'version' => '1.0.15.0',\\n\\t\\t'path'    => array( $vendorDir . '\/hostinger\/hostinger-wp-amplitude\/src' )\\n\\t),\\n\\t'Hostinger\\\\\\\\AiAssistant\\\\\\\\Tests\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-main',\\n\\t\\t'path'    => array( $baseDir . '\/tests\/phpunit' )\\n\\t),\\n\\t'GrahamCampbell\\\\\\\\ResultType\\\\\\\\' => array(\\n\\t\\t'version' => '1.1.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/graham-campbell\/result-type\/src' )\\n\\t),\\n\\t'Dotenv\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => array( $vendorDir . '\/vlucas\/phpdotenv\/src' )\\n\\t),\\n\\t'Doctrine\\\\\\\\Inflector\\\\\\\\' => array(\\n\\t\\t'version' => '2.2.9999999.9999999-dev',\\n\\t\\t'path'    => array( $vendorDir . '\/doctrine\/inflector\/src' )\\n\\t),\\n\\t'Dflydev\\\\\\\\DotAccessData\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-main',\\n\\t\\t'path'    => array( $vendorDir . '\/dflydev\/dot-access-data\/src' )\\n\\t),\\n\\t'ComposerWordPressAutoloader\\\\\\\\' => array(\\n\\t\\t'version' => '1.2.0.0',\\n\\t\\t'path'    => array( $vendorDir . '\/alleyinteractive\/composer-wordpress-autoloader\/src' )\\n\\t),\\n\\t'Carbon\\\\\\\\Doctrine\\\\\\\\' => array(\\n\\t\\t'version' => '3.2.0.0',\\n\\t\\t'path'    => array( $vendorDir . '\/carbonphp\/carbon-doctrine-types\/src\/Carbon\/Doctrine' )\\n\\t),\\n\\t'Carbon\\\\\\\\' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => array( $vendorDir . '\/nesbot\/carbon\/src\/Carbon' )\\n\\t),\\n\\t'Brick\\\\\\\\Math\\\\\\\\' => array(\\n\\t\\t'version' => '0.13.1.0',\\n\\t\\t'path'    => array( $vendorDir . '\/brick\/math\/src' )\\n\\t),\\n\\t'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\' => array(\\n\\t\\t'version' => '5.0.9',\\n\\t\\t'path'    => array( $vendorDir . '\/automattic\/jetpack-autoloader\/src' )\\n\\t),\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/installed.json\",\"ext\":\"json\",\"size\":129349,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"{\\n    \\\"packages\\\": [\\n        {\\n            \\\"name\\\": \\\"alleyinteractive\/composer-wordpress-autoloader\\\",\\n            \\\"version\\\": \\\"v1.2.0\\\",\\n            \\\"version_normalized\\\": \\\"1.2.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/alleyinteractive\/composer-wordpress-autoloader.git\\\",\\n                \\\"reference\\\": \\\"a3a401b3d755d08f7689d0c5f1566809ea469f90\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/alleyinteractive\/composer-wordpress-autoloader\/zipball\/a3a401b3d755d08f7689d0c5f1566809ea469f90\\\",\\n                \\\"reference\\\": \\\"a3a401b3d755d08f7689d0c5f1566809ea469f90\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"alleyinteractive\/wordpress-autoloader\\\": \\\"^1.1.1\\\",\\n                \\\"composer-plugin-api\\\": \\\"^2.0\\\",\\n                \\\"php\\\": \\\"^8.1\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"composer\/composer\\\": \\\"^2.0\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^10.5.45\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^4.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-04-18T18:01:52+00:00\\\",\\n            \\\"type\\\": \\\"composer-plugin\\\",\\n            \\\"extra\\\": {\\n                \\\"class\\\": \\\"ComposerWordPressAutoloader\\\\\\\\Plugin\\\"\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"src\/autoload.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"ComposerWordPressAutoloader\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"GPL-2.0-or-later\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Alley Interactive\\\",\\n                    \\\"email\\\": \\\"info@alley.co\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Sean Fisher\\\",\\n                    \\\"email\\\": \\\"sean@alley.co\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Autoload files using WordPress File Conventions using Composer\\\",\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/alleyinteractive\/composer-wordpress-autoloader\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/alleyinteractive\/composer-wordpress-autoloader\/tree\/v1.2.0\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/alleyinteractive\/composer-wordpress-autoloader\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"alleyinteractive\/wordpress-autoloader\\\",\\n            \\\"version\\\": \\\"v1.2.1\\\",\\n            \\\"version_normalized\\\": \\\"1.2.1.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/alleyinteractive\/wordpress-autoloader.git\\\",\\n                \\\"reference\\\": \\\"570a0e911f806448d2709864729a53731c49fcd9\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/alleyinteractive\/wordpress-autoloader\/zipball\/570a0e911f806448d2709864729a53731c49fcd9\\\",\\n                \\\"reference\\\": \\\"570a0e911f806448d2709864729a53731c49fcd9\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^8.1\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"^10.5.45\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^4.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-04-21T17:28:11+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"src\/class-autoloader.php\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"GPL-2.0-or-later\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Alley Interactive\\\",\\n                    \\\"email\\\": \\\"info@alley.co\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Autoload files using WordPress File Conventions\\\",\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/alleyinteractive\/wordpress-autoloader\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/alleyinteractive\/wordpress-autoloader\/tree\/v1.2.1\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/alleyinteractive\/wordpress-autoloader\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"alleyinteractive\/wp-block-converter\\\",\\n            \\\"version\\\": \\\"v1.6.0\\\",\\n            \\\"version_normalized\\\": \\\"1.6.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/alleyinteractive\/wp-block-converter.git\\\",\\n                \\\"reference\\\": \\\"6d7c381545c93ca5d6398fa48cebac94d9aa337b\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/alleyinteractive\/wp-block-converter\/zipball\/6d7c381545c93ca5d6398fa48cebac94d9aa337b\\\",\\n                \\\"reference\\\": \\\"6d7c381545c93ca5d6398fa48cebac94d9aa337b\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"alleyinteractive\/composer-wordpress-autoloader\\\": \\\"^1.0\\\",\\n                \\\"mantle-framework\/support\\\": \\\"^1.6\\\",\\n                \\\"php\\\": \\\"^8.2\\\",\\n                \\\"psr\/log\\\": \\\"^2.0 || ^3.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"alleyinteractive\/alley-coding-standards\\\": \\\"^2.0\\\",\\n                \\\"mantle-framework\/testkit\\\": \\\"^1.0\\\",\\n                \\\"szepeviktor\/phpstan-wordpress\\\": \\\"^2.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-04-21T22:56:25+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"wordpress-autoloader\\\": {\\n                    \\\"autoload\\\": {\\n                        \\\"Alley\\\\\\\\WP\\\\\\\\Block_Converter\\\\\\\\\\\": \\\"src\\\"\\n                    },\\n                    \\\"autoload-dev\\\": {\\n                        \\\"Alley\\\\\\\\WP\\\\\\\\Block_Converter\\\\\\\\Tests\\\\\\\\\\\": \\\"tests\\\"\\n                    }\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"src\/helpers.php\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"GPL-2.0-or-later\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Alley Interactive\\\",\\n                    \\\"email\\\": \\\"info@alley.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Convert HTML into Gutenberg Blocks with PHP\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/alleyinteractive\/wp-block-converter\\\",\\n            \\\"keywords\\\": [\\n                \\\"alleyinteractive\\\",\\n                \\\"wp-block-converter\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/alleyinteractive\/wp-block-converter\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/alleyinteractive\/wp-block-converter\/tree\/v1.6.0\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/alleyinteractive\/wp-block-converter\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"automattic\/jetpack-autoloader\\\",\\n            \\\"version\\\": \\\"dev-trunk\\\",\\n            \\\"version_normalized\\\": \\\"dev-trunk\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/Automattic\/jetpack-autoloader.git\\\",\\n                \\\"reference\\\": \\\"272f0a1e119175623b440699e7af79de2a6ed44b\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/Automattic\/jetpack-autoloader\/zipball\/272f0a1e119175623b440699e7af79de2a6ed44b\\\",\\n                \\\"reference\\\": \\\"272f0a1e119175623b440699e7af79de2a6ed44b\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"composer-plugin-api\\\": \\\"^2.2\\\",\\n                \\\"php\\\": \\\">=7.2\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"automattic\/jetpack-changelogger\\\": \\\"^6.0.6\\\",\\n                \\\"automattic\/phpunit-select-config\\\": \\\"^1.0.3\\\",\\n                \\\"composer\/composer\\\": \\\"^2.2\\\",\\n                \\\"yoast\/phpunit-polyfills\\\": \\\"^4.0.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-13T03:21:08+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"composer-plugin\\\",\\n            \\\"extra\\\": {\\n                \\\"class\\\": \\\"Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\CustomAutoloaderPlugin\\\",\\n                \\\"autotagger\\\": true,\\n                \\\"mirror-repo\\\": \\\"Automattic\/jetpack-autoloader\\\",\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-trunk\\\": \\\"5.0.x-dev\\\"\\n                },\\n                \\\"changelogger\\\": {\\n                    \\\"link-template\\\": \\\"https:\/\/github.com\/Automattic\/jetpack-autoloader\/compare\/v${old}...v${new}\\\"\\n                },\\n                \\\"version-constants\\\": {\\n                    \\\"::VERSION\\\": \\\"src\/AutoloadGenerator.php\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\\\\": \\\"src\\\"\\n                },\\n                \\\"classmap\\\": [\\n                    \\\"src\/AutoloadGenerator.php\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"GPL-2.0-or-later\\\"\\n            ],\\n            \\\"description\\\": \\\"Creates a custom autoloader for a plugin or theme.\\\",\\n            \\\"keywords\\\": [\\n                \\\"autoload\\\",\\n                \\\"autoloader\\\",\\n                \\\"composer\\\",\\n                \\\"jetpack\\\",\\n                \\\"plugin\\\",\\n                \\\"wordpress\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/Automattic\/jetpack-autoloader\/tree\/trunk\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/automattic\/jetpack-autoloader\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"brick\/math\\\",\\n            \\\"version\\\": \\\"0.13.1\\\",\\n            \\\"version_normalized\\\": \\\"0.13.1.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/brick\/math.git\\\",\\n                \\\"reference\\\": \\\"fc7ed316430118cc7836bf45faff18d5dfc8de04\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/brick\/math\/zipball\/fc7ed316430118cc7836bf45faff18d5dfc8de04\\\",\\n                \\\"reference\\\": \\\"fc7ed316430118cc7836bf45faff18d5dfc8de04\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^8.1\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"php-coveralls\/php-coveralls\\\": \\\"^2.2\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^10.1\\\",\\n                \\\"vimeo\/psalm\\\": \\\"6.8.8\\\"\\n            },\\n            \\\"time\\\": \\\"2025-03-29T13:50:30+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Brick\\\\\\\\Math\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"description\\\": \\\"Arbitrary-precision arithmetic library\\\",\\n            \\\"keywords\\\": [\\n                \\\"Arbitrary-precision\\\",\\n                \\\"BigInteger\\\",\\n                \\\"BigRational\\\",\\n                \\\"arithmetic\\\",\\n                \\\"bigdecimal\\\",\\n                \\\"bignum\\\",\\n                \\\"bignumber\\\",\\n                \\\"brick\\\",\\n                \\\"decimal\\\",\\n                \\\"integer\\\",\\n                \\\"math\\\",\\n                \\\"mathematics\\\",\\n                \\\"rational\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/brick\/math\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/brick\/math\/tree\/0.13.1\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/BenMorel\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/brick\/math\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"carbonphp\/carbon-doctrine-types\\\",\\n            \\\"version\\\": \\\"3.2.0\\\",\\n            \\\"version_normalized\\\": \\\"3.2.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/CarbonPHP\/carbon-doctrine-types.git\\\",\\n                \\\"reference\\\": \\\"18ba5ddfec8976260ead6e866180bd5d2f71aa1d\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/CarbonPHP\/carbon-doctrine-types\/zipball\/18ba5ddfec8976260ead6e866180bd5d2f71aa1d\\\",\\n                \\\"reference\\\": \\\"18ba5ddfec8976260ead6e866180bd5d2f71aa1d\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^8.1\\\"\\n            },\\n            \\\"conflict\\\": {\\n                \\\"doctrine\/dbal\\\": \\\"<4.0.0 || >=5.0.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"doctrine\/dbal\\\": \\\"^4.0.0\\\",\\n                \\\"nesbot\/carbon\\\": \\\"^2.71.0 || ^3.0.0\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^10.3\\\"\\n            },\\n            \\\"time\\\": \\\"2024-02-09T16:56:22+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Carbon\\\\\\\\Doctrine\\\\\\\\\\\": \\\"src\/Carbon\/Doctrine\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"KyleKatarn\\\",\\n                    \\\"email\\\": \\\"kylekatarnls@gmail.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Types to use Carbon in Doctrine\\\",\\n            \\\"keywords\\\": [\\n                \\\"carbon\\\",\\n                \\\"date\\\",\\n                \\\"datetime\\\",\\n                \\\"doctrine\\\",\\n                \\\"time\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/CarbonPHP\/carbon-doctrine-types\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/CarbonPHP\/carbon-doctrine-types\/tree\/3.2.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/kylekatarnls\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/opencollective.com\/Carbon\\\",\\n                    \\\"type\\\": \\\"open_collective\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/nesbot\/carbon\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/carbonphp\/carbon-doctrine-types\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"dflydev\/dot-access-data\\\",\\n            \\\"version\\\": \\\"dev-main\\\",\\n            \\\"version_normalized\\\": \\\"dev-main\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/dflydev\/dflydev-dot-access-data.git\\\",\\n                \\\"reference\\\": \\\"a23a2bf4f31d3518f3ecb38660c95715dfead60f\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/dflydev\/dflydev-dot-access-data\/zipball\/a23a2bf4f31d3518f3ecb38660c95715dfead60f\\\",\\n                \\\"reference\\\": \\\"a23a2bf4f31d3518f3ecb38660c95715dfead60f\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^7.1 || ^8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpstan\/phpstan\\\": \\\"^0.12.42\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^7.5 || ^8.5 || ^9.3\\\",\\n                \\\"scrutinizer\/ocular\\\": \\\"1.6.0\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^3.5\\\",\\n                \\\"vimeo\/psalm\\\": \\\"^4.0.0\\\"\\n            },\\n            \\\"time\\\": \\\"2024-07-08T12:26:09+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-main\\\": \\\"3.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Dflydev\\\\\\\\DotAccessData\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Dragonfly Development Inc.\\\",\\n                    \\\"email\\\": \\\"info@dflydev.com\\\",\\n                    \\\"homepage\\\": \\\"http:\/\/dflydev.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Beau Simensen\\\",\\n                    \\\"email\\\": \\\"beau@dflydev.com\\\",\\n                    \\\"homepage\\\": \\\"http:\/\/beausimensen.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Carlos Frutos\\\",\\n                    \\\"email\\\": \\\"carlos@kiwing.it\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/cfrutos\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Colin O'Dell\\\",\\n                    \\\"email\\\": \\\"colinodell@gmail.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.colinodell.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Given a deep data structure, access data by dot notation.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/dflydev\/dflydev-dot-access-data\\\",\\n            \\\"keywords\\\": [\\n                \\\"access\\\",\\n                \\\"data\\\",\\n                \\\"dot\\\",\\n                \\\"notation\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/tree\/v3.0.3\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/dflydev\/dot-access-data\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"doctrine\/inflector\\\",\\n            \\\"version\\\": \\\"2.2.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"2.2.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/doctrine\/inflector.git\\\",\\n                \\\"reference\\\": \\\"6d6c96277ea252fc1304627204c3d5e6e15faa3b\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/doctrine\/inflector\/zipball\/6d6c96277ea252fc1304627204c3d5e6e15faa3b\\\",\\n                \\\"reference\\\": \\\"6d6c96277ea252fc1304627204c3d5e6e15faa3b\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^7.2 || ^8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"doctrine\/coding-standard\\\": \\\"^12.0 || ^13.0\\\",\\n                \\\"phpstan\/phpstan\\\": \\\"^1.12 || ^2.0\\\",\\n                \\\"phpstan\/phpstan-phpunit\\\": \\\"^1.4 || ^2.0\\\",\\n                \\\"phpstan\/phpstan-strict-rules\\\": \\\"^1.6 || ^2.0\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^8.5 || ^12.2\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-10T19:31:58+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Doctrine\\\\\\\\Inflector\\\\\\\\\\\": \\\"src\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Guilherme Blanco\\\",\\n                    \\\"email\\\": \\\"guilhermeblanco@gmail.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Roman Borschel\\\",\\n                    \\\"email\\\": \\\"roman@code-factory.org\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Benjamin Eberlei\\\",\\n                    \\\"email\\\": \\\"kontakt@beberlei.de\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Jonathan Wage\\\",\\n                    \\\"email\\\": \\\"jonwage@gmail.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Johannes Schmitt\\\",\\n                    \\\"email\\\": \\\"schmittjoh@gmail.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper\/lowercase and singular\/plural forms of words.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/www.doctrine-project.org\/projects\/inflector.html\\\",\\n            \\\"keywords\\\": [\\n                \\\"inflection\\\",\\n                \\\"inflector\\\",\\n                \\\"lowercase\\\",\\n                \\\"manipulation\\\",\\n                \\\"php\\\",\\n                \\\"plural\\\",\\n                \\\"singular\\\",\\n                \\\"strings\\\",\\n                \\\"uppercase\\\",\\n                \\\"words\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/doctrine\/inflector\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/doctrine\/inflector\/tree\/2.1.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.doctrine-project.org\/sponsorship.html\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.patreon.com\/phpdoctrine\\\",\\n                    \\\"type\\\": \\\"patreon\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/doctrine%2Finflector\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/doctrine\/inflector\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"graham-campbell\/result-type\\\",\\n            \\\"version\\\": \\\"1.1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.1.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/GrahamCampbell\/Result-Type.git\\\",\\n                \\\"reference\\\": \\\"bdd52c41913b414f4ca7dcb34482babcd0e9bd58\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/GrahamCampbell\/Result-Type\/zipball\/bdd52c41913b414f4ca7dcb34482babcd0e9bd58\\\",\\n                \\\"reference\\\": \\\"bdd52c41913b414f4ca7dcb34482babcd0e9bd58\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^7.2.5 || ^8.0\\\",\\n                \\\"phpoption\/phpoption\\\": \\\"^1.9.3\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"^8.5.41 || ^9.6.22 || ^10.5.45 || ^11.5.7\\\"\\n            },\\n            \\\"time\\\": \\\"2025-03-02T21:31:24+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"GrahamCampbell\\\\\\\\ResultType\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Graham Campbell\\\",\\n                    \\\"email\\\": \\\"hello@gjcampbell.co.uk\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/GrahamCampbell\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"An Implementation Of The Result Type\\\",\\n            \\\"keywords\\\": [\\n                \\\"Graham Campbell\\\",\\n                \\\"GrahamCampbell\\\",\\n                \\\"Result Type\\\",\\n                \\\"Result-Type\\\",\\n                \\\"result\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/GrahamCampbell\/Result-Type\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/GrahamCampbell\/Result-Type\/tree\/1.1\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/GrahamCampbell\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/graham-campbell\/result-type\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/graham-campbell\/result-type\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"hostinger\/hostinger-wp-amplitude\\\",\\n            \\\"version\\\": \\\"1.0.15\\\",\\n            \\\"version_normalized\\\": \\\"1.0.15.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"git@github.com:hostinger\/hostinger-wp-amplitude.git\\\",\\n                \\\"reference\\\": \\\"dab31906350046bba3798b6947ce1e82d9c6f236\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/hostinger\/hostinger-wp-amplitude\/zipball\/dab31906350046bba3798b6947ce1e82d9c6f236\\\",\\n                \\\"reference\\\": \\\"dab31906350046bba3798b6947ce1e82d9c6f236\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"hostinger\/hostinger-wp-helper\\\": \\\"^1.0\\\",\\n                \\\"php\\\": \\\">=8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"^9.6\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^3.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-06-10T06:31:47+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\Amplitude\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"autoload-dev\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\Amplitude\\\\\\\\Tests\\\\\\\\\\\": \\\"tests\/phpunit\\\"\\n                }\\n            },\\n            \\\"license\\\": [\\n                \\\"proprietary\\\"\\n            ],\\n            \\\"description\\\": \\\"A PHP package with amplitude events for WordPress plugins\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-amplitude\/tree\/1.0.15\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-amplitude\/issues\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/hostinger\/hostinger-wp-amplitude\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"hostinger\/hostinger-wp-helper\\\",\\n            \\\"version\\\": \\\"1.0.12\\\",\\n            \\\"version_normalized\\\": \\\"1.0.12.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"git@github.com:hostinger\/hostinger-wp-helper.git\\\",\\n                \\\"reference\\\": \\\"f943461ffdd9df60c84e4d808ff1dd967dfa790d\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/hostinger\/hostinger-wp-helper\/zipball\/f943461ffdd9df60c84e4d808ff1dd967dfa790d\\\",\\n                \\\"reference\\\": \\\"f943461ffdd9df60c84e4d808ff1dd967dfa790d\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-json\\\": \\\"*\\\",\\n                \\\"php\\\": \\\">=8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"^9.6\\\",\\n                \\\"yoast\/phpunit-polyfills\\\": \\\"^2.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-28T09:51:26+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\WpHelper\\\\\\\\\\\": \\\"src\/\\\",\\n                    \\\"Hostinger\\\\\\\\Tests\\\\\\\\\\\": \\\"tests\/phpunit\\\"\\n                }\\n            },\\n            \\\"description\\\": \\\"A PHP package with core functions for Hostinger WordPress plugins.\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-helper\/tree\/1.0.12\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-helper\/issues\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/hostinger\/hostinger-wp-helper\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"hostinger\/hostinger-wp-menu-manager\\\",\\n            \\\"version\\\": \\\"1.2.19\\\",\\n            \\\"version_normalized\\\": \\\"1.2.19.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"git@github.com:hostinger\/hostinger-wp-menu-manager.git\\\",\\n                \\\"reference\\\": \\\"e5be32b03e3dc96746214d4a967b33fea0732062\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/hostinger\/hostinger-wp-menu-manager\/zipball\/e5be32b03e3dc96746214d4a967b33fea0732062\\\",\\n                \\\"reference\\\": \\\"e5be32b03e3dc96746214d4a967b33fea0732062\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"hostinger\/hostinger-wp-helper\\\": \\\"^1.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"^9.6\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^3.0\\\",\\n                \\\"yoast\/phpunit-polyfills\\\": \\\"^2.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-15T11:32:10+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\WpMenuManager\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"autoload-dev\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\WpMenuManager\\\\\\\\Tests\\\\\\\\\\\": \\\"tests\/phpunit\\\"\\n                }\\n            },\\n            \\\"license\\\": [\\n                \\\"proprietary\\\"\\n            ],\\n            \\\"description\\\": \\\"Package for managing Hostinger WordPress menus and pages.\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-menu-manager\/tree\/1.2.19\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-menu-manager\/issues\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/hostinger\/hostinger-wp-menu-manager\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"hostinger\/hostinger-wp-surveys\\\",\\n            \\\"version\\\": \\\"1.1.15\\\",\\n            \\\"version_normalized\\\": \\\"1.1.15.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"git@github.com:hostinger\/hostinger-wp-surveys.git\\\",\\n                \\\"reference\\\": \\\"c27cc360f85cbc30f572b8e8bca9774487e64cfb\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/hostinger\/hostinger-wp-surveys\/zipball\/c27cc360f85cbc30f572b8e8bca9774487e64cfb\\\",\\n                \\\"reference\\\": \\\"c27cc360f85cbc30f572b8e8bca9774487e64cfb\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"hostinger\/hostinger-wp-helper\\\": \\\"^1.0\\\",\\n                \\\"php\\\": \\\">=8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"10up\/wp_mock\\\": \\\"^1.0\\\",\\n                \\\"brain\/monkey\\\": \\\"^2.6\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^9.6\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^3.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-22T16:18:46+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\Surveys\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"autoload-dev\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Hostinger\\\\\\\\Surveys\\\\\\\\Tests\\\\\\\\\\\": \\\"tests\/phpunit\\\"\\n                }\\n            },\\n            \\\"license\\\": [\\n                \\\"proprietary\\\"\\n            ],\\n            \\\"description\\\": \\\"A PHP package with surveys for WordPress plugins\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-surveys\/tree\/1.1.15\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/hostinger\/hostinger-wp-surveys\/issues\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/hostinger\/hostinger-wp-surveys\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"league\/commonmark\\\",\\n            \\\"version\\\": \\\"dev-main\\\",\\n            \\\"version_normalized\\\": \\\"dev-main\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/thephpleague\/commonmark.git\\\",\\n                \\\"reference\\\": \\\"6fbb36d44824ed4091adbcf4c7d4a3923cdb3405\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/thephpleague\/commonmark\/zipball\/6fbb36d44824ed4091adbcf4c7d4a3923cdb3405\\\",\\n                \\\"reference\\\": \\\"6fbb36d44824ed4091adbcf4c7d4a3923cdb3405\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-mbstring\\\": \\\"*\\\",\\n                \\\"league\/config\\\": \\\"^1.1.1\\\",\\n                \\\"php\\\": \\\"^7.4 || ^8.0\\\",\\n                \\\"psr\/event-dispatcher\\\": \\\"^1.0\\\",\\n                \\\"symfony\/deprecation-contracts\\\": \\\"^2.1 || ^3.0\\\",\\n                \\\"symfony\/polyfill-php80\\\": \\\"^1.16\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"cebe\/markdown\\\": \\\"^1.0\\\",\\n                \\\"commonmark\/cmark\\\": \\\"0.31.1\\\",\\n                \\\"commonmark\/commonmark.js\\\": \\\"0.31.1\\\",\\n                \\\"composer\/package-versions-deprecated\\\": \\\"^1.8\\\",\\n                \\\"embed\/embed\\\": \\\"^4.4\\\",\\n                \\\"erusev\/parsedown\\\": \\\"^1.0\\\",\\n                \\\"ext-json\\\": \\\"*\\\",\\n                \\\"github\/gfm\\\": \\\"0.29.0\\\",\\n                \\\"michelf\/php-markdown\\\": \\\"^1.4 || ^2.0\\\",\\n                \\\"nyholm\/psr7\\\": \\\"^1.5\\\",\\n                \\\"phpstan\/phpstan\\\": \\\"^1.8.2\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^9.5.21 || ^10.5.9 || ^11.0.0\\\",\\n                \\\"scrutinizer\/ocular\\\": \\\"^1.8.1\\\",\\n                \\\"symfony\/finder\\\": \\\"^5.3 | ^6.0 | ^7.0\\\",\\n                \\\"symfony\/process\\\": \\\"^5.4 | ^6.0 | ^7.0\\\",\\n                \\\"symfony\/yaml\\\": \\\"^2.3 | ^3.0 | ^4.0 | ^5.0 | ^6.0 | ^7.0\\\",\\n                \\\"unleashedtech\/php-coding-standard\\\": \\\"^3.1.1\\\",\\n                \\\"vimeo\/psalm\\\": \\\"^4.24.0 || ^5.0.0\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"symfony\/yaml\\\": \\\"v2.3+ required if using the Front Matter extension\\\"\\n            },\\n            \\\"time\\\": \\\"2025-05-05T12:20:28+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-main\\\": \\\"2.8-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"League\\\\\\\\CommonMark\\\\\\\\\\\": \\\"src\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"BSD-3-Clause\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Colin O'Dell\\\",\\n                    \\\"email\\\": \\\"colinodell@gmail.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.colinodell.com\\\",\\n                    \\\"role\\\": \\\"Lead Developer\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Highly-extensible PHP Markdown parser which fully supports the CommonMark spec and GitHub-Flavored Markdown (GFM)\\\",\\n            \\\"homepage\\\": \\\"https:\/\/commonmark.thephpleague.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"commonmark\\\",\\n                \\\"flavored\\\",\\n                \\\"gfm\\\",\\n                \\\"github\\\",\\n                \\\"github-flavored\\\",\\n                \\\"markdown\\\",\\n                \\\"md\\\",\\n                \\\"parser\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"docs\\\": \\\"https:\/\/commonmark.thephpleague.com\/\\\",\\n                \\\"forum\\\": \\\"https:\/\/github.com\/thephpleague\/commonmark\/discussions\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/thephpleague\/commonmark\/issues\\\",\\n                \\\"rss\\\": \\\"https:\/\/github.com\/thephpleague\/commonmark\/releases.atom\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/thephpleague\/commonmark\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.colinodell.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.paypal.me\/colinpodell\/10.00\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/colinodell\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/league\/commonmark\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/league\/commonmark\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"league\/config\\\",\\n            \\\"version\\\": \\\"dev-main\\\",\\n            \\\"version_normalized\\\": \\\"dev-main\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/thephpleague\/config.git\\\",\\n                \\\"reference\\\": \\\"e6df2a81a60d3054d96cd69eef0d2d472441f9bf\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/thephpleague\/config\/zipball\/e6df2a81a60d3054d96cd69eef0d2d472441f9bf\\\",\\n                \\\"reference\\\": \\\"e6df2a81a60d3054d96cd69eef0d2d472441f9bf\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"dflydev\/dot-access-data\\\": \\\"^3.0.1\\\",\\n                \\\"nette\/schema\\\": \\\"^1.2\\\",\\n                \\\"php\\\": \\\"^7.4 || ^8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpstan\/phpstan\\\": \\\"^1.8.2\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^9.5.5 || ^10.0.0 || ^11.0.0\\\",\\n                \\\"scrutinizer\/ocular\\\": \\\"^1.8.1\\\",\\n                \\\"unleashedtech\/php-coding-standard\\\": \\\"^3.1\\\",\\n                \\\"vimeo\/psalm\\\": \\\"^4.7.3\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-18T00:21:42+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-main\\\": \\\"1.2-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"League\\\\\\\\Config\\\\\\\\\\\": \\\"src\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"BSD-3-Clause\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Colin O'Dell\\\",\\n                    \\\"email\\\": \\\"colinodell@gmail.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.colinodell.com\\\",\\n                    \\\"role\\\": \\\"Lead Developer\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Define configuration arrays with strict schemas and access values with dot notation\\\",\\n            \\\"homepage\\\": \\\"https:\/\/config.thephpleague.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"array\\\",\\n                \\\"config\\\",\\n                \\\"configuration\\\",\\n                \\\"dot\\\",\\n                \\\"dot-access\\\",\\n                \\\"nested\\\",\\n                \\\"schema\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"docs\\\": \\\"https:\/\/config.thephpleague.com\/\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/thephpleague\/config\/issues\\\",\\n                \\\"rss\\\": \\\"https:\/\/github.com\/thephpleague\/config\/releases.atom\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/thephpleague\/config\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.colinodell.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.paypal.me\/colinpodell\/10.00\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/colinodell\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/league\/config\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"league\/uri\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/thephpleague\/uri.git\\\",\\n                \\\"reference\\\": \\\"b83c519cfa89342c1170230f63a9578a79bc4252\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/thephpleague\/uri\/zipball\/b83c519cfa89342c1170230f63a9578a79bc4252\\\",\\n                \\\"reference\\\": \\\"b83c519cfa89342c1170230f63a9578a79bc4252\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"league\/uri-interfaces\\\": \\\"^7.6\\\",\\n                \\\"php\\\": \\\"^8.1\\\",\\n                \\\"psr\/http-factory\\\": \\\"^1\\\"\\n            },\\n            \\\"conflict\\\": {\\n                \\\"league\/uri-schemes\\\": \\\"^1.0\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"bakame\/aide-uri\\\": \\\"A polyfill for PHP8.1 until PHP8.4 to add support to PHP Native URI parser\\\",\\n                \\\"ext-bcmath\\\": \\\"to improve IPV4 host parsing\\\",\\n                \\\"ext-dom\\\": \\\"to convert the URI into an HTML anchor tag\\\",\\n                \\\"ext-fileinfo\\\": \\\"to create Data URI from file contennts\\\",\\n                \\\"ext-gmp\\\": \\\"to improve IPV4 host parsing\\\",\\n                \\\"ext-intl\\\": \\\"to handle IDN host with the best performance\\\",\\n                \\\"jeremykendall\/php-domain-parser\\\": \\\"to resolve Public Suffix and Top Level Domain\\\",\\n                \\\"league\/uri-components\\\": \\\"Needed to easily manipulate URI objects components\\\",\\n                \\\"php-64bit\\\": \\\"to improve IPV4 host parsing\\\",\\n                \\\"rowbot\/url\\\": \\\"to handle WHATWG URL\\\",\\n                \\\"symfony\/polyfill-intl-idn\\\": \\\"to handle IDN host via the Symfony polyfill if ext-intl is not present\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-26T15:35:14+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"7.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"League\\\\\\\\Uri\\\\\\\\\\\": \\\"\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Ignace Nyamagana Butera\\\",\\n                    \\\"email\\\": \\\"nyamsprod@gmail.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/nyamsprod.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"URI manipulation library\\\",\\n            \\\"homepage\\\": \\\"https:\/\/uri.thephpleague.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"data-uri\\\",\\n                \\\"file-uri\\\",\\n                \\\"ftp\\\",\\n                \\\"hostname\\\",\\n                \\\"http\\\",\\n                \\\"https\\\",\\n                \\\"middleware\\\",\\n                \\\"parse_str\\\",\\n                \\\"parse_url\\\",\\n                \\\"psr-7\\\",\\n                \\\"query-string\\\",\\n                \\\"querystring\\\",\\n                \\\"rfc3986\\\",\\n                \\\"rfc3987\\\",\\n                \\\"rfc6570\\\",\\n                \\\"uri\\\",\\n                \\\"uri-template\\\",\\n                \\\"url\\\",\\n                \\\"ws\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"docs\\\": \\\"https:\/\/uri.thephpleague.com\\\",\\n                \\\"forum\\\": \\\"https:\/\/thephpleague.slack.com\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/thephpleague\/uri-src\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/thephpleague\/uri\/tree\/master\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/sponsors\/nyamsprod\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/league\/uri\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"league\/uri-interfaces\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/thephpleague\/uri-interfaces.git\\\",\\n                \\\"reference\\\": \\\"6782d6f28fb5d503621270569310e9181a6c9227\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/thephpleague\/uri-interfaces\/zipball\/6782d6f28fb5d503621270569310e9181a6c9227\\\",\\n                \\\"reference\\\": \\\"6782d6f28fb5d503621270569310e9181a6c9227\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-filter\\\": \\\"*\\\",\\n                \\\"php\\\": \\\"^8.1\\\",\\n                \\\"psr\/http-message\\\": \\\"^1.1 || ^2.0\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-bcmath\\\": \\\"to improve IPV4 host parsing\\\",\\n                \\\"ext-gmp\\\": \\\"to improve IPV4 host parsing\\\",\\n                \\\"ext-intl\\\": \\\"to handle IDN host with the best performance\\\",\\n                \\\"php-64bit\\\": \\\"to improve IPV4 host parsing\\\",\\n                \\\"rowbot\/url\\\": \\\"to handle WHATWG URL\\\",\\n                \\\"symfony\/polyfill-intl-idn\\\": \\\"to handle IDN host via the Symfony polyfill if ext-intl is not present\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-26T15:35:14+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"7.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"League\\\\\\\\Uri\\\\\\\\\\\": \\\"\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Ignace Nyamagana Butera\\\",\\n                    \\\"email\\\": \\\"nyamsprod@gmail.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/nyamsprod.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Common tools for parsing and resolving RFC3987\/RFC3986 URI\\\",\\n            \\\"homepage\\\": \\\"https:\/\/uri.thephpleague.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"data-uri\\\",\\n                \\\"file-uri\\\",\\n                \\\"ftp\\\",\\n                \\\"hostname\\\",\\n                \\\"http\\\",\\n                \\\"https\\\",\\n                \\\"parse_str\\\",\\n                \\\"parse_url\\\",\\n                \\\"psr-7\\\",\\n                \\\"query-string\\\",\\n                \\\"querystring\\\",\\n                \\\"rfc3986\\\",\\n                \\\"rfc3987\\\",\\n                \\\"rfc6570\\\",\\n                \\\"uri\\\",\\n                \\\"url\\\",\\n                \\\"ws\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"docs\\\": \\\"https:\/\/uri.thephpleague.com\\\",\\n                \\\"forum\\\": \\\"https:\/\/thephpleague.slack.com\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/thephpleague\/uri-src\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/thephpleague\/uri-interfaces\/tree\/master\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/sponsors\/nyamsprod\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/league\/uri-interfaces\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"mantle-framework\/contracts\\\",\\n            \\\"version\\\": \\\"1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/mantle-framework\/contracts.git\\\",\\n                \\\"reference\\\": \\\"f6302ec9d0b04185ed502adf52aacc7dae3d0797\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/mantle-framework\/contracts\/zipball\/f6302ec9d0b04185ed502adf52aacc7dae3d0797\\\",\\n                \\\"reference\\\": \\\"f6302ec9d0b04185ed502adf52aacc7dae3d0797\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"alleyinteractive\/composer-wordpress-autoloader\\\": \\\"^1.0\\\",\\n                \\\"php\\\": \\\"^8.2\\\",\\n                \\\"psr\/container\\\": \\\"^1.1.1 || ^2.0.2\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"psr\/container-implementation\\\": \\\"1.1|2.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-06-16T20:31:29+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"wordpress-autoloader\\\": {\\n                    \\\"autoload\\\": {\\n                        \\\"Mantle\\\\\\\\Contracts\\\": \\\".\/\\\"\\n                    }\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"GPL-2.0-or-later\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Alley\\\",\\n                    \\\"email\\\": \\\"mantle@alley.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"The Mantle Framework Contracts Package\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/mantle-framework\/contracts\/tree\/v1.8.8\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/mantle-framework\/contracts\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"mantle-framework\/support\\\",\\n            \\\"version\\\": \\\"1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/mantle-framework\/support.git\\\",\\n                \\\"reference\\\": \\\"b3cfa8ef22d1ce9ed248a7cc380d037baa7b559e\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/mantle-framework\/support\/zipball\/b3cfa8ef22d1ce9ed248a7cc380d037baa7b559e\\\",\\n                \\\"reference\\\": \\\"b3cfa8ef22d1ce9ed248a7cc380d037baa7b559e\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"alleyinteractive\/composer-wordpress-autoloader\\\": \\\"^1.0\\\",\\n                \\\"doctrine\/inflector\\\": \\\"^2.0.8\\\",\\n                \\\"league\/commonmark\\\": \\\"^2.7.0\\\",\\n                \\\"league\/uri\\\": \\\"^7.5\\\",\\n                \\\"league\/uri-interfaces\\\": \\\"^7.5\\\",\\n                \\\"mantle-framework\/contracts\\\": \\\"^1.0\\\",\\n                \\\"monolog\/monolog\\\": \\\"^2.9.1\\\",\\n                \\\"nesbot\/carbon\\\": \\\"^3.8.4\\\",\\n                \\\"php\\\": \\\"^8.2\\\",\\n                \\\"ramsey\/uuid\\\": \\\"^4.7.4\\\",\\n                \\\"symfony\/dom-crawler\\\": \\\"^7.2.0\\\",\\n                \\\"symfony\/finder\\\": \\\"^7.2.0\\\",\\n                \\\"symfony\/var-dumper\\\": \\\"^7.2.0\\\",\\n                \\\"vlucas\/phpdotenv\\\": \\\"^5.6.1\\\",\\n                \\\"voku\/portable-ascii\\\": \\\"^2.0.1\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"mantle-framework\/console\\\": \\\"Required to load Mantle Console Commands\\\",\\n                \\\"mantle-framework\/container\\\": \\\"Required to use wrapped add_action\/add_filter functions\\\",\\n                \\\"vlucas\/phpdotenv\\\": \\\"Required to use Environment class (^5.3)\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-20T17:11:27+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"wordpress-autoloader\\\": {\\n                    \\\"autoload\\\": {\\n                        \\\"Mantle\\\\\\\\Support\\\": \\\".\/\\\"\\n                    }\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"autoload.php\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"GPL-2.0-or-later\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Alley\\\",\\n                    \\\"email\\\": \\\"mantle@alley.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"The Mantle Framework Support Package\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/mantle-framework\/support\/tree\/1.x\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/mantle-framework\/support\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"masterminds\/html5\\\",\\n            \\\"version\\\": \\\"2.10.0\\\",\\n            \\\"version_normalized\\\": \\\"2.10.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/Masterminds\/html5-php.git\\\",\\n                \\\"reference\\\": \\\"fcf91eb64359852f00d921887b219479b4f21251\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/Masterminds\/html5-php\/zipball\/fcf91eb64359852f00d921887b219479b4f21251\\\",\\n                \\\"reference\\\": \\\"fcf91eb64359852f00d921887b219479b4f21251\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-dom\\\": \\\"*\\\",\\n                \\\"php\\\": \\\">=5.3.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"^4.8.35 || ^5.7.21 || ^6 || ^7 || ^8 || ^9\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-25T09:04:22+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"2.7-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Masterminds\\\\\\\\\\\": \\\"src\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Matt Butcher\\\",\\n                    \\\"email\\\": \\\"technosophos@gmail.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Matt Farina\\\",\\n                    \\\"email\\\": \\\"matt@mattfarina.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Asmir Mustafic\\\",\\n                    \\\"email\\\": \\\"goetas@gmail.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"An HTML5 parser and serializer.\\\",\\n            \\\"homepage\\\": \\\"http:\/\/masterminds.github.io\/html5-php\\\",\\n            \\\"keywords\\\": [\\n                \\\"HTML5\\\",\\n                \\\"dom\\\",\\n                \\\"html\\\",\\n                \\\"parser\\\",\\n                \\\"querypath\\\",\\n                \\\"serializer\\\",\\n                \\\"xml\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/Masterminds\/html5-php\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/Masterminds\/html5-php\/tree\/2.10.0\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/masterminds\/html5\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"monolog\/monolog\\\",\\n            \\\"version\\\": \\\"2.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"2.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/Seldaek\/monolog.git\\\",\\n                \\\"reference\\\": \\\"cd82b5069148dd811ef54b4b92ce1b3aad84209b\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/Seldaek\/monolog\/zipball\/cd82b5069148dd811ef54b4b92ce1b3aad84209b\\\",\\n                \\\"reference\\\": \\\"cd82b5069148dd811ef54b4b92ce1b3aad84209b\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.2\\\",\\n                \\\"psr\/log\\\": \\\"^1.0.1 || ^2.0 || ^3.0\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"psr\/log-implementation\\\": \\\"1.0.0 || 2.0.0 || 3.0.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"aws\/aws-sdk-php\\\": \\\"^2.4.9 || ^3.0\\\",\\n                \\\"doctrine\/couchdb\\\": \\\"~1.0@dev\\\",\\n                \\\"elasticsearch\/elasticsearch\\\": \\\"^7 || ^8\\\",\\n                \\\"ext-json\\\": \\\"*\\\",\\n                \\\"graylog2\/gelf-php\\\": \\\"^1.4.2 || ^2@dev\\\",\\n                \\\"guzzlehttp\/guzzle\\\": \\\"^7.4\\\",\\n                \\\"guzzlehttp\/psr7\\\": \\\"^2.2\\\",\\n                \\\"mongodb\/mongodb\\\": \\\"^1.8\\\",\\n                \\\"php-amqplib\/php-amqplib\\\": \\\"~2.4 || ^3\\\",\\n                \\\"phpspec\/prophecy\\\": \\\"^1.15\\\",\\n                \\\"phpstan\/phpstan\\\": \\\"^1.10\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^8.5.38 || ^9.6.19\\\",\\n                \\\"predis\/predis\\\": \\\"^1.1 || ^2.0\\\",\\n                \\\"rollbar\/rollbar\\\": \\\"^1.3 || ^2 || ^3\\\",\\n                \\\"ruflin\/elastica\\\": \\\"^7\\\",\\n                \\\"swiftmailer\/swiftmailer\\\": \\\"^5.3|^6.0\\\",\\n                \\\"symfony\/mailer\\\": \\\"^5.4 || ^6\\\",\\n                \\\"symfony\/mime\\\": \\\"^5.4 || ^6\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"aws\/aws-sdk-php\\\": \\\"Allow sending log messages to AWS services like DynamoDB\\\",\\n                \\\"doctrine\/couchdb\\\": \\\"Allow sending log messages to a CouchDB server\\\",\\n                \\\"elasticsearch\/elasticsearch\\\": \\\"Allow sending log messages to an Elasticsearch server via official client\\\",\\n                \\\"ext-amqp\\\": \\\"Allow sending log messages to an AMQP server (1.0+ required)\\\",\\n                \\\"ext-curl\\\": \\\"Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler\\\",\\n                \\\"ext-mbstring\\\": \\\"Allow to work properly with unicode symbols\\\",\\n                \\\"ext-mongodb\\\": \\\"Allow sending log messages to a MongoDB server (via driver)\\\",\\n                \\\"ext-openssl\\\": \\\"Required to send log messages using SSL\\\",\\n                \\\"ext-sockets\\\": \\\"Allow sending log messages to a Syslog server (via UDP driver)\\\",\\n                \\\"graylog2\/gelf-php\\\": \\\"Allow sending log messages to a GrayLog2 server\\\",\\n                \\\"mongodb\/mongodb\\\": \\\"Allow sending log messages to a MongoDB server (via library)\\\",\\n                \\\"php-amqplib\/php-amqplib\\\": \\\"Allow sending log messages to an AMQP server using php-amqplib\\\",\\n                \\\"rollbar\/rollbar\\\": \\\"Allow sending log messages to Rollbar\\\",\\n                \\\"ruflin\/elastica\\\": \\\"Allow sending log messages to an Elastic Search server\\\"\\n            },\\n            \\\"time\\\": \\\"2025-03-20T09:26:28+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-main\\\": \\\"2.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Monolog\\\\\\\\\\\": \\\"src\/Monolog\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Jordi Boggiano\\\",\\n                    \\\"email\\\": \\\"j.boggiano@seld.be\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/seld.be\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Sends your logs to files, sockets, inboxes, databases and various web services\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/Seldaek\/monolog\\\",\\n            \\\"keywords\\\": [\\n                \\\"log\\\",\\n                \\\"logging\\\",\\n                \\\"psr-3\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/Seldaek\/monolog\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/Seldaek\/monolog\/tree\/2.x\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/Seldaek\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/monolog\/monolog\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/monolog\/monolog\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"nesbot\/carbon\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/CarbonPHP\/carbon.git\\\",\\n                \\\"reference\\\": \\\"76b5c07b8a9d2025ed1610e14cef1f3fd6ad2c24\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/CarbonPHP\/carbon\/zipball\/76b5c07b8a9d2025ed1610e14cef1f3fd6ad2c24\\\",\\n                \\\"reference\\\": \\\"76b5c07b8a9d2025ed1610e14cef1f3fd6ad2c24\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"carbonphp\/carbon-doctrine-types\\\": \\\"<100.0\\\",\\n                \\\"ext-json\\\": \\\"*\\\",\\n                \\\"php\\\": \\\"^8.1\\\",\\n                \\\"psr\/clock\\\": \\\"^1.0\\\",\\n                \\\"symfony\/clock\\\": \\\"^6.3.12 || ^7.0\\\",\\n                \\\"symfony\/polyfill-mbstring\\\": \\\"^1.0\\\",\\n                \\\"symfony\/translation\\\": \\\"^4.4.18 || ^5.2.1 || ^6.0 || ^7.0\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"psr\/clock-implementation\\\": \\\"1.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"doctrine\/dbal\\\": \\\"^3.6.3 || ^4.0\\\",\\n                \\\"doctrine\/orm\\\": \\\"^2.15.2 || ^3.0\\\",\\n                \\\"friendsofphp\/php-cs-fixer\\\": \\\"^3.75.0\\\",\\n                \\\"kylekatarnls\/multi-tester\\\": \\\"^2.5.3\\\",\\n                \\\"phpmd\/phpmd\\\": \\\"^2.15.0\\\",\\n                \\\"phpstan\/extension-installer\\\": \\\"^1.4.3\\\",\\n                \\\"phpstan\/phpstan\\\": \\\"^2.1.17\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^10.5.46\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^3.13.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-02T09:36:06+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"bin\\\": [\\n                \\\"bin\/carbon\\\"\\n            ],\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"laravel\\\": {\\n                    \\\"providers\\\": [\\n                        \\\"Carbon\\\\\\\\Laravel\\\\\\\\ServiceProvider\\\"\\n                    ]\\n                },\\n                \\\"phpstan\\\": {\\n                    \\\"includes\\\": [\\n                        \\\"extension.neon\\\"\\n                    ]\\n                },\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-2.x\\\": \\\"2.x-dev\\\",\\n                    \\\"dev-master\\\": \\\"3.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Carbon\\\\\\\\\\\": \\\"src\/Carbon\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Brian Nesbitt\\\",\\n                    \\\"email\\\": \\\"brian@nesbot.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/markido.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"kylekatarnls\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/kylekatarnls\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"An API extension for DateTime that supports 281 different languages.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/carbon.nesbot.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"date\\\",\\n                \\\"datetime\\\",\\n                \\\"time\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"docs\\\": \\\"https:\/\/carbon.nesbot.com\/docs\\\",\\n                \\\"issues\\\": \\\"https:\/\/github.com\/CarbonPHP\/carbon\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/CarbonPHP\/carbon\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/sponsors\/kylekatarnls\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/opencollective.com\/Carbon#sponsor\\\",\\n                    \\\"type\\\": \\\"opencollective\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/subscription\/pkg\/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&utm_medium=referral&utm_campaign=readme\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/nesbot\/carbon\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"nette\/schema\\\",\\n            \\\"version\\\": \\\"v1.3.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.3.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/nette\/schema.git\\\",\\n                \\\"reference\\\": \\\"8c36c043c775254e7a27987f82336e36ca923e0a\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/nette\/schema\/zipball\/8c36c043c775254e7a27987f82336e36ca923e0a\\\",\\n                \\\"reference\\\": \\\"8c36c043c775254e7a27987f82336e36ca923e0a\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"nette\/utils\\\": \\\"^4.0\\\",\\n                \\\"php\\\": \\\"8.1 - 8.5\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"nette\/tester\\\": \\\"^2.5.2\\\",\\n                \\\"phpstan\/phpstan-nette\\\": \\\"^2.0@stable\\\",\\n                \\\"tracy\/tracy\\\": \\\"^2.8\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-01T02:15:52+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"1.3-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Nette\\\\\\\\\\\": \\\"src\\\"\\n                },\\n                \\\"classmap\\\": [\\n                    \\\"src\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"BSD-3-Clause\\\",\\n                \\\"GPL-2.0-only\\\",\\n                \\\"GPL-3.0-only\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"David Grudl\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/davidgrudl.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Nette Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/nette.org\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"\ud83d\udcd0 Nette Schema: validating data structures against a given Schema.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/nette.org\\\",\\n            \\\"keywords\\\": [\\n                \\\"config\\\",\\n                \\\"nette\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/nette\/schema\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/nette\/schema\/tree\/v1.3\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/nette\/schema\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"nette\/utils\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/nette\/utils.git\\\",\\n                \\\"reference\\\": \\\"8ee89b19f7a1adcaa59c4aaaf6b5525588a40d4e\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/nette\/utils\/zipball\/8ee89b19f7a1adcaa59c4aaaf6b5525588a40d4e\\\",\\n                \\\"reference\\\": \\\"8ee89b19f7a1adcaa59c4aaaf6b5525588a40d4e\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"8.1 - 8.5\\\"\\n            },\\n            \\\"conflict\\\": {\\n                \\\"nette\/finder\\\": \\\"<3\\\",\\n                \\\"nette\/schema\\\": \\\"<1.2.2\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"jetbrains\/phpstorm-attributes\\\": \\\"^1.2\\\",\\n                \\\"nette\/tester\\\": \\\"^2.5\\\",\\n                \\\"phpstan\/phpstan-nette\\\": \\\"^2.0@stable\\\",\\n                \\\"tracy\/tracy\\\": \\\"^2.9\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-gd\\\": \\\"to use Image\\\",\\n                \\\"ext-iconv\\\": \\\"to use Strings::webalize(), toAscii(), chr() and reverse()\\\",\\n                \\\"ext-intl\\\": \\\"to use Strings::webalize(), toAscii(), normalize() and compare()\\\",\\n                \\\"ext-json\\\": \\\"to use Nette\\\\\\\\Utils\\\\\\\\Json\\\",\\n                \\\"ext-mbstring\\\": \\\"to use Strings::lower() etc...\\\",\\n                \\\"ext-tokenizer\\\": \\\"to use Nette\\\\\\\\Utils\\\\\\\\Reflection::getUseStatements()\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-06T21:43:54+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"4.1-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Nette\\\\\\\\\\\": \\\"src\\\"\\n                },\\n                \\\"classmap\\\": [\\n                    \\\"src\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"BSD-3-Clause\\\",\\n                \\\"GPL-2.0-only\\\",\\n                \\\"GPL-3.0-only\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"David Grudl\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/davidgrudl.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Nette Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/nette.org\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"\ud83d\udee0  Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding\/decoding, validation, slug or strong password generating etc.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/nette.org\\\",\\n            \\\"keywords\\\": [\\n                \\\"array\\\",\\n                \\\"core\\\",\\n                \\\"datetime\\\",\\n                \\\"images\\\",\\n                \\\"json\\\",\\n                \\\"nette\\\",\\n                \\\"paginator\\\",\\n                \\\"password\\\",\\n                \\\"slugify\\\",\\n                \\\"string\\\",\\n                \\\"unicode\\\",\\n                \\\"utf-8\\\",\\n                \\\"utility\\\",\\n                \\\"validation\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/nette\/utils\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/nette\/utils\/tree\/master\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/nette\/utils\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"phpoption\/phpoption\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/schmittjoh\/php-option.git\\\",\\n                \\\"reference\\\": \\\"e3fac8b24f56113f7cb96af14958c0dd16330f54\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/schmittjoh\/php-option\/zipball\/e3fac8b24f56113f7cb96af14958c0dd16330f54\\\",\\n                \\\"reference\\\": \\\"e3fac8b24f56113f7cb96af14958c0dd16330f54\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^7.2.5 || ^8.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"bamarni\/composer-bin-plugin\\\": \\\"^1.8.2\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^8.5.39 || ^9.6.20 || ^10.5.28\\\"\\n            },\\n            \\\"time\\\": \\\"2024-07-20T21:41:07+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"bamarni-bin\\\": {\\n                    \\\"bin-links\\\": true,\\n                    \\\"forward-command\\\": false\\n                },\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"1.9-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"PhpOption\\\\\\\\\\\": \\\"src\/PhpOption\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"Apache-2.0\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Johannes M. Schmitt\\\",\\n                    \\\"email\\\": \\\"schmittjoh@gmail.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/schmittjoh\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Graham Campbell\\\",\\n                    \\\"email\\\": \\\"hello@gjcampbell.co.uk\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/GrahamCampbell\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Option Type for PHP\\\",\\n            \\\"keywords\\\": [\\n                \\\"language\\\",\\n                \\\"option\\\",\\n                \\\"php\\\",\\n                \\\"type\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/schmittjoh\/php-option\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/schmittjoh\/php-option\/tree\/1.9.3\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/GrahamCampbell\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/phpoption\/phpoption\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/phpoption\/phpoption\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"psr\/clock\\\",\\n            \\\"version\\\": \\\"1.0.0\\\",\\n            \\\"version_normalized\\\": \\\"1.0.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/php-fig\/clock.git\\\",\\n                \\\"reference\\\": \\\"e41a24703d4560fd0acb709162f73b8adfc3aa0d\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/php-fig\/clock\/zipball\/e41a24703d4560fd0acb709162f73b8adfc3aa0d\\\",\\n                \\\"reference\\\": \\\"e41a24703d4560fd0acb709162f73b8adfc3aa0d\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^7.0 || ^8.0\\\"\\n            },\\n            \\\"time\\\": \\\"2022-11-25T14:36:26+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Psr\\\\\\\\Clock\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"PHP-FIG\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.php-fig.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Common interface for reading the clock.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/php-fig\/clock\\\",\\n            \\\"keywords\\\": [\\n                \\\"clock\\\",\\n                \\\"now\\\",\\n                \\\"psr\\\",\\n                \\\"psr-20\\\",\\n                \\\"time\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/php-fig\/clock\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/php-fig\/clock\/tree\/1.0.0\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/psr\/clock\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"psr\/container\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/php-fig\/container.git\\\",\\n                \\\"reference\\\": \\\"707984727bd5b2b670e59559d3ed2500240cf875\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/php-fig\/container\/zipball\/707984727bd5b2b670e59559d3ed2500240cf875\\\",\\n                \\\"reference\\\": \\\"707984727bd5b2b670e59559d3ed2500240cf875\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.4.0\\\"\\n            },\\n            \\\"time\\\": \\\"2023-09-22T11:11:30+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"2.0.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Psr\\\\\\\\Container\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"PHP-FIG\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.php-fig.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Common Container Interface (PHP FIG PSR-11)\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/php-fig\/container\\\",\\n            \\\"keywords\\\": [\\n                \\\"PSR-11\\\",\\n                \\\"container\\\",\\n                \\\"container-interface\\\",\\n                \\\"container-interop\\\",\\n                \\\"psr\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/php-fig\/container\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/php-fig\/container\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/psr\/container\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"psr\/event-dispatcher\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/php-fig\/event-dispatcher.git\\\",\\n                \\\"reference\\\": \\\"bbd9eacc080d33861e5b5c75b3b8c4d7e6d01874\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/php-fig\/event-dispatcher\/zipball\/bbd9eacc080d33861e5b5c75b3b8c4d7e6d01874\\\",\\n                \\\"reference\\\": \\\"bbd9eacc080d33861e5b5c75b3b8c4d7e6d01874\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.2.0\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"fig\/event-dispatcher-util\\\": \\\"Provides some useful PSR-14 utilities\\\"\\n            },\\n            \\\"time\\\": \\\"2024-03-17T21:29:03+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"1.0.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Psr\\\\\\\\EventDispatcher\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"PHP-FIG\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.php-fig.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Standard interfaces for event handling.\\\",\\n            \\\"keywords\\\": [\\n                \\\"events\\\",\\n                \\\"psr\\\",\\n                \\\"psr-14\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/php-fig\/event-dispatcher\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/psr\/event-dispatcher\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"psr\/http-factory\\\",\\n            \\\"version\\\": \\\"1.1.0\\\",\\n            \\\"version_normalized\\\": \\\"1.1.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/php-fig\/http-factory.git\\\",\\n                \\\"reference\\\": \\\"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/php-fig\/http-factory\/zipball\/2b4765fddfe3b508ac62f829e852b1501d3f6e8a\\\",\\n                \\\"reference\\\": \\\"2b4765fddfe3b508ac62f829e852b1501d3f6e8a\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.1\\\",\\n                \\\"psr\/http-message\\\": \\\"^1.0 || ^2.0\\\"\\n            },\\n            \\\"time\\\": \\\"2024-04-15T12:06:14+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"1.0.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"PHP-FIG\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.php-fig.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"PSR-17: Common interfaces for PSR-7 HTTP message factories\\\",\\n            \\\"keywords\\\": [\\n                \\\"factory\\\",\\n                \\\"http\\\",\\n                \\\"message\\\",\\n                \\\"psr\\\",\\n                \\\"psr-17\\\",\\n                \\\"psr-7\\\",\\n                \\\"request\\\",\\n                \\\"response\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/php-fig\/http-factory\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/psr\/http-factory\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"psr\/http-message\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/php-fig\/http-message.git\\\",\\n                \\\"reference\\\": \\\"402d35bcb92c70c026d1a6a9883f06b2ead23d71\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/php-fig\/http-message\/zipball\/402d35bcb92c70c026d1a6a9883f06b2ead23d71\\\",\\n                \\\"reference\\\": \\\"402d35bcb92c70c026d1a6a9883f06b2ead23d71\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^7.2 || ^8.0\\\"\\n            },\\n            \\\"time\\\": \\\"2023-04-04T09:54:51+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"2.0.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"PHP-FIG\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.php-fig.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Common interface for HTTP messages\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/php-fig\/http-message\\\",\\n            \\\"keywords\\\": [\\n                \\\"http\\\",\\n                \\\"http-message\\\",\\n                \\\"psr\\\",\\n                \\\"psr-7\\\",\\n                \\\"request\\\",\\n                \\\"response\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/php-fig\/http-message\/tree\/2.0\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/psr\/http-message\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"psr\/log\\\",\\n            \\\"version\\\": \\\"2.0.0\\\",\\n            \\\"version_normalized\\\": \\\"2.0.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/php-fig\/log.git\\\",\\n                \\\"reference\\\": \\\"ef29f6d262798707a9edd554e2b82517ef3a9376\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/php-fig\/log\/zipball\/ef29f6d262798707a9edd554e2b82517ef3a9376\\\",\\n                \\\"reference\\\": \\\"ef29f6d262798707a9edd554e2b82517ef3a9376\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.0.0\\\"\\n            },\\n            \\\"time\\\": \\\"2021-07-14T16:41:46+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"2.0.x-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Psr\\\\\\\\Log\\\\\\\\\\\": \\\"src\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"PHP-FIG\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.php-fig.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Common interface for logging libraries\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/php-fig\/log\\\",\\n            \\\"keywords\\\": [\\n                \\\"log\\\",\\n                \\\"psr\\\",\\n                \\\"psr-3\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/php-fig\/log\/tree\/2.0.0\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/psr\/log\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"ramsey\/collection\\\",\\n            \\\"version\\\": \\\"2.1.1\\\",\\n            \\\"version_normalized\\\": \\\"2.1.1.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/ramsey\/collection.git\\\",\\n                \\\"reference\\\": \\\"344572933ad0181accbf4ba763e85a0306a8c5e2\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/ramsey\/collection\/zipball\/344572933ad0181accbf4ba763e85a0306a8c5e2\\\",\\n                \\\"reference\\\": \\\"344572933ad0181accbf4ba763e85a0306a8c5e2\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\"^8.1\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"captainhook\/plugin-composer\\\": \\\"^5.3\\\",\\n                \\\"ergebnis\/composer-normalize\\\": \\\"^2.45\\\",\\n                \\\"fakerphp\/faker\\\": \\\"^1.24\\\",\\n                \\\"hamcrest\/hamcrest-php\\\": \\\"^2.0\\\",\\n                \\\"jangregor\/phpstan-prophecy\\\": \\\"^2.1\\\",\\n                \\\"mockery\/mockery\\\": \\\"^1.6\\\",\\n                \\\"php-parallel-lint\/php-console-highlighter\\\": \\\"^1.0\\\",\\n                \\\"php-parallel-lint\/php-parallel-lint\\\": \\\"^1.4\\\",\\n                \\\"phpspec\/prophecy-phpunit\\\": \\\"^2.3\\\",\\n                \\\"phpstan\/extension-installer\\\": \\\"^1.4\\\",\\n                \\\"phpstan\/phpstan\\\": \\\"^2.1\\\",\\n                \\\"phpstan\/phpstan-mockery\\\": \\\"^2.0\\\",\\n                \\\"phpstan\/phpstan-phpunit\\\": \\\"^2.0\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^10.5\\\",\\n                \\\"ramsey\/coding-standard\\\": \\\"^2.3\\\",\\n                \\\"ramsey\/conventional-commits\\\": \\\"^1.6\\\",\\n                \\\"roave\/security-advisories\\\": \\\"dev-latest\\\"\\n            },\\n            \\\"time\\\": \\\"2025-03-22T05:38:12+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"captainhook\\\": {\\n                    \\\"force-install\\\": true\\n                },\\n                \\\"ramsey\/conventional-commits\\\": {\\n                    \\\"configFile\\\": \\\"conventional-commits.json\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Ramsey\\\\\\\\Collection\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Ben Ramsey\\\",\\n                    \\\"email\\\": \\\"ben@benramsey.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/benramsey.com\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"A PHP library for representing and manipulating collections.\\\",\\n            \\\"keywords\\\": [\\n                \\\"array\\\",\\n                \\\"collection\\\",\\n                \\\"hash\\\",\\n                \\\"map\\\",\\n                \\\"queue\\\",\\n                \\\"set\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/ramsey\/collection\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/ramsey\/collection\/tree\/2.1.1\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/ramsey\/collection\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"ramsey\/uuid\\\",\\n            \\\"version\\\": \\\"4.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"4.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/ramsey\/uuid.git\\\",\\n                \\\"reference\\\": \\\"101bb3a166ce6cb32907f697ac26be9b2cb8be2f\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/ramsey\/uuid\/zipball\/101bb3a166ce6cb32907f697ac26be9b2cb8be2f\\\",\\n                \\\"reference\\\": \\\"101bb3a166ce6cb32907f697ac26be9b2cb8be2f\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"brick\/math\\\": \\\"^0.8.8 || ^0.9 || ^0.10 || ^0.11 || ^0.12 || ^0.13\\\",\\n                \\\"php\\\": \\\"^8.0\\\",\\n                \\\"ramsey\/collection\\\": \\\"^1.2 || ^2.0\\\"\\n            },\\n            \\\"replace\\\": {\\n                \\\"rhumsaa\/uuid\\\": \\\"self.version\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"captainhook\/captainhook\\\": \\\"^5.25\\\",\\n                \\\"captainhook\/plugin-composer\\\": \\\"^5.3\\\",\\n                \\\"dealerdirect\/phpcodesniffer-composer-installer\\\": \\\"^1.0\\\",\\n                \\\"ergebnis\/composer-normalize\\\": \\\"^2.47\\\",\\n                \\\"mockery\/mockery\\\": \\\"^1.6\\\",\\n                \\\"paragonie\/random-lib\\\": \\\"^2\\\",\\n                \\\"php-mock\/php-mock\\\": \\\"^2.6\\\",\\n                \\\"php-mock\/php-mock-mockery\\\": \\\"^1.5\\\",\\n                \\\"php-parallel-lint\/php-parallel-lint\\\": \\\"^1.4.0\\\",\\n                \\\"phpbench\/phpbench\\\": \\\"^1.2.14\\\",\\n                \\\"phpstan\/extension-installer\\\": \\\"^1.4\\\",\\n                \\\"phpstan\/phpstan\\\": \\\"^2.1\\\",\\n                \\\"phpstan\/phpstan-mockery\\\": \\\"^2.0\\\",\\n                \\\"phpstan\/phpstan-phpunit\\\": \\\"^2.0\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^9.6\\\",\\n                \\\"slevomat\/coding-standard\\\": \\\"^8.18\\\",\\n                \\\"squizlabs\/php_codesniffer\\\": \\\"^3.13\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-bcmath\\\": \\\"Enables faster math with arbitrary-precision integers using BCMath.\\\",\\n                \\\"ext-gmp\\\": \\\"Enables faster math with arbitrary-precision integers using GMP.\\\",\\n                \\\"ext-uuid\\\": \\\"Enables the use of PeclUuidTimeGenerator and PeclUuidRandomGenerator.\\\",\\n                \\\"paragonie\/random-lib\\\": \\\"Provides RandomLib for use with the RandomLibAdapter\\\",\\n                \\\"ramsey\/uuid-doctrine\\\": \\\"Allows the use of Ramsey\\\\\\\\Uuid\\\\\\\\Uuid as Doctrine field type.\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-12T06:53:16+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"captainhook\\\": {\\n                    \\\"force-install\\\": true\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"src\/functions.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Ramsey\\\\\\\\Uuid\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"description\\\": \\\"A PHP library for generating and working with universally unique identifiers (UUIDs).\\\",\\n            \\\"keywords\\\": [\\n                \\\"guid\\\",\\n                \\\"identifier\\\",\\n                \\\"uuid\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/ramsey\/uuid\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/ramsey\/uuid\/tree\/4.x\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/ramsey\/uuid\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/clock\\\",\\n            \\\"version\\\": \\\"7.4.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"7.4.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/clock.git\\\",\\n                \\\"reference\\\": \\\"9a2e07a0fcc4c76cc356e28942e515a3b388c8cb\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/clock\/zipball\/9a2e07a0fcc4c76cc356e28942e515a3b388c8cb\\\",\\n                \\\"reference\\\": \\\"9a2e07a0fcc4c76cc356e28942e515a3b388c8cb\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.2\\\",\\n                \\\"psr\/clock\\\": \\\"^1.0\\\",\\n                \\\"symfony\/polyfill-php83\\\": \\\"^1.28\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"psr\/clock-implementation\\\": \\\"1.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-04T07:05:15+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"Resources\/now.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Component\\\\\\\\Clock\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"exclude-from-classmap\\\": [\\n                    \\\"\/Tests\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Decouples applications from the system clock\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"clock\\\",\\n                \\\"psr20\\\",\\n                \\\"time\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/clock\/tree\/7.4\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/clock\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/deprecation-contracts\\\",\\n            \\\"version\\\": \\\"dev-main\\\",\\n            \\\"version_normalized\\\": \\\"dev-main\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/deprecation-contracts.git\\\",\\n                \\\"reference\\\": \\\"63afe740e99a13ba87ec199bb07bbdee937a5b62\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/deprecation-contracts\/zipball\/63afe740e99a13ba87ec199bb07bbdee937a5b62\\\",\\n                \\\"reference\\\": \\\"63afe740e99a13ba87ec199bb07bbdee937a5b62\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.1\\\"\\n            },\\n            \\\"time\\\": \\\"2024-09-25T14:21:43+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"thanks\\\": {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/symfony\/contracts\\\",\\n                    \\\"name\\\": \\\"symfony\/contracts\\\"\\n                },\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-main\\\": \\\"3.6-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"function.php\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"A generic function and convention to trigger deprecation notices\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/deprecation-contracts\/tree\/v3.6.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/deprecation-contracts\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/dom-crawler\\\",\\n            \\\"version\\\": \\\"7.4.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"7.4.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/dom-crawler.git\\\",\\n                \\\"reference\\\": \\\"8c1a2e2eecf8de1a904fa699d1b12ba2d1237f3f\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/dom-crawler\/zipball\/8c1a2e2eecf8de1a904fa699d1b12ba2d1237f3f\\\",\\n                \\\"reference\\\": \\\"8c1a2e2eecf8de1a904fa699d1b12ba2d1237f3f\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"masterminds\/html5\\\": \\\"^2.6\\\",\\n                \\\"php\\\": \\\">=8.2\\\",\\n                \\\"symfony\/deprecation-contracts\\\": \\\"^2.5|^3\\\",\\n                \\\"symfony\/polyfill-ctype\\\": \\\"~1.8\\\",\\n                \\\"symfony\/polyfill-mbstring\\\": \\\"~1.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"symfony\/css-selector\\\": \\\"^6.4|^7.0|^8.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-21T07:27:24+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Component\\\\\\\\DomCrawler\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"exclude-from-classmap\\\": [\\n                    \\\"\/Tests\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Fabien Potencier\\\",\\n                    \\\"email\\\": \\\"fabien@symfony.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Eases DOM navigation for HTML and XML documents\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/dom-crawler\/tree\/7.4\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/dom-crawler\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/finder\\\",\\n            \\\"version\\\": \\\"7.4.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"7.4.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/finder.git\\\",\\n                \\\"reference\\\": \\\"57861c3e46d9c85d89b73588afae62049ceafc5e\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/finder\/zipball\/57861c3e46d9c85d89b73588afae62049ceafc5e\\\",\\n                \\\"reference\\\": \\\"57861c3e46d9c85d89b73588afae62049ceafc5e\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.2\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"symfony\/filesystem\\\": \\\"^6.4|^7.0|^8.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-12T20:20:59+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Component\\\\\\\\Finder\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"exclude-from-classmap\\\": [\\n                    \\\"\/Tests\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Fabien Potencier\\\",\\n                    \\\"email\\\": \\\"fabien@symfony.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Finds files and directories via an intuitive fluent interface\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/finder\/tree\/7.4\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/finder\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/polyfill-ctype\\\",\\n            \\\"version\\\": \\\"1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill-ctype.git\\\",\\n                \\\"reference\\\": \\\"a3cc8b044a6ea513310cbd48ef7333b384945638\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/polyfill-ctype\/zipball\/a3cc8b044a6ea513310cbd48ef7333b384945638\\\",\\n                \\\"reference\\\": \\\"a3cc8b044a6ea513310cbd48ef7333b384945638\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.2\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"ext-ctype\\\": \\\"*\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-ctype\\\": \\\"For best performance\\\"\\n            },\\n            \\\"time\\\": \\\"2024-09-09T11:45:10+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"thanks\\\": {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill\\\",\\n                    \\\"name\\\": \\\"symfony\/polyfill\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"bootstrap.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Polyfill\\\\\\\\Ctype\\\\\\\\\\\": \\\"\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Gert de Pagter\\\",\\n                    \\\"email\\\": \\\"BackEndTea@gmail.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Symfony polyfill for ctype functions\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"compatibility\\\",\\n                \\\"ctype\\\",\\n                \\\"polyfill\\\",\\n                \\\"portable\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/polyfill-ctype\/tree\/v1.33.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/polyfill-ctype\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/polyfill-mbstring\\\",\\n            \\\"version\\\": \\\"1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill-mbstring.git\\\",\\n                \\\"reference\\\": \\\"6d857f4d76bd4b343eac26d6b539585d2bc56493\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/polyfill-mbstring\/zipball\/6d857f4d76bd4b343eac26d6b539585d2bc56493\\\",\\n                \\\"reference\\\": \\\"6d857f4d76bd4b343eac26d6b539585d2bc56493\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-iconv\\\": \\\"*\\\",\\n                \\\"php\\\": \\\">=7.2\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"ext-mbstring\\\": \\\"*\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-mbstring\\\": \\\"For best performance\\\"\\n            },\\n            \\\"time\\\": \\\"2024-12-23T08:48:59+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"thanks\\\": {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill\\\",\\n                    \\\"name\\\": \\\"symfony\/polyfill\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"bootstrap.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Polyfill\\\\\\\\Mbstring\\\\\\\\\\\": \\\"\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Symfony polyfill for the Mbstring extension\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"compatibility\\\",\\n                \\\"mbstring\\\",\\n                \\\"polyfill\\\",\\n                \\\"portable\\\",\\n                \\\"shim\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/polyfill-mbstring\/tree\/v1.33.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/polyfill-mbstring\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/polyfill-php80\\\",\\n            \\\"version\\\": \\\"1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill-php80.git\\\",\\n                \\\"reference\\\": \\\"0cc9dd0f17f61d8131e7df6b84bd344899fe2608\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/polyfill-php80\/zipball\/0cc9dd0f17f61d8131e7df6b84bd344899fe2608\\\",\\n                \\\"reference\\\": \\\"0cc9dd0f17f61d8131e7df6b84bd344899fe2608\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.2\\\"\\n            },\\n            \\\"time\\\": \\\"2025-01-02T08:10:11+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"thanks\\\": {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill\\\",\\n                    \\\"name\\\": \\\"symfony\/polyfill\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"bootstrap.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Polyfill\\\\\\\\Php80\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"classmap\\\": [\\n                    \\\"Resources\/stubs\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Ion Bazan\\\",\\n                    \\\"email\\\": \\\"ion.bazan@gmail.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"compatibility\\\",\\n                \\\"polyfill\\\",\\n                \\\"portable\\\",\\n                \\\"shim\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/polyfill-php80\/tree\/v1.33.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/polyfill-php80\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/polyfill-php83\\\",\\n            \\\"version\\\": \\\"1.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"1.9999999.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill-php83.git\\\",\\n                \\\"reference\\\": \\\"17f6f9a6b1735c0f163024d959f700cfbc5155e5\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/polyfill-php83\/zipball\/17f6f9a6b1735c0f163024d959f700cfbc5155e5\\\",\\n                \\\"reference\\\": \\\"17f6f9a6b1735c0f163024d959f700cfbc5155e5\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.2\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-08T02:45:35+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"thanks\\\": {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/symfony\/polyfill\\\",\\n                    \\\"name\\\": \\\"symfony\/polyfill\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"bootstrap.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Polyfill\\\\\\\\Php83\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"classmap\\\": [\\n                    \\\"Resources\/stubs\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Symfony polyfill backporting some PHP 8.3+ features to lower PHP versions\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"compatibility\\\",\\n                \\\"polyfill\\\",\\n                \\\"portable\\\",\\n                \\\"shim\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/polyfill-php83\/tree\/v1.33.0\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/polyfill-php83\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/translation\\\",\\n            \\\"version\\\": \\\"7.4.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"7.4.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/translation.git\\\",\\n                \\\"reference\\\": \\\"cfd2401d28ee4b92a54baafb3af91ba5bef2e76b\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/translation\/zipball\/cfd2401d28ee4b92a54baafb3af91ba5bef2e76b\\\",\\n                \\\"reference\\\": \\\"cfd2401d28ee4b92a54baafb3af91ba5bef2e76b\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.2\\\",\\n                \\\"symfony\/deprecation-contracts\\\": \\\"^2.5|^3\\\",\\n                \\\"symfony\/polyfill-mbstring\\\": \\\"~1.0\\\",\\n                \\\"symfony\/translation-contracts\\\": \\\"^2.5.3|^3.3\\\"\\n            },\\n            \\\"conflict\\\": {\\n                \\\"nikic\/php-parser\\\": \\\"<5.0\\\",\\n                \\\"symfony\/config\\\": \\\"<6.4\\\",\\n                \\\"symfony\/console\\\": \\\"<6.4\\\",\\n                \\\"symfony\/dependency-injection\\\": \\\"<6.4\\\",\\n                \\\"symfony\/http-client-contracts\\\": \\\"<2.5\\\",\\n                \\\"symfony\/http-kernel\\\": \\\"<6.4\\\",\\n                \\\"symfony\/service-contracts\\\": \\\"<2.5\\\",\\n                \\\"symfony\/twig-bundle\\\": \\\"<6.4\\\",\\n                \\\"symfony\/yaml\\\": \\\"<6.4\\\"\\n            },\\n            \\\"provide\\\": {\\n                \\\"symfony\/translation-implementation\\\": \\\"2.3|3.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"nikic\/php-parser\\\": \\\"^5.0\\\",\\n                \\\"psr\/log\\\": \\\"^1|^2|^3\\\",\\n                \\\"symfony\/config\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/console\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/dependency-injection\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/finder\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/http-client-contracts\\\": \\\"^2.5|^3.0\\\",\\n                \\\"symfony\/http-kernel\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/intl\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/polyfill-intl-icu\\\": \\\"^1.21\\\",\\n                \\\"symfony\/routing\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/service-contracts\\\": \\\"^2.5|^3\\\",\\n                \\\"symfony\/yaml\\\": \\\"^6.4|^7.0|^8.0\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-17T17:04:24+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"Resources\/functions.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Component\\\\\\\\Translation\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"exclude-from-classmap\\\": [\\n                    \\\"\/Tests\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Fabien Potencier\\\",\\n                    \\\"email\\\": \\\"fabien@symfony.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Provides tools to internationalize your application\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/translation\/tree\/7.4\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/translation\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/translation-contracts\\\",\\n            \\\"version\\\": \\\"dev-main\\\",\\n            \\\"version_normalized\\\": \\\"dev-main\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/translation-contracts.git\\\",\\n                \\\"reference\\\": \\\"65a8bc82080447fae78373aa10f8d13b38338977\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/translation-contracts\/zipball\/65a8bc82080447fae78373aa10f8d13b38338977\\\",\\n                \\\"reference\\\": \\\"65a8bc82080447fae78373aa10f8d13b38338977\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.1\\\"\\n            },\\n            \\\"time\\\": \\\"2025-07-15T13:41:35+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"thanks\\\": {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/symfony\/contracts\\\",\\n                    \\\"name\\\": \\\"symfony\/contracts\\\"\\n                },\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-main\\\": \\\"3.6-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Contracts\\\\\\\\Translation\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"exclude-from-classmap\\\": [\\n                    \\\"\/Test\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Generic abstractions related to translation\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"abstractions\\\",\\n                \\\"contracts\\\",\\n                \\\"decoupling\\\",\\n                \\\"interfaces\\\",\\n                \\\"interoperability\\\",\\n                \\\"standards\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/translation-contracts\/tree\/main\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/translation-contracts\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"symfony\/var-dumper\\\",\\n            \\\"version\\\": \\\"7.4.x-dev\\\",\\n            \\\"version_normalized\\\": \\\"7.4.9999999.9999999-dev\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/symfony\/var-dumper.git\\\",\\n                \\\"reference\\\": \\\"2492ca878da0addda89d9edefc3e4bad973efca2\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/symfony\/var-dumper\/zipball\/2492ca878da0addda89d9edefc3e4bad973efca2\\\",\\n                \\\"reference\\\": \\\"2492ca878da0addda89d9edefc3e4bad973efca2\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=8.2\\\",\\n                \\\"symfony\/deprecation-contracts\\\": \\\"^2.5|^3\\\",\\n                \\\"symfony\/polyfill-mbstring\\\": \\\"~1.0\\\"\\n            },\\n            \\\"conflict\\\": {\\n                \\\"symfony\/console\\\": \\\"<6.4\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"symfony\/console\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/http-kernel\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/process\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"symfony\/uid\\\": \\\"^6.4|^7.0|^8.0\\\",\\n                \\\"twig\/twig\\\": \\\"^3.12\\\"\\n            },\\n            \\\"time\\\": \\\"2025-08-17T17:04:24+00:00\\\",\\n            \\\"bin\\\": [\\n                \\\"Resources\/bin\/var-dump-server\\\"\\n            ],\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"Resources\/functions\/dump.php\\\"\\n                ],\\n                \\\"psr-4\\\": {\\n                    \\\"Symfony\\\\\\\\Component\\\\\\\\VarDumper\\\\\\\\\\\": \\\"\\\"\\n                },\\n                \\\"exclude-from-classmap\\\": [\\n                    \\\"\/Tests\/\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Nicolas Grekas\\\",\\n                    \\\"email\\\": \\\"p@tchwork.com\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Symfony Community\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/symfony.com\/contributors\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Provides mechanisms for walking through any arbitrary PHP variable\\\",\\n            \\\"homepage\\\": \\\"https:\/\/symfony.com\\\",\\n            \\\"keywords\\\": [\\n                \\\"debug\\\",\\n                \\\"dump\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"source\\\": \\\"https:\/\/github.com\/symfony\/var-dumper\/tree\/7.4\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/symfony.com\/sponsor\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/fabpot\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/nicolas-grekas\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/symfony\/symfony\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/symfony\/var-dumper\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"vlucas\/phpdotenv\\\",\\n            \\\"version\\\": \\\"dev-master\\\",\\n            \\\"version_normalized\\\": \\\"dev-master\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/vlucas\/phpdotenv.git\\\",\\n                \\\"reference\\\": \\\"24ac4c74f91ee2c193fa1aaa5c249cb0822809af\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/vlucas\/phpdotenv\/zipball\/24ac4c74f91ee2c193fa1aaa5c249cb0822809af\\\",\\n                \\\"reference\\\": \\\"24ac4c74f91ee2c193fa1aaa5c249cb0822809af\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-pcre\\\": \\\"*\\\",\\n                \\\"graham-campbell\/result-type\\\": \\\"^1.1.3\\\",\\n                \\\"php\\\": \\\"^7.2.5 || ^8.0\\\",\\n                \\\"phpoption\/phpoption\\\": \\\"^1.9.3\\\",\\n                \\\"symfony\/polyfill-ctype\\\": \\\"^1.24\\\",\\n                \\\"symfony\/polyfill-mbstring\\\": \\\"^1.24\\\",\\n                \\\"symfony\/polyfill-php80\\\": \\\"^1.24\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"bamarni\/composer-bin-plugin\\\": \\\"^1.8.2\\\",\\n                \\\"ext-filter\\\": \\\"*\\\",\\n                \\\"phpunit\/phpunit\\\": \\\"^8.5.34 || ^9.6.13 || ^10.4.2\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-filter\\\": \\\"Required to use the boolean validator.\\\"\\n            },\\n            \\\"time\\\": \\\"2025-04-30T23:37:27+00:00\\\",\\n            \\\"default-branch\\\": true,\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"extra\\\": {\\n                \\\"bamarni-bin\\\": {\\n                    \\\"bin-links\\\": true,\\n                    \\\"forward-command\\\": false\\n                },\\n                \\\"branch-alias\\\": {\\n                    \\\"dev-master\\\": \\\"5.6-dev\\\"\\n                }\\n            },\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"Dotenv\\\\\\\\\\\": \\\"src\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"BSD-3-Clause\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Graham Campbell\\\",\\n                    \\\"email\\\": \\\"hello@gjcampbell.co.uk\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/GrahamCampbell\\\"\\n                },\\n                {\\n                    \\\"name\\\": \\\"Vance Lucas\\\",\\n                    \\\"email\\\": \\\"vance@vancelucas.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/github.com\/vlucas\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.\\\",\\n            \\\"keywords\\\": [\\n                \\\"dotenv\\\",\\n                \\\"env\\\",\\n                \\\"environment\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/vlucas\/phpdotenv\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/vlucas\/phpdotenv\/tree\/v5.6.2\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/GrahamCampbell\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/vlucas\/phpdotenv\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/vlucas\/phpdotenv\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"voku\/portable-ascii\\\",\\n            \\\"version\\\": \\\"2.0.3\\\",\\n            \\\"version_normalized\\\": \\\"2.0.3.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/voku\/portable-ascii.git\\\",\\n                \\\"reference\\\": \\\"b1d923f88091c6bf09699efcd7c8a1b1bfd7351d\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/voku\/portable-ascii\/zipball\/b1d923f88091c6bf09699efcd7c8a1b1bfd7351d\\\",\\n                \\\"reference\\\": \\\"b1d923f88091c6bf09699efcd7c8a1b1bfd7351d\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"php\\\": \\\">=7.0.0\\\"\\n            },\\n            \\\"require-dev\\\": {\\n                \\\"phpunit\/phpunit\\\": \\\"~6.0 || ~7.0 || ~9.0\\\"\\n            },\\n            \\\"suggest\\\": {\\n                \\\"ext-intl\\\": \\\"Use Intl for transliterator_transliterate() support\\\"\\n            },\\n            \\\"time\\\": \\\"2024-11-21T01:49:47+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"psr-4\\\": {\\n                    \\\"voku\\\\\\\\\\\": \\\"src\/voku\/\\\"\\n                }\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Lars Moelleken\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/www.moelleken.org\/\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"Portable ASCII library - performance optimized (ascii) string functions for php.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/voku\/portable-ascii\\\",\\n            \\\"keywords\\\": [\\n                \\\"ascii\\\",\\n                \\\"clean\\\",\\n                \\\"php\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/voku\/portable-ascii\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/voku\/portable-ascii\/tree\/2.0.3\\\"\\n            },\\n            \\\"funding\\\": [\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.paypal.me\/moelleken\\\",\\n                    \\\"type\\\": \\\"custom\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/github.com\/voku\\\",\\n                    \\\"type\\\": \\\"github\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/opencollective.com\/portable-ascii\\\",\\n                    \\\"type\\\": \\\"open_collective\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/www.patreon.com\/voku\\\",\\n                    \\\"type\\\": \\\"patreon\\\"\\n                },\\n                {\\n                    \\\"url\\\": \\\"https:\/\/tidelift.com\/funding\/github\/packagist\/voku\/portable-ascii\\\",\\n                    \\\"type\\\": \\\"tidelift\\\"\\n                }\\n            ],\\n            \\\"install-path\\\": \\\"..\/voku\/portable-ascii\\\"\\n        },\\n        {\\n            \\\"name\\\": \\\"yahnis-elsts\/plugin-update-checker\\\",\\n            \\\"version\\\": \\\"v5.6\\\",\\n            \\\"version_normalized\\\": \\\"5.6.0.0\\\",\\n            \\\"source\\\": {\\n                \\\"type\\\": \\\"git\\\",\\n                \\\"url\\\": \\\"https:\/\/github.com\/YahnisElsts\/plugin-update-checker.git\\\",\\n                \\\"reference\\\": \\\"a2db6871deec989a74e1f90fafc6d58ae526a879\\\"\\n            },\\n            \\\"dist\\\": {\\n                \\\"type\\\": \\\"zip\\\",\\n                \\\"url\\\": \\\"https:\/\/api.github.com\/repos\/YahnisElsts\/plugin-update-checker\/zipball\/a2db6871deec989a74e1f90fafc6d58ae526a879\\\",\\n                \\\"reference\\\": \\\"a2db6871deec989a74e1f90fafc6d58ae526a879\\\",\\n                \\\"shasum\\\": \\\"\\\"\\n            },\\n            \\\"require\\\": {\\n                \\\"ext-json\\\": \\\"*\\\",\\n                \\\"php\\\": \\\">=5.6.20\\\"\\n            },\\n            \\\"time\\\": \\\"2025-05-20T12:29:01+00:00\\\",\\n            \\\"type\\\": \\\"library\\\",\\n            \\\"installation-source\\\": \\\"dist\\\",\\n            \\\"autoload\\\": {\\n                \\\"files\\\": [\\n                    \\\"load-v5p6.php\\\"\\n                ]\\n            },\\n            \\\"notification-url\\\": \\\"https:\/\/packagist.org\/downloads\/\\\",\\n            \\\"license\\\": [\\n                \\\"MIT\\\"\\n            ],\\n            \\\"authors\\\": [\\n                {\\n                    \\\"name\\\": \\\"Yahnis Elsts\\\",\\n                    \\\"email\\\": \\\"whiteshadow@w-shadow.com\\\",\\n                    \\\"homepage\\\": \\\"https:\/\/w-shadow.com\/\\\",\\n                    \\\"role\\\": \\\"Developer\\\"\\n                }\\n            ],\\n            \\\"description\\\": \\\"A custom update checker for WordPress plugins and themes. Useful if you can't host your plugin in the official WP repository but still want it to support automatic updates.\\\",\\n            \\\"homepage\\\": \\\"https:\/\/github.com\/YahnisElsts\/plugin-update-checker\/\\\",\\n            \\\"keywords\\\": [\\n                \\\"automatic updates\\\",\\n                \\\"plugin updates\\\",\\n                \\\"theme updates\\\",\\n                \\\"wordpress\\\"\\n            ],\\n            \\\"support\\\": {\\n                \\\"issues\\\": \\\"https:\/\/github.com\/YahnisElsts\/plugin-update-checker\/issues\\\",\\n                \\\"source\\\": \\\"https:\/\/github.com\/YahnisElsts\/plugin-update-checker\/tree\/v5.6\\\"\\n            },\\n            \\\"install-path\\\": \\\"..\/yahnis-elsts\/plugin-update-checker\\\"\\n        }\\n    ],\\n    \\\"dev\\\": false,\\n    \\\"dev-package-names\\\": []\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/autoload_psr4.php\",\"ext\":\"php\",\"size\":3351,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ autoload_psr4.php @generated by Composer\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir = dirname($vendorDir);\\n\\nreturn array(\\n    'voku\\\\\\\\' => array($vendorDir . '\/voku\/portable-ascii\/src\/voku'),\\n    'Symfony\\\\\\\\Polyfill\\\\\\\\Php83\\\\\\\\' => array($vendorDir . '\/symfony\/polyfill-php83'),\\n    'Symfony\\\\\\\\Polyfill\\\\\\\\Php80\\\\\\\\' => array($vendorDir . '\/symfony\/polyfill-php80'),\\n    'Symfony\\\\\\\\Polyfill\\\\\\\\Mbstring\\\\\\\\' => array($vendorDir . '\/symfony\/polyfill-mbstring'),\\n    'Symfony\\\\\\\\Polyfill\\\\\\\\Ctype\\\\\\\\' => array($vendorDir . '\/symfony\/polyfill-ctype'),\\n    'Symfony\\\\\\\\Contracts\\\\\\\\Translation\\\\\\\\' => array($vendorDir . '\/symfony\/translation-contracts'),\\n    'Symfony\\\\\\\\Component\\\\\\\\VarDumper\\\\\\\\' => array($vendorDir . '\/symfony\/var-dumper'),\\n    'Symfony\\\\\\\\Component\\\\\\\\Translation\\\\\\\\' => array($vendorDir . '\/symfony\/translation'),\\n    'Symfony\\\\\\\\Component\\\\\\\\Finder\\\\\\\\' => array($vendorDir . '\/symfony\/finder'),\\n    'Symfony\\\\\\\\Component\\\\\\\\DomCrawler\\\\\\\\' => array($vendorDir . '\/symfony\/dom-crawler'),\\n    'Symfony\\\\\\\\Component\\\\\\\\Clock\\\\\\\\' => array($vendorDir . '\/symfony\/clock'),\\n    'Ramsey\\\\\\\\Uuid\\\\\\\\' => array($vendorDir . '\/ramsey\/uuid\/src'),\\n    'Ramsey\\\\\\\\Collection\\\\\\\\' => array($vendorDir . '\/ramsey\/collection\/src'),\\n    'Psr\\\\\\\\Log\\\\\\\\' => array($vendorDir . '\/psr\/log\/src'),\\n    'Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\' => array($vendorDir . '\/psr\/http-factory\/src', $vendorDir . '\/psr\/http-message\/src'),\\n    'Psr\\\\\\\\EventDispatcher\\\\\\\\' => array($vendorDir . '\/psr\/event-dispatcher\/src'),\\n    'Psr\\\\\\\\Container\\\\\\\\' => array($vendorDir . '\/psr\/container\/src'),\\n    'Psr\\\\\\\\Clock\\\\\\\\' => array($vendorDir . '\/psr\/clock\/src'),\\n    'PhpOption\\\\\\\\' => array($vendorDir . '\/phpoption\/phpoption\/src\/PhpOption'),\\n    'Nette\\\\\\\\' => array($vendorDir . '\/nette\/schema\/src', $vendorDir . '\/nette\/utils\/src'),\\n    'Monolog\\\\\\\\' => array($vendorDir . '\/monolog\/monolog\/src\/Monolog'),\\n    'Masterminds\\\\\\\\' => array($vendorDir . '\/masterminds\/html5\/src'),\\n    'League\\\\\\\\Uri\\\\\\\\' => array($vendorDir . '\/league\/uri', $vendorDir . '\/league\/uri-interfaces'),\\n    'League\\\\\\\\Config\\\\\\\\' => array($vendorDir . '\/league\/config\/src'),\\n    'League\\\\\\\\CommonMark\\\\\\\\' => array($vendorDir . '\/league\/commonmark\/src'),\\n    'Hostinger\\\\\\\\WpMenuManager\\\\\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-menu-manager\/src'),\\n    'Hostinger\\\\\\\\WpHelper\\\\\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-helper\/src'),\\n    'Hostinger\\\\\\\\Tests\\\\\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-helper\/tests\/phpunit'),\\n    'Hostinger\\\\\\\\Surveys\\\\\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-surveys\/src'),\\n    'Hostinger\\\\\\\\Amplitude\\\\\\\\' => array($vendorDir . '\/hostinger\/hostinger-wp-amplitude\/src'),\\n    'GrahamCampbell\\\\\\\\ResultType\\\\\\\\' => array($vendorDir . '\/graham-campbell\/result-type\/src'),\\n    'Dotenv\\\\\\\\' => array($vendorDir . '\/vlucas\/phpdotenv\/src'),\\n    'Doctrine\\\\\\\\Inflector\\\\\\\\' => array($vendorDir . '\/doctrine\/inflector\/src'),\\n    'Dflydev\\\\\\\\DotAccessData\\\\\\\\' => array($vendorDir . '\/dflydev\/dot-access-data\/src'),\\n    'ComposerWordPressAutoloader\\\\\\\\' => array($vendorDir . '\/alleyinteractive\/composer-wordpress-autoloader\/src'),\\n    'Carbon\\\\\\\\Doctrine\\\\\\\\' => array($vendorDir . '\/carbonphp\/carbon-doctrine-types\/src\/Carbon\/Doctrine'),\\n    'Carbon\\\\\\\\' => array($vendorDir . '\/nesbot\/carbon\/src\/Carbon'),\\n    'Brick\\\\\\\\Math\\\\\\\\' => array($vendorDir . '\/brick\/math\/src'),\\n    'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\' => array($vendorDir . '\/automattic\/jetpack-autoloader\/src'),\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/InstalledVersions.php\",\"ext\":\"php\",\"size\":17395,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of Composer.\\n *\\n * (c) Nils Adermann <naderman@naderman.de>\\n *     Jordi Boggiano <j.boggiano@seld.be>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Composer;\\n\\nuse Composer\\\\Autoload\\\\ClassLoader;\\nuse Composer\\\\Semver\\\\VersionParser;\\n\\n\/**\\n * This class is copied in every Composer installed project and available to all\\n *\\n * See also https:\/\/getcomposer.org\/doc\/07-runtime.md#installed-versions\\n *\\n * To require its presence, you can require `composer-runtime-api ^2.0`\\n *\\n * @final\\n *\/\\nclass InstalledVersions\\n{\\n    \/**\\n     * @var string|null if set (by reflection by Composer), this should be set to the path where this class is being copied to\\n     * @internal\\n     *\/\\n    private static $selfDir = null;\\n\\n    \/**\\n     * @var mixed[]|null\\n     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null\\n     *\/\\n    private static $installed;\\n\\n    \/**\\n     * @var bool\\n     *\/\\n    private static $installedIsLocalDir;\\n\\n    \/**\\n     * @var bool|null\\n     *\/\\n    private static $canGetVendors;\\n\\n    \/**\\n     * @var array[]\\n     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\\n     *\/\\n    private static $installedByVendor = array();\\n\\n    \/**\\n     * Returns a list of all package names which are present, either by being installed, replaced or provided\\n     *\\n     * @return string[]\\n     * @psalm-return list<string>\\n     *\/\\n    public static function getInstalledPackages()\\n    {\\n        $packages = array();\\n        foreach (self::getInstalled() as $installed) {\\n            $packages[] = array_keys($installed['versions']);\\n        }\\n\\n        if (1 === \\\\count($packages)) {\\n            return $packages[0];\\n        }\\n\\n        return array_keys(array_flip(\\\\call_user_func_array('array_merge', $packages)));\\n    }\\n\\n    \/**\\n     * Returns a list of all package names with a specific type e.g. 'library'\\n     *\\n     * @param  string   $type\\n     * @return string[]\\n     * @psalm-return list<string>\\n     *\/\\n    public static function getInstalledPackagesByType($type)\\n    {\\n        $packagesByType = array();\\n\\n        foreach (self::getInstalled() as $installed) {\\n            foreach ($installed['versions'] as $name => $package) {\\n                if (isset($package['type']) && $package['type'] === $type) {\\n                    $packagesByType[] = $name;\\n                }\\n            }\\n        }\\n\\n        return $packagesByType;\\n    }\\n\\n    \/**\\n     * Checks whether the given package is installed\\n     *\\n     * This also returns true if the package name is provided or replaced by another package\\n     *\\n     * @param  string $packageName\\n     * @param  bool   $includeDevRequirements\\n     * @return bool\\n     *\/\\n    public static function isInstalled($packageName, $includeDevRequirements = true)\\n    {\\n        foreach (self::getInstalled() as $installed) {\\n            if (isset($installed['versions'][$packageName])) {\\n                return $includeDevRequirements || !isset($installed['versions'][$packageName]['dev_requirement']) || $installed['versions'][$packageName]['dev_requirement'] === false;\\n            }\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Checks whether the given package satisfies a version constraint\\n     *\\n     * e.g. If you want to know whether version 2.3+ of package foo\/bar is installed, you would call:\\n     *\\n     *   Composer\\\\InstalledVersions::satisfies(new VersionParser, 'foo\/bar', '^2.3')\\n     *\\n     * @param  VersionParser $parser      Install composer\/semver to have access to this class and functionality\\n     * @param  string        $packageName\\n     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer\/semver is required by your package\\n     * @return bool\\n     *\/\\n    public static function satisfies(VersionParser $parser, $packageName, $constraint)\\n    {\\n        $constraint = $parser->parseConstraints((string) $constraint);\\n        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));\\n\\n        return $provided->matches($constraint);\\n    }\\n\\n    \/**\\n     * Returns a version constraint representing all the range(s) which are installed for a given package\\n     *\\n     * It is easier to use this via isInstalled() with the $constraint argument if you need to check\\n     * whether a given version of a package is installed, and not just whether it exists\\n     *\\n     * @param  string $packageName\\n     * @return string Version constraint usable with composer\/semver\\n     *\/\\n    public static function getVersionRanges($packageName)\\n    {\\n        foreach (self::getInstalled() as $installed) {\\n            if (!isset($installed['versions'][$packageName])) {\\n                continue;\\n            }\\n\\n            $ranges = array();\\n            if (isset($installed['versions'][$packageName]['pretty_version'])) {\\n                $ranges[] = $installed['versions'][$packageName]['pretty_version'];\\n            }\\n            if (array_key_exists('aliases', $installed['versions'][$packageName])) {\\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\\n            }\\n            if (array_key_exists('replaced', $installed['versions'][$packageName])) {\\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\\n            }\\n            if (array_key_exists('provided', $installed['versions'][$packageName])) {\\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\\n            }\\n\\n            return implode(' || ', $ranges);\\n        }\\n\\n        throw new \\\\OutOfBoundsException('Package \\\"' . $packageName . '\\\" is not installed');\\n    }\\n\\n    \/**\\n     * @param  string      $packageName\\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\\n     *\/\\n    public static function getVersion($packageName)\\n    {\\n        foreach (self::getInstalled() as $installed) {\\n            if (!isset($installed['versions'][$packageName])) {\\n                continue;\\n            }\\n\\n            if (!isset($installed['versions'][$packageName]['version'])) {\\n                return null;\\n            }\\n\\n            return $installed['versions'][$packageName]['version'];\\n        }\\n\\n        throw new \\\\OutOfBoundsException('Package \\\"' . $packageName . '\\\" is not installed');\\n    }\\n\\n    \/**\\n     * @param  string      $packageName\\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\\n     *\/\\n    public static function getPrettyVersion($packageName)\\n    {\\n        foreach (self::getInstalled() as $installed) {\\n            if (!isset($installed['versions'][$packageName])) {\\n                continue;\\n            }\\n\\n            if (!isset($installed['versions'][$packageName]['pretty_version'])) {\\n                return null;\\n            }\\n\\n            return $installed['versions'][$packageName]['pretty_version'];\\n        }\\n\\n        throw new \\\\OutOfBoundsException('Package \\\"' . $packageName . '\\\" is not installed');\\n    }\\n\\n    \/**\\n     * @param  string      $packageName\\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference\\n     *\/\\n    public static function getReference($packageName)\\n    {\\n        foreach (self::getInstalled() as $installed) {\\n            if (!isset($installed['versions'][$packageName])) {\\n                continue;\\n            }\\n\\n            if (!isset($installed['versions'][$packageName]['reference'])) {\\n                return null;\\n            }\\n\\n            return $installed['versions'][$packageName]['reference'];\\n        }\\n\\n        throw new \\\\OutOfBoundsException('Package \\\"' . $packageName . '\\\" is not installed');\\n    }\\n\\n    \/**\\n     * @param  string      $packageName\\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.\\n     *\/\\n    public static function getInstallPath($packageName)\\n    {\\n        foreach (self::getInstalled() as $installed) {\\n            if (!isset($installed['versions'][$packageName])) {\\n                continue;\\n            }\\n\\n            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;\\n        }\\n\\n        throw new \\\\OutOfBoundsException('Package \\\"' . $packageName . '\\\" is not installed');\\n    }\\n\\n    \/**\\n     * @return array\\n     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}\\n     *\/\\n    public static function getRootPackage()\\n    {\\n        $installed = self::getInstalled();\\n\\n        return $installed[0]['root'];\\n    }\\n\\n    \/**\\n     * Returns the raw installed.php data for custom implementations\\n     *\\n     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.\\n     * @return array[]\\n     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}\\n     *\/\\n    public static function getRawData()\\n    {\\n        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);\\n\\n        if (null === self::$installed) {\\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\\n            if (substr(__DIR__, -8, 1) !== 'C') {\\n                self::$installed = include __DIR__ . '\/installed.php';\\n            } else {\\n                self::$installed = array();\\n            }\\n        }\\n\\n        return self::$installed;\\n    }\\n\\n    \/**\\n     * Returns the raw data of all installed.php which are currently loaded for custom implementations\\n     *\\n     * @return array[]\\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\\n     *\/\\n    public static function getAllRawData()\\n    {\\n        return self::getInstalled();\\n    }\\n\\n    \/**\\n     * Lets you reload the static array from another file\\n     *\\n     * This is only useful for complex integrations in which a project needs to use\\n     * this class but then also needs to execute another project's autoloader in process,\\n     * and wants to ensure both projects have access to their version of installed.php.\\n     *\\n     * A typical case would be PHPUnit, where it would need to make sure it reads all\\n     * the data it needs from this class, then call reload() with\\n     * `require $CWD\/vendor\/composer\/installed.php` (or similar) as input to make sure\\n     * the project in which it runs can then also use this class safely, without\\n     * interference between PHPUnit's dependencies and the project's dependencies.\\n     *\\n     * @param  array[] $data A vendor\/composer\/installed.php data set\\n     * @return void\\n     *\\n     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data\\n     *\/\\n    public static function reload($data)\\n    {\\n        self::$installed = $data;\\n        self::$installedByVendor = array();\\n\\n        \/\/ when using reload, we disable the duplicate protection to ensure that self::$installed data is\\n        \/\/ always returned, but we cannot know whether it comes from the installed.php in __DIR__ or not,\\n        \/\/ so we have to assume it does not, and that may result in duplicate data being returned when listing\\n        \/\/ all installed packages for example\\n        self::$installedIsLocalDir = false;\\n    }\\n\\n    \/**\\n     * @return string\\n     *\/\\n    private static function getSelfDir()\\n    {\\n        if (self::$selfDir === null) {\\n            self::$selfDir = strtr(__DIR__, '\\\\\\\\', '\/');\\n        }\\n\\n        return self::$selfDir;\\n    }\\n\\n    \/**\\n     * @return array[]\\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\\n     *\/\\n    private static function getInstalled()\\n    {\\n        if (null === self::$canGetVendors) {\\n            self::$canGetVendors = method_exists('Composer\\\\Autoload\\\\ClassLoader', 'getRegisteredLoaders');\\n        }\\n\\n        $installed = array();\\n        $copiedLocalDir = false;\\n\\n        if (self::$canGetVendors) {\\n            $selfDir = self::getSelfDir();\\n            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\\n                $vendorDir = strtr($vendorDir, '\\\\\\\\', '\/');\\n                if (isset(self::$installedByVendor[$vendorDir])) {\\n                    $installed[] = self::$installedByVendor[$vendorDir];\\n                } elseif (is_file($vendorDir.'\/composer\/installed.php')) {\\n                    \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\\n                    $required = require $vendorDir.'\/composer\/installed.php';\\n                    self::$installedByVendor[$vendorDir] = $required;\\n                    $installed[] = $required;\\n                    if (self::$installed === null && $vendorDir.'\/composer' === $selfDir) {\\n                        self::$installed = $required;\\n                        self::$installedIsLocalDir = true;\\n                    }\\n                }\\n                if (self::$installedIsLocalDir && $vendorDir.'\/composer' === $selfDir) {\\n                    $copiedLocalDir = true;\\n                }\\n            }\\n        }\\n\\n        if (null === self::$installed) {\\n            \/\/ only require the installed.php file if this file is loaded from its dumped location,\\n            \/\/ and not from its source location in the composer\/composer package, see https:\/\/github.com\/composer\/composer\/issues\/9937\\n            if (substr(__DIR__, -8, 1) !== 'C') {\\n                \/** @var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $required *\/\\n                $required = require __DIR__ . '\/installed.php';\\n                self::$installed = $required;\\n            } else {\\n                self::$installed = array();\\n            }\\n        }\\n\\n        if (self::$installed !== array() && !$copiedLocalDir) {\\n            $installed[] = self::$installed;\\n        }\\n\\n        return $installed;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/autoload_classmap.php\",\"ext\":\"php\",\"size\":7507,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ autoload_classmap.php @generated by Composer\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir = dirname($vendorDir);\\n\\nreturn array(\\n    'Attribute' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/Attribute.php',\\n    'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\AutoloadGenerator' => $vendorDir . '\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php',\\n    'Composer\\\\\\\\InstalledVersions' => $vendorDir . '\/composer\/InstalledVersions.php',\\n    'DateError' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateError.php',\\n    'DateException' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateException.php',\\n    'DateInvalidOperationException' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateInvalidOperationException.php',\\n    'DateInvalidTimeZoneException' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateInvalidTimeZoneException.php',\\n    'DateMalformedIntervalStringException' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedIntervalStringException.php',\\n    'DateMalformedPeriodStringException' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedPeriodStringException.php',\\n    'DateMalformedStringException' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedStringException.php',\\n    'DateObjectError' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateObjectError.php',\\n    'DateRangeError' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateRangeError.php',\\n    'Nette\\\\\\\\ArgumentOutOfRangeException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\DeprecatedException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\DirectoryNotFoundException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\FileNotFoundException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\HtmlStringable' => $vendorDir . '\/nette\/utils\/src\/HtmlStringable.php',\\n    'Nette\\\\\\\\IOException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\InvalidArgumentException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\InvalidStateException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\Iterators\\\\\\\\CachingIterator' => $vendorDir . '\/nette\/utils\/src\/Iterators\/CachingIterator.php',\\n    'Nette\\\\\\\\Iterators\\\\\\\\Mapper' => $vendorDir . '\/nette\/utils\/src\/Iterators\/Mapper.php',\\n    'Nette\\\\\\\\Localization\\\\\\\\ITranslator' => $vendorDir . '\/nette\/utils\/src\/compatibility.php',\\n    'Nette\\\\\\\\Localization\\\\\\\\Translator' => $vendorDir . '\/nette\/utils\/src\/Translator.php',\\n    'Nette\\\\\\\\MemberAccessException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\NotImplementedException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\NotSupportedException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\OutOfRangeException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Context' => $vendorDir . '\/nette\/schema\/src\/Schema\/Context.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\DynamicParameter' => $vendorDir . '\/nette\/schema\/src\/Schema\/DynamicParameter.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\AnyOf' => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/AnyOf.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Base' => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/Base.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Structure' => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/Structure.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Type' => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/Type.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Expect' => $vendorDir . '\/nette\/schema\/src\/Schema\/Expect.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Helpers' => $vendorDir . '\/nette\/schema\/src\/Schema\/Helpers.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Message' => $vendorDir . '\/nette\/schema\/src\/Schema\/Message.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Processor' => $vendorDir . '\/nette\/schema\/src\/Schema\/Processor.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\Schema' => $vendorDir . '\/nette\/schema\/src\/Schema\/Schema.php',\\n    'Nette\\\\\\\\Schema\\\\\\\\ValidationException' => $vendorDir . '\/nette\/schema\/src\/Schema\/ValidationException.php',\\n    'Nette\\\\\\\\ShouldNotHappenException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\SmartObject' => $vendorDir . '\/nette\/utils\/src\/SmartObject.php',\\n    'Nette\\\\\\\\StaticClass' => $vendorDir . '\/nette\/utils\/src\/StaticClass.php',\\n    'Nette\\\\\\\\UnexpectedValueException' => $vendorDir . '\/nette\/utils\/src\/exceptions.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ArrayHash' => $vendorDir . '\/nette\/utils\/src\/Utils\/ArrayHash.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ArrayList' => $vendorDir . '\/nette\/utils\/src\/Utils\/ArrayList.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Arrays' => $vendorDir . '\/nette\/utils\/src\/Utils\/Arrays.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\AssertionException' => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Callback' => $vendorDir . '\/nette\/utils\/src\/Utils\/Callback.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\DateTime' => $vendorDir . '\/nette\/utils\/src\/Utils\/DateTime.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\FileInfo' => $vendorDir . '\/nette\/utils\/src\/Utils\/FileInfo.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\FileSystem' => $vendorDir . '\/nette\/utils\/src\/Utils\/FileSystem.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Finder' => $vendorDir . '\/nette\/utils\/src\/Utils\/Finder.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Floats' => $vendorDir . '\/nette\/utils\/src\/Utils\/Floats.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Helpers' => $vendorDir . '\/nette\/utils\/src\/Utils\/Helpers.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Html' => $vendorDir . '\/nette\/utils\/src\/Utils\/Html.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\IHtmlString' => $vendorDir . '\/nette\/utils\/src\/compatibility.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Image' => $vendorDir . '\/nette\/utils\/src\/Utils\/Image.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ImageColor' => $vendorDir . '\/nette\/utils\/src\/Utils\/ImageColor.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ImageException' => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ImageType' => $vendorDir . '\/nette\/utils\/src\/Utils\/ImageType.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Iterables' => $vendorDir . '\/nette\/utils\/src\/Utils\/Iterables.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Json' => $vendorDir . '\/nette\/utils\/src\/Utils\/Json.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\JsonException' => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ObjectHelpers' => $vendorDir . '\/nette\/utils\/src\/Utils\/ObjectHelpers.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Paginator' => $vendorDir . '\/nette\/utils\/src\/Utils\/Paginator.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Random' => $vendorDir . '\/nette\/utils\/src\/Utils\/Random.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Reflection' => $vendorDir . '\/nette\/utils\/src\/Utils\/Reflection.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\ReflectionMethod' => $vendorDir . '\/nette\/utils\/src\/Utils\/ReflectionMethod.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\RegexpException' => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Strings' => $vendorDir . '\/nette\/utils\/src\/Utils\/Strings.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Type' => $vendorDir . '\/nette\/utils\/src\/Utils\/Type.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\UnknownImageFileException' => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n    'Nette\\\\\\\\Utils\\\\\\\\Validators' => $vendorDir . '\/nette\/utils\/src\/Utils\/Validators.php',\\n    'Override' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/Override.php',\\n    'PhpToken' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/PhpToken.php',\\n    'SQLite3Exception' => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/SQLite3Exception.php',\\n    'Stringable' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/Stringable.php',\\n    'UnhandledMatchError' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/UnhandledMatchError.php',\\n    'ValueError' => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/ValueError.php',\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/installed.php\",\"ext\":\"php\",\"size\":20528,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php return array(\\n    'root' => array(\\n        'name' => '__root__',\\n        'pretty_version' => 'dev-main',\\n        'version' => 'dev-main',\\n        'reference' => 'a851785b77fdffe29cf50c39ac91c3e62458c0bc',\\n        'type' => 'library',\\n        'install_path' => __DIR__ . '\/..\/..\/',\\n        'aliases' => array(),\\n        'dev' => false,\\n    ),\\n    'versions' => array(\\n        '__root__' => array(\\n            'pretty_version' => 'dev-main',\\n            'version' => 'dev-main',\\n            'reference' => 'a851785b77fdffe29cf50c39ac91c3e62458c0bc',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/..\/',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'alleyinteractive\/composer-wordpress-autoloader' => array(\\n            'pretty_version' => 'v1.2.0',\\n            'version' => '1.2.0.0',\\n            'reference' => 'a3a401b3d755d08f7689d0c5f1566809ea469f90',\\n            'type' => 'composer-plugin',\\n            'install_path' => __DIR__ . '\/..\/alleyinteractive\/composer-wordpress-autoloader',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'alleyinteractive\/wordpress-autoloader' => array(\\n            'pretty_version' => 'v1.2.1',\\n            'version' => '1.2.1.0',\\n            'reference' => '570a0e911f806448d2709864729a53731c49fcd9',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/alleyinteractive\/wordpress-autoloader',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'alleyinteractive\/wp-block-converter' => array(\\n            'pretty_version' => 'v1.6.0',\\n            'version' => '1.6.0.0',\\n            'reference' => '6d7c381545c93ca5d6398fa48cebac94d9aa337b',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/alleyinteractive\/wp-block-converter',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'automattic\/jetpack-autoloader' => array(\\n            'pretty_version' => 'dev-trunk',\\n            'version' => 'dev-trunk',\\n            'reference' => '272f0a1e119175623b440699e7af79de2a6ed44b',\\n            'type' => 'composer-plugin',\\n            'install_path' => __DIR__ . '\/..\/automattic\/jetpack-autoloader',\\n            'aliases' => array(\\n                0 => '5.0.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'brick\/math' => array(\\n            'pretty_version' => '0.13.1',\\n            'version' => '0.13.1.0',\\n            'reference' => 'fc7ed316430118cc7836bf45faff18d5dfc8de04',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/brick\/math',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'carbonphp\/carbon-doctrine-types' => array(\\n            'pretty_version' => '3.2.0',\\n            'version' => '3.2.0.0',\\n            'reference' => '18ba5ddfec8976260ead6e866180bd5d2f71aa1d',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/carbonphp\/carbon-doctrine-types',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'dflydev\/dot-access-data' => array(\\n            'pretty_version' => 'dev-main',\\n            'version' => 'dev-main',\\n            'reference' => 'a23a2bf4f31d3518f3ecb38660c95715dfead60f',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/dflydev\/dot-access-data',\\n            'aliases' => array(\\n                0 => '3.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'doctrine\/inflector' => array(\\n            'pretty_version' => '2.2.x-dev',\\n            'version' => '2.2.9999999.9999999-dev',\\n            'reference' => '6d6c96277ea252fc1304627204c3d5e6e15faa3b',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/doctrine\/inflector',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'graham-campbell\/result-type' => array(\\n            'pretty_version' => '1.1.x-dev',\\n            'version' => '1.1.9999999.9999999-dev',\\n            'reference' => 'bdd52c41913b414f4ca7dcb34482babcd0e9bd58',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/graham-campbell\/result-type',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'hostinger\/hostinger-wp-amplitude' => array(\\n            'pretty_version' => '1.0.15',\\n            'version' => '1.0.15.0',\\n            'reference' => 'dab31906350046bba3798b6947ce1e82d9c6f236',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/hostinger\/hostinger-wp-amplitude',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'hostinger\/hostinger-wp-helper' => array(\\n            'pretty_version' => '1.0.12',\\n            'version' => '1.0.12.0',\\n            'reference' => 'f943461ffdd9df60c84e4d808ff1dd967dfa790d',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/hostinger\/hostinger-wp-helper',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'hostinger\/hostinger-wp-menu-manager' => array(\\n            'pretty_version' => '1.2.19',\\n            'version' => '1.2.19.0',\\n            'reference' => 'e5be32b03e3dc96746214d4a967b33fea0732062',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/hostinger\/hostinger-wp-menu-manager',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'hostinger\/hostinger-wp-surveys' => array(\\n            'pretty_version' => '1.1.15',\\n            'version' => '1.1.15.0',\\n            'reference' => 'c27cc360f85cbc30f572b8e8bca9774487e64cfb',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/hostinger\/hostinger-wp-surveys',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'league\/commonmark' => array(\\n            'pretty_version' => 'dev-main',\\n            'version' => 'dev-main',\\n            'reference' => '6fbb36d44824ed4091adbcf4c7d4a3923cdb3405',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/league\/commonmark',\\n            'aliases' => array(\\n                0 => '2.8.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'league\/config' => array(\\n            'pretty_version' => 'dev-main',\\n            'version' => 'dev-main',\\n            'reference' => 'e6df2a81a60d3054d96cd69eef0d2d472441f9bf',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/league\/config',\\n            'aliases' => array(\\n                0 => '1.2.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'league\/uri' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => 'b83c519cfa89342c1170230f63a9578a79bc4252',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/league\/uri',\\n            'aliases' => array(\\n                0 => '7.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'league\/uri-interfaces' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => '6782d6f28fb5d503621270569310e9181a6c9227',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/league\/uri-interfaces',\\n            'aliases' => array(\\n                0 => '7.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'mantle-framework\/contracts' => array(\\n            'pretty_version' => '1.x-dev',\\n            'version' => '1.9999999.9999999.9999999-dev',\\n            'reference' => 'f6302ec9d0b04185ed502adf52aacc7dae3d0797',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/mantle-framework\/contracts',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'mantle-framework\/support' => array(\\n            'pretty_version' => '1.x-dev',\\n            'version' => '1.9999999.9999999.9999999-dev',\\n            'reference' => 'b3cfa8ef22d1ce9ed248a7cc380d037baa7b559e',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/mantle-framework\/support',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'masterminds\/html5' => array(\\n            'pretty_version' => '2.10.0',\\n            'version' => '2.10.0.0',\\n            'reference' => 'fcf91eb64359852f00d921887b219479b4f21251',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/masterminds\/html5',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'monolog\/monolog' => array(\\n            'pretty_version' => '2.x-dev',\\n            'version' => '2.9999999.9999999.9999999-dev',\\n            'reference' => 'cd82b5069148dd811ef54b4b92ce1b3aad84209b',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/monolog\/monolog',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'nesbot\/carbon' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => '76b5c07b8a9d2025ed1610e14cef1f3fd6ad2c24',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/nesbot\/carbon',\\n            'aliases' => array(\\n                0 => '3.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'nette\/schema' => array(\\n            'pretty_version' => 'v1.3.x-dev',\\n            'version' => '1.3.9999999.9999999-dev',\\n            'reference' => '8c36c043c775254e7a27987f82336e36ca923e0a',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/nette\/schema',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'nette\/utils' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => '8ee89b19f7a1adcaa59c4aaaf6b5525588a40d4e',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/nette\/utils',\\n            'aliases' => array(\\n                0 => '4.1.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'phpoption\/phpoption' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => 'e3fac8b24f56113f7cb96af14958c0dd16330f54',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/phpoption\/phpoption',\\n            'aliases' => array(\\n                0 => '1.9.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/clock' => array(\\n            'pretty_version' => '1.0.0',\\n            'version' => '1.0.0.0',\\n            'reference' => 'e41a24703d4560fd0acb709162f73b8adfc3aa0d',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/psr\/clock',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/clock-implementation' => array(\\n            'dev_requirement' => false,\\n            'provided' => array(\\n                0 => '1.0',\\n            ),\\n        ),\\n        'psr\/container' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => '707984727bd5b2b670e59559d3ed2500240cf875',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/psr\/container',\\n            'aliases' => array(\\n                0 => '2.0.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/container-implementation' => array(\\n            'dev_requirement' => false,\\n            'provided' => array(\\n                0 => '1.1|2.0',\\n            ),\\n        ),\\n        'psr\/event-dispatcher' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => 'bbd9eacc080d33861e5b5c75b3b8c4d7e6d01874',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/psr\/event-dispatcher',\\n            'aliases' => array(\\n                0 => '1.0.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/http-factory' => array(\\n            'pretty_version' => '1.1.0',\\n            'version' => '1.1.0.0',\\n            'reference' => '2b4765fddfe3b508ac62f829e852b1501d3f6e8a',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/psr\/http-factory',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/http-message' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => '402d35bcb92c70c026d1a6a9883f06b2ead23d71',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/psr\/http-message',\\n            'aliases' => array(\\n                0 => '2.0.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/log' => array(\\n            'pretty_version' => '2.0.0',\\n            'version' => '2.0.0.0',\\n            'reference' => 'ef29f6d262798707a9edd554e2b82517ef3a9376',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/psr\/log',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'psr\/log-implementation' => array(\\n            'dev_requirement' => false,\\n            'provided' => array(\\n                0 => '1.0.0 || 2.0.0 || 3.0.0',\\n            ),\\n        ),\\n        'ramsey\/collection' => array(\\n            'pretty_version' => '2.1.1',\\n            'version' => '2.1.1.0',\\n            'reference' => '344572933ad0181accbf4ba763e85a0306a8c5e2',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/ramsey\/collection',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'ramsey\/uuid' => array(\\n            'pretty_version' => '4.x-dev',\\n            'version' => '4.9999999.9999999.9999999-dev',\\n            'reference' => '101bb3a166ce6cb32907f697ac26be9b2cb8be2f',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/ramsey\/uuid',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'rhumsaa\/uuid' => array(\\n            'dev_requirement' => false,\\n            'replaced' => array(\\n                0 => '4.x-dev',\\n            ),\\n        ),\\n        'symfony\/clock' => array(\\n            'pretty_version' => '7.4.x-dev',\\n            'version' => '7.4.9999999.9999999-dev',\\n            'reference' => '9a2e07a0fcc4c76cc356e28942e515a3b388c8cb',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/clock',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/deprecation-contracts' => array(\\n            'pretty_version' => 'dev-main',\\n            'version' => 'dev-main',\\n            'reference' => '63afe740e99a13ba87ec199bb07bbdee937a5b62',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/deprecation-contracts',\\n            'aliases' => array(\\n                0 => '3.6.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/dom-crawler' => array(\\n            'pretty_version' => '7.4.x-dev',\\n            'version' => '7.4.9999999.9999999-dev',\\n            'reference' => '8c1a2e2eecf8de1a904fa699d1b12ba2d1237f3f',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/dom-crawler',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/finder' => array(\\n            'pretty_version' => '7.4.x-dev',\\n            'version' => '7.4.9999999.9999999-dev',\\n            'reference' => '57861c3e46d9c85d89b73588afae62049ceafc5e',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/finder',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/polyfill-ctype' => array(\\n            'pretty_version' => '1.x-dev',\\n            'version' => '1.9999999.9999999.9999999-dev',\\n            'reference' => 'a3cc8b044a6ea513310cbd48ef7333b384945638',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-ctype',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/polyfill-mbstring' => array(\\n            'pretty_version' => '1.x-dev',\\n            'version' => '1.9999999.9999999.9999999-dev',\\n            'reference' => '6d857f4d76bd4b343eac26d6b539585d2bc56493',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-mbstring',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/polyfill-php80' => array(\\n            'pretty_version' => '1.x-dev',\\n            'version' => '1.9999999.9999999.9999999-dev',\\n            'reference' => '0cc9dd0f17f61d8131e7df6b84bd344899fe2608',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-php80',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/polyfill-php83' => array(\\n            'pretty_version' => '1.x-dev',\\n            'version' => '1.9999999.9999999.9999999-dev',\\n            'reference' => '17f6f9a6b1735c0f163024d959f700cfbc5155e5',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/polyfill-php83',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/translation' => array(\\n            'pretty_version' => '7.4.x-dev',\\n            'version' => '7.4.9999999.9999999-dev',\\n            'reference' => 'cfd2401d28ee4b92a54baafb3af91ba5bef2e76b',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/translation',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/translation-contracts' => array(\\n            'pretty_version' => 'dev-main',\\n            'version' => 'dev-main',\\n            'reference' => '65a8bc82080447fae78373aa10f8d13b38338977',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/translation-contracts',\\n            'aliases' => array(\\n                0 => '3.6.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'symfony\/translation-implementation' => array(\\n            'dev_requirement' => false,\\n            'provided' => array(\\n                0 => '2.3|3.0',\\n            ),\\n        ),\\n        'symfony\/var-dumper' => array(\\n            'pretty_version' => '7.4.x-dev',\\n            'version' => '7.4.9999999.9999999-dev',\\n            'reference' => '2492ca878da0addda89d9edefc3e4bad973efca2',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/symfony\/var-dumper',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'vlucas\/phpdotenv' => array(\\n            'pretty_version' => 'dev-master',\\n            'version' => 'dev-master',\\n            'reference' => '24ac4c74f91ee2c193fa1aaa5c249cb0822809af',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/vlucas\/phpdotenv',\\n            'aliases' => array(\\n                0 => '5.6.x-dev',\\n            ),\\n            'dev_requirement' => false,\\n        ),\\n        'voku\/portable-ascii' => array(\\n            'pretty_version' => '2.0.3',\\n            'version' => '2.0.3.0',\\n            'reference' => 'b1d923f88091c6bf09699efcd7c8a1b1bfd7351d',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/voku\/portable-ascii',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n        'yahnis-elsts\/plugin-update-checker' => array(\\n            'pretty_version' => 'v5.6',\\n            'version' => '5.6.0.0',\\n            'reference' => 'a2db6871deec989a74e1f90fafc6d58ae526a879',\\n            'type' => 'library',\\n            'install_path' => __DIR__ . '\/..\/yahnis-elsts\/plugin-update-checker',\\n            'aliases' => array(),\\n            'dev_requirement' => false,\\n        ),\\n    ),\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/autoload_namespaces.php\",\"ext\":\"php\",\"size\":139,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ autoload_namespaces.php @generated by Composer\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir = dirname($vendorDir);\\n\\nreturn array(\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/ClassLoader.php\",\"ext\":\"php\",\"size\":16378,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/*\\n * This file is part of Composer.\\n *\\n * (c) Nils Adermann <naderman@naderman.de>\\n *     Jordi Boggiano <j.boggiano@seld.be>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Composer\\\\Autoload;\\n\\n\/**\\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\\n *\\n *     $loader = new \\\\Composer\\\\Autoload\\\\ClassLoader();\\n *\\n *     \/\/ register classes with namespaces\\n *     $loader->add('Symfony\\\\Component', __DIR__.'\/component');\\n *     $loader->add('Symfony',           __DIR__.'\/framework');\\n *\\n *     \/\/ activate the autoloader\\n *     $loader->register();\\n *\\n *     \/\/ to enable searching the include path (eg. for PEAR packages)\\n *     $loader->setUseIncludePath(true);\\n *\\n * In this example, if you try to use a class in the Symfony\\\\Component\\n * namespace or one of its children (Symfony\\\\Component\\\\Console for instance),\\n * the autoloader will first look for the class under the component\/\\n * directory, and it will then fallback to the framework\/ directory if not\\n * found before giving up.\\n *\\n * This class is loosely based on the Symfony UniversalClassLoader.\\n *\\n * @author Fabien Potencier <fabien@symfony.com>\\n * @author Jordi Boggiano <j.boggiano@seld.be>\\n * @see    https:\/\/www.php-fig.org\/psr\/psr-0\/\\n * @see    https:\/\/www.php-fig.org\/psr\/psr-4\/\\n *\/\\nclass ClassLoader\\n{\\n    \/** @var \\\\Closure(string):void *\/\\n    private static $includeFile;\\n\\n    \/** @var string|null *\/\\n    private $vendorDir;\\n\\n    \/\/ PSR-4\\n    \/**\\n     * @var array<string, array<string, int>>\\n     *\/\\n    private $prefixLengthsPsr4 = array();\\n    \/**\\n     * @var array<string, list<string>>\\n     *\/\\n    private $prefixDirsPsr4 = array();\\n    \/**\\n     * @var list<string>\\n     *\/\\n    private $fallbackDirsPsr4 = array();\\n\\n    \/\/ PSR-0\\n    \/**\\n     * List of PSR-0 prefixes\\n     *\\n     * Structured as array('F (first letter)' => array('Foo\\\\Bar (full prefix)' => array('path', 'path2')))\\n     *\\n     * @var array<string, array<string, list<string>>>\\n     *\/\\n    private $prefixesPsr0 = array();\\n    \/**\\n     * @var list<string>\\n     *\/\\n    private $fallbackDirsPsr0 = array();\\n\\n    \/** @var bool *\/\\n    private $useIncludePath = false;\\n\\n    \/**\\n     * @var array<string, string>\\n     *\/\\n    private $classMap = array();\\n\\n    \/** @var bool *\/\\n    private $classMapAuthoritative = false;\\n\\n    \/**\\n     * @var array<string, bool>\\n     *\/\\n    private $missingClasses = array();\\n\\n    \/** @var string|null *\/\\n    private $apcuPrefix;\\n\\n    \/**\\n     * @var array<string, self>\\n     *\/\\n    private static $registeredLoaders = array();\\n\\n    \/**\\n     * @param string|null $vendorDir\\n     *\/\\n    public function __construct($vendorDir = null)\\n    {\\n        $this->vendorDir = $vendorDir;\\n        self::initializeIncludeClosure();\\n    }\\n\\n    \/**\\n     * @return array<string, list<string>>\\n     *\/\\n    public function getPrefixes()\\n    {\\n        if (!empty($this->prefixesPsr0)) {\\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\\n        }\\n\\n        return array();\\n    }\\n\\n    \/**\\n     * @return array<string, list<string>>\\n     *\/\\n    public function getPrefixesPsr4()\\n    {\\n        return $this->prefixDirsPsr4;\\n    }\\n\\n    \/**\\n     * @return list<string>\\n     *\/\\n    public function getFallbackDirs()\\n    {\\n        return $this->fallbackDirsPsr0;\\n    }\\n\\n    \/**\\n     * @return list<string>\\n     *\/\\n    public function getFallbackDirsPsr4()\\n    {\\n        return $this->fallbackDirsPsr4;\\n    }\\n\\n    \/**\\n     * @return array<string, string> Array of classname => path\\n     *\/\\n    public function getClassMap()\\n    {\\n        return $this->classMap;\\n    }\\n\\n    \/**\\n     * @param array<string, string> $classMap Class to filename map\\n     *\\n     * @return void\\n     *\/\\n    public function addClassMap(array $classMap)\\n    {\\n        if ($this->classMap) {\\n            $this->classMap = array_merge($this->classMap, $classMap);\\n        } else {\\n            $this->classMap = $classMap;\\n        }\\n    }\\n\\n    \/**\\n     * Registers a set of PSR-0 directories for a given prefix, either\\n     * appending or prepending to the ones previously set for this prefix.\\n     *\\n     * @param string              $prefix  The prefix\\n     * @param list<string>|string $paths   The PSR-0 root directories\\n     * @param bool                $prepend Whether to prepend the directories\\n     *\\n     * @return void\\n     *\/\\n    public function add($prefix, $paths, $prepend = false)\\n    {\\n        $paths = (array) $paths;\\n        if (!$prefix) {\\n            if ($prepend) {\\n                $this->fallbackDirsPsr0 = array_merge(\\n                    $paths,\\n                    $this->fallbackDirsPsr0\\n                );\\n            } else {\\n                $this->fallbackDirsPsr0 = array_merge(\\n                    $this->fallbackDirsPsr0,\\n                    $paths\\n                );\\n            }\\n\\n            return;\\n        }\\n\\n        $first = $prefix[0];\\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\\n            $this->prefixesPsr0[$first][$prefix] = $paths;\\n\\n            return;\\n        }\\n        if ($prepend) {\\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\\n                $paths,\\n                $this->prefixesPsr0[$first][$prefix]\\n            );\\n        } else {\\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\\n                $this->prefixesPsr0[$first][$prefix],\\n                $paths\\n            );\\n        }\\n    }\\n\\n    \/**\\n     * Registers a set of PSR-4 directories for a given namespace, either\\n     * appending or prepending to the ones previously set for this namespace.\\n     *\\n     * @param string              $prefix  The prefix\/namespace, with trailing '\\\\\\\\'\\n     * @param list<string>|string $paths   The PSR-4 base directories\\n     * @param bool                $prepend Whether to prepend the directories\\n     *\\n     * @throws \\\\InvalidArgumentException\\n     *\\n     * @return void\\n     *\/\\n    public function addPsr4($prefix, $paths, $prepend = false)\\n    {\\n        $paths = (array) $paths;\\n        if (!$prefix) {\\n            \/\/ Register directories for the root namespace.\\n            if ($prepend) {\\n                $this->fallbackDirsPsr4 = array_merge(\\n                    $paths,\\n                    $this->fallbackDirsPsr4\\n                );\\n            } else {\\n                $this->fallbackDirsPsr4 = array_merge(\\n                    $this->fallbackDirsPsr4,\\n                    $paths\\n                );\\n            }\\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\\n            \/\/ Register directories for a new namespace.\\n            $length = strlen($prefix);\\n            if ('\\\\\\\\' !== $prefix[$length - 1]) {\\n                throw new \\\\InvalidArgumentException(\\\"A non-empty PSR-4 prefix must end with a namespace separator.\\\");\\n            }\\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\\n            $this->prefixDirsPsr4[$prefix] = $paths;\\n        } elseif ($prepend) {\\n            \/\/ Prepend directories for an already registered namespace.\\n            $this->prefixDirsPsr4[$prefix] = array_merge(\\n                $paths,\\n                $this->prefixDirsPsr4[$prefix]\\n            );\\n        } else {\\n            \/\/ Append directories for an already registered namespace.\\n            $this->prefixDirsPsr4[$prefix] = array_merge(\\n                $this->prefixDirsPsr4[$prefix],\\n                $paths\\n            );\\n        }\\n    }\\n\\n    \/**\\n     * Registers a set of PSR-0 directories for a given prefix,\\n     * replacing any others previously set for this prefix.\\n     *\\n     * @param string              $prefix The prefix\\n     * @param list<string>|string $paths  The PSR-0 base directories\\n     *\\n     * @return void\\n     *\/\\n    public function set($prefix, $paths)\\n    {\\n        if (!$prefix) {\\n            $this->fallbackDirsPsr0 = (array) $paths;\\n        } else {\\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\\n        }\\n    }\\n\\n    \/**\\n     * Registers a set of PSR-4 directories for a given namespace,\\n     * replacing any others previously set for this namespace.\\n     *\\n     * @param string              $prefix The prefix\/namespace, with trailing '\\\\\\\\'\\n     * @param list<string>|string $paths  The PSR-4 base directories\\n     *\\n     * @throws \\\\InvalidArgumentException\\n     *\\n     * @return void\\n     *\/\\n    public function setPsr4($prefix, $paths)\\n    {\\n        if (!$prefix) {\\n            $this->fallbackDirsPsr4 = (array) $paths;\\n        } else {\\n            $length = strlen($prefix);\\n            if ('\\\\\\\\' !== $prefix[$length - 1]) {\\n                throw new \\\\InvalidArgumentException(\\\"A non-empty PSR-4 prefix must end with a namespace separator.\\\");\\n            }\\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\\n        }\\n    }\\n\\n    \/**\\n     * Turns on searching the include path for class files.\\n     *\\n     * @param bool $useIncludePath\\n     *\\n     * @return void\\n     *\/\\n    public function setUseIncludePath($useIncludePath)\\n    {\\n        $this->useIncludePath = $useIncludePath;\\n    }\\n\\n    \/**\\n     * Can be used to check if the autoloader uses the include path to check\\n     * for classes.\\n     *\\n     * @return bool\\n     *\/\\n    public function getUseIncludePath()\\n    {\\n        return $this->useIncludePath;\\n    }\\n\\n    \/**\\n     * Turns off searching the prefix and fallback directories for classes\\n     * that have not been registered with the class map.\\n     *\\n     * @param bool $classMapAuthoritative\\n     *\\n     * @return void\\n     *\/\\n    public function setClassMapAuthoritative($classMapAuthoritative)\\n    {\\n        $this->classMapAuthoritative = $classMapAuthoritative;\\n    }\\n\\n    \/**\\n     * Should class lookup fail if not found in the current class map?\\n     *\\n     * @return bool\\n     *\/\\n    public function isClassMapAuthoritative()\\n    {\\n        return $this->classMapAuthoritative;\\n    }\\n\\n    \/**\\n     * APCu prefix to use to cache found\/not-found classes, if the extension is enabled.\\n     *\\n     * @param string|null $apcuPrefix\\n     *\\n     * @return void\\n     *\/\\n    public function setApcuPrefix($apcuPrefix)\\n    {\\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\\n    }\\n\\n    \/**\\n     * The APCu prefix in use, or null if APCu caching is not enabled.\\n     *\\n     * @return string|null\\n     *\/\\n    public function getApcuPrefix()\\n    {\\n        return $this->apcuPrefix;\\n    }\\n\\n    \/**\\n     * Registers this instance as an autoloader.\\n     *\\n     * @param bool $prepend Whether to prepend the autoloader or not\\n     *\\n     * @return void\\n     *\/\\n    public function register($prepend = false)\\n    {\\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\\n\\n        if (null === $this->vendorDir) {\\n            return;\\n        }\\n\\n        if ($prepend) {\\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\\n        } else {\\n            unset(self::$registeredLoaders[$this->vendorDir]);\\n            self::$registeredLoaders[$this->vendorDir] = $this;\\n        }\\n    }\\n\\n    \/**\\n     * Unregisters this instance as an autoloader.\\n     *\\n     * @return void\\n     *\/\\n    public function unregister()\\n    {\\n        spl_autoload_unregister(array($this, 'loadClass'));\\n\\n        if (null !== $this->vendorDir) {\\n            unset(self::$registeredLoaders[$this->vendorDir]);\\n        }\\n    }\\n\\n    \/**\\n     * Loads the given class or interface.\\n     *\\n     * @param  string    $class The name of the class\\n     * @return true|null True if loaded, null otherwise\\n     *\/\\n    public function loadClass($class)\\n    {\\n        if ($file = $this->findFile($class)) {\\n            $includeFile = self::$includeFile;\\n            $includeFile($file);\\n\\n            return true;\\n        }\\n\\n        return null;\\n    }\\n\\n    \/**\\n     * Finds the path to the file where the class is defined.\\n     *\\n     * @param string $class The name of the class\\n     *\\n     * @return string|false The path if found, false otherwise\\n     *\/\\n    public function findFile($class)\\n    {\\n        \/\/ class map lookup\\n        if (isset($this->classMap[$class])) {\\n            return $this->classMap[$class];\\n        }\\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\\n            return false;\\n        }\\n        if (null !== $this->apcuPrefix) {\\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\\n            if ($hit) {\\n                return $file;\\n            }\\n        }\\n\\n        $file = $this->findFileWithExtension($class, '.php');\\n\\n        \/\/ Search for Hack files if we are running on HHVM\\n        if (false === $file && defined('HHVM_VERSION')) {\\n            $file = $this->findFileWithExtension($class, '.hh');\\n        }\\n\\n        if (null !== $this->apcuPrefix) {\\n            apcu_add($this->apcuPrefix.$class, $file);\\n        }\\n\\n        if (false === $file) {\\n            \/\/ Remember that this class does not exist.\\n            $this->missingClasses[$class] = true;\\n        }\\n\\n        return $file;\\n    }\\n\\n    \/**\\n     * Returns the currently registered loaders keyed by their corresponding vendor directories.\\n     *\\n     * @return array<string, self>\\n     *\/\\n    public static function getRegisteredLoaders()\\n    {\\n        return self::$registeredLoaders;\\n    }\\n\\n    \/**\\n     * @param  string       $class\\n     * @param  string       $ext\\n     * @return string|false\\n     *\/\\n    private function findFileWithExtension($class, $ext)\\n    {\\n        \/\/ PSR-4 lookup\\n        $logicalPathPsr4 = strtr($class, '\\\\\\\\', DIRECTORY_SEPARATOR) . $ext;\\n\\n        $first = $class[0];\\n        if (isset($this->prefixLengthsPsr4[$first])) {\\n            $subPath = $class;\\n            while (false !== $lastPos = strrpos($subPath, '\\\\\\\\')) {\\n                $subPath = substr($subPath, 0, $lastPos);\\n                $search = $subPath . '\\\\\\\\';\\n                if (isset($this->prefixDirsPsr4[$search])) {\\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\\n                        if (file_exists($file = $dir . $pathEnd)) {\\n                            return $file;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        \/\/ PSR-4 fallback dirs\\n        foreach ($this->fallbackDirsPsr4 as $dir) {\\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\\n                return $file;\\n            }\\n        }\\n\\n        \/\/ PSR-0 lookup\\n        if (false !== $pos = strrpos($class, '\\\\\\\\')) {\\n            \/\/ namespaced class name\\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\\n        } else {\\n            \/\/ PEAR-like class name\\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\\n        }\\n\\n        if (isset($this->prefixesPsr0[$first])) {\\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\\n                if (0 === strpos($class, $prefix)) {\\n                    foreach ($dirs as $dir) {\\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\\n                            return $file;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        \/\/ PSR-0 fallback dirs\\n        foreach ($this->fallbackDirsPsr0 as $dir) {\\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\\n                return $file;\\n            }\\n        }\\n\\n        \/\/ PSR-0 include paths.\\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\\n            return $file;\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    private static function initializeIncludeClosure()\\n    {\\n        if (self::$includeFile !== null) {\\n            return;\\n        }\\n\\n        \/**\\n         * Scope isolated include.\\n         *\\n         * Prevents access to $this\/self from included files.\\n         *\\n         * @param  string $file\\n         * @return void\\n         *\/\\n        self::$includeFile = \\\\Closure::bind(static function($file) {\\n            include $file;\\n        }, null, null);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/jetpack_autoload_filemap.php\",\"ext\":\"php\",\"size\":2481,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ This file `jetpack_autoload_filemap.php` was auto generated by automattic\/jetpack-autoloader.\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir   = dirname($vendorDir);\\n\\nreturn array(\\n\\t'0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-mbstring\/bootstrap.php'\\n\\t),\\n\\t'6e3fae29631ef280660b3cdad06f25a8' => array(\\n\\t\\t'version' => 'dev-main',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/deprecation-contracts\/function.php'\\n\\t),\\n\\t'22177d82d05723dff5b1903f4496520e' => array(\\n\\t\\t'version' => '1.2.1.0',\\n\\t\\t'path'    => $vendorDir . '\/alleyinteractive\/wordpress-autoloader\/src\/class-autoloader.php'\\n\\t),\\n\\t'd0b4d9ff2237dcc1a532ae9d039c0c2c' => array(\\n\\t\\t'version' => '1.2.0.0',\\n\\t\\t'path'    => $vendorDir . '\/alleyinteractive\/composer-wordpress-autoloader\/src\/autoload.php'\\n\\t),\\n\\t'320cde22f66dd4f5d3fd621d3e88b98f' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-ctype\/bootstrap.php'\\n\\t),\\n\\t'a4a119a56e50fbb293281d9a48007e0e' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php80\/bootstrap.php'\\n\\t),\\n\\t'662a729f963d39afe703c9d9b7ab4a8c' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/bootstrap.php'\\n\\t),\\n\\t'2203a247e6fda86070a5e4e07aed533a' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/clock\/Resources\/now.php'\\n\\t),\\n\\t'a1105708a18b76903365ca1c4aa61b02' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/translation\/Resources\/functions.php'\\n\\t),\\n\\t'e39a8b23c42d4e1452234d762b03835a' => array(\\n\\t\\t'version' => '4.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/ramsey\/uuid\/src\/functions.php'\\n\\t),\\n\\t'667aeda72477189d0494fecd327c3641' => array(\\n\\t\\t'version' => '7.4.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/var-dumper\/Resources\/functions\/dump.php'\\n\\t),\\n\\t'91dcc74bdd4f7744d05727fdc296d8ae' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/mantle-framework\/support\/autoload.php'\\n\\t),\\n\\t'b68c986d100cce58b4f7580a7ebd1ae7' => array(\\n\\t\\t'version' => '1.6.0.0',\\n\\t\\t'path'    => $vendorDir . '\/alleyinteractive\/wp-block-converter\/src\/helpers.php'\\n\\t),\\n\\t'f6d4f6bcee7247df6b777884c3e22f98' => array(\\n\\t\\t'version' => '5.6.0.0',\\n\\t\\t'path'    => $vendorDir . '\/yahnis-elsts\/plugin-update-checker\/load-v5p6.php'\\n\\t),\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/autoload_files.php\",\"ext\":\"php\",\"size\":1574,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ autoload_files.php @generated by Composer\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir = dirname($vendorDir);\\n\\nreturn array(\\n    '0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => $vendorDir . '\/symfony\/polyfill-mbstring\/bootstrap.php',\\n    '6e3fae29631ef280660b3cdad06f25a8' => $vendorDir . '\/symfony\/deprecation-contracts\/function.php',\\n    '22177d82d05723dff5b1903f4496520e' => $vendorDir . '\/alleyinteractive\/wordpress-autoloader\/src\/class-autoloader.php',\\n    'd0b4d9ff2237dcc1a532ae9d039c0c2c' => $vendorDir . '\/alleyinteractive\/composer-wordpress-autoloader\/src\/autoload.php',\\n    '320cde22f66dd4f5d3fd621d3e88b98f' => $vendorDir . '\/symfony\/polyfill-ctype\/bootstrap.php',\\n    'a4a119a56e50fbb293281d9a48007e0e' => $vendorDir . '\/symfony\/polyfill-php80\/bootstrap.php',\\n    '662a729f963d39afe703c9d9b7ab4a8c' => $vendorDir . '\/symfony\/polyfill-php83\/bootstrap.php',\\n    '2203a247e6fda86070a5e4e07aed533a' => $vendorDir . '\/symfony\/clock\/Resources\/now.php',\\n    'a1105708a18b76903365ca1c4aa61b02' => $vendorDir . '\/symfony\/translation\/Resources\/functions.php',\\n    'e39a8b23c42d4e1452234d762b03835a' => $vendorDir . '\/ramsey\/uuid\/src\/functions.php',\\n    '667aeda72477189d0494fecd327c3641' => $vendorDir . '\/symfony\/var-dumper\/Resources\/functions\/dump.php',\\n    '91dcc74bdd4f7744d05727fdc296d8ae' => $vendorDir . '\/mantle-framework\/support\/autoload.php',\\n    'b68c986d100cce58b4f7580a7ebd1ae7' => $vendorDir . '\/alleyinteractive\/wp-block-converter\/src\/helpers.php',\\n    'f6d4f6bcee7247df6b777884c3e22f98' => $vendorDir . '\/yahnis-elsts\/plugin-update-checker\/load-v5p6.php',\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/jetpack_autoload_classmap.php\",\"ext\":\"php\",\"size\":11958,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ This file `jetpack_autoload_classmap.php` was auto generated by automattic\/jetpack-autoloader.\\n\\n$vendorDir = dirname(__DIR__);\\n$baseDir   = dirname($vendorDir);\\n\\nreturn array(\\n\\t'Attribute' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/Attribute.php'\\n\\t),\\n\\t'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\AutoloadGenerator' => array(\\n\\t\\t'version' => '5.0.9',\\n\\t\\t'path'    => $vendorDir . '\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php'\\n\\t),\\n\\t'DateError' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateError.php'\\n\\t),\\n\\t'DateException' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateException.php'\\n\\t),\\n\\t'DateInvalidOperationException' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateInvalidOperationException.php'\\n\\t),\\n\\t'DateInvalidTimeZoneException' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateInvalidTimeZoneException.php'\\n\\t),\\n\\t'DateMalformedIntervalStringException' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedIntervalStringException.php'\\n\\t),\\n\\t'DateMalformedPeriodStringException' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedPeriodStringException.php'\\n\\t),\\n\\t'DateMalformedStringException' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedStringException.php'\\n\\t),\\n\\t'DateObjectError' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateObjectError.php'\\n\\t),\\n\\t'DateRangeError' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateRangeError.php'\\n\\t),\\n\\t'Nette\\\\\\\\ArgumentOutOfRangeException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\DeprecatedException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\DirectoryNotFoundException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\FileNotFoundException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\HtmlStringable' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/HtmlStringable.php'\\n\\t),\\n\\t'Nette\\\\\\\\IOException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\InvalidArgumentException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\InvalidStateException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Iterators\\\\\\\\CachingIterator' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Iterators\/CachingIterator.php'\\n\\t),\\n\\t'Nette\\\\\\\\Iterators\\\\\\\\Mapper' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Iterators\/Mapper.php'\\n\\t),\\n\\t'Nette\\\\\\\\Localization\\\\\\\\ITranslator' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/compatibility.php'\\n\\t),\\n\\t'Nette\\\\\\\\Localization\\\\\\\\Translator' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Translator.php'\\n\\t),\\n\\t'Nette\\\\\\\\MemberAccessException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\NotImplementedException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\NotSupportedException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\OutOfRangeException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Context' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Context.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\DynamicParameter' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/DynamicParameter.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\AnyOf' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/AnyOf.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Base' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/Base.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Structure' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/Structure.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Type' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Elements\/Type.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Expect' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Expect.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Helpers' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Helpers.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Message' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Message.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Processor' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Processor.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\Schema' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/Schema.php'\\n\\t),\\n\\t'Nette\\\\\\\\Schema\\\\\\\\ValidationException' => array(\\n\\t\\t'version' => '1.3.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/nette\/schema\/src\/Schema\/ValidationException.php'\\n\\t),\\n\\t'Nette\\\\\\\\ShouldNotHappenException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\SmartObject' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/SmartObject.php'\\n\\t),\\n\\t'Nette\\\\\\\\StaticClass' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/StaticClass.php'\\n\\t),\\n\\t'Nette\\\\\\\\UnexpectedValueException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ArrayHash' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/ArrayHash.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ArrayList' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/ArrayList.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Arrays' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Arrays.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\AssertionException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Callback' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Callback.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\DateTime' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/DateTime.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\FileInfo' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/FileInfo.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\FileSystem' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/FileSystem.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Finder' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Finder.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Floats' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Floats.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Helpers' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Helpers.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Html' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Html.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\IHtmlString' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/compatibility.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Image' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Image.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ImageColor' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/ImageColor.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ImageException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ImageType' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/ImageType.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Iterables' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Iterables.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Json' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Json.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\JsonException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ObjectHelpers' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/ObjectHelpers.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Paginator' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Paginator.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Random' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Random.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Reflection' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Reflection.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\ReflectionMethod' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/ReflectionMethod.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\RegexpException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Strings' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Strings.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Type' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Type.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\UnknownImageFileException' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/exceptions.php'\\n\\t),\\n\\t'Nette\\\\\\\\Utils\\\\\\\\Validators' => array(\\n\\t\\t'version' => 'dev-master',\\n\\t\\t'path'    => $vendorDir . '\/nette\/utils\/src\/Utils\/Validators.php'\\n\\t),\\n\\t'Override' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/Override.php'\\n\\t),\\n\\t'PhpToken' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/PhpToken.php'\\n\\t),\\n\\t'SQLite3Exception' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php83\/Resources\/stubs\/SQLite3Exception.php'\\n\\t),\\n\\t'Stringable' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/Stringable.php'\\n\\t),\\n\\t'UnhandledMatchError' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/UnhandledMatchError.php'\\n\\t),\\n\\t'ValueError' => array(\\n\\t\\t'version' => '1.9999999.9999999.9999999-dev',\\n\\t\\t'path'    => $vendorDir . '\/symfony\/polyfill-php80\/Resources\/stubs\/ValueError.php'\\n\\t),\\n);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/autoload_static.php\",\"ext\":\"php\",\"size\":17801,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ autoload_static.php @generated by Composer\\n\\nnamespace Composer\\\\Autoload;\\n\\nclass ComposerStaticInit6d98b74f597e7674b4e502dab72fafa7\\n{\\n    public static $files = array (\\n        '0e6d7bf4a5811bfa5cf40c5ccd6fae6a' => __DIR__ . '\/..' . '\/symfony\/polyfill-mbstring\/bootstrap.php',\\n        '6e3fae29631ef280660b3cdad06f25a8' => __DIR__ . '\/..' . '\/symfony\/deprecation-contracts\/function.php',\\n        '22177d82d05723dff5b1903f4496520e' => __DIR__ . '\/..' . '\/alleyinteractive\/wordpress-autoloader\/src\/class-autoloader.php',\\n        'd0b4d9ff2237dcc1a532ae9d039c0c2c' => __DIR__ . '\/..' . '\/alleyinteractive\/composer-wordpress-autoloader\/src\/autoload.php',\\n        '320cde22f66dd4f5d3fd621d3e88b98f' => __DIR__ . '\/..' . '\/symfony\/polyfill-ctype\/bootstrap.php',\\n        'a4a119a56e50fbb293281d9a48007e0e' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/bootstrap.php',\\n        '662a729f963d39afe703c9d9b7ab4a8c' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/bootstrap.php',\\n        '2203a247e6fda86070a5e4e07aed533a' => __DIR__ . '\/..' . '\/symfony\/clock\/Resources\/now.php',\\n        'a1105708a18b76903365ca1c4aa61b02' => __DIR__ . '\/..' . '\/symfony\/translation\/Resources\/functions.php',\\n        'e39a8b23c42d4e1452234d762b03835a' => __DIR__ . '\/..' . '\/ramsey\/uuid\/src\/functions.php',\\n        '667aeda72477189d0494fecd327c3641' => __DIR__ . '\/..' . '\/symfony\/var-dumper\/Resources\/functions\/dump.php',\\n        '91dcc74bdd4f7744d05727fdc296d8ae' => __DIR__ . '\/..' . '\/mantle-framework\/support\/autoload.php',\\n        'b68c986d100cce58b4f7580a7ebd1ae7' => __DIR__ . '\/..' . '\/alleyinteractive\/wp-block-converter\/src\/helpers.php',\\n        'f6d4f6bcee7247df6b777884c3e22f98' => __DIR__ . '\/..' . '\/yahnis-elsts\/plugin-update-checker\/load-v5p6.php',\\n    );\\n\\n    public static $prefixLengthsPsr4 = array (\\n        'v' => \\n        array (\\n            'voku\\\\\\\\' => 5,\\n        ),\\n        'S' => \\n        array (\\n            'Symfony\\\\\\\\Polyfill\\\\\\\\Php83\\\\\\\\' => 23,\\n            'Symfony\\\\\\\\Polyfill\\\\\\\\Php80\\\\\\\\' => 23,\\n            'Symfony\\\\\\\\Polyfill\\\\\\\\Mbstring\\\\\\\\' => 26,\\n            'Symfony\\\\\\\\Polyfill\\\\\\\\Ctype\\\\\\\\' => 23,\\n            'Symfony\\\\\\\\Contracts\\\\\\\\Translation\\\\\\\\' => 30,\\n            'Symfony\\\\\\\\Component\\\\\\\\VarDumper\\\\\\\\' => 28,\\n            'Symfony\\\\\\\\Component\\\\\\\\Translation\\\\\\\\' => 30,\\n            'Symfony\\\\\\\\Component\\\\\\\\Finder\\\\\\\\' => 25,\\n            'Symfony\\\\\\\\Component\\\\\\\\DomCrawler\\\\\\\\' => 29,\\n            'Symfony\\\\\\\\Component\\\\\\\\Clock\\\\\\\\' => 24,\\n        ),\\n        'R' => \\n        array (\\n            'Ramsey\\\\\\\\Uuid\\\\\\\\' => 12,\\n            'Ramsey\\\\\\\\Collection\\\\\\\\' => 18,\\n        ),\\n        'P' => \\n        array (\\n            'Psr\\\\\\\\Log\\\\\\\\' => 8,\\n            'Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\' => 17,\\n            'Psr\\\\\\\\EventDispatcher\\\\\\\\' => 20,\\n            'Psr\\\\\\\\Container\\\\\\\\' => 14,\\n            'Psr\\\\\\\\Clock\\\\\\\\' => 10,\\n            'PhpOption\\\\\\\\' => 10,\\n        ),\\n        'N' => \\n        array (\\n            'Nette\\\\\\\\' => 6,\\n        ),\\n        'M' => \\n        array (\\n            'Monolog\\\\\\\\' => 8,\\n            'Masterminds\\\\\\\\' => 12,\\n        ),\\n        'L' => \\n        array (\\n            'League\\\\\\\\Uri\\\\\\\\' => 11,\\n            'League\\\\\\\\Config\\\\\\\\' => 14,\\n            'League\\\\\\\\CommonMark\\\\\\\\' => 18,\\n        ),\\n        'H' => \\n        array (\\n            'Hostinger\\\\\\\\WpMenuManager\\\\\\\\' => 24,\\n            'Hostinger\\\\\\\\WpHelper\\\\\\\\' => 19,\\n            'Hostinger\\\\\\\\Tests\\\\\\\\' => 16,\\n            'Hostinger\\\\\\\\Surveys\\\\\\\\' => 18,\\n            'Hostinger\\\\\\\\Amplitude\\\\\\\\' => 20,\\n        ),\\n        'G' => \\n        array (\\n            'GrahamCampbell\\\\\\\\ResultType\\\\\\\\' => 26,\\n        ),\\n        'D' => \\n        array (\\n            'Dotenv\\\\\\\\' => 7,\\n            'Doctrine\\\\\\\\Inflector\\\\\\\\' => 19,\\n            'Dflydev\\\\\\\\DotAccessData\\\\\\\\' => 22,\\n        ),\\n        'C' => \\n        array (\\n            'ComposerWordPressAutoloader\\\\\\\\' => 28,\\n            'Carbon\\\\\\\\Doctrine\\\\\\\\' => 16,\\n            'Carbon\\\\\\\\' => 7,\\n        ),\\n        'B' => \\n        array (\\n            'Brick\\\\\\\\Math\\\\\\\\' => 11,\\n        ),\\n        'A' => \\n        array (\\n            'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\' => 30,\\n        ),\\n    );\\n\\n    public static $prefixDirsPsr4 = array (\\n        'voku\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/voku\/portable-ascii\/src\/voku',\\n        ),\\n        'Symfony\\\\\\\\Polyfill\\\\\\\\Php83\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-php83',\\n        ),\\n        'Symfony\\\\\\\\Polyfill\\\\\\\\Php80\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-php80',\\n        ),\\n        'Symfony\\\\\\\\Polyfill\\\\\\\\Mbstring\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-mbstring',\\n        ),\\n        'Symfony\\\\\\\\Polyfill\\\\\\\\Ctype\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/polyfill-ctype',\\n        ),\\n        'Symfony\\\\\\\\Contracts\\\\\\\\Translation\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/translation-contracts',\\n        ),\\n        'Symfony\\\\\\\\Component\\\\\\\\VarDumper\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/var-dumper',\\n        ),\\n        'Symfony\\\\\\\\Component\\\\\\\\Translation\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/translation',\\n        ),\\n        'Symfony\\\\\\\\Component\\\\\\\\Finder\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/finder',\\n        ),\\n        'Symfony\\\\\\\\Component\\\\\\\\DomCrawler\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/dom-crawler',\\n        ),\\n        'Symfony\\\\\\\\Component\\\\\\\\Clock\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/symfony\/clock',\\n        ),\\n        'Ramsey\\\\\\\\Uuid\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/ramsey\/uuid\/src',\\n        ),\\n        'Ramsey\\\\\\\\Collection\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/ramsey\/collection\/src',\\n        ),\\n        'Psr\\\\\\\\Log\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/psr\/log\/src',\\n        ),\\n        'Psr\\\\\\\\Http\\\\\\\\Message\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/psr\/http-factory\/src',\\n            1 => __DIR__ . '\/..' . '\/psr\/http-message\/src',\\n        ),\\n        'Psr\\\\\\\\EventDispatcher\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/psr\/event-dispatcher\/src',\\n        ),\\n        'Psr\\\\\\\\Container\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/psr\/container\/src',\\n        ),\\n        'Psr\\\\\\\\Clock\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/psr\/clock\/src',\\n        ),\\n        'PhpOption\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/phpoption\/phpoption\/src\/PhpOption',\\n        ),\\n        'Nette\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/nette\/schema\/src',\\n            1 => __DIR__ . '\/..' . '\/nette\/utils\/src',\\n        ),\\n        'Monolog\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/monolog\/monolog\/src\/Monolog',\\n        ),\\n        'Masterminds\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/masterminds\/html5\/src',\\n        ),\\n        'League\\\\\\\\Uri\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/league\/uri',\\n            1 => __DIR__ . '\/..' . '\/league\/uri-interfaces',\\n        ),\\n        'League\\\\\\\\Config\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/league\/config\/src',\\n        ),\\n        'League\\\\\\\\CommonMark\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/league\/commonmark\/src',\\n        ),\\n        'Hostinger\\\\\\\\WpMenuManager\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-menu-manager\/src',\\n        ),\\n        'Hostinger\\\\\\\\WpHelper\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-helper\/src',\\n        ),\\n        'Hostinger\\\\\\\\Tests\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-helper\/tests\/phpunit',\\n        ),\\n        'Hostinger\\\\\\\\Surveys\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-surveys\/src',\\n        ),\\n        'Hostinger\\\\\\\\Amplitude\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/hostinger\/hostinger-wp-amplitude\/src',\\n        ),\\n        'GrahamCampbell\\\\\\\\ResultType\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/graham-campbell\/result-type\/src',\\n        ),\\n        'Dotenv\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/vlucas\/phpdotenv\/src',\\n        ),\\n        'Doctrine\\\\\\\\Inflector\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/doctrine\/inflector\/src',\\n        ),\\n        'Dflydev\\\\\\\\DotAccessData\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/dflydev\/dot-access-data\/src',\\n        ),\\n        'ComposerWordPressAutoloader\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/alleyinteractive\/composer-wordpress-autoloader\/src',\\n        ),\\n        'Carbon\\\\\\\\Doctrine\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/carbonphp\/carbon-doctrine-types\/src\/Carbon\/Doctrine',\\n        ),\\n        'Carbon\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/nesbot\/carbon\/src\/Carbon',\\n        ),\\n        'Brick\\\\\\\\Math\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/brick\/math\/src',\\n        ),\\n        'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\' => \\n        array (\\n            0 => __DIR__ . '\/..' . '\/automattic\/jetpack-autoloader\/src',\\n        ),\\n    );\\n\\n    public static $classMap = array (\\n        'Attribute' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/Attribute.php',\\n        'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\AutoloadGenerator' => __DIR__ . '\/..' . '\/automattic\/jetpack-autoloader\/src\/AutoloadGenerator.php',\\n        'Composer\\\\\\\\InstalledVersions' => __DIR__ . '\/..' . '\/composer\/InstalledVersions.php',\\n        'DateError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateError.php',\\n        'DateException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateException.php',\\n        'DateInvalidOperationException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateInvalidOperationException.php',\\n        'DateInvalidTimeZoneException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateInvalidTimeZoneException.php',\\n        'DateMalformedIntervalStringException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedIntervalStringException.php',\\n        'DateMalformedPeriodStringException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedPeriodStringException.php',\\n        'DateMalformedStringException' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateMalformedStringException.php',\\n        'DateObjectError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateObjectError.php',\\n        'DateRangeError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/DateRangeError.php',\\n        'Nette\\\\\\\\ArgumentOutOfRangeException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\DeprecatedException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\DirectoryNotFoundException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\FileNotFoundException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\HtmlStringable' => __DIR__ . '\/..' . '\/nette\/utils\/src\/HtmlStringable.php',\\n        'Nette\\\\\\\\IOException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\InvalidArgumentException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\InvalidStateException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\Iterators\\\\\\\\CachingIterator' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Iterators\/CachingIterator.php',\\n        'Nette\\\\\\\\Iterators\\\\\\\\Mapper' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Iterators\/Mapper.php',\\n        'Nette\\\\\\\\Localization\\\\\\\\ITranslator' => __DIR__ . '\/..' . '\/nette\/utils\/src\/compatibility.php',\\n        'Nette\\\\\\\\Localization\\\\\\\\Translator' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Translator.php',\\n        'Nette\\\\\\\\MemberAccessException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\NotImplementedException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\NotSupportedException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\OutOfRangeException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Context' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Context.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\DynamicParameter' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/DynamicParameter.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\AnyOf' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Elements\/AnyOf.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Base' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Elements\/Base.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Structure' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Elements\/Structure.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Elements\\\\\\\\Type' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Elements\/Type.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Expect' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Expect.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Helpers' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Helpers.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Message' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Message.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Processor' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Processor.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\Schema' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/Schema.php',\\n        'Nette\\\\\\\\Schema\\\\\\\\ValidationException' => __DIR__ . '\/..' . '\/nette\/schema\/src\/Schema\/ValidationException.php',\\n        'Nette\\\\\\\\ShouldNotHappenException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\SmartObject' => __DIR__ . '\/..' . '\/nette\/utils\/src\/SmartObject.php',\\n        'Nette\\\\\\\\StaticClass' => __DIR__ . '\/..' . '\/nette\/utils\/src\/StaticClass.php',\\n        'Nette\\\\\\\\UnexpectedValueException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/exceptions.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ArrayHash' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/ArrayHash.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ArrayList' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/ArrayList.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Arrays' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Arrays.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\AssertionException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Callback' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Callback.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\DateTime' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/DateTime.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\FileInfo' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/FileInfo.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\FileSystem' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/FileSystem.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Finder' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Finder.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Floats' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Floats.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Helpers' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Helpers.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Html' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Html.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\IHtmlString' => __DIR__ . '\/..' . '\/nette\/utils\/src\/compatibility.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Image' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Image.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ImageColor' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/ImageColor.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ImageException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ImageType' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/ImageType.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Iterables' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Iterables.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Json' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Json.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\JsonException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ObjectHelpers' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/ObjectHelpers.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Paginator' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Paginator.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Random' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Random.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Reflection' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Reflection.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\ReflectionMethod' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/ReflectionMethod.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\RegexpException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Strings' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Strings.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Type' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Type.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\UnknownImageFileException' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/exceptions.php',\\n        'Nette\\\\\\\\Utils\\\\\\\\Validators' => __DIR__ . '\/..' . '\/nette\/utils\/src\/Utils\/Validators.php',\\n        'Override' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/Override.php',\\n        'PhpToken' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/PhpToken.php',\\n        'SQLite3Exception' => __DIR__ . '\/..' . '\/symfony\/polyfill-php83\/Resources\/stubs\/SQLite3Exception.php',\\n        'Stringable' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/Stringable.php',\\n        'UnhandledMatchError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/UnhandledMatchError.php',\\n        'ValueError' => __DIR__ . '\/..' . '\/symfony\/polyfill-php80\/Resources\/stubs\/ValueError.php',\\n    );\\n\\n    public static function getInitializer(ClassLoader $loader)\\n    {\\n        return \\\\Closure::bind(function () use ($loader) {\\n            $loader->prefixLengthsPsr4 = ComposerStaticInit6d98b74f597e7674b4e502dab72fafa7::$prefixLengthsPsr4;\\n            $loader->prefixDirsPsr4 = ComposerStaticInit6d98b74f597e7674b4e502dab72fafa7::$prefixDirsPsr4;\\n            $loader->classMap = ComposerStaticInit6d98b74f597e7674b4e502dab72fafa7::$classMap;\\n\\n        }, null, ClassLoader::class);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/composer\/autoload_real.php\",\"ext\":\"php\",\"size\":1622,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ autoload_real.php @generated by Composer\\n\\nclass ComposerAutoloaderInit6d98b74f597e7674b4e502dab72fafa7\\n{\\n    private static $loader;\\n\\n    public static function loadClassLoader($class)\\n    {\\n        if ('Composer\\\\Autoload\\\\ClassLoader' === $class) {\\n            require __DIR__ . '\/ClassLoader.php';\\n        }\\n    }\\n\\n    \/**\\n     * @return \\\\Composer\\\\Autoload\\\\ClassLoader\\n     *\/\\n    public static function getLoader()\\n    {\\n        if (null !== self::$loader) {\\n            return self::$loader;\\n        }\\n\\n        spl_autoload_register(array('ComposerAutoloaderInit6d98b74f597e7674b4e502dab72fafa7', 'loadClassLoader'), true, true);\\n        self::$loader = $loader = new \\\\Composer\\\\Autoload\\\\ClassLoader(\\\\dirname(__DIR__));\\n        spl_autoload_unregister(array('ComposerAutoloaderInit6d98b74f597e7674b4e502dab72fafa7', 'loadClassLoader'));\\n\\n        require __DIR__ . '\/autoload_static.php';\\n        call_user_func(\\\\Composer\\\\Autoload\\\\ComposerStaticInit6d98b74f597e7674b4e502dab72fafa7::getInitializer($loader));\\n\\n        $loader->register(true);\\n\\n        $filesToLoad = \\\\Composer\\\\Autoload\\\\ComposerStaticInit6d98b74f597e7674b4e502dab72fafa7::$files;\\n        $requireFile = \\\\Closure::bind(static function ($fileIdentifier, $file) {\\n            if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {\\n                $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;\\n\\n                require $file;\\n            }\\n        }, null, null);\\n        foreach ($filesToLoad as $fileIdentifier => $file) {\\n            $requireFile($fileIdentifier, $file);\\n        }\\n\\n        return $loader;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/CHANGELOG.md\",\"ext\":\"md\",\"size\":2506,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"# Changelog\\n\\nAll notable changes to this project will be documented in this file.\\n\\nThe format is based on [Keep a Changelog](https:\/\/keepachangelog.com\/en\/1.0.0\/),\\nand this project adheres to [Semantic Versioning](https:\/\/semver.org\/spec\/v2.0.0.html).\\n\\n## [Unreleased]\\n\\n## [3.0.3] - 2024-07-08\\n\\n### Fixed\\n\\n - Fixed PHP 8.4 deprecation notices (#47)\\n\\n## [3.0.2] - 2022-10-27\\n\\n### Fixed\\n\\n - Added missing return types to docblocks (#44, #45)\\n\\n## [3.0.1] - 2021-08-13\\n\\n### Added\\n\\n - Adds ReturnTypeWillChange to suppress PHP 8.1 warnings (#40)\\n\\n## [3.0.0] - 2021-01-01\\n\\n### Added\\n - Added support for both `.` and `\/`-delimited key paths (#24)\\n - Added parameter and return types to everything; enabled strict type checks (#18)\\n - Added new exception classes to better identify certain types of errors (#20)\\n - `Data` now implements `ArrayAccess` (#17)\\n - Added ability to merge non-associative array values (#31, #32)\\n\\n### Changed\\n - All thrown exceptions are now instances or subclasses of `DataException` (#20)\\n - Calling `get()` on a missing key path without providing a default will throw a `MissingPathException` instead of returning `null` (#29)\\n - Bumped supported PHP versions to 7.1 - 8.x (#18)\\n\\n### Fixed\\n - Fixed incorrect merging of array values into string values (#32)\\n - Fixed `get()` method behaving as if keys with `null` values didn't exist\\n\\n## [2.0.0] - 2017-12-21\\n\\n### Changed\\n - Bumped supported PHP versions to 7.0 - 7.4 (#12)\\n - Switched to PSR-4 autoloading\\n\\n## [1.1.0] - 2017-01-20\\n\\n### Added\\n - Added new `has()` method to check for the existence of the given key (#4, #7)\\n\\n## [1.0.1] - 2015-08-12\\n\\n### Added\\n - Added new optional `$default` parameter to the `get()` method (#2)\\n\\n## [1.0.0] - 2012-07-17\\n\\n**Initial release!**\\n\\n[Unreleased]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v3.0.3...main\\n[3.0.3]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v3.0.2...v3.0.3\\n[3.0.2]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v3.0.1...v3.0.2\\n[3.0.1]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v3.0.0...v3.0.1\\n[3.0.0]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v2.0.0...v3.0.0\\n[2.0.0]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v1.1.0...v2.0.0\\n[1.1.0]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v1.0.1...v1.1.0\\n[1.0.1]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/compare\/v1.0.0...v1.0.1\\n[1.0.0]: https:\/\/github.com\/dflydev\/dflydev-dot-access-data\/releases\/tag\/v1.0.0\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/src\/Data.php\",\"ext\":\"php\",\"size\":6743,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is a part of dflydev\/dot-access-data.\\n *\\n * (c) Dragonfly Development Inc.\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Dflydev\\\\DotAccessData;\\n\\nuse ArrayAccess;\\nuse Dflydev\\\\DotAccessData\\\\Exception\\\\DataException;\\nuse Dflydev\\\\DotAccessData\\\\Exception\\\\InvalidPathException;\\nuse Dflydev\\\\DotAccessData\\\\Exception\\\\MissingPathException;\\n\\n\/**\\n * @implements ArrayAccess<string, mixed>\\n *\/\\nclass Data implements DataInterface, ArrayAccess\\n{\\n    private const DELIMITERS = ['.', '\/'];\\n\\n    \/**\\n     * Internal representation of data data\\n     *\\n     * @var array<string, mixed>\\n     *\/\\n    protected $data;\\n\\n    \/**\\n     * Constructor\\n     *\\n     * @param array<string, mixed> $data\\n     *\/\\n    public function __construct(array $data = [])\\n    {\\n        $this->data = $data;\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\/\\n    public function append(string $key, $value = null): void\\n    {\\n        $currentValue =& $this->data;\\n        $keyPath = self::keyToPathArray($key);\\n\\n        $endKey = array_pop($keyPath);\\n        foreach ($keyPath as $currentKey) {\\n            if (! isset($currentValue[$currentKey])) {\\n                $currentValue[$currentKey] = [];\\n            }\\n            $currentValue =& $currentValue[$currentKey];\\n        }\\n\\n        if (!isset($currentValue[$endKey])) {\\n            $currentValue[$endKey] = [];\\n        }\\n\\n        if (!is_array($currentValue[$endKey])) {\\n            \/\/ Promote this key to an array.\\n            \/\/ TODO: Is this really what we want to do?\\n            $currentValue[$endKey] = [$currentValue[$endKey]];\\n        }\\n\\n        $currentValue[$endKey][] = $value;\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\/\\n    public function set(string $key, $value = null): void\\n    {\\n        $currentValue =& $this->data;\\n        $keyPath = self::keyToPathArray($key);\\n\\n        $endKey = array_pop($keyPath);\\n        foreach ($keyPath as $currentKey) {\\n            if (!isset($currentValue[$currentKey])) {\\n                $currentValue[$currentKey] = [];\\n            }\\n            if (!is_array($currentValue[$currentKey])) {\\n                throw new DataException(sprintf('Key path \\\"%s\\\" within \\\"%s\\\" cannot be indexed into (is not an array)', $currentKey, self::formatPath($key)));\\n            }\\n            $currentValue =& $currentValue[$currentKey];\\n        }\\n        $currentValue[$endKey] = $value;\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\/\\n    public function remove(string $key): void\\n    {\\n        $currentValue =& $this->data;\\n        $keyPath = self::keyToPathArray($key);\\n\\n        $endKey = array_pop($keyPath);\\n        foreach ($keyPath as $currentKey) {\\n            if (!isset($currentValue[$currentKey])) {\\n                return;\\n            }\\n            $currentValue =& $currentValue[$currentKey];\\n        }\\n        unset($currentValue[$endKey]);\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function get(string $key, $default = null)\\n    {\\n        \/** @psalm-suppress ImpureFunctionCall *\/\\n        $hasDefault = \\\\func_num_args() > 1;\\n\\n        $currentValue = $this->data;\\n        $keyPath = self::keyToPathArray($key);\\n\\n        foreach ($keyPath as $currentKey) {\\n            if (!is_array($currentValue) || !array_key_exists($currentKey, $currentValue)) {\\n                if ($hasDefault) {\\n                    return $default;\\n                }\\n\\n                throw new MissingPathException($key, sprintf('No data exists at the given path: \\\"%s\\\"', self::formatPath($keyPath)));\\n            }\\n\\n            $currentValue = $currentValue[$currentKey];\\n        }\\n\\n        return $currentValue === null ? $default : $currentValue;\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function has(string $key): bool\\n    {\\n        $currentValue = $this->data;\\n\\n        foreach (self::keyToPathArray($key) as $currentKey) {\\n            if (\\n                !is_array($currentValue) ||\\n                !array_key_exists($currentKey, $currentValue)\\n            ) {\\n                return false;\\n            }\\n            $currentValue = $currentValue[$currentKey];\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function getData(string $key): DataInterface\\n    {\\n        $value = $this->get($key);\\n        if (is_array($value) && Util::isAssoc($value)) {\\n            return new Data($value);\\n        }\\n\\n        throw new DataException(sprintf('Value at \\\"%s\\\" could not be represented as a DataInterface', self::formatPath($key)));\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\/\\n    public function import(array $data, int $mode = self::REPLACE): void\\n    {\\n        $this->data = Util::mergeAssocArray($this->data, $data, $mode);\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\/\\n    public function importData(DataInterface $data, int $mode = self::REPLACE): void\\n    {\\n        $this->import($data->export(), $mode);\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function export(): array\\n    {\\n        return $this->data;\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @return bool\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetExists($key)\\n    {\\n        return $this->has($key);\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @return mixed\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetGet($key)\\n    {\\n        return $this->get($key, null);\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @param string $key\\n     * @param mixed $value\\n     *\\n     * @return void\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetSet($key, $value)\\n    {\\n        $this->set($key, $value);\\n    }\\n\\n    \/**\\n     * {@inheritdoc}\\n     *\\n     * @return void\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function offsetUnset($key)\\n    {\\n        $this->remove($key);\\n    }\\n\\n    \/**\\n     * @param string $path\\n     *\\n     * @return string[]\\n     *\\n     * @psalm-return non-empty-list<string>\\n     *\\n     * @psalm-pure\\n     *\/\\n    protected static function keyToPathArray(string $path): array\\n    {\\n        if (\\\\strlen($path) === 0) {\\n            throw new InvalidPathException('Path cannot be an empty string');\\n        }\\n\\n        $path = \\\\str_replace(self::DELIMITERS, '.', $path);\\n\\n        return \\\\explode('.', $path);\\n    }\\n\\n    \/**\\n     * @param string|string[] $path\\n     *\\n     * @return string\\n     *\\n     * @psalm-pure\\n     *\/\\n    protected static function formatPath($path): string\\n    {\\n        if (is_string($path)) {\\n            $path = self::keyToPathArray($path);\\n        }\\n\\n        return implode(' \u00bb ', $path);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/src\/Util.php\",\"ext\":\"php\",\"size\":1924,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is a part of dflydev\/dot-access-data.\\n *\\n * (c) Dragonfly Development Inc.\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Dflydev\\\\DotAccessData;\\n\\nclass Util\\n{\\n    \/**\\n     * Test if array is an associative array\\n     *\\n     * Note that this function will return true if an array is empty. Meaning\\n     * empty arrays will be treated as if they are associative arrays.\\n     *\\n     * @param array<mixed> $arr\\n     *\\n     * @return bool\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function isAssoc(array $arr): bool\\n    {\\n        return !count($arr) || count(array_filter(array_keys($arr), 'is_string')) == count($arr);\\n    }\\n\\n    \/**\\n     * Merge contents from one associtative array to another\\n     *\\n     * @param mixed $to\\n     * @param mixed $from\\n     * @param DataInterface::PRESERVE|DataInterface::REPLACE|DataInterface::MERGE $mode\\n     *\\n     * @return mixed\\n     *\\n     * @psalm-pure\\n     *\/\\n    public static function mergeAssocArray($to, $from, int $mode = DataInterface::REPLACE)\\n    {\\n        if ($mode === DataInterface::MERGE && self::isList($to) && self::isList($from)) {\\n            return array_merge($to, $from);\\n        }\\n\\n        if (is_array($from) && is_array($to)) {\\n            foreach ($from as $k => $v) {\\n                if (!isset($to[$k])) {\\n                    $to[$k] = $v;\\n                } else {\\n                    $to[$k] = self::mergeAssocArray($to[$k], $v, $mode);\\n                }\\n            }\\n\\n            return $to;\\n        }\\n\\n        return $mode === DataInterface::PRESERVE ? $to : $from;\\n    }\\n\\n    \/**\\n     * @param mixed $value\\n     *\\n     * @return bool\\n     *\\n     * @psalm-pure\\n     *\/\\n    private static function isList($value): bool\\n    {\\n        return is_array($value) && array_values($value) === $value;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/src\/DataInterface.php\",\"ext\":\"php\",\"size\":3508,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is a part of dflydev\/dot-access-data.\\n *\\n * (c) Dragonfly Development Inc.\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Dflydev\\\\DotAccessData;\\n\\nuse Dflydev\\\\DotAccessData\\\\Exception\\\\DataException;\\nuse Dflydev\\\\DotAccessData\\\\Exception\\\\InvalidPathException;\\n\\ninterface DataInterface\\n{\\n    public const PRESERVE = 0;\\n    public const REPLACE = 1;\\n    public const MERGE = 2;\\n\\n    \/**\\n     * Append a value to a key (assumes key refers to an array value)\\n     *\\n     * If the key does not yet exist it will be created.\\n     * If the key references a non-array it's existing contents will be added into a new array before appending the new value.\\n     *\\n     * @param string $key\\n     * @param mixed  $value\\n     *\\n     * @throws InvalidPathException if the given key is empty\\n     *\/\\n    public function append(string $key, $value = null): void;\\n\\n    \/**\\n     * Set a value for a key\\n     *\\n     * If the key does not yet exist it will be created.\\n     *\\n     * @param string $key\\n     * @param mixed  $value\\n     *\\n     * @throws InvalidPathException if the given key is empty\\n     * @throws DataException if the given key does not target an array\\n     *\/\\n    public function set(string $key, $value = null): void;\\n\\n    \/**\\n     * Remove a key\\n     *\\n     * No exception will be thrown if the key does not exist\\n     *\\n     * @param string $key\\n     *\\n     * @throws InvalidPathException if the given key is empty\\n     *\/\\n    public function remove(string $key): void;\\n\\n    \/**\\n     * Get the raw value for a key\\n     *\\n     * If the key does not exist, an optional default value can be returned instead.\\n     * If no default is provided then an exception will be thrown instead.\\n     *\\n     * @param string $key\\n     * @param mixed $default\\n     *\\n     * @return mixed\\n     *\\n     * @throws InvalidPathException if the given key is empty\\n     * @throws InvalidPathException if the given key does not exist and no default value was given\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function get(string $key, $default = null);\\n\\n    \/**\\n     * Check if the key exists\\n     *\\n     * @param string $key\\n     *\\n     * @return bool\\n     *\\n     * @throws InvalidPathException if the given key is empty\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function has(string $key): bool;\\n\\n    \/**\\n     * Get a data instance for a key\\n     *\\n     * @param string $key\\n     *\\n     * @return DataInterface\\n     *\\n     * @throws InvalidPathException if the given key is empty\\n     * @throws DataException if the given key does not reference an array\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function getData(string $key): DataInterface;\\n\\n    \/**\\n     * Import data into existing data\\n     *\\n     * @param array<string, mixed>                     $data\\n     * @param self::PRESERVE|self::REPLACE|self::MERGE $mode\\n     *\/\\n    public function import(array $data, int $mode = self::REPLACE): void;\\n\\n    \/**\\n     * Import data from an external data into existing data\\n     *\\n     * @param DataInterface                            $data\\n     * @param self::PRESERVE|self::REPLACE|self::MERGE $mode\\n     *\/\\n    public function importData(DataInterface $data, int $mode = self::REPLACE): void;\\n\\n    \/**\\n     * Export data as raw data\\n     *\\n     * @return array<string, mixed>\\n     *\\n     * @psalm-mutation-free\\n     *\/\\n    public function export(): array;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/src\/Exception\/MissingPathException.php\",\"ext\":\"php\",\"size\":774,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is a part of dflydev\/dot-access-data.\\n *\\n * (c) Dragonfly Development Inc.\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Dflydev\\\\DotAccessData\\\\Exception;\\n\\nuse Throwable;\\n\\n\/**\\n * Thrown when trying to access a path that does not exist\\n *\/\\nclass MissingPathException extends DataException\\n{\\n    \/** @var string *\/\\n    protected $path;\\n\\n    public function __construct(string $path, string $message = '', int $code = 0, ?Throwable $previous = null)\\n    {\\n        $this->path = $path;\\n\\n        parent::__construct($message, $code, $previous);\\n    }\\n\\n    public function getPath(): string\\n    {\\n        return $this->path;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/src\/Exception\/InvalidPathException.php\",\"ext\":\"php\",\"size\":430,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is a part of dflydev\/dot-access-data.\\n *\\n * (c) Dragonfly Development Inc.\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Dflydev\\\\DotAccessData\\\\Exception;\\n\\n\/**\\n * Thrown when trying to access an invalid path in the data array\\n *\/\\nclass InvalidPathException extends DataException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/dflydev\/dot-access-data\/src\/Exception\/DataException.php\",\"ext\":\"php\",\"size\":415,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is a part of dflydev\/dot-access-data.\\n *\\n * (c) Dragonfly Development Inc.\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace Dflydev\\\\DotAccessData\\\\Exception;\\n\\n\/**\\n * Base runtime exception type thrown by this library\\n *\/\\nclass DataException extends \\\\RuntimeException\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/autoload_packages.php\",\"ext\":\"php\",\"size\":325,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\nrequire_once __DIR__ . '\/jetpack-autoloader\/class-autoloader.php';\\nAutoloader::init();\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/graham-campbell\/result-type\/src\/Success.php\",\"ext\":\"php\",\"size\":2197,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of Result Type.\\n *\\n * (c) Graham Campbell <hello@gjcampbell.co.uk>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace GrahamCampbell\\\\ResultType;\\n\\nuse PhpOption\\\\None;\\nuse PhpOption\\\\Some;\\n\\n\/**\\n * @template T\\n * @template E\\n *\\n * @extends \\\\GrahamCampbell\\\\ResultType\\\\Result<T,E>\\n *\/\\nfinal class Success extends Result\\n{\\n    \/**\\n     * @var T\\n     *\/\\n    private $value;\\n\\n    \/**\\n     * Internal constructor for a success value.\\n     *\\n     * @param T $value\\n     *\\n     * @return void\\n     *\/\\n    private function __construct($value)\\n    {\\n        $this->value = $value;\\n    }\\n\\n    \/**\\n     * Create a new error value.\\n     *\\n     * @template S\\n     *\\n     * @param S $value\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,E>\\n     *\/\\n    public static function create($value)\\n    {\\n        return new self($value);\\n    }\\n\\n    \/**\\n     * Get the success option value.\\n     *\\n     * @return \\\\PhpOption\\\\Option<T>\\n     *\/\\n    public function success()\\n    {\\n        return Some::create($this->value);\\n    }\\n\\n    \/**\\n     * Map over the success value.\\n     *\\n     * @template S\\n     *\\n     * @param callable(T):S $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,E>\\n     *\/\\n    public function map(callable $f)\\n    {\\n        return self::create($f($this->value));\\n    }\\n\\n    \/**\\n     * Flat map over the success value.\\n     *\\n     * @template S\\n     * @template F\\n     *\\n     * @param callable(T):\\\\GrahamCampbell\\\\ResultType\\\\Result<S,F> $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,F>\\n     *\/\\n    public function flatMap(callable $f)\\n    {\\n        return $f($this->value);\\n    }\\n\\n    \/**\\n     * Get the error option value.\\n     *\\n     * @return \\\\PhpOption\\\\Option<E>\\n     *\/\\n    public function error()\\n    {\\n        return None::create();\\n    }\\n\\n    \/**\\n     * Map over the error value.\\n     *\\n     * @template F\\n     *\\n     * @param callable(E):F $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<T,F>\\n     *\/\\n    public function mapError(callable $f)\\n    {\\n        return self::create($this->value);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/graham-campbell\/result-type\/src\/Result.php\",\"ext\":\"php\",\"size\":1370,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of Result Type.\\n *\\n * (c) Graham Campbell <hello@gjcampbell.co.uk>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace GrahamCampbell\\\\ResultType;\\n\\n\/**\\n * @template T\\n * @template E\\n *\/\\nabstract class Result\\n{\\n    \/**\\n     * Get the success option value.\\n     *\\n     * @return \\\\PhpOption\\\\Option<T>\\n     *\/\\n    abstract public function success();\\n\\n    \/**\\n     * Map over the success value.\\n     *\\n     * @template S\\n     *\\n     * @param callable(T):S $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,E>\\n     *\/\\n    abstract public function map(callable $f);\\n\\n    \/**\\n     * Flat map over the success value.\\n     *\\n     * @template S\\n     * @template F\\n     *\\n     * @param callable(T):\\\\GrahamCampbell\\\\ResultType\\\\Result<S,F> $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,F>\\n     *\/\\n    abstract public function flatMap(callable $f);\\n\\n    \/**\\n     * Get the error option value.\\n     *\\n     * @return \\\\PhpOption\\\\Option<E>\\n     *\/\\n    abstract public function error();\\n\\n    \/**\\n     * Map over the error value.\\n     *\\n     * @template F\\n     *\\n     * @param callable(E):F $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<T,F>\\n     *\/\\n    abstract public function mapError(callable $f);\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/graham-campbell\/result-type\/src\/Error.php\",\"ext\":\"php\",\"size\":2263,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\n\/*\\n * This file is part of Result Type.\\n *\\n * (c) Graham Campbell <hello@gjcampbell.co.uk>\\n *\\n * For the full copyright and license information, please view the LICENSE\\n * file that was distributed with this source code.\\n *\/\\n\\nnamespace GrahamCampbell\\\\ResultType;\\n\\nuse PhpOption\\\\None;\\nuse PhpOption\\\\Some;\\n\\n\/**\\n * @template T\\n * @template E\\n *\\n * @extends \\\\GrahamCampbell\\\\ResultType\\\\Result<T,E>\\n *\/\\nfinal class Error extends Result\\n{\\n    \/**\\n     * @var E\\n     *\/\\n    private $value;\\n\\n    \/**\\n     * Internal constructor for an error value.\\n     *\\n     * @param E $value\\n     *\\n     * @return void\\n     *\/\\n    private function __construct($value)\\n    {\\n        $this->value = $value;\\n    }\\n\\n    \/**\\n     * Create a new error value.\\n     *\\n     * @template F\\n     *\\n     * @param F $value\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<T,F>\\n     *\/\\n    public static function create($value)\\n    {\\n        return new self($value);\\n    }\\n\\n    \/**\\n     * Get the success option value.\\n     *\\n     * @return \\\\PhpOption\\\\Option<T>\\n     *\/\\n    public function success()\\n    {\\n        return None::create();\\n    }\\n\\n    \/**\\n     * Map over the success value.\\n     *\\n     * @template S\\n     *\\n     * @param callable(T):S $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,E>\\n     *\/\\n    public function map(callable $f)\\n    {\\n        return self::create($this->value);\\n    }\\n\\n    \/**\\n     * Flat map over the success value.\\n     *\\n     * @template S\\n     * @template F\\n     *\\n     * @param callable(T):\\\\GrahamCampbell\\\\ResultType\\\\Result<S,F> $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<S,F>\\n     *\/\\n    public function flatMap(callable $f)\\n    {\\n        \/** @var \\\\GrahamCampbell\\\\ResultType\\\\Result<S,F> *\/\\n        return self::create($this->value);\\n    }\\n\\n    \/**\\n     * Get the error option value.\\n     *\\n     * @return \\\\PhpOption\\\\Option<E>\\n     *\/\\n    public function error()\\n    {\\n        return Some::create($this->value);\\n    }\\n\\n    \/**\\n     * Map over the error value.\\n     *\\n     * @template F\\n     *\\n     * @param callable(E):F $f\\n     *\\n     * @return \\\\GrahamCampbell\\\\ResultType\\\\Result<T,F>\\n     *\/\\n    public function mapError(callable $f)\\n    {\\n        return self::create($f($this->value));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-menu-manager\/assets\/js\/menus.min.js\",\"ext\":\"js\",\"size\":2394,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"(()=>{var e,r={144:()=>{jQuery(document).on(\\\"ready\\\",function(){window.addEventListener(\\\"onboardingMenuToggle\\\",function(e){var r=\\\"hostinger-hide-all-menu-items\\\";switch(e.detail&&e.detail.operation?e.detail.operation:\\\"show\\\"){case\\\"show\\\":document.querySelector(\\\"body\\\").classList.remove(r);break;case\\\"hide\\\":document.querySelector(\\\"body\\\").classList.add(r)}}),window.addEventListener(\\\"resize\\\",function(){var e=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,r=document.querySelector(\\\".hsr-wrapper__list\\\"),t=document.querySelector(\\\".hsr-mobile-sidebar .hsr-wrapper\\\"),o=document.querySelector(\\\".hsr-navbar-buttons\\\");if(e<=1085)r&&t&&(t.appendChild(r),null!==o&&t.appendChild(o));else{var n=document.querySelector(\\\".hsr-onboarding-navbar__wrapper\\\");r&&n&&(n.appendChild(r),null!==o&&n.appendChild(o),document.querySelector(\\\".hsr-mobile-sidebar\\\").classList.remove(\\\"hsr-active\\\"))}}),window.dispatchEvent(new Event(\\\"resize\\\"));var e=document.querySelector(\\\".hsr-mobile-sidebar\\\"),r=document.querySelectorAll(\\\".hsr-close, .hsr-mobile-menu-icon\\\");null!==r&&r.forEach(function(r){r.addEventListener(\\\"click\\\",function(r){e.classList.toggle(\\\"hsr-active\\\"),document.querySelector(\\\"body\\\").classList.toggle(\\\"hsr-sidebar-active\\\"),r.stopPropagation()})}),document.addEventListener(\\\"click\\\",function(r){null!==e&&(e.contains(r.target)||(e.classList.remove(\\\"hsr-active\\\"),document.querySelector(\\\"body\\\").classList.remove(\\\"hsr-sidebar-active\\\")))})})},796:()=>{}},t={};function o(e){var n=t[e];if(void 0!==n)return n.exports;var i=t[e]={exports:{}};return r[e](i,i.exports,o),i.exports}o.m=r,e=[],o.O=(r,t,n,i)=>{if(!t){var s=1\/0;for(l=0;l<e.length;l++){for(var[t,n,i]=e[l],a=!0,c=0;c<t.length;c++)(!1&i||s>=i)&&Object.keys(o.O).every(e=>o.O[e](t[c]))?t.splice(c--,1):(a=!1,i<s&&(s=i));if(a){e.splice(l--,1);var d=n();void 0!==d&&(r=d)}}return r}i=i||0;for(var l=e.length;l>0&&e[l-1][2]>i;l--)e[l]=e[l-1];e[l]=[t,n,i]},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={580:0,540:0};o.O.j=r=>0===e[r];var r=(r,t)=>{var n,i,[s,a,c]=t,d=0;if(s.some(r=>0!==e[r])){for(n in a)o.o(a,n)&&(o.m[n]=a[n]);if(c)var l=c(o)}for(r&&r(t);d<s.length;d++)i=s[d],o.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return o.O(l)},t=self.webpackChunk=self.webpackChunk||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})(),o.O(void 0,[540],()=>o(144));var n=o.O(void 0,[540],()=>o(796));n=o.O(n)})();\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-menu-manager\/assets\/css\/style.min.css\",\"ext\":\"css\",\"size\":5794,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"@font-face{font-family:DMSans;font-weight:400;src:url(..\/fonts\/DMSans-Regular.ttf)}@font-face{font-family:DMSans;font-weight:700;src:url(..\/fonts\/DMSans-Bold.ttf)}.hsr-onboarding-navbar{display:flex;justify-content:center;margin-left:-20px;width:calc(100% + 20px)}.hsr-onboarding-navbar__wrapper{align-items:center;background:#fff;border-bottom:1px solid #dadce0;display:flex;height:72px;position:relative;width:100%}@media (max-width:1085px){.hsr-onboarding-navbar__wrapper{height:56px}}.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 30px}.hsr-onboarding-navbar__wrapper .hsr-logo .hsr-mobile-logo{display:none}@media (max-width:1170px){.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 10px 0 20px}}@media (max-width:1085px){.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 10px 0 15px}.hsr-onboarding-navbar__wrapper .hsr-logo svg{display:none}.hsr-onboarding-navbar__wrapper .hsr-logo .hsr-mobile-logo{display:block}}@media (max-width:782px){.hsr-onboarding-navbar__wrapper .hsr-logo{padding:0 10px 0 20px}}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons{align-items:center;display:flex;position:absolute;right:30px;top:17px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel{align-items:center;border:1px solid #dadce0;border-radius:8px;display:flex;padding:6px 16px;transition:.3s}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel:hover{opacity:.8}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel:focus{box-shadow:none;outline:none}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel a{margin-right:5px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-hpanel a:hover{opacity:1}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons .hts-preview-website{margin-right:30px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a{color:#673de6;font-size:14px;font-weight:700;line-height:24px;text-decoration:none;transition:.3s}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a:hover{opacity:.8}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a:focus{box-shadow:none;outline:none}@media (max-width:1085px){.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons{right:15px;top:15px}.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons a,.hsr-onboarding-navbar__wrapper .hsr-navbar-buttons svg{display:none}}.hsr-wrapper{background:#fff;border-bottom:1px solid #dadce0;height:72px;width:100%}@media (max-width:1085px){.hsr-wrapper{height:56px}}.hsr-list,.hsr-wrapper__list{align-items:center;display:flex;margin:0}.hsr-list{height:inherit;padding:0 16px}.hsr-list__item{align-items:center;border-bottom:1px solid transparent;cursor:pointer;display:flex;margin:0}.hsr-list__item svg{margin-right:5px}.hsr-list__item svg path{fill:#727586}@media (max-width:1085px){.hsr-list__item{display:none}}.hsr-list__item.hsr-active a{background-color:#ebe4ff;border-bottom:2px solid #673de6;color:#673de6}.hsr-list__item:hover:not(.hsr-active){border-bottom:1px solid #dadce0}@media (max-width:1085px){.hsr-list__item:hover:not(.hsr-active){border-bottom:0}}.hsr-list__item:hover:not(.hsr-active) a{background-color:#f2f3f6}@media (max-width:1085px){.hsr-list__item:hover:not(.hsr-active) a{border-bottom:none;border-radius:5px}}.hsr-list__item a{color:#727586;font-size:16px;font-weight:400;line-height:24px;padding:24px 30px;text-decoration:none}@media (max-width:1085px){.hsr-list__item a{display:block;margin-bottom:5px;padding:12px 16px}}.hsr-mobile-sidebar{display:none;transform:translateX(100%);transition:.3s}.hsr-mobile-sidebar.hsr-active{animation:sidebar-animation .3s;background-color:#fff;display:block;height:100vh;padding-top:25px;position:fixed;right:0;top:0;transform:translateX(0);width:300px;z-index:999}.hsr-mobile-sidebar.hsr-active .hsr-wrapper{padding:0 20px}@media (max-width:1085px){.hsr-mobile-sidebar.hsr-active .hsr-wrapper{border-bottom:0;height:auto;padding:0}}.hsr-mobile-sidebar.hsr-active .hsr-close{cursor:pointer;float:right;margin-right:20px;margin-top:27px}@media (max-width:782px){.hsr-mobile-sidebar.hsr-active .hsr-close{margin-top:41px}}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list{display:block;margin-top:100px;padding:0}@media (max-width:1085px){.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list{margin-left:20px;margin-right:20px}}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list .hsr-list__item{display:block;margin-bottom:5px;padding:0}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list .hsr-list__item svg{display:none}.hsr-mobile-sidebar.hsr-active .hsr-wrapper__list .hsr-list__item.hsr-active a{border-bottom:none;border-radius:5px}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons{align-items:center;border-top:1px solid #dadce0;display:flex;flex-wrap:wrap;margin:0 20px;padding:20px 0}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons svg{margin-right:8px}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons a{color:#673de6;font-size:14px;font-weight:700;padding-left:8px;text-decoration:none}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons a:focus{box-shadow:none;outline:none}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons .hts-hpanel{align-items:center;border:1px solid #dadce0;border-radius:6px;display:flex;margin-top:10px;padding:5px 8px;width:auto}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons .hts-hpanel a{margin-right:5px;padding-left:0}.hsr-mobile-sidebar.hsr-active .hsr-navbar-buttons .hts-hpanel svg{margin-right:0}.hsr-mobile-menu-icon{display:none}@media (max-width:1085px){.hsr-mobile-menu-icon{cursor:pointer;display:block;position:absolute;right:20px;top:15px}}@media (max-width:782px){.hsr-mobile-menu-icon{right:9px}}body.hsr-sidebar-active .hsr-overlay{background-color:rgba(0,0,0,.5);height:100vh;left:0;position:fixed;top:0;width:100%;z-index:99}@keyframes sidebar-animation{0%{transform:translateX(100%)}to{transform:translateX(0)}}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/templates\/menu.php\",\"ext\":\"php\",\"size\":6846,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nuse Hostinger\\\\WpHelper\\\\Utils;\\n\\n$submenus = self::getMenuSubpages();\\n\\n?>\\n    <div class=\\\"hsr-overlay\\\"><\/div>\\n    <div class=\\\"hsr-onboarding-navbar\\\">\\n        <div class=\\\"hsr-mobile-sidebar\\\">\\n            <div class=\\\"hsr-close\\\">\\n                <svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n                    <path d=\\\"M6.99961 8.04961L1.74961 13.2996C1.59961 13.4496 1.42461 13.5246 1.22461 13.5246C1.02461 13.5246 0.849609 13.4496 0.699609 13.2996C0.549609 13.1496 0.474609 12.9746 0.474609 12.7746C0.474609 12.5746 0.549609 12.3996 0.699609 12.2496L5.94961 6.99961L0.699609 1.74961C0.549609 1.59961 0.474609 1.42461 0.474609 1.22461C0.474609 1.02461 0.549609 0.849609 0.699609 0.699609C0.849609 0.549609 1.02461 0.474609 1.22461 0.474609C1.42461 0.474609 1.59961 0.549609 1.74961 0.699609L6.99961 5.94961L12.2496 0.699609C12.3996 0.549609 12.5746 0.474609 12.7746 0.474609C12.9746 0.474609 13.1496 0.549609 13.2996 0.699609C13.4496 0.849609 13.5246 1.02461 13.5246 1.22461C13.5246 1.42461 13.4496 1.59961 13.2996 1.74961L8.04961 6.99961L13.2996 12.2496C13.4496 12.3996 13.5246 12.5746 13.5246 12.7746C13.5246 12.9746 13.4496 13.1496 13.2996 13.2996C13.1496 13.4496 12.9746 13.5246 12.7746 13.5246C12.5746 13.5246 12.3996 13.4496 12.2496 13.2996L6.99961 8.04961Z\\\"\\n                          fill=\\\"#673DE6\\\"><\/path>\\n                <\/svg>\\n            <\/div>\\n            <div class=\\\"hsr-wrapper\\\"><\/div>\\n        <\/div>\\n        <div class=\\\"hsr-onboarding-navbar__wrapper\\\">\\n            <div class=\\\"hsr-logo\\\">\\n                <svg class=\\\"hsr-mobile-logo\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n                    <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M2.00025 14.046V0.000497794L9.08916 3.78046V10.1086L18.4735 10.1132L25.6774 14.046H2.00025ZM20.3925 8.95058V0L27.6725 3.6859V13.1797L20.3925 8.95058ZM20.3924 26.1177V19.8441L10.9358 19.8375C10.9446 19.8793 3.6123 15.8418 3.6123 15.8418L27.6725 15.9547V30L20.3924 26.1177ZM2 26.1177L2.00025 16.9393L9.08916 21.0683V29.8033L2 26.1177Z\\\" fill=\\\"#1D1E20\\\"\/>\\n                <\/svg>\\n                <svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n                    <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M2.00025 14.046V0.000497794L9.08916 3.78046V10.1086L18.4735 10.1132L25.6774 14.046H2.00025ZM20.3925 8.95058V0L27.6725 3.6859V13.1797L20.3925 8.95058ZM20.3924 26.1177V19.8441L10.9358 19.8375C10.9446 19.8793 3.6123 15.8418 3.6123 15.8418L27.6725 15.9547V30L20.3924 26.1177ZM2 26.1177L2.00025 16.9393L9.08916 21.0683V29.8033L2 26.1177Z\\\" fill=\\\"#1D1E20\\\"\/>\\n                <\/svg>\\n            <\/div>\\n            <svg class=\\\"hsr-mobile-menu-icon\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\n                 xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n                <path d=\\\"M3.75 18C3.5375 18 3.35938 17.9277 3.21563 17.7831C3.07187 17.6385 3 17.4594 3 17.2456C3 17.0319 3.07187 16.8542 3.21563 16.7125C3.35938 16.5708 3.5375 16.5 3.75 16.5H20.25C20.4625 16.5 20.6406 16.5723 20.7844 16.7169C20.9281 16.8615 21 17.0406 21 17.2544C21 17.4681 20.9281 17.6458 20.7844 17.7875C20.6406 17.9292 20.4625 18 20.25 18H3.75ZM3.75 12.75C3.5375 12.75 3.35938 12.6777 3.21563 12.5331C3.07187 12.3885 3 12.2094 3 11.9956C3 11.7819 3.07187 11.6042 3.21563 11.4625C3.35938 11.3208 3.5375 11.25 3.75 11.25H20.25C20.4625 11.25 20.6406 11.3223 20.7844 11.4669C20.9281 11.6115 21 11.7906 21 12.0044C21 12.2181 20.9281 12.3958 20.7844 12.5375C20.6406 12.6792 20.4625 12.75 20.25 12.75H3.75ZM3.75 7.5C3.5375 7.5 3.35938 7.42771 3.21563 7.28313C3.07187 7.13853 3 6.95936 3 6.74563C3 6.53188 3.07187 6.35417 3.21563 6.2125C3.35938 6.07083 3.5375 6 3.75 6H20.25C20.4625 6 20.6406 6.07229 20.7844 6.21687C20.9281 6.36147 21 6.54064 21 6.75437C21 6.96812 20.9281 7.14583 20.7844 7.2875C20.6406 7.42917 20.4625 7.5 20.25 7.5H3.75Z\\\"\\n                      fill=\\\"#36344D\\\"><\/path>\\n            <\/svg>\\n            <?php\\n            if (!empty($submenus)) { ?>\\n                <ul class=\\\"hsr-wrapper__list\\\">\\n                    <?php\\n\\n                    foreach ($submenus as $index => $submenu) {\\n                        $page = (isset($_GET['page'])) ? $_GET['page'] : '';\\n\\n                        $is_active = ($page === $submenu['menu_slug'] || ($page === self::MENU_SLUG && $index === 0));\\n\\n                        ?>\\n                        <li\\n                                class=\\\"hsr-list__item <?php echo ($is_active) ? \\\"hsr-active\\\" : \\\"\\\"; ?>\\\"\\n                        >\\n                            <a\\n                                    href=\\\"<?php echo menu_page_url($submenu['menu_slug'], false); ?>\\\"\\n                                    class=\\\"<?php echo $submenu['menu_slug']; ?>\\\"\\n                            >\\n                                <?php\\n\\n                                echo $submenu['menu_title'];\\n\\n                                ?>\\n                            <\/a>\\n                        <\/li>\\n                        <?php\\n                    }\\n\\n                    ?>\\n                <\/ul>\\n            <?php } ?>\\n\\n            <?php\\n            $utils     = new Utils();\\n            $api_token = Utils::getApiToken();\\n            ?>\\n            <div class=\\\"hsr-navbar-buttons\\\">\\n                <?php if (!empty($api_token)) { ?>\\n                    <div class=\\\"hts-hpanel\\\">\\n                        <a href=\\\"<?php echo esc_url($utils->getHpanelDomainUrl()); ?>\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">\\n                            <?php echo esc_html__('Go to hPanel', 'hostinger-wp-menu-package'); ?>\\n                        <\/a>\\n                        <svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 16\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n                            <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M2.5 5.24609C2.5 3.72731 3.73122 2.49609 5.25 2.49609H6C6.41421 2.49609 6.75 2.83188 6.75 3.24609C6.75 3.66031 6.41421 3.99609 6 3.99609H5.25C4.55964 3.99609 4 4.55574 4 5.24609V10.6842C4 11.3745 4.55964 11.9342 5.25 11.9342H10.7508C11.4411 11.9342 12.0008 11.3745 12.0008 10.6842V9.99829C12.0008 9.58408 12.3366 9.24829 12.7508 9.24829C13.165 9.24829 13.5008 9.58408 13.5008 9.99829V10.6842C13.5008 12.203 12.2696 13.4342 10.7508 13.4342H5.25C3.73122 13.4342 2.5 12.203 2.5 10.6842V5.24609ZM12 5.05906L8.03033 9.02873C7.73744 9.32162 7.26256 9.32162 6.96967 9.02873C6.67678 8.73583 6.67678 8.26096 6.96967 7.96807L10.9393 3.9984L9 3.9984C8.58579 3.9984 8.25 3.66261 8.25 3.2484C8.25 2.83418 8.58579 2.4984 9 2.4984L12.25 2.4984C12.9404 2.4984 13.5 3.05804 13.5 3.7484V6.9984C13.5 7.41261 13.1642 7.7484 12.75 7.7484C12.3358 7.7484 12 7.41261 12 6.9984V5.05906Z\\\" fill=\\\"#673DE6\\\"\/>\\n                        <\/svg>\\n                    <\/div>\\n                <?php } ?>\\n            <\/div>\\n        <\/div>\\n    <\/div>\\n<?php\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/Menus.php\",\"ext\":\"php\",\"size\":7758,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpMenuManager;\\n\\nuse WP_Admin_Bar;\\n\\nclass Menus\\n{\\n    \/**\\n     * @var Manager\\n     *\/\\n    private Manager $manager;\\n\\n    public const MENU_SLUG = 'hostinger';\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function init(): void\\n    {\\n        if (!$this->manager->checkCompatibility()) {\\n            add_action('admin_bar_menu', [$this, 'modifyAdminBar'], 999);\\n            add_filter('admin_body_class', [$this, 'addMenuClass']);\\n            add_action('admin_menu', [$this, 'registerAdminMenu']);\\n        } else {\\n            $this->manager->maybeDoCompatibilityRedirect();\\n            add_action('admin_notices', [$this, 'compatibilityMessage'], 0);\\n        }\\n    }\\n\\n    \/**\\n     * @param Manager $manager\\n     *\\n     * @return void\\n     *\/\\n    public function setManager(Manager $manager): void\\n    {\\n        $this->manager = $manager;\\n    }\\n\\n    \/**\\n     * @param WP_Admin_Bar $bar\\n     *\\n     * @return void\\n     *\/\\n    public function modifyAdminBar(WP_Admin_Bar $bar): void\\n    {\\n        if (!is_user_logged_in()){\\n            return;\\n        }\\n\\n        $menu_items = apply_filters('hostinger_admin_menu_bar_items', []);\\n\\n        if (!empty($menu_items)) {\\n            $hostinger_icon = '<svg width=\\\"28\\\" height=\\\"29\\\" viewBox=\\\"0 0 28 29\\\" fill=\\\"#9ca1a7\\\" style=\\\"margin-right: 6px; max-height: 22px; float: left; margin-top: 4px;\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n\\t\\t\\t\\t<path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M1.8669 13.6096V0.500465L8.48322 4.02842V9.93472L17.2419 9.93895L23.9655 13.6096H1.8669ZM19.033 8.85388V0.5L25.8277 3.94018V12.801L19.033 8.85388ZM19.033 24.8765V19.0211L10.2067 19.015C10.215 19.054 3.37149 15.2857 3.37149 15.2857L25.8277 15.3911V28.5L19.033 24.8765ZM1.86667 24.8765L1.8669 16.31L8.48322 20.1637V28.3164L1.86667 24.8765Z\\\" fill=\\\"\\\" \/>\\n\\t\\t\\t<\/svg>';\\n\\n            $bar->add_menu([\\n                'id'     => 'hostinger_admin_bar',\\n                'parent' => null,\\n                'group'  => null,\\n                'title'  => $hostinger_icon . esc_html__('Hostinger', 'hostinger-wp-menu-package'),\\n            ]);\\n\\n\\t        foreach ($menu_items as $menu_item) {\\n\\t\\t        $menu_item_data = [\\n\\t\\t\\t        'id'     => $menu_item['id'],\\n\\t\\t\\t        'parent' => 'hostinger_admin_bar',\\n\\t\\t\\t        'group'  => null,\\n\\t\\t\\t        'title'  => $menu_item['title'],\\n\\t\\t\\t        'href'   => $menu_item['href'],\\n\\t\\t        ];\\n\\n\\t\\t        if( isset( $menu_item['meta'] ) ){\\n\\t\\t\\t        $menu_item_data['meta'] = $menu_item['meta'];\\n\\t\\t        }\\n\\n\\t\\t        $bar->add_menu($menu_item_data);\\n\\t        }\\n        }\\n    }\\n\\n    \/**\\n     * @param mixed $classes\\n     *\\n     * @return mixed\\n     *\/\\n    public function addMenuClass(mixed $classes): mixed\\n    {\\n\\n        if (!is_string( $classes)) return $classes;\\n\\n        $classes .= ' hostinger-hide-main-menu-item';\\n\\n        if (!empty(self::isSubmenuItemsHidden())) {\\n            $classes .= ' hostinger-hide-all-menu-items';\\n        }\\n\\n        return $classes;\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    public function registerAdminMenu(): bool\\n    {\\n        $submenus = self::getMenuSubpages();\\n\\n        if (empty($submenus)) {\\n            return false;\\n        }\\n\\n        $icon = 'data:image\/svg+xml;base64,PHN2ZyB3aWR0aD0iMjEiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAyMSAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0wLjAwMDE5OTY1MyAxMS4yMzY4VjAuMDAwMzk4MjM1TDUuNjcxMzMgMy4wMjQzNlY4LjA4NjkxTDEzLjE3ODggOC4wOTA1M0wxOC45NDE5IDExLjIzNjhIMC4wMDAxOTk2NTNaTTE0LjcxNCA3LjE2MDQ3VjBMMjAuNTM4IDIuOTQ4NzJWMTAuNTQzN0wxNC43MTQgNy4xNjA0N1pNMTQuNzE0IDIwLjg5NDJWMTUuODc1M0w3LjE0ODYyIDE1Ljg3QzcuMTU1NjggMTUuOTAzNCAxLjI4OTg0IDEyLjY3MzUgMS4yODk4NCAxMi42NzM1TDIwLjUzOCAxMi43NjM4VjI0TDE0LjcxNCAyMC44OTQyWk0wIDIwLjg5NDFMMC4wMDAyMDE3NjkgMTMuNTUxNEw1LjY3MTMzIDE2Ljg1NDZWMjMuODQyN0wwIDIwLjg5NDFaIiBmaWxsPSJ3aGl0ZSIvPgo8L3N2Zz4K';\\n\\n        add_menu_page(\\n            __('Hostinger', 'hostinger-wp-menu-package'),\\n            __('Hostinger', 'hostinger-wp-menu-package'),\\n            'edit_posts',\\n            self::MENU_SLUG,\\n            [$this, 'render'],\\n            $icon,\\n            1\\n        );\\n\\n        $this->registerSubMenus();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function render(): void\\n    {\\n        if ($this->hasLoadedMainContent() && !empty(self::isSubmenuItemsHidden())) {\\n            do_action('hostinger_main_menu_content');\\n        } else {\\n            $submenus = self::getMenuSubpages();\\n\\n            if (!empty($submenus)) {\\n                call_user_func($submenus[0]['callback']);\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public static function renderMenuNavigation(): string\\n    {\\n        ob_start();\\n\\n        require_once __DIR__ . DIRECTORY_SEPARATOR . 'templates' . DIRECTORY_SEPARATOR . 'menu.php';\\n\\n        $content = ob_get_contents();\\n\\n        ob_end_clean();\\n\\n        return $content;\\n    }\\n\\n    \/**\\n     * @return array\\n     *\/\\n    public static function getMenuSubpages(): array\\n    {\\n        return apply_filters('hostinger_menu_subpages', []);\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    public static function isSubmenuItemsHidden(): bool\\n    {\\n        return !empty(get_option('hostinger_hide_subpages'));\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    private function hasLoadedMainContent(): bool\\n    {\\n        return has_action('hostinger_main_menu_content');\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    private function registerSubMenus(): bool\\n    {\\n        $submenus = self::getMenuSubpages();\\n\\n        if (empty($submenus)) {\\n            return false;\\n        }\\n\\n        foreach ($submenus as $submenu) {\\n            add_submenu_page(\\n                self::MENU_SLUG,\\n                $submenu['page_title'],\\n                $submenu['menu_title'],\\n                $submenu['capability'],\\n                $submenu['menu_slug'],\\n                $submenu['callback'],\\n                $submenu['menu_order']\\n            );\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function compatibilityMessage(): void\\n    {\\n        ?>\\n        <div class=\\\"notice notice-error is-dismissible hts-theme-settings\\\">\\n            <p>\\n                <strong><?php echo __('Attention! Outdated Plugins Detected', 'hostinger-wp-menu-package') ?><\/strong>\\n            <\/p>\\n            <p>\\n                <strong><?php echo __('Action Required:', 'hostinger-wp-menu-package') ?><\/strong> <?php echo __('Your website has some outdated plugins that might prevent new features from working properly.', 'hostinger-wp-menu-package') ?>\\n            <\/p>\\n\\n                <ul style=\\\"list-style: circle;margin-left: 18px;\\\">\\n                <?php\\n\\n                if (!empty($this->manager->getOutdatedPlugins())) {\\n                    ?>\\n                    <li>\\n                        <p><?php echo __('Outdated plugins:', 'hostinger-wp-menu-package') ?> <?php echo implode(', ', $this->manager->getOutdatedPlugins()); ?><\/p>\\n                    <\/li>\\n                    <?php\\n                }\\n\\n                if (!empty($this->manager->getAffectedActivePlugins())) {\\n                    ?>\\n                    <li>\\n                        <p><?php echo __('Affected plugins:', 'hostinger-wp-menu-package') ?> <?php echo implode(', ', $this->manager->getAffectedActivePlugins()); ?><\/p>\\n                    <\/li>\\n                    <?php\\n                }\\n\\n                ?>\\n            <\/ul>\\n            <p>\\n                <a href=\\\"<?php echo esc_url(admin_url('update-core.php')); ?>\\\" class=\\\"button-primary\\\">\\n                    <?php echo __('Update plugins', 'hostinger-wp-menu-package') ?>\\n                <\/a>\\n            <\/p>\\n        <\/div>\\n        <?php\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/Manager.php\",\"ext\":\"php\",\"size\":6295,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpMenuManager;\\n\\nclass Manager\\n{\\n    \/**\\n     * @var Manager instance.\\n     *\/\\n    private static ?Manager $instance = null;\\n\\n    \/**\\n     * @var array\\n     *\/\\n    private array $objects = [];\\n\\n    \/**\\n     * @var array\\n     *\/\\n    public array $old_plugins = [\\n        [\\n            'name' => 'Hostinger',\\n            'slug' => 'hostinger',\\n            'version' => '3.0.0',\\n        ],\\n        [\\n            'name' => 'Hostinger Affiliate Plugin',\\n            'slug' => 'hostinger-affiliate-plugin',\\n            'version' => '2.0.0',\\n        ],\\n        [\\n            'name' => 'Hostinger AI Assistant',\\n            'slug' => 'hostinger-ai-assistant',\\n            'version' => '2.0.0',\\n        ]\\n    ];\\n\\n    \/**\\n     * @var array\\n     *\/\\n    public array $outdated_plugins = [];\\n\\n    \/**\\n     * @var array\\n     *\/\\n    public array $affected_plugins = [\\n        'hostinger' => 'Hostinger Tools',\\n        'hostinger-affiliate-plugin' => 'Hostinger Affiliate Connector',\\n        'hostinger-ai-assistant' => 'Hostinger AI',\\n        'hostinger-easy-onboarding' => 'Hostinger Easy Onboarding',\\n    ];\\n\\n    \/**\\n     * Allow only one instance of class\\n     *\\n     * @return self\\n     *\/\\n    public static function getInstance(): self\\n    {\\n        if (null === self::$instance) {\\n            self::$instance = new self();\\n        }\\n\\n        return self::$instance;\\n    }\\n\\n    \/**\\n     * @return array|string[]\\n     *\/\\n    public function getOutdatedPlugins(): array\\n    {\\n        return $this->outdated_plugins;\\n    }\\n\\n    \/**\\n     * @return array\\n     *\/\\n    public function getAffectedActivePlugins(): array\\n    {\\n        include_once(ABSPATH . 'wp-admin\/includes\/plugin.php');\\n\\n        $plugins = [];\\n\\n        if (empty($this->getAffectedPlugins())) {\\n            return [];\\n        }\\n\\n        foreach ($this->getAffectedPlugins() as $plugin_slug => $plugin_name) {\\n            if (\\\\is_plugin_active($plugin_slug . DIRECTORY_SEPARATOR . $plugin_slug . '.php')) {\\n                $plugins[$plugin_slug] = $plugin_name;\\n            }\\n        }\\n\\n        return $plugins;\\n    }\\n\\n    \/**\\n     * @return array|string[]\\n     *\/\\n    public function getAffectedPlugins(): array\\n    {\\n        return $this->affected_plugins;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function boot(): bool\\n    {\\n        \/\/ Locale.\\n        $this->loadTextDomain();\\n\\n        \/\/ Modules.\\n        $this->registerModules();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function registerModules(): void\\n    {\\n        \/\/ Assets.\\n        $this->objects['assets'] = new Assets();\\n\\n        \/\/ Menus.\\n        $this->objects['menus'] = new Menus();\\n\\n        $this->addContainer();\\n\\n        \/\/ Init after container is added.\\n        $this->objects['assets']->init();\\n        $this->objects['menus']->init();\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    public function addContainer(): bool\\n    {\\n        if (empty($this->objects)) {\\n            return false;\\n        }\\n\\n        foreach ($this->objects as $object) {\\n            if (property_exists($object, 'manager')) {\\n                $object->setManager($this);\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return string\\n     *\/\\n    public function getPluginInfo(): string\\n    {\\n        $plugin_url = '';\\n\\n        $plugins = get_plugins();\\n        foreach ($plugins as $plugin_path => $plugin_info) {\\n            if (str_contains(__FILE__, 'plugins\/' . dirname($plugin_path) . '\/')) {\\n                $plugin_dir = dirname($plugin_path);\\n\\n                return plugins_url($plugin_dir);\\n            }\\n        }\\n\\n        return $plugin_url;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function loadTextDomain(): void\\n    {\\n        load_plugin_textdomain(\\n            'hostinger-wp-menu-package',\\n            false,\\n            dirname(dirname(plugin_basename(__FILE__))) . '\/languages\/'\\n        );\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    public function checkCompatibility(): bool\\n    {\\n        $outdated_plugins = false;\\n\\n        if (empty($this->old_plugins)) {\\n            return false;\\n        }\\n\\n        foreach ($this->old_plugins as $plugin_data) {\\n            if ($this->checkOutdatedPluginVersion($plugin_data['slug'], $plugin_data['version'])) {\\n                $outdated_plugins = true;\\n                $this->outdated_plugins[$plugin_data['slug']] = $plugin_data['name'];\\n            }\\n        }\\n\\n        return $outdated_plugins;\\n    }\\n\\n    \/**\\n     * If main hostinger plugin is outdated\\n     *\\n     * @return false\\n     *\/\\n    public function maybeDoCompatibilityRedirect(): bool\\n    {\\n        include_once(ABSPATH . 'wp-admin\/includes\/plugin.php');\\n\\n        $plugin_name = 'hostinger';\\n        $current_uri = !empty($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '';\\n\\n        $plugin = current(array_filter($this->old_plugins, fn($p) => $p['slug'] === $plugin_name));\\n\\n        $hostinger_admin_url = parse_url(admin_url('admin.php?page=hostinger'), PHP_URL_PATH) . '?page=hostinger';\\n\\n        if (str_contains($current_uri, $hostinger_admin_url)) {\\n            if (!$this->checkOutdatedPluginVersion($plugin['slug'], $plugin['version'])) {\\n                wp_redirect(get_admin_url());\\n                die();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @param $plugin_name\\n     *\\n     * @return string\\n     *\/\\n    private function getPluginVersion($plugin_name): string\\n    {\\n        $version = get_file_data(WP_PLUGIN_DIR . DIRECTORY_SEPARATOR . $plugin_name . DIRECTORY_SEPARATOR . $plugin_name . '.php', array('Version'), 'plugin');\\n\\n        if (empty($version[0])) {\\n            return '';\\n        }\\n\\n        return $version[0];\\n    }\\n\\n    \/**\\n     * @param $plugin_name\\n     * @param $compare_version\\n     *\\n     * @return bool\\n     *\/\\n    private function checkOutdatedPluginVersion($plugin_name, $compare_version): bool\\n    {\\n        include_once(ABSPATH . 'wp-admin\/includes\/plugin.php');\\n\\n        if (!\\\\is_plugin_active($plugin_name . DIRECTORY_SEPARATOR . $plugin_name . '.php')) {\\n            return false;\\n        }\\n\\n        $version = $this->getPluginVersion($plugin_name);\\n\\n        if (empty($version)) {\\n            return false;\\n        }\\n\\n        return version_compare($version, $compare_version, '<');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-menu-manager\/src\/Assets.php\",\"ext\":\"php\",\"size\":4734,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpMenuManager;\\n\\nuse Hostinger\\\\WpMenuManager\\\\Menus;\\nuse Hostinger\\\\WpHelper\\\\Utils;\\n\\nclass Assets\\n{\\n    \/**\\n     * @var Manager\\n     *\/\\n    private Manager $manager;\\n    private string $assetsPath;\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function init(): void\\n    {\\n        if (!$this->manager->checkCompatibility()) {\\n            add_action('admin_enqueue_scripts', [$this, 'enqueueAdminAssets']);\\n            add_action('admin_head', [$this, 'addMenuHidingCss']);\\n        }\\n        $this->assetsPath = '\/vendor\/hostinger\/hostinger-wp-menu-manager\/assets';\\n    }\\n\\n    \/**\\n     * @param Manager $manager\\n     *\\n     * @return void\\n     *\/\\n    public function setManager(Manager $manager): void\\n    {\\n        $this->manager = $manager;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function enqueueAdminAssets(): void {\\n        $defaultVersion = '1.0.0';\\n\\n        if ( $this->isHostingerMenuPage() ) {\\n            $pluginInfo   = $this->manager->getPluginInfo();\\n            $jsScriptPath = __DIR__ . '\/..\/assets\/js\/menus.min.js';\\n            $cssStylePath = __DIR__ . '\/..\/assets\/css\/style.min.css';\\n\\n            $jsVersion = $defaultVersion;\\n            if (file_exists($jsScriptPath)) {\\n                $jsVersion = filemtime($jsScriptPath) ?: $jsVersion;\\n            }\\n\\n            wp_enqueue_script( 'hostinger_menu_scripts',\\n                $pluginInfo . $this->assetsPath . '\/js\/menus.min.js',\\n                [ 'jquery' ],\\n                $jsVersion,\\n                false\\n            );\\n\\n            $cssVersion = $defaultVersion;\\n            if (file_exists($cssStylePath)) {\\n                $cssVersion = filemtime($cssStylePath) ?: $cssVersion;\\n            }\\n\\n            wp_enqueue_style( 'hostinger_menu_styles',\\n                $pluginInfo . $this->assetsPath . '\/css\/style.min.css',\\n                [],\\n                $cssVersion\\n            );\\n\\n            \/\/ Hide notices and badges in Hostinger menu pages.\\n            $hide_notices = '.notice { display: none !important; } .hostinger-notice { display: block !important; }';\\n            wp_add_inline_style( 'hostinger_menu_styles', $hide_notices );\\n\\n            if ( Utils::isPluginActive( 'wpforms' ) ) {\\n                $hide_wp_forms_counter = '.wp-admin #wpadminbar .wpforms-menu-notification-counter { display: none !important; }';\\n                wp_add_inline_style( 'hostinger_menu_styles', $hide_wp_forms_counter );\\n            }\\n            if ( Utils::isPluginActive( 'googleanalytics' ) ) {\\n                $hide_monsterinsights_notification = '.wp-admin .monsterinsights-menu-notification-indicator { display: none !important; }';\\n                wp_add_inline_style( 'hostinger_menu_styles', $hide_monsterinsights_notification );\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function addMenuHidingCss(): void\\n    {\\n        \/\/ These CSS rules should be loaded on every page in WordPress admin.\\n        ?>\\n        <style type=\\\"text\/css\\\">\\n            body.hostinger-hide-main-menu-item #toplevel_page_hostinger .wp-submenu > .wp-first-item {\\n                display: none;\\n            }\\n\\n            #wpadminbar #wp-admin-bar-hostinger_admin_bar .ab-item {\\n                align-items: center;\\n                display: flex;\\n            }\\n\\n            #wpadminbar #wp-admin-bar-hostinger_admin_bar .ab-sub-wrapper .ab-item svg {\\n                fill: #9ca1a7;\\n                margin-left: 3px;\\n                max-height: 18px;\\n            }\\n\\n            body.hostinger-hide-all-menu-items #toplevel_page_hostinger .wp-submenu {\\n                display: none !important;\\n            }\\n\\n            body.hostinger-hide-all-menu-items .hsr-onboarding-navbar__wrapper {\\n                justify-content: center;\\n            }\\n\\n            body.hostinger-hide-all-menu-items .hsr-onboarding-navbar .hsr-mobile-menu-icon,\\n            body.hostinger-hide-all-menu-items .hsr-onboarding-navbar .hsr-wrapper__list {\\n                display: none !important;\\n            }\\n        <\/style>\\n        <?php\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    private function isHostingerMenuPage(): bool\\n    {\\n        $admin_path = parse_url(admin_url(), PHP_URL_PATH);\\n\\n        $pages = [\\n            $admin_path . 'admin.php?page=' . Menus::MENU_SLUG\\n        ];\\n\\n        $subpages = Menus::getMenuSubpages();\\n\\n        foreach ($subpages as $page) {\\n            if (isset($page['menu_slug'])) {\\n                $pages[] = $admin_path . 'admin.php?page=' . $page['menu_slug'];\\n            }\\n        }\\n\\n        $utils = new Utils();\\n\\n        foreach ($pages as $page) {\\n            if ($utils->isThisPage($page)) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/assets\/js\/hostinger-surveys.min.js.LICENSE.txt\",\"ext\":\"txt\",\"size\":42176,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"\/*!\\n * Knockout JavaScript library v3.5.1\\n * (c) The Knockout.js team - http:\/\/knockoutjs.com\/\\n * License: MIT (http:\/\/www.opensource.org\/licenses\/mit-license.php)\\n *\/\\n\\n\/*!\\n * Signature Pad v4.2.0 | https:\/\/github.com\/szimek\/signature_pad\\n * (c) 2024 Szymon Nowak | Released under the MIT license\\n *\/\\n\\n\/*!\\n * jQuery JavaScript Library v3.7.1\\n * https:\/\/jquery.com\/\\n *\\n * Copyright OpenJS Foundation and other contributors\\n * Released under the MIT license\\n * https:\/\/jquery.org\/license\\n *\\n * Date: 2023-08-28T13:37Z\\n *\/\\n\\n\/*!\\n * surveyjs - Survey JavaScript library v1.11.13\\n * Copyright (c) 2015-2024 Devsoft Baltic O\u00dc  - http:\/\/surveyjs.io\/\\n * License: MIT (http:\/\/www.opensource.org\/licenses\/mit-license.php)\\n *\/\\n\\n\/*! .\/action-bar-item-dropdown.html *\/\\n\\n\/*! .\/action-bar-item.html *\/\\n\\n\/*! .\/action-bar-separator.html *\/\\n\\n\/*! .\/action-bar.html *\/\\n\\n\/*! .\/action.html *\/\\n\\n\/*! .\/boolean-checkbox.html *\/\\n\\n\/*! .\/boolean-radio-item.html *\/\\n\\n\/*! .\/boolean-radio.html *\/\\n\\n\/*! .\/brand-info.html *\/\\n\\n\/*! .\/button-group-item.html *\/\\n\\n\/*! .\/cell.html *\/\\n\\n\/*! .\/character-counter.html *\/\\n\\n\/*! .\/choose-file.html *\/\\n\\n\/*! .\/comment.html *\/\\n\\n\/*! .\/components-container.html *\/\\n\\n\/*! .\/detail-button.html *\/\\n\\n\/*! .\/drag-drop-icon.html *\/\\n\\n\/*! .\/dropdown-select.html *\/\\n\\n\/*! .\/dropdown.html *\/\\n\\n\/*! .\/file-preview.html *\/\\n\\n\/*! .\/flowpanel.html *\/\\n\\n\/*! .\/header.html *\/\\n\\n\/*! .\/index.html *\/\\n\\n\/*! .\/item-content.html *\/\\n\\n\/*! .\/list-item-content.html *\/\\n\\n\/*! .\/list-item-group.html *\/\\n\\n\/*! .\/list-item.html *\/\\n\\n\/*! .\/list.html *\/\\n\\n\/*! .\/loading-indicator.html *\/\\n\\n\/*! .\/logo-image.html *\/\\n\\n\/*! .\/mobile.html *\/\\n\\n\/*! .\/notifier.html *\/\\n\\n\/*! .\/page.html *\/\\n\\n\/*! .\/panel.html *\/\\n\\n\/*! .\/paneldynamic-add-btn.html *\/\\n\\n\/*! .\/paneldynamic-next-btn.html *\/\\n\\n\/*! .\/paneldynamic-prev-btn.html *\/\\n\\n\/*! .\/paneldynamic-progress-text.html *\/\\n\\n\/*! .\/paneldynamic-remove-btn.html *\/\\n\\n\/*! .\/popup-pointer.html *\/\\n\\n\/*! .\/question-boolean.html *\/\\n\\n\/*! .\/question-buttongroup.html *\/\\n\\n\/*! .\/question-checkbox.html *\/\\n\\n\/*! .\/question-comment.html *\/\\n\\n\/*! .\/question-composite.html *\/\\n\\n\/*! .\/question-custom.html *\/\\n\\n\/*! .\/question-dropdown.html *\/\\n\\n\/*! .\/question-empty.html *\/\\n\\n\/*! .\/question-error.html *\/\\n\\n\/*! .\/question-errors.html *\/\\n\\n\/*! .\/question-expression.html *\/\\n\\n\/*! .\/question-file.html *\/\\n\\n\/*! .\/question-html.html *\/\\n\\n\/*! .\/question-image.html *\/\\n\\n\/*! .\/question-imagepicker.html *\/\\n\\n\/*! .\/question-matrix.html *\/\\n\\n\/*! .\/question-matrixdropdown.html *\/\\n\\n\/*! .\/question-matrixdynamic.html *\/\\n\\n\/*! .\/question-multipletext.html *\/\\n\\n\/*! .\/question-paneldynamic-navigator.html *\/\\n\\n\/*! .\/question-paneldynamic.html *\/\\n\\n\/*! .\/question-radiogroup.html *\/\\n\\n\/*! .\/question-ranking.html *\/\\n\\n\/*! .\/question-rating.html *\/\\n\\n\/*! .\/question-signaturepad.html *\/\\n\\n\/*! .\/question-tagbox.html *\/\\n\\n\/*! .\/question-text.html *\/\\n\\n\/*! .\/question.html *\/\\n\\n\/*! .\/questioncontent.html *\/\\n\\n\/*! .\/questiontitle.html *\/\\n\\n\/*! .\/rating-dropdown-item.html *\/\\n\\n\/*! .\/rating-dropdown.html *\/\\n\\n\/*! .\/rating-item-smiley.html *\/\\n\\n\/*! .\/rating-item-star.html *\/\\n\\n\/*! .\/rating-item.html *\/\\n\\n\/*! .\/remove-button.html *\/\\n\\n\/*! .\/row.html *\/\\n\\n\/*! .\/rows.html *\/\\n\\n\/*! .\/skeleton.html *\/\\n\\n\/*! .\/string-editor.html *\/\\n\\n\/*! .\/string-viewer.html *\/\\n\\n\/*! .\/string.html *\/\\n\\n\/*! .\/survey-nav-button.html *\/\\n\\n\/*! .\/svg-icon.html *\/\\n\\n\/*! .\/tagbox-item.html *\/\\n\\n\/*! .\/tagbox.html *\/\\n\\n\/*! .\/template-renderer.html *\/\\n\\n\/*! .\/timerpanel.html *\/\\n\\n\/*! .\/title-actions.html *\/\\n\\n\/*! .\/title-content.html *\/\\n\\n\/*! ModuleConcatenation bailout: Cannot concat with .\/node_modules\/knockout\/build\/output\/knockout-latest.js (<- Module is not an ECMAScript module) *\/\\n\\n\/*! ModuleConcatenation bailout: Cannot concat with external {\\\"root\\\":\\\"jQuery\\\",\\\"commonjs2\\\":\\\"jquery\\\",\\\"commonjs\\\":\\\"jquery\\\",\\\"amd\\\":\\\"jquery\\\"} (<- Module is not an ECMAScript module) *\/\\n\\n\/*! ModuleConcatenation bailout: Module is not an ECMAScript module *\/\\n\\n\/*! exports provided: Model, Version, ReleaseDate, checkLibraryVersion, setLicenseKey, slk, hasLicense, settings, Helpers, AnswerCountValidator, EmailValidator, NumericValidator, RegexValidator, SurveyValidator, TextValidator, ValidatorResult, ExpressionValidator, ValidatorRunner, ItemValue, Base, Event, EventBase, ArrayChanges, ComputedUpdater, SurveyError, SurveyElementCore, SurveyElement, DragTypeOverMeEnum, CalculatedValue, CustomError, AnswerRequiredError, OneAnswerRequiredError, RequreNumericError, ExceedSizeError, LocalizableString, LocalizableStrings, HtmlConditionItem, UrlConditionItem, ChoicesRestful, ChoicesRestfull, FunctionFactory, registerFunction, ConditionRunner, ExpressionRunner, ExpressionExecutor, Operand, Const, BinaryOperand, Variable, FunctionOperand, ArrayOperand, UnaryOperand, ConditionsParser, ProcessValue, JsonError, JsonIncorrectTypeError, JsonMetadata, JsonMetadataClass, JsonMissingTypeError, JsonMissingTypeErrorBase, JsonObject, JsonObjectProperty, JsonRequiredPropertyError, JsonUnknownPropertyError, Serializer, property, propertyArray, MatrixDropdownCell, MatrixDropdownRowModelBase, QuestionMatrixDropdownModelBase, MatrixDropdownColumn, matrixDropdownColumnTypes, QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedErrorRow, QuestionMatrixDropdownRenderedTable, MatrixDropdownRowModel, QuestionMatrixDropdownModel, MatrixDynamicRowModel, QuestionMatrixDynamicModel, MatrixRowModel, MatrixCells, QuestionMatrixModel, QuestionMatrixBaseModel, MultipleTextItemModel, MultipleTextCell, MultipleTextErrorCell, MutlipleTextErrorRow, MutlipleTextRow, QuestionMultipleTextModel, MultipleTextEditorModel, PanelModel, PanelModelBase, QuestionRowModel, FlowPanelModel, PageModel, DefaultTitleModel, Question, QuestionNonValue, QuestionEmptyModel, QuestionCheckboxBase, QuestionSelectBase, QuestionCheckboxModel, QuestionTagboxModel, QuestionRankingModel, QuestionCommentModel, QuestionDropdownModel, QuestionFactory, ElementFactory, QuestionFileModel, QuestionHtmlModel, QuestionRadiogroupModel, QuestionRatingModel, RenderedRatingItem, QuestionExpressionModel, QuestionTextBase, CharacterCounter, QuestionTextModel, QuestionBooleanModel, QuestionImagePickerModel, ImageItemValue, QuestionImageModel, QuestionSignaturePadModel, QuestionPanelDynamicModel, QuestionPanelDynamicItem, SurveyTimer, SurveyTimerModel, tryFocusPage, createTOCListModel, getTocRootCss, TOCModel, SurveyProgressModel, ProgressButtons, ProgressButtonsResponsivityManager, SurveyModel, SurveyTrigger, SurveyTriggerComplete, SurveyTriggerSetValue, SurveyTriggerVisible, SurveyTriggerCopyValue, SurveyTriggerRunExpression, SurveyTriggerSkip, Trigger, PopupSurveyModel, SurveyWindowModel, TextPreProcessor, Notifier, Cover, CoverCell, dxSurveyService, englishStrings, surveyLocalization, surveyStrings, QuestionCustomWidget, CustomWidgetCollection, QuestionCustomModel, QuestionCompositeModel, ComponentQuestionJSON, ComponentCollection, ListModel, MultiSelectListModel, PopupModel, createDialogOptions, PopupBaseViewModel, PopupDropdownViewModel, PopupModalViewModel, createPopupViewModel, createPopupModalViewModel, DropdownListModel, DropdownMultiSelectListModel, QuestionButtonGroupModel, ButtonGroupItemModel, ButtonGroupItemValue, IsMobile, IsTouch, _setIsTouch, confirmAction, confirmActionAsync, detectIEOrEdge, doKey2ClickUp, doKey2ClickDown, doKey2ClickBlur, loadFileFromBase64, increaseHeightByContent, createSvg, chooseFiles, sanitizeEditableContent, InputMaskBase, InputMaskPattern, InputMaskNumeric, InputMaskDateTime, InputMaskCurrency, CssClassBuilder, surveyCss, defaultV2Css, defaultV2ThemeName, DragDropCore, DragDropChoices, DragDropRankingSelectToRank, StylesManager, defaultStandardCss, modernCss, SvgIconRegistry, SvgRegistry, SvgBundleViewModel, RendererFactory, ResponsivityManager, VerticalResponsivityManager, unwrap, getOriginalEvent, getElement, createDropdownActionModel, createDropdownActionModelAdvanced, createPopupModelWithListModel, getActionDropdownButtonTarget, BaseAction, Action, ActionDropdownViewModel, AnimationUtils, AnimationPropertyUtils, AnimationGroupUtils, AnimationProperty, AnimationBoolean, AnimationGroup, AnimationTab, AdaptiveActionContainer, defaultActionBarCss, ActionContainer, DragOrClickHelper, bootstrapThemeName, bootstrapThemeColors, bootstrapThemeCssRules, bootstrapMaterialThemeName, bootstrapMaterialThemeColors, bootstrapMaterialThemeCssRules, defaultBootstrapCss, defaultBootstrapMaterialCss, ko *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/buttons.html *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/panel.html *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/popup.html *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/progress.html *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/templates\/entry.html *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/templates\/window.html *\/\\n\\n\/*! html-loader?interpolate!val-loader!.\/toc.html *\/\\n\\n\/*! no static exports found *\/\\n\\n\/*!*****************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/row.html ***!\\n  \\\\*****************************************\/\\n\\n\/*!******************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/page.html ***!\\n  \\\\******************************************\/\\n\\n\/*!******************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/rows.html ***!\\n  \\\\******************************************\/\\n\\n\/*!*******************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/index.html ***!\\n  \\\\*******************************************\/\\n\\n\/*!*******************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/panel.html ***!\\n  \\\\*******************************************\/\\n\\n\/*!********************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/header.html ***!\\n  \\\\********************************************\/\\n\\n\/*!********************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/string.html ***!\\n  \\\\********************************************\/\\n\\n\/*!*********************************************!*\\\\\\n  !*** .\/src\/entries\/jquery.ts + 271 modules ***!\\n  \\\\*********************************************\/\\n\\n\/*!*********************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/comment.html ***!\\n  \\\\*********************************************\/\\n\\n\/*!**********************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question.html ***!\\n  \\\\**********************************************\/\\n\\n\/*!***********************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/flowpanel.html ***!\\n  \\\\***********************************************\/\\n\\n\/*!************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/list\/list.html ***!\\n  \\\\************************************************\/\\n\\n\/*!************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/timerpanel.html ***!\\n  \\\\************************************************\/\\n\\n\/*!**************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/Left.svg ***!\\n  \\\\**************************************************\/\\n\\n\/*!**************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/More.svg ***!\\n  \\\\**************************************************\/\\n\\n\/*!**************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/header\/cell.html ***!\\n  \\\\**************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/Clear.svg ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/Right.svg ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/header\/index.html ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/popup-pointer.html ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-file.html ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-html.html ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-text.html ***!\\n  \\\\***************************************************\/\\n\\n\/*!***************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/questiontitle.html ***!\\n  \\\\***************************************************\/\\n\\n\/*!****************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/Delete.svg ***!\\n  \\\\****************************************************\/\\n\\n\/*!****************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/search.svg ***!\\n  \\\\****************************************************\/\\n\\n\/*!****************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/header\/mobile.html ***!\\n  \\\\****************************************************\/\\n\\n\/*!****************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/tagbox\/tagbox.html ***!\\n  \\\\****************************************************\/\\n\\n\/*!****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-empty.html ***!\\n  \\\\****************************************************\/\\n\\n\/*!****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-image.html ***!\\n  \\\\****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/V2Check.svg ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/chevron.svg ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/loading.svg ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/list\/list-item.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-custom.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-errors.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-matrix.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-rating.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-tagbox.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!*****************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/questioncontent.html ***!\\n  \\\\*****************************************************\/\\n\\n\/*!******************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/no-image.svg ***!\\n  \\\\******************************************************\/\\n\\n\/*!******************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-boolean.html ***!\\n  \\\\******************************************************\/\\n\\n\/*!******************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-comment.html ***!\\n  \\\\******************************************************\/\\n\\n\/*!******************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-ranking.html ***!\\n  \\\\******************************************************\/\\n\\n\/*!*******************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ArrowLeft.svg ***!\\n  \\\\*******************************************************\/\\n\\n\/*!*******************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/file\/choose-file.html ***!\\n  \\\\*******************************************************\/\\n\\n\/*!*******************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-checkbox.html ***!\\n  \\\\*******************************************************\/\\n\\n\/*!*******************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-dropdown.html ***!\\n  \\\\*******************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ArrowRight.svg ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ChooseFile.svg ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/Down_34x34.svg ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/RemoveFile.svg ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ShowCamera.svg ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/next_16x16.svg ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/action-bar\/action.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/dropdown\/dropdown.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/file\/file-preview.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/notifier\/notifier.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/skeleton\/skeleton.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/svg-icon\/svg-icon.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-composite.html ***!\\n  \\\\********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/CloseCamera.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/DefaultFile.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ModernCheck.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ModernRadio.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/SearchClear.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/TakePicture.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/TimerCircle.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/clear_16x16.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/close_16x16.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/drag-n-drop.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/rating-star.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/good.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/poor.svg ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/rating\/rating-item.html ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/tagbox\/tagbox-item.html ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-expression.html ***!\\n  \\\\*********************************************************\/\\n\\n\/*!*********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-radiogroup.html ***!\\n  \\\\*********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ChangeCamera.svg ***!\\n  \\\\**********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/expandDetail.svg ***!\\n  \\\\**********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ranking-dash.svg ***!\\n  \\\\**********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/title\/title-actions.html ***!\\n  \\\\**********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/title\/title-content.html ***!\\n  \\\\**********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-buttongroup.html ***!\\n  \\\\**********************************************************\/\\n\\n\/*!**********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-imagepicker.html ***!\\n  \\\\**********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/NavMenu_24x24.svg ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/V2Check_24x24.svg ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/rating-star-2.svg ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/restore_16x16.svg ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/normal.svg ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/list\/list-item-group.html ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/ranking\/item-content.html ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-multipletext.html ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-paneldynamic.html ***!\\n  \\\\***********************************************************\/\\n\\n\/*!***********************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-signaturepad.html ***!\\n  \\\\***********************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ProgressButton.svg ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/collapseDetail.svg ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/minimize_16x16.svg ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ranking-arrows.svg ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/average.svg ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/perfect.svg ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/action-bar\/action-bar.html ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/brand-info\/brand-info.html ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/logo-image\/logo-image.html ***!\\n  \\\\************************************************************\/\\n\\n\/*!************************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-matrixdynamic.html ***!\\n  \\\\************************************************************\/\\n\\n\/*!*************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ArrowDown_34x34.svg ***!\\n  \\\\*************************************************************\/\\n\\n\/*!*************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/not-good.svg ***!\\n  \\\\*************************************************************\/\\n\\n\/*!*************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/terrible.svg ***!\\n  \\\\*************************************************************\/\\n\\n\/*!*************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/list\/list-item-content.html ***!\\n  \\\\*************************************************************\/\\n\\n\/*!*************************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-matrixdropdown.html ***!\\n  \\\\*************************************************************\/\\n\\n\/*!**************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ProgressButtonV2.svg ***!\\n  \\\\**************************************************************\/\\n\\n\/*!**************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/excellent.svg ***!\\n  \\\\**************************************************************\/\\n\\n\/*!**************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/very-good.svg ***!\\n  \\\\**************************************************************\/\\n\\n\/*!**************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley\/very-poor.svg ***!\\n  \\\\**************************************************************\/\\n\\n\/*!**************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/rating\/rating-item-star.html ***!\\n  \\\\**************************************************************\/\\n\\n\/*!***************************************************************!*\\\\\\n  !*** .\/node_modules\/knockout\/build\/output\/knockout-latest.js ***!\\n  \\\\***************************************************************\/\\n\\n\/*!***************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/TakePicture_24x24.svg ***!\\n  \\\\***************************************************************\/\\n\\n\/*!***************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/full-screen_16x16.svg ***!\\n  \\\\***************************************************************\/\\n\\n\/*!***************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/rating-star-small.svg ***!\\n  \\\\***************************************************************\/\\n\\n\/*!****************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/rating\/rating-item-smiley.html ***!\\n  \\\\****************************************************************\/\\n\\n\/*!*****************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/V2DragElement_16x16.svg ***!\\n  \\\\*****************************************************************\/\\n\\n\/*!*****************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/back-to-panel_16x16.svg ***!\\n  \\\\*****************************************************************\/\\n\\n\/*!*****************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/rating-star-small-2.svg ***!\\n  \\\\*****************************************************************\/\\n\\n\/*!*****************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/action-bar\/action-bar-item.html ***!\\n  \\\\*****************************************************************\/\\n\\n\/*!******************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images sync nonrecursive \\\\.svg$ ***!\\n  \\\\******************************************************************\/\\n\\n\/*!******************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/Arrow_downGREY_10x10.svg ***!\\n  \\\\******************************************************************\/\\n\\n\/*!******************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/boolean-radio\/boolean-radio.html ***!\\n  \\\\******************************************************************\/\\n\\n\/*!******************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/string-editor\/string-editor.html ***!\\n  \\\\******************************************************************\/\\n\\n\/*!******************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/string-viewer\/string-viewer.html ***!\\n  \\\\******************************************************************\/\\n\\n\/*!*******************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ModernBooleanCheckInd.svg ***!\\n  \\\\*******************************************************************\/\\n\\n\/*!********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/question-error\/question-error.html ***!\\n  \\\\********************************************************************\/\\n\\n\/*!*********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/button-group\/button-group-item.html ***!\\n  \\\\*********************************************************************\/\\n\\n\/*!*********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/templates\/question-paneldynamic-navigator.html ***!\\n  \\\\*********************************************************************\/\\n\\n\/*!**********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/action-bar\/action-bar-separator.html ***!\\n  \\\\**********************************************************************\/\\n\\n\/*!**********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/dropdown-select\/dropdown-select.html ***!\\n  \\\\**********************************************************************\/\\n\\n\/*!**********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/rating-dropdown\/rating-dropdown.html ***!\\n  \\\\**********************************************************************\/\\n\\n\/*!***********************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ModernBooleanCheckChecked.svg ***!\\n  \\\\***********************************************************************\/\\n\\n\/*!***********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/boolean-radio\/boolean-radio-item.html ***!\\n  \\\\***********************************************************************\/\\n\\n\/*!***********************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/survey-actions\/survey-nav-button.html ***!\\n  \\\\***********************************************************************\/\\n\\n\/*!************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/boolean-checkbox\/boolean-checkbox.html ***!\\n  \\\\************************************************************************\/\\n\\n\/*!*************************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/ModernBooleanCheckUnchecked.svg ***!\\n  \\\\*************************************************************************\/\\n\\n\/*!*************************************************************************!*\\\\\\n  !*** .\/packages\/survey-core\/src\/images\/smiley sync nonrecursive \\\\.svg$ ***!\\n  \\\\*************************************************************************\/\\n\\n\/*!**************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/action-bar\/action-bar-item-dropdown.html ***!\\n  \\\\**************************************************************************\/\\n\\n\/*!**************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/character-counter\/character-counter.html ***!\\n  \\\\**************************************************************************\/\\n\\n\/*!**************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/loading-indicator\/loading-indicator.html ***!\\n  \\\\**************************************************************************\/\\n\\n\/*!**************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/template-renderer\/template-renderer.html ***!\\n  \\\\**************************************************************************\/\\n\\n\/*!***************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/rating-dropdown\/rating-dropdown-item.html ***!\\n  \\\\***************************************************************************\/\\n\\n\/*!********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/components-container\/components-container.html ***!\\n  \\\\********************************************************************************\/\\n\\n\/*!********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/paneldynamic-actions\/paneldynamic-add-btn.html ***!\\n  \\\\********************************************************************************\/\\n\\n\/*!*********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/matrix-actions\/detail-button\/detail-button.html ***!\\n  \\\\*********************************************************************************\/\\n\\n\/*!*********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/matrix-actions\/remove-button\/remove-button.html ***!\\n  \\\\*********************************************************************************\/\\n\\n\/*!*********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/paneldynamic-actions\/paneldynamic-next-btn.html ***!\\n  \\\\*********************************************************************************\/\\n\\n\/*!*********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/paneldynamic-actions\/paneldynamic-prev-btn.html ***!\\n  \\\\*********************************************************************************\/\\n\\n\/*!***********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/matrix-actions\/drag-drop-icon\/drag-drop-icon.html ***!\\n  \\\\***********************************************************************************\/\\n\\n\/*!***********************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/paneldynamic-actions\/paneldynamic-remove-btn.html ***!\\n  \\\\***********************************************************************************\/\\n\\n\/*!**************************************************************************************!*\\\\\\n  !*** .\/src\/knockout\/components\/paneldynamic-actions\/paneldynamic-progress-text.html ***!\\n  \\\\**************************************************************************************\/\\n\\n\/*!******************************************************************************************!*\\\\\\n  !*** external {\\\"root\\\":\\\"jQuery\\\",\\\"commonjs2\\\":\\\"jquery\\\",\\\"commonjs\\\":\\\"jquery\\\",\\\"amd\\\":\\\"jquery\\\"} ***!\\n  \\\\******************************************************************************************\/\\n\\n\/*!************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/templates\/entry.html ***!\\n  \\\\************************************************************************************************************\/\\n\\n\/*!*************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/templates\/window.html ***!\\n  \\\\*************************************************************************************************************\/\\n\\n\/*!*******************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/components\/panel\/panel.html ***!\\n  \\\\*******************************************************************************************************************\/\\n\\n\/*!*******************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/components\/popup\/popup.html ***!\\n  \\\\*******************************************************************************************************************\/\\n\\n\/*!********************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/components\/progress\/toc.html ***!\\n  \\\\********************************************************************************************************************\/\\n\\n\/*!************************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/components\/progress\/buttons.html ***!\\n  \\\\************************************************************************************************************************\/\\n\\n\/*!*************************************************************************************************************************!*\\\\\\n  !*** .\/node_modules\/html-loader?interpolate!.\/node_modules\/val-loader!.\/src\/knockout\/components\/progress\/progress.html ***!\\n  \\\\*************************************************************************************************************************\/\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/assets\/js\/hostinger-surveys.min.js\",\"ext\":\"js\",\"size\":2093007,\"mtime\":1756373564},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/assets\/css\/style.min.css\",\"ext\":\"css\",\"size\":3809,\"mtime\":1756373564,\"type\":\"text\",\"content\":\".hts-survey-wrapper{background:#fff;border:1px solid #dadce0;border-radius:4px 4px 0 0;bottom:0;box-shadow:0 0 12px rgba(29,30,32,.16);display:none;left:160px;margin-top:2rem;max-width:500px;padding:24px 32px;position:fixed;z-index:1}@media (max-width:960px){.hts-survey-wrapper{left:40px}}@media (max-width:780px){.hts-survey-wrapper{left:0}}.hts-survey-wrapper .close-btn{cursor:pointer;position:absolute;right:10px;top:10px}.hts-survey-wrapper .close-btn svg{height:20px;width:20px}@media (max-width:400px){.hts-survey-wrapper{padding:24px 15px}}@media (max-width:370px){.hts-survey-wrapper{padding:24px 10px}}.hts-survey-wrapper #hts-questionsLeft{color:#727586;display:none;font-size:14px;font-weight:400;line-height:24px}#hostinger-feedback-survey{direction:ltr}#hostinger-feedback-survey .sd-root-modern form textarea{border:1px solid #dadce0;border-radius:4px;color:#727586;padding:12px 16px;width:100%}#hostinger-feedback-survey .sd-root-modern form textarea:focus{border:1px solid #673de6}#hostinger-feedback-survey .sd-root-modern form .sd-question__header h5{font-size:19px;font-weight:700;letter-spacing:0;line-height:32px;margin-bottom:24px;margin-top:0;text-align:left}@media (max-width:450px){#hostinger-feedback-survey .sd-root-modern form .sd-question__header h5{font-size:16px;line-height:24px}}#hostinger-feedback-survey .sd-root-modern form .sd-btn{background:#673de6;border:none;border-radius:4px;color:#fff;cursor:pointer;flex-grow:0;font-weight:700;line-height:24px;margin:25px 0 0;padding:8px 24px;text-decoration:none}@media (max-width:450px){#hostinger-feedback-survey .sd-root-modern form .sd-btn{font-size:13px;padding:5px 15px}}#hostinger-feedback-survey .sd-root-modern form .sd-btn:hover{background:#5025d1}#hostinger-feedback-survey .sd-root-modern form .sd-action-bar{display:flex;justify-content:flex-end;margin:10px 0;position:relative}@media (max-width:450px){#hostinger-feedback-survey .sd-root-modern form .sd-action-bar{margin:5px 0}}#hostinger-feedback-survey .sd-root-modern form .sd-action-bar #sv-nav-prev{left:0;position:absolute;top:0}#hostinger-feedback-survey .sd-root-modern form .sd-rating{display:flex;justify-content:space-between;position:relative}#hostinger-feedback-survey .sd-root-modern form .sd-rating fieldset{align-items:center;display:flex;justify-content:space-between;width:100%}#hostinger-feedback-survey .sd-root-modern form .sd-rating .sd-rating__item--selected{background-color:#ebe4ff;border:1px solid #673de6}#hostinger-feedback-survey .sd-root-modern form .sd-rating .sd-rating__min-text{bottom:-25px;left:0;position:absolute}#hostinger-feedback-survey .sd-root-modern form .sd-rating .sd-rating__item-text{color:#727586;font-size:14px;font-weight:400;line-height:24px}#hostinger-feedback-survey .sd-root-modern form .sd-rating .sd-rating__max-text{bottom:-25px;position:absolute;right:0}#hostinger-feedback-survey .sd-root-modern form .sd-rating__item{align-items:center;border:1px solid #dadce0;border-radius:100%;color:#673de6;cursor:pointer;display:flex;height:30px;justify-content:center;margin:0;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:30px}#hostinger-feedback-survey .sd-root-modern form .sd-rating__item:hover{background-color:#ebe4ff;border:1px solid #673de6}#hostinger-feedback-survey .sd-root-modern form .sd-rating__item .sd-rating__item-text,#hostinger-feedback-survey .sd-root-modern form .sd-rating__item input{margin:0}#hostinger-feedback-survey .sd-root-modern form .sv-visuallyhidden[type=radio]{opacity:0;pointer-events:none;position:absolute}#hostinger-feedback-survey .sd-root-modern form .sd-rating__item-text{margin-left:5px}#hostinger-feedback-survey .sd-root-modern form .sd-remaining-character-counter{color:#727586;font-size:14px;font-weight:400;line-height:24px}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/src\/SurveyManager.php\",\"ext\":\"php\",\"size\":13464,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Surveys;\\n\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\n\\ndefined('ABSPATH') || exit;\\n\\nclass SurveyManager\\n{\\n    public const CACHE_THREE_HOURS = 3600 * 3;\\n    public const TIME_24_HOURS = 86400;\\n    public const CLIENT_SURVEY_IDENTIFIER = 'customer_satisfaction_score';\\n    public const CLIENT_WOO_COMPLETED_ACTIONS = 'woocommerce_task_list_tracked_completed_tasks';\\n    public const SUBMITTED_SURVEY_TRANSIENT = 'submitted_survey_transient';\\n    public const IS_CLIENT_ELIGIBLE_TRANSIENT_RESPONSE = 'client_eligibility_transient_response';\\n    public const IS_CLIENT_ELIGIBLE_TRANSIENT_REQUEST = 'survey_questions_transient_request';\\n    public const LOCATION_SLUG = 'location';\\n    public const HIDE_SURVEY_TRANSIENT = 'hts_hide_survey';\\n\\n    private Config $configHandler;\\n    private Helper $helper;\\n    private Rest $surveysRest;\\n\\n    public function __construct(\\n        Helper $helper,\\n        Config $configHandler,\\n        Rest $surveysRest\\n    ) {\\n        $this->helper        = $helper;\\n        $this->configHandler = $configHandler;\\n        $this->surveysRest   = $surveysRest;\\n    }\\n\\n    \/**\\n     * Get WooCommerce admin pages paths\\n     *\\n     * @return array Array of WooCommerce admin page paths\\n     *\/\\n    public function getWooCommercePages(): array\\n    {\\n        $admin_path = parse_url(admin_url(), PHP_URL_PATH);\\n\\n        $pages = [\\n            'admin.php?page=wc-admin',\\n            'edit.php?post_type=shop_order',\\n            'admin.php?page=wc-admin&path=\/customers',\\n            'edit.php?post_type=shop_coupon&legacy_coupon_menu=1',\\n            'admin.php?page=wc-admin&path=\/marketing',\\n            'admin.php?page=wc-reports',\\n            'admin.php?page=wc-orders',\\n            'admin.php?page=wc-settings',\\n            'admin.php?page=wc-status',\\n            'admin.php?page=wc-admin&path=\/extensions',\\n            'edit.php?post_type=product',\\n            'post-new.php?post_type=product',\\n            'edit.php?post_type=product&page=product-reviews',\\n            'edit.php?post_type=product&page=product_attributes',\\n            'edit-tags.php?taxonomy=product_cat&post_type=product',\\n            'edit-tags.php?taxonomy=product_tag&post_type=product',\\n            'admin.php?page=wc-admin&path=\/analytics\/overview',\\n            'admin.php?page=wc-admin',\\n        ];\\n\\n        $woocommerce_pages = [];\\n        foreach ($pages as $page) {\\n            $woocommerce_pages[] = $admin_path . $page;\\n        }\\n\\n        return $woocommerce_pages;\\n    }\\n\\n    \/**\\n     * Check if current page is a WooCommerce admin page\\n     *\\n     * @return bool True if current page is a WooCommerce admin page\\n     *\/\\n    public function isWoocommerceAdminPage(): bool\\n    {\\n        if (! isset($_SERVER['REQUEST_URI'])) {\\n            return false;\\n        }\\n\\n        $currentUri = sanitize_text_field($_SERVER['REQUEST_URI']);\\n\\n        if (defined('DOING_AJAX') && \\\\DOING_AJAX) {\\n            return false;\\n        }\\n\\n        if (isset($currentUri) && strpos($currentUri, '\/wp-json\/') !== false) {\\n            return false;\\n        }\\n\\n        $woocommercePages = $this->getWooCommercePages();\\n\\n        foreach ($woocommercePages as $page) {\\n            if (strpos($currentUri, $page) !== false) {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n\\n    public function isClientEligible(): bool\\n    {\\n        $transientRequestKey  = self::IS_CLIENT_ELIGIBLE_TRANSIENT_REQUEST;\\n        $transientResponseKey = self::IS_CLIENT_ELIGIBLE_TRANSIENT_RESPONSE;\\n        $cachedEligibility    = get_transient($transientResponseKey);\\n\\n        \/\/ Check if a request is already in progress\\n        if (get_transient('hts_eligible_request')) {\\n            return false;\\n        }\\n\\n        \/\/ Check if transient response exists\\n        if ($cachedEligibility && ( $cachedEligibility === 'eligible' || $cachedEligibility === 'not_eligible' )) {\\n            return $cachedEligibility === 'eligible';\\n        }\\n\\n        \/\/ Attempt to set transient request\\n        if (! $this->helper->checkTransientEligibility($transientRequestKey, self::CACHE_THREE_HOURS)) {\\n            return false;\\n        }\\n\\n        try {\\n            \/\/ Set transient flag to indicate request in progress\\n            set_transient('hts_eligible_request', 'in_progress', 60);\\n\\n            $isEligible = $this->surveysRest->isClientEligible();\\n\\n            \/\/ Clear the request transient flag\\n            delete_transient('hts_eligible_request');\\n\\n            if (has_action('litespeed_purge_all')) {\\n                do_action('litespeed_purge_all');\\n            }\\n\\n            if ($isEligible) {\\n                set_transient($transientResponseKey, 'eligible', self::CACHE_THREE_HOURS);\\n\\n                return $isEligible;\\n            }\\n\\n            set_transient($transientResponseKey, 'not_eligible', self::CACHE_THREE_HOURS);\\n\\n            return false;\\n        } catch (\\\\Exception $exception) {\\n            $this->helper->errorLog('Error checking eligibility: ' . $exception->getMessage());\\n\\n            return false;\\n        }\\n    }\\n\\n    public function submitSurveyAnswers(array $answers, string $surveyId, string $surveyLocation): void\\n    {\\n        $data = [\\n            'identifier' => self::CLIENT_SURVEY_IDENTIFIER,\\n            'answers'    => [\\n                [\\n                    'question_slug' => self::LOCATION_SLUG,\\n                    'answer'        => $surveyLocation,\\n                ]\\n            ],\\n        ];\\n\\n        $answers = $this->addUserAnswers($data, $answers);\\n\\n        $success = $this->surveysRest->submitSurveyData($answers);\\n\\n        set_transient(self::SUBMITTED_SURVEY_TRANSIENT, true, self::TIME_24_HOURS);\\n\\n        if ($success) {\\n            delete_transient(self::IS_CLIENT_ELIGIBLE_TRANSIENT_RESPONSE);\\n\\t        $settingKey = $surveyId . '_survey_completed';\\n\\t        update_option('hostinger_' . $settingKey, true);\\n        }\\n\\n        wp_send_json('Survey completed');\\n\\n        if (has_action('litespeed_purge_all')) {\\n            do_action('litespeed_purge_all');\\n        }\\n    }\\n\\n    public function getSpecifiedSurvey(array $activeSurvey): array\\n    {\\n        $specifiedSurveyQuestions = [\\n            'pages'               => [],\\n            'showQuestionNumbers' => 'off',\\n            'showTOC'             => false,\\n            'pageNextText'        => __('Next', 'hostinger-wp-surveys'),\\n            'pagePrevText'        => __('Previous', 'hostinger-wp-surveys'),\\n            'completeText'        => __('Submit', 'hostinger-wp-surveys'),\\n            'completedHtml'       => __('Thank you for completing the survey !', 'hostinger-wp-surveys'),\\n            'requiredText'        => '*',\\n        ];\\n\\n        foreach ($activeSurvey['questions'] as $question) {\\n            $element = [\\n                'type'              => $question['type'],\\n                'name'              => $question['slug'],\\n                'title'             => $question['question'],\\n                'requiredErrorText' => __('Response required.', 'hostinger-wp-surveys'),\\n            ];\\n\\n            if ($question['slug'] == 'comment') {\\n                $element['maxLength'] = 250;\\n            }\\n\\n            if ($question['slug'] == 'score') {\\n                $element['rateMin']            = '1';\\n                $element['rateMax']            = '10';\\n                $element['minRateDescription'] = __('Poor', 'hostinger-wp-surveys');\\n                $element['maxRateDescription'] = __('Excellent', 'hostinger-wp-surveys');\\n            }\\n\\n            if ($question['isRequired']) {\\n                $element['isRequired'] = true;\\n            }\\n\\n            $questionData = [\\n                'name'     => $question['slug'],\\n                'elements' => [ $element ],\\n            ];\\n\\n            $specifiedSurveyQuestions['pages'][] = $questionData;\\n        }\\n\\n        return $specifiedSurveyQuestions;\\n    }\\n\\n    public static function getHostingerSurveys(): array\\n    {\\n        return apply_filters('hostinger_add_surveys', []);\\n    }\\n\\n    public function generateSurveyHtml(): string\\n    {\\n        $allSurveys = SurveyManager::getHostingerSurveys();\\n\\n        if (empty($allSurveys)) {\\n            return '';\\n        }\\n\\n        $activeSurvey = $this->getHighestPrioritySurvey($allSurveys);\\n        ob_start();\\n        ?>\\n        <div class=\\\"hts-survey-wrapper\\\"\\n             data-survey-id=\\\"<?php echo esc_attr($activeSurvey['id']) ?>\\\"\\n             data-location=\\\"<?php echo esc_attr($activeSurvey['location']) ?>\\\"\\n             data-surveys=\\\"<?php echo esc_attr(json_encode($this->getSpecifiedSurvey($activeSurvey))) ?>\\\">\\n            <div class=\\\"close-btn\\\">\\n                <svg xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\" x=\\\"0px\\\" y=\\\"0px\\\" width=\\\"100\\\" height=\\\"100\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M 4.9902344 3.9902344 A 1.0001 1.0001 0 0 0 4.2929688 5.7070312 L 10.585938 12 L 4.2929688 18.292969 A 1.0001 1.0001 0 1 0 5.7070312 19.707031 L 12 13.414062 L 18.292969 19.707031 A 1.0001 1.0001 0 1 0 19.707031 18.292969 L 13.414062 12 L 19.707031 5.7070312 A 1.0001 1.0001 0 0 0 18.980469 3.9902344 A 1.0001 1.0001 0 0 0 18.292969 4.2929688 L 12 10.585938 L 5.7070312 4.2929688 A 1.0001 1.0001 0 0 0 4.9902344 3.9902344 z\\\"><\/path>\\n                <\/svg>\\n            <\/div>\\n            <div id=\\\"hostinger-feedback-survey\\\"><\/div>\\n            <div id=\\\"hts-questionsLeft\\\">\\n                <span id=\\\"hts-currentQuestion\\\">1<\/span>\\n                <?php\\n                echo esc_html(\\n                    __(\\n                        'Question',\\n                        'hostinger-wp-surveys'\\n                    )\\n                );\\n                ?>\\n                <?php echo esc_html(__('of ', 'hostinger-wp-surveys')); ?>\\n                <span id=\\\"hts-allQuestions\\\"><\/span>\\n            <\/div>\\n        <\/div>\\n        <?php\\n        return ob_get_clean();\\n    }\\n\\n    public function defaultWoocommerceSurveyCompleted(): bool\\n    {\\n        $completedActions         = get_option(self::CLIENT_WOO_COMPLETED_ACTIONS, []);\\n        $requiredCompletedActions = [ 'products', 'payments' ];\\n\\n        return empty(array_diff($requiredCompletedActions, $completedActions));\\n    }\\n\\n    public function getOldestProductDate(): int\\n    {\\n        global $wpdb;\\n\\n        $getProductDate = $wpdb->prepare(\\n            \\\"\\n\\t        SELECT MIN(post_date) \\n\\t        FROM {$wpdb->posts} \\n\\t        WHERE post_type = %s\\n\\t        AND post_status = %s\\n        \\\",\\n            'product',\\n            'publish'\\n        );\\n\\n        $oldestProductDate = $wpdb->get_var($getProductDate);\\n\\n        if ($oldestProductDate !== null) {\\n            $oldestProductDateTimestamp = strtotime($oldestProductDate);\\n\\n            if ($oldestProductDateTimestamp !== false) {\\n                return $oldestProductDateTimestamp;\\n            }\\n        }\\n\\n        return strtotime('-1 year');\\n    }\\n\\n    public function isTimeElapsed(string $firstLoginAt, int $timeInSeconds): bool\\n    {\\n        $currentTime = time();\\n        $timeElapsed = $currentTime - $timeInSeconds;\\n\\n        return $timeElapsed >= $firstLoginAt;\\n    }\\n\\n    public function activeSurveyHtml(): void\\n    {\\n        if (! did_action('activeSurvey')) {\\n            $survey_html = $this->generateSurveyHtml('');\\n            echo $survey_html;\\n            do_action('activeSurvey');\\n        }\\n    }\\n\\n    public static function addSurvey($surveyId, $scoreQuestion, $commentQuestion, $location, $priority)\\n    {\\n        $surveyData = [\\n            'id'        => $surveyId,\\n            'questions' => [\\n                [\\n                    'type'       => 'rating',\\n                    'slug'       => 'score',\\n                    'question'   => $scoreQuestion,\\n                    'isRequired' => true\\n                ],\\n                [\\n                    'type'       => 'comment',\\n                    'slug'       => 'comment',\\n                    'question'   => $commentQuestion,\\n                    'isRequired' => false\\n                ],\\n            ],\\n            'location'  => $location,\\n            'priority'  => $priority,\\n        ];\\n\\n        $surveys[] = $surveyData;\\n\\n        return $surveys;\\n    }\\n\\n    public function getHighestPrioritySurvey(array $allSurveys): array\\n    {\\n        $surveys = array_merge([], ...$allSurveys);\\n\\n        return array_reduce($surveys, function ($highestPrioritySurvey, $currentSurvey) {\\n            return ( ! isset($highestPrioritySurvey['priority']) ||\\n                     ( isset($currentSurvey['priority']) && $currentSurvey['priority'] > $highestPrioritySurvey['priority'] ) )\\n                ? $currentSurvey : $highestPrioritySurvey;\\n        }, []);\\n    }\\n\\n    \/**\\n     * Checks if a specific survey is not completed\\n     * @param string $surveyId\\n     * @return bool\\n     *\/\\n    public function isSurveyNotCompleted(string $surveyId): bool\\n    {\\n        $optionKey = 'hostinger_' . $surveyId . '_survey_completed';\\n        $notCompleted = ! get_option($optionKey, '');\\n        return $notCompleted;\\n    }\\n\\n    private function addUserAnswers(array $data, array $answers): array\\n    {\\n        foreach ($answers as $answerSlug => $answer) {\\n            $data['answers'][] = [\\n                'question_slug' => $answerSlug,\\n                'answer'        => $answer,\\n            ];\\n        }\\n\\n        return $data;\\n    }\\n\\n    public function isSurveyHidden(): bool\\n    {\\n        $surveyVisibility = get_transient(self::HIDE_SURVEY_TRANSIENT);\\n        return $surveyVisibility !== false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/src\/Rest.php\",\"ext\":\"php\",\"size\":2223,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Surveys;\\n\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\n\\ndefined('ABSPATH') || exit;\\n\\nclass Rest\\n{\\n    public const SUBMIT_SURVEY             = '\/v3\/wordpress\/survey\/store';\\n    public const CLIENT_SURVEY_ELIGIBILITY = '\/v3\/wordpress\/survey\/client-eligible';\\n    public const CLIENT_SURVEY_IDENTIFIER  = 'customer_satisfaction_score';\\n\\n    private Client $client;\\n\\n    public function __construct(Client $client)\\n    {\\n        $this->client = $client;\\n    }\\n\\n    public function isClientEligible(): bool\\n    {\\n        $response = $this->client->get(\\n            self::CLIENT_SURVEY_ELIGIBILITY,\\n            [\\n                'identifier' => self::CLIENT_SURVEY_IDENTIFIER,\\n            ],\\n            [],\\n            10\\n        );\\n\\n        $decoded_response = $this->decodeResponse($response);\\n        $response_data    = $decoded_response['response_data']['data'] ?? null;\\n\\n        if ($response_data !== true) {\\n            return false;\\n        }\\n\\n        return (bool) $this->getResult($response);\\n    }\\n\\n    public function submitSurveyData(array $data): bool\\n    {\\n        $response = $this->client->post(self::SUBMIT_SURVEY, $data);\\n        return $this->getResult($response);\\n    }\\n\\n    \/**\\n     * @param array|WP_Error $response\\n     *\\n     * @return mixed\\n     *\/\\n    public function getResult($response)\\n    {\\n        $data = $this->decodeResponse($response);\\n\\n        if (is_wp_error($data) || $data['response_code'] !== 200) {\\n            error_log('Error: ' . $data['response_body']);\\n            return false;\\n        }\\n\\n        return $data['response_data']['data'];\\n    }\\n\\n    \/**\\n     * @param array|WP_Error $response\\n     *\\n     * @return array\\n     *\/\\n    public function decodeResponse($response): array\\n    {\\n        $response_body = wp_remote_retrieve_body($response);\\n        $response_code = wp_remote_retrieve_response_code($response);\\n        $response_data = json_decode($response_body, true);\\n\\n        if (! is_array($response_data)) {\\n            $response_data = [ 'data' => null ];\\n        }\\n\\n        return [\\n            'response_code' => $response_code,\\n            'response_data' => $response_data,\\n            'response_body' => $response_body,\\n        ];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/src\/Loader.php\",\"ext\":\"php\",\"size\":2813,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Surveys;\\n\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Constants;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\nuse Hostinger\\\\WpHelper\\\\Utils;\\nuse Hostinger\\\\Surveys\\\\Ajax as SurveysAjax;\\n\\nclass Loader\\n{\\n    \/**\\n     * @var Loader instance.\\n     *\/\\n    private static ?Loader $instance = null;\\n\\n    \/**\\n     * @var array\\n     *\/\\n    private array $objects = [];\\n\\n    \/**\\n     * Allow only one instance of class\\n     *\\n     * @return self\\n     *\/\\n    public static function getInstance(): self\\n    {\\n        if (null === self::$instance) {\\n            self::$instance = new self();\\n        }\\n\\n        return self::$instance;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function boot(): bool\\n    {\\n        $this->registerModules();\\n        $this->loadTextDomain();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function registerModules(): void\\n    {\\n        \/\/ Surveys.\\n        $helper                = new Utils();\\n        $configHandler         = new Config();\\n        $surveyRest            = new Rest(\\n            new Client(\\n                $configHandler->getConfigValue('base_rest_uri', Constants::HOSTINGER_REST_URI),\\n                [\\n                    Config::TOKEN_HEADER  => $helper::getApiToken(),\\n                    Config::DOMAIN_HEADER => $helper->getHostInfo(),\\n                ]\\n            )\\n        );\\n\\n        $this->objects['ajax'] = new SurveysAjax($helper, $configHandler, $surveyRest);\\n\\n        \/\/ Assets.\\n        $this->objects['assets'] = new Assets();\\n        $this->objects['assets']->init();\\n\\n        $this->objects['survey_loader'] = new SurveyLoader();\\n        $this->objects['survey_loader']->run();\\n\\n        $this->addContainer();\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    public function addContainer(): bool\\n    {\\n        if (empty($this->objects)) {\\n            return false;\\n        }\\n\\n        foreach ($this->objects as $object) {\\n            if (property_exists($object, 'surveys')) {\\n                $object->surveys = $this;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return string\\n     *\/\\n    public function getPluginInfo(): string\\n    {\\n        $plugin_url = '';\\n\\n        $plugins = get_plugins();\\n        foreach ($plugins as $plugin_path => $plugin_info) {\\n            if (str_contains(__FILE__, 'plugins\/' . dirname($plugin_path) . '\/')) {\\n                $plugin_dir = dirname($plugin_path);\\n\\n                return plugins_url($plugin_dir);\\n            }\\n        }\\n\\n        return $plugin_url;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function loadTextDomain(): void\\n    {\\n        load_plugin_textdomain(\\n            'hostinger-wp-surveys',\\n            false,\\n            dirname(dirname(plugin_basename(__FILE__))) . '\/languages\/'\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/src\/Ajax.php\",\"ext\":\"php\",\"size\":2863,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Surveys;\\n\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\nuse Hostinger\\\\WpHelper\\\\Constants;\\nuse Hostinger\\\\Surveys\\\\Rest as SurveysRest;\\nuse Hostinger\\\\Surveys\\\\SurveyManager as HostingerSurveys;\\n\\ndefined('ABSPATH') || exit;\\n\\nclass Ajax\\n{\\n    private const HIDE_SURVEY_TRANSIENT = 'hts_hide_survey';\\n    private const THIRTY_DAYS = 86400 * 30;\\n\\n    private Config $configHandler;\\n    private Helper $helper;\\n    private SurveysRest $surveysRest;\\n\\n    public function __construct(\\n        Helper $helper,\\n        Config $configHandler,\\n        Rest $surveysRest\\n    ) {\\n        $this->helper          = $helper;\\n        $this->configHandler   = $configHandler;\\n        $this->surveysRest     = $surveysRest;\\n\\n        add_action('init', [ $this, 'defineAjaxEvents' ], 0);\\n    }\\n\\n    public function defineAjaxEvents(): void\\n    {\\n        $events = [\\n            'submitSurvey',\\n            'hideSurvey',\\n        ];\\n\\n        foreach ($events as $event) {\\n            add_action('wp_ajax_hostinger_' . $event, [ $this, $event ]);\\n        }\\n    }\\n\\n    public function submitSurvey(): void\\n    {\\n        $nonce           = isset($_POST['nonce']) ? sanitize_text_field($_POST['nonce']) : '';\\n        $survey_results  = isset($_POST['survey_results']) ? sanitize_text_field($_POST['survey_results']) : '';\\n        $survey_location = isset($_POST['survey_location']) ? sanitize_text_field($_POST['survey_location']) : '';\\n        $survey_id = isset($_POST['survey_id']) ? sanitize_text_field($_POST['survey_id']) : '';\\n        $surveys         = new HostingerSurveys($this->helper, $this->configHandler, $this->surveysRest);\\n\\n        $security_check = $this->requestSecurityCheck($nonce);\\n\\n        if (! empty($security_check)) {\\n            wp_send_json_error($security_check);\\n        }\\n\\n        $decoded_json = json_decode(stripslashes($survey_results), true);\\n        $surveys->submitSurveyAnswers($decoded_json, $survey_id, $survey_location);\\n    }\\n\\n    public function hideSurvey(): void\\n    {\\n        $nonce          = isset($_POST['nonce']) ? sanitize_text_field($_POST['nonce']) : '';\\n        $transient_key  = self::HIDE_SURVEY_TRANSIENT;\\n        $security_check = $this->requestSecurityCheck($nonce);\\n\\n        if (! empty($security_check)) {\\n            wp_send_json_error($security_check);\\n        }\\n\\n        if (false === get_transient($transient_key)) {\\n            set_transient($transient_key, time(), self::THIRTY_DAYS);\\n        }\\n\\n        wp_send_json_success([]);\\n    }\\n\\n    public function requestSecurityCheck($nonce)\\n    {\\n        if (! wp_verify_nonce($nonce, 'hts-ajax-nonce')) {\\n            return 'Invalid nonce';\\n        }\\n\\n        if (! current_user_can('manage_options')) {\\n            return 'Lack of permissions';\\n        }\\n\\n        return false;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/src\/SurveyLoader.php\",\"ext\":\"php\",\"size\":1046,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Surveys;\\n\\nuse Hostinger\\\\Surveys\\\\Rest;\\nuse Hostinger\\\\Surveys\\\\SurveyManager;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client as RequestClient;\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\nuse Hostinger\\\\WpHelper\\\\Constants;\\n\\nclass SurveyLoader\\n{\\n    public function run(): void\\n    {\\n        if (is_admin()) {\\n            $this->showSurvey();\\n        }\\n    }\\n\\n    private function showSurvey(): void\\n    {\\n        $helper           = new Helper();\\n        $configHandler   = new Config();\\n        $client           = new RequestClient(\\n            $configHandler->getConfigValue('base_rest_uri', Constants::HOSTINGER_REST_URI),\\n            [\\n                Config::TOKEN_HEADER  => $helper::getApiToken(),\\n                Config::DOMAIN_HEADER => $helper->getHostInfo(),\\n            ]\\n        );\\n        $rest             = new Rest($client);\\n        $surveys          = new SurveyManager($helper, $configHandler, $rest);\\n\\n        add_action('admin_footer', [ $surveys, 'activeSurveyHtml' ], 10);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-surveys\/src\/Assets.php\",\"ext\":\"php\",\"size\":1505,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Surveys;\\n\\nclass Assets\\n{\\n    public Loader $surveys;\\n    private string $assetsPath;\\n    public function init(): void\\n    {\\n        add_action('admin_enqueue_scripts', [ $this, 'enqueueAdminAssets' ]);\\n        $this->assetsPath = '\/vendor\/hostinger\/hostinger-wp-surveys\/assets';\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function enqueueAdminAssets(): void {\\n        $pluginInfo     = $this->surveys->getPluginInfo();\\n        $defaultVersion = '1.0.0';\\n        $jsScriptPath   = __DIR__ . '\/..\/assets\/js\/hostinger-surveys.min.js';\\n        $cssStylePath   = __DIR__ . '\/..\/assets\/css\/style.min.css';\\n        $jsVersion      = $defaultVersion;\\n\\n        if ( file_exists( $jsScriptPath ) ) {\\n            $jsVersion = filemtime( $jsScriptPath ) ?: $defaultVersion;\\n        }\\n\\n        wp_enqueue_script( 'hostinger_surveys_scripts', $pluginInfo . $this->assetsPath .'\/js\/hostinger-surveys.min.js', [ 'jquery' ], $jsVersion, [ 'strategy' => 'defer' ] );\\n\\n        wp_localize_script( 'hostinger_surveys_scripts', 'hostingerContainer', [\\n            'url'   => admin_url( 'admin-ajax.php' ),\\n            'nonce' => wp_create_nonce( 'hts-ajax-nonce' ),\\n        ] );\\n\\n        $cssVersion  = $defaultVersion;\\n\\n        if ( file_exists( $cssStylePath ) ) {\\n            $cssVersion = filemtime( $cssStylePath ) ?: $defaultVersion;\\n        }\\n\\n        wp_enqueue_style( 'hostinger_surveys_styles', $pluginInfo . $this->assetsPath . '\/css\/style.min.css', [], $cssVersion );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-helper\/src\/Utils.php\",\"ext\":\"php\",\"size\":7142,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpHelper;\\n\\nclass Utils {\\n\\n\\tprivate static string $apiTokenFile;\\n\\n\\tprivate const HPANEL_DOMAIN_URL = 'https:\/\/hpanel.hostinger.com\/websites\/';\\n\\tprivate const HOSTINGER_SITE = '.hostingersite.com';\\n\\n\\tprivate static function getApiTokenPath(): void {\\n\\t\\t$hostingerDirParts = explode( '\/', __DIR__ );\\n\\t\\tif ( count( $hostingerDirParts ) >= 3 ) {\\n\\t\\t\\t$hostingerServerRootPath = '\/' . $hostingerDirParts[1] . '\/' . $hostingerDirParts[2];\\n\\t\\t\\tself::$apiTokenFile      = $hostingerServerRootPath . '\/.api_token';\\n\\t\\t}\\n\\t}\\n\\n    \/**\\n     * @param string $pluginSlug\\n     *\\n     * @return bool\\n     *\/\\n\\t\/\/ Check if a specific plugin is active by its slug\\n    public static function isPluginActive( string $pluginSlug ): bool {\\n        $plugin_relative_path = $pluginSlug . '\/' . $pluginSlug . '.php';\\n\\n        if ( is_multisite() ) {\\n            return self::checkIsPluginActiveMultiSite( $plugin_relative_path );\\n        }\\n\\n        return self::checkIsPluginActive( $plugin_relative_path );\\n    }\\n\\n    \/**\\n     * @param string $plugin_relative_path\\n     *\\n     * @return bool\\n     *\/\\n    public static function checkIsPluginActiveMultiSite( string $plugin_relative_path ): bool {\\n        \/\/ Check network-wide active plugins\\n        $activePlugins = get_site_option( 'active_sitewide_plugins', [] );\\n        if ( in_array( $plugin_relative_path, $activePlugins ) ) {\\n            return true;\\n        }\\n\\n        \/\/ Check each site in the network\\n        $sites = get_sites();\\n        foreach ( $sites as $site ) {\\n            switch_to_blog( $site->blog_id );\\n            $activePlugins = get_option( 'active_plugins', [] );\\n            if ( in_array( $plugin_relative_path, $activePlugins ) ) {\\n                restore_current_blog();\\n\\n                return true;\\n            }\\n            restore_current_blog();\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * @param string $plugin_relative_path\\n     *\\n     * @return bool\\n     *\/\\n    public static function checkIsPluginActive( string $plugin_relative_path ): bool {\\n        \/\/ Check active plugins in a single site\\n        $activePlugins = get_option( 'active_plugins', [] );\\n\\n        if ( in_array( $plugin_relative_path, $activePlugins ) ) {\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n\\n\\t\/\/ Get the content of the API token file\\n\\tpublic static function getApiToken(): string {\\n\\t\\tself::getApiTokenPath();\\n\\n\\t\\tif ( file_exists( self::$apiTokenFile ) ) {\\n\\t\\t\\t$apiToken = file_get_contents( self::$apiTokenFile );\\n\\t\\t\\tif ( ! empty( $apiToken ) ) {\\n\\t\\t\\t\\treturn $apiToken;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t}\\n\\n\\t\/\/ Get the host info (domain, subdomain, subdirectory)\\n\\tpublic function getHostInfo(): string {\\n\\t\\t$host     = $_SERVER['HTTP_HOST'] ?? '';\\n\\t\\t$site_url = get_site_url();\\n\\t\\t$site_url = preg_replace( '#^https?:\/\/#', '', $site_url );\\n\\t\\t$site_url = preg_replace( '\/^www\\\\.\/', '', $site_url );\\n\\t\\t\\n\\t\\tif ( ! empty( $site_url ) && ! empty( $host ) && strpos( $site_url, $host ) === 0 ) {\\n\\t\\t\\tif ( $site_url === $host ) {\\n\\t\\t\\t\\treturn $host;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn substr( $site_url, strlen( $host ) + 1 );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn $host;\\n\\t}\\n\\n\\t\/\/ Check if the current domain is a preview domain\\n\\tpublic function isPreviewDomain(): bool {\\n\\t\\tif ( function_exists( 'getallheaders' ) ) {\\n\\t\\t\\t$headers = getallheaders();\\n\\t\\t}\\n\\n\\t\\tif ( isset( $headers['X-Preview-Indicator'] ) && $headers['X-Preview-Indicator'] ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/\/ Check if the current page is the specified page\\n\\tpublic function isThisPage( string $page ): bool {\\n\\n\\t\\tif ( ! isset( $_SERVER['REQUEST_URI'] ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t$current_uri = sanitize_text_field( $_SERVER['REQUEST_URI'] );\\n\\n\\t\\tif ( defined( 'DOING_AJAX' ) && \\\\DOING_AJAX ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif ( isset( $current_uri ) && strpos( $current_uri, '\/wp-json\/' ) !== false ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif ( strpos( $current_uri, $page ) !== false ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/\/ Get hPanel domain URL\\n    public function getHpanelDomainUrl() : string {\\n        $parsed_url = parse_url( get_site_url() );\\n        $host       = $parsed_url['host'];\\n        $directory  = __DIR__;\\n\\n        \/\/ Remove 'www.' if it exists in the host\\n        if ( strpos( $host, 'www.' ) === 0 ) {\\n            $host = substr( $host, 4 );\\n        }\\n\\n        \/\/ Parse the host into parts\\n        $host_parts   = explode( '.', $host );\\n        $is_subdomain = count( $host_parts ) > 2;\\n\\n        \/\/ Helper to get the base domain (last two parts)\\n        $base_domain = implode( '.', array_slice( $host_parts, -2 ) );\\n\\n        \/\/ System folders to ignore\\n        $system_folders = [ 'wp-content', 'plugins', 'themes', 'uploads' ];\\n\\n        \/\/ Detect if there is a subdirectory immediately after 'public_html'\\n        $subdirectory_name = '';\\n        if ( preg_match( '\/\\\\\/public_html\\\\\/([^\\\\\/]+)\\\\\/\/', $directory, $matches ) && ! in_array( $matches[1], $system_folders ) ) {\\n            $subdirectory_name = $matches[1];\\n        }\\n\\n        \/\/ Handle preview domains\\n        if ( $this->isPreviewDomain() ) {\\n            $host_parts  = explode( '.', $host );\\n            $base_domain = str_replace( '-', '.', $host_parts[0] );\\n\\n            return self::HPANEL_DOMAIN_URL . \\\"$base_domain.\\\" . end( $host_parts );\\n        }\\n\\n        \/\/ Handle subdomain with a directory structure\\n        if ( $subdirectory_name !== '' ) {\\n            $full_domain = \\\"$subdirectory_name.$base_domain\\\";\\n\\n            return self::HPANEL_DOMAIN_URL . \\\"$base_domain\/wordpress\/dashboard\/$full_domain\\\";\\n        }\\n\\n        \/\/ Handle top-level subdomain (no subdirectory structure)\\n        if ( $is_subdomain ) {\\n            return self::HPANEL_DOMAIN_URL . \\\"$host\\\";\\n        }\\n\\n        \/\/ Default to handling top-level domains (without subdomains)\\n        return self::HPANEL_DOMAIN_URL . \\\"$host\\\";\\n    }\\n\\n\\t\/\/ Check transient eligibility\\n\\tpublic function checkTransientEligibility( $transient_request_key, $cache_time = 3600 ): bool {\\n\\t\\ttry {\\n\\t\\t\\t\/\/ Set transient\\n\\t\\t\\tset_transient( $transient_request_key, true, $cache_time );\\n\\n\\t\\t\\t\/\/ Check if transient was set successfully\\n\\t\\t\\tif ( false === get_transient( $transient_request_key ) ) {\\n\\t\\t\\t\\tthrow new \\\\Exception( 'Unable to create transient in WordPress.' );\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ If everything is fine, return true\\n\\t\\t\\treturn true;\\n\\t\\t} catch ( \\\\Exception $exception ) {\\n\\t\\t\\t\/\/ If there's an exception, log the error and return false\\n\\t\\t\\t$this->errorLog( 'Error checking eligibility: ' . $exception->getMessage() );\\n\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\n\\tpublic function errorLog( string $message ): void {\\n\\t\\tif ( defined( 'WP_DEBUG' ) && \\\\WP_DEBUG === true ) {\\n\\t\\t\\terror_log( print_r( $message, true ) );\\n\\t\\t}\\n\\t}\\n\\n\\tpublic static function getSetting( string $setting ): string {\\n\\n\\t\\tif ( $setting ) {\\n\\t\\t\\treturn get_option( 'hostinger_' . $setting, '' );\\n\\t\\t}\\n\\n\\t\\treturn '';\\n\\t}\\n\\n\\tpublic static function updateSetting( string $setting, $value, $autoload = null ): void {\\n\\n\\t\\tif ( $setting ) {\\n\\t\\t\\tupdate_option( 'hostinger_' . $setting, $value, $autoload );\\n\\t\\t}\\n\\t}\\n\\n    public static function flushLitespeedCache(): void {\\n        if ( has_action( 'litespeed_purge_all' ) ) {\\n            do_action( 'litespeed_purge_all' );\\n        }\\n    }\\n\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-helper\/src\/Constants.php\",\"ext\":\"php\",\"size\":328,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpHelper;\\n\\ndefined( 'ABSPATH' ) || exit;\\n\\nclass Constants {\\n\\tpublic const TOKEN_HEADER  = 'X-Hpanel-Order-Token';\\n\\tpublic const DOMAIN_HEADER = 'X-Hpanel-Domain';\\n\\tpublic const HOSTINGER_REST_URI = 'https:\/\/rest-hosting.hostinger.com';\\n\\tpublic const CONFIG_PATH = ABSPATH . '.private\/config.json';\\n\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-helper\/src\/Config.php\",\"ext\":\"php\",\"size\":796,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpHelper;\\n\\ndefined( 'ABSPATH' ) || exit;\\n\\nclass Config {\\n\\tprivate array $config      = array();\\n\\tpublic const TOKEN_HEADER  = 'X-Hpanel-Order-Token';\\n\\tpublic const DOMAIN_HEADER = 'X-Hpanel-Domain';\\n\\tpublic const CONFIG_PATH = ABSPATH . '.private\/config.json';\\n\\tpublic function __construct() {\\n\\t\\t$this->decodeConfig( self::CONFIG_PATH );\\n\\t}\\n\\n\\tprivate function decodeConfig( string $path ): void {\\n\\t\\tif ( file_exists( $path ) ) {\\n\\t\\t\\t$config_content = file_get_contents( $path );\\n\\t\\t\\t$this->config   = json_decode( $config_content, true );\\n\\t\\t}\\n\\t}\\n\\n\\tpublic function getConfigValue( string $key, $default ): string {\\n\\t\\tif ( $this->config && isset( $this->config[ $key ] ) && ! empty( $this->config[ $key ] ) ) {\\n\\t\\t\\treturn $this->config[ $key ];\\n\\t\\t}\\n\\n\\t\\treturn $default;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-helper\/src\/Requests\/Client.php\",\"ext\":\"php\",\"size\":1726,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\WpHelper\\\\Requests;\\n\\ndefined( 'ABSPATH' ) || exit;\\n\\nclass Client {\\n    private string $api_url;\\n    private array $default_headers;\\n\\n    public function __construct( $api_url, $default_headers = array() ) {\\n        $this->api_url         = $api_url;\\n        $this->default_headers = $default_headers;\\n    }\\n\\n    public function get_api_url(): string {\\n        return $this->api_url;\\n    }\\n\\n    public function set_api_url( string $api_url ): void {\\n        $this->api_url = $api_url;\\n    }\\n\\n    public function get_default_headers(): array {\\n        return $this->default_headers;\\n    }\\n\\n    public function set_default_headers( array $default_headers ): void {\\n        $this->default_headers = $default_headers;\\n    }\\n\\n    public function get( $endpoint, $params = array(), $headers = array(), $timeout = 120 ) {\\n        $url          = $this->api_url . $endpoint;\\n        $request_args = array(\\n            'method'  => 'GET',\\n            'headers' => array_merge( $this->default_headers, $headers ),\\n            'timeout' => $timeout,\\n        );\\n\\n        if ( ! empty( $params ) ) {\\n            $url = add_query_arg( $params, $url );\\n        }\\n\\n        $response = wp_remote_get( $url, $request_args );\\n\\n        return $response;\\n    }\\n\\n    public function post( $endpoint, $params = array(), $headers = array(), $timeout = 120 ) {\\n        $url          = $this->api_url . $endpoint;\\n        $request_args = array(\\n            'method'  => 'POST',\\n            'timeout' => $timeout,\\n            'headers' => array_merge( $this->default_headers, $headers ),\\n            'body'    => $params,\\n        );\\n\\n        $response = wp_remote_post( $url, $request_args );\\n\\n        return $response;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-amplitude\/src\/Rest.php\",\"ext\":\"php\",\"size\":4366,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Rest API Routes\\n *\\n * @package HostingerAffiliatePlugin\\n *\/\\n\\nnamespace Hostinger\\\\Amplitude;\\n\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Constants;\\n\\n\\n\/**\\n * Avoid possibility to get file accessed directly\\n *\/\\nif ( ! defined( 'ABSPATH' ) ) {\\n\\tdie;\\n}\\n\\n\/**\\n * Class for handling Rest Api Routes\\n *\/\\nclass Rest {\\n    public const REST_NAMESPACE = 'hostinger-amplitude\/v1';\\n\\n    \/**\\n     * @var Helper\\n     *\/\\n    private Helper $helper;\\n\\n    \/**\\n     * @var Config\\n     *\/\\n    private Config $configHandler;\\n\\n    \/**\\n     * @var Client\\n     *\/\\n    private Client $client;\\n\\n    public function __construct() {\\n        $this->helper          = new Helper();\\n        $this->configHandler   = new Config();\\n        $this->client          = new Client(\\n            $this->configHandler->getConfigValue( 'base_rest_uri', Constants::HOSTINGER_REST_URI ),\\n            array(\\n                Config::TOKEN_HEADER  => $this->helper::getApiToken(),\\n                Config::DOMAIN_HEADER => $this->helper->getHostInfo()\\n            )\\n        );\\n    }\\n\\n\\t\/**\\n\\t * Init rest routes\\n\\t *\\n\\t * @return void\\n\\t *\/\\n\\tpublic function init(): void {\\n\\t\\tadd_action( 'rest_api_init', [ $this, 'registerRoutes' ] );\\n\\t}\\n\\n\\t\/**\\n\\t * @return void\\n\\t *\/\\n\\tpublic function registerRoutes(): void {\\n\\t\\t$this->registerAmplitudeRoute();\\n        $this->registerExperimentsRoute();\\n\\t}\\n\\n    \/**\\n     * @return void\\n     *\/\\n\\tpublic function registerAmplitudeRoute(): void {\\n\\t\\tregister_rest_route(\\n\\t\\t\\tself::REST_NAMESPACE,\\n\\t\\t\\t'hostinger-amplitude-event',\\n\\t\\t\\tarray(\\n\\t\\t\\t\\t'methods'             => 'POST',\\n\\t\\t\\t\\t'callback'            => array( $this, 'sendAmplitudeEvent' ),\\n\\t\\t\\t\\t'permission_callback' => array( $this, 'permissionCheck' ),\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\n    public function registerExperimentsRoute(): void {\\n        register_rest_route(\\n            self::REST_NAMESPACE,\\n            'hostinger-amplitude-experiments',\\n            array(\\n                'methods'             => 'GET',\\n                'callback'            => array( $this, 'getExperiments' ),\\n                'permission_callback' => array( $this, 'permissionCheck' ),\\n            )\\n        );\\n    }\\n\\n    \/**\\n     * @return \\\\WP_REST_Response\\n     *\/\\n    public function getExperiments( ): \\\\WP_REST_Response {\\n        $data = array();\\n\\n        $response = new \\\\WP_REST_Response( );\\n\\n        try {\\n            $response->set_status( \\\\WP_Http::OK );\\n\\n            $request = $this->client->get( '\/v3\/wordpress\/amplitude\/experiments', array( 'domain' => $this->helper->getHostInfo() ) );\\n\\n            $data = $request;\\n\\n            if(!empty($request['body'])) {\\n                $json = json_decode($request['body'], true);\\n\\n                if(!empty($json['data'])) {\\n                    $data = array(\\n                        'status' => 'success',\\n                        'data' => $json['data']\\n                    );\\n                }\\n            }\\n\\n        } catch ( \\\\Exception $exception ) {\\n\\n            $response->set_status( \\\\WP_Http::BAD_REQUEST );\\n\\n            $this->helper->errorLog( 'Error sending request: ' . $exception->getMessage() );\\n\\n            $data = array(\\n                'status' => 'error',\\n                'message' => $exception->getMessage()\\n            );\\n        }\\n\\n        $response->set_data( $data );\\n\\n        $response->set_headers( array( 'Cache-Control' => 'no-cache' ) );\\n\\n        return $response;\\n    }\\n\\n    public function sendAmplitudeEvent( $request ) {\\n        $params  = $request->get_param( 'params' ) ?: [];\\n        $headers = $request->get_headers() ?: [];\\n\\n        $amplitudeManager = new AmplitudeManager( $this->helper, $this->configHandler, $this->client );\\n        $status           = $amplitudeManager->sendRequest( $amplitudeManager::AMPLITUDE_ENDPOINT, $params, $headers );\\n\\n        $response = new \\\\WP_REST_Response( [ 'status' => $status ] );\\n        $response->set_headers( [ 'Cache-Control' => 'no-cache' ] );\\n        $response->set_status( \\\\WP_Http::OK );\\n\\n        return $response;\\n    }\\n\\n\\t\/**\\n\\t * @param WP_REST_Request $request WordPress rest request.\\n\\t *\\n\\t * @return bool\\n\\t *\/\\n\\tpublic function permissionCheck( $request ): bool {\\n\\t\\tif ( empty( is_user_logged_in() ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\/\/ Implement custom capabilities when needed.\\n\\t\\treturn current_user_can( 'manage_options' );\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-amplitude\/src\/AmplitudeLoader.php\",\"ext\":\"php\",\"size\":2347,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Amplitude;\\n\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Constants;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\n\\nclass AmplitudeLoader\\n{\\n    \/**\\n     * @var AmplitudeLoader instance.\\n     *\/\\n    private static ?AmplitudeLoader $instance = null;\\n\\n    \/**\\n     * @var array\\n     *\/\\n    private array $objects = [];\\n\\n    \/**\\n     * Allow only one instance of class\\n     *\\n     * @return self\\n     *\/\\n    public static function getInstance() : self {\\n        if ( null === self::$instance ) {\\n            self::$instance = new self();\\n        }\\n\\n        return self::$instance;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function boot() : bool {\\n        $this->registerModules();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return void\\n     *\/\\n    public function registerModules() : void {\\n        \/\/ Action Dispatcher.\\n        $helper = new Helper();\\n        $config = new Config();\\n        $client = new Client(\\n            $config->getConfigValue( 'base_rest_uri', Constants::HOSTINGER_REST_URI ), [\\n                Config::TOKEN_HEADER  => $helper->getApiToken(),\\n                Config::DOMAIN_HEADER => $helper->getHostInfo(),\\n            ]\\n        );\\n\\n        $this->objects['action_dispatcher'] = new ActionDispatcher( $helper, $config, $client );\\n\\n        \/\/ Amplitude Manager.\\n        $this->objects['amplitude_rest'] = new Rest();\\n        $this->objects['amplitude_rest']->init();\\n\\n        $this->addContainer();\\n    }\\n\\n    \/**\\n     * @return bool\\n     *\/\\n    public function addContainer() : bool {\\n        if ( empty( $this->objects ) ) {\\n            return false;\\n        }\\n\\n        foreach ( $this->objects as $object ) {\\n            if ( property_exists( $object, 'amplitude' ) ) {\\n                $object->setAmplitude( $this );\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * @return string\\n     *\/\\n    public function getPluginInfo() : string {\\n        $plugin_url = '';\\n\\n        $plugins = get_plugins();\\n        foreach ( $plugins as $plugin_path => $plugin_info ) {\\n            if ( str_contains( __FILE__, 'plugins\/' . dirname( $plugin_path ) . '\/' ) ) {\\n                $plugin_dir = dirname( $plugin_path );\\n\\n                return plugins_url( $plugin_dir );\\n            }\\n        }\\n\\n        return $plugin_url;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-amplitude\/src\/AmplitudeManager.php\",\"ext\":\"php\",\"size\":4325,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Amplitude;\\n\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\n\\nclass AmplitudeManager\\n{\\n    public const AMPLITUDE_ENDPOINT = '\/v3\/wordpress\/plugin\/trigger-event';\\n    private const CACHE_ONE_DAY = 86400;\\n    public const CACHE_THREE_HOURS = 3600 * 3;\\n    private const LOGIN_DATA = 'hostinger_login_data';\\n\\n    private Config $configHandler;\\n    private Client $client;\\n    private Helper $helper;\\n\\n    public function __construct(\\n        Helper $helper,\\n        Config $configHandler,\\n        Client $client\\n    ) {\\n        $this->helper        = $helper;\\n        $this->configHandler = $configHandler;\\n        $this->client        = $client;\\n    }\\n\\n    public function sendRequest( string $endpoint, array $params, array $headers = [] ): array {\\n        try {\\n            if ( ! $this->helper->checkTransientEligibility('check_transients', self::CACHE_THREE_HOURS)) {\\n                return [];\\n            }\\n\\n            if ( ! $this->shouldSendAmplitudeEvent( $params ) ) {\\n                return [];\\n            }\\n\\n            $params  = $this->addImpersonationData( $params );\\n            $params  = $this->addDomainAndDirectory( $params );\\n\\n            $headers = $this->extractCorrelationIdHeader( $headers );\\n\\n            $response = $this->client->post( $endpoint, [ 'params' => $params ], $headers );\\n\\n            if ( is_wp_error( $response ) ) {\\n                error_log( 'Hostinger WP Amplitude package: ' . $response->get_error_message() );\\n                return [];\\n            }\\n\\n            return $response;\\n        } catch ( \\\\Exception $exception ) {\\n            $this->helper->errorLog( 'Error sending request: ' . $exception->getMessage() );\\n\\n            return [ 'status' => 'error', 'message' => $exception->getMessage() ];\\n        }\\n    }\\n\\n    public function addDomainAndDirectory( array $params ) : array {\\n        if ( $siteUrl = get_site_url() ) {\\n            $params['siteurl'] = $siteUrl;\\n\\n            $websiteDir          = $this->getSubdirectoryName( $siteUrl );\\n            $params['directory'] = $websiteDir;\\n        }\\n\\n        return $params;\\n    }\\n\\n    public function getSubdirectoryName( string $siteUrl ) : string {\\n        $sitePath = parse_url( $siteUrl, PHP_URL_PATH ) ?? '';\\n\\n        return trim( $sitePath, '\/' ) ? : '';\\n    }\\n\\n    public function addImpersonationData( array $params ) : array {\\n        $login_data = get_transient( self::LOGIN_DATA );\\n\\n        if ( $login_data === false ) {\\n            return $params;\\n        }\\n\\n        if ( ! empty( $login_data['acting_client_id'] ) ) {\\n            $params['is_impersonated']        = true;\\n            $params['impersonated_client_id'] = sanitize_text_field( $login_data['acting_client_id'] );\\n        }\\n\\n        if ( ! empty( $login_data['client_id'] ) ) {\\n            $params['client_id'] = sanitize_text_field( $login_data['client_id'] );\\n        }\\n\\n        return $params;\\n    }\\n\\n    \/\/ Events which firing once per day\\n    public static function getSingleAmplitudeEvents() : array {\\n        return apply_filters( 'hostinger_once_per_day_events', [] );\\n    }\\n\\n    public function shouldSendAmplitudeEvent( array $params ): bool {\\n        $oneTimePerDay = self::getSingleAmplitudeEvents();\\n\\n        if ( empty( $params['action'] ) ) {\\n            return false;\\n        }\\n\\n        $eventAction  = sanitize_text_field( $params['action'] );\\n        $transientKey = 'amplitude_event_' . $eventAction;\\n\\n        if ( in_array( $eventAction, $oneTimePerDay, true ) ) {\\n            $hasBeenSentToday = get_transient( $transientKey );\\n\\n            if ( $hasBeenSentToday ) {\\n                return false;\\n            }\\n\\n            set_transient( $transientKey, time(), self::CACHE_ONE_DAY );\\n        }\\n\\n        return true;\\n    }\\n\\n    public function extractCorrelationIdHeader( array $headers = [] ): array {\\n        if ( empty( $headers ) ) {\\n            return [];\\n        }\\n\\n        foreach ( $headers as $key => $value ) {\\n            if ( strtolower( $key ) === 'x-correlation-id' || strtolower( $key ) === 'x_correlation_id' ) {\\n                $idValue = is_array( $value ) && ! empty( $value ) ? $value[0] : $value;\\n\\n                return [ 'X-Correlation-ID' => $idValue ];\\n            }\\n        }\\n\\n        return [];\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/hostinger\/hostinger-wp-amplitude\/src\/ActionDispatcher.php\",\"ext\":\"php\",\"size\":2340,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Hostinger\\\\Amplitude;\\n\\nuse Hostinger\\\\Amplitude\\\\AmplitudeManager;\\nuse Hostinger\\\\WpHelper\\\\Config;\\nuse Hostinger\\\\WpHelper\\\\Requests\\\\Client;\\nuse Hostinger\\\\WpHelper\\\\Utils as Helper;\\n\\nclass ActionDispatcher\\n{\\n    private const TRANSIENT_KEY = 'hostinger_login_data';\\n    private const EXPIRATION_TIME_SECONDS = 10800; \/\/ 3 hours\\n    private const AMPLITUDE_LOGIN_ACTION = 'wordpress.autologin.success';\\n\\n    private Config $configHandler;\\n    private Client $client;\\n    private Helper $helper;\\n\\n    public function __construct(\\n        Helper $helper,\\n        Config $configHandler,\\n        Client $client\\n    ) {\\n        $this->helper        = $helper;\\n        $this->configHandler = $configHandler;\\n        $this->client        = $client;\\n\\n        add_action( 'hostinger_autologin_user_logged_in', [ $this, 'userAlreadyLoggedIn' ] );\\n        add_action( 'hostinger_autologin', [ $this, 'handleAutoLogin' ] );\\n        add_action( 'wp_logout', [ $this, 'clearLoginData' ] );\\n    }\\n\\n    public function handleAutoLogin( array $data ) : void {\\n        $this->processLoginData( $data );\\n        $this->loginEvent( $this->helper, $this->configHandler, $this->client, 'new_login' );\\n    }\\n\\n    public function userAlreadyLoggedIn( array $data ) : void {\\n        $this->processLoginData( $data );\\n        $this->loginEvent( $this->helper, $this->configHandler, $this->client, 'logged_in' );\\n    }\\n\\n\\n    public function processLoginData( array $data ) : void {\\n        $sanitized_data = $this->sanitizeLoginData( $data );\\n        set_transient( self::TRANSIENT_KEY, $sanitized_data, self::EXPIRATION_TIME_SECONDS );\\n    }\\n\\n    public function loginEvent( Helper $helper, Config $config, Client $client, string $status ) : void {\\n        $amplitudeManager = new AmplitudeManager( $helper, $config, $client );\\n        $params           = [\\n            'action' => self::AMPLITUDE_LOGIN_ACTION,\\n            'status' => $status,\\n        ];\\n\\n        $amplitudeManager->sendRequest( $amplitudeManager::AMPLITUDE_ENDPOINT, $params );\\n    }\\n\\n    private function sanitizeLoginData( array $data ) : array {\\n        if ( ! is_array( $data ) ) {\\n            return [];\\n        }\\n\\n        return array_map( 'sanitize_text_field', $data );\\n    }\\n\\n    public function clearLoginData() : void {\\n        delete_transient( self::TRANSIENT_KEY );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-container.php\",\"ext\":\"php\",\"size\":4921,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class manages the files and dependencies of the autoloader.\\n *\/\\nclass Container {\\n\\n\\t\/**\\n\\t * Since each autoloader's class files exist within their own namespace we need a map to\\n\\t * convert between the local class and a shared key. Note that no version checking is\\n\\t * performed on these dependencies and the first autoloader to register will be the\\n\\t * one that is utilized.\\n\\t *\/\\n\\tconst SHARED_DEPENDENCY_KEYS = array(\\n\\t\\tHook_Manager::class => 'Hook_Manager',\\n\\t);\\n\\n\\t\/**\\n\\t * A map of all the dependencies we've registered with the container and created.\\n\\t *\\n\\t * @var array\\n\\t *\/\\n\\tprotected $dependencies;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\/\\n\\tpublic function __construct() {\\n\\t\\t$this->dependencies = array();\\n\\n\\t\\t$this->register_shared_dependencies();\\n\\t\\t$this->register_dependencies();\\n\\t\\t$this->initialize_globals();\\n\\t}\\n\\n\\t\/**\\n\\t * Gets a dependency out of the container.\\n\\t *\\n\\t * @param string $class The class to fetch.\\n\\t *\\n\\t * @return mixed\\n\\t * @throws \\\\InvalidArgumentException When a class that isn't registered with the container is fetched.\\n\\t *\/\\n\\tpublic function get( $class ) {\\n\\t\\tif ( ! isset( $this->dependencies[ $class ] ) ) {\\n\\t\\t\\tthrow new \\\\InvalidArgumentException( \\\"Class '$class' is not registered with the container.\\\" );\\n\\t\\t}\\n\\n\\t\\treturn $this->dependencies[ $class ];\\n\\t}\\n\\n\\t\/**\\n\\t * Registers all of the dependencies that are shared between all instances of the autoloader.\\n\\t *\/\\n\\tprivate function register_shared_dependencies() {\\n\\t\\tglobal $jetpack_autoloader_container_shared;\\n\\t\\tif ( ! isset( $jetpack_autoloader_container_shared ) ) {\\n\\t\\t\\t$jetpack_autoloader_container_shared = array();\\n\\t\\t}\\n\\n\\t\\t$key = self::SHARED_DEPENDENCY_KEYS[ Hook_Manager::class ];\\n\\t\\tif ( ! isset( $jetpack_autoloader_container_shared[ $key ] ) ) {\\n\\t\\t\\trequire_once __DIR__ . '\/class-hook-manager.php';\\n\\t\\t\\t$jetpack_autoloader_container_shared[ $key ] = new Hook_Manager();\\n\\t\\t}\\n\\t\\t$this->dependencies[ Hook_Manager::class ] = &$jetpack_autoloader_container_shared[ $key ];\\n\\t}\\n\\n\\t\/**\\n\\t * Registers all of the dependencies with the container.\\n\\t *\/\\n\\tprivate function register_dependencies() {\\n\\t\\trequire_once __DIR__ . '\/class-path-processor.php';\\n\\t\\t$this->dependencies[ Path_Processor::class ] = new Path_Processor();\\n\\n\\t\\trequire_once __DIR__ . '\/class-plugin-locator.php';\\n\\t\\t$this->dependencies[ Plugin_Locator::class ] = new Plugin_Locator(\\n\\t\\t\\t$this->get( Path_Processor::class )\\n\\t\\t);\\n\\n\\t\\trequire_once __DIR__ . '\/class-version-selector.php';\\n\\t\\t$this->dependencies[ Version_Selector::class ] = new Version_Selector();\\n\\n\\t\\trequire_once __DIR__ . '\/class-autoloader-locator.php';\\n\\t\\t$this->dependencies[ Autoloader_Locator::class ] = new Autoloader_Locator(\\n\\t\\t\\t$this->get( Version_Selector::class )\\n\\t\\t);\\n\\n\\t\\trequire_once __DIR__ . '\/class-php-autoloader.php';\\n\\t\\t$this->dependencies[ PHP_Autoloader::class ] = new PHP_Autoloader();\\n\\n\\t\\trequire_once __DIR__ . '\/class-manifest-reader.php';\\n\\t\\t$this->dependencies[ Manifest_Reader::class ] = new Manifest_Reader(\\n\\t\\t\\t$this->get( Version_Selector::class )\\n\\t\\t);\\n\\n\\t\\trequire_once __DIR__ . '\/class-plugins-handler.php';\\n\\t\\t$this->dependencies[ Plugins_Handler::class ] = new Plugins_Handler(\\n\\t\\t\\t$this->get( Plugin_Locator::class ),\\n\\t\\t\\t$this->get( Path_Processor::class )\\n\\t\\t);\\n\\n\\t\\trequire_once __DIR__ . '\/class-autoloader-handler.php';\\n\\t\\t$this->dependencies[ Autoloader_Handler::class ] = new Autoloader_Handler(\\n\\t\\t\\t$this->get( PHP_Autoloader::class ),\\n\\t\\t\\t$this->get( Hook_Manager::class ),\\n\\t\\t\\t$this->get( Manifest_Reader::class ),\\n\\t\\t\\t$this->get( Version_Selector::class )\\n\\t\\t);\\n\\n\\t\\trequire_once __DIR__ . '\/class-latest-autoloader-guard.php';\\n\\t\\t$this->dependencies[ Latest_Autoloader_Guard::class ] = new Latest_Autoloader_Guard(\\n\\t\\t\\t$this->get( Plugins_Handler::class ),\\n\\t\\t\\t$this->get( Autoloader_Handler::class ),\\n\\t\\t\\t$this->get( Autoloader_Locator::class )\\n\\t\\t);\\n\\n\\t\\t\/\/ Register any classes that we will use elsewhere.\\n\\t\\trequire_once __DIR__ . '\/class-version-loader.php';\\n\\t\\trequire_once __DIR__ . '\/class-shutdown-handler.php';\\n\\t}\\n\\n\\t\/**\\n\\t * Initializes any of the globals needed by the autoloader.\\n\\t *\/\\n\\tprivate function initialize_globals() {\\n\\t\\t\/*\\n\\t\\t * This global was retired in version 2.9. The value is set to 'false' to maintain\\n\\t\\t * compatibility with older versions of the autoloader.\\n\\t\\t *\/\\n\\t\\tglobal $jetpack_autoloader_including_latest;\\n\\t\\t$jetpack_autoloader_including_latest = false;\\n\\n\\t\\t\/\/ Not all plugins can be found using the locator. In cases where a plugin loads the autoloader\\n\\t\\t\/\/ but was not discoverable, we will record them in this array to track them as \\\"active\\\".\\n\\t\\tglobal $jetpack_autoloader_activating_plugins_paths;\\n\\t\\tif ( ! isset( $jetpack_autoloader_activating_plugins_paths ) ) {\\n\\t\\t\\t$jetpack_autoloader_activating_plugins_paths = array();\\n\\t\\t}\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-plugin-locator.php\",\"ext\":\"php\",\"size\":4628,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class scans the WordPress installation to find active plugins.\\n *\/\\nclass Plugin_Locator {\\n\\n\\t\/**\\n\\t * The path processor for finding plugin paths.\\n\\t *\\n\\t * @var Path_Processor\\n\\t *\/\\n\\tprivate $path_processor;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param Path_Processor $path_processor The Path_Processor instance.\\n\\t *\/\\n\\tpublic function __construct( $path_processor ) {\\n\\t\\t$this->path_processor = $path_processor;\\n\\t}\\n\\n\\t\/**\\n\\t * Finds the path to the current plugin.\\n\\t *\\n\\t * @return string $path The path to the current plugin.\\n\\t *\\n\\t * @throws \\\\RuntimeException If the current plugin does not have an autoloader.\\n\\t *\/\\n\\tpublic function find_current_plugin() {\\n\\t\\t\/\/ Escape from `vendor\/__DIR__` to root plugin directory.\\n\\t\\t$plugin_directory = dirname( __DIR__, 2 );\\n\\n\\t\\t\/\/ Use the path processor to ensure that this is an autoloader we're referencing.\\n\\t\\t$path = $this->path_processor->find_directory_with_autoloader( $plugin_directory, array() );\\n\\t\\tif ( false === $path ) {\\n\\t\\t\\tthrow new \\\\RuntimeException( 'Failed to locate plugin ' . $plugin_directory );\\n\\t\\t}\\n\\n\\t\\treturn $path;\\n\\t}\\n\\n\\t\/**\\n\\t * Checks a given option for plugin paths.\\n\\t *\\n\\t * @param string $option_name  The option that we want to check for plugin information.\\n\\t * @param bool   $site_option  Indicates whether or not we want to check the site option.\\n\\t *\\n\\t * @return array $plugin_paths The list of absolute paths we've found.\\n\\t *\/\\n\\tpublic function find_using_option( $option_name, $site_option = false ) {\\n\\t\\t$raw = $site_option ? get_site_option( $option_name ) : get_option( $option_name );\\n\\t\\tif ( false === $raw ) {\\n\\t\\t\\treturn array();\\n\\t\\t}\\n\\n\\t\\treturn $this->convert_plugins_to_paths( $raw );\\n\\t}\\n\\n\\t\/**\\n\\t * Checks for plugins in the `action` request parameter.\\n\\t *\\n\\t * @param string[] $allowed_actions The actions that we're allowed to return plugins for.\\n\\t *\\n\\t * @return array $plugin_paths The list of absolute paths we've found.\\n\\t *\/\\n\\tpublic function find_using_request_action( $allowed_actions ) {\\n\\t\\t\/**\\n\\t\\t * Note: we're not actually checking the nonce here because it's too early\\n\\t\\t * in the execution. The pluggable functions are not yet loaded to give\\n\\t\\t * plugins a chance to plug their versions. Therefore we're doing the bare\\n\\t\\t * minimum: checking whether the nonce exists and it's in the right place.\\n\\t\\t * The request will fail later if the nonce doesn't pass the check.\\n\\t\\t *\/\\n\\t\\tif ( empty( $_REQUEST['_wpnonce'] ) ) {\\n\\t\\t\\treturn array();\\n\\t\\t}\\n\\n\\t\\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated just below.\\n\\t\\t$action = isset( $_REQUEST['action'] ) ? wp_unslash( $_REQUEST['action'] ) : false;\\n\\t\\tif ( ! in_array( $action, $allowed_actions, true ) ) {\\n\\t\\t\\treturn array();\\n\\t\\t}\\n\\n\\t\\t$plugin_slugs = array();\\n\\t\\tswitch ( $action ) {\\n\\t\\t\\tcase 'activate':\\n\\t\\t\\tcase 'deactivate':\\n\\t\\t\\t\\tif ( empty( $_REQUEST['plugin'] ) ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated by convert_plugins_to_paths.\\n\\t\\t\\t\\t$plugin_slugs[] = wp_unslash( $_REQUEST['plugin'] );\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 'activate-selected':\\n\\t\\t\\tcase 'deactivate-selected':\\n\\t\\t\\t\\tif ( empty( $_REQUEST['checked'] ) ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\/\/ phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- Validated by convert_plugins_to_paths.\\n\\t\\t\\t\\t$plugin_slugs = wp_unslash( $_REQUEST['checked'] );\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\n\\t\\treturn $this->convert_plugins_to_paths( $plugin_slugs );\\n\\t}\\n\\n\\t\/**\\n\\t * Given an array of plugin slugs or paths, this will convert them to absolute paths and filter\\n\\t * out the plugins that are not directory plugins. Note that array keys will also be included\\n\\t * if they are plugin paths!\\n\\t *\\n\\t * @param string[] $plugins Plugin paths or slugs to filter.\\n\\t *\\n\\t * @return string[]\\n\\t *\/\\n\\tprivate function convert_plugins_to_paths( $plugins ) {\\n\\t\\tif ( ! is_array( $plugins ) || empty( $plugins ) ) {\\n\\t\\t\\treturn array();\\n\\t\\t}\\n\\n\\t\\t\/\/ We're going to look for plugins in the standard directories.\\n\\t\\t$path_constants = array( WP_PLUGIN_DIR, WPMU_PLUGIN_DIR );\\n\\n\\t\\t$plugin_paths = array();\\n\\t\\tforeach ( $plugins as $key => $value ) {\\n\\t\\t\\t$path = $this->path_processor->find_directory_with_autoloader( $key, $path_constants );\\n\\t\\t\\tif ( $path ) {\\n\\t\\t\\t\\t$plugin_paths[] = $path;\\n\\t\\t\\t}\\n\\n\\t\\t\\t$path = $this->path_processor->find_directory_with_autoloader( $value, $path_constants );\\n\\t\\t\\tif ( $path ) {\\n\\t\\t\\t\\t$plugin_paths[] = $path;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn $plugin_paths;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-manifest-reader.php\",\"ext\":\"php\",\"size\":2693,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class reads autoloader manifest files.\\n *\/\\nclass Manifest_Reader {\\n\\n\\t\/**\\n\\t * The Version_Selector object.\\n\\t *\\n\\t * @var Version_Selector\\n\\t *\/\\n\\tprivate $version_selector;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param Version_Selector $version_selector The Version_Selector object.\\n\\t *\/\\n\\tpublic function __construct( $version_selector ) {\\n\\t\\t$this->version_selector = $version_selector;\\n\\t}\\n\\n\\t\/**\\n\\t * Reads all of the manifests in the given plugin paths.\\n\\t *\\n\\t * @param array  $plugin_paths  The paths to the plugins we're loading the manifest in.\\n\\t * @param string $manifest_path The path that we're loading the manifest from in each plugin.\\n\\t * @param array  $path_map The path map to add the contents of the manifests to.\\n\\t *\\n\\t * @return array $path_map The path map we've built using the manifests in each plugin.\\n\\t *\/\\n\\tpublic function read_manifests( $plugin_paths, $manifest_path, &$path_map ) {\\n\\t\\t$file_paths = array_map(\\n\\t\\t\\tfunction ( $path ) use ( $manifest_path ) {\\n\\t\\t\\t\\treturn trailingslashit( $path ) . $manifest_path;\\n\\t\\t\\t},\\n\\t\\t\\t$plugin_paths\\n\\t\\t);\\n\\n\\t\\tforeach ( $file_paths as $path ) {\\n\\t\\t\\t$this->register_manifest( $path, $path_map );\\n\\t\\t}\\n\\n\\t\\treturn $path_map;\\n\\t}\\n\\n\\t\/**\\n\\t * Registers a plugin's manifest file with the path map.\\n\\t *\\n\\t * @param string $manifest_path The absolute path to the manifest that we're loading.\\n\\t * @param array  $path_map The path map to add the contents of the manifest to.\\n\\t *\/\\n\\tprotected function register_manifest( $manifest_path, &$path_map ) {\\n\\t\\tif ( ! is_readable( $manifest_path ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t$manifest = require $manifest_path;\\n\\t\\tif ( ! is_array( $manifest ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tforeach ( $manifest as $key => $data ) {\\n\\t\\t\\t$this->register_record( $key, $data, $path_map );\\n\\t\\t}\\n\\t}\\n\\n\\t\/**\\n\\t * Registers an entry from the manifest in the path map.\\n\\t *\\n\\t * @param string $key The identifier for the entry we're registering.\\n\\t * @param array  $data The data for the entry we're registering.\\n\\t * @param array  $path_map The path map to add the contents of the manifest to.\\n\\t *\/\\n\\tprotected function register_record( $key, $data, &$path_map ) {\\n\\t\\tif ( isset( $path_map[ $key ]['version'] ) ) {\\n\\t\\t\\t$selected_version = $path_map[ $key ]['version'];\\n\\t\\t} else {\\n\\t\\t\\t$selected_version = null;\\n\\t\\t}\\n\\n\\t\\tif ( $this->version_selector->is_version_update_required( $selected_version, $data['version'] ) ) {\\n\\t\\t\\t$path_map[ $key ] = array(\\n\\t\\t\\t\\t'version' => $data['version'],\\n\\t\\t\\t\\t'path'    => $data['path'],\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-plugins-handler.php\",\"ext\":\"php\",\"size\":5891,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class handles locating and caching all of the active plugins.\\n *\/\\nclass Plugins_Handler {\\n\\t\/**\\n\\t * The transient key for plugin paths.\\n\\t *\/\\n\\tconst TRANSIENT_KEY = 'jetpack_autoloader_plugin_paths';\\n\\n\\t\/**\\n\\t * The locator for finding plugins in different locations.\\n\\t *\\n\\t * @var Plugin_Locator\\n\\t *\/\\n\\tprivate $plugin_locator;\\n\\n\\t\/**\\n\\t * The processor for transforming cached paths.\\n\\t *\\n\\t * @var Path_Processor\\n\\t *\/\\n\\tprivate $path_processor;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param Plugin_Locator $plugin_locator The locator for finding active plugins.\\n\\t * @param Path_Processor $path_processor The processor for transforming cached paths.\\n\\t *\/\\n\\tpublic function __construct( $plugin_locator, $path_processor ) {\\n\\t\\t$this->plugin_locator = $plugin_locator;\\n\\t\\t$this->path_processor = $path_processor;\\n\\t}\\n\\n\\t\/**\\n\\t * Gets all of the active plugins we can find.\\n\\t *\\n\\t * @param bool $include_deactivating When true, plugins deactivating this request will be considered active.\\n\\t * @param bool $record_unknown When true, the current plugin will be marked as active and recorded when unknown.\\n\\t *\\n\\t * @return string[]\\n\\t *\/\\n\\tpublic function get_active_plugins( $include_deactivating, $record_unknown ) {\\n\\t\\tglobal $jetpack_autoloader_activating_plugins_paths;\\n\\n\\t\\t\/\/ We're going to build a unique list of plugins from a few different sources\\n\\t\\t\/\/ to find all of our \\\"active\\\" plugins. While we need to return an integer\\n\\t\\t\/\/ array, we're going to use an associative array internally to reduce\\n\\t\\t\/\/ the amount of time that we're going to spend checking uniqueness\\n\\t\\t\/\/ and merging different arrays together to form the output.\\n\\t\\t$active_plugins = array();\\n\\n\\t\\t\/\/ Make sure that plugins which have activated this request are considered as \\\"active\\\" even though\\n\\t\\t\/\/ they probably won't be present in any option.\\n\\t\\tif ( is_array( $jetpack_autoloader_activating_plugins_paths ) ) {\\n\\t\\t\\tforeach ( $jetpack_autoloader_activating_plugins_paths as $path ) {\\n\\t\\t\\t\\t$active_plugins[ $path ] = $path;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t\/\/ This option contains all of the plugins that have been activated.\\n\\t\\t$plugins = $this->plugin_locator->find_using_option( 'active_plugins' );\\n\\t\\tforeach ( $plugins as $path ) {\\n\\t\\t\\t$active_plugins[ $path ] = $path;\\n\\t\\t}\\n\\n\\t\\t\/\/ This option contains all of the multisite plugins that have been activated.\\n\\t\\tif ( is_multisite() ) {\\n\\t\\t\\t$plugins = $this->plugin_locator->find_using_option( 'active_sitewide_plugins', true );\\n\\t\\t\\tforeach ( $plugins as $path ) {\\n\\t\\t\\t\\t$active_plugins[ $path ] = $path;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t\/\/ These actions contain plugins that are being activated\/deactivated during this request.\\n\\t\\t$plugins = $this->plugin_locator->find_using_request_action( array( 'activate', 'activate-selected', 'deactivate', 'deactivate-selected' ) );\\n\\t\\tforeach ( $plugins as $path ) {\\n\\t\\t\\t$active_plugins[ $path ] = $path;\\n\\t\\t}\\n\\n\\t\\t\/\/ When the current plugin isn't considered \\\"active\\\" there's a problem.\\n\\t\\t\/\/ Since we're here, the plugin is active and currently being loaded.\\n\\t\\t\/\/ We can support this case (mu-plugins and non-standard activation)\\n\\t\\t\/\/ by adding the current plugin to the active list and marking it\\n\\t\\t\/\/ as an unknown (activating) plugin. This also has the benefit\\n\\t\\t\/\/ of causing a reset because the active plugins list has\\n\\t\\t\/\/ been changed since it was saved in the global.\\n\\t\\t$current_plugin = $this->plugin_locator->find_current_plugin();\\n\\t\\tif ( $record_unknown && ! in_array( $current_plugin, $active_plugins, true ) ) {\\n\\t\\t\\t$active_plugins[ $current_plugin ]             = $current_plugin;\\n\\t\\t\\t$jetpack_autoloader_activating_plugins_paths[] = $current_plugin;\\n\\t\\t}\\n\\n\\t\\t\/\/ When deactivating plugins aren't desired we should entirely remove them from the active list.\\n\\t\\tif ( ! $include_deactivating ) {\\n\\t\\t\\t\/\/ These actions contain plugins that are being deactivated during this request.\\n\\t\\t\\t$plugins = $this->plugin_locator->find_using_request_action( array( 'deactivate', 'deactivate-selected' ) );\\n\\t\\t\\tforeach ( $plugins as $path ) {\\n\\t\\t\\t\\tunset( $active_plugins[ $path ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t\/\/ Transform the array so that we don't have to worry about the keys interacting with other array types later.\\n\\t\\treturn array_values( $active_plugins );\\n\\t}\\n\\n\\t\/**\\n\\t * Gets all of the cached plugins if there are any.\\n\\t *\\n\\t * @return string[]\\n\\t *\/\\n\\tpublic function get_cached_plugins() {\\n\\t\\t$cached = get_transient( self::TRANSIENT_KEY );\\n\\t\\tif ( ! is_array( $cached ) || empty( $cached ) ) {\\n\\t\\t\\treturn array();\\n\\t\\t}\\n\\n\\t\\t\/\/ We need to expand the tokens to an absolute path for this webserver.\\n\\t\\treturn array_map( array( $this->path_processor, 'untokenize_path_constants' ), $cached );\\n\\t}\\n\\n\\t\/**\\n\\t * Saves the plugin list to the cache.\\n\\t *\\n\\t * @param array $plugins The plugin list to save to the cache.\\n\\t *\/\\n\\tpublic function cache_plugins( $plugins ) {\\n\\t\\t\/\/ We store the paths in a tokenized form so that that webservers with different absolute paths don't break.\\n\\t\\t$plugins = array_map( array( $this->path_processor, 'tokenize_path_constants' ), $plugins );\\n\\n\\t\\tset_transient( self::TRANSIENT_KEY, $plugins );\\n\\t}\\n\\n\\t\/**\\n\\t * Checks to see whether or not the plugin list given has changed when compared to the\\n\\t * shared `$jetpack_autoloader_cached_plugin_paths` global. This allows us to deal\\n\\t * with cases where the active list may change due to filtering..\\n\\t *\\n\\t * @param string[] $plugins The plugins list to check against the global cache.\\n\\t *\\n\\t * @return bool True if the plugins have changed, otherwise false.\\n\\t *\/\\n\\tpublic function have_plugins_changed( $plugins ) {\\n\\t\\tglobal $jetpack_autoloader_cached_plugin_paths;\\n\\n\\t\\tif ( $jetpack_autoloader_cached_plugin_paths !== $plugins ) {\\n\\t\\t\\t$jetpack_autoloader_cached_plugin_paths = $plugins;\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-version-selector.php\",\"ext\":\"php\",\"size\":1853,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * Used to select package versions.\\n *\/\\nclass Version_Selector {\\n\\n\\t\/**\\n\\t * Checks whether the selected package version should be updated. Composer development\\n\\t * package versions ('9999999-dev' or versions that start with 'dev-') are favored\\n\\t * when the JETPACK_AUTOLOAD_DEV constant is set to true.\\n\\t *\\n\\t * @param String $selected_version The currently selected package version.\\n\\t * @param String $compare_version The package version that is being evaluated to\\n\\t *                                determine if the version needs to be updated.\\n\\t *\\n\\t * @return bool Returns true if the selected package version should be updated,\\n\\t *                 else false.\\n\\t *\/\\n\\tpublic function is_version_update_required( $selected_version, $compare_version ) {\\n\\t\\t$use_dev_versions = defined( 'JETPACK_AUTOLOAD_DEV' ) && JETPACK_AUTOLOAD_DEV;\\n\\n\\t\\tif ( $selected_version === null ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tif ( $use_dev_versions && $this->is_dev_version( $selected_version ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif ( $this->is_dev_version( $compare_version ) ) {\\n\\t\\t\\tif ( $use_dev_versions ) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( version_compare( $selected_version, $compare_version, '<' ) ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/**\\n\\t * Checks whether the given package version is a development version.\\n\\t *\\n\\t * @param String $version The package version.\\n\\t *\\n\\t * @return bool True if the version is a dev version, else false.\\n\\t *\/\\n\\tpublic function is_dev_version( $version ) {\\n\\t\\tif ( 'dev-' === substr( $version, 0, 4 ) || '9999999-dev' === $version ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-php-autoloader.php\",\"ext\":\"php\",\"size\":3685,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class handles management of the actual PHP autoloader.\\n *\/\\nclass PHP_Autoloader {\\n\\n\\t\/**\\n\\t * Registers the autoloader with PHP so that it can begin autoloading classes.\\n\\t *\\n\\t * @param Version_Loader $version_loader The class loader to use in the autoloader.\\n\\t *\/\\n\\tpublic function register_autoloader( $version_loader ) {\\n\\t\\t\/\/ Make sure no other autoloaders are registered.\\n\\t\\t$this->unregister_autoloader();\\n\\n\\t\\t\/\/ Set the global so that it can be used to load classes.\\n\\t\\tglobal $jetpack_autoloader_loader;\\n\\t\\t$jetpack_autoloader_loader = $version_loader;\\n\\n\\t\\t\/\/ Ensure that the autoloader is first to avoid contention with others.\\n\\t\\tspl_autoload_register( array( self::class, 'load_class' ), true, true );\\n\\t}\\n\\n\\t\/**\\n\\t * Unregisters the active autoloader so that it will no longer autoload classes.\\n\\t *\/\\n\\tpublic function unregister_autoloader() {\\n\\t\\t\/\/ Remove any v2 autoloader that we've already registered.\\n\\t\\t$autoload_chain = spl_autoload_functions();\\n\\t\\tif ( ! $autoload_chain ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tforeach ( $autoload_chain as $autoloader ) {\\n\\t\\t\\t\/\/ We can identify a v2 autoloader using the namespace.\\n\\t\\t\\t$namespace_check = null;\\n\\n\\t\\t\\t\/\/ Functions are recorded as strings.\\n\\t\\t\\tif ( is_string( $autoloader ) ) {\\n\\t\\t\\t\\t$namespace_check = $autoloader;\\n\\t\\t\\t} elseif ( is_array( $autoloader ) && is_string( $autoloader[0] ) ) {\\n\\t\\t\\t\\t\/\/ Static method calls have the class as the first array element.\\n\\t\\t\\t\\t$namespace_check = $autoloader[0];\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t\/\/ Since the autoloader has only ever been a function or a static method we don't currently need to check anything else.\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ Check for the namespace without the generated suffix.\\n\\t\\t\\tif ( 'Automattic\\\\\\\\Jetpack\\\\\\\\Autoloader\\\\\\\\jp' === substr( $namespace_check, 0, 32 ) ) {\\n\\t\\t\\t\\tspl_autoload_unregister( $autoloader );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t\/\/ Clear the global now that the autoloader has been unregistered.\\n\\t\\tglobal $jetpack_autoloader_loader;\\n\\t\\t$jetpack_autoloader_loader = null;\\n\\t}\\n\\n\\t\/**\\n\\t * Loads a class file if one could be found.\\n\\t *\\n\\t * Note: This function is static so that the autoloader can be easily unregistered. If\\n\\t * it was a class method we would have to unwrap the object to check the namespace.\\n\\t *\\n\\t * @param string $class_name The name of the class to autoload.\\n\\t *\\n\\t * @return bool Indicates whether or not a class file was loaded.\\n\\t *\/\\n\\tpublic static function load_class( $class_name ) {\\n\\t\\tglobal $jetpack_autoloader_loader;\\n\\t\\tif ( ! isset( $jetpack_autoloader_loader ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t$file = $jetpack_autoloader_loader->find_class_file( $class_name );\\n\\t\\tif ( ! isset( $file ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\/\/ A common source of strange and confusing problems is when a vendor\\n\\t\\t\/\/ file is autoloaded before all plugins have had a chance to register\\n\\t\\t\/\/ with the autoloader. Detect that, if a development constant is set.\\n\\t\\tif ( defined( 'JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS' ) && JETPACK_AUTOLOAD_DEBUG_EARLY_LOADS &&\\n\\t\\t\\t( strpos( $file, '\/vendor\/' ) !== false || strpos( $file, '\/jetpack_vendor\/' ) !== false ) &&\\n\\t\\t\\tis_callable( 'did_action' ) && ! did_action( 'plugins_loaded' )\\n\\t\\t) {\\n\\t\\t\\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_wp_debug_backtrace_summary -- This is a debug log message.\\n\\t\\t\\t$msg = \\\"Jetpack Autoloader: Autoloading `$class_name` before the plugins_loaded hook may cause strange and confusing problems. \\\" . wp_debug_backtrace_summary( '', 1 );\\n\\t\\t\\twp_trigger_error( '', $msg );\\n\\t\\t}\\n\\n\\t\\trequire $file;\\n\\t\\treturn true;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-autoloader-locator.php\",\"ext\":\"php\",\"size\":2174,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\nuse Automattic\\\\Jetpack\\\\Autoloader\\\\AutoloadGenerator;\\n\\n\/**\\n * This class locates autoloaders.\\n *\/\\nclass Autoloader_Locator {\\n\\n\\t\/**\\n\\t * The object for comparing autoloader versions.\\n\\t *\\n\\t * @var Version_Selector\\n\\t *\/\\n\\tprivate $version_selector;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param Version_Selector $version_selector The version selector object.\\n\\t *\/\\n\\tpublic function __construct( $version_selector ) {\\n\\t\\t$this->version_selector = $version_selector;\\n\\t}\\n\\n\\t\/**\\n\\t * Finds the path to the plugin with the latest autoloader.\\n\\t *\\n\\t * @param array  $plugin_paths An array of plugin paths.\\n\\t * @param string $latest_version The latest version reference. @phan-output-reference.\\n\\t *\\n\\t * @return string|null\\n\\t *\/\\n\\tpublic function find_latest_autoloader( $plugin_paths, &$latest_version ) {\\n\\t\\t$latest_plugin = null;\\n\\n\\t\\tforeach ( $plugin_paths as $plugin_path ) {\\n\\t\\t\\t$version = $this->get_autoloader_version( $plugin_path );\\n\\t\\t\\tif ( ! $version || ! $this->version_selector->is_version_update_required( $latest_version, $version ) ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t$latest_version = $version;\\n\\t\\t\\t$latest_plugin  = $plugin_path;\\n\\t\\t}\\n\\n\\t\\treturn $latest_plugin;\\n\\t}\\n\\n\\t\/**\\n\\t * Gets the path to the autoloader.\\n\\t *\\n\\t * @param string $plugin_path The path to the plugin.\\n\\t *\\n\\t * @return string\\n\\t *\/\\n\\tpublic function get_autoloader_path( $plugin_path ) {\\n\\t\\treturn trailingslashit( $plugin_path ) . 'vendor\/autoload_packages.php';\\n\\t}\\n\\n\\t\/**\\n\\t * Gets the version for the autoloader.\\n\\t *\\n\\t * @param string $plugin_path The path to the plugin.\\n\\t *\\n\\t * @return string|null\\n\\t *\/\\n\\tpublic function get_autoloader_version( $plugin_path ) {\\n\\t\\t$classmap = trailingslashit( $plugin_path ) . 'vendor\/composer\/jetpack_autoload_classmap.php';\\n\\t\\tif ( ! file_exists( $classmap ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\t$classmap = require $classmap;\\n\\t\\tif ( isset( $classmap[ AutoloadGenerator::class ] ) ) {\\n\\t\\t\\treturn $classmap[ AutoloadGenerator::class ]['version'];\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-latest-autoloader-guard.php\",\"ext\":\"php\",\"size\":5980,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class ensures that we're only executing the latest autoloader.\\n *\/\\nclass Latest_Autoloader_Guard {\\n\\n\\t\/**\\n\\t * The Plugins_Handler instance.\\n\\t *\\n\\t * @var Plugins_Handler\\n\\t *\/\\n\\tprivate $plugins_handler;\\n\\n\\t\/**\\n\\t * The Autoloader_Handler instance.\\n\\t *\\n\\t * @var Autoloader_Handler\\n\\t *\/\\n\\tprivate $autoloader_handler;\\n\\n\\t\/**\\n\\t * The Autoloader_locator instance.\\n\\t *\\n\\t * @var Autoloader_Locator\\n\\t *\/\\n\\tprivate $autoloader_locator;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param Plugins_Handler    $plugins_handler    The Plugins_Handler instance.\\n\\t * @param Autoloader_Handler $autoloader_handler The Autoloader_Handler instance.\\n\\t * @param Autoloader_Locator $autoloader_locator The Autoloader_Locator instance.\\n\\t *\/\\n\\tpublic function __construct( $plugins_handler, $autoloader_handler, $autoloader_locator ) {\\n\\t\\t$this->plugins_handler    = $plugins_handler;\\n\\t\\t$this->autoloader_handler = $autoloader_handler;\\n\\t\\t$this->autoloader_locator = $autoloader_locator;\\n\\t}\\n\\n\\t\/**\\n\\t * Indicates whether or not the autoloader should be initialized. Note that this function\\n\\t * has the side-effect of actually loading the latest autoloader in the event that this\\n\\t * is not it.\\n\\t *\\n\\t * @param string   $current_plugin             The current plugin we're checking.\\n\\t * @param string[] $plugins                    The active plugins to check for autoloaders in.\\n\\t * @param bool     $was_included_by_autoloader Indicates whether or not this autoloader was included by another.\\n\\t *\\n\\t * @return bool True if we should stop initialization, otherwise false.\\n\\t *\/\\n\\tpublic function should_stop_init( $current_plugin, $plugins, $was_included_by_autoloader ) {\\n\\t\\tglobal $jetpack_autoloader_latest_version;\\n\\n\\t\\t\/\/ We need to reset the autoloader when the plugins change because\\n\\t\\t\/\/ that means the autoloader was generated with a different list.\\n\\t\\tif ( $this->plugins_handler->have_plugins_changed( $plugins ) ) {\\n\\t\\t\\t$this->autoloader_handler->reset_autoloader();\\n\\t\\t}\\n\\n\\t\\t\/\/ When the latest autoloader has already been found we don't need to search for it again.\\n\\t\\t\/\/ We should take care however because this will also trigger if the autoloader has been\\n\\t\\t\/\/ included by an older one.\\n\\t\\tif ( isset( $jetpack_autoloader_latest_version ) && ! $was_included_by_autoloader ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t$latest_plugin = $this->autoloader_locator->find_latest_autoloader( $plugins, $jetpack_autoloader_latest_version );\\n\\t\\tif ( isset( $latest_plugin ) && $latest_plugin !== $current_plugin ) {\\n\\t\\t\\trequire $this->autoloader_locator->get_autoloader_path( $latest_plugin );\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/**\\n\\t * Check for conflicting autoloaders.\\n\\t *\\n\\t * A common source of strange and confusing problems is when another plugin\\n\\t * registers a Composer autoloader at a higher priority that us. If enabled,\\n\\t * check for this problem and warn about it.\\n\\t *\\n\\t * Called from the plugins_loaded hook.\\n\\t *\\n\\t * @since 3.1.0\\n\\t * @return void\\n\\t *\/\\n\\tpublic function check_for_conflicting_autoloaders() {\\n\\t\\tif ( ! defined( 'JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS' ) || ! JETPACK_AUTOLOAD_DEBUG_CONFLICTING_LOADERS ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tglobal $jetpack_autoloader_loader;\\n\\t\\tif ( ! isset( $jetpack_autoloader_loader ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\t$prefixes = array();\\n\\t\\tforeach ( ( $jetpack_autoloader_loader->get_class_map() ?? array() ) as $classname => $data ) {\\n\\t\\t\\t$parts = explode( '\\\\\\\\', trim( $classname, '\\\\\\\\' ) );\\n\\t\\t\\tarray_pop( $parts );\\n\\t\\t\\twhile ( $parts ) {\\n\\t\\t\\t\\t$prefixes[ implode( '\\\\\\\\', $parts ) . '\\\\\\\\' ] = true;\\n\\t\\t\\t\\tarray_pop( $parts );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tforeach ( ( $jetpack_autoloader_loader->get_psr4_map() ?? array() ) as $prefix => $data ) {\\n\\t\\t\\t$parts = explode( '\\\\\\\\', trim( $prefix, '\\\\\\\\' ) );\\n\\t\\t\\twhile ( $parts ) {\\n\\t\\t\\t\\t$prefixes[ implode( '\\\\\\\\', $parts ) . '\\\\\\\\' ] = true;\\n\\t\\t\\t\\tarray_pop( $parts );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t$autoload_chain = spl_autoload_functions();\\n\\t\\tif ( ! $autoload_chain ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tforeach ( $autoload_chain as $autoloader ) {\\n\\t\\t\\t\/\/ No need to check anything after us.\\n\\t\\t\\tif ( is_array( $autoloader ) && is_string( $autoloader[0] ) && substr( $autoloader[0], 0, strlen( __NAMESPACE__ ) + 1 ) === __NAMESPACE__ . '\\\\\\\\' ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ We can check Composer autoloaders easily enough.\\n\\t\\t\\tif ( is_array( $autoloader ) && $autoloader[0] instanceof \\\\Composer\\\\Autoload\\\\ClassLoader && is_callable( array( $autoloader[0], 'getPrefixesPsr4' ) ) ) {\\n\\t\\t\\t\\t$composer_autoloader = $autoloader[0];\\n\\t\\t\\t\\tforeach ( $composer_autoloader->getClassMap() as $classname => $path ) {\\n\\t\\t\\t\\t\\tif ( $jetpack_autoloader_loader->find_class_file( $classname ) ) {\\n\\t\\t\\t\\t\\t\\t$msg = \\\"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the classes we handle (e.g. $classname => $path). This may cause strange and confusing problems.\\\";\\n\\t\\t\\t\\t\\t\\twp_trigger_error( '', $msg );\\n\\t\\t\\t\\t\\t\\tcontinue 2;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tforeach ( $composer_autoloader->getPrefixesPsr4() as $prefix => $paths ) {\\n\\t\\t\\t\\t\\tif ( isset( $prefixes[ $prefix ] ) ) {\\n\\t\\t\\t\\t\\t\\t$path = array_pop( $paths );\\n\\t\\t\\t\\t\\t\\t$msg  = \\\"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the namespaces we handle (e.g. $prefix => $path). This may cause strange and confusing problems.\\\";\\n\\t\\t\\t\\t\\t\\twp_trigger_error( '', $msg );\\n\\t\\t\\t\\t\\t\\tcontinue 2;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tforeach ( $composer_autoloader->getPrefixes() as $prefix => $paths ) {\\n\\t\\t\\t\\t\\tif ( isset( $prefixes[ $prefix ] ) ) {\\n\\t\\t\\t\\t\\t\\t$path = array_pop( $paths );\\n\\t\\t\\t\\t\\t\\t$msg  = \\\"A Composer autoloader is registered with a higher priority than the Jetpack Autoloader and would also handle some of the namespaces we handle (e.g. $prefix => $path). This may cause strange and confusing problems.\\\";\\n\\t\\t\\t\\t\\t\\twp_trigger_error( '', $msg );\\n\\t\\t\\t\\t\\t\\tcontinue 2;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-hook-manager.php\",\"ext\":\"php\",\"size\":2157,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * Allows the latest autoloader to register hooks that can be removed when the autoloader is reset.\\n *\/\\nclass Hook_Manager {\\n\\n\\t\/**\\n\\t * An array containing all of the hooks that we've registered.\\n\\t *\\n\\t * @var array\\n\\t *\/\\n\\tprivate $registered_hooks;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\/\\n\\tpublic function __construct() {\\n\\t\\t$this->registered_hooks = array();\\n\\t}\\n\\n\\t\/**\\n\\t * Adds an action to WordPress and registers it internally.\\n\\t *\\n\\t * @param string   $tag           The name of the action which is hooked.\\n\\t * @param callable $callable      The function to call.\\n\\t * @param int      $priority      Used to specify the priority of the action.\\n\\t * @param int      $accepted_args Used to specify the number of arguments the callable accepts.\\n\\t *\/\\n\\tpublic function add_action( $tag, $callable, $priority = 10, $accepted_args = 1 ) {\\n\\t\\t$this->registered_hooks[ $tag ][] = array(\\n\\t\\t\\t'priority' => $priority,\\n\\t\\t\\t'callable' => $callable,\\n\\t\\t);\\n\\n\\t\\tadd_action( $tag, $callable, $priority, $accepted_args );\\n\\t}\\n\\n\\t\/**\\n\\t * Adds a filter to WordPress and registers it internally.\\n\\t *\\n\\t * @param string   $tag           The name of the filter which is hooked.\\n\\t * @param callable $callable      The function to call.\\n\\t * @param int      $priority      Used to specify the priority of the filter.\\n\\t * @param int      $accepted_args Used to specify the number of arguments the callable accepts.\\n\\t *\/\\n\\tpublic function add_filter( $tag, $callable, $priority = 10, $accepted_args = 1 ) {\\n\\t\\t$this->registered_hooks[ $tag ][] = array(\\n\\t\\t\\t'priority' => $priority,\\n\\t\\t\\t'callable' => $callable,\\n\\t\\t);\\n\\n\\t\\tadd_filter( $tag, $callable, $priority, $accepted_args );\\n\\t}\\n\\n\\t\/**\\n\\t * Removes all of the registered hooks.\\n\\t *\/\\n\\tpublic function reset() {\\n\\t\\tforeach ( $this->registered_hooks as $tag => $hooks ) {\\n\\t\\t\\tforeach ( $hooks as $hook ) {\\n\\t\\t\\t\\tremove_filter( $tag, $hook['callable'], $hook['priority'] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t$this->registered_hooks = array();\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-autoloader.php\",\"ext\":\"php\",\"size\":4349,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class handles management of the actual PHP autoloader.\\n *\/\\nclass Autoloader {\\n\\n\\t\/**\\n\\t * Checks to see whether or not the autoloader should be initialized and then initializes it if so.\\n\\t *\\n\\t * @param Container|null $container The container we want to use for autoloader initialization. If none is given\\n\\t *                                  then a container will be created automatically.\\n\\t *\/\\n\\tpublic static function init( $container = null ) {\\n\\t\\t\/\/ The container holds and manages the lifecycle of our dependencies\\n\\t\\t\/\/ to make them easier to work with and increase flexibility.\\n\\t\\tif ( ! isset( $container ) ) {\\n\\t\\t\\trequire_once __DIR__ . '\/class-container.php';\\n\\t\\t\\t$container = new Container();\\n\\t\\t}\\n\\n\\t\\t\/\/ phpcs:disable Generic.Commenting.DocComment.MissingShort\\n\\n\\t\\t\/** @var Autoloader_Handler $autoloader_handler *\/\\n\\t\\t$autoloader_handler = $container->get( Autoloader_Handler::class );\\n\\n\\t\\t\/\/ If the autoloader is already initializing it means that it has included us as the latest.\\n\\t\\t$was_included_by_autoloader = $autoloader_handler->is_initializing();\\n\\n\\t\\t\/** @var Plugin_Locator $plugin_locator *\/\\n\\t\\t$plugin_locator = $container->get( Plugin_Locator::class );\\n\\n\\t\\t\/** @var Plugins_Handler $plugins_handler *\/\\n\\t\\t$plugins_handler = $container->get( Plugins_Handler::class );\\n\\n\\t\\t\/\/ The current plugin is the one that we are attempting to initialize here.\\n\\t\\t$current_plugin = $plugin_locator->find_current_plugin();\\n\\n\\t\\t\/\/ The active plugins are those that we were able to discover on the site. This list will not\\n\\t\\t\/\/ include mu-plugins, those activated by code, or those who are hidden by filtering. We also\\n\\t\\t\/\/ want to take care to not consider the current plugin unknown if it was included by an\\n\\t\\t\/\/ autoloader. This avoids the case where a plugin will be marked \\\"active\\\" while deactivated\\n\\t\\t\/\/ due to it having the latest autoloader.\\n\\t\\t$active_plugins = $plugins_handler->get_active_plugins( true, ! $was_included_by_autoloader );\\n\\n\\t\\t\/\/ The cached plugins are all of those that were active or discovered by the autoloader during a previous request.\\n\\t\\t\/\/ Note that it's possible this list will include plugins that have since been deactivated, but after a request\\n\\t\\t\/\/ the cache should be updated and the deactivated plugins will be removed.\\n\\t\\t$cached_plugins = $plugins_handler->get_cached_plugins();\\n\\n\\t\\t\/\/ We combine the active list and cached list to preemptively load classes for plugins that are\\n\\t\\t\/\/ presently unknown but will be loaded during the request. While this may result in us considering packages in\\n\\t\\t\/\/ deactivated plugins there shouldn't be any problems as a result and the eventual consistency is sufficient.\\n\\t\\t$all_plugins = array_merge( $active_plugins, $cached_plugins );\\n\\n\\t\\t\/\/ In particular we also include the current plugin to address the case where it is the latest autoloader\\n\\t\\t\/\/ but also unknown (and not cached). We don't want it in the active list because we don't know that it\\n\\t\\t\/\/ is active but we need it in the all plugins list so that it is considered by the autoloader.\\n\\t\\t$all_plugins[] = $current_plugin;\\n\\n\\t\\t\/\/ We require uniqueness in the array to avoid processing the same plugin more than once.\\n\\t\\t$all_plugins = array_values( array_unique( $all_plugins ) );\\n\\n\\t\\t\/** @var Latest_Autoloader_Guard $guard *\/\\n\\t\\t$guard = $container->get( Latest_Autoloader_Guard::class );\\n\\t\\tif ( $guard->should_stop_init( $current_plugin, $all_plugins, $was_included_by_autoloader ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t\/\/ Initialize the autoloader using the handler now that we're ready.\\n\\t\\t$autoloader_handler->activate_autoloader( $all_plugins );\\n\\n\\t\\t\/** @var Hook_Manager $hook_manager *\/\\n\\t\\t$hook_manager = $container->get( Hook_Manager::class );\\n\\n\\t\\t\/\/ Register a shutdown handler to clean up the autoloader.\\n\\t\\t$hook_manager->add_action( 'shutdown', new Shutdown_Handler( $plugins_handler, $cached_plugins, $was_included_by_autoloader ) );\\n\\n\\t\\t\/\/ Register a plugins_loaded handler to check for conflicting autoloaders.\\n\\t\\t$hook_manager->add_action( 'plugins_loaded', array( $guard, 'check_for_conflicting_autoloaders' ), 1 );\\n\\n\\t\\t\/\/ phpcs:enable Generic.Commenting.DocComment.MissingShort\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-version-loader.php\",\"ext\":\"php\",\"size\":4490,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class loads other classes based on given parameters.\\n *\/\\nclass Version_Loader {\\n\\n\\t\/**\\n\\t * The Version_Selector object.\\n\\t *\\n\\t * @var Version_Selector\\n\\t *\/\\n\\tprivate $version_selector;\\n\\n\\t\/**\\n\\t * A map of available classes and their version and file path.\\n\\t *\\n\\t * @var array\\n\\t *\/\\n\\tprivate $classmap;\\n\\n\\t\/**\\n\\t * A map of PSR-4 namespaces and their version and directory path.\\n\\t *\\n\\t * @var array\\n\\t *\/\\n\\tprivate $psr4_map;\\n\\n\\t\/**\\n\\t * A map of all the files that we should load.\\n\\t *\\n\\t * @var array\\n\\t *\/\\n\\tprivate $filemap;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param Version_Selector $version_selector The Version_Selector object.\\n\\t * @param array            $classmap The verioned classmap to load using.\\n\\t * @param array            $psr4_map The versioned PSR-4 map to load using.\\n\\t * @param array            $filemap The versioned filemap to load.\\n\\t *\/\\n\\tpublic function __construct( $version_selector, $classmap, $psr4_map, $filemap ) {\\n\\t\\t$this->version_selector = $version_selector;\\n\\t\\t$this->classmap         = $classmap;\\n\\t\\t$this->psr4_map         = $psr4_map;\\n\\t\\t$this->filemap          = $filemap;\\n\\t}\\n\\n\\t\/**\\n\\t * Fetch the classmap.\\n\\t *\\n\\t * @since 3.1.0\\n\\t * @return array<string, array>\\n\\t *\/\\n\\tpublic function get_class_map() {\\n\\t\\treturn $this->classmap;\\n\\t}\\n\\n\\t\/**\\n\\t * Fetch the psr-4 mappings.\\n\\t *\\n\\t * @since 3.1.0\\n\\t * @return array<string, array>\\n\\t *\/\\n\\tpublic function get_psr4_map() {\\n\\t\\treturn $this->psr4_map;\\n\\t}\\n\\n\\t\/**\\n\\t * Finds the file path for the given class.\\n\\t *\\n\\t * @param string $class_name The class to find.\\n\\t *\\n\\t * @return string|null $file_path The path to the file if found, null if no class was found.\\n\\t *\/\\n\\tpublic function find_class_file( $class_name ) {\\n\\t\\t$data = $this->select_newest_file(\\n\\t\\t\\t$this->classmap[ $class_name ] ?? null,\\n\\t\\t\\t$this->find_psr4_file( $class_name )\\n\\t\\t);\\n\\t\\tif ( ! isset( $data ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn $data['path'];\\n\\t}\\n\\n\\t\/**\\n\\t * Load all of the files in the filemap.\\n\\t *\/\\n\\tpublic function load_filemap() {\\n\\t\\tif ( empty( $this->filemap ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tforeach ( $this->filemap as $file_identifier => $file_data ) {\\n\\t\\t\\tif ( empty( $GLOBALS['__composer_autoload_files'][ $file_identifier ] ) ) {\\n\\t\\t\\t\\trequire_once $file_data['path'];\\n\\n\\t\\t\\t\\t$GLOBALS['__composer_autoload_files'][ $file_identifier ] = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t\/**\\n\\t * Compares different class sources and returns the newest.\\n\\t *\\n\\t * @param array|null $classmap_data The classmap class data.\\n\\t * @param array|null $psr4_data The PSR-4 class data.\\n\\t *\\n\\t * @return array|null $data\\n\\t *\/\\n\\tprivate function select_newest_file( $classmap_data, $psr4_data ) {\\n\\t\\tif ( ! isset( $classmap_data ) ) {\\n\\t\\t\\treturn $psr4_data;\\n\\t\\t} elseif ( ! isset( $psr4_data ) ) {\\n\\t\\t\\treturn $classmap_data;\\n\\t\\t}\\n\\n\\t\\tif ( $this->version_selector->is_version_update_required( $classmap_data['version'], $psr4_data['version'] ) ) {\\n\\t\\t\\treturn $psr4_data;\\n\\t\\t}\\n\\n\\t\\treturn $classmap_data;\\n\\t}\\n\\n\\t\/**\\n\\t * Finds the file for a given class in a PSR-4 namespace.\\n\\t *\\n\\t * @param string $class_name The class to find.\\n\\t *\\n\\t * @return array|null $data The version and path path to the file if found, null otherwise.\\n\\t *\/\\n\\tprivate function find_psr4_file( $class_name ) {\\n\\t\\tif ( empty( $this->psr4_map ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\t\/\/ Don't bother with classes that have no namespace.\\n\\t\\t$class_index = strrpos( $class_name, '\\\\\\\\' );\\n\\t\\tif ( ! $class_index ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t\\t$class_for_path = str_replace( '\\\\\\\\', '\/', $class_name );\\n\\n\\t\\t\/\/ Search for the namespace by iteratively cutting off the last segment until\\n\\t\\t\/\/ we find a match. This allows us to check the most-specific namespaces\\n\\t\\t\/\/ first as well as minimize the amount of time spent looking.\\n\\t\\tfor (\\n\\t\\t\\t$class_namespace = substr( $class_name, 0, $class_index );\\n\\t\\t\\t! empty( $class_namespace );\\n\\t\\t\\t$class_namespace = substr( $class_namespace, 0, strrpos( $class_namespace, '\\\\\\\\' ) )\\n\\t\\t) {\\n\\t\\t\\t$namespace = $class_namespace . '\\\\\\\\';\\n\\t\\t\\tif ( ! isset( $this->psr4_map[ $namespace ] ) ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\t$data = $this->psr4_map[ $namespace ];\\n\\n\\t\\t\\tforeach ( $data['path'] as $path ) {\\n\\t\\t\\t\\t$path .= '\/' . substr( $class_for_path, strlen( $namespace ) ) . '.php';\\n\\t\\t\\t\\tif ( file_exists( $path ) ) {\\n\\t\\t\\t\\t\\treturn array(\\n\\t\\t\\t\\t\\t\\t'version' => $data['version'],\\n\\t\\t\\t\\t\\t\\t'path'    => $path,\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-path-processor.php\",\"ext\":\"php\",\"size\":5707,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class handles dealing with paths for the autoloader.\\n *\/\\nclass Path_Processor {\\n\\t\/**\\n\\t * Given a path this will replace any of the path constants with a token to represent it.\\n\\t *\\n\\t * @param string $path The path we want to process.\\n\\t *\\n\\t * @return string The tokenized path.\\n\\t *\/\\n\\tpublic function tokenize_path_constants( $path ) {\\n\\t\\t$path = wp_normalize_path( $path );\\n\\n\\t\\t$constants = $this->get_normalized_constants();\\n\\t\\tforeach ( $constants as $constant => $constant_path ) {\\n\\t\\t\\t$len = strlen( $constant_path );\\n\\t\\t\\tif ( substr( $path, 0, $len ) !== $constant_path ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn substr_replace( $path, '{{' . $constant . '}}', 0, $len );\\n\\t\\t}\\n\\n\\t\\treturn $path;\\n\\t}\\n\\n\\t\/**\\n\\t * Given a path this will replace any of the path constant tokens with the expanded path.\\n\\t *\\n\\t * @param string $tokenized_path The path we want to process.\\n\\t *\\n\\t * @return string The expanded path.\\n\\t *\/\\n\\tpublic function untokenize_path_constants( $tokenized_path ) {\\n\\t\\t$tokenized_path = wp_normalize_path( $tokenized_path );\\n\\n\\t\\t$constants = $this->get_normalized_constants();\\n\\t\\tforeach ( $constants as $constant => $constant_path ) {\\n\\t\\t\\t$constant = '{{' . $constant . '}}';\\n\\n\\t\\t\\t$len = strlen( $constant );\\n\\t\\t\\tif ( substr( $tokenized_path, 0, $len ) !== $constant ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn $this->get_real_path( substr_replace( $tokenized_path, $constant_path, 0, $len ) );\\n\\t\\t}\\n\\n\\t\\treturn $tokenized_path;\\n\\t}\\n\\n\\t\/**\\n\\t * Given a file and an array of places it might be, this will find the absolute path and return it.\\n\\t *\\n\\t * @param string $file The plugin or theme file to resolve.\\n\\t * @param array  $directories_to_check The directories we should check for the file if it isn't an absolute path.\\n\\t *\\n\\t * @return string|false Returns the absolute path to the directory, otherwise false.\\n\\t *\/\\n\\tpublic function find_directory_with_autoloader( $file, $directories_to_check ) {\\n\\t\\t$file = wp_normalize_path( $file );\\n\\n\\t\\tif ( ! $this->is_absolute_path( $file ) ) {\\n\\t\\t\\t$file = $this->find_absolute_plugin_path( $file, $directories_to_check );\\n\\t\\t\\tif ( ! isset( $file ) ) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t\/\/ We need the real path for consistency with __DIR__ paths.\\n\\t\\t$file = $this->get_real_path( $file );\\n\\n\\t\\t\/\/ phpcs:disable WordPress.PHP.NoSilencedErrors.Discouraged\\n\\t\\t$directory = @is_file( $file ) ? dirname( $file ) : $file;\\n\\t\\tif ( ! @is_file( $directory . '\/vendor\/composer\/jetpack_autoload_classmap.php' ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\t\/\/ phpcs:enable WordPress.PHP.NoSilencedErrors.Discouraged\\n\\n\\t\\treturn $directory;\\n\\t}\\n\\n\\t\/**\\n\\t * Fetches an array of normalized paths keyed by the constant they came from.\\n\\t *\\n\\t * @return string[] The normalized paths keyed by the constant.\\n\\t *\/\\n\\tprivate function get_normalized_constants() {\\n\\t\\t$raw_constants = array(\\n\\t\\t\\t\/\/ Order the constants from most-specific to least-specific.\\n\\t\\t\\t'WP_PLUGIN_DIR',\\n\\t\\t\\t'WPMU_PLUGIN_DIR',\\n\\t\\t\\t'WP_CONTENT_DIR',\\n\\t\\t\\t'ABSPATH',\\n\\t\\t);\\n\\n\\t\\t$constants = array();\\n\\t\\tforeach ( $raw_constants as $raw ) {\\n\\t\\t\\tif ( ! defined( $raw ) ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t$path = wp_normalize_path( constant( $raw ) );\\n\\t\\t\\tif ( isset( $path ) ) {\\n\\t\\t\\t\\t$constants[ $raw ] = $path;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn $constants;\\n\\t}\\n\\n\\t\/**\\n\\t * Indicates whether or not a path is absolute.\\n\\t *\\n\\t * @param string $path The path to check.\\n\\t *\\n\\t * @return bool True if the path is absolute, otherwise false.\\n\\t *\/\\n\\tprivate function is_absolute_path( $path ) {\\n\\t\\tif ( empty( $path ) || 0 === strlen( $path ) || '.' === $path[0] ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\/\/ Absolute paths on Windows may begin with a drive letter.\\n\\t\\tif ( preg_match( '\/^[a-zA-Z]:[\\\\\/\\\\\\\\\\\\\\\\]\/', $path ) ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t\/\/ A path starting with \/ or \\\\ is absolute; anything else is relative.\\n\\t\\treturn ( '\/' === $path[0] || '\\\\\\\\' === $path[0] );\\n\\t}\\n\\n\\t\/**\\n\\t * Given a file and a list of directories to check, this method will try to figure out\\n\\t * the absolute path to the file in question.\\n\\t *\\n\\t * @param string $normalized_path The normalized path to the plugin or theme file to resolve.\\n\\t * @param array  $directories_to_check The directories we should check for the file if it isn't an absolute path.\\n\\t *\\n\\t * @return string|null The absolute path to the plugin file, otherwise null.\\n\\t *\/\\n\\tprivate function find_absolute_plugin_path( $normalized_path, $directories_to_check ) {\\n\\t\\t\/\/ We're only able to find the absolute path for plugin\/theme PHP files.\\n\\t\\tif ( ! is_string( $normalized_path ) || '.php' !== substr( $normalized_path, -4 ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tforeach ( $directories_to_check as $directory ) {\\n\\t\\t\\t$normalized_check = wp_normalize_path( trailingslashit( $directory ) ) . $normalized_path;\\n\\t\\t\\t\/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\\n\\t\\t\\tif ( @is_file( $normalized_check ) ) {\\n\\t\\t\\t\\treturn $normalized_check;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t}\\n\\n\\t\/**\\n\\t * Given a path this will figure out the real path that we should be using.\\n\\t *\\n\\t * @param string $path The path to resolve.\\n\\t *\\n\\t * @return string The resolved path.\\n\\t *\/\\n\\tprivate function get_real_path( $path ) {\\n\\t\\t\/\/ We want to resolve symbolic links for consistency with __DIR__ paths.\\n\\t\\t\/\/ phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\\n\\t\\t$real_path = @realpath( $path );\\n\\t\\tif ( false === $real_path ) {\\n\\t\\t\\t\/\/ Let the autoloader deal with paths that don't exist.\\n\\t\\t\\t$real_path = $path;\\n\\t\\t}\\n\\n\\t\\t\/\/ Using realpath will make it platform-specific so we must normalize it after.\\n\\t\\tif ( $path !== $real_path ) {\\n\\t\\t\\t$real_path = wp_normalize_path( $real_path );\\n\\t\\t}\\n\\n\\t\\treturn $real_path;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-autoloader-handler.php\",\"ext\":\"php\",\"size\":4607,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\nuse Automattic\\\\Jetpack\\\\Autoloader\\\\AutoloadGenerator;\\n\\n\/**\\n * This class selects the package version for the autoloader.\\n *\/\\nclass Autoloader_Handler {\\n\\n\\t\/**\\n\\t * The PHP_Autoloader instance.\\n\\t *\\n\\t * @var PHP_Autoloader\\n\\t *\/\\n\\tprivate $php_autoloader;\\n\\n\\t\/**\\n\\t * The Hook_Manager instance.\\n\\t *\\n\\t * @var Hook_Manager\\n\\t *\/\\n\\tprivate $hook_manager;\\n\\n\\t\/**\\n\\t * The Manifest_Reader instance.\\n\\t *\\n\\t * @var Manifest_Reader\\n\\t *\/\\n\\tprivate $manifest_reader;\\n\\n\\t\/**\\n\\t * The Version_Selector instance.\\n\\t *\\n\\t * @var Version_Selector\\n\\t *\/\\n\\tprivate $version_selector;\\n\\n\\t\/**\\n\\t * The constructor.\\n\\t *\\n\\t * @param PHP_Autoloader   $php_autoloader The PHP_Autoloader instance.\\n\\t * @param Hook_Manager     $hook_manager The Hook_Manager instance.\\n\\t * @param Manifest_Reader  $manifest_reader The Manifest_Reader instance.\\n\\t * @param Version_Selector $version_selector The Version_Selector instance.\\n\\t *\/\\n\\tpublic function __construct( $php_autoloader, $hook_manager, $manifest_reader, $version_selector ) {\\n\\t\\t$this->php_autoloader   = $php_autoloader;\\n\\t\\t$this->hook_manager     = $hook_manager;\\n\\t\\t$this->manifest_reader  = $manifest_reader;\\n\\t\\t$this->version_selector = $version_selector;\\n\\t}\\n\\n\\t\/**\\n\\t * Checks to see whether or not an autoloader is currently in the process of initializing.\\n\\t *\\n\\t * @return bool\\n\\t *\/\\n\\tpublic function is_initializing() {\\n\\t\\t\/\/ If no version has been set it means that no autoloader has started initializing yet.\\n\\t\\tglobal $jetpack_autoloader_latest_version;\\n\\t\\tif ( ! isset( $jetpack_autoloader_latest_version ) ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t\/\/ When the version is set but the classmap is not it ALWAYS means that this is the\\n\\t\\t\/\/ latest autoloader and is being included by an older one.\\n\\t\\tglobal $jetpack_packages_classmap;\\n\\t\\tif ( empty( $jetpack_packages_classmap ) ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t\/\/ Version 2.4.0 added a new global and altered the reset semantics. We need to check\\n\\t\\t\/\/ the other global as well since it may also point at initialization.\\n\\t\\t\/\/ Note: We don't need to check for the class first because every autoloader that\\n\\t\\t\/\/ will set the latest version global requires this class in the classmap.\\n\\t\\t$replacing_version = $jetpack_packages_classmap[ AutoloadGenerator::class ]['version'];\\n\\t\\tif ( $this->version_selector->is_dev_version( $replacing_version ) || version_compare( $replacing_version, '2.4.0.0', '>=' ) ) {\\n\\t\\t\\tglobal $jetpack_autoloader_loader;\\n\\t\\t\\tif ( ! isset( $jetpack_autoloader_loader ) ) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/**\\n\\t * Activates an autoloader using the given plugins and activates it.\\n\\t *\\n\\t * @param string[] $plugins The plugins to initialize the autoloader for.\\n\\t *\/\\n\\tpublic function activate_autoloader( $plugins ) {\\n\\t\\tglobal $jetpack_packages_psr4;\\n\\t\\t$jetpack_packages_psr4 = array();\\n\\t\\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_psr4.php', $jetpack_packages_psr4 );\\n\\n\\t\\tglobal $jetpack_packages_classmap;\\n\\t\\t$jetpack_packages_classmap = array();\\n\\t\\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_classmap.php', $jetpack_packages_classmap );\\n\\n\\t\\tglobal $jetpack_packages_filemap;\\n\\t\\t$jetpack_packages_filemap = array();\\n\\t\\t$this->manifest_reader->read_manifests( $plugins, 'vendor\/composer\/jetpack_autoload_filemap.php', $jetpack_packages_filemap );\\n\\n\\t\\t$loader = new Version_Loader(\\n\\t\\t\\t$this->version_selector,\\n\\t\\t\\t$jetpack_packages_classmap,\\n\\t\\t\\t$jetpack_packages_psr4,\\n\\t\\t\\t$jetpack_packages_filemap\\n\\t\\t);\\n\\n\\t\\t$this->php_autoloader->register_autoloader( $loader );\\n\\n\\t\\t\/\/ Now that the autoloader is active we can load the filemap.\\n\\t\\t$loader->load_filemap();\\n\\t}\\n\\n\\t\/**\\n\\t * Resets the active autoloader and all related global state.\\n\\t *\/\\n\\tpublic function reset_autoloader() {\\n\\t\\t$this->php_autoloader->unregister_autoloader();\\n\\t\\t$this->hook_manager->reset();\\n\\n\\t\\t\/\/ Clear all of the autoloader globals so that older autoloaders don't do anything strange.\\n\\t\\tglobal $jetpack_autoloader_latest_version;\\n\\t\\t$jetpack_autoloader_latest_version = null;\\n\\n\\t\\tglobal $jetpack_packages_classmap;\\n\\t\\t$jetpack_packages_classmap = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\\n\\n\\t\\tglobal $jetpack_packages_psr4;\\n\\t\\t$jetpack_packages_psr4 = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\\n\\n\\t\\tglobal $jetpack_packages_filemap;\\n\\t\\t$jetpack_packages_filemap = array(); \/\/ Must be array to avoid exceptions in old autoloaders!\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/jetpack-autoloader\/class-shutdown-handler.php\",\"ext\":\"php\",\"size\":2893,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * This file was automatically generated by automattic\/jetpack-autoloader.\\n *\\n * @package automattic\/jetpack-autoloader\\n *\/\\n\\nnamespace Automattic\\\\Jetpack\\\\Autoloader\\\\jp6d98b74f597e7674b4e502dab72fafa7\\\\al5_0_9;\\n\\n \/\/ phpcs:ignore\\n\\n\/**\\n * This class handles the shutdown of the autoloader.\\n *\/\\nclass Shutdown_Handler {\\n\\n\\t\/**\\n\\t * The Plugins_Handler instance.\\n\\t *\\n\\t * @var Plugins_Handler\\n\\t *\/\\n\\tprivate $plugins_handler;\\n\\n\\t\/**\\n\\t * The plugins cached by this autoloader.\\n\\t *\\n\\t * @var string[]\\n\\t *\/\\n\\tprivate $cached_plugins;\\n\\n\\t\/**\\n\\t * Indicates whether or not this autoloader was included by another.\\n\\t *\\n\\t * @var bool\\n\\t *\/\\n\\tprivate $was_included_by_autoloader;\\n\\n\\t\/**\\n\\t * Constructor.\\n\\t *\\n\\t * @param Plugins_Handler $plugins_handler The Plugins_Handler instance to use.\\n\\t * @param string[]        $cached_plugins The plugins cached by the autoloaer.\\n\\t * @param bool            $was_included_by_autoloader Indicates whether or not the autoloader was included by another.\\n\\t *\/\\n\\tpublic function __construct( $plugins_handler, $cached_plugins, $was_included_by_autoloader ) {\\n\\t\\t$this->plugins_handler            = $plugins_handler;\\n\\t\\t$this->cached_plugins             = $cached_plugins;\\n\\t\\t$this->was_included_by_autoloader = $was_included_by_autoloader;\\n\\t}\\n\\n\\t\/**\\n\\t * Handles the shutdown of the autoloader.\\n\\t *\/\\n\\tpublic function __invoke() {\\n\\t\\t\/\/ Don't save a broken cache if an error happens during some plugin's initialization.\\n\\t\\tif ( ! did_action( 'plugins_loaded' ) ) {\\n\\t\\t\\t\/\/ Ensure that the cache is emptied to prevent consecutive failures if the cache is to blame.\\n\\t\\t\\tif ( ! empty( $this->cached_plugins ) ) {\\n\\t\\t\\t\\t$this->plugins_handler->cache_plugins( array() );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t\/\/ Load the active plugins fresh since the list we pulled earlier might not contain\\n\\t\\t\/\/ plugins that were activated but did not reset the autoloader. This happens\\n\\t\\t\/\/ when a plugin is in the cache but not \\\"active\\\" when the autoloader loads.\\n\\t\\t\/\/ We also want to make sure that plugins which are deactivating are not\\n\\t\\t\/\/ considered \\\"active\\\" so that they will be removed from the cache now.\\n\\t\\ttry {\\n\\t\\t\\t$active_plugins = $this->plugins_handler->get_active_plugins( false, ! $this->was_included_by_autoloader );\\n\\t\\t} catch ( \\\\Exception $ex ) {\\n\\t\\t\\t\/\/ When the package is deleted before shutdown it will throw an exception.\\n\\t\\t\\t\/\/ In the event this happens we should erase the cache.\\n\\t\\t\\tif ( ! empty( $this->cached_plugins ) ) {\\n\\t\\t\\t\\t$this->plugins_handler->cache_plugins( array() );\\n\\t\\t\\t}\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t\/\/ The paths should be sorted for easy comparisons with those loaded from the cache.\\n\\t\\t\/\/ Note we don't need to sort the cached entries because they're already sorted.\\n\\t\\tsort( $active_plugins );\\n\\n\\t\\t\/\/ We don't want to waste time saving a cache that hasn't changed.\\n\\t\\tif ( $this->cached_plugins === $active_plugins ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t$this->plugins_handler->cache_plugins( $active_plugins );\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/UPGRADING.md\",\"ext\":\"md\",\"size\":496,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"From 1.x to 2.x\\n=================\\n\\n- All classes uses `Masterminds` namespace.\\n- All public static methods has been removed from `HTML5` class and the general API to access the HTML5 functionalities has changed. \\n\\n    Before:\\n    \\n        $dom = \\\\HTML5::loadHTML('<html>....');\\n        \\\\HTML5::saveHTML($dom);\\n        \\n    After:\\n\\n        use Masterminds\\\\HTML5;\\n        \\n        $html5 = new HTML5();\\n        \\n        $dom = $html5->loadHTML('<html>....');\\n        echo $html5->saveHTML($dom);\\n\\n\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/RELEASE.md\",\"ext\":\"md\",\"size\":5070,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"# Release Notes\\n\\n2.7.6  (2021-08-18)\\n\\n- #218: Address comment handling issues \\n\\n2.7.5  (2021-07-01)\\n\\n- #204: Travis: Enable tests on PHP 8.0 \\n- #207: Fix PHP 8.1 deprecations \\n\\n2.7.4  (2020-10-01)\\n\\n- #191: Fix travisci build \\n- #195: Add .gitattributes file with export-ignore rules \\n- #194: Fix query parameter parsed as character entity\\n\\n2.7.3 (2020-07-05)\\n\\n- #190: mitigate cyclic reference between output rules and the traverser objects \\n\\n2.7.2 (2020-07-01)\\n\\n- #187: Fixed memory leak in HTML5::saveHTML() \\n- #186: Add special case for end tag <\/br>\\n\\n2.7.1 (2020-06-14)\\n\\n- #171: add PHP 7.4 job \\n- #178: Prevent infinite loop on un-terminated entity declaration at EOF \\n\\n2.7.0 (2019-07-25)\\n\\n- #164: Drop HHVM support\\n- #168: Set default encoding in the DOMDocument object\\n\\n2.6.0 (2019-03-10)\\n\\n- #163: Allow to pass a charset to the Scanner\\n\\n2.5.0 (2018-12-27)\\n\\n- #162, #161, #155, #154, #153, #151: big performance improvements\\n- #156: fixed typos\\n- #160: adopt and enforce code style\\n- #159: remove deprecated php unit base test case\\n- #150: backport changes from old master branch \\n\\n2.4.0 (2018-11-17)\\n\\n- #148: Improve performance by moving sequence matching \\n- #147: Improve the Tokenizer performance \\n- #146: Improve performance by relying on a native string instead of InputStream \\n- #144: Add DOM extension in composer.json\\n- #145: Add more extensions on composer.json, improve phpdocs and remove dead code \\n- #143: Remove experimental comment \\n\\n2.3.1 (2018-10-18)\\n\\n- #121: Audio is not a block tag (fixed by #141)\\n- #136: Handle illegal self-closing according to spec (fixed by #137)\\n- #141: Minor fixes in the README\\n\\n2.3.0 (2017-09-04)\\n\\n- #129: image within inline svg breaks system (fixed by #133) \\n- #131: &sup2; does not work (fixed by #132)\\n- #134: Improve tokenizer performance by 20% (alternative version of #130 thanks to @MichaelHeerklotz)\\n- #135: Raw & in attributes\\n\\n2.2.2 (2016-09-22)\\n\\n- #116: In XML mode, tags are case sensitive\\n- #115: Fix PHP Notice in OutputRules\\n- #112: fix parsing of options of an optgroup\\n- #111: Adding test for the address tag\\n\\n2.2.1 (2016-05-10)\\n\\n- #109: Fixed issue where address tag could be written without closing tag (thanks sylus)\\n\\n2.2.0 (2016-04-11)\\n\\n- #105: Enable composer cache (for CI\/CD)\\n- #100: Use mb_substitute_character inset of ini_set for environments where ini_set is disable (e.g., shared hosting)\\n- #98: Allow link, meta, style tags in noscript tags\\n- #96: Fixed xml:href on svgs that use the \\\"use\\\" breaking\\n- #94: Counting UTF8 characters performance improvement\\n- #93: Use newer version of coveralls package\\n- #90: Remove duplicate test\\n- #87: Allow multiple root nodes\\n\\n2.1.2 (2015-06-07)\\n- #82: Support for PHP7\\n- #84: Improved boolean attribute handling\\n\\n2.1.1 (2015-03-23)\\n- #78: Fixes bug where unmatched entity like string drops everything after &.\\n\\n2.1.0 (2015-02-01)\\n- #74: Added `disable_html_ns` and `target_doc` dom parsing options\\n- Unified option names\\n- #73: Fixed alphabet, &szlig; now can be detected\\n- #75 and #76: Allow whitespace in RCDATA tags\\n- #77: Fixed parsing blunder for json embeds\\n- #72: Add options to HTML methods\\n\\n2.0.2 (2014-12-17)\\n- #50: empty document handling\\n- #63: tags with strange capitalization\\n- #65: dashes and underscores as allowed characters in tag names\\n- #68: Fixed issue with non-inline elements inside inline containers\\n\\n2.0.1 (2014-09-23)\\n- #59: Fixed issue parsing some fragments.\\n- #56: Incorrectly saw 0 as empty string\\n- Sami as new documentation generator\\n\\n2.0.0 (2014-07-28)\\n- #53: Improved boolean attributes handling\\n- #52: Facebook HHVM compatibility\\n- #48: Adopted PSR-2 as coding standard\\n- #47: Moved everything to Masterminds namespace\\n- #45: Added custom namespaces\\n- #44: Added support to XML-style namespaces\\n- #37: Refactored HTML5 class removing static methods\\n\\n1.0.5 (2014-06-10)\\n- #38: Set the dev-master branch as the 1.0.x branch for composer (goetas)\\n- #34: Tests use PSR-4 for autoloading. (goetas)\\n- #40, #41: Fix entity handling in RCDATA sections. (KitaitiMakoto)\\n- #32: Fixed issue where wharacter references were being incorrectly encoded in style tags.\\n\\n1.0.4 (2014-04-29)\\n- #30\/#31 Don't throw an exception for invalid tag names.\\n\\n1.0.3 (2014-02-28)\\n- #23 and #29: Ignore attributes with illegal chars in name for the PHP DOM.\\n\\n1.0.2 (2014-02-12)\\n- #23: Handle missing tag close in attribute list.\\n- #25: Fixed text escaping in the serializer (HTML% 8.3).\\n- #27: Fixed tests on Windows: changed \\\"\\\\n\\\" -> PHP_EOL.\\n- #28: Fixed infinite loop for char \\\"&\\\" in unquoted attribute in parser.\\n- #26: Updated tag name case handling to deal with uppercase usage.\\n- #24: Newlines and tabs are allowed inside quoted attributes (HTML5 8.2.4).\\n- Fixed Travis CI testing.\\n\\n1.0.1 (2013-11-07)\\n- CDATA encoding is improved. (Non-standard; Issue #19)\\n- Some parser rules were not returning the new current element. (Issue #20)\\n- Added, to the README, details on code test coverage and to packagist version.\\n- Fixed processor instructions.\\n- Improved test coverage and documentation coverage.\\n\\n1.0.0 (2013-10-02)\\n- Initial release.\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/bin\/entities.php\",\"ext\":\"php\",\"size\":638,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Fetch the entities.json file and convert to PHP datastructure.\\n *\/\\n\\n\/\/ The URL to the official entities JSON file.\\n$ENTITIES_URL = 'http:\/\/www.w3.org\/TR\/2012\/CR-html5-20121217\/entities.json';\\n\\n$payload = file_get_contents($ENTITIES_URL);\\n$json = json_decode($payload);\\n\\n$table = array();\\nforeach ($json as $name => $obj) {\\n    $sname = substr($name, 1, -1);\\n    $table[$sname] = $obj->characters;\\n}\\n\\necho '<?php\\nnamespace Masterminds\\\\\\\\HTML5;\\n\/** Entity lookup tables. This class is automatically generated. *\/\\nclass Entities {\\n  public static $byName = ';\\nvar_export($table);\\necho ';\\n}' . PHP_EOL;\\n\/\/print serialize($table);\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5.php\",\"ext\":\"php\",\"size\":8516,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds;\\n\\nuse Masterminds\\\\HTML5\\\\Parser\\\\DOMTreeBuilder;\\nuse Masterminds\\\\HTML5\\\\Parser\\\\Scanner;\\nuse Masterminds\\\\HTML5\\\\Parser\\\\Tokenizer;\\nuse Masterminds\\\\HTML5\\\\Serializer\\\\OutputRules;\\nuse Masterminds\\\\HTML5\\\\Serializer\\\\Traverser;\\n\\n\/**\\n * This class offers convenience methods for parsing and serializing HTML5.\\n * It is roughly designed to mirror the \\\\DOMDocument native class.\\n *\/\\nclass HTML5\\n{\\n    \/**\\n     * Global options for the parser and serializer.\\n     *\\n     * @var array\\n     *\/\\n    private $defaultOptions = array(\\n        \/\/ Whether the serializer should aggressively encode all characters as entities.\\n        'encode_entities' => false,\\n\\n        \/\/ Prevents the parser from automatically assigning the HTML5 namespace to the DOM document.\\n        'disable_html_ns' => false,\\n    );\\n\\n    protected $errors = array();\\n\\n    public function __construct(array $defaultOptions = array())\\n    {\\n        $this->defaultOptions = array_merge($this->defaultOptions, $defaultOptions);\\n    }\\n\\n    \/**\\n     * Get the current default options.\\n     *\\n     * @return array\\n     *\/\\n    public function getOptions()\\n    {\\n        return $this->defaultOptions;\\n    }\\n\\n    \/**\\n     * Load and parse an HTML file.\\n     *\\n     * This will apply the HTML5 parser, which is tolerant of many\\n     * varieties of HTML, including XHTML 1, HTML 4, and well-formed HTML\\n     * 3. Note that in these cases, not all of the old data will be\\n     * preserved. For example, XHTML's XML declaration will be removed.\\n     *\\n     * The rules governing parsing are set out in the HTML 5 spec.\\n     *\\n     * @param string|resource $file    The path to the file to parse. If this is a resource, it is\\n     *                                 assumed to be an open stream whose pointer is set to the first\\n     *                                 byte of input.\\n     * @param array           $options Configuration options when parsing the HTML.\\n     *\\n     * @return \\\\DOMDocument A DOM document. These object type is defined by the libxml\\n     *                      library, and should have been included with your version of PHP.\\n     *\/\\n    public function load($file, array $options = array())\\n    {\\n        \/\/ Handle the case where file is a resource.\\n        if (is_resource($file)) {\\n            return $this->parse(stream_get_contents($file), $options);\\n        }\\n\\n        return $this->parse(file_get_contents($file), $options);\\n    }\\n\\n    \/**\\n     * Parse a HTML Document from a string.\\n     *\\n     * Take a string of HTML 5 (or earlier) and parse it into a\\n     * DOMDocument.\\n     *\\n     * @param string $string  A html5 document as a string.\\n     * @param array  $options Configuration options when parsing the HTML.\\n     *\\n     * @return \\\\DOMDocument A DOM document. DOM is part of libxml, which is included with\\n     *                      almost all distribtions of PHP.\\n     *\/\\n    public function loadHTML($string, array $options = array())\\n    {\\n        return $this->parse($string, $options);\\n    }\\n\\n    \/**\\n     * Convenience function to load an HTML file.\\n     *\\n     * This is here to provide backwards compatibility with the\\n     * PHP DOM implementation. It simply calls load().\\n     *\\n     * @param string $file    The path to the file to parse. If this is a resource, it is\\n     *                        assumed to be an open stream whose pointer is set to the first\\n     *                        byte of input.\\n     * @param array  $options Configuration options when parsing the HTML.\\n     *\\n     * @return \\\\DOMDocument A DOM document. These object type is defined by the libxml\\n     *                      library, and should have been included with your version of PHP.\\n     *\/\\n    public function loadHTMLFile($file, array $options = array())\\n    {\\n        return $this->load($file, $options);\\n    }\\n\\n    \/**\\n     * Parse a HTML fragment from a string.\\n     *\\n     * @param string $string  the HTML5 fragment as a string\\n     * @param array  $options Configuration options when parsing the HTML\\n     *\\n     * @return \\\\DOMDocumentFragment A DOM fragment. The DOM is part of libxml, which is included with\\n     *                              almost all distributions of PHP.\\n     *\/\\n    public function loadHTMLFragment($string, array $options = array())\\n    {\\n        return $this->parseFragment($string, $options);\\n    }\\n\\n    \/**\\n     * Return all errors encountered into parsing phase.\\n     *\\n     * @return array\\n     *\/\\n    public function getErrors()\\n    {\\n        return $this->errors;\\n    }\\n\\n    \/**\\n     * Return true it some errors were encountered into parsing phase.\\n     *\\n     * @return bool\\n     *\/\\n    public function hasErrors()\\n    {\\n        return count($this->errors) > 0;\\n    }\\n\\n    \/**\\n     * Parse an input string.\\n     *\\n     * @param string $input\\n     *\\n     * @return \\\\DOMDocument\\n     *\/\\n    public function parse($input, array $options = array())\\n    {\\n        $this->errors = array();\\n        $options = array_merge($this->defaultOptions, $options);\\n        $events = new DOMTreeBuilder(false, $options);\\n        $scanner = new Scanner($input, !empty($options['encoding']) ? $options['encoding'] : 'UTF-8');\\n        $parser = new Tokenizer($scanner, $events, !empty($options['xmlNamespaces']) ? Tokenizer::CONFORMANT_XML : Tokenizer::CONFORMANT_HTML);\\n\\n        $parser->parse();\\n        $this->errors = $events->getErrors();\\n\\n        return $events->document();\\n    }\\n\\n    \/**\\n     * Parse an input stream where the stream is a fragment.\\n     *\\n     * Lower-level loading function. This requires an input stream instead\\n     * of a string, file, or resource.\\n     *\\n     * @param string $input   The input data to parse in the form of a string.\\n     * @param array  $options An array of options.\\n     *\\n     * @return \\\\DOMDocumentFragment\\n     *\/\\n    public function parseFragment($input, array $options = array())\\n    {\\n        $options = array_merge($this->defaultOptions, $options);\\n        $events = new DOMTreeBuilder(true, $options);\\n        $scanner = new Scanner($input, !empty($options['encoding']) ? $options['encoding'] : 'UTF-8');\\n        $parser = new Tokenizer($scanner, $events, !empty($options['xmlNamespaces']) ? Tokenizer::CONFORMANT_XML : Tokenizer::CONFORMANT_HTML);\\n\\n        $parser->parse();\\n        $this->errors = $events->getErrors();\\n\\n        return $events->fragment();\\n    }\\n\\n    \/**\\n     * Save a DOM into a given file as HTML5.\\n     *\\n     * @param mixed           $dom     The DOM to be serialized.\\n     * @param string|resource $file    The filename to be written or resource to write to.\\n     * @param array           $options Configuration options when serializing the DOM. These include:\\n     *                                 - encode_entities: Text written to the output is escaped by default and not all\\n     *                                 entities are encoded. If this is set to true all entities will be encoded.\\n     *                                 Defaults to false.\\n     *\/\\n    public function save($dom, $file, $options = array())\\n    {\\n        $close = true;\\n        if (is_resource($file)) {\\n            $stream = $file;\\n            $close = false;\\n        } else {\\n            $stream = fopen($file, 'wb');\\n        }\\n        $options = array_merge($this->defaultOptions, $options);\\n        $rules = new OutputRules($stream, $options);\\n        $trav = new Traverser($dom, $stream, $rules, $options);\\n\\n        $trav->walk();\\n        \/*\\n         * release the traverser to avoid cyclic references and allow PHP to free memory without waiting for gc_collect_cycles\\n         *\/\\n        $rules->unsetTraverser();\\n        if ($close) {\\n            fclose($stream);\\n        }\\n    }\\n\\n    \/**\\n     * Convert a DOM into an HTML5 string.\\n     *\\n     * @param mixed $dom     The DOM to be serialized.\\n     * @param array $options Configuration options when serializing the DOM. These include:\\n     *                       - encode_entities: Text written to the output is escaped by default and not all\\n     *                       entities are encoded. If this is set to true all entities will be encoded.\\n     *                       Defaults to false.\\n     *\\n     * @return string A HTML5 documented generated from the DOM.\\n     *\/\\n    public function saveHTML($dom, $options = array())\\n    {\\n        $stream = fopen('php:\/\/temp', 'wb');\\n        $this->save($dom, $stream, array_merge($this->defaultOptions, $options));\\n\\n        $html = stream_get_contents($stream, -1, 0);\\n\\n        fclose($stream);\\n\\n        return $html;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Exception.php\",\"ext\":\"php\",\"size\":129,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5;\\n\\n\/**\\n * The base exception for the HTML5 project.\\n *\/\\nclass Exception extends \\\\Exception\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Serializer\/OutputRules.php\",\"ext\":\"php\",\"size\":16894,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * @file\\n * The rules for generating output in the serializer.\\n *\\n * These output rules are likely to generate output similar to the document that\\n * was parsed. It is not intended to output exactly the document that was parsed.\\n *\/\\n\\nnamespace Masterminds\\\\HTML5\\\\Serializer;\\n\\nuse Masterminds\\\\HTML5\\\\Elements;\\n\\n\/**\\n * Generate the output html5 based on element rules.\\n *\/\\nclass OutputRules implements RulesInterface\\n{\\n    \/**\\n     * Defined in http:\/\/www.w3.org\/TR\/html51\/infrastructure.html#html-namespace-0.\\n     *\/\\n    const NAMESPACE_HTML = 'http:\/\/www.w3.org\/1999\/xhtml';\\n\\n    const NAMESPACE_MATHML = 'http:\/\/www.w3.org\/1998\/Math\/MathML';\\n\\n    const NAMESPACE_SVG = 'http:\/\/www.w3.org\/2000\/svg';\\n\\n    const NAMESPACE_XLINK = 'http:\/\/www.w3.org\/1999\/xlink';\\n\\n    const NAMESPACE_XML = 'http:\/\/www.w3.org\/XML\/1998\/namespace';\\n\\n    const NAMESPACE_XMLNS = 'http:\/\/www.w3.org\/2000\/xmlns\/';\\n\\n    \/**\\n     * Holds the HTML5 element names that causes a namespace switch.\\n     *\\n     * @var array\\n     *\/\\n    protected $implicitNamespaces = array(\\n        self::NAMESPACE_HTML,\\n        self::NAMESPACE_SVG,\\n        self::NAMESPACE_MATHML,\\n        self::NAMESPACE_XML,\\n        self::NAMESPACE_XMLNS,\\n    );\\n\\n    const IM_IN_HTML = 1;\\n\\n    const IM_IN_SVG = 2;\\n\\n    const IM_IN_MATHML = 3;\\n\\n    \/**\\n     * Used as cache to detect if is available ENT_HTML5.\\n     *\\n     * @var bool\\n     *\/\\n    private $hasHTML5 = false;\\n\\n    protected $traverser;\\n\\n    protected $encode = false;\\n\\n    protected $out;\\n\\n    protected $outputMode;\\n\\n    private $xpath;\\n\\n    protected $nonBooleanAttributes = array(\\n        \/*\\n        array(\\n            'nodeNamespace'=>'http:\/\/www.w3.org\/1999\/xhtml',\\n            'attrNamespace'=>'http:\/\/www.w3.org\/1999\/xhtml',\\n\\n            'nodeName'=>'img', 'nodeName'=>array('img', 'a'),\\n            'attrName'=>'alt', 'attrName'=>array('title', 'alt'),\\n        ),\\n        *\/\\n        array(\\n            'nodeNamespace' => 'http:\/\/www.w3.org\/1999\/xhtml',\\n            'attrName' => array('href',\\n                'hreflang',\\n                'http-equiv',\\n                'icon',\\n                'id',\\n                'keytype',\\n                'kind',\\n                'label',\\n                'lang',\\n                'language',\\n                'list',\\n                'maxlength',\\n                'media',\\n                'method',\\n                'name',\\n                'placeholder',\\n                'rel',\\n                'rows',\\n                'rowspan',\\n                'sandbox',\\n                'spellcheck',\\n                'scope',\\n                'seamless',\\n                'shape',\\n                'size',\\n                'sizes',\\n                'span',\\n                'src',\\n                'srcdoc',\\n                'srclang',\\n                'srcset',\\n                'start',\\n                'step',\\n                'style',\\n                'summary',\\n                'tabindex',\\n                'target',\\n                'title',\\n                'type',\\n                'value',\\n                'width',\\n                'border',\\n                'charset',\\n                'cite',\\n                'class',\\n                'code',\\n                'codebase',\\n                'color',\\n                'cols',\\n                'colspan',\\n                'content',\\n                'coords',\\n                'data',\\n                'datetime',\\n                'default',\\n                'dir',\\n                'dirname',\\n                'enctype',\\n                'for',\\n                'form',\\n                'formaction',\\n                'headers',\\n                'height',\\n                'accept',\\n                'accept-charset',\\n                'accesskey',\\n                'action',\\n                'align',\\n                'alt',\\n                'bgcolor',\\n            ),\\n        ),\\n        array(\\n            'nodeNamespace' => 'http:\/\/www.w3.org\/1999\/xhtml',\\n            'xpath' => 'starts-with(local-name(), \\\\'data-\\\\')',\\n        ),\\n    );\\n\\n    const DOCTYPE = '<!DOCTYPE html>';\\n\\n    public function __construct($output, $options = array())\\n    {\\n        if (isset($options['encode_entities'])) {\\n            $this->encode = $options['encode_entities'];\\n        }\\n\\n        $this->outputMode = static::IM_IN_HTML;\\n        $this->out = $output;\\n        $this->hasHTML5 = defined('ENT_HTML5');\\n    }\\n\\n    public function addRule(array $rule)\\n    {\\n        $this->nonBooleanAttributes[] = $rule;\\n    }\\n\\n    public function setTraverser(Traverser $traverser)\\n    {\\n        $this->traverser = $traverser;\\n\\n        return $this;\\n    }\\n\\n    public function unsetTraverser()\\n    {\\n        $this->traverser = null;\\n\\n        return $this;\\n    }\\n\\n    public function document($dom)\\n    {\\n        $this->doctype();\\n        if ($dom->documentElement) {\\n            foreach ($dom->childNodes as $node) {\\n                $this->traverser->node($node);\\n            }\\n            $this->nl();\\n        }\\n    }\\n\\n    protected function doctype()\\n    {\\n        $this->wr(static::DOCTYPE);\\n        $this->nl();\\n    }\\n\\n    \/**\\n     * @param \\\\DOMElement $ele\\n     *\/\\n    public function element($ele)\\n    {\\n        $name = $ele->tagName;\\n\\n        \/\/ Per spec:\\n        \/\/ If the element has a declared namespace in the HTML, MathML or\\n        \/\/ SVG namespaces, we use the lname instead of the tagName.\\n        if ($this->traverser->isLocalElement($ele)) {\\n            $name = $ele->localName;\\n        }\\n\\n        \/\/ If we are in SVG or MathML there is special handling.\\n        \/\/ Using if\/elseif instead of switch because it's faster in PHP.\\n        if ('svg' == $name) {\\n            $this->outputMode = static::IM_IN_SVG;\\n            $name = Elements::normalizeSvgElement($name);\\n        } elseif ('math' == $name) {\\n            $this->outputMode = static::IM_IN_MATHML;\\n        }\\n\\n        $this->openTag($ele);\\n        \/\/ The tag is already self-closed (`<svg \/>` or `<math \/>`) in `openTag` if there are no child nodes.\\n        $handledAsVoidTag = $this->outputMode !== static::IM_IN_HTML && !$ele->hasChildNodes();\\n\\n        if (Elements::isA($name, Elements::TEXT_RAW)) {\\n            foreach ($ele->childNodes as $child) {\\n                if ($child instanceof \\\\DOMCharacterData) {\\n                    $this->wr($child->data);\\n                } elseif ($child instanceof \\\\DOMElement) {\\n                    $this->element($child);\\n                }\\n            }\\n        } else {\\n            \/\/ Handle children.\\n            if ($ele->hasChildNodes()) {\\n                $this->traverser->children($ele->childNodes);\\n            }\\n\\n            \/\/ Close out the SVG or MathML special handling.\\n            if ('svg' == $name || 'math' == $name) {\\n                $this->outputMode = static::IM_IN_HTML;\\n            }\\n        }\\n\\n        \/\/ If not unary, add a closing tag.\\n        if (!$handledAsVoidTag && !Elements::isA($name, Elements::VOID_TAG)) {\\n            $this->closeTag($ele);\\n        }\\n    }\\n\\n    \/**\\n     * Write a text node.\\n     *\\n     * @param \\\\DOMText $ele The text node to write.\\n     *\/\\n    public function text($ele)\\n    {\\n        if (isset($ele->parentNode) && isset($ele->parentNode->tagName) && Elements::isA($ele->parentNode->localName, Elements::TEXT_RAW)) {\\n            $this->wr($ele->data);\\n\\n            return;\\n        }\\n\\n        \/\/ FIXME: This probably needs some flags set.\\n        $this->wr($this->enc($ele->data));\\n    }\\n\\n    public function cdata($ele)\\n    {\\n        \/\/ This encodes CDATA.\\n        $this->wr($ele->ownerDocument->saveXML($ele));\\n    }\\n\\n    public function comment($ele)\\n    {\\n        \/\/ These produce identical output.\\n        \/\/ $this->wr('<!--')->wr($ele->data)->wr('-->');\\n        $this->wr($ele->ownerDocument->saveXML($ele));\\n    }\\n\\n    public function processorInstruction($ele)\\n    {\\n        $this->wr('<?')\\n            ->wr($ele->target)\\n            ->wr(' ')\\n            ->wr($ele->data)\\n            ->wr('?>');\\n    }\\n\\n    \/**\\n     * Write the namespace attributes.\\n     *\\n     * @param \\\\DOMNode $ele The element being written.\\n     *\/\\n    protected function namespaceAttrs($ele)\\n    {\\n        if (!$this->xpath || $this->xpath->document !== $ele->ownerDocument) {\\n            $this->xpath = new \\\\DOMXPath($ele->ownerDocument);\\n        }\\n\\n        foreach ($this->xpath->query('namespace::*[not(.=..\/..\/namespace::*)]', $ele) as $nsNode) {\\n            if (!in_array($nsNode->nodeValue, $this->implicitNamespaces)) {\\n                $this->wr(' ')->wr($nsNode->nodeName)->wr('=\\\"')->wr($nsNode->nodeValue)->wr('\\\"');\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * Write the opening tag.\\n     *\\n     * Tags for HTML, MathML, and SVG are in the local name. Otherwise, use the\\n     * qualified name (8.3).\\n     *\\n     * @param \\\\DOMNode $ele The element being written.\\n     *\/\\n    protected function openTag($ele)\\n    {\\n        $this->wr('<')->wr($this->traverser->isLocalElement($ele) ? $ele->localName : $ele->tagName);\\n\\n        $this->attrs($ele);\\n        $this->namespaceAttrs($ele);\\n\\n        if ($this->outputMode == static::IM_IN_HTML) {\\n            $this->wr('>');\\n        }         \/\/ If we are not in html mode we are in SVG, MathML, or XML embedded content.\\n        else {\\n            if ($ele->hasChildNodes()) {\\n                $this->wr('>');\\n            }             \/\/ If there are no children this is self closing.\\n            else {\\n                $this->wr(' \/>');\\n            }\\n        }\\n    }\\n\\n    protected function attrs($ele)\\n    {\\n        \/\/ FIXME: Needs support for xml, xmlns, xlink, and namespaced elements.\\n        if (!$ele->hasAttributes()) {\\n            return $this;\\n        }\\n\\n        \/\/ TODO: Currently, this always writes name=\\\"value\\\", and does not do\\n        \/\/ value-less attributes.\\n        $map = $ele->attributes;\\n        $len = $map->length;\\n        for ($i = 0; $i < $len; ++$i) {\\n            $node = $map->item($i);\\n            $val = $this->enc($node->value, true);\\n\\n            \/\/ XXX: The spec says that we need to ensure that anything in\\n            \/\/ the XML, XMLNS, or XLink NS's should use the canonical\\n            \/\/ prefix. It seems that DOM does this for us already, but there\\n            \/\/ may be exceptions.\\n            $name = $node->nodeName;\\n\\n            \/\/ Special handling for attributes in SVG and MathML.\\n            \/\/ Using if\/elseif instead of switch because it's faster in PHP.\\n            if ($this->outputMode == static::IM_IN_SVG) {\\n                $name = Elements::normalizeSvgAttribute($name);\\n            } elseif ($this->outputMode == static::IM_IN_MATHML) {\\n                $name = Elements::normalizeMathMlAttribute($name);\\n            }\\n\\n            $this->wr(' ')->wr($name);\\n\\n            if ((isset($val) && '' !== $val) || $this->nonBooleanAttribute($node)) {\\n                $this->wr('=\\\"')->wr($val)->wr('\\\"');\\n            }\\n        }\\n    }\\n\\n    protected function nonBooleanAttribute(\\\\DOMAttr $attr)\\n    {\\n        $ele = $attr->ownerElement;\\n        foreach ($this->nonBooleanAttributes as $rule) {\\n            if (isset($rule['nodeNamespace']) && $rule['nodeNamespace'] !== $ele->namespaceURI) {\\n                continue;\\n            }\\n            if (isset($rule['attNamespace']) && $rule['attNamespace'] !== $attr->namespaceURI) {\\n                continue;\\n            }\\n            if (isset($rule['nodeName']) && !is_array($rule['nodeName']) && $rule['nodeName'] !== $ele->localName) {\\n                continue;\\n            }\\n            if (isset($rule['nodeName']) && is_array($rule['nodeName']) && !in_array($ele->localName, $rule['nodeName'], true)) {\\n                continue;\\n            }\\n            if (isset($rule['attrName']) && !is_array($rule['attrName']) && $rule['attrName'] !== $attr->localName) {\\n                continue;\\n            }\\n            if (isset($rule['attrName']) && is_array($rule['attrName']) && !in_array($attr->localName, $rule['attrName'], true)) {\\n                continue;\\n            }\\n            if (isset($rule['xpath'])) {\\n                $xp = $this->getXPath($attr);\\n                if (isset($rule['prefixes'])) {\\n                    foreach ($rule['prefixes'] as $nsPrefix => $ns) {\\n                        $xp->registerNamespace($nsPrefix, $ns);\\n                    }\\n                }\\n                if (!$xp->evaluate($rule['xpath'], $attr)) {\\n                    continue;\\n                }\\n            }\\n\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n\\n    private function getXPath(\\\\DOMNode $node)\\n    {\\n        if (!$this->xpath) {\\n            $this->xpath = new \\\\DOMXPath($node->ownerDocument);\\n        }\\n\\n        return $this->xpath;\\n    }\\n\\n    \/**\\n     * Write the closing tag.\\n     *\\n     * Tags for HTML, MathML, and SVG are in the local name. Otherwise, use the\\n     * qualified name (8.3).\\n     *\\n     * @param \\\\DOMNode $ele The element being written.\\n     *\/\\n    protected function closeTag($ele)\\n    {\\n        if ($this->outputMode == static::IM_IN_HTML || $ele->hasChildNodes()) {\\n            $this->wr('<\/')->wr($this->traverser->isLocalElement($ele) ? $ele->localName : $ele->tagName)->wr('>');\\n        }\\n    }\\n\\n    \/**\\n     * Write to the output.\\n     *\\n     * @param string $text The string to put into the output\\n     *\\n     * @return $this\\n     *\/\\n    protected function wr($text)\\n    {\\n        fwrite($this->out, $text);\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * Write a new line character.\\n     *\\n     * @return $this\\n     *\/\\n    protected function nl()\\n    {\\n        fwrite($this->out, PHP_EOL);\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * Encode text.\\n     *\\n     * When encode is set to false, the default value, the text passed in is\\n     * escaped per section 8.3 of the html5 spec. For details on how text is\\n     * escaped see the escape() method.\\n     *\\n     * When encoding is set to true the text is converted to named character\\n     * references where appropriate. Section 8.1.4 Character references of the\\n     * html5 spec refers to using named character references. This is useful for\\n     * characters that can't otherwise legally be used in the text.\\n     *\\n     * The named character references are listed in section 8.5.\\n     *\\n     * @see http:\/\/www.w3.org\/TR\/2013\/CR-html5-20130806\/syntax.html#named-character-references True encoding will turn all named character references into their entities.\\n     *      This includes such characters as +.# and many other common ones. By default\\n     *      encoding here will just escape &'<>\\\".\\n     *\\n     *      Note, PHP 5.4+ has better html5 encoding.\\n     *\\n     * @todo Use the Entities class in php 5.3 to have html5 entities.\\n     *\\n     * @param string $text      Text to encode.\\n     * @param bool   $attribute True if we are encoding an attrubute, false otherwise.\\n     *\\n     * @return string The encoded text.\\n     *\/\\n    protected function enc($text, $attribute = false)\\n    {\\n        \/\/ Escape the text rather than convert to named character references.\\n        if (!$this->encode) {\\n            return $this->escape($text, $attribute);\\n        }\\n\\n        \/\/ If we are in PHP 5.4+ we can use the native html5 entity functionality to\\n        \/\/ convert the named character references.\\n\\n        if ($this->hasHTML5) {\\n            return htmlentities($text, ENT_HTML5 | ENT_SUBSTITUTE | ENT_QUOTES, 'UTF-8', false);\\n        }         \/\/ If a version earlier than 5.4 html5 entities are not entirely handled.\\n        \/\/ This manually handles them.\\n        else {\\n            return strtr($text, HTML5Entities::$map);\\n        }\\n    }\\n\\n    \/**\\n     * Escape test.\\n     *\\n     * According to the html5 spec section 8.3 Serializing HTML fragments, text\\n     * within tags that are not style, script, xmp, iframe, noembed, and noframes\\n     * need to be properly escaped.\\n     *\\n     * The & should be converted to &amp;, no breaking space unicode characters\\n     * converted to &nbsp;, when in attribute mode the \\\" should be converted to\\n     * &quot;, and when not in attribute mode the < and > should be converted to\\n     * &lt; and &gt;.\\n     *\\n     * @see http:\/\/www.w3.org\/TR\/2013\/CR-html5-20130806\/syntax.html#escapingString\\n     *\\n     * @param string $text      Text to escape.\\n     * @param bool   $attribute True if we are escaping an attrubute, false otherwise.\\n     *\/\\n    protected function escape($text, $attribute = false)\\n    {\\n        \/\/ Not using htmlspecialchars because, while it does escaping, it doesn't\\n        \/\/ match the requirements of section 8.5. For example, it doesn't handle\\n        \/\/ non-breaking spaces.\\n        if ($attribute) {\\n            $replace = array(\\n                '\\\"' => '&quot;',\\n                '&' => '&amp;',\\n                \\\"\\\\xc2\\\\xa0\\\" => '&nbsp;',\\n            );\\n        } else {\\n            $replace = array(\\n                '<' => '&lt;',\\n                '>' => '&gt;',\\n                '&' => '&amp;',\\n                \\\"\\\\xc2\\\\xa0\\\" => '&nbsp;',\\n            );\\n        }\\n\\n        return strtr($text, $replace);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Serializer\/HTML5Entities.php\",\"ext\":\"php\",\"size\":44292,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * @file\\n * This contains HTML5 entities to use with serializing.\\n *\\n * The list here is mildly different from the list at Entities because\\n * that list was generated from the w3c. It contains some entities that are\\n * not entirely proper such as &am; which maps to &. This list is meant to be\\n * a fallback for PHP versions prior to PHP 5.4 when dealing with encoding.\\n *\/\\n\\nnamespace Masterminds\\\\HTML5\\\\Serializer;\\n\\n\/**\\n * A mapping of entities to their html5 representation.\\n * Used for older PHP\\n * versions that don't have the mapping.\\n *\/\\nclass HTML5Entities\\n{\\n    public static $map = array(\\n        '\\t' => '&Tab;',\\n        \\\"\\\\n\\\" => '&NewLine;',\\n        '!' => '&excl;',\\n        '\\\"' => '&quot;',\\n        '#' => '&num;',\\n        '$' => '&dollar;',\\n        '%' => '&percnt;',\\n        '&' => '&amp;',\\n        '\\\\'' => '&apos;',\\n        '(' => '&lpar;',\\n        ')' => '&rpar;',\\n        '*' => '&ast;',\\n        '+' => '&plus;',\\n        ',' => '&comma;',\\n        '.' => '&period;',\\n        '\/' => '&sol;',\\n        ':' => '&colon;',\\n        ';' => '&semi;',\\n        '<' => '&lt;',\\n        '<\u20d2' => '&nvlt',\\n        '=' => '&equals;',\\n        '=\u20e5' => '&bne',\\n        '>' => '&gt;',\\n        '>\u20d2' => '&nvgt',\\n        '?' => '&quest;',\\n        '@' => '&commat;',\\n        '[' => '&lbrack;',\\n        '\\\\\\\\' => '&bsol;',\\n        ']' => '&rsqb;',\\n        '^' => '&Hat;',\\n        '_' => '&lowbar;',\\n        '`' => '&grave;',\\n        'fj' => '&fjlig',\\n        '{' => '&lbrace;',\\n        '|' => '&vert;',\\n        '}' => '&rcub;',\\n        '\u00a0' => '&nbsp;',\\n        '\u00a1' => '&iexcl;',\\n        '\u00a2' => '&cent;',\\n        '\u00a3' => '&pound;',\\n        '\u00a4' => '&curren;',\\n        '\u00a5' => '&yen;',\\n        '\u00a6' => '&brvbar;',\\n        '\u00a7' => '&sect;',\\n        '\u00a8' => '&DoubleDot;',\\n        '\u00a9' => '&copy;',\\n        '\u00aa' => '&ordf;',\\n        '\u00ab' => '&laquo;',\\n        '\u00ac' => '&not;',\\n        '\u00ad' => '&shy;',\\n        '\u00ae' => '&reg;',\\n        '\u00af' => '&macr;',\\n        '\u00b0' => '&deg;',\\n        '\u00b1' => '&plusmn;',\\n        '\u00b2' => '&sup2;',\\n        '\u00b3' => '&sup3;',\\n        '\u00b4' => '&DiacriticalAcute;',\\n        '\u00b5' => '&micro;',\\n        '\u00b6' => '&para;',\\n        '\u00b7' => '&CenterDot;',\\n        '\u00b8' => '&Cedilla;',\\n        '\u00b9' => '&sup1;',\\n        '\u00ba' => '&ordm;',\\n        '\u00bb' => '&raquo;',\\n        '\u00bc' => '&frac14;',\\n        '\u00bd' => '&half;',\\n        '\u00be' => '&frac34;',\\n        '\u00bf' => '&iquest;',\\n        '\u00c0' => '&Agrave;',\\n        '\u00c1' => '&Aacute;',\\n        '\u00c2' => '&Acirc;',\\n        '\u00c3' => '&Atilde;',\\n        '\u00c4' => '&Auml;',\\n        '\u00c5' => '&Aring;',\\n        '\u00c6' => '&AElig;',\\n        '\u00c7' => '&Ccedil;',\\n        '\u00c8' => '&Egrave;',\\n        '\u00c9' => '&Eacute;',\\n        '\u00ca' => '&Ecirc;',\\n        '\u00cb' => '&Euml;',\\n        '\u00cc' => '&Igrave;',\\n        '\u00cd' => '&Iacute;',\\n        '\u00ce' => '&Icirc;',\\n        '\u00cf' => '&Iuml;',\\n        '\u00d0' => '&ETH;',\\n        '\u00d1' => '&Ntilde;',\\n        '\u00d2' => '&Ograve;',\\n        '\u00d3' => '&Oacute;',\\n        '\u00d4' => '&Ocirc;',\\n        '\u00d5' => '&Otilde;',\\n        '\u00d6' => '&Ouml;',\\n        '\u00d7' => '&times;',\\n        '\u00d8' => '&Oslash;',\\n        '\u00d9' => '&Ugrave;',\\n        '\u00da' => '&Uacute;',\\n        '\u00db' => '&Ucirc;',\\n        '\u00dc' => '&Uuml;',\\n        '\u00dd' => '&Yacute;',\\n        '\u00de' => '&THORN;',\\n        '\u00df' => '&szlig;',\\n        '\u00e0' => '&agrave;',\\n        '\u00e1' => '&aacute;',\\n        '\u00e2' => '&acirc;',\\n        '\u00e3' => '&atilde;',\\n        '\u00e4' => '&auml;',\\n        '\u00e5' => '&aring;',\\n        '\u00e6' => '&aelig;',\\n        '\u00e7' => '&ccedil;',\\n        '\u00e8' => '&egrave;',\\n        '\u00e9' => '&eacute;',\\n        '\u00ea' => '&ecirc;',\\n        '\u00eb' => '&euml;',\\n        '\u00ec' => '&igrave;',\\n        '\u00ed' => '&iacute;',\\n        '\u00ee' => '&icirc;',\\n        '\u00ef' => '&iuml;',\\n        '\u00f0' => '&eth;',\\n        '\u00f1' => '&ntilde;',\\n        '\u00f2' => '&ograve;',\\n        '\u00f3' => '&oacute;',\\n        '\u00f4' => '&ocirc;',\\n        '\u00f5' => '&otilde;',\\n        '\u00f6' => '&ouml;',\\n        '\u00f7' => '&divide;',\\n        '\u00f8' => '&oslash;',\\n        '\u00f9' => '&ugrave;',\\n        '\u00fa' => '&uacute;',\\n        '\u00fb' => '&ucirc;',\\n        '\u00fc' => '&uuml;',\\n        '\u00fd' => '&yacute;',\\n        '\u00fe' => '&thorn;',\\n        '\u00ff' => '&yuml;',\\n        '\u0100' => '&Amacr;',\\n        '\u0101' => '&amacr;',\\n        '\u0102' => '&Abreve;',\\n        '\u0103' => '&abreve;',\\n        '\u0104' => '&Aogon;',\\n        '\u0105' => '&aogon;',\\n        '\u0106' => '&Cacute;',\\n        '\u0107' => '&cacute;',\\n        '\u0108' => '&Ccirc;',\\n        '\u0109' => '&ccirc;',\\n        '\u010a' => '&Cdot;',\\n        '\u010b' => '&cdot;',\\n        '\u010c' => '&Ccaron;',\\n        '\u010d' => '&ccaron;',\\n        '\u010e' => '&Dcaron;',\\n        '\u010f' => '&dcaron;',\\n        '\u0110' => '&Dstrok;',\\n        '\u0111' => '&dstrok;',\\n        '\u0112' => '&Emacr;',\\n        '\u0113' => '&emacr;',\\n        '\u0116' => '&Edot;',\\n        '\u0117' => '&edot;',\\n        '\u0118' => '&Eogon;',\\n        '\u0119' => '&eogon;',\\n        '\u011a' => '&Ecaron;',\\n        '\u011b' => '&ecaron;',\\n        '\u011c' => '&Gcirc;',\\n        '\u011d' => '&gcirc;',\\n        '\u011e' => '&Gbreve;',\\n        '\u011f' => '&gbreve;',\\n        '\u0120' => '&Gdot;',\\n        '\u0121' => '&gdot;',\\n        '\u0122' => '&Gcedil;',\\n        '\u0124' => '&Hcirc;',\\n        '\u0125' => '&hcirc;',\\n        '\u0126' => '&Hstrok;',\\n        '\u0127' => '&hstrok;',\\n        '\u0128' => '&Itilde;',\\n        '\u0129' => '&itilde;',\\n        '\u012a' => '&Imacr;',\\n        '\u012b' => '&imacr;',\\n        '\u012e' => '&Iogon;',\\n        '\u012f' => '&iogon;',\\n        '\u0130' => '&Idot;',\\n        '\u0131' => '&inodot;',\\n        '\u0132' => '&IJlig;',\\n        '\u0133' => '&ijlig;',\\n        '\u0134' => '&Jcirc;',\\n        '\u0135' => '&jcirc;',\\n        '\u0136' => '&Kcedil;',\\n        '\u0137' => '&kcedil;',\\n        '\u0138' => '&kgreen;',\\n        '\u0139' => '&Lacute;',\\n        '\u013a' => '&lacute;',\\n        '\u013b' => '&Lcedil;',\\n        '\u013c' => '&lcedil;',\\n        '\u013d' => '&Lcaron;',\\n        '\u013e' => '&lcaron;',\\n        '\u013f' => '&Lmidot;',\\n        '\u0140' => '&lmidot;',\\n        '\u0141' => '&Lstrok;',\\n        '\u0142' => '&lstrok;',\\n        '\u0143' => '&Nacute;',\\n        '\u0144' => '&nacute;',\\n        '\u0145' => '&Ncedil;',\\n        '\u0146' => '&ncedil;',\\n        '\u0147' => '&Ncaron;',\\n        '\u0148' => '&ncaron;',\\n        '\u0149' => '&napos;',\\n        '\u014a' => '&ENG;',\\n        '\u014b' => '&eng;',\\n        '\u014c' => '&Omacr;',\\n        '\u014d' => '&omacr;',\\n        '\u0150' => '&Odblac;',\\n        '\u0151' => '&odblac;',\\n        '\u0152' => '&OElig;',\\n        '\u0153' => '&oelig;',\\n        '\u0154' => '&Racute;',\\n        '\u0155' => '&racute;',\\n        '\u0156' => '&Rcedil;',\\n        '\u0157' => '&rcedil;',\\n        '\u0158' => '&Rcaron;',\\n        '\u0159' => '&rcaron;',\\n        '\u015a' => '&Sacute;',\\n        '\u015b' => '&sacute;',\\n        '\u015c' => '&Scirc;',\\n        '\u015d' => '&scirc;',\\n        '\u015e' => '&Scedil;',\\n        '\u015f' => '&scedil;',\\n        '\u0160' => '&Scaron;',\\n        '\u0161' => '&scaron;',\\n        '\u0162' => '&Tcedil;',\\n        '\u0163' => '&tcedil;',\\n        '\u0164' => '&Tcaron;',\\n        '\u0165' => '&tcaron;',\\n        '\u0166' => '&Tstrok;',\\n        '\u0167' => '&tstrok;',\\n        '\u0168' => '&Utilde;',\\n        '\u0169' => '&utilde;',\\n        '\u016a' => '&Umacr;',\\n        '\u016b' => '&umacr;',\\n        '\u016c' => '&Ubreve;',\\n        '\u016d' => '&ubreve;',\\n        '\u016e' => '&Uring;',\\n        '\u016f' => '&uring;',\\n        '\u0170' => '&Udblac;',\\n        '\u0171' => '&udblac;',\\n        '\u0172' => '&Uogon;',\\n        '\u0173' => '&uogon;',\\n        '\u0174' => '&Wcirc;',\\n        '\u0175' => '&wcirc;',\\n        '\u0176' => '&Ycirc;',\\n        '\u0177' => '&ycirc;',\\n        '\u0178' => '&Yuml;',\\n        '\u0179' => '&Zacute;',\\n        '\u017a' => '&zacute;',\\n        '\u017b' => '&Zdot;',\\n        '\u017c' => '&zdot;',\\n        '\u017d' => '&Zcaron;',\\n        '\u017e' => '&zcaron;',\\n        '\u0192' => '&fnof;',\\n        '\u01b5' => '&imped;',\\n        '\u01f5' => '&gacute;',\\n        '\u0237' => '&jmath;',\\n        '\u02c6' => '&circ;',\\n        '\u02c7' => '&Hacek;',\\n        '\u02d8' => '&Breve;',\\n        '\u02d9' => '&dot;',\\n        '\u02da' => '&ring;',\\n        '\u02db' => '&ogon;',\\n        '\u02dc' => '&DiacriticalTilde;',\\n        '\u02dd' => '&DiacriticalDoubleAcute;',\\n        '\u0311' => '&DownBreve;',\\n        '\u0391' => '&Alpha;',\\n        '\u0392' => '&Beta;',\\n        '\u0393' => '&Gamma;',\\n        '\u0394' => '&Delta;',\\n        '\u0395' => '&Epsilon;',\\n        '\u0396' => '&Zeta;',\\n        '\u0397' => '&Eta;',\\n        '\u0398' => '&Theta;',\\n        '\u0399' => '&Iota;',\\n        '\u039a' => '&Kappa;',\\n        '\u039b' => '&Lambda;',\\n        '\u039c' => '&Mu;',\\n        '\u039d' => '&Nu;',\\n        '\u039e' => '&Xi;',\\n        '\u039f' => '&Omicron;',\\n        '\u03a0' => '&Pi;',\\n        '\u03a1' => '&Rho;',\\n        '\u03a3' => '&Sigma;',\\n        '\u03a4' => '&Tau;',\\n        '\u03a5' => '&Upsilon;',\\n        '\u03a6' => '&Phi;',\\n        '\u03a7' => '&Chi;',\\n        '\u03a8' => '&Psi;',\\n        '\u03a9' => '&Omega;',\\n        '\u03b1' => '&alpha;',\\n        '\u03b2' => '&beta;',\\n        '\u03b3' => '&gamma;',\\n        '\u03b4' => '&delta;',\\n        '\u03b5' => '&epsi;',\\n        '\u03b6' => '&zeta;',\\n        '\u03b7' => '&eta;',\\n        '\u03b8' => '&theta;',\\n        '\u03b9' => '&iota;',\\n        '\u03ba' => '&kappa;',\\n        '\u03bb' => '&lambda;',\\n        '\u03bc' => '&mu;',\\n        '\u03bd' => '&nu;',\\n        '\u03be' => '&xi;',\\n        '\u03bf' => '&omicron;',\\n        '\u03c0' => '&pi;',\\n        '\u03c1' => '&rho;',\\n        '\u03c2' => '&sigmav;',\\n        '\u03c3' => '&sigma;',\\n        '\u03c4' => '&tau;',\\n        '\u03c5' => '&upsi;',\\n        '\u03c6' => '&phi;',\\n        '\u03c7' => '&chi;',\\n        '\u03c8' => '&psi;',\\n        '\u03c9' => '&omega;',\\n        '\u03d1' => '&thetasym;',\\n        '\u03d2' => '&upsih;',\\n        '\u03d5' => '&straightphi;',\\n        '\u03d6' => '&piv;',\\n        '\u03dc' => '&Gammad;',\\n        '\u03dd' => '&gammad;',\\n        '\u03f0' => '&varkappa;',\\n        '\u03f1' => '&rhov;',\\n        '\u03f5' => '&straightepsilon;',\\n        '\u03f6' => '&backepsilon;',\\n        '\u0401' => '&IOcy;',\\n        '\u0402' => '&DJcy;',\\n        '\u0403' => '&GJcy;',\\n        '\u0404' => '&Jukcy;',\\n        '\u0405' => '&DScy;',\\n        '\u0406' => '&Iukcy;',\\n        '\u0407' => '&YIcy;',\\n        '\u0408' => '&Jsercy;',\\n        '\u0409' => '&LJcy;',\\n        '\u040a' => '&NJcy;',\\n        '\u040b' => '&TSHcy;',\\n        '\u040c' => '&KJcy;',\\n        '\u040e' => '&Ubrcy;',\\n        '\u040f' => '&DZcy;',\\n        '\u0410' => '&Acy;',\\n        '\u0411' => '&Bcy;',\\n        '\u0412' => '&Vcy;',\\n        '\u0413' => '&Gcy;',\\n        '\u0414' => '&Dcy;',\\n        '\u0415' => '&IEcy;',\\n        '\u0416' => '&ZHcy;',\\n        '\u0417' => '&Zcy;',\\n        '\u0418' => '&Icy;',\\n        '\u0419' => '&Jcy;',\\n        '\u041a' => '&Kcy;',\\n        '\u041b' => '&Lcy;',\\n        '\u041c' => '&Mcy;',\\n        '\u041d' => '&Ncy;',\\n        '\u041e' => '&Ocy;',\\n        '\u041f' => '&Pcy;',\\n        '\u0420' => '&Rcy;',\\n        '\u0421' => '&Scy;',\\n        '\u0422' => '&Tcy;',\\n        '\u0423' => '&Ucy;',\\n        '\u0424' => '&Fcy;',\\n        '\u0425' => '&KHcy;',\\n        '\u0426' => '&TScy;',\\n        '\u0427' => '&CHcy;',\\n        '\u0428' => '&SHcy;',\\n        '\u0429' => '&SHCHcy;',\\n        '\u042a' => '&HARDcy;',\\n        '\u042b' => '&Ycy;',\\n        '\u042c' => '&SOFTcy;',\\n        '\u042d' => '&Ecy;',\\n        '\u042e' => '&YUcy;',\\n        '\u042f' => '&YAcy;',\\n        '\u0430' => '&acy;',\\n        '\u0431' => '&bcy;',\\n        '\u0432' => '&vcy;',\\n        '\u0433' => '&gcy;',\\n        '\u0434' => '&dcy;',\\n        '\u0435' => '&iecy;',\\n        '\u0436' => '&zhcy;',\\n        '\u0437' => '&zcy;',\\n        '\u0438' => '&icy;',\\n        '\u0439' => '&jcy;',\\n        '\u043a' => '&kcy;',\\n        '\u043b' => '&lcy;',\\n        '\u043c' => '&mcy;',\\n        '\u043d' => '&ncy;',\\n        '\u043e' => '&ocy;',\\n        '\u043f' => '&pcy;',\\n        '\u0440' => '&rcy;',\\n        '\u0441' => '&scy;',\\n        '\u0442' => '&tcy;',\\n        '\u0443' => '&ucy;',\\n        '\u0444' => '&fcy;',\\n        '\u0445' => '&khcy;',\\n        '\u0446' => '&tscy;',\\n        '\u0447' => '&chcy;',\\n        '\u0448' => '&shcy;',\\n        '\u0449' => '&shchcy;',\\n        '\u044a' => '&hardcy;',\\n        '\u044b' => '&ycy;',\\n        '\u044c' => '&softcy;',\\n        '\u044d' => '&ecy;',\\n        '\u044e' => '&yucy;',\\n        '\u044f' => '&yacy;',\\n        '\u0451' => '&iocy;',\\n        '\u0452' => '&djcy;',\\n        '\u0453' => '&gjcy;',\\n        '\u0454' => '&jukcy;',\\n        '\u0455' => '&dscy;',\\n        '\u0456' => '&iukcy;',\\n        '\u0457' => '&yicy;',\\n        '\u0458' => '&jsercy;',\\n        '\u0459' => '&ljcy;',\\n        '\u045a' => '&njcy;',\\n        '\u045b' => '&tshcy;',\\n        '\u045c' => '&kjcy;',\\n        '\u045e' => '&ubrcy;',\\n        '\u045f' => '&dzcy;',\\n        '\u2002' => '&ensp;',\\n        '\u2003' => '&emsp;',\\n        '\u2004' => '&emsp13;',\\n        '\u2005' => '&emsp14;',\\n        '\u2007' => '&numsp;',\\n        '\u2008' => '&puncsp;',\\n        '\u2009' => '&ThinSpace;',\\n        '\u200a' => '&hairsp;',\\n        '\u200b' => '&ZeroWidthSpace;',\\n        '\u200c' => '&zwnj;',\\n        '\u200d' => '&zwj;',\\n        '\u200e' => '&lrm;',\\n        '\u200f' => '&rlm;',\\n        '\u2010' => '&hyphen;',\\n        '\u2013' => '&ndash;',\\n        '\u2014' => '&mdash;',\\n        '\u2015' => '&horbar;',\\n        '\u2016' => '&Verbar;',\\n        '\u2018' => '&OpenCurlyQuote;',\\n        '\u2019' => '&rsquo;',\\n        '\u201a' => '&sbquo;',\\n        '\u201c' => '&OpenCurlyDoubleQuote;',\\n        '\u201d' => '&rdquo;',\\n        '\u201e' => '&bdquo;',\\n        '\u2020' => '&dagger;',\\n        '\u2021' => '&Dagger;',\\n        '\u2022' => '&bull;',\\n        '\u2025' => '&nldr;',\\n        '\u2026' => '&hellip;',\\n        '\u2030' => '&permil;',\\n        '\u2031' => '&pertenk;',\\n        '\u2032' => '&prime;',\\n        '\u2033' => '&Prime;',\\n        '\u2034' => '&tprime;',\\n        '\u2035' => '&backprime;',\\n        '\u2039' => '&lsaquo;',\\n        '\u203a' => '&rsaquo;',\\n        '\u203e' => '&oline;',\\n        '\u2041' => '&caret;',\\n        '\u2043' => '&hybull;',\\n        '\u2044' => '&frasl;',\\n        '\u204f' => '&bsemi;',\\n        '\u2057' => '&qprime;',\\n        '\u205f' => '&MediumSpace;',\\n        '\u205f\u200a' => '&ThickSpace',\\n        '\u2060' => '&NoBreak;',\\n        '\u2061' => '&af;',\\n        '\u2062' => '&InvisibleTimes;',\\n        '\u2063' => '&ic;',\\n        '\u20ac' => '&euro;',\\n        '\u20db' => '&TripleDot;',\\n        '\u20dc' => '&DotDot;',\\n        '\u2102' => '&complexes;',\\n        '\u2105' => '&incare;',\\n        '\u210a' => '&gscr;',\\n        '\u210b' => '&HilbertSpace;',\\n        '\u210c' => '&Hfr;',\\n        '\u210d' => '&Hopf;',\\n        '\u210e' => '&planckh;',\\n        '\u210f' => '&planck;',\\n        '\u2110' => '&imagline;',\\n        '\u2111' => '&Ifr;',\\n        '\u2112' => '&lagran;',\\n        '\u2113' => '&ell;',\\n        '\u2115' => '&naturals;',\\n        '\u2116' => '&numero;',\\n        '\u2117' => '&copysr;',\\n        '\u2118' => '&wp;',\\n        '\u2119' => '&primes;',\\n        '\u211a' => '&rationals;',\\n        '\u211b' => '&realine;',\\n        '\u211c' => '&Rfr;',\\n        '\u211d' => '&Ropf;',\\n        '\u211e' => '&rx;',\\n        '\u2122' => '&trade;',\\n        '\u2124' => '&Zopf;',\\n        '\u2127' => '&mho;',\\n        '\u2128' => '&Zfr;',\\n        '\u2129' => '&iiota;',\\n        '\u212c' => '&Bscr;',\\n        '\u212d' => '&Cfr;',\\n        '\u212f' => '&escr;',\\n        '\u2130' => '&expectation;',\\n        '\u2131' => '&Fouriertrf;',\\n        '\u2133' => '&Mellintrf;',\\n        '\u2134' => '&orderof;',\\n        '\u2135' => '&aleph;',\\n        '\u2136' => '&beth;',\\n        '\u2137' => '&gimel;',\\n        '\u2138' => '&daleth;',\\n        '\u2145' => '&CapitalDifferentialD;',\\n        '\u2146' => '&DifferentialD;',\\n        '\u2147' => '&exponentiale;',\\n        '\u2148' => '&ImaginaryI;',\\n        '\u2153' => '&frac13;',\\n        '\u2154' => '&frac23;',\\n        '\u2155' => '&frac15;',\\n        '\u2156' => '&frac25;',\\n        '\u2157' => '&frac35;',\\n        '\u2158' => '&frac45;',\\n        '\u2159' => '&frac16;',\\n        '\u215a' => '&frac56;',\\n        '\u215b' => '&frac18;',\\n        '\u215c' => '&frac38;',\\n        '\u215d' => '&frac58;',\\n        '\u215e' => '&frac78;',\\n        '\u2190' => '&larr;',\\n        '\u2191' => '&uarr;',\\n        '\u2192' => '&srarr;',\\n        '\u2193' => '&darr;',\\n        '\u2194' => '&harr;',\\n        '\u2195' => '&UpDownArrow;',\\n        '\u2196' => '&nwarrow;',\\n        '\u2197' => '&UpperRightArrow;',\\n        '\u2198' => '&LowerRightArrow;',\\n        '\u2199' => '&swarr;',\\n        '\u219a' => '&nleftarrow;',\\n        '\u219b' => '&nrarr;',\\n        '\u219d' => '&rarrw;',\\n        '\u219d\u0338' => '&nrarrw',\\n        '\u219e' => '&Larr;',\\n        '\u219f' => '&Uarr;',\\n        '\u21a0' => '&twoheadrightarrow;',\\n        '\u21a1' => '&Darr;',\\n        '\u21a2' => '&larrtl;',\\n        '\u21a3' => '&rarrtl;',\\n        '\u21a4' => '&LeftTeeArrow;',\\n        '\u21a5' => '&UpTeeArrow;',\\n        '\u21a6' => '&map;',\\n        '\u21a7' => '&DownTeeArrow;',\\n        '\u21a9' => '&larrhk;',\\n        '\u21aa' => '&rarrhk;',\\n        '\u21ab' => '&larrlp;',\\n        '\u21ac' => '&looparrowright;',\\n        '\u21ad' => '&harrw;',\\n        '\u21ae' => '&nleftrightarrow;',\\n        '\u21b0' => '&Lsh;',\\n        '\u21b1' => '&rsh;',\\n        '\u21b2' => '&ldsh;',\\n        '\u21b3' => '&rdsh;',\\n        '\u21b5' => '&crarr;',\\n        '\u21b6' => '&curvearrowleft;',\\n        '\u21b7' => '&curarr;',\\n        '\u21ba' => '&olarr;',\\n        '\u21bb' => '&orarr;',\\n        '\u21bc' => '&leftharpoonup;',\\n        '\u21bd' => '&leftharpoondown;',\\n        '\u21be' => '&RightUpVector;',\\n        '\u21bf' => '&uharl;',\\n        '\u21c0' => '&rharu;',\\n        '\u21c1' => '&rhard;',\\n        '\u21c2' => '&RightDownVector;',\\n        '\u21c3' => '&dharl;',\\n        '\u21c4' => '&rightleftarrows;',\\n        '\u21c5' => '&udarr;',\\n        '\u21c6' => '&lrarr;',\\n        '\u21c7' => '&llarr;',\\n        '\u21c8' => '&upuparrows;',\\n        '\u21c9' => '&rrarr;',\\n        '\u21ca' => '&downdownarrows;',\\n        '\u21cb' => '&leftrightharpoons;',\\n        '\u21cc' => '&rightleftharpoons;',\\n        '\u21cd' => '&nLeftarrow;',\\n        '\u21ce' => '&nhArr;',\\n        '\u21cf' => '&nrArr;',\\n        '\u21d0' => '&DoubleLeftArrow;',\\n        '\u21d1' => '&DoubleUpArrow;',\\n        '\u21d2' => '&Implies;',\\n        '\u21d3' => '&Downarrow;',\\n        '\u21d4' => '&hArr;',\\n        '\u21d5' => '&Updownarrow;',\\n        '\u21d6' => '&nwArr;',\\n        '\u21d7' => '&neArr;',\\n        '\u21d8' => '&seArr;',\\n        '\u21d9' => '&swArr;',\\n        '\u21da' => '&lAarr;',\\n        '\u21db' => '&rAarr;',\\n        '\u21dd' => '&zigrarr;',\\n        '\u21e4' => '&LeftArrowBar;',\\n        '\u21e5' => '&RightArrowBar;',\\n        '\u21f5' => '&DownArrowUpArrow;',\\n        '\u21fd' => '&loarr;',\\n        '\u21fe' => '&roarr;',\\n        '\u21ff' => '&hoarr;',\\n        '\u2200' => '&forall;',\\n        '\u2201' => '&comp;',\\n        '\u2202' => '&part;',\\n        '\u2202\u0338' => '&npart',\\n        '\u2203' => '&Exists;',\\n        '\u2204' => '&nexist;',\\n        '\u2205' => '&empty;',\\n        '\u2207' => '&nabla;',\\n        '\u2208' => '&isinv;',\\n        '\u2209' => '&notin;',\\n        '\u220b' => '&ReverseElement;',\\n        '\u220c' => '&notniva;',\\n        '\u220f' => '&prod;',\\n        '\u2210' => '&Coproduct;',\\n        '\u2211' => '&sum;',\\n        '\u2212' => '&minus;',\\n        '\u2213' => '&MinusPlus;',\\n        '\u2214' => '&plusdo;',\\n        '\u2216' => '&ssetmn;',\\n        '\u2217' => '&lowast;',\\n        '\u2218' => '&compfn;',\\n        '\u221a' => '&Sqrt;',\\n        '\u221d' => '&prop;',\\n        '\u221e' => '&infin;',\\n        '\u221f' => '&angrt;',\\n        '\u2220' => '&angle;',\\n        '\u2220\u20d2' => '&nang',\\n        '\u2221' => '&angmsd;',\\n        '\u2222' => '&angsph;',\\n        '\u2223' => '&mid;',\\n        '\u2224' => '&nshortmid;',\\n        '\u2225' => '&shortparallel;',\\n        '\u2226' => '&nparallel;',\\n        '\u2227' => '&and;',\\n        '\u2228' => '&or;',\\n        '\u2229' => '&cap;',\\n        '\u2229\ufe00' => '&caps',\\n        '\u222a' => '&cup;',\\n        '\u222a\ufe00' => '&cups',\\n        '\u222b' => '&Integral;',\\n        '\u222c' => '&Int;',\\n        '\u222d' => '&tint;',\\n        '\u222e' => '&ContourIntegral;',\\n        '\u222f' => '&DoubleContourIntegral;',\\n        '\u2230' => '&Cconint;',\\n        '\u2231' => '&cwint;',\\n        '\u2232' => '&cwconint;',\\n        '\u2233' => '&awconint;',\\n        '\u2234' => '&there4;',\\n        '\u2235' => '&Because;',\\n        '\u2236' => '&ratio;',\\n        '\u2237' => '&Colon;',\\n        '\u2238' => '&minusd;',\\n        '\u223a' => '&mDDot;',\\n        '\u223b' => '&homtht;',\\n        '\u223c' => '&sim;',\\n        '\u223c\u20d2' => '&nvsim',\\n        '\u223d' => '&bsim;',\\n        '\u223d\u0331' => '&race',\\n        '\u223e' => '&ac;',\\n        '\u223e\u0333' => '&acE',\\n        '\u223f' => '&acd;',\\n        '\u2240' => '&wr;',\\n        '\u2241' => '&NotTilde;',\\n        '\u2242' => '&esim;',\\n        '\u2242\u0338' => '&nesim',\\n        '\u2243' => '&simeq;',\\n        '\u2244' => '&nsime;',\\n        '\u2245' => '&TildeFullEqual;',\\n        '\u2246' => '&simne;',\\n        '\u2247' => '&ncong;',\\n        '\u2248' => '&approx;',\\n        '\u2249' => '&napprox;',\\n        '\u224a' => '&ape;',\\n        '\u224b' => '&apid;',\\n        '\u224b\u0338' => '&napid',\\n        '\u224c' => '&bcong;',\\n        '\u224d' => '&CupCap;',\\n        '\u224d\u20d2' => '&nvap',\\n        '\u224e' => '&bump;',\\n        '\u224e\u0338' => '&nbump',\\n        '\u224f' => '&HumpEqual;',\\n        '\u224f\u0338' => '&nbumpe',\\n        '\u2250' => '&esdot;',\\n        '\u2250\u0338' => '&nedot',\\n        '\u2251' => '&doteqdot;',\\n        '\u2252' => '&fallingdotseq;',\\n        '\u2253' => '&risingdotseq;',\\n        '\u2254' => '&coloneq;',\\n        '\u2255' => '&eqcolon;',\\n        '\u2256' => '&ecir;',\\n        '\u2257' => '&circeq;',\\n        '\u2259' => '&wedgeq;',\\n        '\u225a' => '&veeeq;',\\n        '\u225c' => '&triangleq;',\\n        '\u225f' => '&equest;',\\n        '\u2260' => '&NotEqual;',\\n        '\u2261' => '&Congruent;',\\n        '\u2261\u20e5' => '&bnequiv',\\n        '\u2262' => '&NotCongruent;',\\n        '\u2264' => '&leq;',\\n        '\u2264\u20d2' => '&nvle',\\n        '\u2265' => '&ge;',\\n        '\u2265\u20d2' => '&nvge',\\n        '\u2266' => '&lE;',\\n        '\u2266\u0338' => '&nlE',\\n        '\u2267' => '&geqq;',\\n        '\u2267\u0338' => '&NotGreaterFullEqual',\\n        '\u2268' => '&lneqq;',\\n        '\u2268\ufe00' => '&lvertneqq',\\n        '\u2269' => '&gneqq;',\\n        '\u2269\ufe00' => '&gvertneqq',\\n        '\u226a' => '&ll;',\\n        '\u226a\u0338' => '&nLtv',\\n        '\u226a\u20d2' => '&nLt',\\n        '\u226b' => '&gg;',\\n        '\u226b\u0338' => '&NotGreaterGreater',\\n        '\u226b\u20d2' => '&nGt',\\n        '\u226c' => '&between;',\\n        '\u226d' => '&NotCupCap;',\\n        '\u226e' => '&NotLess;',\\n        '\u226f' => '&ngtr;',\\n        '\u2270' => '&NotLessEqual;',\\n        '\u2271' => '&ngeq;',\\n        '\u2272' => '&LessTilde;',\\n        '\u2273' => '&GreaterTilde;',\\n        '\u2274' => '&nlsim;',\\n        '\u2275' => '&ngsim;',\\n        '\u2276' => '&lessgtr;',\\n        '\u2277' => '&gl;',\\n        '\u2278' => '&ntlg;',\\n        '\u2279' => '&NotGreaterLess;',\\n        '\u227a' => '&prec;',\\n        '\u227b' => '&succ;',\\n        '\u227c' => '&PrecedesSlantEqual;',\\n        '\u227d' => '&succcurlyeq;',\\n        '\u227e' => '&precsim;',\\n        '\u227f' => '&SucceedsTilde;',\\n        '\u227f\u0338' => '&NotSucceedsTilde',\\n        '\u2280' => '&npr;',\\n        '\u2281' => '&NotSucceeds;',\\n        '\u2282' => '&sub;',\\n        '\u2282\u20d2' => '&vnsub',\\n        '\u2283' => '&sup;',\\n        '\u2283\u20d2' => '&nsupset',\\n        '\u2284' => '&nsub;',\\n        '\u2285' => '&nsup;',\\n        '\u2286' => '&SubsetEqual;',\\n        '\u2287' => '&supe;',\\n        '\u2288' => '&NotSubsetEqual;',\\n        '\u2289' => '&NotSupersetEqual;',\\n        '\u228a' => '&subsetneq;',\\n        '\u228a\ufe00' => '&vsubne',\\n        '\u228b' => '&supsetneq;',\\n        '\u228b\ufe00' => '&vsupne',\\n        '\u228d' => '&cupdot;',\\n        '\u228e' => '&UnionPlus;',\\n        '\u228f' => '&sqsub;',\\n        '\u228f\u0338' => '&NotSquareSubset',\\n        '\u2290' => '&sqsupset;',\\n        '\u2290\u0338' => '&NotSquareSuperset',\\n        '\u2291' => '&SquareSubsetEqual;',\\n        '\u2292' => '&SquareSupersetEqual;',\\n        '\u2293' => '&sqcap;',\\n        '\u2293\ufe00' => '&sqcaps',\\n        '\u2294' => '&sqcup;',\\n        '\u2294\ufe00' => '&sqcups',\\n        '\u2295' => '&CirclePlus;',\\n        '\u2296' => '&ominus;',\\n        '\u2297' => '&CircleTimes;',\\n        '\u2298' => '&osol;',\\n        '\u2299' => '&CircleDot;',\\n        '\u229a' => '&ocir;',\\n        '\u229b' => '&oast;',\\n        '\u229d' => '&odash;',\\n        '\u229e' => '&boxplus;',\\n        '\u229f' => '&boxminus;',\\n        '\u22a0' => '&timesb;',\\n        '\u22a1' => '&sdotb;',\\n        '\u22a2' => '&vdash;',\\n        '\u22a3' => '&dashv;',\\n        '\u22a4' => '&DownTee;',\\n        '\u22a5' => '&perp;',\\n        '\u22a7' => '&models;',\\n        '\u22a8' => '&DoubleRightTee;',\\n        '\u22a9' => '&Vdash;',\\n        '\u22aa' => '&Vvdash;',\\n        '\u22ab' => '&VDash;',\\n        '\u22ac' => '&nvdash;',\\n        '\u22ad' => '&nvDash;',\\n        '\u22ae' => '&nVdash;',\\n        '\u22af' => '&nVDash;',\\n        '\u22b0' => '&prurel;',\\n        '\u22b2' => '&vartriangleleft;',\\n        '\u22b3' => '&vrtri;',\\n        '\u22b4' => '&LeftTriangleEqual;',\\n        '\u22b4\u20d2' => '&nvltrie',\\n        '\u22b5' => '&RightTriangleEqual;',\\n        '\u22b5\u20d2' => '&nvrtrie',\\n        '\u22b6' => '&origof;',\\n        '\u22b7' => '&imof;',\\n        '\u22b8' => '&mumap;',\\n        '\u22b9' => '&hercon;',\\n        '\u22ba' => '&intcal;',\\n        '\u22bb' => '&veebar;',\\n        '\u22bd' => '&barvee;',\\n        '\u22be' => '&angrtvb;',\\n        '\u22bf' => '&lrtri;',\\n        '\u22c0' => '&xwedge;',\\n        '\u22c1' => '&xvee;',\\n        '\u22c2' => '&bigcap;',\\n        '\u22c3' => '&bigcup;',\\n        '\u22c4' => '&diamond;',\\n        '\u22c5' => '&sdot;',\\n        '\u22c6' => '&Star;',\\n        '\u22c7' => '&divonx;',\\n        '\u22c8' => '&bowtie;',\\n        '\u22c9' => '&ltimes;',\\n        '\u22ca' => '&rtimes;',\\n        '\u22cb' => '&lthree;',\\n        '\u22cc' => '&rthree;',\\n        '\u22cd' => '&backsimeq;',\\n        '\u22ce' => '&curlyvee;',\\n        '\u22cf' => '&curlywedge;',\\n        '\u22d0' => '&Sub;',\\n        '\u22d1' => '&Supset;',\\n        '\u22d2' => '&Cap;',\\n        '\u22d3' => '&Cup;',\\n        '\u22d4' => '&pitchfork;',\\n        '\u22d5' => '&epar;',\\n        '\u22d6' => '&lessdot;',\\n        '\u22d7' => '&gtrdot;',\\n        '\u22d8' => '&Ll;',\\n        '\u22d8\u0338' => '&nLl',\\n        '\u22d9' => '&Gg;',\\n        '\u22d9\u0338' => '&nGg',\\n        '\u22da' => '&lesseqgtr;',\\n        '\u22da\ufe00' => '&lesg',\\n        '\u22db' => '&gtreqless;',\\n        '\u22db\ufe00' => '&gesl',\\n        '\u22de' => '&curlyeqprec;',\\n        '\u22df' => '&cuesc;',\\n        '\u22e0' => '&NotPrecedesSlantEqual;',\\n        '\u22e1' => '&NotSucceedsSlantEqual;',\\n        '\u22e2' => '&NotSquareSubsetEqual;',\\n        '\u22e3' => '&NotSquareSupersetEqual;',\\n        '\u22e6' => '&lnsim;',\\n        '\u22e7' => '&gnsim;',\\n        '\u22e8' => '&precnsim;',\\n        '\u22e9' => '&scnsim;',\\n        '\u22ea' => '&nltri;',\\n        '\u22eb' => '&ntriangleright;',\\n        '\u22ec' => '&nltrie;',\\n        '\u22ed' => '&NotRightTriangleEqual;',\\n        '\u22ee' => '&vellip;',\\n        '\u22ef' => '&ctdot;',\\n        '\u22f0' => '&utdot;',\\n        '\u22f1' => '&dtdot;',\\n        '\u22f2' => '&disin;',\\n        '\u22f3' => '&isinsv;',\\n        '\u22f4' => '&isins;',\\n        '\u22f5' => '&isindot;',\\n        '\u22f5\u0338' => '&notindot',\\n        '\u22f6' => '&notinvc;',\\n        '\u22f7' => '&notinvb;',\\n        '\u22f9' => '&isinE;',\\n        '\u22f9\u0338' => '&notinE',\\n        '\u22fa' => '&nisd;',\\n        '\u22fb' => '&xnis;',\\n        '\u22fc' => '&nis;',\\n        '\u22fd' => '&notnivc;',\\n        '\u22fe' => '&notnivb;',\\n        '\u2305' => '&barwed;',\\n        '\u2306' => '&doublebarwedge;',\\n        '\u2308' => '&lceil;',\\n        '\u2309' => '&RightCeiling;',\\n        '\u230a' => '&LeftFloor;',\\n        '\u230b' => '&RightFloor;',\\n        '\u230c' => '&drcrop;',\\n        '\u230d' => '&dlcrop;',\\n        '\u230e' => '&urcrop;',\\n        '\u230f' => '&ulcrop;',\\n        '\u2310' => '&bnot;',\\n        '\u2312' => '&profline;',\\n        '\u2313' => '&profsurf;',\\n        '\u2315' => '&telrec;',\\n        '\u2316' => '&target;',\\n        '\u231c' => '&ulcorner;',\\n        '\u231d' => '&urcorner;',\\n        '\u231e' => '&llcorner;',\\n        '\u231f' => '&drcorn;',\\n        '\u2322' => '&frown;',\\n        '\u2323' => '&smile;',\\n        '\u232d' => '&cylcty;',\\n        '\u232e' => '&profalar;',\\n        '\u2336' => '&topbot;',\\n        '\u233d' => '&ovbar;',\\n        '\u233f' => '&solbar;',\\n        '\u237c' => '&angzarr;',\\n        '\u23b0' => '&lmoust;',\\n        '\u23b1' => '&rmoust;',\\n        '\u23b4' => '&OverBracket;',\\n        '\u23b5' => '&bbrk;',\\n        '\u23b6' => '&bbrktbrk;',\\n        '\u23dc' => '&OverParenthesis;',\\n        '\u23dd' => '&UnderParenthesis;',\\n        '\u23de' => '&OverBrace;',\\n        '\u23df' => '&UnderBrace;',\\n        '\u23e2' => '&trpezium;',\\n        '\u23e7' => '&elinters;',\\n        '\u2423' => '&blank;',\\n        '\u24c8' => '&oS;',\\n        '\u2500' => '&HorizontalLine;',\\n        '\u2502' => '&boxv;',\\n        '\u250c' => '&boxdr;',\\n        '\u2510' => '&boxdl;',\\n        '\u2514' => '&boxur;',\\n        '\u2518' => '&boxul;',\\n        '\u251c' => '&boxvr;',\\n        '\u2524' => '&boxvl;',\\n        '\u252c' => '&boxhd;',\\n        '\u2534' => '&boxhu;',\\n        '\u253c' => '&boxvh;',\\n        '\u2550' => '&boxH;',\\n        '\u2551' => '&boxV;',\\n        '\u2552' => '&boxdR;',\\n        '\u2553' => '&boxDr;',\\n        '\u2554' => '&boxDR;',\\n        '\u2555' => '&boxdL;',\\n        '\u2556' => '&boxDl;',\\n        '\u2557' => '&boxDL;',\\n        '\u2558' => '&boxuR;',\\n        '\u2559' => '&boxUr;',\\n        '\u255a' => '&boxUR;',\\n        '\u255b' => '&boxuL;',\\n        '\u255c' => '&boxUl;',\\n        '\u255d' => '&boxUL;',\\n        '\u255e' => '&boxvR;',\\n        '\u255f' => '&boxVr;',\\n        '\u2560' => '&boxVR;',\\n        '\u2561' => '&boxvL;',\\n        '\u2562' => '&boxVl;',\\n        '\u2563' => '&boxVL;',\\n        '\u2564' => '&boxHd;',\\n        '\u2565' => '&boxhD;',\\n        '\u2566' => '&boxHD;',\\n        '\u2567' => '&boxHu;',\\n        '\u2568' => '&boxhU;',\\n        '\u2569' => '&boxHU;',\\n        '\u256a' => '&boxvH;',\\n        '\u256b' => '&boxVh;',\\n        '\u256c' => '&boxVH;',\\n        '\u2580' => '&uhblk;',\\n        '\u2584' => '&lhblk;',\\n        '\u2588' => '&block;',\\n        '\u2591' => '&blk14;',\\n        '\u2592' => '&blk12;',\\n        '\u2593' => '&blk34;',\\n        '\u25a1' => '&Square;',\\n        '\u25aa' => '&squarf;',\\n        '\u25ab' => '&EmptyVerySmallSquare;',\\n        '\u25ad' => '&rect;',\\n        '\u25ae' => '&marker;',\\n        '\u25b1' => '&fltns;',\\n        '\u25b3' => '&bigtriangleup;',\\n        '\u25b4' => '&blacktriangle;',\\n        '\u25b5' => '&triangle;',\\n        '\u25b8' => '&blacktriangleright;',\\n        '\u25b9' => '&rtri;',\\n        '\u25bd' => '&bigtriangledown;',\\n        '\u25be' => '&blacktriangledown;',\\n        '\u25bf' => '&triangledown;',\\n        '\u25c2' => '&blacktriangleleft;',\\n        '\u25c3' => '&ltri;',\\n        '\u25ca' => '&lozenge;',\\n        '\u25cb' => '&cir;',\\n        '\u25ec' => '&tridot;',\\n        '\u25ef' => '&bigcirc;',\\n        '\u25f8' => '&ultri;',\\n        '\u25f9' => '&urtri;',\\n        '\u25fa' => '&lltri;',\\n        '\u25fb' => '&EmptySmallSquare;',\\n        '\u25fc' => '&FilledSmallSquare;',\\n        '\u2605' => '&starf;',\\n        '\u2606' => '&star;',\\n        '\u260e' => '&phone;',\\n        '\u2640' => '&female;',\\n        '\u2642' => '&male;',\\n        '\u2660' => '&spadesuit;',\\n        '\u2663' => '&clubs;',\\n        '\u2665' => '&hearts;',\\n        '\u2666' => '&diamondsuit;',\\n        '\u266a' => '&sung;',\\n        '\u266d' => '&flat;',\\n        '\u266e' => '&natur;',\\n        '\u266f' => '&sharp;',\\n        '\u2713' => '&check;',\\n        '\u2717' => '&cross;',\\n        '\u2720' => '&maltese;',\\n        '\u2736' => '&sext;',\\n        '\u2758' => '&VerticalSeparator;',\\n        '\u2772' => '&lbbrk;',\\n        '\u2773' => '&rbbrk;',\\n        '\u27c8' => '&bsolhsub;',\\n        '\u27c9' => '&suphsol;',\\n        '\u27e6' => '&LeftDoubleBracket;',\\n        '\u27e7' => '&RightDoubleBracket;',\\n        '\u27e8' => '&langle;',\\n        '\u27e9' => '&RightAngleBracket;',\\n        '\u27ea' => '&Lang;',\\n        '\u27eb' => '&Rang;',\\n        '\u27ec' => '&loang;',\\n        '\u27ed' => '&roang;',\\n        '\u27f5' => '&longleftarrow;',\\n        '\u27f6' => '&LongRightArrow;',\\n        '\u27f7' => '&LongLeftRightArrow;',\\n        '\u27f8' => '&xlArr;',\\n        '\u27f9' => '&DoubleLongRightArrow;',\\n        '\u27fa' => '&xhArr;',\\n        '\u27fc' => '&xmap;',\\n        '\u27ff' => '&dzigrarr;',\\n        '\u2902' => '&nvlArr;',\\n        '\u2903' => '&nvrArr;',\\n        '\u2904' => '&nvHarr;',\\n        '\u2905' => '&Map;',\\n        '\u290c' => '&lbarr;',\\n        '\u290d' => '&bkarow;',\\n        '\u290e' => '&lBarr;',\\n        '\u290f' => '&dbkarow;',\\n        '\u2910' => '&drbkarow;',\\n        '\u2911' => '&DDotrahd;',\\n        '\u2912' => '&UpArrowBar;',\\n        '\u2913' => '&DownArrowBar;',\\n        '\u2916' => '&Rarrtl;',\\n        '\u2919' => '&latail;',\\n        '\u291a' => '&ratail;',\\n        '\u291b' => '&lAtail;',\\n        '\u291c' => '&rAtail;',\\n        '\u291d' => '&larrfs;',\\n        '\u291e' => '&rarrfs;',\\n        '\u291f' => '&larrbfs;',\\n        '\u2920' => '&rarrbfs;',\\n        '\u2923' => '&nwarhk;',\\n        '\u2924' => '&nearhk;',\\n        '\u2925' => '&searhk;',\\n        '\u2926' => '&swarhk;',\\n        '\u2927' => '&nwnear;',\\n        '\u2928' => '&toea;',\\n        '\u2929' => '&seswar;',\\n        '\u292a' => '&swnwar;',\\n        '\u2933' => '&rarrc;',\\n        '\u2933\u0338' => '&nrarrc',\\n        '\u2935' => '&cudarrr;',\\n        '\u2936' => '&ldca;',\\n        '\u2937' => '&rdca;',\\n        '\u2938' => '&cudarrl;',\\n        '\u2939' => '&larrpl;',\\n        '\u293c' => '&curarrm;',\\n        '\u293d' => '&cularrp;',\\n        '\u2945' => '&rarrpl;',\\n        '\u2948' => '&harrcir;',\\n        '\u2949' => '&Uarrocir;',\\n        '\u294a' => '&lurdshar;',\\n        '\u294b' => '&ldrushar;',\\n        '\u294e' => '&LeftRightVector;',\\n        '\u294f' => '&RightUpDownVector;',\\n        '\u2950' => '&DownLeftRightVector;',\\n        '\u2951' => '&LeftUpDownVector;',\\n        '\u2952' => '&LeftVectorBar;',\\n        '\u2953' => '&RightVectorBar;',\\n        '\u2954' => '&RightUpVectorBar;',\\n        '\u2955' => '&RightDownVectorBar;',\\n        '\u2956' => '&DownLeftVectorBar;',\\n        '\u2957' => '&DownRightVectorBar;',\\n        '\u2958' => '&LeftUpVectorBar;',\\n        '\u2959' => '&LeftDownVectorBar;',\\n        '\u295a' => '&LeftTeeVector;',\\n        '\u295b' => '&RightTeeVector;',\\n        '\u295c' => '&RightUpTeeVector;',\\n        '\u295d' => '&RightDownTeeVector;',\\n        '\u295e' => '&DownLeftTeeVector;',\\n        '\u295f' => '&DownRightTeeVector;',\\n        '\u2960' => '&LeftUpTeeVector;',\\n        '\u2961' => '&LeftDownTeeVector;',\\n        '\u2962' => '&lHar;',\\n        '\u2963' => '&uHar;',\\n        '\u2964' => '&rHar;',\\n        '\u2965' => '&dHar;',\\n        '\u2966' => '&luruhar;',\\n        '\u2967' => '&ldrdhar;',\\n        '\u2968' => '&ruluhar;',\\n        '\u2969' => '&rdldhar;',\\n        '\u296a' => '&lharul;',\\n        '\u296b' => '&llhard;',\\n        '\u296c' => '&rharul;',\\n        '\u296d' => '&lrhard;',\\n        '\u296e' => '&udhar;',\\n        '\u296f' => '&ReverseUpEquilibrium;',\\n        '\u2970' => '&RoundImplies;',\\n        '\u2971' => '&erarr;',\\n        '\u2972' => '&simrarr;',\\n        '\u2973' => '&larrsim;',\\n        '\u2974' => '&rarrsim;',\\n        '\u2975' => '&rarrap;',\\n        '\u2976' => '&ltlarr;',\\n        '\u2978' => '&gtrarr;',\\n        '\u2979' => '&subrarr;',\\n        '\u297b' => '&suplarr;',\\n        '\u297c' => '&lfisht;',\\n        '\u297d' => '&rfisht;',\\n        '\u297e' => '&ufisht;',\\n        '\u297f' => '&dfisht;',\\n        '\u2985' => '&lopar;',\\n        '\u2986' => '&ropar;',\\n        '\u298b' => '&lbrke;',\\n        '\u298c' => '&rbrke;',\\n        '\u298d' => '&lbrkslu;',\\n        '\u298e' => '&rbrksld;',\\n        '\u298f' => '&lbrksld;',\\n        '\u2990' => '&rbrkslu;',\\n        '\u2991' => '&langd;',\\n        '\u2992' => '&rangd;',\\n        '\u2993' => '&lparlt;',\\n        '\u2994' => '&rpargt;',\\n        '\u2995' => '&gtlPar;',\\n        '\u2996' => '&ltrPar;',\\n        '\u299a' => '&vzigzag;',\\n        '\u299c' => '&vangrt;',\\n        '\u299d' => '&angrtvbd;',\\n        '\u29a4' => '&ange;',\\n        '\u29a5' => '&range;',\\n        '\u29a6' => '&dwangle;',\\n        '\u29a7' => '&uwangle;',\\n        '\u29a8' => '&angmsdaa;',\\n        '\u29a9' => '&angmsdab;',\\n        '\u29aa' => '&angmsdac;',\\n        '\u29ab' => '&angmsdad;',\\n        '\u29ac' => '&angmsdae;',\\n        '\u29ad' => '&angmsdaf;',\\n        '\u29ae' => '&angmsdag;',\\n        '\u29af' => '&angmsdah;',\\n        '\u29b0' => '&bemptyv;',\\n        '\u29b1' => '&demptyv;',\\n        '\u29b2' => '&cemptyv;',\\n        '\u29b3' => '&raemptyv;',\\n        '\u29b4' => '&laemptyv;',\\n        '\u29b5' => '&ohbar;',\\n        '\u29b6' => '&omid;',\\n        '\u29b7' => '&opar;',\\n        '\u29b9' => '&operp;',\\n        '\u29bb' => '&olcross;',\\n        '\u29bc' => '&odsold;',\\n        '\u29be' => '&olcir;',\\n        '\u29bf' => '&ofcir;',\\n        '\u29c0' => '&olt;',\\n        '\u29c1' => '&ogt;',\\n        '\u29c2' => '&cirscir;',\\n        '\u29c3' => '&cirE;',\\n        '\u29c4' => '&solb;',\\n        '\u29c5' => '&bsolb;',\\n        '\u29c9' => '&boxbox;',\\n        '\u29cd' => '&trisb;',\\n        '\u29ce' => '&rtriltri;',\\n        '\u29cf' => '&LeftTriangleBar;',\\n        '\u29cf\u0338' => '&NotLeftTriangleBar',\\n        '\u29d0' => '&RightTriangleBar;',\\n        '\u29d0\u0338' => '&NotRightTriangleBar',\\n        '\u29dc' => '&iinfin;',\\n        '\u29dd' => '&infintie;',\\n        '\u29de' => '&nvinfin;',\\n        '\u29e3' => '&eparsl;',\\n        '\u29e4' => '&smeparsl;',\\n        '\u29e5' => '&eqvparsl;',\\n        '\u29eb' => '&lozf;',\\n        '\u29f4' => '&RuleDelayed;',\\n        '\u29f6' => '&dsol;',\\n        '\u2a00' => '&xodot;',\\n        '\u2a01' => '&bigoplus;',\\n        '\u2a02' => '&bigotimes;',\\n        '\u2a04' => '&biguplus;',\\n        '\u2a06' => '&bigsqcup;',\\n        '\u2a0c' => '&iiiint;',\\n        '\u2a0d' => '&fpartint;',\\n        '\u2a10' => '&cirfnint;',\\n        '\u2a11' => '&awint;',\\n        '\u2a12' => '&rppolint;',\\n        '\u2a13' => '&scpolint;',\\n        '\u2a14' => '&npolint;',\\n        '\u2a15' => '&pointint;',\\n        '\u2a16' => '&quatint;',\\n        '\u2a17' => '&intlarhk;',\\n        '\u2a22' => '&pluscir;',\\n        '\u2a23' => '&plusacir;',\\n        '\u2a24' => '&simplus;',\\n        '\u2a25' => '&plusdu;',\\n        '\u2a26' => '&plussim;',\\n        '\u2a27' => '&plustwo;',\\n        '\u2a29' => '&mcomma;',\\n        '\u2a2a' => '&minusdu;',\\n        '\u2a2d' => '&loplus;',\\n        '\u2a2e' => '&roplus;',\\n        '\u2a2f' => '&Cross;',\\n        '\u2a30' => '&timesd;',\\n        '\u2a31' => '&timesbar;',\\n        '\u2a33' => '&smashp;',\\n        '\u2a34' => '&lotimes;',\\n        '\u2a35' => '&rotimes;',\\n        '\u2a36' => '&otimesas;',\\n        '\u2a37' => '&Otimes;',\\n        '\u2a38' => '&odiv;',\\n        '\u2a39' => '&triplus;',\\n        '\u2a3a' => '&triminus;',\\n        '\u2a3b' => '&tritime;',\\n        '\u2a3c' => '&iprod;',\\n        '\u2a3f' => '&amalg;',\\n        '\u2a40' => '&capdot;',\\n        '\u2a42' => '&ncup;',\\n        '\u2a43' => '&ncap;',\\n        '\u2a44' => '&capand;',\\n        '\u2a45' => '&cupor;',\\n        '\u2a46' => '&cupcap;',\\n        '\u2a47' => '&capcup;',\\n        '\u2a48' => '&cupbrcap;',\\n        '\u2a49' => '&capbrcup;',\\n        '\u2a4a' => '&cupcup;',\\n        '\u2a4b' => '&capcap;',\\n        '\u2a4c' => '&ccups;',\\n        '\u2a4d' => '&ccaps;',\\n        '\u2a50' => '&ccupssm;',\\n        '\u2a53' => '&And;',\\n        '\u2a54' => '&Or;',\\n        '\u2a55' => '&andand;',\\n        '\u2a56' => '&oror;',\\n        '\u2a57' => '&orslope;',\\n        '\u2a58' => '&andslope;',\\n        '\u2a5a' => '&andv;',\\n        '\u2a5b' => '&orv;',\\n        '\u2a5c' => '&andd;',\\n        '\u2a5d' => '&ord;',\\n        '\u2a5f' => '&wedbar;',\\n        '\u2a66' => '&sdote;',\\n        '\u2a6a' => '&simdot;',\\n        '\u2a6d' => '&congdot;',\\n        '\u2a6d\u0338' => '&ncongdot',\\n        '\u2a6e' => '&easter;',\\n        '\u2a6f' => '&apacir;',\\n        '\u2a70' => '&apE;',\\n        '\u2a70\u0338' => '&napE',\\n        '\u2a71' => '&eplus;',\\n        '\u2a72' => '&pluse;',\\n        '\u2a73' => '&Esim;',\\n        '\u2a74' => '&Colone;',\\n        '\u2a75' => '&Equal;',\\n        '\u2a77' => '&ddotseq;',\\n        '\u2a78' => '&equivDD;',\\n        '\u2a79' => '&ltcir;',\\n        '\u2a7a' => '&gtcir;',\\n        '\u2a7b' => '&ltquest;',\\n        '\u2a7c' => '&gtquest;',\\n        '\u2a7d' => '&les;',\\n        '\u2a7d\u0338' => '&nles',\\n        '\u2a7e' => '&ges;',\\n        '\u2a7e\u0338' => '&nges',\\n        '\u2a7f' => '&lesdot;',\\n        '\u2a80' => '&gesdot;',\\n        '\u2a81' => '&lesdoto;',\\n        '\u2a82' => '&gesdoto;',\\n        '\u2a83' => '&lesdotor;',\\n        '\u2a84' => '&gesdotol;',\\n        '\u2a85' => '&lap;',\\n        '\u2a86' => '&gap;',\\n        '\u2a87' => '&lne;',\\n        '\u2a88' => '&gne;',\\n        '\u2a89' => '&lnap;',\\n        '\u2a8a' => '&gnap;',\\n        '\u2a8b' => '&lesseqqgtr;',\\n        '\u2a8c' => '&gEl;',\\n        '\u2a8d' => '&lsime;',\\n        '\u2a8e' => '&gsime;',\\n        '\u2a8f' => '&lsimg;',\\n        '\u2a90' => '&gsiml;',\\n        '\u2a91' => '&lgE;',\\n        '\u2a92' => '&glE;',\\n        '\u2a93' => '&lesges;',\\n        '\u2a94' => '&gesles;',\\n        '\u2a95' => '&els;',\\n        '\u2a96' => '&egs;',\\n        '\u2a97' => '&elsdot;',\\n        '\u2a98' => '&egsdot;',\\n        '\u2a99' => '&el;',\\n        '\u2a9a' => '&eg;',\\n        '\u2a9d' => '&siml;',\\n        '\u2a9e' => '&simg;',\\n        '\u2a9f' => '&simlE;',\\n        '\u2aa0' => '&simgE;',\\n        '\u2aa1' => '&LessLess;',\\n        '\u2aa1\u0338' => '&NotNestedLessLess',\\n        '\u2aa2' => '&GreaterGreater;',\\n        '\u2aa2\u0338' => '&NotNestedGreaterGreater',\\n        '\u2aa4' => '&glj;',\\n        '\u2aa5' => '&gla;',\\n        '\u2aa6' => '&ltcc;',\\n        '\u2aa7' => '&gtcc;',\\n        '\u2aa8' => '&lescc;',\\n        '\u2aa9' => '&gescc;',\\n        '\u2aaa' => '&smt;',\\n        '\u2aab' => '&lat;',\\n        '\u2aac' => '&smte;',\\n        '\u2aac\ufe00' => '&smtes',\\n        '\u2aad' => '&late;',\\n        '\u2aad\ufe00' => '&lates',\\n        '\u2aae' => '&bumpE;',\\n        '\u2aaf' => '&preceq;',\\n        '\u2aaf\u0338' => '&NotPrecedesEqual',\\n        '\u2ab0' => '&SucceedsEqual;',\\n        '\u2ab0\u0338' => '&NotSucceedsEqual',\\n        '\u2ab3' => '&prE;',\\n        '\u2ab4' => '&scE;',\\n        '\u2ab5' => '&precneqq;',\\n        '\u2ab6' => '&scnE;',\\n        '\u2ab7' => '&precapprox;',\\n        '\u2ab8' => '&succapprox;',\\n        '\u2ab9' => '&precnapprox;',\\n        '\u2aba' => '&succnapprox;',\\n        '\u2abb' => '&Pr;',\\n        '\u2abc' => '&Sc;',\\n        '\u2abd' => '&subdot;',\\n        '\u2abe' => '&supdot;',\\n        '\u2abf' => '&subplus;',\\n        '\u2ac0' => '&supplus;',\\n        '\u2ac1' => '&submult;',\\n        '\u2ac2' => '&supmult;',\\n        '\u2ac3' => '&subedot;',\\n        '\u2ac4' => '&supedot;',\\n        '\u2ac5' => '&subE;',\\n        '\u2ac5\u0338' => '&nsubE',\\n        '\u2ac6' => '&supseteqq;',\\n        '\u2ac6\u0338' => '&nsupseteqq',\\n        '\u2ac7' => '&subsim;',\\n        '\u2ac8' => '&supsim;',\\n        '\u2acb' => '&subsetneqq;',\\n        '\u2acb\ufe00' => '&vsubnE',\\n        '\u2acc' => '&supnE;',\\n        '\u2acc\ufe00' => '&varsupsetneqq',\\n        '\u2acf' => '&csub;',\\n        '\u2ad0' => '&csup;',\\n        '\u2ad1' => '&csube;',\\n        '\u2ad2' => '&csupe;',\\n        '\u2ad3' => '&subsup;',\\n        '\u2ad4' => '&supsub;',\\n        '\u2ad5' => '&subsub;',\\n        '\u2ad6' => '&supsup;',\\n        '\u2ad7' => '&suphsub;',\\n        '\u2ad8' => '&supdsub;',\\n        '\u2ad9' => '&forkv;',\\n        '\u2ada' => '&topfork;',\\n        '\u2adb' => '&mlcp;',\\n        '\u2ae4' => '&Dashv;',\\n        '\u2ae6' => '&Vdashl;',\\n        '\u2ae7' => '&Barv;',\\n        '\u2ae8' => '&vBar;',\\n        '\u2ae9' => '&vBarv;',\\n        '\u2aeb' => '&Vbar;',\\n        '\u2aec' => '&Not;',\\n        '\u2aed' => '&bNot;',\\n        '\u2aee' => '&rnmid;',\\n        '\u2aef' => '&cirmid;',\\n        '\u2af0' => '&midcir;',\\n        '\u2af1' => '&topcir;',\\n        '\u2af2' => '&nhpar;',\\n        '\u2af3' => '&parsim;',\\n        '\u2afd\ufe00' => '&varsupsetneqq',\\n        '\ufb00' => '&fflig;',\\n        '\ufb01' => '&filig;',\\n        '\ufb02' => '&fllig;',\\n        '\ufb03' => '&ffilig;',\\n        '\ufb04' => '&ffllig;',\\n        '\ud835\udc9c' => '&Ascr;',\\n        '\ud835\udc9e' => '&Cscr;',\\n        '\ud835\udc9f' => '&Dscr;',\\n        '\ud835\udca2' => '&Gscr;',\\n        '\ud835\udca5' => '&Jscr;',\\n        '\ud835\udca6' => '&Kscr;',\\n        '\ud835\udca9' => '&Nscr;',\\n        '\ud835\udcaa' => '&Oscr;',\\n        '\ud835\udcab' => '&Pscr;',\\n        '\ud835\udcac' => '&Qscr;',\\n        '\ud835\udcae' => '&Sscr;',\\n        '\ud835\udcaf' => '&Tscr;',\\n        '\ud835\udcb0' => '&Uscr;',\\n        '\ud835\udcb1' => '&Vscr;',\\n        '\ud835\udcb2' => '&Wscr;',\\n        '\ud835\udcb3' => '&Xscr;',\\n        '\ud835\udcb4' => '&Yscr;',\\n        '\ud835\udcb5' => '&Zscr;',\\n        '\ud835\udcb6' => '&ascr;',\\n        '\ud835\udcb7' => '&bscr;',\\n        '\ud835\udcb8' => '&cscr;',\\n        '\ud835\udcb9' => '&dscr;',\\n        '\ud835\udcbb' => '&fscr;',\\n        '\ud835\udcbd' => '&hscr;',\\n        '\ud835\udcbe' => '&iscr;',\\n        '\ud835\udcbf' => '&jscr;',\\n        '\ud835\udcc0' => '&kscr;',\\n        '\ud835\udcc1' => '&lscr;',\\n        '\ud835\udcc2' => '&mscr;',\\n        '\ud835\udcc3' => '&nscr;',\\n        '\ud835\udcc5' => '&pscr;',\\n        '\ud835\udcc6' => '&qscr;',\\n        '\ud835\udcc7' => '&rscr;',\\n        '\ud835\udcc8' => '&sscr;',\\n        '\ud835\udcc9' => '&tscr;',\\n        '\ud835\udcca' => '&uscr;',\\n        '\ud835\udccb' => '&vscr;',\\n        '\ud835\udccc' => '&wscr;',\\n        '\ud835\udccd' => '&xscr;',\\n        '\ud835\udcce' => '&yscr;',\\n        '\ud835\udccf' => '&zscr;',\\n        '\ud835\udd04' => '&Afr;',\\n        '\ud835\udd05' => '&Bfr;',\\n        '\ud835\udd07' => '&Dfr;',\\n        '\ud835\udd08' => '&Efr;',\\n        '\ud835\udd09' => '&Ffr;',\\n        '\ud835\udd0a' => '&Gfr;',\\n        '\ud835\udd0d' => '&Jfr;',\\n        '\ud835\udd0e' => '&Kfr;',\\n        '\ud835\udd0f' => '&Lfr;',\\n        '\ud835\udd10' => '&Mfr;',\\n        '\ud835\udd11' => '&Nfr;',\\n        '\ud835\udd12' => '&Ofr;',\\n        '\ud835\udd13' => '&Pfr;',\\n        '\ud835\udd14' => '&Qfr;',\\n        '\ud835\udd16' => '&Sfr;',\\n        '\ud835\udd17' => '&Tfr;',\\n        '\ud835\udd18' => '&Ufr;',\\n        '\ud835\udd19' => '&Vfr;',\\n        '\ud835\udd1a' => '&Wfr;',\\n        '\ud835\udd1b' => '&Xfr;',\\n        '\ud835\udd1c' => '&Yfr;',\\n        '\ud835\udd1e' => '&afr;',\\n        '\ud835\udd1f' => '&bfr;',\\n        '\ud835\udd20' => '&cfr;',\\n        '\ud835\udd21' => '&dfr;',\\n        '\ud835\udd22' => '&efr;',\\n        '\ud835\udd23' => '&ffr;',\\n        '\ud835\udd24' => '&gfr;',\\n        '\ud835\udd25' => '&hfr;',\\n        '\ud835\udd26' => '&ifr;',\\n        '\ud835\udd27' => '&jfr;',\\n        '\ud835\udd28' => '&kfr;',\\n        '\ud835\udd29' => '&lfr;',\\n        '\ud835\udd2a' => '&mfr;',\\n        '\ud835\udd2b' => '&nfr;',\\n        '\ud835\udd2c' => '&ofr;',\\n        '\ud835\udd2d' => '&pfr;',\\n        '\ud835\udd2e' => '&qfr;',\\n        '\ud835\udd2f' => '&rfr;',\\n        '\ud835\udd30' => '&sfr;',\\n        '\ud835\udd31' => '&tfr;',\\n        '\ud835\udd32' => '&ufr;',\\n        '\ud835\udd33' => '&vfr;',\\n        '\ud835\udd34' => '&wfr;',\\n        '\ud835\udd35' => '&xfr;',\\n        '\ud835\udd36' => '&yfr;',\\n        '\ud835\udd37' => '&zfr;',\\n        '\ud835\udd38' => '&Aopf;',\\n        '\ud835\udd39' => '&Bopf;',\\n        '\ud835\udd3b' => '&Dopf;',\\n        '\ud835\udd3c' => '&Eopf;',\\n        '\ud835\udd3d' => '&Fopf;',\\n        '\ud835\udd3e' => '&Gopf;',\\n        '\ud835\udd40' => '&Iopf;',\\n        '\ud835\udd41' => '&Jopf;',\\n        '\ud835\udd42' => '&Kopf;',\\n        '\ud835\udd43' => '&Lopf;',\\n        '\ud835\udd44' => '&Mopf;',\\n        '\ud835\udd46' => '&Oopf;',\\n        '\ud835\udd4a' => '&Sopf;',\\n        '\ud835\udd4b' => '&Topf;',\\n        '\ud835\udd4c' => '&Uopf;',\\n        '\ud835\udd4d' => '&Vopf;',\\n        '\ud835\udd4e' => '&Wopf;',\\n        '\ud835\udd4f' => '&Xopf;',\\n        '\ud835\udd50' => '&Yopf;',\\n        '\ud835\udd52' => '&aopf;',\\n        '\ud835\udd53' => '&bopf;',\\n        '\ud835\udd54' => '&copf;',\\n        '\ud835\udd55' => '&dopf;',\\n        '\ud835\udd56' => '&eopf;',\\n        '\ud835\udd57' => '&fopf;',\\n        '\ud835\udd58' => '&gopf;',\\n        '\ud835\udd59' => '&hopf;',\\n        '\ud835\udd5a' => '&iopf;',\\n        '\ud835\udd5b' => '&jopf;',\\n        '\ud835\udd5c' => '&kopf;',\\n        '\ud835\udd5d' => '&lopf;',\\n        '\ud835\udd5e' => '&mopf;',\\n        '\ud835\udd5f' => '&nopf;',\\n        '\ud835\udd60' => '&oopf;',\\n        '\ud835\udd61' => '&popf;',\\n        '\ud835\udd62' => '&qopf;',\\n        '\ud835\udd63' => '&ropf;',\\n        '\ud835\udd64' => '&sopf;',\\n        '\ud835\udd65' => '&topf;',\\n        '\ud835\udd66' => '&uopf;',\\n        '\ud835\udd67' => '&vopf;',\\n        '\ud835\udd68' => '&wopf;',\\n        '\ud835\udd69' => '&xopf;',\\n        '\ud835\udd6a' => '&yopf;',\\n        '\ud835\udd6b' => '&zopf;',\\n    );\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Serializer\/RulesInterface.php\",\"ext\":\"php\",\"size\":2615,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * @file\\n * The interface definition for Rules to generate output.\\n *\/\\n\\nnamespace Masterminds\\\\HTML5\\\\Serializer;\\n\\n\/**\\n * To create a new rule set for writing output the RulesInterface needs to be implemented.\\n * The resulting class can be specified in the options with the key of rules.\\n *\\n * For an example implementation see Serializer\\\\OutputRules.\\n *\/\\ninterface RulesInterface\\n{\\n    \/**\\n     * The class constructor.\\n     *\\n     * Note, before the rules can be used a traverser must be registered.\\n     *\\n     * @param mixed $output  The output stream to write output to.\\n     * @param array $options An array of options.\\n     *\/\\n    public function __construct($output, $options = array());\\n\\n    \/**\\n     * Register the traverser used in but the rules.\\n     *\\n     * Note, only one traverser can be used by the rules.\\n     *\\n     * @param Traverser $traverser The traverser used in the rules.\\n     *\\n     * @return RulesInterface $this for the current object.\\n     *\/\\n    public function setTraverser(Traverser $traverser);\\n\\n    \/**\\n     * Write a document element (\\\\DOMDocument).\\n     *\\n     * Instead of returning the result write it to the output stream ($output)\\n     * that was passed into the constructor.\\n     *\\n     * @param \\\\DOMDocument $dom\\n     *\/\\n    public function document($dom);\\n\\n    \/**\\n     * Write an element.\\n     *\\n     * Instead of returning the result write it to the output stream ($output)\\n     * that was passed into the constructor.\\n     *\\n     * @param mixed $ele\\n     *\/\\n    public function element($ele);\\n\\n    \/**\\n     * Write a text node.\\n     *\\n     * Instead of returning the result write it to the output stream ($output)\\n     * that was passed into the constructor.\\n     *\\n     * @param mixed $ele\\n     *\/\\n    public function text($ele);\\n\\n    \/**\\n     * Write a CDATA node.\\n     *\\n     * Instead of returning the result write it to the output stream ($output)\\n     * that was passed into the constructor.\\n     *\\n     * @param mixed $ele\\n     *\/\\n    public function cdata($ele);\\n\\n    \/**\\n     * Write a comment node.\\n     *\\n     * Instead of returning the result write it to the output stream ($output)\\n     * that was passed into the constructor.\\n     *\\n     * @param mixed $ele\\n     *\/\\n    public function comment($ele);\\n\\n    \/**\\n     * Write a processor instruction.\\n     *\\n     * To learn about processor instructions see InstructionProcessor\\n     *\\n     * Instead of returning the result write it to the output stream ($output)\\n     * that was passed into the constructor.\\n     *\\n     * @param mixed $ele\\n     *\/\\n    public function processorInstruction($ele);\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Serializer\/Traverser.php\",\"ext\":\"php\",\"size\":4301,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Serializer;\\n\\n\/**\\n * Traverser for walking a DOM tree.\\n *\\n * This is a concrete traverser designed to convert a DOM tree into an\\n * HTML5 document. It is not intended to be a generic DOMTreeWalker\\n * implementation.\\n *\\n * @see http:\/\/www.w3.org\/TR\/2012\/CR-html5-20121217\/syntax.html#serializing-html-fragments\\n *\/\\nclass Traverser\\n{\\n    \/**\\n     * Namespaces that should be treated as \\\"local\\\" to HTML5.\\n     *\/\\n    protected static $local_ns = array(\\n        'http:\/\/www.w3.org\/1999\/xhtml' => 'html',\\n        'http:\/\/www.w3.org\/1998\/Math\/MathML' => 'math',\\n        'http:\/\/www.w3.org\/2000\/svg' => 'svg',\\n    );\\n\\n    protected $dom;\\n\\n    protected $options;\\n\\n    protected $encode = false;\\n\\n    protected $rules;\\n\\n    protected $out;\\n\\n    \/**\\n     * Create a traverser.\\n     *\\n     * @param \\\\DOMNode|\\\\DOMNodeList $dom     The document or node to traverse.\\n     * @param resource              $out     A stream that allows writing. The traverser will output into this\\n     *                                       stream.\\n     * @param array                 $options An array of options for the traverser as key\/value pairs. These include:\\n     *                                       - encode_entities: A bool to specify if full encding should happen for all named\\n     *                                       charachter references. Defaults to false which escapes &'<>\\\".\\n     *                                       - output_rules: The path to the class handling the output rules.\\n     *\/\\n    public function __construct($dom, $out, RulesInterface $rules, $options = array())\\n    {\\n        $this->dom = $dom;\\n        $this->out = $out;\\n        $this->rules = $rules;\\n        $this->options = $options;\\n\\n        $this->rules->setTraverser($this);\\n    }\\n\\n    \/**\\n     * Tell the traverser to walk the DOM.\\n     *\\n     * @return resource $out Returns the output stream.\\n     *\/\\n    public function walk()\\n    {\\n        if ($this->dom instanceof \\\\DOMDocument) {\\n            $this->rules->document($this->dom);\\n        } elseif ($this->dom instanceof \\\\DOMDocumentFragment) {\\n            \/\/ Document fragments are a special case. Only the children need to\\n            \/\/ be serialized.\\n            if ($this->dom->hasChildNodes()) {\\n                $this->children($this->dom->childNodes);\\n            }\\n        }        \/\/ If NodeList, loop\\n        elseif ($this->dom instanceof \\\\DOMNodeList) {\\n            \/\/ If this is a NodeList of DOMDocuments this will not work.\\n            $this->children($this->dom);\\n        }         \/\/ Else assume this is a DOMNode-like datastructure.\\n        else {\\n            $this->node($this->dom);\\n        }\\n\\n        return $this->out;\\n    }\\n\\n    \/**\\n     * Process a node in the DOM.\\n     *\\n     * @param mixed $node A node implementing \\\\DOMNode.\\n     *\/\\n    public function node($node)\\n    {\\n        \/\/ A listing of types is at http:\/\/php.net\/manual\/en\/dom.constants.php\\n        switch ($node->nodeType) {\\n            case XML_ELEMENT_NODE:\\n                $this->rules->element($node);\\n                break;\\n            case XML_TEXT_NODE:\\n                $this->rules->text($node);\\n                break;\\n            case XML_CDATA_SECTION_NODE:\\n                $this->rules->cdata($node);\\n                break;\\n            case XML_PI_NODE:\\n                $this->rules->processorInstruction($node);\\n                break;\\n            case XML_COMMENT_NODE:\\n                $this->rules->comment($node);\\n                break;\\n            \/\/ Currently we don't support embedding DTDs.\\n            default:\\n                \/\/print '<!-- Skipped -->';\\n                break;\\n        }\\n    }\\n\\n    \/**\\n     * Walk through all the nodes on a node list.\\n     *\\n     * @param \\\\DOMNodeList $nl A list of child elements to walk through.\\n     *\/\\n    public function children($nl)\\n    {\\n        foreach ($nl as $node) {\\n            $this->node($node);\\n        }\\n    }\\n\\n    \/**\\n     * Is an element local?\\n     *\\n     * @param mixed $ele An element that implement \\\\DOMNode.\\n     *\\n     * @return bool true if local and false otherwise.\\n     *\/\\n    public function isLocalElement($ele)\\n    {\\n        $uri = $ele->namespaceURI;\\n        if (empty($uri)) {\\n            return false;\\n        }\\n\\n        return isset(static::$local_ns[$uri]);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/InstructionProcessor.php\",\"ext\":\"php\",\"size\":1780,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * A handler for processor instructions.\\n *\/\\n\\nnamespace Masterminds\\\\HTML5;\\n\\n\/**\\n * Provide an processor to handle embedded instructions.\\n *\\n * XML defines a mechanism for inserting instructions (like PHP) into a\\n * document. These are called \\\"Processor Instructions.\\\" The HTML5 parser\\n * provides an opportunity to handle these processor instructions during\\n * the tree-building phase (before the DOM is constructed), which makes\\n * it possible to alter the document as it is being created.\\n *\\n * One could, for example, use this mechanism to execute well-formed PHP\\n * code embedded inside of an HTML5 document.\\n *\/\\ninterface InstructionProcessor\\n{\\n    \/**\\n     * Process an individual processing instruction.\\n     *\\n     * The process() function is responsible for doing the following:\\n     * - Determining whether $name is an instruction type it can handle.\\n     * - Determining what to do with the data passed in.\\n     * - Making any subsequent modifications to the DOM by modifying the\\n     * DOMElement or its attached DOM tree.\\n     *\\n     * @param \\\\DOMElement $element The parent element for the current processing instruction.\\n     * @param string      $name    The instruction's name. E.g. `&lt;?php` has the name `php`.\\n     * @param string      $data    All of the data between the opening and closing PI marks.\\n     *\\n     * @return \\\\DOMElement The element that should be considered \\\"Current\\\". This may just be\\n     *                     the element passed in, but if the processor added more elements,\\n     *                     it may choose to reset the current element to one of the elements\\n     *                     it created. (When in doubt, return the element passed in.)\\n     *\/\\n    public function process(\\\\DOMElement $element, $name, $data);\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Elements.php\",\"ext\":\"php\",\"size\":20545,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Provide general element functions.\\n *\/\\n\\nnamespace Masterminds\\\\HTML5;\\n\\n\/**\\n * This class provides general information about HTML5 elements,\\n * including syntactic and semantic issues.\\n * Parsers and serializers can\\n * use this class as a reference point for information about the rules\\n * of various HTML5 elements.\\n *\\n * @todo consider using a bitmask table lookup. There is enough overlap in\\n *       naming that this could significantly shrink the size and maybe make it\\n *       faster. See the Go teams implementation at https:\/\/code.google.com\/p\/go\/source\/browse\/html\/atom.\\n *\/\\nclass Elements\\n{\\n    \/**\\n     * Indicates an element is described in the specification.\\n     *\/\\n    const KNOWN_ELEMENT = 1;\\n\\n    \/\/ From section 8.1.2: \\\"script\\\", \\\"style\\\"\\n    \/\/ From 8.2.5.4.7 (\\\"in body\\\" insertion mode): \\\"noembed\\\"\\n    \/\/ From 8.4 \\\"style\\\", \\\"xmp\\\", \\\"iframe\\\", \\\"noembed\\\", \\\"noframes\\\"\\n    \/**\\n     * Indicates the contained text should be processed as raw text.\\n     *\/\\n    const TEXT_RAW = 2;\\n\\n    \/\/ From section 8.1.2: \\\"textarea\\\", \\\"title\\\"\\n    \/**\\n     * Indicates the contained text should be processed as RCDATA.\\n     *\/\\n    const TEXT_RCDATA = 4;\\n\\n    \/**\\n     * Indicates the tag cannot have content.\\n     *\/\\n    const VOID_TAG = 8;\\n\\n    \/\/ \\\"address\\\", \\\"article\\\", \\\"aside\\\", \\\"blockquote\\\", \\\"center\\\", \\\"details\\\", \\\"dialog\\\", \\\"dir\\\", \\\"div\\\", \\\"dl\\\",\\n    \/\/ \\\"fieldset\\\", \\\"figcaption\\\", \\\"figure\\\", \\\"footer\\\", \\\"header\\\", \\\"hgroup\\\", \\\"menu\\\",\\n    \/\/ \\\"nav\\\", \\\"ol\\\", \\\"p\\\", \\\"section\\\", \\\"summary\\\", \\\"ul\\\"\\n    \/\/ \\\"h1\\\", \\\"h2\\\", \\\"h3\\\", \\\"h4\\\", \\\"h5\\\", \\\"h6\\\"\\n    \/\/ \\\"pre\\\", \\\"listing\\\"\\n    \/\/ \\\"form\\\"\\n    \/\/ \\\"plaintext\\\"\\n    \/**\\n     * Indicates that if a previous event is for a P tag, that element\\n     * should be considered closed.\\n     *\/\\n    const AUTOCLOSE_P = 16;\\n\\n    \/**\\n     * Indicates that the text inside is plaintext (pre).\\n     *\/\\n    const TEXT_PLAINTEXT = 32;\\n\\n    \/\/ See https:\/\/developer.mozilla.org\/en-US\/docs\/HTML\/Block-level_elements\\n    \/**\\n     * Indicates that the tag is a block.\\n     *\/\\n    const BLOCK_TAG = 64;\\n\\n    \/**\\n     * Indicates that the tag allows only inline elements as child nodes.\\n     *\/\\n    const BLOCK_ONLY_INLINE = 128;\\n\\n    \/**\\n     * Elements with optional end tags that cause auto-closing of previous and parent tags,\\n     * as example most of the table related tags, see https:\/\/www.w3.org\/TR\/html401\/struct\/tables.html\\n     * Structure is as follows:\\n     * TAG-NAME => [PARENT-TAG-NAME-TO-CLOSE1, PARENT-TAG-NAME-TO-CLOSE2, ...].\\n     *\\n     * Order is important, after auto-closing one parent with might have to close also their parent.\\n     *\\n     * @var array<string, string[]>\\n     *\/\\n    public static $optionalEndElementsParentsToClose = array(\\n        'tr' => array('td', 'tr'),\\n        'td' => array('td', 'th'),\\n        'th' => array('td', 'th'),\\n        'tfoot' => array('td', 'th', 'tr', 'tbody', 'thead'),\\n        'tbody' => array('td', 'th', 'tr', 'thead'),\\n    );\\n\\n    \/**\\n     * The HTML5 elements as defined in http:\/\/dev.w3.org\/html5\/markup\/elements.html.\\n     *\\n     * @var array\\n     *\/\\n    public static $html5 = array(\\n        'a' => 1,\\n        'abbr' => 1,\\n        'address' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'area' => 9, \/\/ NORMAL | VOID_TAG\\n        'article' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'aside' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'audio' => 1, \/\/ NORMAL\\n        'b' => 1,\\n        'base' => 9, \/\/ NORMAL | VOID_TAG\\n        'bdi' => 1,\\n        'bdo' => 1,\\n        'blockquote' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'body' => 1,\\n        'br' => 9, \/\/ NORMAL | VOID_TAG\\n        'button' => 1,\\n        'canvas' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'caption' => 1,\\n        'cite' => 1,\\n        'code' => 1,\\n        'col' => 9, \/\/ NORMAL | VOID_TAG\\n        'colgroup' => 1,\\n        'command' => 9, \/\/ NORMAL | VOID_TAG\\n                        \/\/ \\\"data\\\" => 1, \/\/ This is highly experimental and only part of the whatwg spec (not w3c). See https:\/\/developer.mozilla.org\/en-US\/docs\/HTML\/Element\/data\\n        'datalist' => 1,\\n        'dd' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'del' => 1,\\n        'details' => 17, \/\/ NORMAL | AUTOCLOSE_P,\\n        'dfn' => 1,\\n        'dialog' => 17, \/\/ NORMAL | AUTOCLOSE_P,\\n        'div' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'dl' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'dt' => 1,\\n        'em' => 1,\\n        'embed' => 9, \/\/ NORMAL | VOID_TAG\\n        'fieldset' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'figcaption' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'figure' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'footer' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'form' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'h1' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'h2' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'h3' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'h4' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'h5' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'h6' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'head' => 1,\\n        'header' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'hgroup' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'hr' => 73, \/\/ NORMAL | VOID_TAG\\n        'html' => 1,\\n        'i' => 1,\\n        'iframe' => 3, \/\/ NORMAL | TEXT_RAW\\n        'img' => 9, \/\/ NORMAL | VOID_TAG\\n        'input' => 9, \/\/ NORMAL | VOID_TAG\\n        'kbd' => 1,\\n        'ins' => 1,\\n        'keygen' => 9, \/\/ NORMAL | VOID_TAG\\n        'label' => 1,\\n        'legend' => 1,\\n        'li' => 1,\\n        'link' => 9, \/\/ NORMAL | VOID_TAG\\n        'map' => 1,\\n        'mark' => 1,\\n        'menu' => 17, \/\/ NORMAL | AUTOCLOSE_P,\\n        'meta' => 9, \/\/ NORMAL | VOID_TAG\\n        'meter' => 1,\\n        'nav' => 17, \/\/ NORMAL | AUTOCLOSE_P,\\n        'noscript' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'object' => 1,\\n        'ol' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'optgroup' => 1,\\n        'option' => 1,\\n        'output' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'p' => 209, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG | BLOCK_ONLY_INLINE\\n        'param' => 9, \/\/ NORMAL | VOID_TAG\\n        'pre' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'progress' => 1,\\n        'q' => 1,\\n        'rp' => 1,\\n        'rt' => 1,\\n        'ruby' => 1,\\n        's' => 1,\\n        'samp' => 1,\\n        'script' => 3, \/\/ NORMAL | TEXT_RAW\\n        'section' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'select' => 1,\\n        'small' => 1,\\n        'source' => 9, \/\/ NORMAL | VOID_TAG\\n        'span' => 1,\\n        'strong' => 1,\\n        'style' => 3, \/\/ NORMAL | TEXT_RAW\\n        'sub' => 1,\\n        'summary' => 17, \/\/ NORMAL | AUTOCLOSE_P,\\n        'sup' => 1,\\n        'table' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'tbody' => 1,\\n        'td' => 1,\\n        'textarea' => 5, \/\/ NORMAL | TEXT_RCDATA\\n        'tfoot' => 65, \/\/ NORMAL | BLOCK_TAG\\n        'th' => 1,\\n        'thead' => 1,\\n        'time' => 1,\\n        'title' => 5, \/\/ NORMAL | TEXT_RCDATA\\n        'tr' => 1,\\n        'track' => 9, \/\/ NORMAL | VOID_TAG\\n        'u' => 1,\\n        'ul' => 81, \/\/ NORMAL | AUTOCLOSE_P | BLOCK_TAG\\n        'var' => 1,\\n        'video' => 1,\\n        'wbr' => 9, \/\/ NORMAL | VOID_TAG\\n\\n        \/\/ Legacy?\\n        'basefont' => 8, \/\/ VOID_TAG\\n        'bgsound' => 8, \/\/ VOID_TAG\\n        'noframes' => 2, \/\/ RAW_TEXT\\n        'frame' => 9, \/\/ NORMAL | VOID_TAG\\n        'frameset' => 1,\\n        'center' => 16,\\n        'dir' => 16,\\n        'listing' => 16, \/\/ AUTOCLOSE_P\\n        'plaintext' => 48, \/\/ AUTOCLOSE_P | TEXT_PLAINTEXT\\n        'applet' => 0,\\n        'marquee' => 0,\\n        'isindex' => 8, \/\/ VOID_TAG\\n        'xmp' => 20, \/\/ AUTOCLOSE_P | VOID_TAG | RAW_TEXT\\n        'noembed' => 2, \/\/ RAW_TEXT\\n        );\\n\\n    \/**\\n     * The MathML elements.\\n     * See http:\/\/www.w3.org\/wiki\/MathML\/Elements.\\n     *\\n     * In our case we are only concerned with presentation MathML and not content\\n     * MathML. There is a nice list of this subset at https:\/\/developer.mozilla.org\/en-US\/docs\/MathML\/Element.\\n     *\\n     * @var array\\n     *\/\\n    public static $mathml = array(\\n        'maction' => 1,\\n        'maligngroup' => 1,\\n        'malignmark' => 1,\\n        'math' => 1,\\n        'menclose' => 1,\\n        'merror' => 1,\\n        'mfenced' => 1,\\n        'mfrac' => 1,\\n        'mglyph' => 1,\\n        'mi' => 1,\\n        'mlabeledtr' => 1,\\n        'mlongdiv' => 1,\\n        'mmultiscripts' => 1,\\n        'mn' => 1,\\n        'mo' => 1,\\n        'mover' => 1,\\n        'mpadded' => 1,\\n        'mphantom' => 1,\\n        'mroot' => 1,\\n        'mrow' => 1,\\n        'ms' => 1,\\n        'mscarries' => 1,\\n        'mscarry' => 1,\\n        'msgroup' => 1,\\n        'msline' => 1,\\n        'mspace' => 1,\\n        'msqrt' => 1,\\n        'msrow' => 1,\\n        'mstack' => 1,\\n        'mstyle' => 1,\\n        'msub' => 1,\\n        'msup' => 1,\\n        'msubsup' => 1,\\n        'mtable' => 1,\\n        'mtd' => 1,\\n        'mtext' => 1,\\n        'mtr' => 1,\\n        'munder' => 1,\\n        'munderover' => 1,\\n    );\\n\\n    \/**\\n     * The svg elements.\\n     *\\n     * The Mozilla documentation has a good list at https:\/\/developer.mozilla.org\/en-US\/docs\/SVG\/Element.\\n     * The w3c list appears to be lacking in some areas like filter effect elements.\\n     * That list can be found at http:\/\/www.w3.org\/wiki\/SVG\/Elements.\\n     *\\n     * Note, FireFox appears to do a better job rendering filter effects than chrome.\\n     * While they are in the spec I'm not sure how widely implemented they are.\\n     *\\n     * @var array\\n     *\/\\n    public static $svg = array(\\n        'a' => 1,\\n        'altGlyph' => 1,\\n        'altGlyphDef' => 1,\\n        'altGlyphItem' => 1,\\n        'animate' => 1,\\n        'animateColor' => 1,\\n        'animateMotion' => 1,\\n        'animateTransform' => 1,\\n        'circle' => 1,\\n        'clipPath' => 1,\\n        'color-profile' => 1,\\n        'cursor' => 1,\\n        'defs' => 1,\\n        'desc' => 1,\\n        'ellipse' => 1,\\n        'feBlend' => 1,\\n        'feColorMatrix' => 1,\\n        'feComponentTransfer' => 1,\\n        'feComposite' => 1,\\n        'feConvolveMatrix' => 1,\\n        'feDiffuseLighting' => 1,\\n        'feDisplacementMap' => 1,\\n        'feDistantLight' => 1,\\n        'feFlood' => 1,\\n        'feFuncA' => 1,\\n        'feFuncB' => 1,\\n        'feFuncG' => 1,\\n        'feFuncR' => 1,\\n        'feGaussianBlur' => 1,\\n        'feImage' => 1,\\n        'feMerge' => 1,\\n        'feMergeNode' => 1,\\n        'feMorphology' => 1,\\n        'feOffset' => 1,\\n        'fePointLight' => 1,\\n        'feSpecularLighting' => 1,\\n        'feSpotLight' => 1,\\n        'feTile' => 1,\\n        'feTurbulence' => 1,\\n        'filter' => 1,\\n        'font' => 1,\\n        'font-face' => 1,\\n        'font-face-format' => 1,\\n        'font-face-name' => 1,\\n        'font-face-src' => 1,\\n        'font-face-uri' => 1,\\n        'foreignObject' => 1,\\n        'g' => 1,\\n        'glyph' => 1,\\n        'glyphRef' => 1,\\n        'hkern' => 1,\\n        'image' => 1,\\n        'line' => 1,\\n        'linearGradient' => 1,\\n        'marker' => 1,\\n        'mask' => 1,\\n        'metadata' => 1,\\n        'missing-glyph' => 1,\\n        'mpath' => 1,\\n        'path' => 1,\\n        'pattern' => 1,\\n        'polygon' => 1,\\n        'polyline' => 1,\\n        'radialGradient' => 1,\\n        'rect' => 1,\\n        'script' => 3, \/\/ NORMAL | RAW_TEXT\\n        'set' => 1,\\n        'stop' => 1,\\n        'style' => 3, \/\/ NORMAL | RAW_TEXT\\n        'svg' => 1,\\n        'switch' => 1,\\n        'symbol' => 1,\\n        'text' => 1,\\n        'textPath' => 1,\\n        'title' => 1,\\n        'tref' => 1,\\n        'tspan' => 1,\\n        'use' => 1,\\n        'view' => 1,\\n        'vkern' => 1,\\n    );\\n\\n    \/**\\n     * Some attributes in SVG are case sensitive.\\n     *\\n     * This map contains key\/value pairs with the key as the lowercase attribute\\n     * name and the value with the correct casing.\\n     *\/\\n    public static $svgCaseSensitiveAttributeMap = array(\\n        'attributename' => 'attributeName',\\n        'attributetype' => 'attributeType',\\n        'basefrequency' => 'baseFrequency',\\n        'baseprofile' => 'baseProfile',\\n        'calcmode' => 'calcMode',\\n        'clippathunits' => 'clipPathUnits',\\n        'contentscripttype' => 'contentScriptType',\\n        'contentstyletype' => 'contentStyleType',\\n        'diffuseconstant' => 'diffuseConstant',\\n        'edgemode' => 'edgeMode',\\n        'externalresourcesrequired' => 'externalResourcesRequired',\\n        'filterres' => 'filterRes',\\n        'filterunits' => 'filterUnits',\\n        'glyphref' => 'glyphRef',\\n        'gradienttransform' => 'gradientTransform',\\n        'gradientunits' => 'gradientUnits',\\n        'kernelmatrix' => 'kernelMatrix',\\n        'kernelunitlength' => 'kernelUnitLength',\\n        'keypoints' => 'keyPoints',\\n        'keysplines' => 'keySplines',\\n        'keytimes' => 'keyTimes',\\n        'lengthadjust' => 'lengthAdjust',\\n        'limitingconeangle' => 'limitingConeAngle',\\n        'markerheight' => 'markerHeight',\\n        'markerunits' => 'markerUnits',\\n        'markerwidth' => 'markerWidth',\\n        'maskcontentunits' => 'maskContentUnits',\\n        'maskunits' => 'maskUnits',\\n        'numoctaves' => 'numOctaves',\\n        'pathlength' => 'pathLength',\\n        'patterncontentunits' => 'patternContentUnits',\\n        'patterntransform' => 'patternTransform',\\n        'patternunits' => 'patternUnits',\\n        'pointsatx' => 'pointsAtX',\\n        'pointsaty' => 'pointsAtY',\\n        'pointsatz' => 'pointsAtZ',\\n        'preservealpha' => 'preserveAlpha',\\n        'preserveaspectratio' => 'preserveAspectRatio',\\n        'primitiveunits' => 'primitiveUnits',\\n        'refx' => 'refX',\\n        'refy' => 'refY',\\n        'repeatcount' => 'repeatCount',\\n        'repeatdur' => 'repeatDur',\\n        'requiredextensions' => 'requiredExtensions',\\n        'requiredfeatures' => 'requiredFeatures',\\n        'specularconstant' => 'specularConstant',\\n        'specularexponent' => 'specularExponent',\\n        'spreadmethod' => 'spreadMethod',\\n        'startoffset' => 'startOffset',\\n        'stddeviation' => 'stdDeviation',\\n        'stitchtiles' => 'stitchTiles',\\n        'surfacescale' => 'surfaceScale',\\n        'systemlanguage' => 'systemLanguage',\\n        'tablevalues' => 'tableValues',\\n        'targetx' => 'targetX',\\n        'targety' => 'targetY',\\n        'textlength' => 'textLength',\\n        'viewbox' => 'viewBox',\\n        'viewtarget' => 'viewTarget',\\n        'xchannelselector' => 'xChannelSelector',\\n        'ychannelselector' => 'yChannelSelector',\\n        'zoomandpan' => 'zoomAndPan',\\n    );\\n\\n    \/**\\n     * Some SVG elements are case sensitive.\\n     * This map contains these.\\n     *\\n     * The map contains key\/value store of the name is lowercase as the keys and\\n     * the correct casing as the value.\\n     *\/\\n    public static $svgCaseSensitiveElementMap = array(\\n        'altglyph' => 'altGlyph',\\n        'altglyphdef' => 'altGlyphDef',\\n        'altglyphitem' => 'altGlyphItem',\\n        'animatecolor' => 'animateColor',\\n        'animatemotion' => 'animateMotion',\\n        'animatetransform' => 'animateTransform',\\n        'clippath' => 'clipPath',\\n        'feblend' => 'feBlend',\\n        'fecolormatrix' => 'feColorMatrix',\\n        'fecomponenttransfer' => 'feComponentTransfer',\\n        'fecomposite' => 'feComposite',\\n        'feconvolvematrix' => 'feConvolveMatrix',\\n        'fediffuselighting' => 'feDiffuseLighting',\\n        'fedisplacementmap' => 'feDisplacementMap',\\n        'fedistantlight' => 'feDistantLight',\\n        'feflood' => 'feFlood',\\n        'fefunca' => 'feFuncA',\\n        'fefuncb' => 'feFuncB',\\n        'fefuncg' => 'feFuncG',\\n        'fefuncr' => 'feFuncR',\\n        'fegaussianblur' => 'feGaussianBlur',\\n        'feimage' => 'feImage',\\n        'femerge' => 'feMerge',\\n        'femergenode' => 'feMergeNode',\\n        'femorphology' => 'feMorphology',\\n        'feoffset' => 'feOffset',\\n        'fepointlight' => 'fePointLight',\\n        'fespecularlighting' => 'feSpecularLighting',\\n        'fespotlight' => 'feSpotLight',\\n        'fetile' => 'feTile',\\n        'feturbulence' => 'feTurbulence',\\n        'foreignobject' => 'foreignObject',\\n        'glyphref' => 'glyphRef',\\n        'lineargradient' => 'linearGradient',\\n        'radialgradient' => 'radialGradient',\\n        'textpath' => 'textPath',\\n    );\\n\\n    \/**\\n     * Check whether the given element meets the given criterion.\\n     *\\n     * Example:\\n     *\\n     * Elements::isA('script', Elements::TEXT_RAW); \/\/ Returns true.\\n     *\\n     * Elements::isA('script', Elements::TEXT_RCDATA); \/\/ Returns false.\\n     *\\n     * @param string $name The element name.\\n     * @param int    $mask One of the constants on this class.\\n     *\\n     * @return bool true if the element matches the mask, false otherwise.\\n     *\/\\n    public static function isA($name, $mask)\\n    {\\n        return (static::element($name) & $mask) === $mask;\\n    }\\n\\n    \/**\\n     * Test if an element is a valid html5 element.\\n     *\\n     * @param string $name The name of the element.\\n     *\\n     * @return bool true if a html5 element and false otherwise.\\n     *\/\\n    public static function isHtml5Element($name)\\n    {\\n        \/\/ html5 element names are case insensitive. Forcing lowercase for the check.\\n        \/\/ Do we need this check or will all data passed here already be lowercase?\\n        return isset(static::$html5[strtolower($name)]);\\n    }\\n\\n    \/**\\n     * Test if an element name is a valid MathML presentation element.\\n     *\\n     * @param string $name The name of the element.\\n     *\\n     * @return bool true if a MathML name and false otherwise.\\n     *\/\\n    public static function isMathMLElement($name)\\n    {\\n        \/\/ MathML is case-sensitive unlike html5 elements.\\n        return isset(static::$mathml[$name]);\\n    }\\n\\n    \/**\\n     * Test if an element is a valid SVG element.\\n     *\\n     * @param string $name The name of the element.\\n     *\\n     * @return bool true if a SVG element and false otherise.\\n     *\/\\n    public static function isSvgElement($name)\\n    {\\n        \/\/ SVG is case-sensitive unlike html5 elements.\\n        return isset(static::$svg[$name]);\\n    }\\n\\n    \/**\\n     * Is an element name valid in an html5 document.\\n     * This includes html5 elements along with other allowed embedded content\\n     * such as svg and mathml.\\n     *\\n     * @param string $name The name of the element.\\n     *\\n     * @return bool true if valid and false otherwise.\\n     *\/\\n    public static function isElement($name)\\n    {\\n        return static::isHtml5Element($name) || static::isMathMLElement($name) || static::isSvgElement($name);\\n    }\\n\\n    \/**\\n     * Get the element mask for the given element name.\\n     *\\n     * @param string $name The name of the element.\\n     *\\n     * @return int the element mask.\\n     *\/\\n    public static function element($name)\\n    {\\n        if (isset(static::$html5[$name])) {\\n            return static::$html5[$name];\\n        }\\n        if (isset(static::$svg[$name])) {\\n            return static::$svg[$name];\\n        }\\n        if (isset(static::$mathml[$name])) {\\n            return static::$mathml[$name];\\n        }\\n\\n        return 0;\\n    }\\n\\n    \/**\\n     * Normalize a SVG element name to its proper case and form.\\n     *\\n     * @param string $name The name of the element.\\n     *\\n     * @return string the normalized form of the element name.\\n     *\/\\n    public static function normalizeSvgElement($name)\\n    {\\n        $name = strtolower($name);\\n        if (isset(static::$svgCaseSensitiveElementMap[$name])) {\\n            $name = static::$svgCaseSensitiveElementMap[$name];\\n        }\\n\\n        return $name;\\n    }\\n\\n    \/**\\n     * Normalize a SVG attribute name to its proper case and form.\\n     *\\n     * @param string $name The name of the attribute.\\n     *\\n     * @return string The normalized form of the attribute name.\\n     *\/\\n    public static function normalizeSvgAttribute($name)\\n    {\\n        $name = strtolower($name);\\n        if (isset(static::$svgCaseSensitiveAttributeMap[$name])) {\\n            $name = static::$svgCaseSensitiveAttributeMap[$name];\\n        }\\n\\n        return $name;\\n    }\\n\\n    \/**\\n     * Normalize a MathML attribute name to its proper case and form.\\n     * Note, all MathML element names are lowercase.\\n     *\\n     * @param string $name The name of the attribute.\\n     *\\n     * @return string The normalized form of the attribute name.\\n     *\/\\n    public static function normalizeMathMlAttribute($name)\\n    {\\n        $name = strtolower($name);\\n\\n        \/\/ Only one attribute has a mixed case form for MathML.\\n        if ('definitionurl' === $name) {\\n            $name = 'definitionURL';\\n        }\\n\\n        return $name;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Entities.php\",\"ext\":\"php\",\"size\":60947,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5;\\n\\n\/**\\n * Entity lookup tables.\\n * This class is automatically generated.\\n *\/\\nclass Entities\\n{\\n    public static $byName = array(\\n        'Aacute' => '\u00c1',\\n        'Aacut' => '\u00c1',\\n        'aacute' => '\u00e1',\\n        'aacut' => '\u00e1',\\n        'Abreve' => '\u0102',\\n        'abreve' => '\u0103',\\n        'ac' => '\u223e',\\n        'acd' => '\u223f',\\n        'acE' => '\u223e\u0333',\\n        'Acirc' => '\u00c2',\\n        'Acir' => '\u00c2',\\n        'acirc' => '\u00e2',\\n        'acir' => '\u00e2',\\n        'acute' => '\u00b4',\\n        'acut' => '\u00b4',\\n        'Acy' => '\u0410',\\n        'acy' => '\u0430',\\n        'AElig' => '\u00c6',\\n        'AEli' => '\u00c6',\\n        'aelig' => '\u00e6',\\n        'aeli' => '\u00e6',\\n        'af' => '\u2061',\\n        'Afr' => '\ud835\udd04',\\n        'afr' => '\ud835\udd1e',\\n        'Agrave' => '\u00c0',\\n        'Agrav' => '\u00c0',\\n        'agrave' => '\u00e0',\\n        'agrav' => '\u00e0',\\n        'alefsym' => '\u2135',\\n        'aleph' => '\u2135',\\n        'Alpha' => '\u0391',\\n        'alpha' => '\u03b1',\\n        'Amacr' => '\u0100',\\n        'amacr' => '\u0101',\\n        'amalg' => '\u2a3f',\\n        'AMP' => '&',\\n        'AM' => '&',\\n        'amp' => '&',\\n        'am' => '&',\\n        'And' => '\u2a53',\\n        'and' => '\u2227',\\n        'andand' => '\u2a55',\\n        'andd' => '\u2a5c',\\n        'andslope' => '\u2a58',\\n        'andv' => '\u2a5a',\\n        'ang' => '\u2220',\\n        'ange' => '\u29a4',\\n        'angle' => '\u2220',\\n        'angmsd' => '\u2221',\\n        'angmsdaa' => '\u29a8',\\n        'angmsdab' => '\u29a9',\\n        'angmsdac' => '\u29aa',\\n        'angmsdad' => '\u29ab',\\n        'angmsdae' => '\u29ac',\\n        'angmsdaf' => '\u29ad',\\n        'angmsdag' => '\u29ae',\\n        'angmsdah' => '\u29af',\\n        'angrt' => '\u221f',\\n        'angrtvb' => '\u22be',\\n        'angrtvbd' => '\u299d',\\n        'angsph' => '\u2222',\\n        'angst' => '\u00c5',\\n        'angzarr' => '\u237c',\\n        'Aogon' => '\u0104',\\n        'aogon' => '\u0105',\\n        'Aopf' => '\ud835\udd38',\\n        'aopf' => '\ud835\udd52',\\n        'ap' => '\u2248',\\n        'apacir' => '\u2a6f',\\n        'apE' => '\u2a70',\\n        'ape' => '\u224a',\\n        'apid' => '\u224b',\\n        'apos' => '\\\\'',\\n        'ApplyFunction' => '\u2061',\\n        'approx' => '\u2248',\\n        'approxeq' => '\u224a',\\n        'Aring' => '\u00c5',\\n        'Arin' => '\u00c5',\\n        'aring' => '\u00e5',\\n        'arin' => '\u00e5',\\n        'Ascr' => '\ud835\udc9c',\\n        'ascr' => '\ud835\udcb6',\\n        'Assign' => '\u2254',\\n        'ast' => '*',\\n        'asymp' => '\u2248',\\n        'asympeq' => '\u224d',\\n        'Atilde' => '\u00c3',\\n        'Atild' => '\u00c3',\\n        'atilde' => '\u00e3',\\n        'atild' => '\u00e3',\\n        'Auml' => '\u00c4',\\n        'Aum' => '\u00c4',\\n        'auml' => '\u00e4',\\n        'aum' => '\u00e4',\\n        'awconint' => '\u2233',\\n        'awint' => '\u2a11',\\n        'backcong' => '\u224c',\\n        'backepsilon' => '\u03f6',\\n        'backprime' => '\u2035',\\n        'backsim' => '\u223d',\\n        'backsimeq' => '\u22cd',\\n        'Backslash' => '\u2216',\\n        'Barv' => '\u2ae7',\\n        'barvee' => '\u22bd',\\n        'Barwed' => '\u2306',\\n        'barwed' => '\u2305',\\n        'barwedge' => '\u2305',\\n        'bbrk' => '\u23b5',\\n        'bbrktbrk' => '\u23b6',\\n        'bcong' => '\u224c',\\n        'Bcy' => '\u0411',\\n        'bcy' => '\u0431',\\n        'bdquo' => '\u201e',\\n        'becaus' => '\u2235',\\n        'Because' => '\u2235',\\n        'because' => '\u2235',\\n        'bemptyv' => '\u29b0',\\n        'bepsi' => '\u03f6',\\n        'bernou' => '\u212c',\\n        'Bernoullis' => '\u212c',\\n        'Beta' => '\u0392',\\n        'beta' => '\u03b2',\\n        'beth' => '\u2136',\\n        'between' => '\u226c',\\n        'Bfr' => '\ud835\udd05',\\n        'bfr' => '\ud835\udd1f',\\n        'bigcap' => '\u22c2',\\n        'bigcirc' => '\u25ef',\\n        'bigcup' => '\u22c3',\\n        'bigodot' => '\u2a00',\\n        'bigoplus' => '\u2a01',\\n        'bigotimes' => '\u2a02',\\n        'bigsqcup' => '\u2a06',\\n        'bigstar' => '\u2605',\\n        'bigtriangledown' => '\u25bd',\\n        'bigtriangleup' => '\u25b3',\\n        'biguplus' => '\u2a04',\\n        'bigvee' => '\u22c1',\\n        'bigwedge' => '\u22c0',\\n        'bkarow' => '\u290d',\\n        'blacklozenge' => '\u29eb',\\n        'blacksquare' => '\u25aa',\\n        'blacktriangle' => '\u25b4',\\n        'blacktriangledown' => '\u25be',\\n        'blacktriangleleft' => '\u25c2',\\n        'blacktriangleright' => '\u25b8',\\n        'blank' => '\u2423',\\n        'blk12' => '\u2592',\\n        'blk14' => '\u2591',\\n        'blk34' => '\u2593',\\n        'block' => '\u2588',\\n        'bne' => '=\u20e5',\\n        'bnequiv' => '\u2261\u20e5',\\n        'bNot' => '\u2aed',\\n        'bnot' => '\u2310',\\n        'Bopf' => '\ud835\udd39',\\n        'bopf' => '\ud835\udd53',\\n        'bot' => '\u22a5',\\n        'bottom' => '\u22a5',\\n        'bowtie' => '\u22c8',\\n        'boxbox' => '\u29c9',\\n        'boxDL' => '\u2557',\\n        'boxDl' => '\u2556',\\n        'boxdL' => '\u2555',\\n        'boxdl' => '\u2510',\\n        'boxDR' => '\u2554',\\n        'boxDr' => '\u2553',\\n        'boxdR' => '\u2552',\\n        'boxdr' => '\u250c',\\n        'boxH' => '\u2550',\\n        'boxh' => '\u2500',\\n        'boxHD' => '\u2566',\\n        'boxHd' => '\u2564',\\n        'boxhD' => '\u2565',\\n        'boxhd' => '\u252c',\\n        'boxHU' => '\u2569',\\n        'boxHu' => '\u2567',\\n        'boxhU' => '\u2568',\\n        'boxhu' => '\u2534',\\n        'boxminus' => '\u229f',\\n        'boxplus' => '\u229e',\\n        'boxtimes' => '\u22a0',\\n        'boxUL' => '\u255d',\\n        'boxUl' => '\u255c',\\n        'boxuL' => '\u255b',\\n        'boxul' => '\u2518',\\n        'boxUR' => '\u255a',\\n        'boxUr' => '\u2559',\\n        'boxuR' => '\u2558',\\n        'boxur' => '\u2514',\\n        'boxV' => '\u2551',\\n        'boxv' => '\u2502',\\n        'boxVH' => '\u256c',\\n        'boxVh' => '\u256b',\\n        'boxvH' => '\u256a',\\n        'boxvh' => '\u253c',\\n        'boxVL' => '\u2563',\\n        'boxVl' => '\u2562',\\n        'boxvL' => '\u2561',\\n        'boxvl' => '\u2524',\\n        'boxVR' => '\u2560',\\n        'boxVr' => '\u255f',\\n        'boxvR' => '\u255e',\\n        'boxvr' => '\u251c',\\n        'bprime' => '\u2035',\\n        'Breve' => '\u02d8',\\n        'breve' => '\u02d8',\\n        'brvbar' => '\u00a6',\\n        'brvba' => '\u00a6',\\n        'Bscr' => '\u212c',\\n        'bscr' => '\ud835\udcb7',\\n        'bsemi' => '\u204f',\\n        'bsim' => '\u223d',\\n        'bsime' => '\u22cd',\\n        'bsol' => '\\\\\\\\',\\n        'bsolb' => '\u29c5',\\n        'bsolhsub' => '\u27c8',\\n        'bull' => '\u2022',\\n        'bullet' => '\u2022',\\n        'bump' => '\u224e',\\n        'bumpE' => '\u2aae',\\n        'bumpe' => '\u224f',\\n        'Bumpeq' => '\u224e',\\n        'bumpeq' => '\u224f',\\n        'Cacute' => '\u0106',\\n        'cacute' => '\u0107',\\n        'Cap' => '\u22d2',\\n        'cap' => '\u2229',\\n        'capand' => '\u2a44',\\n        'capbrcup' => '\u2a49',\\n        'capcap' => '\u2a4b',\\n        'capcup' => '\u2a47',\\n        'capdot' => '\u2a40',\\n        'CapitalDifferentialD' => '\u2145',\\n        'caps' => '\u2229\ufe00',\\n        'caret' => '\u2041',\\n        'caron' => '\u02c7',\\n        'Cayleys' => '\u212d',\\n        'ccaps' => '\u2a4d',\\n        'Ccaron' => '\u010c',\\n        'ccaron' => '\u010d',\\n        'Ccedil' => '\u00c7',\\n        'Ccedi' => '\u00c7',\\n        'ccedil' => '\u00e7',\\n        'ccedi' => '\u00e7',\\n        'Ccirc' => '\u0108',\\n        'ccirc' => '\u0109',\\n        'Cconint' => '\u2230',\\n        'ccups' => '\u2a4c',\\n        'ccupssm' => '\u2a50',\\n        'Cdot' => '\u010a',\\n        'cdot' => '\u010b',\\n        'cedil' => '\u00b8',\\n        'cedi' => '\u00b8',\\n        'Cedilla' => '\u00b8',\\n        'cemptyv' => '\u29b2',\\n        'cent' => '\u00a2',\\n        'cen' => '\u00a2',\\n        'CenterDot' => '\u00b7',\\n        'centerdot' => '\u00b7',\\n        'Cfr' => '\u212d',\\n        'cfr' => '\ud835\udd20',\\n        'CHcy' => '\u0427',\\n        'chcy' => '\u0447',\\n        'check' => '\u2713',\\n        'checkmark' => '\u2713',\\n        'Chi' => '\u03a7',\\n        'chi' => '\u03c7',\\n        'cir' => '\u25cb',\\n        'circ' => '\u02c6',\\n        'circeq' => '\u2257',\\n        'circlearrowleft' => '\u21ba',\\n        'circlearrowright' => '\u21bb',\\n        'circledast' => '\u229b',\\n        'circledcirc' => '\u229a',\\n        'circleddash' => '\u229d',\\n        'CircleDot' => '\u2299',\\n        'circledR' => '\u00ae',\\n        'circledS' => '\u24c8',\\n        'CircleMinus' => '\u2296',\\n        'CirclePlus' => '\u2295',\\n        'CircleTimes' => '\u2297',\\n        'cirE' => '\u29c3',\\n        'cire' => '\u2257',\\n        'cirfnint' => '\u2a10',\\n        'cirmid' => '\u2aef',\\n        'cirscir' => '\u29c2',\\n        'ClockwiseContourIntegral' => '\u2232',\\n        'CloseCurlyDoubleQuote' => '\u201d',\\n        'CloseCurlyQuote' => '\u2019',\\n        'clubs' => '\u2663',\\n        'clubsuit' => '\u2663',\\n        'Colon' => '\u2237',\\n        'colon' => ':',\\n        'Colone' => '\u2a74',\\n        'colone' => '\u2254',\\n        'coloneq' => '\u2254',\\n        'comma' => ',',\\n        'commat' => '@',\\n        'comp' => '\u2201',\\n        'compfn' => '\u2218',\\n        'complement' => '\u2201',\\n        'complexes' => '\u2102',\\n        'cong' => '\u2245',\\n        'congdot' => '\u2a6d',\\n        'Congruent' => '\u2261',\\n        'Conint' => '\u222f',\\n        'conint' => '\u222e',\\n        'ContourIntegral' => '\u222e',\\n        'Copf' => '\u2102',\\n        'copf' => '\ud835\udd54',\\n        'coprod' => '\u2210',\\n        'Coproduct' => '\u2210',\\n        'COPY' => '\u00a9',\\n        'COP' => '\u00a9',\\n        'copy' => '\u00a9',\\n        'cop' => '\u00a9',\\n        'copysr' => '\u2117',\\n        'CounterClockwiseContourIntegral' => '\u2233',\\n        'crarr' => '\u21b5',\\n        'Cross' => '\u2a2f',\\n        'cross' => '\u2717',\\n        'Cscr' => '\ud835\udc9e',\\n        'cscr' => '\ud835\udcb8',\\n        'csub' => '\u2acf',\\n        'csube' => '\u2ad1',\\n        'csup' => '\u2ad0',\\n        'csupe' => '\u2ad2',\\n        'ctdot' => '\u22ef',\\n        'cudarrl' => '\u2938',\\n        'cudarrr' => '\u2935',\\n        'cuepr' => '\u22de',\\n        'cuesc' => '\u22df',\\n        'cularr' => '\u21b6',\\n        'cularrp' => '\u293d',\\n        'Cup' => '\u22d3',\\n        'cup' => '\u222a',\\n        'cupbrcap' => '\u2a48',\\n        'CupCap' => '\u224d',\\n        'cupcap' => '\u2a46',\\n        'cupcup' => '\u2a4a',\\n        'cupdot' => '\u228d',\\n        'cupor' => '\u2a45',\\n        'cups' => '\u222a\ufe00',\\n        'curarr' => '\u21b7',\\n        'curarrm' => '\u293c',\\n        'curlyeqprec' => '\u22de',\\n        'curlyeqsucc' => '\u22df',\\n        'curlyvee' => '\u22ce',\\n        'curlywedge' => '\u22cf',\\n        'curren' => '\u00a4',\\n        'curre' => '\u00a4',\\n        'curvearrowleft' => '\u21b6',\\n        'curvearrowright' => '\u21b7',\\n        'cuvee' => '\u22ce',\\n        'cuwed' => '\u22cf',\\n        'cwconint' => '\u2232',\\n        'cwint' => '\u2231',\\n        'cylcty' => '\u232d',\\n        'Dagger' => '\u2021',\\n        'dagger' => '\u2020',\\n        'daleth' => '\u2138',\\n        'Darr' => '\u21a1',\\n        'dArr' => '\u21d3',\\n        'darr' => '\u2193',\\n        'dash' => '\u2010',\\n        'Dashv' => '\u2ae4',\\n        'dashv' => '\u22a3',\\n        'dbkarow' => '\u290f',\\n        'dblac' => '\u02dd',\\n        'Dcaron' => '\u010e',\\n        'dcaron' => '\u010f',\\n        'Dcy' => '\u0414',\\n        'dcy' => '\u0434',\\n        'DD' => '\u2145',\\n        'dd' => '\u2146',\\n        'ddagger' => '\u2021',\\n        'ddarr' => '\u21ca',\\n        'DDotrahd' => '\u2911',\\n        'ddotseq' => '\u2a77',\\n        'deg' => '\u00b0',\\n        'de' => '\u00b0',\\n        'Del' => '\u2207',\\n        'Delta' => '\u0394',\\n        'delta' => '\u03b4',\\n        'demptyv' => '\u29b1',\\n        'dfisht' => '\u297f',\\n        'Dfr' => '\ud835\udd07',\\n        'dfr' => '\ud835\udd21',\\n        'dHar' => '\u2965',\\n        'dharl' => '\u21c3',\\n        'dharr' => '\u21c2',\\n        'DiacriticalAcute' => '\u00b4',\\n        'DiacriticalDot' => '\u02d9',\\n        'DiacriticalDoubleAcute' => '\u02dd',\\n        'DiacriticalGrave' => '`',\\n        'DiacriticalTilde' => '\u02dc',\\n        'diam' => '\u22c4',\\n        'Diamond' => '\u22c4',\\n        'diamond' => '\u22c4',\\n        'diamondsuit' => '\u2666',\\n        'diams' => '\u2666',\\n        'die' => '\u00a8',\\n        'DifferentialD' => '\u2146',\\n        'digamma' => '\u03dd',\\n        'disin' => '\u22f2',\\n        'div' => '\u00f7',\\n        'divide' => '\u00f7',\\n        'divid' => '\u00f7',\\n        'divideontimes' => '\u22c7',\\n        'divonx' => '\u22c7',\\n        'DJcy' => '\u0402',\\n        'djcy' => '\u0452',\\n        'dlcorn' => '\u231e',\\n        'dlcrop' => '\u230d',\\n        'dollar' => '$',\\n        'Dopf' => '\ud835\udd3b',\\n        'dopf' => '\ud835\udd55',\\n        'Dot' => '\u00a8',\\n        'dot' => '\u02d9',\\n        'DotDot' => '\u20dc',\\n        'doteq' => '\u2250',\\n        'doteqdot' => '\u2251',\\n        'DotEqual' => '\u2250',\\n        'dotminus' => '\u2238',\\n        'dotplus' => '\u2214',\\n        'dotsquare' => '\u22a1',\\n        'doublebarwedge' => '\u2306',\\n        'DoubleContourIntegral' => '\u222f',\\n        'DoubleDot' => '\u00a8',\\n        'DoubleDownArrow' => '\u21d3',\\n        'DoubleLeftArrow' => '\u21d0',\\n        'DoubleLeftRightArrow' => '\u21d4',\\n        'DoubleLeftTee' => '\u2ae4',\\n        'DoubleLongLeftArrow' => '\u27f8',\\n        'DoubleLongLeftRightArrow' => '\u27fa',\\n        'DoubleLongRightArrow' => '\u27f9',\\n        'DoubleRightArrow' => '\u21d2',\\n        'DoubleRightTee' => '\u22a8',\\n        'DoubleUpArrow' => '\u21d1',\\n        'DoubleUpDownArrow' => '\u21d5',\\n        'DoubleVerticalBar' => '\u2225',\\n        'DownArrow' => '\u2193',\\n        'Downarrow' => '\u21d3',\\n        'downarrow' => '\u2193',\\n        'DownArrowBar' => '\u2913',\\n        'DownArrowUpArrow' => '\u21f5',\\n        'DownBreve' => '\u0311',\\n        'downdownarrows' => '\u21ca',\\n        'downharpoonleft' => '\u21c3',\\n        'downharpoonright' => '\u21c2',\\n        'DownLeftRightVector' => '\u2950',\\n        'DownLeftTeeVector' => '\u295e',\\n        'DownLeftVector' => '\u21bd',\\n        'DownLeftVectorBar' => '\u2956',\\n        'DownRightTeeVector' => '\u295f',\\n        'DownRightVector' => '\u21c1',\\n        'DownRightVectorBar' => '\u2957',\\n        'DownTee' => '\u22a4',\\n        'DownTeeArrow' => '\u21a7',\\n        'drbkarow' => '\u2910',\\n        'drcorn' => '\u231f',\\n        'drcrop' => '\u230c',\\n        'Dscr' => '\ud835\udc9f',\\n        'dscr' => '\ud835\udcb9',\\n        'DScy' => '\u0405',\\n        'dscy' => '\u0455',\\n        'dsol' => '\u29f6',\\n        'Dstrok' => '\u0110',\\n        'dstrok' => '\u0111',\\n        'dtdot' => '\u22f1',\\n        'dtri' => '\u25bf',\\n        'dtrif' => '\u25be',\\n        'duarr' => '\u21f5',\\n        'duhar' => '\u296f',\\n        'dwangle' => '\u29a6',\\n        'DZcy' => '\u040f',\\n        'dzcy' => '\u045f',\\n        'dzigrarr' => '\u27ff',\\n        'Eacute' => '\u00c9',\\n        'Eacut' => '\u00c9',\\n        'eacute' => '\u00e9',\\n        'eacut' => '\u00e9',\\n        'easter' => '\u2a6e',\\n        'Ecaron' => '\u011a',\\n        'ecaron' => '\u011b',\\n        'ecir' => '\u00ea',\\n        'Ecirc' => '\u00ca',\\n        'Ecir' => '\u00ca',\\n        'ecirc' => '\u00ea',\\n        'ecolon' => '\u2255',\\n        'Ecy' => '\u042d',\\n        'ecy' => '\u044d',\\n        'eDDot' => '\u2a77',\\n        'Edot' => '\u0116',\\n        'eDot' => '\u2251',\\n        'edot' => '\u0117',\\n        'ee' => '\u2147',\\n        'efDot' => '\u2252',\\n        'Efr' => '\ud835\udd08',\\n        'efr' => '\ud835\udd22',\\n        'eg' => '\u2a9a',\\n        'Egrave' => '\u00c8',\\n        'Egrav' => '\u00c8',\\n        'egrave' => '\u00e8',\\n        'egrav' => '\u00e8',\\n        'egs' => '\u2a96',\\n        'egsdot' => '\u2a98',\\n        'el' => '\u2a99',\\n        'Element' => '\u2208',\\n        'elinters' => '\u23e7',\\n        'ell' => '\u2113',\\n        'els' => '\u2a95',\\n        'elsdot' => '\u2a97',\\n        'Emacr' => '\u0112',\\n        'emacr' => '\u0113',\\n        'empty' => '\u2205',\\n        'emptyset' => '\u2205',\\n        'EmptySmallSquare' => '\u25fb',\\n        'emptyv' => '\u2205',\\n        'EmptyVerySmallSquare' => '\u25ab',\\n        'emsp' => '\u2003',\\n        'emsp13' => '\u2004',\\n        'emsp14' => '\u2005',\\n        'ENG' => '\u014a',\\n        'eng' => '\u014b',\\n        'ensp' => '\u2002',\\n        'Eogon' => '\u0118',\\n        'eogon' => '\u0119',\\n        'Eopf' => '\ud835\udd3c',\\n        'eopf' => '\ud835\udd56',\\n        'epar' => '\u22d5',\\n        'eparsl' => '\u29e3',\\n        'eplus' => '\u2a71',\\n        'epsi' => '\u03b5',\\n        'Epsilon' => '\u0395',\\n        'epsilon' => '\u03b5',\\n        'epsiv' => '\u03f5',\\n        'eqcirc' => '\u2256',\\n        'eqcolon' => '\u2255',\\n        'eqsim' => '\u2242',\\n        'eqslantgtr' => '\u2a96',\\n        'eqslantless' => '\u2a95',\\n        'Equal' => '\u2a75',\\n        'equals' => '=',\\n        'EqualTilde' => '\u2242',\\n        'equest' => '\u225f',\\n        'Equilibrium' => '\u21cc',\\n        'equiv' => '\u2261',\\n        'equivDD' => '\u2a78',\\n        'eqvparsl' => '\u29e5',\\n        'erarr' => '\u2971',\\n        'erDot' => '\u2253',\\n        'Escr' => '\u2130',\\n        'escr' => '\u212f',\\n        'esdot' => '\u2250',\\n        'Esim' => '\u2a73',\\n        'esim' => '\u2242',\\n        'Eta' => '\u0397',\\n        'eta' => '\u03b7',\\n        'ETH' => '\u00d0',\\n        'ET' => '\u00d0',\\n        'eth' => '\u00f0',\\n        'et' => '\u00f0',\\n        'Euml' => '\u00cb',\\n        'Eum' => '\u00cb',\\n        'euml' => '\u00eb',\\n        'eum' => '\u00eb',\\n        'euro' => '\u20ac',\\n        'excl' => '!',\\n        'exist' => '\u2203',\\n        'Exists' => '\u2203',\\n        'expectation' => '\u2130',\\n        'ExponentialE' => '\u2147',\\n        'exponentiale' => '\u2147',\\n        'fallingdotseq' => '\u2252',\\n        'Fcy' => '\u0424',\\n        'fcy' => '\u0444',\\n        'female' => '\u2640',\\n        'ffilig' => '\ufb03',\\n        'fflig' => '\ufb00',\\n        'ffllig' => '\ufb04',\\n        'Ffr' => '\ud835\udd09',\\n        'ffr' => '\ud835\udd23',\\n        'filig' => '\ufb01',\\n        'FilledSmallSquare' => '\u25fc',\\n        'FilledVerySmallSquare' => '\u25aa',\\n        'fjlig' => 'fj',\\n        'flat' => '\u266d',\\n        'fllig' => '\ufb02',\\n        'fltns' => '\u25b1',\\n        'fnof' => '\u0192',\\n        'Fopf' => '\ud835\udd3d',\\n        'fopf' => '\ud835\udd57',\\n        'ForAll' => '\u2200',\\n        'forall' => '\u2200',\\n        'fork' => '\u22d4',\\n        'forkv' => '\u2ad9',\\n        'Fouriertrf' => '\u2131',\\n        'fpartint' => '\u2a0d',\\n        'frac12' => '\u00bd',\\n        'frac1' => '\u00bc',\\n        'frac13' => '\u2153',\\n        'frac14' => '\u00bc',\\n        'frac15' => '\u2155',\\n        'frac16' => '\u2159',\\n        'frac18' => '\u215b',\\n        'frac23' => '\u2154',\\n        'frac25' => '\u2156',\\n        'frac34' => '\u00be',\\n        'frac3' => '\u00be',\\n        'frac35' => '\u2157',\\n        'frac38' => '\u215c',\\n        'frac45' => '\u2158',\\n        'frac56' => '\u215a',\\n        'frac58' => '\u215d',\\n        'frac78' => '\u215e',\\n        'frasl' => '\u2044',\\n        'frown' => '\u2322',\\n        'Fscr' => '\u2131',\\n        'fscr' => '\ud835\udcbb',\\n        'gacute' => '\u01f5',\\n        'Gamma' => '\u0393',\\n        'gamma' => '\u03b3',\\n        'Gammad' => '\u03dc',\\n        'gammad' => '\u03dd',\\n        'gap' => '\u2a86',\\n        'Gbreve' => '\u011e',\\n        'gbreve' => '\u011f',\\n        'Gcedil' => '\u0122',\\n        'Gcirc' => '\u011c',\\n        'gcirc' => '\u011d',\\n        'Gcy' => '\u0413',\\n        'gcy' => '\u0433',\\n        'Gdot' => '\u0120',\\n        'gdot' => '\u0121',\\n        'gE' => '\u2267',\\n        'ge' => '\u2265',\\n        'gEl' => '\u2a8c',\\n        'gel' => '\u22db',\\n        'geq' => '\u2265',\\n        'geqq' => '\u2267',\\n        'geqslant' => '\u2a7e',\\n        'ges' => '\u2a7e',\\n        'gescc' => '\u2aa9',\\n        'gesdot' => '\u2a80',\\n        'gesdoto' => '\u2a82',\\n        'gesdotol' => '\u2a84',\\n        'gesl' => '\u22db\ufe00',\\n        'gesles' => '\u2a94',\\n        'Gfr' => '\ud835\udd0a',\\n        'gfr' => '\ud835\udd24',\\n        'Gg' => '\u22d9',\\n        'gg' => '\u226b',\\n        'ggg' => '\u22d9',\\n        'gimel' => '\u2137',\\n        'GJcy' => '\u0403',\\n        'gjcy' => '\u0453',\\n        'gl' => '\u2277',\\n        'gla' => '\u2aa5',\\n        'glE' => '\u2a92',\\n        'glj' => '\u2aa4',\\n        'gnap' => '\u2a8a',\\n        'gnapprox' => '\u2a8a',\\n        'gnE' => '\u2269',\\n        'gne' => '\u2a88',\\n        'gneq' => '\u2a88',\\n        'gneqq' => '\u2269',\\n        'gnsim' => '\u22e7',\\n        'Gopf' => '\ud835\udd3e',\\n        'gopf' => '\ud835\udd58',\\n        'grave' => '`',\\n        'GreaterEqual' => '\u2265',\\n        'GreaterEqualLess' => '\u22db',\\n        'GreaterFullEqual' => '\u2267',\\n        'GreaterGreater' => '\u2aa2',\\n        'GreaterLess' => '\u2277',\\n        'GreaterSlantEqual' => '\u2a7e',\\n        'GreaterTilde' => '\u2273',\\n        'Gscr' => '\ud835\udca2',\\n        'gscr' => '\u210a',\\n        'gsim' => '\u2273',\\n        'gsime' => '\u2a8e',\\n        'gsiml' => '\u2a90',\\n        'GT' => '>',\\n        'G' => '>',\\n        'Gt' => '\u226b',\\n        'gt' => '>',\\n        'g' => '>',\\n        'gtcc' => '\u2aa7',\\n        'gtcir' => '\u2a7a',\\n        'gtdot' => '\u22d7',\\n        'gtlPar' => '\u2995',\\n        'gtquest' => '\u2a7c',\\n        'gtrapprox' => '\u2a86',\\n        'gtrarr' => '\u2978',\\n        'gtrdot' => '\u22d7',\\n        'gtreqless' => '\u22db',\\n        'gtreqqless' => '\u2a8c',\\n        'gtrless' => '\u2277',\\n        'gtrsim' => '\u2273',\\n        'gvertneqq' => '\u2269\ufe00',\\n        'gvnE' => '\u2269\ufe00',\\n        'Hacek' => '\u02c7',\\n        'hairsp' => '\u200a',\\n        'half' => '\u00bd',\\n        'hamilt' => '\u210b',\\n        'HARDcy' => '\u042a',\\n        'hardcy' => '\u044a',\\n        'hArr' => '\u21d4',\\n        'harr' => '\u2194',\\n        'harrcir' => '\u2948',\\n        'harrw' => '\u21ad',\\n        'Hat' => '^',\\n        'hbar' => '\u210f',\\n        'Hcirc' => '\u0124',\\n        'hcirc' => '\u0125',\\n        'hearts' => '\u2665',\\n        'heartsuit' => '\u2665',\\n        'hellip' => '\u2026',\\n        'hercon' => '\u22b9',\\n        'Hfr' => '\u210c',\\n        'hfr' => '\ud835\udd25',\\n        'HilbertSpace' => '\u210b',\\n        'hksearow' => '\u2925',\\n        'hkswarow' => '\u2926',\\n        'hoarr' => '\u21ff',\\n        'homtht' => '\u223b',\\n        'hookleftarrow' => '\u21a9',\\n        'hookrightarrow' => '\u21aa',\\n        'Hopf' => '\u210d',\\n        'hopf' => '\ud835\udd59',\\n        'horbar' => '\u2015',\\n        'HorizontalLine' => '\u2500',\\n        'Hscr' => '\u210b',\\n        'hscr' => '\ud835\udcbd',\\n        'hslash' => '\u210f',\\n        'Hstrok' => '\u0126',\\n        'hstrok' => '\u0127',\\n        'HumpDownHump' => '\u224e',\\n        'HumpEqual' => '\u224f',\\n        'hybull' => '\u2043',\\n        'hyphen' => '\u2010',\\n        'Iacute' => '\u00cd',\\n        'Iacut' => '\u00cd',\\n        'iacute' => '\u00ed',\\n        'iacut' => '\u00ed',\\n        'ic' => '\u2063',\\n        'Icirc' => '\u00ce',\\n        'Icir' => '\u00ce',\\n        'icirc' => '\u00ee',\\n        'icir' => '\u00ee',\\n        'Icy' => '\u0418',\\n        'icy' => '\u0438',\\n        'Idot' => '\u0130',\\n        'IEcy' => '\u0415',\\n        'iecy' => '\u0435',\\n        'iexcl' => '\u00a1',\\n        'iexc' => '\u00a1',\\n        'iff' => '\u21d4',\\n        'Ifr' => '\u2111',\\n        'ifr' => '\ud835\udd26',\\n        'Igrave' => '\u00cc',\\n        'Igrav' => '\u00cc',\\n        'igrave' => '\u00ec',\\n        'igrav' => '\u00ec',\\n        'ii' => '\u2148',\\n        'iiiint' => '\u2a0c',\\n        'iiint' => '\u222d',\\n        'iinfin' => '\u29dc',\\n        'iiota' => '\u2129',\\n        'IJlig' => '\u0132',\\n        'ijlig' => '\u0133',\\n        'Im' => '\u2111',\\n        'Imacr' => '\u012a',\\n        'imacr' => '\u012b',\\n        'image' => '\u2111',\\n        'ImaginaryI' => '\u2148',\\n        'imagline' => '\u2110',\\n        'imagpart' => '\u2111',\\n        'imath' => '\u0131',\\n        'imof' => '\u22b7',\\n        'imped' => '\u01b5',\\n        'Implies' => '\u21d2',\\n        'in' => '\u2208',\\n        'incare' => '\u2105',\\n        'infin' => '\u221e',\\n        'infintie' => '\u29dd',\\n        'inodot' => '\u0131',\\n        'Int' => '\u222c',\\n        'int' => '\u222b',\\n        'intcal' => '\u22ba',\\n        'integers' => '\u2124',\\n        'Integral' => '\u222b',\\n        'intercal' => '\u22ba',\\n        'Intersection' => '\u22c2',\\n        'intlarhk' => '\u2a17',\\n        'intprod' => '\u2a3c',\\n        'InvisibleComma' => '\u2063',\\n        'InvisibleTimes' => '\u2062',\\n        'IOcy' => '\u0401',\\n        'iocy' => '\u0451',\\n        'Iogon' => '\u012e',\\n        'iogon' => '\u012f',\\n        'Iopf' => '\ud835\udd40',\\n        'iopf' => '\ud835\udd5a',\\n        'Iota' => '\u0399',\\n        'iota' => '\u03b9',\\n        'iprod' => '\u2a3c',\\n        'iquest' => '\u00bf',\\n        'iques' => '\u00bf',\\n        'Iscr' => '\u2110',\\n        'iscr' => '\ud835\udcbe',\\n        'isin' => '\u2208',\\n        'isindot' => '\u22f5',\\n        'isinE' => '\u22f9',\\n        'isins' => '\u22f4',\\n        'isinsv' => '\u22f3',\\n        'isinv' => '\u2208',\\n        'it' => '\u2062',\\n        'Itilde' => '\u0128',\\n        'itilde' => '\u0129',\\n        'Iukcy' => '\u0406',\\n        'iukcy' => '\u0456',\\n        'Iuml' => '\u00cf',\\n        'Ium' => '\u00cf',\\n        'iuml' => '\u00ef',\\n        'ium' => '\u00ef',\\n        'Jcirc' => '\u0134',\\n        'jcirc' => '\u0135',\\n        'Jcy' => '\u0419',\\n        'jcy' => '\u0439',\\n        'Jfr' => '\ud835\udd0d',\\n        'jfr' => '\ud835\udd27',\\n        'jmath' => '\u0237',\\n        'Jopf' => '\ud835\udd41',\\n        'jopf' => '\ud835\udd5b',\\n        'Jscr' => '\ud835\udca5',\\n        'jscr' => '\ud835\udcbf',\\n        'Jsercy' => '\u0408',\\n        'jsercy' => '\u0458',\\n        'Jukcy' => '\u0404',\\n        'jukcy' => '\u0454',\\n        'Kappa' => '\u039a',\\n        'kappa' => '\u03ba',\\n        'kappav' => '\u03f0',\\n        'Kcedil' => '\u0136',\\n        'kcedil' => '\u0137',\\n        'Kcy' => '\u041a',\\n        'kcy' => '\u043a',\\n        'Kfr' => '\ud835\udd0e',\\n        'kfr' => '\ud835\udd28',\\n        'kgreen' => '\u0138',\\n        'KHcy' => '\u0425',\\n        'khcy' => '\u0445',\\n        'KJcy' => '\u040c',\\n        'kjcy' => '\u045c',\\n        'Kopf' => '\ud835\udd42',\\n        'kopf' => '\ud835\udd5c',\\n        'Kscr' => '\ud835\udca6',\\n        'kscr' => '\ud835\udcc0',\\n        'lAarr' => '\u21da',\\n        'Lacute' => '\u0139',\\n        'lacute' => '\u013a',\\n        'laemptyv' => '\u29b4',\\n        'lagran' => '\u2112',\\n        'Lambda' => '\u039b',\\n        'lambda' => '\u03bb',\\n        'Lang' => '\u27ea',\\n        'lang' => '\u27e8',\\n        'langd' => '\u2991',\\n        'langle' => '\u27e8',\\n        'lap' => '\u2a85',\\n        'Laplacetrf' => '\u2112',\\n        'laquo' => '\u00ab',\\n        'laqu' => '\u00ab',\\n        'Larr' => '\u219e',\\n        'lArr' => '\u21d0',\\n        'larr' => '\u2190',\\n        'larrb' => '\u21e4',\\n        'larrbfs' => '\u291f',\\n        'larrfs' => '\u291d',\\n        'larrhk' => '\u21a9',\\n        'larrlp' => '\u21ab',\\n        'larrpl' => '\u2939',\\n        'larrsim' => '\u2973',\\n        'larrtl' => '\u21a2',\\n        'lat' => '\u2aab',\\n        'lAtail' => '\u291b',\\n        'latail' => '\u2919',\\n        'late' => '\u2aad',\\n        'lates' => '\u2aad\ufe00',\\n        'lBarr' => '\u290e',\\n        'lbarr' => '\u290c',\\n        'lbbrk' => '\u2772',\\n        'lbrace' => '{',\\n        'lbrack' => '[',\\n        'lbrke' => '\u298b',\\n        'lbrksld' => '\u298f',\\n        'lbrkslu' => '\u298d',\\n        'Lcaron' => '\u013d',\\n        'lcaron' => '\u013e',\\n        'Lcedil' => '\u013b',\\n        'lcedil' => '\u013c',\\n        'lceil' => '\u2308',\\n        'lcub' => '{',\\n        'Lcy' => '\u041b',\\n        'lcy' => '\u043b',\\n        'ldca' => '\u2936',\\n        'ldquo' => '\u201c',\\n        'ldquor' => '\u201e',\\n        'ldrdhar' => '\u2967',\\n        'ldrushar' => '\u294b',\\n        'ldsh' => '\u21b2',\\n        'lE' => '\u2266',\\n        'le' => '\u2264',\\n        'LeftAngleBracket' => '\u27e8',\\n        'LeftArrow' => '\u2190',\\n        'Leftarrow' => '\u21d0',\\n        'leftarrow' => '\u2190',\\n        'LeftArrowBar' => '\u21e4',\\n        'LeftArrowRightArrow' => '\u21c6',\\n        'leftarrowtail' => '\u21a2',\\n        'LeftCeiling' => '\u2308',\\n        'LeftDoubleBracket' => '\u27e6',\\n        'LeftDownTeeVector' => '\u2961',\\n        'LeftDownVector' => '\u21c3',\\n        'LeftDownVectorBar' => '\u2959',\\n        'LeftFloor' => '\u230a',\\n        'leftharpoondown' => '\u21bd',\\n        'leftharpoonup' => '\u21bc',\\n        'leftleftarrows' => '\u21c7',\\n        'LeftRightArrow' => '\u2194',\\n        'Leftrightarrow' => '\u21d4',\\n        'leftrightarrow' => '\u2194',\\n        'leftrightarrows' => '\u21c6',\\n        'leftrightharpoons' => '\u21cb',\\n        'leftrightsquigarrow' => '\u21ad',\\n        'LeftRightVector' => '\u294e',\\n        'LeftTee' => '\u22a3',\\n        'LeftTeeArrow' => '\u21a4',\\n        'LeftTeeVector' => '\u295a',\\n        'leftthreetimes' => '\u22cb',\\n        'LeftTriangle' => '\u22b2',\\n        'LeftTriangleBar' => '\u29cf',\\n        'LeftTriangleEqual' => '\u22b4',\\n        'LeftUpDownVector' => '\u2951',\\n        'LeftUpTeeVector' => '\u2960',\\n        'LeftUpVector' => '\u21bf',\\n        'LeftUpVectorBar' => '\u2958',\\n        'LeftVector' => '\u21bc',\\n        'LeftVectorBar' => '\u2952',\\n        'lEg' => '\u2a8b',\\n        'leg' => '\u22da',\\n        'leq' => '\u2264',\\n        'leqq' => '\u2266',\\n        'leqslant' => '\u2a7d',\\n        'les' => '\u2a7d',\\n        'lescc' => '\u2aa8',\\n        'lesdot' => '\u2a7f',\\n        'lesdoto' => '\u2a81',\\n        'lesdotor' => '\u2a83',\\n        'lesg' => '\u22da\ufe00',\\n        'lesges' => '\u2a93',\\n        'lessapprox' => '\u2a85',\\n        'lessdot' => '\u22d6',\\n        'lesseqgtr' => '\u22da',\\n        'lesseqqgtr' => '\u2a8b',\\n        'LessEqualGreater' => '\u22da',\\n        'LessFullEqual' => '\u2266',\\n        'LessGreater' => '\u2276',\\n        'lessgtr' => '\u2276',\\n        'LessLess' => '\u2aa1',\\n        'lesssim' => '\u2272',\\n        'LessSlantEqual' => '\u2a7d',\\n        'LessTilde' => '\u2272',\\n        'lfisht' => '\u297c',\\n        'lfloor' => '\u230a',\\n        'Lfr' => '\ud835\udd0f',\\n        'lfr' => '\ud835\udd29',\\n        'lg' => '\u2276',\\n        'lgE' => '\u2a91',\\n        'lHar' => '\u2962',\\n        'lhard' => '\u21bd',\\n        'lharu' => '\u21bc',\\n        'lharul' => '\u296a',\\n        'lhblk' => '\u2584',\\n        'LJcy' => '\u0409',\\n        'ljcy' => '\u0459',\\n        'Ll' => '\u22d8',\\n        'll' => '\u226a',\\n        'llarr' => '\u21c7',\\n        'llcorner' => '\u231e',\\n        'Lleftarrow' => '\u21da',\\n        'llhard' => '\u296b',\\n        'lltri' => '\u25fa',\\n        'Lmidot' => '\u013f',\\n        'lmidot' => '\u0140',\\n        'lmoust' => '\u23b0',\\n        'lmoustache' => '\u23b0',\\n        'lnap' => '\u2a89',\\n        'lnapprox' => '\u2a89',\\n        'lnE' => '\u2268',\\n        'lne' => '\u2a87',\\n        'lneq' => '\u2a87',\\n        'lneqq' => '\u2268',\\n        'lnsim' => '\u22e6',\\n        'loang' => '\u27ec',\\n        'loarr' => '\u21fd',\\n        'lobrk' => '\u27e6',\\n        'LongLeftArrow' => '\u27f5',\\n        'Longleftarrow' => '\u27f8',\\n        'longleftarrow' => '\u27f5',\\n        'LongLeftRightArrow' => '\u27f7',\\n        'Longleftrightarrow' => '\u27fa',\\n        'longleftrightarrow' => '\u27f7',\\n        'longmapsto' => '\u27fc',\\n        'LongRightArrow' => '\u27f6',\\n        'Longrightarrow' => '\u27f9',\\n        'longrightarrow' => '\u27f6',\\n        'looparrowleft' => '\u21ab',\\n        'looparrowright' => '\u21ac',\\n        'lopar' => '\u2985',\\n        'Lopf' => '\ud835\udd43',\\n        'lopf' => '\ud835\udd5d',\\n        'loplus' => '\u2a2d',\\n        'lotimes' => '\u2a34',\\n        'lowast' => '\u2217',\\n        'lowbar' => '_',\\n        'LowerLeftArrow' => '\u2199',\\n        'LowerRightArrow' => '\u2198',\\n        'loz' => '\u25ca',\\n        'lozenge' => '\u25ca',\\n        'lozf' => '\u29eb',\\n        'lpar' => '(',\\n        'lparlt' => '\u2993',\\n        'lrarr' => '\u21c6',\\n        'lrcorner' => '\u231f',\\n        'lrhar' => '\u21cb',\\n        'lrhard' => '\u296d',\\n        'lrm' => '\u200e',\\n        'lrtri' => '\u22bf',\\n        'lsaquo' => '\u2039',\\n        'Lscr' => '\u2112',\\n        'lscr' => '\ud835\udcc1',\\n        'Lsh' => '\u21b0',\\n        'lsh' => '\u21b0',\\n        'lsim' => '\u2272',\\n        'lsime' => '\u2a8d',\\n        'lsimg' => '\u2a8f',\\n        'lsqb' => '[',\\n        'lsquo' => '\u2018',\\n        'lsquor' => '\u201a',\\n        'Lstrok' => '\u0141',\\n        'lstrok' => '\u0142',\\n        'LT' => '<',\\n        'L' => '<',\\n        'Lt' => '\u226a',\\n        'lt' => '<',\\n        'l' => '<',\\n        'ltcc' => '\u2aa6',\\n        'ltcir' => '\u2a79',\\n        'ltdot' => '\u22d6',\\n        'lthree' => '\u22cb',\\n        'ltimes' => '\u22c9',\\n        'ltlarr' => '\u2976',\\n        'ltquest' => '\u2a7b',\\n        'ltri' => '\u25c3',\\n        'ltrie' => '\u22b4',\\n        'ltrif' => '\u25c2',\\n        'ltrPar' => '\u2996',\\n        'lurdshar' => '\u294a',\\n        'luruhar' => '\u2966',\\n        'lvertneqq' => '\u2268\ufe00',\\n        'lvnE' => '\u2268\ufe00',\\n        'macr' => '\u00af',\\n        'mac' => '\u00af',\\n        'male' => '\u2642',\\n        'malt' => '\u2720',\\n        'maltese' => '\u2720',\\n        'Map' => '\u2905',\\n        'map' => '\u21a6',\\n        'mapsto' => '\u21a6',\\n        'mapstodown' => '\u21a7',\\n        'mapstoleft' => '\u21a4',\\n        'mapstoup' => '\u21a5',\\n        'marker' => '\u25ae',\\n        'mcomma' => '\u2a29',\\n        'Mcy' => '\u041c',\\n        'mcy' => '\u043c',\\n        'mdash' => '\u2014',\\n        'mDDot' => '\u223a',\\n        'measuredangle' => '\u2221',\\n        'MediumSpace' => '\u205f',\\n        'Mellintrf' => '\u2133',\\n        'Mfr' => '\ud835\udd10',\\n        'mfr' => '\ud835\udd2a',\\n        'mho' => '\u2127',\\n        'micro' => '\u00b5',\\n        'micr' => '\u00b5',\\n        'mid' => '\u2223',\\n        'midast' => '*',\\n        'midcir' => '\u2af0',\\n        'middot' => '\u00b7',\\n        'middo' => '\u00b7',\\n        'minus' => '\u2212',\\n        'minusb' => '\u229f',\\n        'minusd' => '\u2238',\\n        'minusdu' => '\u2a2a',\\n        'MinusPlus' => '\u2213',\\n        'mlcp' => '\u2adb',\\n        'mldr' => '\u2026',\\n        'mnplus' => '\u2213',\\n        'models' => '\u22a7',\\n        'Mopf' => '\ud835\udd44',\\n        'mopf' => '\ud835\udd5e',\\n        'mp' => '\u2213',\\n        'Mscr' => '\u2133',\\n        'mscr' => '\ud835\udcc2',\\n        'mstpos' => '\u223e',\\n        'Mu' => '\u039c',\\n        'mu' => '\u03bc',\\n        'multimap' => '\u22b8',\\n        'mumap' => '\u22b8',\\n        'nabla' => '\u2207',\\n        'Nacute' => '\u0143',\\n        'nacute' => '\u0144',\\n        'nang' => '\u2220\u20d2',\\n        'nap' => '\u2249',\\n        'napE' => '\u2a70\u0338',\\n        'napid' => '\u224b\u0338',\\n        'napos' => '\u0149',\\n        'napprox' => '\u2249',\\n        'natur' => '\u266e',\\n        'natural' => '\u266e',\\n        'naturals' => '\u2115',\\n        'nbsp' => '\u00a0',\\n        'nbs' => '\u00a0',\\n        'nbump' => '\u224e\u0338',\\n        'nbumpe' => '\u224f\u0338',\\n        'ncap' => '\u2a43',\\n        'Ncaron' => '\u0147',\\n        'ncaron' => '\u0148',\\n        'Ncedil' => '\u0145',\\n        'ncedil' => '\u0146',\\n        'ncong' => '\u2247',\\n        'ncongdot' => '\u2a6d\u0338',\\n        'ncup' => '\u2a42',\\n        'Ncy' => '\u041d',\\n        'ncy' => '\u043d',\\n        'ndash' => '\u2013',\\n        'ne' => '\u2260',\\n        'nearhk' => '\u2924',\\n        'neArr' => '\u21d7',\\n        'nearr' => '\u2197',\\n        'nearrow' => '\u2197',\\n        'nedot' => '\u2250\u0338',\\n        'NegativeMediumSpace' => '\u200b',\\n        'NegativeThickSpace' => '\u200b',\\n        'NegativeThinSpace' => '\u200b',\\n        'NegativeVeryThinSpace' => '\u200b',\\n        'nequiv' => '\u2262',\\n        'nesear' => '\u2928',\\n        'nesim' => '\u2242\u0338',\\n        'NestedGreaterGreater' => '\u226b',\\n        'NestedLessLess' => '\u226a',\\n        'NewLine' => '\\n',\\n        'nexist' => '\u2204',\\n        'nexists' => '\u2204',\\n        'Nfr' => '\ud835\udd11',\\n        'nfr' => '\ud835\udd2b',\\n        'ngE' => '\u2267\u0338',\\n        'nge' => '\u2271',\\n        'ngeq' => '\u2271',\\n        'ngeqq' => '\u2267\u0338',\\n        'ngeqslant' => '\u2a7e\u0338',\\n        'nges' => '\u2a7e\u0338',\\n        'nGg' => '\u22d9\u0338',\\n        'ngsim' => '\u2275',\\n        'nGt' => '\u226b\u20d2',\\n        'ngt' => '\u226f',\\n        'ngtr' => '\u226f',\\n        'nGtv' => '\u226b\u0338',\\n        'nhArr' => '\u21ce',\\n        'nharr' => '\u21ae',\\n        'nhpar' => '\u2af2',\\n        'ni' => '\u220b',\\n        'nis' => '\u22fc',\\n        'nisd' => '\u22fa',\\n        'niv' => '\u220b',\\n        'NJcy' => '\u040a',\\n        'njcy' => '\u045a',\\n        'nlArr' => '\u21cd',\\n        'nlarr' => '\u219a',\\n        'nldr' => '\u2025',\\n        'nlE' => '\u2266\u0338',\\n        'nle' => '\u2270',\\n        'nLeftarrow' => '\u21cd',\\n        'nleftarrow' => '\u219a',\\n        'nLeftrightarrow' => '\u21ce',\\n        'nleftrightarrow' => '\u21ae',\\n        'nleq' => '\u2270',\\n        'nleqq' => '\u2266\u0338',\\n        'nleqslant' => '\u2a7d\u0338',\\n        'nles' => '\u2a7d\u0338',\\n        'nless' => '\u226e',\\n        'nLl' => '\u22d8\u0338',\\n        'nlsim' => '\u2274',\\n        'nLt' => '\u226a\u20d2',\\n        'nlt' => '\u226e',\\n        'nltri' => '\u22ea',\\n        'nltrie' => '\u22ec',\\n        'nLtv' => '\u226a\u0338',\\n        'nmid' => '\u2224',\\n        'NoBreak' => '\u2060',\\n        'NonBreakingSpace' => '\u00a0',\\n        'Nopf' => '\u2115',\\n        'nopf' => '\ud835\udd5f',\\n        'Not' => '\u2aec',\\n        'not' => '\u00ac',\\n        'no' => '\u00ac',\\n        'NotCongruent' => '\u2262',\\n        'NotCupCap' => '\u226d',\\n        'NotDoubleVerticalBar' => '\u2226',\\n        'NotElement' => '\u2209',\\n        'NotEqual' => '\u2260',\\n        'NotEqualTilde' => '\u2242\u0338',\\n        'NotExists' => '\u2204',\\n        'NotGreater' => '\u226f',\\n        'NotGreaterEqual' => '\u2271',\\n        'NotGreaterFullEqual' => '\u2267\u0338',\\n        'NotGreaterGreater' => '\u226b\u0338',\\n        'NotGreaterLess' => '\u2279',\\n        'NotGreaterSlantEqual' => '\u2a7e\u0338',\\n        'NotGreaterTilde' => '\u2275',\\n        'NotHumpDownHump' => '\u224e\u0338',\\n        'NotHumpEqual' => '\u224f\u0338',\\n        'notin' => '\u2209',\\n        'notindot' => '\u22f5\u0338',\\n        'notinE' => '\u22f9\u0338',\\n        'notinva' => '\u2209',\\n        'notinvb' => '\u22f7',\\n        'notinvc' => '\u22f6',\\n        'NotLeftTriangle' => '\u22ea',\\n        'NotLeftTriangleBar' => '\u29cf\u0338',\\n        'NotLeftTriangleEqual' => '\u22ec',\\n        'NotLess' => '\u226e',\\n        'NotLessEqual' => '\u2270',\\n        'NotLessGreater' => '\u2278',\\n        'NotLessLess' => '\u226a\u0338',\\n        'NotLessSlantEqual' => '\u2a7d\u0338',\\n        'NotLessTilde' => '\u2274',\\n        'NotNestedGreaterGreater' => '\u2aa2\u0338',\\n        'NotNestedLessLess' => '\u2aa1\u0338',\\n        'notni' => '\u220c',\\n        'notniva' => '\u220c',\\n        'notnivb' => '\u22fe',\\n        'notnivc' => '\u22fd',\\n        'NotPrecedes' => '\u2280',\\n        'NotPrecedesEqual' => '\u2aaf\u0338',\\n        'NotPrecedesSlantEqual' => '\u22e0',\\n        'NotReverseElement' => '\u220c',\\n        'NotRightTriangle' => '\u22eb',\\n        'NotRightTriangleBar' => '\u29d0\u0338',\\n        'NotRightTriangleEqual' => '\u22ed',\\n        'NotSquareSubset' => '\u228f\u0338',\\n        'NotSquareSubsetEqual' => '\u22e2',\\n        'NotSquareSuperset' => '\u2290\u0338',\\n        'NotSquareSupersetEqual' => '\u22e3',\\n        'NotSubset' => '\u2282\u20d2',\\n        'NotSubsetEqual' => '\u2288',\\n        'NotSucceeds' => '\u2281',\\n        'NotSucceedsEqual' => '\u2ab0\u0338',\\n        'NotSucceedsSlantEqual' => '\u22e1',\\n        'NotSucceedsTilde' => '\u227f\u0338',\\n        'NotSuperset' => '\u2283\u20d2',\\n        'NotSupersetEqual' => '\u2289',\\n        'NotTilde' => '\u2241',\\n        'NotTildeEqual' => '\u2244',\\n        'NotTildeFullEqual' => '\u2247',\\n        'NotTildeTilde' => '\u2249',\\n        'NotVerticalBar' => '\u2224',\\n        'npar' => '\u2226',\\n        'nparallel' => '\u2226',\\n        'nparsl' => '\u2afd\u20e5',\\n        'npart' => '\u2202\u0338',\\n        'npolint' => '\u2a14',\\n        'npr' => '\u2280',\\n        'nprcue' => '\u22e0',\\n        'npre' => '\u2aaf\u0338',\\n        'nprec' => '\u2280',\\n        'npreceq' => '\u2aaf\u0338',\\n        'nrArr' => '\u21cf',\\n        'nrarr' => '\u219b',\\n        'nrarrc' => '\u2933\u0338',\\n        'nrarrw' => '\u219d\u0338',\\n        'nRightarrow' => '\u21cf',\\n        'nrightarrow' => '\u219b',\\n        'nrtri' => '\u22eb',\\n        'nrtrie' => '\u22ed',\\n        'nsc' => '\u2281',\\n        'nsccue' => '\u22e1',\\n        'nsce' => '\u2ab0\u0338',\\n        'Nscr' => '\ud835\udca9',\\n        'nscr' => '\ud835\udcc3',\\n        'nshortmid' => '\u2224',\\n        'nshortparallel' => '\u2226',\\n        'nsim' => '\u2241',\\n        'nsime' => '\u2244',\\n        'nsimeq' => '\u2244',\\n        'nsmid' => '\u2224',\\n        'nspar' => '\u2226',\\n        'nsqsube' => '\u22e2',\\n        'nsqsupe' => '\u22e3',\\n        'nsub' => '\u2284',\\n        'nsubE' => '\u2ac5\u0338',\\n        'nsube' => '\u2288',\\n        'nsubset' => '\u2282\u20d2',\\n        'nsubseteq' => '\u2288',\\n        'nsubseteqq' => '\u2ac5\u0338',\\n        'nsucc' => '\u2281',\\n        'nsucceq' => '\u2ab0\u0338',\\n        'nsup' => '\u2285',\\n        'nsupE' => '\u2ac6\u0338',\\n        'nsupe' => '\u2289',\\n        'nsupset' => '\u2283\u20d2',\\n        'nsupseteq' => '\u2289',\\n        'nsupseteqq' => '\u2ac6\u0338',\\n        'ntgl' => '\u2279',\\n        'Ntilde' => '\u00d1',\\n        'Ntild' => '\u00d1',\\n        'ntilde' => '\u00f1',\\n        'ntild' => '\u00f1',\\n        'ntlg' => '\u2278',\\n        'ntriangleleft' => '\u22ea',\\n        'ntrianglelefteq' => '\u22ec',\\n        'ntriangleright' => '\u22eb',\\n        'ntrianglerighteq' => '\u22ed',\\n        'Nu' => '\u039d',\\n        'nu' => '\u03bd',\\n        'num' => '#',\\n        'numero' => '\u2116',\\n        'numsp' => '\u2007',\\n        'nvap' => '\u224d\u20d2',\\n        'nVDash' => '\u22af',\\n        'nVdash' => '\u22ae',\\n        'nvDash' => '\u22ad',\\n        'nvdash' => '\u22ac',\\n        'nvge' => '\u2265\u20d2',\\n        'nvgt' => '>\u20d2',\\n        'nvHarr' => '\u2904',\\n        'nvinfin' => '\u29de',\\n        'nvlArr' => '\u2902',\\n        'nvle' => '\u2264\u20d2',\\n        'nvlt' => '<\u20d2',\\n        'nvltrie' => '\u22b4\u20d2',\\n        'nvrArr' => '\u2903',\\n        'nvrtrie' => '\u22b5\u20d2',\\n        'nvsim' => '\u223c\u20d2',\\n        'nwarhk' => '\u2923',\\n        'nwArr' => '\u21d6',\\n        'nwarr' => '\u2196',\\n        'nwarrow' => '\u2196',\\n        'nwnear' => '\u2927',\\n        'Oacute' => '\u00d3',\\n        'Oacut' => '\u00d3',\\n        'oacute' => '\u00f3',\\n        'oacut' => '\u00f3',\\n        'oast' => '\u229b',\\n        'ocir' => '\u00f4',\\n        'Ocirc' => '\u00d4',\\n        'Ocir' => '\u00d4',\\n        'ocirc' => '\u00f4',\\n        'Ocy' => '\u041e',\\n        'ocy' => '\u043e',\\n        'odash' => '\u229d',\\n        'Odblac' => '\u0150',\\n        'odblac' => '\u0151',\\n        'odiv' => '\u2a38',\\n        'odot' => '\u2299',\\n        'odsold' => '\u29bc',\\n        'OElig' => '\u0152',\\n        'oelig' => '\u0153',\\n        'ofcir' => '\u29bf',\\n        'Ofr' => '\ud835\udd12',\\n        'ofr' => '\ud835\udd2c',\\n        'ogon' => '\u02db',\\n        'Ograve' => '\u00d2',\\n        'Ograv' => '\u00d2',\\n        'ograve' => '\u00f2',\\n        'ograv' => '\u00f2',\\n        'ogt' => '\u29c1',\\n        'ohbar' => '\u29b5',\\n        'ohm' => '\u03a9',\\n        'oint' => '\u222e',\\n        'olarr' => '\u21ba',\\n        'olcir' => '\u29be',\\n        'olcross' => '\u29bb',\\n        'oline' => '\u203e',\\n        'olt' => '\u29c0',\\n        'Omacr' => '\u014c',\\n        'omacr' => '\u014d',\\n        'Omega' => '\u03a9',\\n        'omega' => '\u03c9',\\n        'Omicron' => '\u039f',\\n        'omicron' => '\u03bf',\\n        'omid' => '\u29b6',\\n        'ominus' => '\u2296',\\n        'Oopf' => '\ud835\udd46',\\n        'oopf' => '\ud835\udd60',\\n        'opar' => '\u29b7',\\n        'OpenCurlyDoubleQuote' => '\u201c',\\n        'OpenCurlyQuote' => '\u2018',\\n        'operp' => '\u29b9',\\n        'oplus' => '\u2295',\\n        'Or' => '\u2a54',\\n        'or' => '\u2228',\\n        'orarr' => '\u21bb',\\n        'ord' => '\u00ba',\\n        'order' => '\u2134',\\n        'orderof' => '\u2134',\\n        'ordf' => '\u00aa',\\n        'ordm' => '\u00ba',\\n        'origof' => '\u22b6',\\n        'oror' => '\u2a56',\\n        'orslope' => '\u2a57',\\n        'orv' => '\u2a5b',\\n        'oS' => '\u24c8',\\n        'Oscr' => '\ud835\udcaa',\\n        'oscr' => '\u2134',\\n        'Oslash' => '\u00d8',\\n        'Oslas' => '\u00d8',\\n        'oslash' => '\u00f8',\\n        'oslas' => '\u00f8',\\n        'osol' => '\u2298',\\n        'Otilde' => '\u00d5',\\n        'Otild' => '\u00d5',\\n        'otilde' => '\u00f5',\\n        'otild' => '\u00f5',\\n        'Otimes' => '\u2a37',\\n        'otimes' => '\u2297',\\n        'otimesas' => '\u2a36',\\n        'Ouml' => '\u00d6',\\n        'Oum' => '\u00d6',\\n        'ouml' => '\u00f6',\\n        'oum' => '\u00f6',\\n        'ovbar' => '\u233d',\\n        'OverBar' => '\u203e',\\n        'OverBrace' => '\u23de',\\n        'OverBracket' => '\u23b4',\\n        'OverParenthesis' => '\u23dc',\\n        'par' => '\u00b6',\\n        'para' => '\u00b6',\\n        'parallel' => '\u2225',\\n        'parsim' => '\u2af3',\\n        'parsl' => '\u2afd',\\n        'part' => '\u2202',\\n        'PartialD' => '\u2202',\\n        'Pcy' => '\u041f',\\n        'pcy' => '\u043f',\\n        'percnt' => '%',\\n        'period' => '.',\\n        'permil' => '\u2030',\\n        'perp' => '\u22a5',\\n        'pertenk' => '\u2031',\\n        'Pfr' => '\ud835\udd13',\\n        'pfr' => '\ud835\udd2d',\\n        'Phi' => '\u03a6',\\n        'phi' => '\u03c6',\\n        'phiv' => '\u03d5',\\n        'phmmat' => '\u2133',\\n        'phone' => '\u260e',\\n        'Pi' => '\u03a0',\\n        'pi' => '\u03c0',\\n        'pitchfork' => '\u22d4',\\n        'piv' => '\u03d6',\\n        'planck' => '\u210f',\\n        'planckh' => '\u210e',\\n        'plankv' => '\u210f',\\n        'plus' => '+',\\n        'plusacir' => '\u2a23',\\n        'plusb' => '\u229e',\\n        'pluscir' => '\u2a22',\\n        'plusdo' => '\u2214',\\n        'plusdu' => '\u2a25',\\n        'pluse' => '\u2a72',\\n        'PlusMinus' => '\u00b1',\\n        'plusmn' => '\u00b1',\\n        'plusm' => '\u00b1',\\n        'plussim' => '\u2a26',\\n        'plustwo' => '\u2a27',\\n        'pm' => '\u00b1',\\n        'Poincareplane' => '\u210c',\\n        'pointint' => '\u2a15',\\n        'Popf' => '\u2119',\\n        'popf' => '\ud835\udd61',\\n        'pound' => '\u00a3',\\n        'poun' => '\u00a3',\\n        'Pr' => '\u2abb',\\n        'pr' => '\u227a',\\n        'prap' => '\u2ab7',\\n        'prcue' => '\u227c',\\n        'prE' => '\u2ab3',\\n        'pre' => '\u2aaf',\\n        'prec' => '\u227a',\\n        'precapprox' => '\u2ab7',\\n        'preccurlyeq' => '\u227c',\\n        'Precedes' => '\u227a',\\n        'PrecedesEqual' => '\u2aaf',\\n        'PrecedesSlantEqual' => '\u227c',\\n        'PrecedesTilde' => '\u227e',\\n        'preceq' => '\u2aaf',\\n        'precnapprox' => '\u2ab9',\\n        'precneqq' => '\u2ab5',\\n        'precnsim' => '\u22e8',\\n        'precsim' => '\u227e',\\n        'Prime' => '\u2033',\\n        'prime' => '\u2032',\\n        'primes' => '\u2119',\\n        'prnap' => '\u2ab9',\\n        'prnE' => '\u2ab5',\\n        'prnsim' => '\u22e8',\\n        'prod' => '\u220f',\\n        'Product' => '\u220f',\\n        'profalar' => '\u232e',\\n        'profline' => '\u2312',\\n        'profsurf' => '\u2313',\\n        'prop' => '\u221d',\\n        'Proportion' => '\u2237',\\n        'Proportional' => '\u221d',\\n        'propto' => '\u221d',\\n        'prsim' => '\u227e',\\n        'prurel' => '\u22b0',\\n        'Pscr' => '\ud835\udcab',\\n        'pscr' => '\ud835\udcc5',\\n        'Psi' => '\u03a8',\\n        'psi' => '\u03c8',\\n        'puncsp' => '\u2008',\\n        'Qfr' => '\ud835\udd14',\\n        'qfr' => '\ud835\udd2e',\\n        'qint' => '\u2a0c',\\n        'Qopf' => '\u211a',\\n        'qopf' => '\ud835\udd62',\\n        'qprime' => '\u2057',\\n        'Qscr' => '\ud835\udcac',\\n        'qscr' => '\ud835\udcc6',\\n        'quaternions' => '\u210d',\\n        'quatint' => '\u2a16',\\n        'quest' => '?',\\n        'questeq' => '\u225f',\\n        'QUOT' => '\\\"',\\n        'QUO' => '\\\"',\\n        'quot' => '\\\"',\\n        'quo' => '\\\"',\\n        'rAarr' => '\u21db',\\n        'race' => '\u223d\u0331',\\n        'Racute' => '\u0154',\\n        'racute' => '\u0155',\\n        'radic' => '\u221a',\\n        'raemptyv' => '\u29b3',\\n        'Rang' => '\u27eb',\\n        'rang' => '\u27e9',\\n        'rangd' => '\u2992',\\n        'range' => '\u29a5',\\n        'rangle' => '\u27e9',\\n        'raquo' => '\u00bb',\\n        'raqu' => '\u00bb',\\n        'Rarr' => '\u21a0',\\n        'rArr' => '\u21d2',\\n        'rarr' => '\u2192',\\n        'rarrap' => '\u2975',\\n        'rarrb' => '\u21e5',\\n        'rarrbfs' => '\u2920',\\n        'rarrc' => '\u2933',\\n        'rarrfs' => '\u291e',\\n        'rarrhk' => '\u21aa',\\n        'rarrlp' => '\u21ac',\\n        'rarrpl' => '\u2945',\\n        'rarrsim' => '\u2974',\\n        'Rarrtl' => '\u2916',\\n        'rarrtl' => '\u21a3',\\n        'rarrw' => '\u219d',\\n        'rAtail' => '\u291c',\\n        'ratail' => '\u291a',\\n        'ratio' => '\u2236',\\n        'rationals' => '\u211a',\\n        'RBarr' => '\u2910',\\n        'rBarr' => '\u290f',\\n        'rbarr' => '\u290d',\\n        'rbbrk' => '\u2773',\\n        'rbrace' => '}',\\n        'rbrack' => ']',\\n        'rbrke' => '\u298c',\\n        'rbrksld' => '\u298e',\\n        'rbrkslu' => '\u2990',\\n        'Rcaron' => '\u0158',\\n        'rcaron' => '\u0159',\\n        'Rcedil' => '\u0156',\\n        'rcedil' => '\u0157',\\n        'rceil' => '\u2309',\\n        'rcub' => '}',\\n        'Rcy' => '\u0420',\\n        'rcy' => '\u0440',\\n        'rdca' => '\u2937',\\n        'rdldhar' => '\u2969',\\n        'rdquo' => '\u201d',\\n        'rdquor' => '\u201d',\\n        'rdsh' => '\u21b3',\\n        'Re' => '\u211c',\\n        'real' => '\u211c',\\n        'realine' => '\u211b',\\n        'realpart' => '\u211c',\\n        'reals' => '\u211d',\\n        'rect' => '\u25ad',\\n        'REG' => '\u00ae',\\n        'RE' => '\u00ae',\\n        'reg' => '\u00ae',\\n        're' => '\u00ae',\\n        'ReverseElement' => '\u220b',\\n        'ReverseEquilibrium' => '\u21cb',\\n        'ReverseUpEquilibrium' => '\u296f',\\n        'rfisht' => '\u297d',\\n        'rfloor' => '\u230b',\\n        'Rfr' => '\u211c',\\n        'rfr' => '\ud835\udd2f',\\n        'rHar' => '\u2964',\\n        'rhard' => '\u21c1',\\n        'rharu' => '\u21c0',\\n        'rharul' => '\u296c',\\n        'Rho' => '\u03a1',\\n        'rho' => '\u03c1',\\n        'rhov' => '\u03f1',\\n        'RightAngleBracket' => '\u27e9',\\n        'RightArrow' => '\u2192',\\n        'Rightarrow' => '\u21d2',\\n        'rightarrow' => '\u2192',\\n        'RightArrowBar' => '\u21e5',\\n        'RightArrowLeftArrow' => '\u21c4',\\n        'rightarrowtail' => '\u21a3',\\n        'RightCeiling' => '\u2309',\\n        'RightDoubleBracket' => '\u27e7',\\n        'RightDownTeeVector' => '\u295d',\\n        'RightDownVector' => '\u21c2',\\n        'RightDownVectorBar' => '\u2955',\\n        'RightFloor' => '\u230b',\\n        'rightharpoondown' => '\u21c1',\\n        'rightharpoonup' => '\u21c0',\\n        'rightleftarrows' => '\u21c4',\\n        'rightleftharpoons' => '\u21cc',\\n        'rightrightarrows' => '\u21c9',\\n        'rightsquigarrow' => '\u219d',\\n        'RightTee' => '\u22a2',\\n        'RightTeeArrow' => '\u21a6',\\n        'RightTeeVector' => '\u295b',\\n        'rightthreetimes' => '\u22cc',\\n        'RightTriangle' => '\u22b3',\\n        'RightTriangleBar' => '\u29d0',\\n        'RightTriangleEqual' => '\u22b5',\\n        'RightUpDownVector' => '\u294f',\\n        'RightUpTeeVector' => '\u295c',\\n        'RightUpVector' => '\u21be',\\n        'RightUpVectorBar' => '\u2954',\\n        'RightVector' => '\u21c0',\\n        'RightVectorBar' => '\u2953',\\n        'ring' => '\u02da',\\n        'risingdotseq' => '\u2253',\\n        'rlarr' => '\u21c4',\\n        'rlhar' => '\u21cc',\\n        'rlm' => '\u200f',\\n        'rmoust' => '\u23b1',\\n        'rmoustache' => '\u23b1',\\n        'rnmid' => '\u2aee',\\n        'roang' => '\u27ed',\\n        'roarr' => '\u21fe',\\n        'robrk' => '\u27e7',\\n        'ropar' => '\u2986',\\n        'Ropf' => '\u211d',\\n        'ropf' => '\ud835\udd63',\\n        'roplus' => '\u2a2e',\\n        'rotimes' => '\u2a35',\\n        'RoundImplies' => '\u2970',\\n        'rpar' => ')',\\n        'rpargt' => '\u2994',\\n        'rppolint' => '\u2a12',\\n        'rrarr' => '\u21c9',\\n        'Rrightarrow' => '\u21db',\\n        'rsaquo' => '\u203a',\\n        'Rscr' => '\u211b',\\n        'rscr' => '\ud835\udcc7',\\n        'Rsh' => '\u21b1',\\n        'rsh' => '\u21b1',\\n        'rsqb' => ']',\\n        'rsquo' => '\u2019',\\n        'rsquor' => '\u2019',\\n        'rthree' => '\u22cc',\\n        'rtimes' => '\u22ca',\\n        'rtri' => '\u25b9',\\n        'rtrie' => '\u22b5',\\n        'rtrif' => '\u25b8',\\n        'rtriltri' => '\u29ce',\\n        'RuleDelayed' => '\u29f4',\\n        'ruluhar' => '\u2968',\\n        'rx' => '\u211e',\\n        'Sacute' => '\u015a',\\n        'sacute' => '\u015b',\\n        'sbquo' => '\u201a',\\n        'Sc' => '\u2abc',\\n        'sc' => '\u227b',\\n        'scap' => '\u2ab8',\\n        'Scaron' => '\u0160',\\n        'scaron' => '\u0161',\\n        'sccue' => '\u227d',\\n        'scE' => '\u2ab4',\\n        'sce' => '\u2ab0',\\n        'Scedil' => '\u015e',\\n        'scedil' => '\u015f',\\n        'Scirc' => '\u015c',\\n        'scirc' => '\u015d',\\n        'scnap' => '\u2aba',\\n        'scnE' => '\u2ab6',\\n        'scnsim' => '\u22e9',\\n        'scpolint' => '\u2a13',\\n        'scsim' => '\u227f',\\n        'Scy' => '\u0421',\\n        'scy' => '\u0441',\\n        'sdot' => '\u22c5',\\n        'sdotb' => '\u22a1',\\n        'sdote' => '\u2a66',\\n        'searhk' => '\u2925',\\n        'seArr' => '\u21d8',\\n        'searr' => '\u2198',\\n        'searrow' => '\u2198',\\n        'sect' => '\u00a7',\\n        'sec' => '\u00a7',\\n        'semi' => ';',\\n        'seswar' => '\u2929',\\n        'setminus' => '\u2216',\\n        'setmn' => '\u2216',\\n        'sext' => '\u2736',\\n        'Sfr' => '\ud835\udd16',\\n        'sfr' => '\ud835\udd30',\\n        'sfrown' => '\u2322',\\n        'sharp' => '\u266f',\\n        'SHCHcy' => '\u0429',\\n        'shchcy' => '\u0449',\\n        'SHcy' => '\u0428',\\n        'shcy' => '\u0448',\\n        'ShortDownArrow' => '\u2193',\\n        'ShortLeftArrow' => '\u2190',\\n        'shortmid' => '\u2223',\\n        'shortparallel' => '\u2225',\\n        'ShortRightArrow' => '\u2192',\\n        'ShortUpArrow' => '\u2191',\\n        'shy' => '\u00ad',\\n        'sh' => '\u00ad',\\n        'Sigma' => '\u03a3',\\n        'sigma' => '\u03c3',\\n        'sigmaf' => '\u03c2',\\n        'sigmav' => '\u03c2',\\n        'sim' => '\u223c',\\n        'simdot' => '\u2a6a',\\n        'sime' => '\u2243',\\n        'simeq' => '\u2243',\\n        'simg' => '\u2a9e',\\n        'simgE' => '\u2aa0',\\n        'siml' => '\u2a9d',\\n        'simlE' => '\u2a9f',\\n        'simne' => '\u2246',\\n        'simplus' => '\u2a24',\\n        'simrarr' => '\u2972',\\n        'slarr' => '\u2190',\\n        'SmallCircle' => '\u2218',\\n        'smallsetminus' => '\u2216',\\n        'smashp' => '\u2a33',\\n        'smeparsl' => '\u29e4',\\n        'smid' => '\u2223',\\n        'smile' => '\u2323',\\n        'smt' => '\u2aaa',\\n        'smte' => '\u2aac',\\n        'smtes' => '\u2aac\ufe00',\\n        'SOFTcy' => '\u042c',\\n        'softcy' => '\u044c',\\n        'sol' => '\/',\\n        'solb' => '\u29c4',\\n        'solbar' => '\u233f',\\n        'Sopf' => '\ud835\udd4a',\\n        'sopf' => '\ud835\udd64',\\n        'spades' => '\u2660',\\n        'spadesuit' => '\u2660',\\n        'spar' => '\u2225',\\n        'sqcap' => '\u2293',\\n        'sqcaps' => '\u2293\ufe00',\\n        'sqcup' => '\u2294',\\n        'sqcups' => '\u2294\ufe00',\\n        'Sqrt' => '\u221a',\\n        'sqsub' => '\u228f',\\n        'sqsube' => '\u2291',\\n        'sqsubset' => '\u228f',\\n        'sqsubseteq' => '\u2291',\\n        'sqsup' => '\u2290',\\n        'sqsupe' => '\u2292',\\n        'sqsupset' => '\u2290',\\n        'sqsupseteq' => '\u2292',\\n        'squ' => '\u25a1',\\n        'Square' => '\u25a1',\\n        'square' => '\u25a1',\\n        'SquareIntersection' => '\u2293',\\n        'SquareSubset' => '\u228f',\\n        'SquareSubsetEqual' => '\u2291',\\n        'SquareSuperset' => '\u2290',\\n        'SquareSupersetEqual' => '\u2292',\\n        'SquareUnion' => '\u2294',\\n        'squarf' => '\u25aa',\\n        'squf' => '\u25aa',\\n        'srarr' => '\u2192',\\n        'Sscr' => '\ud835\udcae',\\n        'sscr' => '\ud835\udcc8',\\n        'ssetmn' => '\u2216',\\n        'ssmile' => '\u2323',\\n        'sstarf' => '\u22c6',\\n        'Star' => '\u22c6',\\n        'star' => '\u2606',\\n        'starf' => '\u2605',\\n        'straightepsilon' => '\u03f5',\\n        'straightphi' => '\u03d5',\\n        'strns' => '\u00af',\\n        'Sub' => '\u22d0',\\n        'sub' => '\u2282',\\n        'subdot' => '\u2abd',\\n        'subE' => '\u2ac5',\\n        'sube' => '\u2286',\\n        'subedot' => '\u2ac3',\\n        'submult' => '\u2ac1',\\n        'subnE' => '\u2acb',\\n        'subne' => '\u228a',\\n        'subplus' => '\u2abf',\\n        'subrarr' => '\u2979',\\n        'Subset' => '\u22d0',\\n        'subset' => '\u2282',\\n        'subseteq' => '\u2286',\\n        'subseteqq' => '\u2ac5',\\n        'SubsetEqual' => '\u2286',\\n        'subsetneq' => '\u228a',\\n        'subsetneqq' => '\u2acb',\\n        'subsim' => '\u2ac7',\\n        'subsub' => '\u2ad5',\\n        'subsup' => '\u2ad3',\\n        'succ' => '\u227b',\\n        'succapprox' => '\u2ab8',\\n        'succcurlyeq' => '\u227d',\\n        'Succeeds' => '\u227b',\\n        'SucceedsEqual' => '\u2ab0',\\n        'SucceedsSlantEqual' => '\u227d',\\n        'SucceedsTilde' => '\u227f',\\n        'succeq' => '\u2ab0',\\n        'succnapprox' => '\u2aba',\\n        'succneqq' => '\u2ab6',\\n        'succnsim' => '\u22e9',\\n        'succsim' => '\u227f',\\n        'SuchThat' => '\u220b',\\n        'Sum' => '\u2211',\\n        'sum' => '\u2211',\\n        'sung' => '\u266a',\\n        'Sup' => '\u22d1',\\n        'sup' => '\u00b3',\\n        'sup1' => '\u00b9',\\n        'sup2' => '\u00b2',\\n        'sup3' => '\u00b3',\\n        'supdot' => '\u2abe',\\n        'supdsub' => '\u2ad8',\\n        'supE' => '\u2ac6',\\n        'supe' => '\u2287',\\n        'supedot' => '\u2ac4',\\n        'Superset' => '\u2283',\\n        'SupersetEqual' => '\u2287',\\n        'suphsol' => '\u27c9',\\n        'suphsub' => '\u2ad7',\\n        'suplarr' => '\u297b',\\n        'supmult' => '\u2ac2',\\n        'supnE' => '\u2acc',\\n        'supne' => '\u228b',\\n        'supplus' => '\u2ac0',\\n        'Supset' => '\u22d1',\\n        'supset' => '\u2283',\\n        'supseteq' => '\u2287',\\n        'supseteqq' => '\u2ac6',\\n        'supsetneq' => '\u228b',\\n        'supsetneqq' => '\u2acc',\\n        'supsim' => '\u2ac8',\\n        'supsub' => '\u2ad4',\\n        'supsup' => '\u2ad6',\\n        'swarhk' => '\u2926',\\n        'swArr' => '\u21d9',\\n        'swarr' => '\u2199',\\n        'swarrow' => '\u2199',\\n        'swnwar' => '\u292a',\\n        'szlig' => '\u00df',\\n        'szli' => '\u00df',\\n        'Tab' => '\\t',\\n        'target' => '\u2316',\\n        'Tau' => '\u03a4',\\n        'tau' => '\u03c4',\\n        'tbrk' => '\u23b4',\\n        'Tcaron' => '\u0164',\\n        'tcaron' => '\u0165',\\n        'Tcedil' => '\u0162',\\n        'tcedil' => '\u0163',\\n        'Tcy' => '\u0422',\\n        'tcy' => '\u0442',\\n        'tdot' => '\u20db',\\n        'telrec' => '\u2315',\\n        'Tfr' => '\ud835\udd17',\\n        'tfr' => '\ud835\udd31',\\n        'there4' => '\u2234',\\n        'Therefore' => '\u2234',\\n        'therefore' => '\u2234',\\n        'Theta' => '\u0398',\\n        'theta' => '\u03b8',\\n        'thetasym' => '\u03d1',\\n        'thetav' => '\u03d1',\\n        'thickapprox' => '\u2248',\\n        'thicksim' => '\u223c',\\n        'ThickSpace' => '\u205f\u200a',\\n        'thinsp' => '\u2009',\\n        'ThinSpace' => '\u2009',\\n        'thkap' => '\u2248',\\n        'thksim' => '\u223c',\\n        'THORN' => '\u00de',\\n        'THOR' => '\u00de',\\n        'thorn' => '\u00fe',\\n        'thor' => '\u00fe',\\n        'Tilde' => '\u223c',\\n        'tilde' => '\u02dc',\\n        'TildeEqual' => '\u2243',\\n        'TildeFullEqual' => '\u2245',\\n        'TildeTilde' => '\u2248',\\n        'times' => '\u00d7',\\n        'time' => '\u00d7',\\n        'timesb' => '\u22a0',\\n        'timesbar' => '\u2a31',\\n        'timesd' => '\u2a30',\\n        'tint' => '\u222d',\\n        'toea' => '\u2928',\\n        'top' => '\u22a4',\\n        'topbot' => '\u2336',\\n        'topcir' => '\u2af1',\\n        'Topf' => '\ud835\udd4b',\\n        'topf' => '\ud835\udd65',\\n        'topfork' => '\u2ada',\\n        'tosa' => '\u2929',\\n        'tprime' => '\u2034',\\n        'TRADE' => '\u2122',\\n        'trade' => '\u2122',\\n        'triangle' => '\u25b5',\\n        'triangledown' => '\u25bf',\\n        'triangleleft' => '\u25c3',\\n        'trianglelefteq' => '\u22b4',\\n        'triangleq' => '\u225c',\\n        'triangleright' => '\u25b9',\\n        'trianglerighteq' => '\u22b5',\\n        'tridot' => '\u25ec',\\n        'trie' => '\u225c',\\n        'triminus' => '\u2a3a',\\n        'TripleDot' => '\u20db',\\n        'triplus' => '\u2a39',\\n        'trisb' => '\u29cd',\\n        'tritime' => '\u2a3b',\\n        'trpezium' => '\u23e2',\\n        'Tscr' => '\ud835\udcaf',\\n        'tscr' => '\ud835\udcc9',\\n        'TScy' => '\u0426',\\n        'tscy' => '\u0446',\\n        'TSHcy' => '\u040b',\\n        'tshcy' => '\u045b',\\n        'Tstrok' => '\u0166',\\n        'tstrok' => '\u0167',\\n        'twixt' => '\u226c',\\n        'twoheadleftarrow' => '\u219e',\\n        'twoheadrightarrow' => '\u21a0',\\n        'Uacute' => '\u00da',\\n        'Uacut' => '\u00da',\\n        'uacute' => '\u00fa',\\n        'uacut' => '\u00fa',\\n        'Uarr' => '\u219f',\\n        'uArr' => '\u21d1',\\n        'uarr' => '\u2191',\\n        'Uarrocir' => '\u2949',\\n        'Ubrcy' => '\u040e',\\n        'ubrcy' => '\u045e',\\n        'Ubreve' => '\u016c',\\n        'ubreve' => '\u016d',\\n        'Ucirc' => '\u00db',\\n        'Ucir' => '\u00db',\\n        'ucirc' => '\u00fb',\\n        'ucir' => '\u00fb',\\n        'Ucy' => '\u0423',\\n        'ucy' => '\u0443',\\n        'udarr' => '\u21c5',\\n        'Udblac' => '\u0170',\\n        'udblac' => '\u0171',\\n        'udhar' => '\u296e',\\n        'ufisht' => '\u297e',\\n        'Ufr' => '\ud835\udd18',\\n        'ufr' => '\ud835\udd32',\\n        'Ugrave' => '\u00d9',\\n        'Ugrav' => '\u00d9',\\n        'ugrave' => '\u00f9',\\n        'ugrav' => '\u00f9',\\n        'uHar' => '\u2963',\\n        'uharl' => '\u21bf',\\n        'uharr' => '\u21be',\\n        'uhblk' => '\u2580',\\n        'ulcorn' => '\u231c',\\n        'ulcorner' => '\u231c',\\n        'ulcrop' => '\u230f',\\n        'ultri' => '\u25f8',\\n        'Umacr' => '\u016a',\\n        'umacr' => '\u016b',\\n        'uml' => '\u00a8',\\n        'um' => '\u00a8',\\n        'UnderBar' => '_',\\n        'UnderBrace' => '\u23df',\\n        'UnderBracket' => '\u23b5',\\n        'UnderParenthesis' => '\u23dd',\\n        'Union' => '\u22c3',\\n        'UnionPlus' => '\u228e',\\n        'Uogon' => '\u0172',\\n        'uogon' => '\u0173',\\n        'Uopf' => '\ud835\udd4c',\\n        'uopf' => '\ud835\udd66',\\n        'UpArrow' => '\u2191',\\n        'Uparrow' => '\u21d1',\\n        'uparrow' => '\u2191',\\n        'UpArrowBar' => '\u2912',\\n        'UpArrowDownArrow' => '\u21c5',\\n        'UpDownArrow' => '\u2195',\\n        'Updownarrow' => '\u21d5',\\n        'updownarrow' => '\u2195',\\n        'UpEquilibrium' => '\u296e',\\n        'upharpoonleft' => '\u21bf',\\n        'upharpoonright' => '\u21be',\\n        'uplus' => '\u228e',\\n        'UpperLeftArrow' => '\u2196',\\n        'UpperRightArrow' => '\u2197',\\n        'Upsi' => '\u03d2',\\n        'upsi' => '\u03c5',\\n        'upsih' => '\u03d2',\\n        'Upsilon' => '\u03a5',\\n        'upsilon' => '\u03c5',\\n        'UpTee' => '\u22a5',\\n        'UpTeeArrow' => '\u21a5',\\n        'upuparrows' => '\u21c8',\\n        'urcorn' => '\u231d',\\n        'urcorner' => '\u231d',\\n        'urcrop' => '\u230e',\\n        'Uring' => '\u016e',\\n        'uring' => '\u016f',\\n        'urtri' => '\u25f9',\\n        'Uscr' => '\ud835\udcb0',\\n        'uscr' => '\ud835\udcca',\\n        'utdot' => '\u22f0',\\n        'Utilde' => '\u0168',\\n        'utilde' => '\u0169',\\n        'utri' => '\u25b5',\\n        'utrif' => '\u25b4',\\n        'uuarr' => '\u21c8',\\n        'Uuml' => '\u00dc',\\n        'Uum' => '\u00dc',\\n        'uuml' => '\u00fc',\\n        'uum' => '\u00fc',\\n        'uwangle' => '\u29a7',\\n        'vangrt' => '\u299c',\\n        'varepsilon' => '\u03f5',\\n        'varkappa' => '\u03f0',\\n        'varnothing' => '\u2205',\\n        'varphi' => '\u03d5',\\n        'varpi' => '\u03d6',\\n        'varpropto' => '\u221d',\\n        'vArr' => '\u21d5',\\n        'varr' => '\u2195',\\n        'varrho' => '\u03f1',\\n        'varsigma' => '\u03c2',\\n        'varsubsetneq' => '\u228a\ufe00',\\n        'varsubsetneqq' => '\u2acb\ufe00',\\n        'varsupsetneq' => '\u228b\ufe00',\\n        'varsupsetneqq' => '\u2acc\ufe00',\\n        'vartheta' => '\u03d1',\\n        'vartriangleleft' => '\u22b2',\\n        'vartriangleright' => '\u22b3',\\n        'Vbar' => '\u2aeb',\\n        'vBar' => '\u2ae8',\\n        'vBarv' => '\u2ae9',\\n        'Vcy' => '\u0412',\\n        'vcy' => '\u0432',\\n        'VDash' => '\u22ab',\\n        'Vdash' => '\u22a9',\\n        'vDash' => '\u22a8',\\n        'vdash' => '\u22a2',\\n        'Vdashl' => '\u2ae6',\\n        'Vee' => '\u22c1',\\n        'vee' => '\u2228',\\n        'veebar' => '\u22bb',\\n        'veeeq' => '\u225a',\\n        'vellip' => '\u22ee',\\n        'Verbar' => '\u2016',\\n        'verbar' => '|',\\n        'Vert' => '\u2016',\\n        'vert' => '|',\\n        'VerticalBar' => '\u2223',\\n        'VerticalLine' => '|',\\n        'VerticalSeparator' => '\u2758',\\n        'VerticalTilde' => '\u2240',\\n        'VeryThinSpace' => '\u200a',\\n        'Vfr' => '\ud835\udd19',\\n        'vfr' => '\ud835\udd33',\\n        'vltri' => '\u22b2',\\n        'vnsub' => '\u2282\u20d2',\\n        'vnsup' => '\u2283\u20d2',\\n        'Vopf' => '\ud835\udd4d',\\n        'vopf' => '\ud835\udd67',\\n        'vprop' => '\u221d',\\n        'vrtri' => '\u22b3',\\n        'Vscr' => '\ud835\udcb1',\\n        'vscr' => '\ud835\udccb',\\n        'vsubnE' => '\u2acb\ufe00',\\n        'vsubne' => '\u228a\ufe00',\\n        'vsupnE' => '\u2acc\ufe00',\\n        'vsupne' => '\u228b\ufe00',\\n        'Vvdash' => '\u22aa',\\n        'vzigzag' => '\u299a',\\n        'Wcirc' => '\u0174',\\n        'wcirc' => '\u0175',\\n        'wedbar' => '\u2a5f',\\n        'Wedge' => '\u22c0',\\n        'wedge' => '\u2227',\\n        'wedgeq' => '\u2259',\\n        'weierp' => '\u2118',\\n        'Wfr' => '\ud835\udd1a',\\n        'wfr' => '\ud835\udd34',\\n        'Wopf' => '\ud835\udd4e',\\n        'wopf' => '\ud835\udd68',\\n        'wp' => '\u2118',\\n        'wr' => '\u2240',\\n        'wreath' => '\u2240',\\n        'Wscr' => '\ud835\udcb2',\\n        'wscr' => '\ud835\udccc',\\n        'xcap' => '\u22c2',\\n        'xcirc' => '\u25ef',\\n        'xcup' => '\u22c3',\\n        'xdtri' => '\u25bd',\\n        'Xfr' => '\ud835\udd1b',\\n        'xfr' => '\ud835\udd35',\\n        'xhArr' => '\u27fa',\\n        'xharr' => '\u27f7',\\n        'Xi' => '\u039e',\\n        'xi' => '\u03be',\\n        'xlArr' => '\u27f8',\\n        'xlarr' => '\u27f5',\\n        'xmap' => '\u27fc',\\n        'xnis' => '\u22fb',\\n        'xodot' => '\u2a00',\\n        'Xopf' => '\ud835\udd4f',\\n        'xopf' => '\ud835\udd69',\\n        'xoplus' => '\u2a01',\\n        'xotime' => '\u2a02',\\n        'xrArr' => '\u27f9',\\n        'xrarr' => '\u27f6',\\n        'Xscr' => '\ud835\udcb3',\\n        'xscr' => '\ud835\udccd',\\n        'xsqcup' => '\u2a06',\\n        'xuplus' => '\u2a04',\\n        'xutri' => '\u25b3',\\n        'xvee' => '\u22c1',\\n        'xwedge' => '\u22c0',\\n        'Yacute' => '\u00dd',\\n        'Yacut' => '\u00dd',\\n        'yacute' => '\u00fd',\\n        'yacut' => '\u00fd',\\n        'YAcy' => '\u042f',\\n        'yacy' => '\u044f',\\n        'Ycirc' => '\u0176',\\n        'ycirc' => '\u0177',\\n        'Ycy' => '\u042b',\\n        'ycy' => '\u044b',\\n        'yen' => '\u00a5',\\n        'ye' => '\u00a5',\\n        'Yfr' => '\ud835\udd1c',\\n        'yfr' => '\ud835\udd36',\\n        'YIcy' => '\u0407',\\n        'yicy' => '\u0457',\\n        'Yopf' => '\ud835\udd50',\\n        'yopf' => '\ud835\udd6a',\\n        'Yscr' => '\ud835\udcb4',\\n        'yscr' => '\ud835\udcce',\\n        'YUcy' => '\u042e',\\n        'yucy' => '\u044e',\\n        'Yuml' => '\u0178',\\n        'yuml' => '\u00ff',\\n        'yum' => '\u00ff',\\n        'Zacute' => '\u0179',\\n        'zacute' => '\u017a',\\n        'Zcaron' => '\u017d',\\n        'zcaron' => '\u017e',\\n        'Zcy' => '\u0417',\\n        'zcy' => '\u0437',\\n        'Zdot' => '\u017b',\\n        'zdot' => '\u017c',\\n        'zeetrf' => '\u2128',\\n        'ZeroWidthSpace' => '\u200b',\\n        'Zeta' => '\u0396',\\n        'zeta' => '\u03b6',\\n        'Zfr' => '\u2128',\\n        'zfr' => '\ud835\udd37',\\n        'ZHcy' => '\u0416',\\n        'zhcy' => '\u0436',\\n        'zigrarr' => '\u21dd',\\n        'Zopf' => '\u2124',\\n        'zopf' => '\ud835\udd6b',\\n        'Zscr' => '\ud835\udcb5',\\n        'zscr' => '\ud835\udccf',\\n        'zwj' => '\u200d',\\n        'zwnj' => '\u200c',\\n    );\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/InputStream.php\",\"ext\":\"php\",\"size\":2499,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/**\\n * Interface for stream readers.\\n *\\n * The parser only reads from streams. Various input sources can write\\n * an adapater to this InputStream.\\n *\\n * Currently provided InputStream implementations include\\n * FileInputStream and StringInputStream.\\n *\\n * @deprecated since 2.4, to remove in 3.0. Use a string in the scanner instead.\\n *\/\\ninterface InputStream extends \\\\Iterator\\n{\\n    \/**\\n     * Returns the current line that is being consumed.\\n     *\\n     * TODO: Move this to the scanner.\\n     *\/\\n    public function currentLine();\\n\\n    \/**\\n     * Returns the current column of the current line that the tokenizer is at.\\n     *\\n     * Newlines are column 0. The first char after a newline is column 1.\\n     *\\n     * @TODO Move this to the scanner.\\n     *\\n     * @return int The column number.\\n     *\/\\n    public function columnOffset();\\n\\n    \/**\\n     * Get all characters until EOF.\\n     *\\n     * This consumes characters until the EOF.\\n     *\/\\n    public function remainingChars();\\n\\n    \/**\\n     * Read to a particular match (or until $max bytes are consumed).\\n     *\\n     * This operates on byte sequences, not characters.\\n     *\\n     * Matches as far as possible until we reach a certain set of bytes\\n     * and returns the matched substring.\\n     *\\n     * @see strcspn\\n     *\\n     * @param string $bytes Bytes to match.\\n     * @param int    $max   Maximum number of bytes to scan.\\n     *\\n     * @return mixed Index or false if no match is found. You should use strong\\n     *               equality when checking the result, since index could be 0.\\n     *\/\\n    public function charsUntil($bytes, $max = null);\\n\\n    \/**\\n     * Returns the string so long as $bytes matches.\\n     *\\n     * Matches as far as possible with a certain set of bytes\\n     * and returns the matched substring.\\n     *\\n     * @see strspn\\n     *\\n     * @param string $bytes A mask of bytes to match. If ANY byte in this mask matches the\\n     *                      current char, the pointer advances and the char is part of the\\n     *                      substring.\\n     * @param int    $max   The max number of chars to read.\\n     *\/\\n    public function charsWhile($bytes, $max = null);\\n\\n    \/**\\n     * Unconsume one character.\\n     *\\n     * @param int $howMany The number of characters to move the pointer back.\\n     *\/\\n    public function unconsume($howMany = 1);\\n\\n    \/**\\n     * Retrieve the next character without advancing the pointer.\\n     *\/\\n    public function peek();\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/DOMTreeBuilder.php\",\"ext\":\"php\",\"size\":23333,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\nuse Masterminds\\\\HTML5\\\\Elements;\\nuse Masterminds\\\\HTML5\\\\InstructionProcessor;\\n\\n\/**\\n * Create an HTML5 DOM tree from events.\\n *\\n * This attempts to create a DOM from events emitted by a parser. This\\n * attempts (but does not guarantee) to up-convert older HTML documents\\n * to HTML5. It does this by applying HTML5's rules, but it will not\\n * change the architecture of the document itself.\\n *\\n * Many of the error correction and quirks features suggested in the specification\\n * are implemented herein; however, not all of them are. Since we do not\\n * assume a graphical user agent, no presentation-specific logic is conducted\\n * during tree building.\\n *\\n * FIXME: The present tree builder does not exactly follow the state machine rules\\n * for insert modes as outlined in the HTML5 spec. The processor needs to be\\n * re-written to accomodate this. See, for example, the Go language HTML5\\n * parser.\\n *\/\\nclass DOMTreeBuilder implements EventHandler\\n{\\n    \/**\\n     * Defined in http:\/\/www.w3.org\/TR\/html51\/infrastructure.html#html-namespace-0.\\n     *\/\\n    const NAMESPACE_HTML = 'http:\/\/www.w3.org\/1999\/xhtml';\\n\\n    const NAMESPACE_MATHML = 'http:\/\/www.w3.org\/1998\/Math\/MathML';\\n\\n    const NAMESPACE_SVG = 'http:\/\/www.w3.org\/2000\/svg';\\n\\n    const NAMESPACE_XLINK = 'http:\/\/www.w3.org\/1999\/xlink';\\n\\n    const NAMESPACE_XML = 'http:\/\/www.w3.org\/XML\/1998\/namespace';\\n\\n    const NAMESPACE_XMLNS = 'http:\/\/www.w3.org\/2000\/xmlns\/';\\n\\n    const OPT_DISABLE_HTML_NS = 'disable_html_ns';\\n\\n    const OPT_TARGET_DOC = 'target_document';\\n\\n    const OPT_IMPLICIT_NS = 'implicit_namespaces';\\n\\n    \/**\\n     * Holds the HTML5 element names that causes a namespace switch.\\n     *\\n     * @var array\\n     *\/\\n    protected $nsRoots = array(\\n        'html' => self::NAMESPACE_HTML,\\n        'svg' => self::NAMESPACE_SVG,\\n        'math' => self::NAMESPACE_MATHML,\\n    );\\n\\n    \/**\\n     * Holds the always available namespaces (which does not require the XMLNS declaration).\\n     *\\n     * @var array\\n     *\/\\n    protected $implicitNamespaces = array(\\n        'xml' => self::NAMESPACE_XML,\\n        'xmlns' => self::NAMESPACE_XMLNS,\\n        'xlink' => self::NAMESPACE_XLINK,\\n    );\\n\\n    \/**\\n     * Holds a stack of currently active namespaces.\\n     *\\n     * @var array\\n     *\/\\n    protected $nsStack = array();\\n\\n    \/**\\n     * Holds the number of namespaces declared by a node.\\n     *\\n     * @var array\\n     *\/\\n    protected $pushes = array();\\n\\n    \/**\\n     * Defined in 8.2.5.\\n     *\/\\n    const IM_INITIAL = 0;\\n\\n    const IM_BEFORE_HTML = 1;\\n\\n    const IM_BEFORE_HEAD = 2;\\n\\n    const IM_IN_HEAD = 3;\\n\\n    const IM_IN_HEAD_NOSCRIPT = 4;\\n\\n    const IM_AFTER_HEAD = 5;\\n\\n    const IM_IN_BODY = 6;\\n\\n    const IM_TEXT = 7;\\n\\n    const IM_IN_TABLE = 8;\\n\\n    const IM_IN_TABLE_TEXT = 9;\\n\\n    const IM_IN_CAPTION = 10;\\n\\n    const IM_IN_COLUMN_GROUP = 11;\\n\\n    const IM_IN_TABLE_BODY = 12;\\n\\n    const IM_IN_ROW = 13;\\n\\n    const IM_IN_CELL = 14;\\n\\n    const IM_IN_SELECT = 15;\\n\\n    const IM_IN_SELECT_IN_TABLE = 16;\\n\\n    const IM_AFTER_BODY = 17;\\n\\n    const IM_IN_FRAMESET = 18;\\n\\n    const IM_AFTER_FRAMESET = 19;\\n\\n    const IM_AFTER_AFTER_BODY = 20;\\n\\n    const IM_AFTER_AFTER_FRAMESET = 21;\\n\\n    const IM_IN_SVG = 22;\\n\\n    const IM_IN_MATHML = 23;\\n\\n    protected $options = array();\\n\\n    protected $stack = array();\\n\\n    protected $current; \/\/ Pointer in the tag hierarchy.\\n    protected $rules;\\n    protected $doc;\\n\\n    protected $frag;\\n\\n    protected $processor;\\n\\n    protected $insertMode = 0;\\n\\n    \/**\\n     * Track if we are in an element that allows only inline child nodes.\\n     *\\n     * @var string|null\\n     *\/\\n    protected $onlyInline;\\n\\n    \/**\\n     * Quirks mode is enabled by default.\\n     * Any document that is missing the DT will be considered to be in quirks mode.\\n     *\/\\n    protected $quirks = true;\\n\\n    protected $errors = array();\\n\\n    public function __construct($isFragment = false, array $options = array())\\n    {\\n        $this->options = $options;\\n\\n        if (isset($options[self::OPT_TARGET_DOC])) {\\n            $this->doc = $options[self::OPT_TARGET_DOC];\\n        } else {\\n            $impl = new \\\\DOMImplementation();\\n            \/\/ XXX:\\n            \/\/ Create the doctype. For now, we are always creating HTML5\\n            \/\/ documents, and attempting to up-convert any older DTDs to HTML5.\\n            $dt = $impl->createDocumentType('html');\\n            \/\/ $this->doc = \\\\DOMImplementation::createDocument(NULL, 'html', $dt);\\n            $this->doc = $impl->createDocument(null, '', $dt);\\n            $this->doc->encoding = !empty($options['encoding']) ? $options['encoding'] : 'UTF-8';\\n        }\\n\\n        $this->errors = array();\\n\\n        $this->current = $this->doc; \/\/ ->documentElement;\\n\\n        \/\/ Create a rules engine for tags.\\n        $this->rules = new TreeBuildingRules();\\n\\n        $implicitNS = array();\\n        if (isset($this->options[self::OPT_IMPLICIT_NS])) {\\n            $implicitNS = $this->options[self::OPT_IMPLICIT_NS];\\n        } elseif (isset($this->options['implicitNamespaces'])) {\\n            $implicitNS = $this->options['implicitNamespaces'];\\n        }\\n\\n        \/\/ Fill $nsStack with the defalut HTML5 namespaces, plus the \\\"implicitNamespaces\\\" array taken form $options\\n        array_unshift($this->nsStack, $implicitNS + array('' => self::NAMESPACE_HTML) + $this->implicitNamespaces);\\n\\n        if ($isFragment) {\\n            $this->insertMode = static::IM_IN_BODY;\\n            $this->frag = $this->doc->createDocumentFragment();\\n            $this->current = $this->frag;\\n        }\\n    }\\n\\n    \/**\\n     * Get the document.\\n     *\/\\n    public function document()\\n    {\\n        return $this->doc;\\n    }\\n\\n    \/**\\n     * Get the DOM fragment for the body.\\n     *\\n     * This returns a DOMNodeList because a fragment may have zero or more\\n     * DOMNodes at its root.\\n     *\\n     * @see http:\/\/www.w3.org\/TR\/2012\/CR-html5-20121217\/syntax.html#concept-frag-parse-context\\n     *\\n     * @return \\\\DOMDocumentFragment\\n     *\/\\n    public function fragment()\\n    {\\n        return $this->frag;\\n    }\\n\\n    \/**\\n     * Provide an instruction processor.\\n     *\\n     * This is used for handling Processor Instructions as they are\\n     * inserted. If omitted, PI's are inserted directly into the DOM tree.\\n     *\/\\n    public function setInstructionProcessor(InstructionProcessor $proc)\\n    {\\n        $this->processor = $proc;\\n    }\\n\\n    public function doctype($name, $idType = 0, $id = null, $quirks = false)\\n    {\\n        \/\/ This is used solely for setting quirks mode. Currently we don't\\n        \/\/ try to preserve the inbound DT. We convert it to HTML5.\\n        $this->quirks = $quirks;\\n\\n        if ($this->insertMode > static::IM_INITIAL) {\\n            $this->parseError('Illegal placement of DOCTYPE tag. Ignoring: ' . $name);\\n\\n            return;\\n        }\\n\\n        $this->insertMode = static::IM_BEFORE_HTML;\\n    }\\n\\n    \/**\\n     * Process the start tag.\\n     *\\n     * @todo - XMLNS namespace handling (we need to parse, even if it's not valid)\\n     *       - XLink, MathML and SVG namespace handling\\n     *       - Omission rules: 8.1.2.4 Optional tags\\n     *\\n     * @param string $name\\n     * @param array  $attributes\\n     * @param bool   $selfClosing\\n     *\\n     * @return int\\n     *\/\\n    public function startTag($name, $attributes = array(), $selfClosing = false)\\n    {\\n        $lname = $this->normalizeTagName($name);\\n\\n        \/\/ Make sure we have an html element.\\n        if (!$this->doc->documentElement && 'html' !== $name && !$this->frag) {\\n            $this->startTag('html');\\n        }\\n\\n        \/\/ Set quirks mode if we're at IM_INITIAL with no doctype.\\n        if ($this->insertMode === static::IM_INITIAL) {\\n            $this->quirks = true;\\n            $this->parseError('No DOCTYPE specified.');\\n        }\\n\\n        \/\/ SPECIAL TAG HANDLING:\\n        \/\/ Spec says do this, and \\\"don't ask.\\\"\\n        \/\/ find the spec where this is defined... looks problematic\\n        if ('image' === $name && !($this->insertMode === static::IM_IN_SVG || $this->insertMode === static::IM_IN_MATHML)) {\\n            $name = 'img';\\n        }\\n\\n        \/\/ Autoclose p tags where appropriate.\\n        if ($this->insertMode >= static::IM_IN_BODY && Elements::isA($name, Elements::AUTOCLOSE_P)) {\\n            $this->autoclose('p');\\n        }\\n\\n        \/\/ Set insert mode:\\n        switch ($name) {\\n            case 'html':\\n                $this->insertMode = static::IM_BEFORE_HEAD;\\n                break;\\n            case 'head':\\n                if ($this->insertMode > static::IM_BEFORE_HEAD) {\\n                    $this->parseError('Unexpected head tag outside of head context.');\\n                } else {\\n                    $this->insertMode = static::IM_IN_HEAD;\\n                }\\n                break;\\n            case 'body':\\n                $this->insertMode = static::IM_IN_BODY;\\n                break;\\n            case 'svg':\\n                $this->insertMode = static::IM_IN_SVG;\\n                break;\\n            case 'math':\\n                $this->insertMode = static::IM_IN_MATHML;\\n                break;\\n            case 'noscript':\\n                if ($this->insertMode === static::IM_IN_HEAD) {\\n                    $this->insertMode = static::IM_IN_HEAD_NOSCRIPT;\\n                }\\n                break;\\n        }\\n\\n        \/\/ Special case handling for SVG.\\n        if ($this->insertMode === static::IM_IN_SVG) {\\n            $lname = Elements::normalizeSvgElement($lname);\\n        }\\n\\n        $pushes = 0;\\n        \/\/ when we found a tag thats appears inside $nsRoots, we have to switch the defalut namespace\\n        if (isset($this->nsRoots[$lname]) && $this->nsStack[0][''] !== $this->nsRoots[$lname]) {\\n            array_unshift($this->nsStack, array(\\n                '' => $this->nsRoots[$lname],\\n            ) + $this->nsStack[0]);\\n            ++$pushes;\\n        }\\n        $needsWorkaround = false;\\n        if (isset($this->options['xmlNamespaces']) && $this->options['xmlNamespaces']) {\\n            \/\/ when xmlNamespaces is true a and we found a 'xmlns' or 'xmlns:*' attribute, we should add a new item to the $nsStack\\n            foreach ($attributes as $aName => $aVal) {\\n                if ('xmlns' === $aName) {\\n                    $needsWorkaround = $aVal;\\n                    array_unshift($this->nsStack, array(\\n                        '' => $aVal,\\n                    ) + $this->nsStack[0]);\\n                    ++$pushes;\\n                } elseif ('xmlns' === (($pos = strpos($aName, ':')) ? substr($aName, 0, $pos) : '')) {\\n                    array_unshift($this->nsStack, array(\\n                        substr($aName, $pos + 1) => $aVal,\\n                    ) + $this->nsStack[0]);\\n                    ++$pushes;\\n                }\\n            }\\n        }\\n\\n        if ($this->onlyInline && Elements::isA($lname, Elements::BLOCK_TAG)) {\\n            $this->autoclose($this->onlyInline);\\n            $this->onlyInline = null;\\n        }\\n\\n        \/\/ some elements as table related tags might have optional end tags that force us to auto close multiple tags\\n        \/\/ https:\/\/www.w3.org\/TR\/html401\/struct\/tables.html\\n        if ($this->current instanceof \\\\DOMElement && isset(Elements::$optionalEndElementsParentsToClose[$lname])) {\\n            foreach (Elements::$optionalEndElementsParentsToClose[$lname] as $parentElName) {\\n                if ($this->current instanceof \\\\DOMElement && $this->current->tagName === $parentElName) {\\n                    $this->autoclose($parentElName);\\n                }\\n            }\\n        }\\n\\n        try {\\n            $prefix = ($pos = strpos($lname, ':')) ? substr($lname, 0, $pos) : '';\\n\\n            if (false !== $needsWorkaround) {\\n                $xml = \\\"<$lname xmlns=\\\\\\\"$needsWorkaround\\\\\\\" \\\" . (strlen($prefix) && isset($this->nsStack[0][$prefix]) ? (\\\"xmlns:$prefix=\\\\\\\"\\\" . $this->nsStack[0][$prefix] . '\\\"') : '') . '\/>';\\n\\n                $frag = new \\\\DOMDocument('1.0', 'UTF-8');\\n                $frag->loadXML($xml);\\n\\n                $ele = $this->doc->importNode($frag->documentElement, true);\\n            } else {\\n                if (!isset($this->nsStack[0][$prefix]) || ('' === $prefix && isset($this->options[self::OPT_DISABLE_HTML_NS]) && $this->options[self::OPT_DISABLE_HTML_NS])) {\\n                    $ele = $this->doc->createElement($lname);\\n                } else {\\n                    $ele = $this->doc->createElementNS($this->nsStack[0][$prefix], $lname);\\n                }\\n            }\\n        } catch (\\\\DOMException $e) {\\n            $this->parseError(\\\"Illegal tag name: <$lname>. Replaced with <invalid>.\\\");\\n            $ele = $this->doc->createElement('invalid');\\n        }\\n\\n        if (Elements::isA($lname, Elements::BLOCK_ONLY_INLINE)) {\\n            $this->onlyInline = $lname;\\n        }\\n\\n        \/\/ When we add some namespacess, we have to track them. Later, when \\\"endElement\\\" is invoked, we have to remove them.\\n        \/\/ When we are on a void tag, we do not need to care about namesapce nesting.\\n        if ($pushes > 0 && !Elements::isA($name, Elements::VOID_TAG)) {\\n            \/\/ PHP tends to free the memory used by DOM,\\n            \/\/ to avoid spl_object_hash collisions whe have to avoid garbage collection of $ele storing it into $pushes\\n            \/\/ see https:\/\/bugs.php.net\/bug.php?id=67459\\n            $this->pushes[spl_object_hash($ele)] = array($pushes, $ele);\\n        }\\n\\n        foreach ($attributes as $aName => $aVal) {\\n            \/\/ xmlns attributes can't be set\\n            if ('xmlns' === $aName) {\\n                continue;\\n            }\\n\\n            if ($this->insertMode === static::IM_IN_SVG) {\\n                $aName = Elements::normalizeSvgAttribute($aName);\\n            } elseif ($this->insertMode === static::IM_IN_MATHML) {\\n                $aName = Elements::normalizeMathMlAttribute($aName);\\n            }\\n\\n            $aVal = (string) $aVal;\\n\\n            try {\\n                $prefix = ($pos = strpos($aName, ':')) ? substr($aName, 0, $pos) : false;\\n\\n                if ('xmlns' === $prefix) {\\n                    $ele->setAttributeNS(self::NAMESPACE_XMLNS, $aName, $aVal);\\n                } elseif (false !== $prefix && isset($this->nsStack[0][$prefix])) {\\n                    $ele->setAttributeNS($this->nsStack[0][$prefix], $aName, $aVal);\\n                } else {\\n                    $ele->setAttribute($aName, $aVal);\\n                }\\n            } catch (\\\\DOMException $e) {\\n                $this->parseError(\\\"Illegal attribute name for tag $name. Ignoring: $aName\\\");\\n                continue;\\n            }\\n\\n            \/\/ This is necessary on a non-DTD schema, like HTML5.\\n            if ('id' === $aName) {\\n                $ele->setIdAttribute('id', true);\\n            }\\n        }\\n\\n        if ($this->frag !== $this->current && $this->rules->hasRules($name)) {\\n            \/\/ Some elements have special processing rules. Handle those separately.\\n            $this->current = $this->rules->evaluate($ele, $this->current);\\n        } else {\\n            \/\/ Otherwise, it's a standard element.\\n            $this->current->appendChild($ele);\\n\\n            if (!Elements::isA($name, Elements::VOID_TAG)) {\\n                $this->current = $ele;\\n            }\\n\\n            \/\/ Self-closing tags should only be respected on foreign elements\\n            \/\/ (and are implied on void elements)\\n            \/\/ See: https:\/\/www.w3.org\/TR\/html5\/syntax.html#start-tags\\n            if (Elements::isHtml5Element($name)) {\\n                $selfClosing = false;\\n            }\\n        }\\n\\n        \/\/ This is sort of a last-ditch attempt to correct for cases where no head\/body\\n        \/\/ elements are provided.\\n        if ($this->insertMode <= static::IM_BEFORE_HEAD && 'head' !== $name && 'html' !== $name) {\\n            $this->insertMode = static::IM_IN_BODY;\\n        }\\n\\n        \/\/ When we are on a void tag, we do not need to care about namesapce nesting,\\n        \/\/ but we have to remove the namespaces pushed to $nsStack.\\n        if ($pushes > 0 && Elements::isA($name, Elements::VOID_TAG)) {\\n            \/\/ remove the namespaced definded by current node\\n            for ($i = 0; $i < $pushes; ++$i) {\\n                array_shift($this->nsStack);\\n            }\\n        }\\n\\n        if ($selfClosing) {\\n            $this->endTag($name);\\n        }\\n\\n        \/\/ Return the element mask, which the tokenizer can then use to set\\n        \/\/ various processing rules.\\n        return Elements::element($name);\\n    }\\n\\n    public function endTag($name)\\n    {\\n        $lname = $this->normalizeTagName($name);\\n\\n        \/\/ Special case within 12.2.6.4.7: An end tag whose tag name is \\\"br\\\" should be treated as an opening tag\\n        if ('br' === $name) {\\n            $this->parseError('Closing tag encountered for void element br.');\\n\\n            $this->startTag('br');\\n        }\\n        \/\/ Ignore closing tags for other unary elements.\\n        elseif (Elements::isA($name, Elements::VOID_TAG)) {\\n            return;\\n        }\\n\\n        if ($this->insertMode <= static::IM_BEFORE_HTML) {\\n            \/\/ 8.2.5.4.2\\n            if (in_array($name, array(\\n                'html',\\n                'br',\\n                'head',\\n                'title',\\n            ))) {\\n                $this->startTag('html');\\n                $this->endTag($name);\\n                $this->insertMode = static::IM_BEFORE_HEAD;\\n\\n                return;\\n            }\\n\\n            \/\/ Ignore the tag.\\n            $this->parseError('Illegal closing tag at global scope.');\\n\\n            return;\\n        }\\n\\n        \/\/ Special case handling for SVG.\\n        if ($this->insertMode === static::IM_IN_SVG) {\\n            $lname = Elements::normalizeSvgElement($lname);\\n        }\\n\\n        $cid = spl_object_hash($this->current);\\n\\n        \/\/ XXX: HTML has no parent. What do we do, though,\\n        \/\/ if this element appears in the wrong place?\\n        if ('html' === $lname) {\\n            return;\\n        }\\n\\n        \/\/ remove the namespaced definded by current node\\n        if (isset($this->pushes[$cid])) {\\n            for ($i = 0; $i < $this->pushes[$cid][0]; ++$i) {\\n                array_shift($this->nsStack);\\n            }\\n            unset($this->pushes[$cid]);\\n        }\\n\\n        if (!$this->autoclose($lname)) {\\n            $this->parseError('Could not find closing tag for ' . $lname);\\n        }\\n\\n        switch ($lname) {\\n            case 'head':\\n                $this->insertMode = static::IM_AFTER_HEAD;\\n                break;\\n            case 'body':\\n                $this->insertMode = static::IM_AFTER_BODY;\\n                break;\\n            case 'svg':\\n            case 'mathml':\\n                $this->insertMode = static::IM_IN_BODY;\\n                break;\\n        }\\n    }\\n\\n    public function comment($cdata)\\n    {\\n        \/\/ TODO: Need to handle case where comment appears outside of the HTML tag.\\n        $node = $this->doc->createComment($cdata);\\n        $this->current->appendChild($node);\\n    }\\n\\n    public function text($data)\\n    {\\n        \/\/ XXX: Hmmm.... should we really be this strict?\\n        if ($this->insertMode < static::IM_IN_HEAD) {\\n            \/\/ Per '8.2.5.4.3 The \\\"before head\\\" insertion mode' the characters\\n            \/\/ \\\" \\\\t\\\\n\\\\r\\\\f\\\" should be ignored but no mention of a parse error. This is\\n            \/\/ practical as most documents contain these characters. Other text is not\\n            \/\/ expected here so recording a parse error is necessary.\\n            $dataTmp = trim($data, \\\" \\\\t\\\\n\\\\r\\\\f\\\");\\n            if (!empty($dataTmp)) {\\n                \/\/ fprintf(STDOUT, \\\"Unexpected insert mode: %d\\\", $this->insertMode);\\n                $this->parseError('Unexpected text. Ignoring: ' . $dataTmp);\\n            }\\n\\n            return;\\n        }\\n        \/\/ fprintf(STDOUT, \\\"Appending text %s.\\\", $data);\\n        $node = $this->doc->createTextNode($data);\\n        $this->current->appendChild($node);\\n    }\\n\\n    public function eof()\\n    {\\n        \/\/ If the $current isn't the $root, do we need to do anything?\\n    }\\n\\n    public function parseError($msg, $line = 0, $col = 0)\\n    {\\n        $this->errors[] = sprintf('Line %d, Col %d: %s', $line, $col, $msg);\\n    }\\n\\n    public function getErrors()\\n    {\\n        return $this->errors;\\n    }\\n\\n    public function cdata($data)\\n    {\\n        $node = $this->doc->createCDATASection($data);\\n        $this->current->appendChild($node);\\n    }\\n\\n    public function processingInstruction($name, $data = null)\\n    {\\n        \/\/ XXX: Ignore initial XML declaration, per the spec.\\n        if ($this->insertMode === static::IM_INITIAL && 'xml' === strtolower($name)) {\\n            return;\\n        }\\n\\n        \/\/ Important: The processor may modify the current DOM tree however it sees fit.\\n        if ($this->processor instanceof InstructionProcessor) {\\n            $res = $this->processor->process($this->current, $name, $data);\\n            if (!empty($res)) {\\n                $this->current = $res;\\n            }\\n\\n            return;\\n        }\\n\\n        \/\/ Otherwise, this is just a dumb PI element.\\n        $node = $this->doc->createProcessingInstruction($name, $data);\\n\\n        $this->current->appendChild($node);\\n    }\\n\\n    \/\/ ==========================================================================\\n    \/\/ UTILITIES\\n    \/\/ ==========================================================================\\n\\n    \/**\\n     * Apply normalization rules to a tag name.\\n     * See sections 2.9 and 8.1.2.\\n     *\\n     * @param string $tagName\\n     *\\n     * @return string The normalized tag name.\\n     *\/\\n    protected function normalizeTagName($tagName)\\n    {\\n        \/*\\n         * Section 2.9 suggests that we should not do this. if (strpos($name, ':') !== false) { \/\/ We know from the grammar that there must be at least one other \/\/ char besides :, since : is not a legal tag start. $parts = explode(':', $name); return array_pop($parts); }\\n         *\/\\n        return $tagName;\\n    }\\n\\n    protected function quirksTreeResolver($name)\\n    {\\n        throw new \\\\Exception('Not implemented.');\\n    }\\n\\n    \/**\\n     * Automatically climb the tree and close the closest node with the matching $tag.\\n     *\\n     * @param string $tagName\\n     *\\n     * @return bool\\n     *\/\\n    protected function autoclose($tagName)\\n    {\\n        $working = $this->current;\\n        do {\\n            if (XML_ELEMENT_NODE !== $working->nodeType) {\\n                return false;\\n            }\\n            if ($working->tagName === $tagName) {\\n                $this->current = $working->parentNode;\\n\\n                return true;\\n            }\\n        } while ($working = $working->parentNode);\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Checks if the given tagname is an ancestor of the present candidate.\\n     *\\n     * If $this->current or anything above $this->current matches the given tag\\n     * name, this returns true.\\n     *\\n     * @param string $tagName\\n     *\\n     * @return bool\\n     *\/\\n    protected function isAncestor($tagName)\\n    {\\n        $candidate = $this->current;\\n        while (XML_ELEMENT_NODE === $candidate->nodeType) {\\n            if ($candidate->tagName === $tagName) {\\n                return true;\\n            }\\n            $candidate = $candidate->parentNode;\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Returns true if the immediate parent element is of the given tagname.\\n     *\\n     * @param string $tagName\\n     *\\n     * @return bool\\n     *\/\\n    protected function isParent($tagName)\\n    {\\n        return $this->current->tagName === $tagName;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/Tokenizer.php\",\"ext\":\"php\",\"size\":36581,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\nuse Masterminds\\\\HTML5\\\\Elements;\\n\\n\/**\\n * The HTML5 tokenizer.\\n *\\n * The tokenizer's role is reading data from the scanner and gathering it into\\n * semantic units. From the tokenizer, data is emitted to an event handler,\\n * which may (for example) create a DOM tree.\\n *\\n * The HTML5 specification has a detailed explanation of tokenizing HTML5. We\\n * follow that specification to the maximum extent that we can. If you find\\n * a discrepancy that is not documented, please file a bug and\/or submit a\\n * patch.\\n *\\n * This tokenizer is implemented as a recursive descent parser.\\n *\\n * Within the API documentation, you may see references to the specific section\\n * of the HTML5 spec that the code attempts to reproduce. Example: 8.2.4.1.\\n * This refers to section 8.2.4.1 of the HTML5 CR specification.\\n *\\n * @see http:\/\/www.w3.org\/TR\/2012\/CR-html5-20121217\/\\n *\/\\nclass Tokenizer\\n{\\n    protected $scanner;\\n\\n    protected $events;\\n\\n    protected $tok;\\n\\n    \/**\\n     * Buffer for text.\\n     *\/\\n    protected $text = '';\\n\\n    \/\/ When this goes to false, the parser stops.\\n    protected $carryOn = true;\\n\\n    protected $textMode = 0; \/\/ TEXTMODE_NORMAL;\\n    protected $untilTag = null;\\n\\n    const CONFORMANT_XML = 'xml';\\n    const CONFORMANT_HTML = 'html';\\n    protected $mode = self::CONFORMANT_HTML;\\n\\n    \/**\\n     * Create a new tokenizer.\\n     *\\n     * Typically, parsing a document involves creating a new tokenizer, giving\\n     * it a scanner (input) and an event handler (output), and then calling\\n     * the Tokenizer::parse() method.`\\n     *\\n     * @param Scanner      $scanner      A scanner initialized with an input stream.\\n     * @param EventHandler $eventHandler An event handler, initialized and ready to receive events.\\n     * @param string       $mode\\n     *\/\\n    public function __construct($scanner, $eventHandler, $mode = self::CONFORMANT_HTML)\\n    {\\n        $this->scanner = $scanner;\\n        $this->events = $eventHandler;\\n        $this->mode = $mode;\\n    }\\n\\n    \/**\\n     * Begin parsing.\\n     *\\n     * This will begin scanning the document, tokenizing as it goes.\\n     * Tokens are emitted into the event handler.\\n     *\\n     * Tokenizing will continue until the document is completely\\n     * read. Errors are emitted into the event handler, but\\n     * the parser will attempt to continue parsing until the\\n     * entire input stream is read.\\n     *\/\\n    public function parse()\\n    {\\n        do {\\n            $this->consumeData();\\n            \/\/ FIXME: Add infinite loop protection.\\n        } while ($this->carryOn);\\n    }\\n\\n    \/**\\n     * Set the text mode for the character data reader.\\n     *\\n     * HTML5 defines three different modes for reading text:\\n     * - Normal: Read until a tag is encountered.\\n     * - RCDATA: Read until a tag is encountered, but skip a few otherwise-\\n     * special characters.\\n     * - Raw: Read until a special closing tag is encountered (viz. pre, script)\\n     *\\n     * This allows those modes to be set.\\n     *\\n     * Normally, setting is done by the event handler via a special return code on\\n     * startTag(), but it can also be set manually using this function.\\n     *\\n     * @param int    $textmode One of Elements::TEXT_*.\\n     * @param string $untilTag The tag that should stop RAW or RCDATA mode. Normal mode does not\\n     *                         use this indicator.\\n     *\/\\n    public function setTextMode($textmode, $untilTag = null)\\n    {\\n        $this->textMode = $textmode & (Elements::TEXT_RAW | Elements::TEXT_RCDATA);\\n        $this->untilTag = $untilTag;\\n    }\\n\\n    \/**\\n     * Consume a character and make a move.\\n     * HTML5 8.2.4.1.\\n     *\/\\n    protected function consumeData()\\n    {\\n        $tok = $this->scanner->current();\\n\\n        if ('&' === $tok) {\\n            \/\/ Character reference\\n            $ref = $this->decodeCharacterReference();\\n            $this->buffer($ref);\\n\\n            $tok = $this->scanner->current();\\n        }\\n\\n        \/\/ Parse tag\\n        if ('<' === $tok) {\\n            \/\/ Any buffered text data can go out now.\\n            $this->flushBuffer();\\n\\n            $tok = $this->scanner->next();\\n\\n            if (false === $tok) {\\n                \/\/ end of string\\n                $this->parseError('Illegal tag opening');\\n            } elseif ('!' === $tok) {\\n                $this->markupDeclaration();\\n            } elseif ('\/' === $tok) {\\n                $this->endTag();\\n            } elseif ('?' === $tok) {\\n                $this->processingInstruction();\\n            } elseif ($this->is_alpha($tok)) {\\n                $this->tagName();\\n            } else {\\n                $this->parseError('Illegal tag opening');\\n                \/\/ TODO is this necessary ?\\n                $this->characterData();\\n            }\\n\\n            $tok = $this->scanner->current();\\n        }\\n\\n        if (false === $tok) {\\n            \/\/ Handle end of document\\n            $this->eof();\\n        } else {\\n            \/\/ Parse character\\n            switch ($this->textMode) {\\n                case Elements::TEXT_RAW:\\n                    $this->rawText($tok);\\n                    break;\\n\\n                case Elements::TEXT_RCDATA:\\n                    $this->rcdata($tok);\\n                    break;\\n\\n                default:\\n                    if ('<' === $tok || '&' === $tok) {\\n                        break;\\n                    }\\n\\n                    \/\/ NULL character\\n                    if (\\\"\\\\00\\\" === $tok) {\\n                        $this->parseError('Received null character.');\\n\\n                        $this->text .= $tok;\\n                        $this->scanner->consume();\\n\\n                        break;\\n                    }\\n\\n                    $this->text .= $this->scanner->charsUntil(\\\"<&\\\\0\\\");\\n            }\\n        }\\n\\n        return $this->carryOn;\\n    }\\n\\n    \/**\\n     * Parse anything that looks like character data.\\n     *\\n     * Different rules apply based on the current text mode.\\n     *\\n     * @see Elements::TEXT_RAW Elements::TEXT_RCDATA.\\n     *\/\\n    protected function characterData()\\n    {\\n        $tok = $this->scanner->current();\\n        if (false === $tok) {\\n            return false;\\n        }\\n        switch ($this->textMode) {\\n            case Elements::TEXT_RAW:\\n                return $this->rawText($tok);\\n            case Elements::TEXT_RCDATA:\\n                return $this->rcdata($tok);\\n            default:\\n                if ('<' === $tok || '&' === $tok) {\\n                    return false;\\n                }\\n\\n                return $this->text($tok);\\n        }\\n    }\\n\\n    \/**\\n     * This buffers the current token as character data.\\n     *\\n     * @param string $tok The current token.\\n     *\\n     * @return bool\\n     *\/\\n    protected function text($tok)\\n    {\\n        \/\/ This should never happen...\\n        if (false === $tok) {\\n            return false;\\n        }\\n\\n        \/\/ NULL character\\n        if (\\\"\\\\00\\\" === $tok) {\\n            $this->parseError('Received null character.');\\n        }\\n\\n        $this->buffer($tok);\\n        $this->scanner->consume();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Read text in RAW mode.\\n     *\\n     * @param string $tok The current token.\\n     *\\n     * @return bool\\n     *\/\\n    protected function rawText($tok)\\n    {\\n        if (is_null($this->untilTag)) {\\n            return $this->text($tok);\\n        }\\n\\n        $sequence = '<\/' . $this->untilTag . '>';\\n        $txt = $this->readUntilSequence($sequence);\\n        $this->events->text($txt);\\n        $this->setTextMode(0);\\n\\n        return $this->endTag();\\n    }\\n\\n    \/**\\n     * Read text in RCDATA mode.\\n     *\\n     * @param string $tok The current token.\\n     *\\n     * @return bool\\n     *\/\\n    protected function rcdata($tok)\\n    {\\n        if (is_null($this->untilTag)) {\\n            return $this->text($tok);\\n        }\\n\\n        $sequence = '<\/' . $this->untilTag;\\n        $txt = '';\\n\\n        $caseSensitive = !Elements::isHtml5Element($this->untilTag);\\n        while (false !== $tok && !('<' == $tok && ($this->scanner->sequenceMatches($sequence, $caseSensitive)))) {\\n            if ('&' == $tok) {\\n                $txt .= $this->decodeCharacterReference();\\n                $tok = $this->scanner->current();\\n            } else {\\n                $txt .= $tok;\\n                $tok = $this->scanner->next();\\n            }\\n        }\\n        $len = strlen($sequence);\\n        $this->scanner->consume($len);\\n        $len += $this->scanner->whitespace();\\n        if ('>' !== $this->scanner->current()) {\\n            $this->parseError('Unclosed RCDATA end tag');\\n        }\\n\\n        $this->scanner->unconsume($len);\\n        $this->events->text($txt);\\n        $this->setTextMode(0);\\n\\n        return $this->endTag();\\n    }\\n\\n    \/**\\n     * If the document is read, emit an EOF event.\\n     *\/\\n    protected function eof()\\n    {\\n        \/\/ fprintf(STDOUT, \\\"EOF\\\");\\n        $this->flushBuffer();\\n        $this->events->eof();\\n        $this->carryOn = false;\\n    }\\n\\n    \/**\\n     * Look for markup.\\n     *\/\\n    protected function markupDeclaration()\\n    {\\n        $tok = $this->scanner->next();\\n\\n        \/\/ Comment:\\n        if ('-' == $tok && '-' == $this->scanner->peek()) {\\n            $this->scanner->consume(2);\\n\\n            return $this->comment();\\n        } elseif ('D' == $tok || 'd' == $tok) { \/\/ Doctype\\n            return $this->doctype();\\n        } elseif ('[' == $tok) { \/\/ CDATA section\\n            return $this->cdataSection();\\n        }\\n\\n        \/\/ FINISH\\n        $this->parseError('Expected <!--, <![CDATA[, or <!DOCTYPE. Got <!%s', $tok);\\n        $this->bogusComment('<!');\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Consume an end tag. See section 8.2.4.9.\\n     *\/\\n    protected function endTag()\\n    {\\n        if ('\/' != $this->scanner->current()) {\\n            return false;\\n        }\\n        $tok = $this->scanner->next();\\n\\n        \/\/ a-zA-Z -> tagname\\n        \/\/ > -> parse error\\n        \/\/ EOF -> parse error\\n        \/\/ -> parse error\\n        if (!$this->is_alpha($tok)) {\\n            $this->parseError(\\\"Expected tag name, got '%s'\\\", $tok);\\n            if (\\\"\\\\0\\\" == $tok || false === $tok) {\\n                return false;\\n            }\\n\\n            return $this->bogusComment('<\/');\\n        }\\n\\n        $name = $this->scanner->charsUntil(\\\"\\\\n\\\\f \\\\t>\\\");\\n        $name = self::CONFORMANT_XML === $this->mode ? $name : strtolower($name);\\n        \/\/ Trash whitespace.\\n        $this->scanner->whitespace();\\n\\n        $tok = $this->scanner->current();\\n        if ('>' != $tok) {\\n            $this->parseError(\\\"Expected >, got '%s'\\\", $tok);\\n            \/\/ We just trash stuff until we get to the next tag close.\\n            $this->scanner->charsUntil('>');\\n        }\\n\\n        $this->events->endTag($name);\\n        $this->scanner->consume();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Consume a tag name and body. See section 8.2.4.10.\\n     *\/\\n    protected function tagName()\\n    {\\n        \/\/ We know this is at least one char.\\n        $name = $this->scanner->charsWhile(':_-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');\\n        $name = self::CONFORMANT_XML === $this->mode ? $name : strtolower($name);\\n        $attributes = array();\\n        $selfClose = false;\\n\\n        \/\/ Handle attribute parse exceptions here so that we can\\n        \/\/ react by trying to build a sensible parse tree.\\n        try {\\n            do {\\n                $this->scanner->whitespace();\\n                $this->attribute($attributes);\\n            } while (!$this->isTagEnd($selfClose));\\n        } catch (ParseError $e) {\\n            $selfClose = false;\\n        }\\n\\n        $mode = $this->events->startTag($name, $attributes, $selfClose);\\n\\n        if (is_int($mode)) {\\n            $this->setTextMode($mode, $name);\\n        }\\n\\n        $this->scanner->consume();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Check if the scanner has reached the end of a tag.\\n     *\/\\n    protected function isTagEnd(&$selfClose)\\n    {\\n        $tok = $this->scanner->current();\\n        if ('\/' == $tok) {\\n            $this->scanner->consume();\\n            $this->scanner->whitespace();\\n            $tok = $this->scanner->current();\\n\\n            if ('>' == $tok) {\\n                $selfClose = true;\\n\\n                return true;\\n            }\\n            if (false === $tok) {\\n                $this->parseError('Unexpected EOF inside of tag.');\\n\\n                return true;\\n            }\\n            \/\/ Basically, we skip the \/ token and go on.\\n            \/\/ See 8.2.4.43.\\n            $this->parseError(\\\"Unexpected '%s' inside of a tag.\\\", $tok);\\n\\n            return false;\\n        }\\n\\n        if ('>' == $tok) {\\n            return true;\\n        }\\n        if (false === $tok) {\\n            $this->parseError('Unexpected EOF inside of tag.');\\n\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Parse attributes from inside of a tag.\\n     *\\n     * @param string[] $attributes\\n     *\\n     * @return bool\\n     *\\n     * @throws ParseError\\n     *\/\\n    protected function attribute(&$attributes)\\n    {\\n        $tok = $this->scanner->current();\\n        if ('\/' == $tok || '>' == $tok || false === $tok) {\\n            return false;\\n        }\\n\\n        if ('<' == $tok) {\\n            $this->parseError(\\\"Unexpected '<' inside of attributes list.\\\");\\n            \/\/ Push the < back onto the stack.\\n            $this->scanner->unconsume();\\n            \/\/ Let the caller figure out how to handle this.\\n            throw new ParseError('Start tag inside of attribute.');\\n        }\\n\\n        $name = strtolower($this->scanner->charsUntil(\\\"\/>=\\\\n\\\\f\\\\t \\\"));\\n\\n        if (0 == strlen($name)) {\\n            $tok = $this->scanner->current();\\n            $this->parseError('Expected an attribute name, got %s.', $tok);\\n            \/\/ Really, only '=' can be the char here. Everything else gets absorbed\\n            \/\/ under one rule or another.\\n            $name = $tok;\\n            $this->scanner->consume();\\n        }\\n\\n        $isValidAttribute = true;\\n        \/\/ Attribute names can contain most Unicode characters for HTML5.\\n        \/\/ But method \\\"DOMElement::setAttribute\\\" is throwing exception\\n        \/\/ because of it's own internal restriction so these have to be filtered.\\n        \/\/ see issue #23: https:\/\/github.com\/Masterminds\/html5-php\/issues\/23\\n        \/\/ and http:\/\/www.w3.org\/TR\/2011\/WD-html5-20110525\/syntax.html#syntax-attribute-name\\n        if (preg_match(\\\"\/[\\\\x1-\\\\x2C\\\\\\\\\/\\\\x3B-\\\\x40\\\\x5B-\\\\x5E\\\\x60\\\\x7B-\\\\x7F]\/u\\\", $name)) {\\n            $this->parseError('Unexpected characters in attribute name: %s', $name);\\n            $isValidAttribute = false;\\n        }         \/\/ There is no limitation for 1st character in HTML5.\\n        \/\/ But method \\\"DOMElement::setAttribute\\\" is throwing exception for the\\n        \/\/ characters below so they have to be filtered.\\n        \/\/ see issue #23: https:\/\/github.com\/Masterminds\/html5-php\/issues\/23\\n        \/\/ and http:\/\/www.w3.org\/TR\/2011\/WD-html5-20110525\/syntax.html#syntax-attribute-name\\n        elseif (preg_match('\/^[0-9.-]\/u', $name)) {\\n            $this->parseError('Unexpected character at the begining of attribute name: %s', $name);\\n            $isValidAttribute = false;\\n        }\\n        \/\/ 8.1.2.3\\n        $this->scanner->whitespace();\\n\\n        $val = $this->attributeValue();\\n        if ($isValidAttribute && !array_key_exists($name, $attributes)) {\\n            $attributes[$name] = $val;\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Consume an attribute value. See section 8.2.4.37 and after.\\n     *\\n     * @return string|null\\n     *\/\\n    protected function attributeValue()\\n    {\\n        if ('=' != $this->scanner->current()) {\\n            return null;\\n        }\\n        $this->scanner->consume();\\n        \/\/ 8.1.2.3\\n        $this->scanner->whitespace();\\n\\n        $tok = $this->scanner->current();\\n        switch ($tok) {\\n            case \\\"\\\\n\\\":\\n            case \\\"\\\\f\\\":\\n            case ' ':\\n            case \\\"\\\\t\\\":\\n                \/\/ Whitespace here indicates an empty value.\\n                return null;\\n            case '\\\"':\\n            case \\\"'\\\":\\n                $this->scanner->consume();\\n\\n                return $this->quotedAttributeValue($tok);\\n            case '>':\\n                \/\/ case '\/': \/\/ 8.2.4.37 seems to allow foo=\/ as a valid attr.\\n                $this->parseError('Expected attribute value, got tag end.');\\n\\n                return null;\\n            case '=':\\n            case '`':\\n                $this->parseError('Expecting quotes, got %s.', $tok);\\n\\n                return $this->unquotedAttributeValue();\\n            default:\\n                return $this->unquotedAttributeValue();\\n        }\\n    }\\n\\n    \/**\\n     * Get an attribute value string.\\n     *\\n     * @param string $quote IMPORTANT: This is a series of chars! Any one of which will be considered\\n     *                      termination of an attribute's value. E.g. \\\"\\\\\\\"'\\\" will stop at either\\n     *                      ' or \\\".\\n     *\\n     * @return string The attribute value.\\n     *\/\\n    protected function quotedAttributeValue($quote)\\n    {\\n        $stoplist = \\\"\\\\f\\\" . $quote;\\n        $val = '';\\n\\n        while (true) {\\n            $tokens = $this->scanner->charsUntil($stoplist . '&');\\n            if (false !== $tokens) {\\n                $val .= $tokens;\\n            } else {\\n                break;\\n            }\\n\\n            $tok = $this->scanner->current();\\n            if ('&' == $tok) {\\n                $val .= $this->decodeCharacterReference(true);\\n                continue;\\n            }\\n            break;\\n        }\\n        $this->scanner->consume();\\n\\n        return $val;\\n    }\\n\\n    protected function unquotedAttributeValue()\\n    {\\n        $val = '';\\n        $tok = $this->scanner->current();\\n        while (false !== $tok) {\\n            switch ($tok) {\\n                case \\\"\\\\n\\\":\\n                case \\\"\\\\f\\\":\\n                case ' ':\\n                case \\\"\\\\t\\\":\\n                case '>':\\n                    break 2;\\n\\n                case '&':\\n                    $val .= $this->decodeCharacterReference(true);\\n                    $tok = $this->scanner->current();\\n\\n                    break;\\n\\n                case \\\"'\\\":\\n                case '\\\"':\\n                case '<':\\n                case '=':\\n                case '`':\\n                    $this->parseError('Unexpected chars in unquoted attribute value %s', $tok);\\n                    $val .= $tok;\\n                    $tok = $this->scanner->next();\\n                    break;\\n\\n                default:\\n                    $val .= $this->scanner->charsUntil(\\\"\\\\t\\\\n\\\\f >&\\\\\\\"'<=`\\\");\\n\\n                    $tok = $this->scanner->current();\\n            }\\n        }\\n\\n        return $val;\\n    }\\n\\n    \/**\\n     * Consume malformed markup as if it were a comment.\\n     * 8.2.4.44.\\n     *\\n     * The spec requires that the ENTIRE tag-like thing be enclosed inside of\\n     * the comment. So this will generate comments like:\\n     *\\n     * &lt;!--&lt\/+foo&gt;--&gt;\\n     *\\n     * @param string $leading Prepend any leading characters. This essentially\\n     *                        negates the need to backtrack, but it's sort of a hack.\\n     *\\n     * @return bool\\n     *\/\\n    protected function bogusComment($leading = '')\\n    {\\n        $comment = $leading;\\n        $tokens = $this->scanner->charsUntil('>');\\n        if (false !== $tokens) {\\n            $comment .= $tokens;\\n        }\\n        $tok = $this->scanner->current();\\n        if (false !== $tok) {\\n            $comment .= $tok;\\n        }\\n\\n        $this->flushBuffer();\\n        $this->events->comment($comment);\\n        $this->scanner->consume();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Read a comment.\\n     * Expects the first tok to be inside of the comment.\\n     *\\n     * @return bool\\n     *\/\\n    protected function comment()\\n    {\\n        $tok = $this->scanner->current();\\n        $comment = '';\\n\\n        \/\/ <!-->. Emit an empty comment because 8.2.4.46 says to.\\n        if ('>' == $tok) {\\n            \/\/ Parse error. Emit the comment token.\\n            $this->parseError(\\\"Expected comment data, got '>'\\\");\\n            $this->events->comment('');\\n            $this->scanner->consume();\\n\\n            return true;\\n        }\\n\\n        \/\/ Replace NULL with the replacement char.\\n        if (\\\"\\\\0\\\" == $tok) {\\n            $tok = UTF8Utils::FFFD;\\n        }\\n        while (!$this->isCommentEnd()) {\\n            $comment .= $tok;\\n            $tok = $this->scanner->next();\\n        }\\n\\n        $this->events->comment($comment);\\n        $this->scanner->consume();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Check if the scanner has reached the end of a comment.\\n     *\\n     * @return bool\\n     *\/\\n    protected function isCommentEnd()\\n    {\\n        $tok = $this->scanner->current();\\n\\n        \/\/ EOF\\n        if (false === $tok) {\\n            \/\/ Hit the end.\\n            $this->parseError('Unexpected EOF in a comment.');\\n\\n            return true;\\n        }\\n\\n        \/\/ If next two tokens are not '--', not the end.\\n        if ('-' != $tok || '-' != $this->scanner->peek()) {\\n            return false;\\n        }\\n\\n        $this->scanner->consume(2); \/\/ Consume '-' and one of '!' or '>'\\n\\n        \/\/ Test for '>'\\n        if ('>' == $this->scanner->current()) {\\n            return true;\\n        }\\n        \/\/ Test for '!>'\\n        if ('!' == $this->scanner->current() && '>' == $this->scanner->peek()) {\\n            $this->scanner->consume(); \/\/ Consume the last '>'\\n\\n            return true;\\n        }\\n        \/\/ Unread '-' and one of '!' or '>';\\n        $this->scanner->unconsume(2);\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Parse a DOCTYPE.\\n     *\\n     * Parse a DOCTYPE declaration. This method has strong bearing on whether or\\n     * not Quirksmode is enabled on the event handler.\\n     *\\n     * @todo This method is a little long. Should probably refactor.\\n     *\\n     * @return bool\\n     *\/\\n    protected function doctype()\\n    {\\n        \/\/ Check that string is DOCTYPE.\\n        if ($this->scanner->sequenceMatches('DOCTYPE', false)) {\\n            $this->scanner->consume(7);\\n        } else {\\n            $chars = $this->scanner->charsWhile('DOCTYPEdoctype');\\n            $this->parseError('Expected DOCTYPE, got %s', $chars);\\n\\n            return $this->bogusComment('<!' . $chars);\\n        }\\n\\n        $this->scanner->whitespace();\\n        $tok = $this->scanner->current();\\n\\n        \/\/ EOF: die.\\n        if (false === $tok) {\\n            $this->events->doctype('html5', EventHandler::DOCTYPE_NONE, '', true);\\n            $this->eof();\\n\\n            return true;\\n        }\\n\\n        \/\/ NULL char: convert.\\n        if (\\\"\\\\0\\\" === $tok) {\\n            $this->parseError('Unexpected null character in DOCTYPE.');\\n        }\\n\\n        $stop = \\\" \\\\n\\\\f>\\\";\\n        $doctypeName = $this->scanner->charsUntil($stop);\\n        \/\/ Lowercase ASCII, replace \\\\0 with FFFD\\n        $doctypeName = strtolower(strtr($doctypeName, \\\"\\\\0\\\", UTF8Utils::FFFD));\\n\\n        $tok = $this->scanner->current();\\n\\n        \/\/ If false, emit a parse error, DOCTYPE, and return.\\n        if (false === $tok) {\\n            $this->parseError('Unexpected EOF in DOCTYPE declaration.');\\n            $this->events->doctype($doctypeName, EventHandler::DOCTYPE_NONE, null, true);\\n\\n            return true;\\n        }\\n\\n        \/\/ Short DOCTYPE, like <!DOCTYPE html>\\n        if ('>' == $tok) {\\n            \/\/ DOCTYPE without a name.\\n            if (0 == strlen($doctypeName)) {\\n                $this->parseError('Expected a DOCTYPE name. Got nothing.');\\n                $this->events->doctype($doctypeName, 0, null, true);\\n                $this->scanner->consume();\\n\\n                return true;\\n            }\\n            $this->events->doctype($doctypeName);\\n            $this->scanner->consume();\\n\\n            return true;\\n        }\\n        $this->scanner->whitespace();\\n\\n        $pub = strtoupper($this->scanner->getAsciiAlpha());\\n        $white = $this->scanner->whitespace();\\n\\n        \/\/ Get ID, and flag it as pub or system.\\n        if (('PUBLIC' == $pub || 'SYSTEM' == $pub) && $white > 0) {\\n            \/\/ Get the sys ID.\\n            $type = 'PUBLIC' == $pub ? EventHandler::DOCTYPE_PUBLIC : EventHandler::DOCTYPE_SYSTEM;\\n            $id = $this->quotedString(\\\"\\\\0>\\\");\\n            if (false === $id) {\\n                $this->events->doctype($doctypeName, $type, $pub, false);\\n\\n                return true;\\n            }\\n\\n            \/\/ Premature EOF.\\n            if (false === $this->scanner->current()) {\\n                $this->parseError('Unexpected EOF in DOCTYPE');\\n                $this->events->doctype($doctypeName, $type, $id, true);\\n\\n                return true;\\n            }\\n\\n            \/\/ Well-formed complete DOCTYPE.\\n            $this->scanner->whitespace();\\n            if ('>' == $this->scanner->current()) {\\n                $this->events->doctype($doctypeName, $type, $id, false);\\n                $this->scanner->consume();\\n\\n                return true;\\n            }\\n\\n            \/\/ If we get here, we have <!DOCTYPE foo PUBLIC \\\"bar\\\" SOME_JUNK\\n            \/\/ Throw away the junk, parse error, quirks mode, return true.\\n            $this->scanner->charsUntil('>');\\n            $this->parseError('Malformed DOCTYPE.');\\n            $this->events->doctype($doctypeName, $type, $id, true);\\n            $this->scanner->consume();\\n\\n            return true;\\n        }\\n\\n        \/\/ Else it's a bogus DOCTYPE.\\n        \/\/ Consume to > and trash.\\n        $this->scanner->charsUntil('>');\\n\\n        $this->parseError('Expected PUBLIC or SYSTEM. Got %s.', $pub);\\n        $this->events->doctype($doctypeName, 0, null, true);\\n        $this->scanner->consume();\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Utility for reading a quoted string.\\n     *\\n     * @param string $stopchars Characters (in addition to a close-quote) that should stop the string.\\n     *                          E.g. sometimes '>' is higher precedence than '\\\"' or \\\"'\\\".\\n     *\\n     * @return mixed String if one is found (quotations omitted).\\n     *\/\\n    protected function quotedString($stopchars)\\n    {\\n        $tok = $this->scanner->current();\\n        if ('\\\"' == $tok || \\\"'\\\" == $tok) {\\n            $this->scanner->consume();\\n            $ret = $this->scanner->charsUntil($tok . $stopchars);\\n            if ($this->scanner->current() == $tok) {\\n                $this->scanner->consume();\\n            } else {\\n                \/\/ Parse error because no close quote.\\n                $this->parseError('Expected %s, got %s', $tok, $this->scanner->current());\\n            }\\n\\n            return $ret;\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Handle a CDATA section.\\n     *\\n     * @return bool\\n     *\/\\n    protected function cdataSection()\\n    {\\n        $cdata = '';\\n        $this->scanner->consume();\\n\\n        $chars = $this->scanner->charsWhile('CDAT');\\n        if ('CDATA' != $chars || '[' != $this->scanner->current()) {\\n            $this->parseError('Expected [CDATA[, got %s', $chars);\\n\\n            return $this->bogusComment('<![' . $chars);\\n        }\\n\\n        $tok = $this->scanner->next();\\n        do {\\n            if (false === $tok) {\\n                $this->parseError('Unexpected EOF inside CDATA.');\\n                $this->bogusComment('<![CDATA[' . $cdata);\\n\\n                return true;\\n            }\\n            $cdata .= $tok;\\n            $tok = $this->scanner->next();\\n        } while (!$this->scanner->sequenceMatches(']]>'));\\n\\n        \/\/ Consume ]]>\\n        $this->scanner->consume(3);\\n\\n        $this->events->cdata($cdata);\\n\\n        return true;\\n    }\\n\\n    \/\/ ================================================================\\n    \/\/ Non-HTML5\\n    \/\/ ================================================================\\n\\n    \/**\\n     * Handle a processing instruction.\\n     *\\n     * XML processing instructions are supposed to be ignored in HTML5,\\n     * treated as \\\"bogus comments\\\". However, since we're not a user\\n     * agent, we allow them. We consume until ?> and then issue a\\n     * EventListener::processingInstruction() event.\\n     *\\n     * @return bool\\n     *\/\\n    protected function processingInstruction()\\n    {\\n        if ('?' != $this->scanner->current()) {\\n            return false;\\n        }\\n\\n        $tok = $this->scanner->next();\\n        $procName = $this->scanner->getAsciiAlpha();\\n        $white = $this->scanner->whitespace();\\n\\n        \/\/ If not a PI, send to bogusComment.\\n        if (0 == strlen($procName) || 0 == $white || false == $this->scanner->current()) {\\n            $this->parseError(\\\"Expected processing instruction name, got $tok\\\");\\n            $this->bogusComment('<?' . $tok . $procName);\\n\\n            return true;\\n        }\\n\\n        $data = '';\\n        \/\/ As long as it's not the case that the next two chars are ? and >.\\n        while (!('?' == $this->scanner->current() && '>' == $this->scanner->peek())) {\\n            $data .= $this->scanner->current();\\n\\n            $tok = $this->scanner->next();\\n            if (false === $tok) {\\n                $this->parseError('Unexpected EOF in processing instruction.');\\n                $this->events->processingInstruction($procName, $data);\\n\\n                return true;\\n            }\\n        }\\n\\n        $this->scanner->consume(2); \/\/ Consume the closing tag\\n        $this->events->processingInstruction($procName, $data);\\n\\n        return true;\\n    }\\n\\n    \/\/ ================================================================\\n    \/\/ UTILITY FUNCTIONS\\n    \/\/ ================================================================\\n\\n    \/**\\n     * Read from the input stream until we get to the desired sequene\\n     * or hit the end of the input stream.\\n     *\\n     * @param string $sequence\\n     *\\n     * @return string\\n     *\/\\n    protected function readUntilSequence($sequence)\\n    {\\n        $buffer = '';\\n\\n        \/\/ Optimization for reading larger blocks faster.\\n        $first = substr($sequence, 0, 1);\\n        while (false !== $this->scanner->current()) {\\n            $buffer .= $this->scanner->charsUntil($first);\\n\\n            \/\/ Stop as soon as we hit the stopping condition.\\n            if ($this->scanner->sequenceMatches($sequence, false)) {\\n                return $buffer;\\n            }\\n            $buffer .= $this->scanner->current();\\n            $this->scanner->consume();\\n        }\\n\\n        \/\/ If we get here, we hit the EOF.\\n        $this->parseError('Unexpected EOF during text read.');\\n\\n        return $buffer;\\n    }\\n\\n    \/**\\n     * Check if upcomming chars match the given sequence.\\n     *\\n     * This will read the stream for the $sequence. If it's\\n     * found, this will return true. If not, return false.\\n     * Since this unconsumes any chars it reads, the caller\\n     * will still need to read the next sequence, even if\\n     * this returns true.\\n     *\\n     * Example: $this->scanner->sequenceMatches('<\/script>') will\\n     * see if the input stream is at the start of a\\n     * '<\/script>' string.\\n     *\\n     * @param string $sequence\\n     * @param bool   $caseSensitive\\n     *\\n     * @return bool\\n     *\/\\n    protected function sequenceMatches($sequence, $caseSensitive = true)\\n    {\\n        @trigger_error(__METHOD__ . ' method is deprecated since version 2.4 and will be removed in 3.0. Use Scanner::sequenceMatches() instead.', E_USER_DEPRECATED);\\n\\n        return $this->scanner->sequenceMatches($sequence, $caseSensitive);\\n    }\\n\\n    \/**\\n     * Send a TEXT event with the contents of the text buffer.\\n     *\\n     * This emits an EventHandler::text() event with the current contents of the\\n     * temporary text buffer. (The buffer is used to group as much PCDATA\\n     * as we can instead of emitting lots and lots of TEXT events.)\\n     *\/\\n    protected function flushBuffer()\\n    {\\n        if ('' === $this->text) {\\n            return;\\n        }\\n        $this->events->text($this->text);\\n        $this->text = '';\\n    }\\n\\n    \/**\\n     * Add text to the temporary buffer.\\n     *\\n     * @see flushBuffer()\\n     *\\n     * @param string $str\\n     *\/\\n    protected function buffer($str)\\n    {\\n        $this->text .= $str;\\n    }\\n\\n    \/**\\n     * Emit a parse error.\\n     *\\n     * A parse error always returns false because it never consumes any\\n     * characters.\\n     *\\n     * @param string $msg\\n     *\\n     * @return string\\n     *\/\\n    protected function parseError($msg)\\n    {\\n        $args = func_get_args();\\n\\n        if (count($args) > 1) {\\n            array_shift($args);\\n            $msg = vsprintf($msg, $args);\\n        }\\n\\n        $line = $this->scanner->currentLine();\\n        $col = $this->scanner->columnOffset();\\n        $this->events->parseError($msg, $line, $col);\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Decode a character reference and return the string.\\n     *\\n     * If $inAttribute is set to true, a bare & will be returned as-is.\\n     *\\n     * @param bool $inAttribute Set to true if the text is inside of an attribute value.\\n     *                          false otherwise.\\n     *\\n     * @return string\\n     *\/\\n    protected function decodeCharacterReference($inAttribute = false)\\n    {\\n        \/\/ Next char after &.\\n        $tok = $this->scanner->next();\\n        $start = $this->scanner->position();\\n\\n        if (false === $tok) {\\n            return '&';\\n        }\\n\\n        \/\/ These indicate not an entity. We return just\\n        \/\/ the &.\\n        if (\\\"\\\\t\\\" === $tok || \\\"\\\\n\\\" === $tok || \\\"\\\\f\\\" === $tok || ' ' === $tok || '&' === $tok || '<' === $tok) {\\n            \/\/ $this->scanner->next();\\n            return '&';\\n        }\\n\\n        \/\/ Numeric entity\\n        if ('#' === $tok) {\\n            $tok = $this->scanner->next();\\n\\n            if (false === $tok) {\\n                $this->parseError('Expected &#DEC; &#HEX;, got EOF');\\n                $this->scanner->unconsume(1);\\n\\n                return '&';\\n            }\\n\\n            \/\/ Hexadecimal encoding.\\n            \/\/ X[0-9a-fA-F]+;\\n            \/\/ x[0-9a-fA-F]+;\\n            if ('x' === $tok || 'X' === $tok) {\\n                $tok = $this->scanner->next(); \/\/ Consume x\\n\\n                \/\/ Convert from hex code to char.\\n                $hex = $this->scanner->getHex();\\n                if (empty($hex)) {\\n                    $this->parseError('Expected &#xHEX;, got &#x%s', $tok);\\n                    \/\/ We unconsume because we don't know what parser rules might\\n                    \/\/ be in effect for the remaining chars. For example. '&#>'\\n                    \/\/ might result in a specific parsing rule inside of tag\\n                    \/\/ contexts, while not inside of pcdata context.\\n                    $this->scanner->unconsume(2);\\n\\n                    return '&';\\n                }\\n                $entity = CharacterReference::lookupHex($hex);\\n            }             \/\/ Decimal encoding.\\n            \/\/ [0-9]+;\\n            else {\\n                \/\/ Convert from decimal to char.\\n                $numeric = $this->scanner->getNumeric();\\n                if (false === $numeric) {\\n                    $this->parseError('Expected &#DIGITS;, got &#%s', $tok);\\n                    $this->scanner->unconsume(2);\\n\\n                    return '&';\\n                }\\n                $entity = CharacterReference::lookupDecimal($numeric);\\n            }\\n        } elseif ('=' === $tok && $inAttribute) {\\n            return '&';\\n        } else { \/\/ String entity.\\n            \/\/ Attempt to consume a string up to a ';'.\\n            \/\/ [a-zA-Z0-9]+;\\n            $cname = $this->scanner->getAsciiAlphaNum();\\n            $entity = CharacterReference::lookupName($cname);\\n\\n            \/\/ When no entity is found provide the name of the unmatched string\\n            \/\/ and continue on as the & is not part of an entity. The & will\\n            \/\/ be converted to &amp; elsewhere.\\n            if (null === $entity) {\\n                if (!$inAttribute || '' === $cname) {\\n                    $this->parseError(\\\"No match in entity table for '%s'\\\", $cname);\\n                }\\n                $this->scanner->unconsume($this->scanner->position() - $start);\\n\\n                return '&';\\n            }\\n        }\\n\\n        \/\/ The scanner has advanced the cursor for us.\\n        $tok = $this->scanner->current();\\n\\n        \/\/ We have an entity. We're done here.\\n        if (';' === $tok) {\\n            $this->scanner->consume();\\n\\n            return $entity;\\n        }\\n\\n        \/\/ Failing to match ; means unconsume the entire string.\\n        $this->scanner->unconsume($this->scanner->position() - $start);\\n\\n        $this->parseError('Expected &ENTITY;, got &ENTITY%s (no trailing ;) ', $tok);\\n\\n        return '&';\\n    }\\n\\n    \/**\\n     * Checks whether a (single-byte) character is an ASCII letter or not.\\n     *\\n     * @param string $input A single-byte string\\n     *\\n     * @return bool True if it is a letter, False otherwise\\n     *\/\\n    protected function is_alpha($input)\\n    {\\n        $code = ord($input);\\n\\n        return ($code >= 97 && $code <= 122) || ($code >= 65 && $code <= 90);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/ParseError.php\",\"ext\":\"php\",\"size\":130,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/**\\n * Emit when the parser has an error.\\n *\/\\nclass ParseError extends \\\\Exception\\n{\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/StringInputStream.php\",\"ext\":\"php\",\"size\":9675,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Loads a string to be parsed.\\n *\/\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/*\\n *\\n* Based on code from html5lib:\\n\\nCopyright 2009 Geoffrey Sneddon <http:\/\/gsnedders.com\/>\\n\\nPermission is hereby granted, free of charge, to any person obtaining a\\ncopy of this software and associated documentation files (the\\n    \\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and\/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be included\\nin all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n*\/\\n\\n\/\/ Some conventions:\\n\/\/ - \/* *\/ indicates verbatim text from the HTML 5 specification\\n\/\/   MPB: Not sure which version of the spec. Moving from HTML5lib to\\n\/\/   HTML5-PHP, I have been using this version:\\n\/\/   http:\/\/www.w3.org\/TR\/2012\/CR-html5-20121217\/Overview.html#contents\\n\/\/\\n\/\/ - \/\/ indicates regular comments\\n\\n\/**\\n * @deprecated since 2.4, to remove in 3.0. Use a string in the scanner instead.\\n *\/\\nclass StringInputStream implements InputStream\\n{\\n    \/**\\n     * The string data we're parsing.\\n     *\/\\n    private $data;\\n\\n    \/**\\n     * The current integer byte position we are in $data.\\n     *\/\\n    private $char;\\n\\n    \/**\\n     * Length of $data; when $char === $data, we are at the end-of-file.\\n     *\/\\n    private $EOF;\\n\\n    \/**\\n     * Parse errors.\\n     *\/\\n    public $errors = array();\\n\\n    \/**\\n     * Create a new InputStream wrapper.\\n     *\\n     * @param string $data     Data to parse.\\n     * @param string $encoding The encoding to use for the data.\\n     * @param string $debug    A fprintf format to use to echo the data on stdout.\\n     *\/\\n    public function __construct($data, $encoding = 'UTF-8', $debug = '')\\n    {\\n        $data = UTF8Utils::convertToUTF8($data, $encoding);\\n        if ($debug) {\\n            fprintf(STDOUT, $debug, $data, strlen($data));\\n        }\\n\\n        \/\/ There is good reason to question whether it makes sense to\\n        \/\/ do this here, since most of these checks are done during\\n        \/\/ parsing, and since this check doesn't actually *do* anything.\\n        $this->errors = UTF8Utils::checkForIllegalCodepoints($data);\\n\\n        $data = $this->replaceLinefeeds($data);\\n\\n        $this->data = $data;\\n        $this->char = 0;\\n        $this->EOF = strlen($data);\\n    }\\n\\n    public function __toString()\\n    {\\n        return $this->data;\\n    }\\n\\n    \/**\\n     * Replace linefeed characters according to the spec.\\n     *\/\\n    protected function replaceLinefeeds($data)\\n    {\\n        \/*\\n         * U+000D CARRIAGE RETURN (CR) characters and U+000A LINE FEED (LF) characters are treated specially.\\n         * Any CR characters that are followed by LF characters must be removed, and any CR characters not\\n         * followed by LF characters must be converted to LF characters. Thus, newlines in HTML DOMs are\\n         * represented by LF characters, and there are never any CR characters in the input to the tokenization\\n         * stage.\\n         *\/\\n        $crlfTable = array(\\n            \\\"\\\\0\\\" => \\\"\\\\xEF\\\\xBF\\\\xBD\\\",\\n            \\\"\\\\r\\\\n\\\" => \\\"\\\\n\\\",\\n            \\\"\\\\r\\\" => \\\"\\\\n\\\",\\n        );\\n\\n        return strtr($data, $crlfTable);\\n    }\\n\\n    \/**\\n     * Returns the current line that the tokenizer is at.\\n     *\/\\n    public function currentLine()\\n    {\\n        if (empty($this->EOF) || 0 === $this->char) {\\n            return 1;\\n        }\\n        \/\/ Add one to $this->char because we want the number for the next\\n        \/\/ byte to be processed.\\n        return substr_count($this->data, \\\"\\\\n\\\", 0, min($this->char, $this->EOF)) + 1;\\n    }\\n\\n    \/**\\n     * @deprecated\\n     *\/\\n    public function getCurrentLine()\\n    {\\n        return $this->currentLine();\\n    }\\n\\n    \/**\\n     * Returns the current column of the current line that the tokenizer is at.\\n     * Newlines are column 0. The first char after a newline is column 1.\\n     *\\n     * @return int The column number.\\n     *\/\\n    public function columnOffset()\\n    {\\n        \/\/ Short circuit for the first char.\\n        if (0 === $this->char) {\\n            return 0;\\n        }\\n        \/\/ strrpos is weird, and the offset needs to be negative for what we\\n        \/\/ want (i.e., the last \\\\n before $this->char). This needs to not have\\n        \/\/ one (to make it point to the next character, the one we want the\\n        \/\/ position of) added to it because strrpos's behaviour includes the\\n        \/\/ final offset byte.\\n        $backwardFrom = $this->char - 1 - strlen($this->data);\\n        $lastLine = strrpos($this->data, \\\"\\\\n\\\", $backwardFrom);\\n\\n        \/\/ However, for here we want the length up until the next byte to be\\n        \/\/ processed, so add one to the current byte ($this->char).\\n        if (false !== $lastLine) {\\n            $findLengthOf = substr($this->data, $lastLine + 1, $this->char - 1 - $lastLine);\\n        } else {\\n            \/\/ After a newline.\\n            $findLengthOf = substr($this->data, 0, $this->char);\\n        }\\n\\n        return UTF8Utils::countChars($findLengthOf);\\n    }\\n\\n    \/**\\n     * @deprecated\\n     *\/\\n    public function getColumnOffset()\\n    {\\n        return $this->columnOffset();\\n    }\\n\\n    \/**\\n     * Get the current character.\\n     *\\n     * @return string The current character.\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function current()\\n    {\\n        return $this->data[$this->char];\\n    }\\n\\n    \/**\\n     * Advance the pointer.\\n     * This is part of the Iterator interface.\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function next()\\n    {\\n        ++$this->char;\\n    }\\n\\n    \/**\\n     * Rewind to the start of the string.\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function rewind()\\n    {\\n        $this->char = 0;\\n    }\\n\\n    \/**\\n     * Is the current pointer location valid.\\n     *\\n     * @return bool Whether the current pointer location is valid.\\n     *\/\\n    #[\\\\ReturnTypeWillChange]\\n    public function valid()\\n    {\\n        return $this->char < $this->EOF;\\n    }\\n\\n    \/**\\n     * Get all characters until EOF.\\n     *\\n     * This reads to the end of the file, and sets the read marker at the\\n     * end of the file.\\n     *\\n     * Note this performs bounds checking.\\n     *\\n     * @return string Returns the remaining text. If called when the InputStream is\\n     *                already exhausted, it returns an empty string.\\n     *\/\\n    public function remainingChars()\\n    {\\n        if ($this->char < $this->EOF) {\\n            $data = substr($this->data, $this->char);\\n            $this->char = $this->EOF;\\n\\n            return $data;\\n        }\\n\\n        return ''; \/\/ false;\\n    }\\n\\n    \/**\\n     * Read to a particular match (or until $max bytes are consumed).\\n     *\\n     * This operates on byte sequences, not characters.\\n     *\\n     * Matches as far as possible until we reach a certain set of bytes\\n     * and returns the matched substring.\\n     *\\n     * @param string $bytes Bytes to match.\\n     * @param int    $max   Maximum number of bytes to scan.\\n     *\\n     * @return mixed Index or false if no match is found. You should use strong\\n     *               equality when checking the result, since index could be 0.\\n     *\/\\n    public function charsUntil($bytes, $max = null)\\n    {\\n        if ($this->char >= $this->EOF) {\\n            return false;\\n        }\\n\\n        if (0 === $max || $max) {\\n            $len = strcspn($this->data, $bytes, $this->char, $max);\\n        } else {\\n            $len = strcspn($this->data, $bytes, $this->char);\\n        }\\n\\n        $string = (string) substr($this->data, $this->char, $len);\\n        $this->char += $len;\\n\\n        return $string;\\n    }\\n\\n    \/**\\n     * Returns the string so long as $bytes matches.\\n     *\\n     * Matches as far as possible with a certain set of bytes\\n     * and returns the matched substring.\\n     *\\n     * @param string $bytes A mask of bytes to match. If ANY byte in this mask matches the\\n     *                      current char, the pointer advances and the char is part of the\\n     *                      substring.\\n     * @param int    $max   The max number of chars to read.\\n     *\\n     * @return string\\n     *\/\\n    public function charsWhile($bytes, $max = null)\\n    {\\n        if ($this->char >= $this->EOF) {\\n            return false;\\n        }\\n\\n        if (0 === $max || $max) {\\n            $len = strspn($this->data, $bytes, $this->char, $max);\\n        } else {\\n            $len = strspn($this->data, $bytes, $this->char);\\n        }\\n        $string = (string) substr($this->data, $this->char, $len);\\n        $this->char += $len;\\n\\n        return $string;\\n    }\\n\\n    \/**\\n     * Unconsume characters.\\n     *\\n     * @param int $howMany The number of characters to unconsume.\\n     *\/\\n    public function unconsume($howMany = 1)\\n    {\\n        if (($this->char - $howMany) >= 0) {\\n            $this->char -= $howMany;\\n        }\\n    }\\n\\n    \/**\\n     * Look ahead without moving cursor.\\n     *\/\\n    public function peek()\\n    {\\n        if (($this->char + 1) <= $this->EOF) {\\n            return $this->data[$this->char + 1];\\n        }\\n\\n        return false;\\n    }\\n\\n    #[\\\\ReturnTypeWillChange]\\n    public function key()\\n    {\\n        return $this->char;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/TreeBuildingRules.php\",\"ext\":\"php\",\"size\":3272,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/**\\n * Handles special-case rules for the DOM tree builder.\\n *\\n * Many tags have special rules that need to be accomodated on an\\n * individual basis. This class handles those rules.\\n *\\n * See section 8.1.2.4 of the spec.\\n *\\n * @todo - colgroup and col special behaviors\\n *       - body and head special behaviors\\n *\/\\nclass TreeBuildingRules\\n{\\n    protected static $tags = array(\\n        'li' => 1,\\n        'dd' => 1,\\n        'dt' => 1,\\n        'rt' => 1,\\n        'rp' => 1,\\n        'tr' => 1,\\n        'th' => 1,\\n        'td' => 1,\\n        'thead' => 1,\\n        'tfoot' => 1,\\n        'tbody' => 1,\\n        'table' => 1,\\n        'optgroup' => 1,\\n        'option' => 1,\\n    );\\n\\n    \/**\\n     * Returns true if the given tagname has special processing rules.\\n     *\/\\n    public function hasRules($tagname)\\n    {\\n        return isset(static::$tags[$tagname]);\\n    }\\n\\n    \/**\\n     * Evaluate the rule for the current tag name.\\n     *\\n     * This may modify the existing DOM.\\n     *\\n     * @return \\\\DOMElement The new Current DOM element.\\n     *\/\\n    public function evaluate($new, $current)\\n    {\\n        switch ($new->tagName) {\\n            case 'li':\\n                return $this->handleLI($new, $current);\\n            case 'dt':\\n            case 'dd':\\n                return $this->handleDT($new, $current);\\n            case 'rt':\\n            case 'rp':\\n                return $this->handleRT($new, $current);\\n            case 'optgroup':\\n                return $this->closeIfCurrentMatches($new, $current, array(\\n                    'optgroup',\\n                ));\\n            case 'option':\\n                return $this->closeIfCurrentMatches($new, $current, array(\\n                    'option',\\n                ));\\n            case 'tr':\\n                return $this->closeIfCurrentMatches($new, $current, array(\\n                    'tr',\\n                ));\\n            case 'td':\\n            case 'th':\\n                return $this->closeIfCurrentMatches($new, $current, array(\\n                    'th',\\n                    'td',\\n                ));\\n            case 'tbody':\\n            case 'thead':\\n            case 'tfoot':\\n            case 'table': \/\/ Spec isn't explicit about this, but it's necessary.\\n                return $this->closeIfCurrentMatches($new, $current, array(\\n                    'thead',\\n                    'tfoot',\\n                    'tbody',\\n                ));\\n        }\\n\\n        return $current;\\n    }\\n\\n    protected function handleLI($ele, $current)\\n    {\\n        return $this->closeIfCurrentMatches($ele, $current, array(\\n            'li',\\n        ));\\n    }\\n\\n    protected function handleDT($ele, $current)\\n    {\\n        return $this->closeIfCurrentMatches($ele, $current, array(\\n            'dt',\\n            'dd',\\n        ));\\n    }\\n\\n    protected function handleRT($ele, $current)\\n    {\\n        return $this->closeIfCurrentMatches($ele, $current, array(\\n            'rt',\\n            'rp',\\n        ));\\n    }\\n\\n    protected function closeIfCurrentMatches($ele, $current, $match)\\n    {\\n        if (in_array($current->tagName, $match, true)) {\\n            $current->parentNode->appendChild($ele);\\n        } else {\\n            $current->appendChild($ele);\\n        }\\n\\n        return $ele;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/FileInputStream.php\",\"ext\":\"php\",\"size\":1161,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/**\\n * The FileInputStream loads a file to be parsed.\\n *\\n * So right now we read files into strings and then process the\\n * string. We chose to do this largely for the sake of expediency of\\n * development, and also because we could optimize toward processing\\n * arbitrarily large chunks of the input. But in the future, we'd\\n * really like to rewrite this class to efficiently handle lower level\\n * stream reads (and thus efficiently handle large documents).\\n *\\n * @deprecated since 2.4, to remove in 3.0. Use a string in the scanner instead.\\n *\/\\nclass FileInputStream extends StringInputStream implements InputStream\\n{\\n    \/**\\n     * Load a file input stream.\\n     *\\n     * @param string $data     The file or url path to load.\\n     * @param string $encoding The encoding to use for the data.\\n     * @param string $debug    A fprintf format to use to echo the data on stdout.\\n     *\/\\n    public function __construct($data, $encoding = 'UTF-8', $debug = '')\\n    {\\n        \/\/ Get the contents of the file.\\n        $content = file_get_contents($data);\\n\\n        parent::__construct($content, $encoding, $debug);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/EventHandler.php\",\"ext\":\"php\",\"size\":3676,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/**\\n * Standard events for HTML5.\\n *\\n * This is roughly analogous to a SAX2 or expat-style interface.\\n * However, it is tuned specifically for HTML5, according to section 8\\n * of the HTML5 specification.\\n *\\n * An event handler receives parser events. For a concrete\\n * implementation, see DOMTreeBuilder.\\n *\\n * Quirks support in the parser is limited to close-in syntax (malformed\\n * tags or attributes). Higher order syntax and semantic issues with a\\n * document (e.g. mismatched tags, illegal nesting, etc.) are the\\n * responsibility of the event handler implementation.\\n *\\n * See HTML5 spec section 8.2.4\\n *\/\\ninterface EventHandler\\n{\\n    const DOCTYPE_NONE = 0;\\n\\n    const DOCTYPE_PUBLIC = 1;\\n\\n    const DOCTYPE_SYSTEM = 2;\\n\\n    \/**\\n     * A doctype declaration.\\n     *\\n     * @param string $name   The name of the root element.\\n     * @param int    $idType One of DOCTYPE_NONE, DOCTYPE_PUBLIC, or DOCTYPE_SYSTEM\\n     * @param string $id     The identifier. For DOCTYPE_PUBLIC, this is the public ID. If DOCTYPE_SYSTEM,\\n     *                       then this is a system ID.\\n     * @param bool   $quirks Indicates whether the builder should enter quirks mode.\\n     *\/\\n    public function doctype($name, $idType = 0, $id = null, $quirks = false);\\n\\n    \/**\\n     * A start tag.\\n     *\\n     * IMPORTANT: The parser watches the return value of this event. If this returns\\n     * an integer, the parser will switch TEXTMODE patters according to the int.\\n     *\\n     * This is how the Tree Builder can tell the Tokenizer when a certain tag should\\n     * cause the parser to go into RAW text mode.\\n     *\\n     * The HTML5 standard requires that the builder is the one that initiates this\\n     * step, and this is the only way short of a circular reference that we can\\n     * do that.\\n     *\\n     * Example: if a startTag even for a `script` name is fired, and the startTag()\\n     * implementation returns Tokenizer::TEXTMODE_RAW, then the tokenizer will\\n     * switch into RAW text mode and consume data until it reaches a closing\\n     * `script` tag.\\n     *\\n     * The textmode is automatically reset to Tokenizer::TEXTMODE_NORMAL when the\\n     * closing tag is encounter. **This behavior may change.**\\n     *\\n     * @param string $name        The tag name.\\n     * @param array  $attributes  An array with all of the tag's attributes.\\n     * @param bool   $selfClosing An indicator of whether or not this tag is self-closing (<foo\/>).\\n     *\\n     * @return int one of the Tokenizer::TEXTMODE_* constants\\n     *\/\\n    public function startTag($name, $attributes = array(), $selfClosing = false);\\n\\n    \/**\\n     * An end-tag.\\n     *\/\\n    public function endTag($name);\\n\\n    \/**\\n     * A comment section (unparsed character data).\\n     *\/\\n    public function comment($cdata);\\n\\n    \/**\\n     * A unit of parsed character data.\\n     *\\n     * Entities in this text are *already decoded*.\\n     *\/\\n    public function text($cdata);\\n\\n    \/**\\n     * Indicates that the document has been entirely processed.\\n     *\/\\n    public function eof();\\n\\n    \/**\\n     * Emitted when the parser encounters an error condition.\\n     *\/\\n    public function parseError($msg, $line, $col);\\n\\n    \/**\\n     * A CDATA section.\\n     *\\n     * @param string $data\\n     *                     The unparsed character data\\n     *\/\\n    public function cdata($data);\\n\\n    \/**\\n     * This is a holdover from the XML spec.\\n     *\\n     * While user agents don't get PIs, server-side does.\\n     *\\n     * @param string $name The name of the processor (e.g. 'php').\\n     * @param string $data The unparsed data.\\n     *\/\\n    public function processingInstruction($name, $data = null);\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/Scanner.php\",\"ext\":\"php\",\"size\":11460,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\nuse Masterminds\\\\HTML5\\\\Exception;\\n\\n\/**\\n * The scanner scans over a given data input to react appropriately to characters.\\n *\/\\nclass Scanner\\n{\\n    const CHARS_HEX = 'abcdefABCDEF01234567890';\\n    const CHARS_ALNUM = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890';\\n    const CHARS_ALPHA = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\\n\\n    \/**\\n     * The string data we're parsing.\\n     *\/\\n    private $data;\\n\\n    \/**\\n     * The current integer byte position we are in $data.\\n     *\/\\n    private $char;\\n\\n    \/**\\n     * Length of $data; when $char === $data, we are at the end-of-file.\\n     *\/\\n    private $EOF;\\n\\n    \/**\\n     * Parse errors.\\n     *\/\\n    public $errors = array();\\n\\n    \/**\\n     * Create a new Scanner.\\n     *\\n     * @param string $data     Data to parse.\\n     * @param string $encoding The encoding to use for the data.\\n     *\\n     * @throws Exception If the given data cannot be encoded to UTF-8.\\n     *\/\\n    public function __construct($data, $encoding = 'UTF-8')\\n    {\\n        if ($data instanceof InputStream) {\\n            @trigger_error('InputStream objects are deprecated since version 2.4 and will be removed in 3.0. Use strings instead.', E_USER_DEPRECATED);\\n            $data = (string) $data;\\n        }\\n\\n        $data = UTF8Utils::convertToUTF8($data, $encoding);\\n\\n        \/\/ There is good reason to question whether it makes sense to\\n        \/\/ do this here, since most of these checks are done during\\n        \/\/ parsing, and since this check doesn't actually *do* anything.\\n        $this->errors = UTF8Utils::checkForIllegalCodepoints($data);\\n\\n        $data = $this->replaceLinefeeds($data);\\n\\n        $this->data = $data;\\n        $this->char = 0;\\n        $this->EOF = strlen($data);\\n    }\\n\\n    \/**\\n     * Check if upcomming chars match the given sequence.\\n     *\\n     * This will read the stream for the $sequence. If it's\\n     * found, this will return true. If not, return false.\\n     * Since this unconsumes any chars it reads, the caller\\n     * will still need to read the next sequence, even if\\n     * this returns true.\\n     *\\n     * Example: $this->scanner->sequenceMatches('<\/script>') will\\n     * see if the input stream is at the start of a\\n     * '<\/script>' string.\\n     *\\n     * @param string $sequence\\n     * @param bool   $caseSensitive\\n     *\\n     * @return bool\\n     *\/\\n    public function sequenceMatches($sequence, $caseSensitive = true)\\n    {\\n        $portion = substr($this->data, $this->char, strlen($sequence));\\n\\n        return $caseSensitive ? $portion === $sequence : 0 === strcasecmp($portion, $sequence);\\n    }\\n\\n    \/**\\n     * Get the current position.\\n     *\\n     * @return int The current intiger byte position.\\n     *\/\\n    public function position()\\n    {\\n        return $this->char;\\n    }\\n\\n    \/**\\n     * Take a peek at the next character in the data.\\n     *\\n     * @return string The next character.\\n     *\/\\n    public function peek()\\n    {\\n        if (($this->char + 1) < $this->EOF) {\\n            return $this->data[$this->char + 1];\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Get the next character.\\n     * Note: This advances the pointer.\\n     *\\n     * @return string The next character.\\n     *\/\\n    public function next()\\n    {\\n        ++$this->char;\\n\\n        if ($this->char < $this->EOF) {\\n            return $this->data[$this->char];\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Get the current character.\\n     * Note, this does not advance the pointer.\\n     *\\n     * @return string The current character.\\n     *\/\\n    public function current()\\n    {\\n        if ($this->char < $this->EOF) {\\n            return $this->data[$this->char];\\n        }\\n\\n        return false;\\n    }\\n\\n    \/**\\n     * Silently consume N chars.\\n     *\\n     * @param int $count\\n     *\/\\n    public function consume($count = 1)\\n    {\\n        $this->char += $count;\\n    }\\n\\n    \/**\\n     * Unconsume some of the data.\\n     * This moves the data pointer backwards.\\n     *\\n     * @param int $howMany The number of characters to move the pointer back.\\n     *\/\\n    public function unconsume($howMany = 1)\\n    {\\n        if (($this->char - $howMany) >= 0) {\\n            $this->char -= $howMany;\\n        }\\n    }\\n\\n    \/**\\n     * Get the next group of that contains hex characters.\\n     * Note, along with getting the characters the pointer in the data will be\\n     * moved as well.\\n     *\\n     * @return string The next group that is hex characters.\\n     *\/\\n    public function getHex()\\n    {\\n        return $this->doCharsWhile(static::CHARS_HEX);\\n    }\\n\\n    \/**\\n     * Get the next group of characters that are ASCII Alpha characters.\\n     * Note, along with getting the characters the pointer in the data will be\\n     * moved as well.\\n     *\\n     * @return string The next group of ASCII alpha characters.\\n     *\/\\n    public function getAsciiAlpha()\\n    {\\n        return $this->doCharsWhile(static::CHARS_ALPHA);\\n    }\\n\\n    \/**\\n     * Get the next group of characters that are ASCII Alpha characters and numbers.\\n     * Note, along with getting the characters the pointer in the data will be\\n     * moved as well.\\n     *\\n     * @return string The next group of ASCII alpha characters and numbers.\\n     *\/\\n    public function getAsciiAlphaNum()\\n    {\\n        return $this->doCharsWhile(static::CHARS_ALNUM);\\n    }\\n\\n    \/**\\n     * Get the next group of numbers.\\n     * Note, along with getting the characters the pointer in the data will be\\n     * moved as well.\\n     *\\n     * @return string The next group of numbers.\\n     *\/\\n    public function getNumeric()\\n    {\\n        return $this->doCharsWhile('0123456789');\\n    }\\n\\n    \/**\\n     * Consume whitespace.\\n     * Whitespace in HTML5 is: formfeed, tab, newline, space.\\n     *\\n     * @return int The length of the matched whitespaces.\\n     *\/\\n    public function whitespace()\\n    {\\n        if ($this->char >= $this->EOF) {\\n            return false;\\n        }\\n\\n        $len = strspn($this->data, \\\"\\\\n\\\\t\\\\f \\\", $this->char);\\n\\n        $this->char += $len;\\n\\n        return $len;\\n    }\\n\\n    \/**\\n     * Returns the current line that is being consumed.\\n     *\\n     * @return int The current line number.\\n     *\/\\n    public function currentLine()\\n    {\\n        if (empty($this->EOF) || 0 === $this->char) {\\n            return 1;\\n        }\\n\\n        \/\/ Add one to $this->char because we want the number for the next\\n        \/\/ byte to be processed.\\n        return substr_count($this->data, \\\"\\\\n\\\", 0, min($this->char, $this->EOF)) + 1;\\n    }\\n\\n    \/**\\n     * Read chars until something in the mask is encountered.\\n     *\\n     * @param string $mask\\n     *\\n     * @return mixed\\n     *\/\\n    public function charsUntil($mask)\\n    {\\n        return $this->doCharsUntil($mask);\\n    }\\n\\n    \/**\\n     * Read chars as long as the mask matches.\\n     *\\n     * @param string $mask\\n     *\\n     * @return int\\n     *\/\\n    public function charsWhile($mask)\\n    {\\n        return $this->doCharsWhile($mask);\\n    }\\n\\n    \/**\\n     * Returns the current column of the current line that the tokenizer is at.\\n     *\\n     * Newlines are column 0. The first char after a newline is column 1.\\n     *\\n     * @return int The column number.\\n     *\/\\n    public function columnOffset()\\n    {\\n        \/\/ Short circuit for the first char.\\n        if (0 === $this->char) {\\n            return 0;\\n        }\\n\\n        \/\/ strrpos is weird, and the offset needs to be negative for what we\\n        \/\/ want (i.e., the last \\\\n before $this->char). This needs to not have\\n        \/\/ one (to make it point to the next character, the one we want the\\n        \/\/ position of) added to it because strrpos's behaviour includes the\\n        \/\/ final offset byte.\\n        $backwardFrom = $this->char - 1 - strlen($this->data);\\n        $lastLine = strrpos($this->data, \\\"\\\\n\\\", $backwardFrom);\\n\\n        \/\/ However, for here we want the length up until the next byte to be\\n        \/\/ processed, so add one to the current byte ($this->char).\\n        if (false !== $lastLine) {\\n            $findLengthOf = substr($this->data, $lastLine + 1, $this->char - 1 - $lastLine);\\n        } else {\\n            \/\/ After a newline.\\n            $findLengthOf = substr($this->data, 0, $this->char);\\n        }\\n\\n        return UTF8Utils::countChars($findLengthOf);\\n    }\\n\\n    \/**\\n     * Get all characters until EOF.\\n     *\\n     * This consumes characters until the EOF.\\n     *\\n     * @return int The number of characters remaining.\\n     *\/\\n    public function remainingChars()\\n    {\\n        if ($this->char < $this->EOF) {\\n            $data = substr($this->data, $this->char);\\n            $this->char = $this->EOF;\\n\\n            return $data;\\n        }\\n\\n        return ''; \/\/ false;\\n    }\\n\\n    \/**\\n     * Replace linefeed characters according to the spec.\\n     *\\n     * @param $data\\n     *\\n     * @return string\\n     *\/\\n    private function replaceLinefeeds($data)\\n    {\\n        \/*\\n         * U+000D CARRIAGE RETURN (CR) characters and U+000A LINE FEED (LF) characters are treated specially.\\n         * Any CR characters that are followed by LF characters must be removed, and any CR characters not\\n         * followed by LF characters must be converted to LF characters. Thus, newlines in HTML DOMs are\\n         * represented by LF characters, and there are never any CR characters in the input to the tokenization\\n         * stage.\\n         *\/\\n        $crlfTable = array(\\n            \\\"\\\\0\\\" => \\\"\\\\xEF\\\\xBF\\\\xBD\\\",\\n            \\\"\\\\r\\\\n\\\" => \\\"\\\\n\\\",\\n            \\\"\\\\r\\\" => \\\"\\\\n\\\",\\n        );\\n\\n        return strtr($data, $crlfTable);\\n    }\\n\\n    \/**\\n     * Read to a particular match (or until $max bytes are consumed).\\n     *\\n     * This operates on byte sequences, not characters.\\n     *\\n     * Matches as far as possible until we reach a certain set of bytes\\n     * and returns the matched substring.\\n     *\\n     * @param string $bytes Bytes to match.\\n     * @param int    $max   Maximum number of bytes to scan.\\n     *\\n     * @return mixed Index or false if no match is found. You should use strong\\n     *               equality when checking the result, since index could be 0.\\n     *\/\\n    private function doCharsUntil($bytes, $max = null)\\n    {\\n        if ($this->char >= $this->EOF) {\\n            return false;\\n        }\\n\\n        if (0 === $max || $max) {\\n            $len = strcspn($this->data, $bytes, $this->char, $max);\\n        } else {\\n            $len = strcspn($this->data, $bytes, $this->char);\\n        }\\n\\n        $string = (string) substr($this->data, $this->char, $len);\\n        $this->char += $len;\\n\\n        return $string;\\n    }\\n\\n    \/**\\n     * Returns the string so long as $bytes matches.\\n     *\\n     * Matches as far as possible with a certain set of bytes\\n     * and returns the matched substring.\\n     *\\n     * @param string $bytes A mask of bytes to match. If ANY byte in this mask matches the\\n     *                      current char, the pointer advances and the char is part of the\\n     *                      substring.\\n     * @param int    $max   The max number of chars to read.\\n     *\\n     * @return string\\n     *\/\\n    private function doCharsWhile($bytes, $max = null)\\n    {\\n        if ($this->char >= $this->EOF) {\\n            return false;\\n        }\\n\\n        if (0 === $max || $max) {\\n            $len = strspn($this->data, $bytes, $this->char, $max);\\n        } else {\\n            $len = strspn($this->data, $bytes, $this->char);\\n        }\\n\\n        $string = (string) substr($this->data, $this->char, $len);\\n        $this->char += $len;\\n\\n        return $string;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/UTF8Utils.php\",\"ext\":\"php\",\"size\":7276,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\n\/*\\nPortions based on code from html5lib files with the following copyright:\\n\\nCopyright 2009 Geoffrey Sneddon <http:\/\/gsnedders.com\/>\\n\\nPermission is hereby granted, free of charge, to any person obtaining a\\ncopy of this software and associated documentation files (the\\n    \\\"Software\\\"), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and\/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be included\\nin all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n*\/\\n\\nuse Masterminds\\\\HTML5\\\\Exception;\\n\\nclass UTF8Utils\\n{\\n    \/**\\n     * The Unicode replacement character.\\n     *\/\\n    const FFFD = \\\"\\\\xEF\\\\xBF\\\\xBD\\\";\\n\\n    \/**\\n     * Count the number of characters in a string.\\n     * UTF-8 aware. This will try (in order) iconv, MB, and finally a custom counter.\\n     *\\n     * @param string $string\\n     *\\n     * @return int\\n     *\/\\n    public static function countChars($string)\\n    {\\n        \/\/ Get the length for the string we need.\\n        if (function_exists('mb_strlen')) {\\n            return mb_strlen($string, 'utf-8');\\n        }\\n\\n        if (function_exists('iconv_strlen')) {\\n            return iconv_strlen($string, 'utf-8');\\n        }\\n\\n        $count = count_chars($string);\\n\\n        \/\/ 0x80 = 0x7F - 0 + 1 (one added to get inclusive range)\\n        \/\/ 0x33 = 0xF4 - 0x2C + 1 (one added to get inclusive range)\\n        return array_sum(array_slice($count, 0, 0x80)) + array_sum(array_slice($count, 0xC2, 0x33));\\n    }\\n\\n    \/**\\n     * Convert data from the given encoding to UTF-8.\\n     *\\n     * This has not yet been tested with charactersets other than UTF-8.\\n     * It should work with ISO-8859-1\/-13 and standard Latin Win charsets.\\n     *\\n     * @param string $data     The data to convert\\n     * @param string $encoding A valid encoding. Examples: http:\/\/www.php.net\/manual\/en\/mbstring.supported-encodings.php\\n     *\\n     * @return string\\n     *\/\\n    public static function convertToUTF8($data, $encoding = 'UTF-8')\\n    {\\n        \/*\\n         * From the HTML5 spec: Given an encoding, the bytes in the input stream must be converted\\n         * to Unicode characters for the tokeniser, as described by the rules for that encoding,\\n         * except that the leading U+FEFF BYTE ORDER MARK character, if any, must not be stripped\\n         * by the encoding layer (it is stripped by the rule below). Bytes or sequences of bytes\\n         * in the original byte stream that could not be converted to Unicode characters must be\\n         * converted to U+FFFD REPLACEMENT CHARACTER code points.\\n         *\/\\n\\n        \/\/ mb_convert_encoding is chosen over iconv because of a bug. The best\\n        \/\/ details for the bug are on http:\/\/us1.php.net\/manual\/en\/function.iconv.php#108643\\n        \/\/ which contains links to the actual but reports as well as work around\\n        \/\/ details.\\n        if (function_exists('mb_convert_encoding')) {\\n            \/\/ mb library has the following behaviors:\\n            \/\/ - UTF-16 surrogates result in false.\\n            \/\/ - Overlongs and outside Plane 16 result in empty strings.\\n\\n            \/\/ Before we run mb_convert_encoding we need to tell it what to do with\\n            \/\/ characters it does not know. This could be different than the parent\\n            \/\/ application executing this library so we store the value, change it\\n            \/\/ to our needs, and then change it back when we are done. This feels\\n            \/\/ a little excessive and it would be great if there was a better way.\\n            $save = mb_substitute_character();\\n            mb_substitute_character('none');\\n            $data = mb_convert_encoding($data, 'UTF-8', $encoding);\\n            mb_substitute_character($save);\\n        }\\n        \/\/ @todo Get iconv running in at least some environments if that is possible.\\n        elseif (function_exists('iconv') && 'auto' !== $encoding) {\\n            \/\/ fprintf(STDOUT, \\\"iconv found\\\\n\\\");\\n            \/\/ iconv has the following behaviors:\\n            \/\/ - Overlong representations are ignored.\\n            \/\/ - Beyond Plane 16 is replaced with a lower char.\\n            \/\/ - Incomplete sequences generate a warning.\\n            $data = @iconv($encoding, 'UTF-8\/\/IGNORE', $data);\\n        } else {\\n            throw new Exception('Not implemented, please install mbstring or iconv');\\n        }\\n\\n        \/*\\n         * One leading U+FEFF BYTE ORDER MARK character must be ignored if any are present.\\n         *\/\\n        if (\\\"\\\\xEF\\\\xBB\\\\xBF\\\" === substr($data, 0, 3)) {\\n            $data = substr($data, 3);\\n        }\\n\\n        return $data;\\n    }\\n\\n    \/**\\n     * Checks for Unicode code points that are not valid in a document.\\n     *\\n     * @param string $data A string to analyze\\n     *\\n     * @return array An array of (string) error messages produced by the scanning\\n     *\/\\n    public static function checkForIllegalCodepoints($data)\\n    {\\n        \/\/ Vestigal error handling.\\n        $errors = array();\\n\\n        \/*\\n         * All U+0000 null characters in the input must be replaced by U+FFFD REPLACEMENT CHARACTERs.\\n         * Any occurrences of such characters is a parse error.\\n         *\/\\n        for ($i = 0, $count = substr_count($data, \\\"\\\\0\\\"); $i < $count; ++$i) {\\n            $errors[] = 'null-character';\\n        }\\n\\n        \/*\\n         * Any occurrences of any characters in the ranges U+0001 to U+0008, U+000B, U+000E to U+001F, U+007F\\n         * to U+009F, U+D800 to U+DFFF , U+FDD0 to U+FDEF, and characters U+FFFE, U+FFFF, U+1FFFE, U+1FFFF,\\n         * U+2FFFE, U+2FFFF, U+3FFFE, U+3FFFF, U+4FFFE, U+4FFFF, U+5FFFE, U+5FFFF, U+6FFFE, U+6FFFF, U+7FFFE,\\n         * U+7FFFF, U+8FFFE, U+8FFFF, U+9FFFE, U+9FFFF, U+AFFFE, U+AFFFF, U+BFFFE, U+BFFFF, U+CFFFE, U+CFFFF,\\n         * U+DFFFE, U+DFFFF, U+EFFFE, U+EFFFF, U+FFFFE, U+FFFFF, U+10FFFE, and U+10FFFF are parse errors.\\n         * (These are all control characters or permanently undefined Unicode characters.)\\n         *\/\\n        \/\/ Check PCRE is loaded.\\n        $count = preg_match_all(\\n            '\/(?:\\n        [\\\\x01-\\\\x08\\\\x0B\\\\x0E-\\\\x1F\\\\x7F] # U+0001 to U+0008, U+000B,  U+000E to U+001F and U+007F\\n      |\\n        \\\\xC2[\\\\x80-\\\\x9F] # U+0080 to U+009F\\n      |\\n        \\\\xED(?:\\\\xA0[\\\\x80-\\\\xFF]|[\\\\xA1-\\\\xBE][\\\\x00-\\\\xFF]|\\\\xBF[\\\\x00-\\\\xBF]) # U+D800 to U+DFFFF\\n      |\\n        \\\\xEF\\\\xB7[\\\\x90-\\\\xAF] # U+FDD0 to U+FDEF\\n      |\\n        \\\\xEF\\\\xBF[\\\\xBE\\\\xBF] # U+FFFE and U+FFFF\\n      |\\n        [\\\\xF0-\\\\xF4][\\\\x8F-\\\\xBF]\\\\xBF[\\\\xBE\\\\xBF] # U+nFFFE and U+nFFFF (1 <= n <= 10_{16})\\n      )\/x', $data, $matches);\\n        for ($i = 0; $i < $count; ++$i) {\\n            $errors[] = 'invalid-codepoint';\\n        }\\n\\n        return $errors;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/src\/HTML5\/Parser\/CharacterReference.php\",\"ext\":\"php\",\"size\":1531,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace Masterminds\\\\HTML5\\\\Parser;\\n\\nuse Masterminds\\\\HTML5\\\\Entities;\\n\\n\/**\\n * Manage entity references.\\n *\\n * This is a simple resolver for HTML5 character reference entitites. See Entities for the list of supported entities.\\n *\/\\nclass CharacterReference\\n{\\n    protected static $numeric_mask = array(\\n        0x0,\\n        0x2FFFF,\\n        0,\\n        0xFFFF,\\n    );\\n\\n    \/**\\n     * Given a name (e.g. 'amp'), lookup the UTF-8 character ('&').\\n     *\\n     * @param string $name The name to look up.\\n     *\\n     * @return string The character sequence. In UTF-8 this may be more than one byte.\\n     *\/\\n    public static function lookupName($name)\\n    {\\n        \/\/ Do we really want to return NULL here? or FFFD\\n        return isset(Entities::$byName[$name]) ? Entities::$byName[$name] : null;\\n    }\\n\\n    \/**\\n     * Given a decimal number, return the UTF-8 character.\\n     *\\n     * @param $int\\n     *\\n     * @return false|string|string[]|null\\n     *\/\\n    public static function lookupDecimal($int)\\n    {\\n        $entity = '&#' . $int . ';';\\n\\n        \/\/ UNTESTED: This may fail on some planes. Couldn't find full documentation\\n        \/\/ on the value of the mask array.\\n        return mb_decode_numericentity($entity, static::$numeric_mask, 'utf-8');\\n    }\\n\\n    \/**\\n     * Given a hexadecimal number, return the UTF-8 character.\\n     *\\n     * @param $hexdec\\n     *\\n     * @return false|string|string[]|null\\n     *\/\\n    public static function lookupHex($hexdec)\\n    {\\n        return static::lookupDecimal(hexdec($hexdec));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/masterminds\/html5\/LICENSE.txt\",\"ext\":\"txt\",\"size\":2973,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"## HTML5-PHP License\\n\\nCopyright (c) 2013 The Authors of HTML5-PHP\\n\\nMatt Butcher - mattbutcher@google.com\\nMatt Farina - matt@mattfarina.com\\nAsmir Mustafic - goetas@gmail.com\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in \\nthe Software without restriction, including without limitation the rights to \\nuse, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\n## HTML5Lib License\\n\\nPortions of this are based on html5lib's PHP version, which was a\\nsub-project of html5lib. The following is the list of contributors from\\nhtml5lib:\\n\\nhtml5lib:\\n\\nCopyright (c) 2006-2009 The Authors\\n\\nContributors:\\nJames Graham - jg307@cam.ac.uk\\nAnne van Kesteren - annevankesteren@gmail.com\\nLachlan Hunt - lachlan.hunt@lachy.id.au\\nMatt McDonald - kanashii@kanashii.ca\\nSam Ruby - rubys@intertwingly.net\\nIan Hickson (Google) - ian@hixie.ch\\nThomas Broyer - t.broyer@ltgt.net\\nJacques Distler - distler@golem.ph.utexas.edu\\nHenri Sivonen - hsivonen@iki.fi\\nAdam Barth - abarth@webkit.org\\nEric Seidel - eric@webkit.org\\nThe Mozilla Foundation (contributions from Henri Sivonen since 2008)\\nDavid Flanagan (Mozilla) - dflanagan@mozilla.com\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of\\nthis software and associated documentation files (the \\\"Software\\\"), to deal in \\nthe Software without restriction, including without limitation the rights to \\nuse, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of\\nthe Software, and to permit persons to whom the Software is furnished to do so,\\nsubject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/WordInflector.php\",\"ext\":\"php\",\"size\":143,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\ninterface WordInflector\\n{\\n    public function inflect(string $word): string;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/CachedWordInflector.php\",\"ext\":\"php\",\"size\":511,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nclass CachedWordInflector implements WordInflector\\n{\\n    \/** @var WordInflector *\/\\n    private $wordInflector;\\n\\n    \/** @var string[] *\/\\n    private $cache = [];\\n\\n    public function __construct(WordInflector $wordInflector)\\n    {\\n        $this->wordInflector = $wordInflector;\\n    }\\n\\n    public function inflect(string $word): string\\n    {\\n        return $this->cache[$word] ?? $this->cache[$word] = $this->wordInflector->inflect($word);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/GenericLanguageInflectorFactory.php\",\"ext\":\"php\",\"size\":1675,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nuse function array_unshift;\\n\\nabstract class GenericLanguageInflectorFactory implements LanguageInflectorFactory\\n{\\n    \/** @var Ruleset[] *\/\\n    private $singularRulesets = [];\\n\\n    \/** @var Ruleset[] *\/\\n    private $pluralRulesets = [];\\n\\n    final public function __construct()\\n    {\\n        $this->singularRulesets[] = $this->getSingularRuleset();\\n        $this->pluralRulesets[]   = $this->getPluralRuleset();\\n    }\\n\\n    final public function build(): Inflector\\n    {\\n        return new Inflector(\\n            new CachedWordInflector(new RulesetInflector(\\n                ...$this->singularRulesets\\n            )),\\n            new CachedWordInflector(new RulesetInflector(\\n                ...$this->pluralRulesets\\n            ))\\n        );\\n    }\\n\\n    final public function withSingularRules(?Ruleset $singularRules, bool $reset = false): LanguageInflectorFactory\\n    {\\n        if ($reset) {\\n            $this->singularRulesets = [];\\n        }\\n\\n        if ($singularRules instanceof Ruleset) {\\n            array_unshift($this->singularRulesets, $singularRules);\\n        }\\n\\n        return $this;\\n    }\\n\\n    final public function withPluralRules(?Ruleset $pluralRules, bool $reset = false): LanguageInflectorFactory\\n    {\\n        if ($reset) {\\n            $this->pluralRulesets = [];\\n        }\\n\\n        if ($pluralRules instanceof Ruleset) {\\n            array_unshift($this->pluralRulesets, $pluralRules);\\n        }\\n\\n        return $this;\\n    }\\n\\n    abstract protected function getSingularRuleset(): Ruleset;\\n\\n    abstract protected function getPluralRuleset(): Ruleset;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/LanguageInflectorFactory.php\",\"ext\":\"php\",\"size\":805,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\ninterface LanguageInflectorFactory\\n{\\n    \/**\\n     * Applies custom rules for singularisation\\n     *\\n     * @param bool $reset If true, will unset default inflections for all new rules\\n     *\\n     * @return $this\\n     *\/\\n    public function withSingularRules(?Ruleset $singularRules, bool $reset = false): self;\\n\\n    \/**\\n     * Applies custom rules for pluralisation\\n     *\\n     * @param bool $reset If true, will unset default inflections for all new rules\\n     *\\n     * @return $this\\n     *\/\\n    public function withPluralRules(?Ruleset $pluralRules, bool $reset = false): self;\\n\\n    \/**\\n     * Builds the inflector instance with all applicable rules\\n     *\/\\n    public function build(): Inflector;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Inflector.php\",\"ext\":\"php\",\"size\":12848,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nuse RuntimeException;\\n\\nuse function chr;\\nuse function function_exists;\\nuse function lcfirst;\\nuse function mb_strtolower;\\nuse function ord;\\nuse function preg_match;\\nuse function preg_replace;\\nuse function sprintf;\\nuse function str_replace;\\nuse function strlen;\\nuse function strtolower;\\nuse function strtr;\\nuse function trim;\\nuse function ucwords;\\n\\nclass Inflector\\n{\\n    private const ACCENTED_CHARACTERS = [\\n        '\u00c0' => 'A',\\n        '\u00c1' => 'A',\\n        '\u00c2' => 'A',\\n        '\u00c3' => 'A',\\n        '\u00c4' => 'Ae',\\n        '\u00c6' => 'Ae',\\n        '\u00c5' => 'Aa',\\n        '\u00e6' => 'a',\\n        '\u00c7' => 'C',\\n        '\u00c8' => 'E',\\n        '\u00c9' => 'E',\\n        '\u00ca' => 'E',\\n        '\u00cb' => 'E',\\n        '\u00cc' => 'I',\\n        '\u00cd' => 'I',\\n        '\u00ce' => 'I',\\n        '\u00cf' => 'I',\\n        '\u00d1' => 'N',\\n        '\u00d2' => 'O',\\n        '\u00d3' => 'O',\\n        '\u00d4' => 'O',\\n        '\u00d5' => 'O',\\n        '\u00d6' => 'Oe',\\n        '\u00d9' => 'U',\\n        '\u00da' => 'U',\\n        '\u00db' => 'U',\\n        '\u00dc' => 'Ue',\\n        '\u00dd' => 'Y',\\n        '\u00df' => 'ss',\\n        '\u00e0' => 'a',\\n        '\u00e1' => 'a',\\n        '\u00e2' => 'a',\\n        '\u00e3' => 'a',\\n        '\u00e4' => 'ae',\\n        '\u00e5' => 'aa',\\n        '\u00e7' => 'c',\\n        '\u00e8' => 'e',\\n        '\u00e9' => 'e',\\n        '\u00ea' => 'e',\\n        '\u00eb' => 'e',\\n        '\u00ec' => 'i',\\n        '\u00ed' => 'i',\\n        '\u00ee' => 'i',\\n        '\u00ef' => 'i',\\n        '\u00f1' => 'n',\\n        '\u00f2' => 'o',\\n        '\u00f3' => 'o',\\n        '\u00f4' => 'o',\\n        '\u00f5' => 'o',\\n        '\u00f6' => 'oe',\\n        '\u00f9' => 'u',\\n        '\u00fa' => 'u',\\n        '\u00fb' => 'u',\\n        '\u00fc' => 'ue',\\n        '\u00fd' => 'y',\\n        '\u00ff' => 'y',\\n        '\u0100' => 'A',\\n        '\u0101' => 'a',\\n        '\u0102' => 'A',\\n        '\u0103' => 'a',\\n        '\u0104' => 'A',\\n        '\u0105' => 'a',\\n        '\u0106' => 'C',\\n        '\u0107' => 'c',\\n        '\u0108' => 'C',\\n        '\u0109' => 'c',\\n        '\u010a' => 'C',\\n        '\u010b' => 'c',\\n        '\u010c' => 'C',\\n        '\u010d' => 'c',\\n        '\u010e' => 'D',\\n        '\u010f' => 'd',\\n        '\u0110' => 'D',\\n        '\u0111' => 'd',\\n        '\u0112' => 'E',\\n        '\u0113' => 'e',\\n        '\u0114' => 'E',\\n        '\u0115' => 'e',\\n        '\u0116' => 'E',\\n        '\u0117' => 'e',\\n        '\u0118' => 'E',\\n        '\u0119' => 'e',\\n        '\u011a' => 'E',\\n        '\u011b' => 'e',\\n        '\u011c' => 'G',\\n        '\u011d' => 'g',\\n        '\u011e' => 'G',\\n        '\u011f' => 'g',\\n        '\u0120' => 'G',\\n        '\u0121' => 'g',\\n        '\u0122' => 'G',\\n        '\u0123' => 'g',\\n        '\u0124' => 'H',\\n        '\u0125' => 'h',\\n        '\u0126' => 'H',\\n        '\u0127' => 'h',\\n        '\u0128' => 'I',\\n        '\u0129' => 'i',\\n        '\u012a' => 'I',\\n        '\u012b' => 'i',\\n        '\u012c' => 'I',\\n        '\u012d' => 'i',\\n        '\u012e' => 'I',\\n        '\u012f' => 'i',\\n        '\u0130' => 'I',\\n        '\u0131' => 'i',\\n        '\u0132' => 'IJ',\\n        '\u0133' => 'ij',\\n        '\u0134' => 'J',\\n        '\u0135' => 'j',\\n        '\u0136' => 'K',\\n        '\u0137' => 'k',\\n        '\u0138' => 'k',\\n        '\u0139' => 'L',\\n        '\u013a' => 'l',\\n        '\u013b' => 'L',\\n        '\u013c' => 'l',\\n        '\u013d' => 'L',\\n        '\u013e' => 'l',\\n        '\u013f' => 'L',\\n        '\u0140' => 'l',\\n        '\u0141' => 'L',\\n        '\u0142' => 'l',\\n        '\u0143' => 'N',\\n        '\u0144' => 'n',\\n        '\u0145' => 'N',\\n        '\u0146' => 'n',\\n        '\u0147' => 'N',\\n        '\u0148' => 'n',\\n        '\u0149' => 'N',\\n        '\u014a' => 'n',\\n        '\u014b' => 'N',\\n        '\u014c' => 'O',\\n        '\u014d' => 'o',\\n        '\u014e' => 'O',\\n        '\u014f' => 'o',\\n        '\u0150' => 'O',\\n        '\u0151' => 'o',\\n        '\u0152' => 'OE',\\n        '\u0153' => 'oe',\\n        '\u00d8' => 'O',\\n        '\u00f8' => 'o',\\n        '\u0154' => 'R',\\n        '\u0155' => 'r',\\n        '\u0156' => 'R',\\n        '\u0157' => 'r',\\n        '\u0158' => 'R',\\n        '\u0159' => 'r',\\n        '\u015a' => 'S',\\n        '\u015b' => 's',\\n        '\u015c' => 'S',\\n        '\u015d' => 's',\\n        '\u015e' => 'S',\\n        '\u015f' => 's',\\n        '\u0160' => 'S',\\n        '\u0161' => 's',\\n        '\u0162' => 'T',\\n        '\u0163' => 't',\\n        '\u0164' => 'T',\\n        '\u0165' => 't',\\n        '\u0166' => 'T',\\n        '\u0167' => 't',\\n        '\u0168' => 'U',\\n        '\u0169' => 'u',\\n        '\u016a' => 'U',\\n        '\u016b' => 'u',\\n        '\u016c' => 'U',\\n        '\u016d' => 'u',\\n        '\u016e' => 'U',\\n        '\u016f' => 'u',\\n        '\u0170' => 'U',\\n        '\u0171' => 'u',\\n        '\u0172' => 'U',\\n        '\u0173' => 'u',\\n        '\u0174' => 'W',\\n        '\u0175' => 'w',\\n        '\u0176' => 'Y',\\n        '\u0177' => 'y',\\n        '\u0178' => 'Y',\\n        '\u0179' => 'Z',\\n        '\u017a' => 'z',\\n        '\u017b' => 'Z',\\n        '\u017c' => 'z',\\n        '\u017d' => 'Z',\\n        '\u017e' => 'z',\\n        '\u017f' => 's',\\n        '\u20ac' => 'E',\\n        '\u00a3' => '',\\n    ];\\n\\n    \/** @var WordInflector *\/\\n    private $singularizer;\\n\\n    \/** @var WordInflector *\/\\n    private $pluralizer;\\n\\n    public function __construct(WordInflector $singularizer, WordInflector $pluralizer)\\n    {\\n        $this->singularizer = $singularizer;\\n        $this->pluralizer   = $pluralizer;\\n    }\\n\\n    \/**\\n     * Converts a word into the format for a Doctrine table name. Converts 'ModelName' to 'model_name'.\\n     *\/\\n    public function tableize(string $word): string\\n    {\\n        $tableized = preg_replace('~(?<=\\\\\\\\w)([A-Z])~u', '_$1', $word);\\n\\n        if ($tableized === null) {\\n            throw new RuntimeException(sprintf(\\n                'preg_replace returned null for value \\\"%s\\\"',\\n                $word\\n            ));\\n        }\\n\\n        return mb_strtolower($tableized);\\n    }\\n\\n    \/**\\n     * Converts a word into the format for a Doctrine class name. Converts 'table_name' to 'TableName'.\\n     *\/\\n    public function classify(string $word): string\\n    {\\n        return str_replace([' ', '_', '-'], '', ucwords($word, ' _-'));\\n    }\\n\\n    \/**\\n     * Camelizes a word. This uses the classify() method and turns the first character to lowercase.\\n     *\/\\n    public function camelize(string $word): string\\n    {\\n        return lcfirst($this->classify($word));\\n    }\\n\\n    \/**\\n     * Uppercases words with configurable delimiters between words.\\n     *\\n     * Takes a string and capitalizes all of the words, like PHP's built-in\\n     * ucwords function. This extends that behavior, however, by allowing the\\n     * word delimiters to be configured, rather than only separating on\\n     * whitespace.\\n     *\\n     * Here is an example:\\n     * <code>\\n     * <?php\\n     * $string = 'top-o-the-morning to all_of_you!';\\n     * echo $inflector->capitalize($string);\\n     * \/\/ Top-O-The-Morning To All_of_you!\\n     *\\n     * echo $inflector->capitalize($string, '-_ ');\\n     * \/\/ Top-O-The-Morning To All_Of_You!\\n     * ?>\\n     * <\/code>\\n     *\\n     * @param string $string     The string to operate on.\\n     * @param string $delimiters A list of word separators.\\n     *\\n     * @return string The string with all delimiter-separated words capitalized.\\n     *\/\\n    public function capitalize(string $string, string $delimiters = \\\" \\\\n\\\\t\\\\r\\\\0\\\\x0B-\\\"): string\\n    {\\n        return ucwords($string, $delimiters);\\n    }\\n\\n    \/**\\n     * Checks if the given string seems like it has utf8 characters in it.\\n     *\\n     * @param string $string The string to check for utf8 characters in.\\n     *\/\\n    public function seemsUtf8(string $string): bool\\n    {\\n        for ($i = 0; $i < strlen($string); $i++) {\\n            if (ord($string[$i]) < 0x80) {\\n                continue; \/\/ 0bbbbbbb\\n            }\\n\\n            if ((ord($string[$i]) & 0xE0) === 0xC0) {\\n                $n = 1; \/\/ 110bbbbb\\n            } elseif ((ord($string[$i]) & 0xF0) === 0xE0) {\\n                $n = 2; \/\/ 1110bbbb\\n            } elseif ((ord($string[$i]) & 0xF8) === 0xF0) {\\n                $n = 3; \/\/ 11110bbb\\n            } elseif ((ord($string[$i]) & 0xFC) === 0xF8) {\\n                $n = 4; \/\/ 111110bb\\n            } elseif ((ord($string[$i]) & 0xFE) === 0xFC) {\\n                $n = 5; \/\/ 1111110b\\n            } else {\\n                return false; \/\/ Does not match any model\\n            }\\n\\n            for ($j = 0; $j < $n; $j++) { \/\/ n bytes matching 10bbbbbb follow ?\\n                if (++$i === strlen($string) || ((ord($string[$i]) & 0xC0) !== 0x80)) {\\n                    return false;\\n                }\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    \/**\\n     * Remove any illegal characters, accents, etc.\\n     *\\n     * @param  string $string String to unaccent\\n     *\\n     * @return string Unaccented string\\n     *\/\\n    public function unaccent(string $string): string\\n    {\\n        if (preg_match('\/[\\\\x80-\\\\xff]\/', $string) === false) {\\n            return $string;\\n        }\\n\\n        if ($this->seemsUtf8($string)) {\\n            $string = strtr($string, self::ACCENTED_CHARACTERS);\\n        } else {\\n            $characters = [];\\n\\n            \/\/ Assume ISO-8859-1 if not UTF-8\\n            $characters['in'] =\\n                  chr(128)\\n                . chr(131)\\n                . chr(138)\\n                . chr(142)\\n                . chr(154)\\n                . chr(158)\\n                . chr(159)\\n                . chr(162)\\n                . chr(165)\\n                . chr(181)\\n                . chr(192)\\n                . chr(193)\\n                . chr(194)\\n                . chr(195)\\n                . chr(196)\\n                . chr(197)\\n                . chr(199)\\n                . chr(200)\\n                . chr(201)\\n                . chr(202)\\n                . chr(203)\\n                . chr(204)\\n                . chr(205)\\n                . chr(206)\\n                . chr(207)\\n                . chr(209)\\n                . chr(210)\\n                . chr(211)\\n                . chr(212)\\n                . chr(213)\\n                . chr(214)\\n                . chr(216)\\n                . chr(217)\\n                . chr(218)\\n                . chr(219)\\n                . chr(220)\\n                . chr(221)\\n                . chr(224)\\n                . chr(225)\\n                . chr(226)\\n                . chr(227)\\n                . chr(228)\\n                . chr(229)\\n                . chr(231)\\n                . chr(232)\\n                . chr(233)\\n                . chr(234)\\n                . chr(235)\\n                . chr(236)\\n                . chr(237)\\n                . chr(238)\\n                . chr(239)\\n                . chr(241)\\n                . chr(242)\\n                . chr(243)\\n                . chr(244)\\n                . chr(245)\\n                . chr(246)\\n                . chr(248)\\n                . chr(249)\\n                . chr(250)\\n                . chr(251)\\n                . chr(252)\\n                . chr(253)\\n                . chr(255);\\n\\n            $characters['out'] = 'EfSZszYcYuAAAAAACEEEEIIIINOOOOOOUUUUYaaaaaaceeeeiiiinoooooouuuuyy';\\n\\n            $string = strtr($string, $characters['in'], $characters['out']);\\n\\n            $doubleChars = [];\\n\\n            $doubleChars['in'] = [\\n                chr(140),\\n                chr(156),\\n                chr(198),\\n                chr(208),\\n                chr(222),\\n                chr(223),\\n                chr(230),\\n                chr(240),\\n                chr(254),\\n            ];\\n\\n            $doubleChars['out'] = ['OE', 'oe', 'AE', 'DH', 'TH', 'ss', 'ae', 'dh', 'th'];\\n\\n            $string = str_replace($doubleChars['in'], $doubleChars['out'], $string);\\n        }\\n\\n        return $string;\\n    }\\n\\n    \/**\\n     * Convert any passed string to a url friendly string.\\n     * Converts 'My first blog post' to 'my-first-blog-post'\\n     *\\n     * @param  string $string String to urlize.\\n     *\\n     * @return string Urlized string.\\n     *\/\\n    public function urlize(string $string): string\\n    {\\n        \/\/ Remove all non url friendly characters with the unaccent function\\n        $unaccented = $this->unaccent($string);\\n\\n        if (function_exists('mb_strtolower')) {\\n            $lowered = mb_strtolower($unaccented);\\n        } else {\\n            $lowered = strtolower($unaccented);\\n        }\\n\\n        $replacements = [\\n            '\/\\\\W\/' => ' ',\\n            '\/([A-Z]+)([A-Z][a-z])\/' => '\\\\1_\\\\2',\\n            '\/([a-z\\\\d])([A-Z])\/' => '\\\\1_\\\\2',\\n            '\/[^A-Z^a-z^0-9^\\\\\/]+\/' => '-',\\n        ];\\n\\n        $urlized = $lowered;\\n\\n        foreach ($replacements as $pattern => $replacement) {\\n            $replaced = preg_replace($pattern, $replacement, $urlized);\\n\\n            if ($replaced === null) {\\n                throw new RuntimeException(sprintf(\\n                    'preg_replace returned null for value \\\"%s\\\"',\\n                    $urlized\\n                ));\\n            }\\n\\n            $urlized = $replaced;\\n        }\\n\\n        return trim($urlized, '-');\\n    }\\n\\n    \/**\\n     * Returns a word in singular form.\\n     *\\n     * @param string $word The word in plural form.\\n     *\\n     * @return string The word in singular form.\\n     *\/\\n    public function singularize(string $word): string\\n    {\\n        return $this->singularizer->inflect($word);\\n    }\\n\\n    \/**\\n     * Returns a word in plural form.\\n     *\\n     * @param string $word The word in singular form.\\n     *\\n     * @return string The word in plural form.\\n     *\/\\n    public function pluralize(string $word): string\\n    {\\n        return $this->pluralizer->inflect($word);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Language.php\",\"ext\":\"php\",\"size\":526,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nfinal class Language\\n{\\n    public const ENGLISH          = 'english';\\n    public const ESPERANTO        = 'esperanto';\\n    public const FRENCH           = 'french';\\n    public const ITALIAN          = 'italian';\\n    public const NORWEGIAN_BOKMAL = 'norwegian-bokmal';\\n    public const PORTUGUESE       = 'portuguese';\\n    public const SPANISH          = 'spanish';\\n    public const TURKISH          = 'turkish';\\n\\n    private function __construct()\\n    {\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/NoopWordInflector.php\",\"ext\":\"php\",\"size\":201,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nclass NoopWordInflector implements WordInflector\\n{\\n    public function inflect(string $word): string\\n    {\\n        return $word;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/InflectorFactory.php\",\"ext\":\"php\",\"size\":1688,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\English;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Esperanto;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\French;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Italian;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\NorwegianBokmal;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Portuguese;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Spanish;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Turkish;\\nuse InvalidArgumentException;\\n\\nuse function sprintf;\\n\\nfinal class InflectorFactory\\n{\\n    public static function create(): LanguageInflectorFactory\\n    {\\n        return self::createForLanguage(Language::ENGLISH);\\n    }\\n\\n    public static function createForLanguage(string $language): LanguageInflectorFactory\\n    {\\n        switch ($language) {\\n            case Language::ENGLISH:\\n                return new English\\\\InflectorFactory();\\n\\n            case Language::ESPERANTO:\\n                return new Esperanto\\\\InflectorFactory();\\n\\n            case Language::FRENCH:\\n                return new French\\\\InflectorFactory();\\n\\n            case Language::ITALIAN:\\n                return new Italian\\\\InflectorFactory();\\n\\n            case Language::NORWEGIAN_BOKMAL:\\n                return new NorwegianBokmal\\\\InflectorFactory();\\n\\n            case Language::PORTUGUESE:\\n                return new Portuguese\\\\InflectorFactory();\\n\\n            case Language::SPANISH:\\n                return new Spanish\\\\InflectorFactory();\\n\\n            case Language::TURKISH:\\n                return new Turkish\\\\InflectorFactory();\\n\\n            default:\\n                throw new InvalidArgumentException(sprintf(\\n                    'Language \\\"%s\\\" is not supported.',\\n                    $language\\n                ));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Transformations.php\",\"ext\":\"php\",\"size\":648,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nuse Doctrine\\\\Inflector\\\\WordInflector;\\n\\nclass Transformations implements WordInflector\\n{\\n    \/** @var Transformation[] *\/\\n    private $transformations;\\n\\n    public function __construct(Transformation ...$transformations)\\n    {\\n        $this->transformations = $transformations;\\n    }\\n\\n    public function inflect(string $word): string\\n    {\\n        foreach ($this->transformations as $transformation) {\\n            if ($transformation->getPattern()->matches($word)) {\\n                return $transformation->inflect($word);\\n            }\\n        }\\n\\n        return $word;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/French\/Inflectible.php\",\"ext\":\"php\",\"size\":1882,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\French;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/(b|cor|\u00e9m|gemm|soupir|trav|vant|vitr)aux$\/'), '\\\\1ail');\\n        yield new Transformation(new Pattern('\/ails$\/'), 'ail');\\n        yield new Transformation(new Pattern('\/(journ|chev|loc)aux$\/'), '\\\\1al');\\n        yield new Transformation(new Pattern('\/(bijou|caillou|chou|genou|hibou|joujou|pou|au|eu|eau)x$\/'), '\\\\1');\\n        yield new Transformation(new Pattern('\/s$\/'), '');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/(s|x|z)$\/'), '\\\\1');\\n        yield new Transformation(new Pattern('\/(b|cor|\u00e9m|gemm|soupir|trav|vant|vitr)ail$\/'), '\\\\1aux');\\n        yield new Transformation(new Pattern('\/ail$\/'), 'ails');\\n        yield new Transformation(new Pattern('\/(chacal|carnaval|festival|r\u00e9cital)$\/'), '\\\\1s');\\n        yield new Transformation(new Pattern('\/al$\/'), 'aux');\\n        yield new Transformation(new Pattern('\/(bleu|\u00e9meu|landau|pneu|sarrau)$\/'), '\\\\1s');\\n        yield new Transformation(new Pattern('\/(bijou|caillou|chou|genou|hibou|joujou|lieu|pou|au|eu|eau)$\/'), '\\\\1x');\\n        yield new Transformation(new Pattern('\/$\/'), 's');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word('monsieur'), new Word('messieurs'));\\n        yield new Substitution(new Word('madame'), new Word('mesdames'));\\n        yield new Substitution(new Word('mademoiselle'), new Word('mesdemoiselles'));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/French\/Rules.php\",\"ext\":\"php\",\"size\":873,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\French;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/French\/Uninflected.php\",\"ext\":\"php\",\"size\":599,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\French;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n\\n        yield new Pattern('bois');\\n        yield new Pattern('mas');\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/French\/InflectorFactory.php\",\"ext\":\"php\",\"size\":460,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\French;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/NorwegianBokmal\/Inflectible.php\",\"ext\":\"php\",\"size\":943,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\NorwegianBokmal;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/re$\/i'), 'r');\\n        yield new Transformation(new Pattern('\/er$\/i'), '');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/e$\/i'), 'er');\\n        yield new Transformation(new Pattern('\/r$\/i'), 're');\\n        yield new Transformation(new Pattern('\/$\/'), 'er');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word('konto'), new Word('konti'));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/NorwegianBokmal\/Rules.php\",\"ext\":\"php\",\"size\":882,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\NorwegianBokmal;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/NorwegianBokmal\/Uninflected.php\",\"ext\":\"php\",\"size\":612,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\NorwegianBokmal;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('barn');\\n        yield new Pattern('fjell');\\n        yield new Pattern('hus');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/NorwegianBokmal\/InflectorFactory.php\",\"ext\":\"php\",\"size\":469,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\NorwegianBokmal;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/English\/Inflectible.php\",\"ext\":\"php\",\"size\":11939,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\English;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('(s)tatuses$'), '\\\\1\\\\2tatus');\\n        yield new Transformation(new Pattern('(s)tatus$'), '\\\\1\\\\2tatus');\\n        yield new Transformation(new Pattern('(c)ampus$'), '\\\\1\\\\2ampus');\\n        yield new Transformation(new Pattern('^(.*)(menu)s$'), '\\\\1\\\\2');\\n        yield new Transformation(new Pattern('(quiz)zes$'), '\\\\\\\\1');\\n        yield new Transformation(new Pattern('(matr)ices$'), '\\\\1ix');\\n        yield new Transformation(new Pattern('(vert|ind)ices$'), '\\\\1ex');\\n        yield new Transformation(new Pattern('^(ox)en'), '\\\\1');\\n        yield new Transformation(new Pattern('(alias)(es)*$'), '\\\\1');\\n        yield new Transformation(new Pattern('(buffal|her|potat|tomat|volcan)oes$'), '\\\\1o');\\n        yield new Transformation(new Pattern('(alumn|bacill|cact|foc|fung|nucle|radi|stimul|syllab|termin|viri?)i$'), '\\\\1us');\\n        yield new Transformation(new Pattern('([ftw]ax)es'), '\\\\1');\\n        yield new Transformation(new Pattern('(analys|ax|cris|test|thes)es$'), '\\\\1is');\\n        yield new Transformation(new Pattern('(shoe|slave)s$'), '\\\\1');\\n        yield new Transformation(new Pattern('(o)es$'), '\\\\1');\\n        yield new Transformation(new Pattern('ouses$'), 'ouse');\\n        yield new Transformation(new Pattern('([^a])uses$'), '\\\\1us');\\n        yield new Transformation(new Pattern('([m|l])ice$'), '\\\\1ouse');\\n        yield new Transformation(new Pattern('(x|ch|ss|sh)es$'), '\\\\1');\\n        yield new Transformation(new Pattern('(m)ovies$'), '\\\\1\\\\2ovie');\\n        yield new Transformation(new Pattern('(s)eries$'), '\\\\1\\\\2eries');\\n        yield new Transformation(new Pattern('([^aeiouy]|qu)ies$'), '\\\\1y');\\n        yield new Transformation(new Pattern('([lr])ves$'), '\\\\1f');\\n        yield new Transformation(new Pattern('(tive)s$'), '\\\\1');\\n        yield new Transformation(new Pattern('(hive)s$'), '\\\\1');\\n        yield new Transformation(new Pattern('(drive)s$'), '\\\\1');\\n        yield new Transformation(new Pattern('(dive)s$'), '\\\\1');\\n        yield new Transformation(new Pattern('(olive)s$'), '\\\\1');\\n        yield new Transformation(new Pattern('([^fo])ves$'), '\\\\1fe');\\n        yield new Transformation(new Pattern('(^analy)ses$'), '\\\\1sis');\\n        yield new Transformation(new Pattern('(analy|diagno|^ba|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'), '\\\\1\\\\2sis');\\n        yield new Transformation(new Pattern('(tax)a$'), '\\\\1on');\\n        yield new Transformation(new Pattern('(c)riteria$'), '\\\\1riterion');\\n        yield new Transformation(new Pattern('([ti])a(?<!regatta)$'), '\\\\1um');\\n        yield new Transformation(new Pattern('(p)eople$'), '\\\\1\\\\2erson');\\n        yield new Transformation(new Pattern('(m)en$'), '\\\\1an');\\n        yield new Transformation(new Pattern('(c)hildren$'), '\\\\1\\\\2hild');\\n        yield new Transformation(new Pattern('(f)eet$'), '\\\\1oot');\\n        yield new Transformation(new Pattern('(n)ews$'), '\\\\1\\\\2ews');\\n        yield new Transformation(new Pattern('eaus$'), 'eau');\\n        yield new Transformation(new Pattern('^tights$'), 'tights');\\n        yield new Transformation(new Pattern('^shorts$'), 'shorts');\\n        yield new Transformation(new Pattern('s$'), '');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('(s)tatus$'), '\\\\1\\\\2tatuses');\\n        yield new Transformation(new Pattern('(quiz)$'), '\\\\1zes');\\n        yield new Transformation(new Pattern('^(ox)$'), '\\\\1\\\\2en');\\n        yield new Transformation(new Pattern('([m|l])ouse$'), '\\\\1ice');\\n        yield new Transformation(new Pattern('(matr|vert|ind)(ix|ex)$'), '\\\\1ices');\\n        yield new Transformation(new Pattern('(x|ch|ss|sh)$'), '\\\\1es');\\n        yield new Transformation(new Pattern('([^aeiouy]|qu)y$'), '\\\\1ies');\\n        yield new Transformation(new Pattern('(hive|gulf)$'), '\\\\1s');\\n        yield new Transformation(new Pattern('(?:([^f])fe|([lr])f)$'), '\\\\1\\\\2ves');\\n        yield new Transformation(new Pattern('sis$'), 'ses');\\n        yield new Transformation(new Pattern('([ti])um$'), '\\\\1a');\\n        yield new Transformation(new Pattern('(tax)on$'), '\\\\1a');\\n        yield new Transformation(new Pattern('(c)riterion$'), '\\\\1riteria');\\n        yield new Transformation(new Pattern('(p)erson$'), '\\\\1eople');\\n        yield new Transformation(new Pattern('(m)an$'), '\\\\1en');\\n        yield new Transformation(new Pattern('(c)hild$'), '\\\\1hildren');\\n        yield new Transformation(new Pattern('(f)oot$'), '\\\\1eet');\\n        yield new Transformation(new Pattern('(buffal|her|potat|tomat|volcan)o$'), '\\\\1\\\\2oes');\\n        yield new Transformation(new Pattern('(alumn|bacill|cact|foc|fung|nucle|radi|stimul|syllab|termin|vir)us$'), '\\\\1i');\\n        yield new Transformation(new Pattern('us$'), 'uses');\\n        yield new Transformation(new Pattern('(alias)$'), '\\\\1es');\\n        yield new Transformation(new Pattern('(analys|ax|cris|test|thes)is$'), '\\\\1es');\\n        yield new Transformation(new Pattern('s$'), 's');\\n        yield new Transformation(new Pattern('^$'), '');\\n        yield new Transformation(new Pattern('$'), 's');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word('abuse'), new Word('abuses'));\\n        yield new Substitution(new Word('alga'), new Word('algae'));\\n        yield new Substitution(new Word('atlas'), new Word('atlases'));\\n        yield new Substitution(new Word('avalanche'), new Word('avalanches'));\\n        yield new Substitution(new Word('axis'), new Word('axes'));\\n        yield new Substitution(new Word('axe'), new Word('axes'));\\n        yield new Substitution(new Word('beef'), new Word('beefs'));\\n        yield new Substitution(new Word('blouse'), new Word('blouses'));\\n        yield new Substitution(new Word('brother'), new Word('brothers'));\\n        yield new Substitution(new Word('brownie'), new Word('brownies'));\\n        yield new Substitution(new Word('cache'), new Word('caches'));\\n        yield new Substitution(new Word('cafe'), new Word('cafes'));\\n        yield new Substitution(new Word('canvas'), new Word('canvases'));\\n        yield new Substitution(new Word('cave'), new Word('caves'));\\n        yield new Substitution(new Word('chateau'), new Word('chateaux'));\\n        yield new Substitution(new Word('child'), new Word('children'));\\n        yield new Substitution(new Word('cookie'), new Word('cookies'));\\n        yield new Substitution(new Word('corpus'), new Word('corpuses'));\\n        yield new Substitution(new Word('cow'), new Word('cows'));\\n        yield new Substitution(new Word('criterion'), new Word('criteria'));\\n        yield new Substitution(new Word('curriculum'), new Word('curricula'));\\n        yield new Substitution(new Word('curve'), new Word('curves'));\\n        yield new Substitution(new Word('demo'), new Word('demos'));\\n        yield new Substitution(new Word('die'), new Word('dice'));\\n        yield new Substitution(new Word('domino'), new Word('dominoes'));\\n        yield new Substitution(new Word('echo'), new Word('echoes'));\\n        yield new Substitution(new Word('emphasis'), new Word('emphases'));\\n        yield new Substitution(new Word('epoch'), new Word('epochs'));\\n        yield new Substitution(new Word('foe'), new Word('foes'));\\n        yield new Substitution(new Word('foot'), new Word('feet'));\\n        yield new Substitution(new Word('fungus'), new Word('fungi'));\\n        yield new Substitution(new Word('ganglion'), new Word('ganglions'));\\n        yield new Substitution(new Word('gas'), new Word('gases'));\\n        yield new Substitution(new Word('genie'), new Word('genies'));\\n        yield new Substitution(new Word('genus'), new Word('genera'));\\n        yield new Substitution(new Word('goose'), new Word('geese'));\\n        yield new Substitution(new Word('graffito'), new Word('graffiti'));\\n        yield new Substitution(new Word('grave'), new Word('graves'));\\n        yield new Substitution(new Word('hippopotamus'), new Word('hippopotami'));\\n        yield new Substitution(new Word('hoax'), new Word('hoaxes'));\\n        yield new Substitution(new Word('hoof'), new Word('hoofs'));\\n        yield new Substitution(new Word('human'), new Word('humans'));\\n        yield new Substitution(new Word('iris'), new Word('irises'));\\n        yield new Substitution(new Word('larva'), new Word('larvae'));\\n        yield new Substitution(new Word('leaf'), new Word('leaves'));\\n        yield new Substitution(new Word('lens'), new Word('lenses'));\\n        yield new Substitution(new Word('loaf'), new Word('loaves'));\\n        yield new Substitution(new Word('man'), new Word('men'));\\n        yield new Substitution(new Word('medium'), new Word('media'));\\n        yield new Substitution(new Word('memorandum'), new Word('memoranda'));\\n        yield new Substitution(new Word('money'), new Word('monies'));\\n        yield new Substitution(new Word('mongoose'), new Word('mongooses'));\\n        yield new Substitution(new Word('motto'), new Word('mottoes'));\\n        yield new Substitution(new Word('move'), new Word('moves'));\\n        yield new Substitution(new Word('mythos'), new Word('mythoi'));\\n        yield new Substitution(new Word('neurosis'), new Word('neuroses'));\\n        yield new Substitution(new Word('niche'), new Word('niches'));\\n        yield new Substitution(new Word('niveau'), new Word('niveaux'));\\n        yield new Substitution(new Word('nucleus'), new Word('nuclei'));\\n        yield new Substitution(new Word('numen'), new Word('numina'));\\n        yield new Substitution(new Word('nursery'), new Word('nurseries'));\\n        yield new Substitution(new Word('oasis'), new Word('oases'));\\n        yield new Substitution(new Word('occiput'), new Word('occiputs'));\\n        yield new Substitution(new Word('octopus'), new Word('octopuses'));\\n        yield new Substitution(new Word('opus'), new Word('opuses'));\\n        yield new Substitution(new Word('ox'), new Word('oxen'));\\n        yield new Substitution(new Word('passerby'), new Word('passersby'));\\n        yield new Substitution(new Word('penis'), new Word('penises'));\\n        yield new Substitution(new Word('person'), new Word('people'));\\n        yield new Substitution(new Word('plateau'), new Word('plateaux'));\\n        yield new Substitution(new Word('runner-up'), new Word('runners-up'));\\n        yield new Substitution(new Word('safe'), new Word('safes'));\\n        yield new Substitution(new Word('save'), new Word('saves'));\\n        yield new Substitution(new Word('sex'), new Word('sexes'));\\n        yield new Substitution(new Word('sieve'), new Word('sieves'));\\n        yield new Substitution(new Word('soliloquy'), new Word('soliloquies'));\\n        yield new Substitution(new Word('son-in-law'), new Word('sons-in-law'));\\n        yield new Substitution(new Word('stadium'), new Word('stadiums'));\\n        yield new Substitution(new Word('syllabus'), new Word('syllabi'));\\n        yield new Substitution(new Word('testis'), new Word('testes'));\\n        yield new Substitution(new Word('thief'), new Word('thieves'));\\n        yield new Substitution(new Word('tooth'), new Word('teeth'));\\n        yield new Substitution(new Word('tornado'), new Word('tornadoes'));\\n        yield new Substitution(new Word('trilby'), new Word('trilbys'));\\n        yield new Substitution(new Word('turf'), new Word('turfs'));\\n        yield new Substitution(new Word('valve'), new Word('valves'));\\n        yield new Substitution(new Word('volcano'), new Word('volcanoes'));\\n        yield new Substitution(new Word('wave'), new Word('waves'));\\n        yield new Substitution(new Word('zombie'), new Word('zombies'));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/English\/Rules.php\",\"ext\":\"php\",\"size\":874,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\English;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/English\/Uninflected.php\",\"ext\":\"php\",\"size\":6543,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\English;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n\\n        yield new Pattern('.*ss');\\n        yield new Pattern('clothes');\\n        yield new Pattern('data');\\n        yield new Pattern('fascia');\\n        yield new Pattern('fuchsia');\\n        yield new Pattern('galleria');\\n        yield new Pattern('mafia');\\n        yield new Pattern('militia');\\n        yield new Pattern('pants');\\n        yield new Pattern('petunia');\\n        yield new Pattern('sepia');\\n        yield new Pattern('trivia');\\n        yield new Pattern('utopia');\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n\\n        yield new Pattern('people');\\n        yield new Pattern('trivia');\\n        yield new Pattern('\\\\w+ware$');\\n        yield new Pattern('media');\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('\\\\w+media');\\n        yield new Pattern('advice');\\n        yield new Pattern('aircraft');\\n        yield new Pattern('amoyese');\\n        yield new Pattern('art');\\n        yield new Pattern('audio');\\n        yield new Pattern('baggage');\\n        yield new Pattern('bison');\\n        yield new Pattern('borghese');\\n        yield new Pattern('bream');\\n        yield new Pattern('breeches');\\n        yield new Pattern('britches');\\n        yield new Pattern('buffalo');\\n        yield new Pattern('butter');\\n        yield new Pattern('cantus');\\n        yield new Pattern('carp');\\n        yield new Pattern('cattle');\\n        yield new Pattern('chassis');\\n        yield new Pattern('clippers');\\n        yield new Pattern('clothing');\\n        yield new Pattern('coal');\\n        yield new Pattern('cod');\\n        yield new Pattern('coitus');\\n        yield new Pattern('compensation');\\n        yield new Pattern('congoese');\\n        yield new Pattern('contretemps');\\n        yield new Pattern('coreopsis');\\n        yield new Pattern('corps');\\n        yield new Pattern('cotton');\\n        yield new Pattern('data');\\n        yield new Pattern('debris');\\n        yield new Pattern('deer');\\n        yield new Pattern('diabetes');\\n        yield new Pattern('djinn');\\n        yield new Pattern('education');\\n        yield new Pattern('eland');\\n        yield new Pattern('elk');\\n        yield new Pattern('emoji');\\n        yield new Pattern('equipment');\\n        yield new Pattern('evidence');\\n        yield new Pattern('faroese');\\n        yield new Pattern('feedback');\\n        yield new Pattern('fish');\\n        yield new Pattern('flounder');\\n        yield new Pattern('flour');\\n        yield new Pattern('foochowese');\\n        yield new Pattern('food');\\n        yield new Pattern('furniture');\\n        yield new Pattern('gallows');\\n        yield new Pattern('genevese');\\n        yield new Pattern('genoese');\\n        yield new Pattern('gilbertese');\\n        yield new Pattern('gold');\\n        yield new Pattern('headquarters');\\n        yield new Pattern('herpes');\\n        yield new Pattern('hijinks');\\n        yield new Pattern('homework');\\n        yield new Pattern('hottentotese');\\n        yield new Pattern('impatience');\\n        yield new Pattern('information');\\n        yield new Pattern('innings');\\n        yield new Pattern('jackanapes');\\n        yield new Pattern('jeans');\\n        yield new Pattern('jedi');\\n        yield new Pattern('kin');\\n        yield new Pattern('kiplingese');\\n        yield new Pattern('knowledge');\\n        yield new Pattern('kongoese');\\n        yield new Pattern('leather');\\n        yield new Pattern('love');\\n        yield new Pattern('lucchese');\\n        yield new Pattern('luggage');\\n        yield new Pattern('mackerel');\\n        yield new Pattern('Maltese');\\n        yield new Pattern('management');\\n        yield new Pattern('metadata');\\n        yield new Pattern('mews');\\n        yield new Pattern('money');\\n        yield new Pattern('moose');\\n        yield new Pattern('mumps');\\n        yield new Pattern('music');\\n        yield new Pattern('nankingese');\\n        yield new Pattern('news');\\n        yield new Pattern('nexus');\\n        yield new Pattern('niasese');\\n        yield new Pattern('nutrition');\\n        yield new Pattern('offspring');\\n        yield new Pattern('oil');\\n        yield new Pattern('patience');\\n        yield new Pattern('pekingese');\\n        yield new Pattern('piedmontese');\\n        yield new Pattern('pincers');\\n        yield new Pattern('pistoiese');\\n        yield new Pattern('plankton');\\n        yield new Pattern('pliers');\\n        yield new Pattern('pokemon');\\n        yield new Pattern('police');\\n        yield new Pattern('polish');\\n        yield new Pattern('portuguese');\\n        yield new Pattern('proceedings');\\n        yield new Pattern('progress');\\n        yield new Pattern('rabies');\\n        yield new Pattern('rain');\\n        yield new Pattern('research');\\n        yield new Pattern('rhinoceros');\\n        yield new Pattern('rice');\\n        yield new Pattern('salmon');\\n        yield new Pattern('sand');\\n        yield new Pattern('sarawakese');\\n        yield new Pattern('scissors');\\n        yield new Pattern('sea[- ]bass');\\n        yield new Pattern('series');\\n        yield new Pattern('shavese');\\n        yield new Pattern('shears');\\n        yield new Pattern('sheep');\\n        yield new Pattern('siemens');\\n        yield new Pattern('silk');\\n        yield new Pattern('sms');\\n        yield new Pattern('soap');\\n        yield new Pattern('social media');\\n        yield new Pattern('spam');\\n        yield new Pattern('species');\\n        yield new Pattern('staff');\\n        yield new Pattern('sugar');\\n        yield new Pattern('swine');\\n        yield new Pattern('talent');\\n        yield new Pattern('toothpaste');\\n        yield new Pattern('traffic');\\n        yield new Pattern('travel');\\n        yield new Pattern('trousers');\\n        yield new Pattern('trout');\\n        yield new Pattern('tuna');\\n        yield new Pattern('us');\\n        yield new Pattern('vermontese');\\n        yield new Pattern('vinegar');\\n        yield new Pattern('weather');\\n        yield new Pattern('wenchowese');\\n        yield new Pattern('wheat');\\n        yield new Pattern('whiting');\\n        yield new Pattern('wildebeest');\\n        yield new Pattern('wood');\\n        yield new Pattern('wool');\\n        yield new Pattern('yengeese');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/English\/InflectorFactory.php\",\"ext\":\"php\",\"size\":461,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\English;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Portuguese\/Inflectible.php\",\"ext\":\"php\",\"size\":5648,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Portuguese;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/^(g|)ases$\/i'), '\\\\1\u00e1s');\\n        yield new Transformation(new Pattern('\/(japon|escoc|ingl|dinamarqu|fregu|portugu)eses$\/i'), '\\\\1\u00eas');\\n        yield new Transformation(new Pattern('\/(ae|ao|oe)s$\/'), 'ao');\\n        yield new Transformation(new Pattern('\/(\u00e3e|\u00e3o|\u00f5e)s$\/'), '\u00e3o');\\n        yield new Transformation(new Pattern('\/^(.*[^s]s)es$\/i'), '\\\\1');\\n        yield new Transformation(new Pattern('\/sses$\/i'), 'sse');\\n        yield new Transformation(new Pattern('\/ns$\/i'), 'm');\\n        yield new Transformation(new Pattern('\/(r|t|f|v)is$\/i'), '\\\\1il');\\n        yield new Transformation(new Pattern('\/uis$\/i'), 'ul');\\n        yield new Transformation(new Pattern('\/ois$\/i'), 'ol');\\n        yield new Transformation(new Pattern('\/eis$\/i'), 'ei');\\n        yield new Transformation(new Pattern('\/\u00e9is$\/i'), 'el');\\n        yield new Transformation(new Pattern('\/([^p])ais$\/i'), '\\\\1al');\\n        yield new Transformation(new Pattern('\/(r|z)es$\/i'), '\\\\1');\\n        yield new Transformation(new Pattern('\/^(\u00e1|g\u00e1)s$\/i'), '\\\\1s');\\n        yield new Transformation(new Pattern('\/([^\u00ea])s$\/i'), '\\\\1');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/^(alem|c|p)ao$\/i'), '\\\\1aes');\\n        yield new Transformation(new Pattern('\/^(irm|m)ao$\/i'), '\\\\1aos');\\n        yield new Transformation(new Pattern('\/ao$\/i'), 'oes');\\n        yield new Transformation(new Pattern('\/^(alem|c|p)\u00e3o$\/i'), '\\\\1\u00e3es');\\n        yield new Transformation(new Pattern('\/^(irm|m)\u00e3o$\/i'), '\\\\1\u00e3os');\\n        yield new Transformation(new Pattern('\/\u00e3o$\/i'), '\u00f5es');\\n        yield new Transformation(new Pattern('\/^(|g)\u00e1s$\/i'), '\\\\1ases');\\n        yield new Transformation(new Pattern('\/^(japon|escoc|ingl|dinamarqu|fregu|portugu)\u00eas$\/i'), '\\\\1eses');\\n        yield new Transformation(new Pattern('\/m$\/i'), 'ns');\\n        yield new Transformation(new Pattern('\/([^aeou])il$\/i'), '\\\\1is');\\n        yield new Transformation(new Pattern('\/ul$\/i'), 'uis');\\n        yield new Transformation(new Pattern('\/ol$\/i'), 'ois');\\n        yield new Transformation(new Pattern('\/el$\/i'), 'eis');\\n        yield new Transformation(new Pattern('\/al$\/i'), 'ais');\\n        yield new Transformation(new Pattern('\/(z|r)$\/i'), '\\\\1es');\\n        yield new Transformation(new Pattern('\/(s)$\/i'), '\\\\1');\\n        yield new Transformation(new Pattern('\/$\/'), 's');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word('abdomen'), new Word('abdomens'));\\n        yield new Substitution(new Word('alem\u00e3o'), new Word('alem\u00e3es'));\\n        yield new Substitution(new Word('artes\u00e3'), new Word('artes\u00e3os'));\\n        yield new Substitution(new Word('\u00e1lcool'), new Word('\u00e1lcoois'));\\n        yield new Substitution(new Word('\u00e1rvore'), new Word('\u00e1rvores'));\\n        yield new Substitution(new Word('benc\u00e3o'), new Word('benc\u00e3os'));\\n        yield new Substitution(new Word('c\u00e3o'), new Word('c\u00e3es'));\\n        yield new Substitution(new Word('campus'), new Word('campi'));\\n        yield new Substitution(new Word('cad\u00e1ver'), new Word('cad\u00e1veres'));\\n        yield new Substitution(new Word('capel\u00e3o'), new Word('capel\u00e3es'));\\n        yield new Substitution(new Word('capit\u00e3o'), new Word('capit\u00e3es'));\\n        yield new Substitution(new Word('ch\u00e3o'), new Word('ch\u00e3os'));\\n        yield new Substitution(new Word('charlat\u00e3o'), new Word('charlat\u00e3es'));\\n        yield new Substitution(new Word('cidad\u00e3o'), new Word('cidad\u00e3os'));\\n        yield new Substitution(new Word('consul'), new Word('consules'));\\n        yield new Substitution(new Word('crist\u00e3o'), new Word('crist\u00e3os'));\\n        yield new Substitution(new Word('dif\u00edcil'), new Word('dif\u00edceis'));\\n        yield new Substitution(new Word('email'), new Word('emails'));\\n        yield new Substitution(new Word('escriv\u00e3o'), new Word('escriv\u00e3es'));\\n        yield new Substitution(new Word('f\u00f3ssil'), new Word('f\u00f3sseis'));\\n        yield new Substitution(new Word('g\u00e1s'), new Word('gases'));\\n        yield new Substitution(new Word('germens'), new Word('germen'));\\n        yield new Substitution(new Word('gr\u00e3o'), new Word('gr\u00e3os'));\\n        yield new Substitution(new Word('h\u00edfen'), new Word('h\u00edfens'));\\n        yield new Substitution(new Word('irm\u00e3o'), new Word('irm\u00e3os'));\\n        yield new Substitution(new Word('liquens'), new Word('liquen'));\\n        yield new Substitution(new Word('mal'), new Word('males'));\\n        yield new Substitution(new Word('m\u00e3o'), new Word('m\u00e3os'));\\n        yield new Substitution(new Word('orf\u00e3o'), new Word('orf\u00e3os'));\\n        yield new Substitution(new Word('pa\u00eds'), new Word('pa\u00edses'));\\n        yield new Substitution(new Word('pai'), new Word('pais'));\\n        yield new Substitution(new Word('p\u00e3o'), new Word('p\u00e3es'));\\n        yield new Substitution(new Word('proj\u00e9til'), new Word('proj\u00e9teis'));\\n        yield new Substitution(new Word('r\u00e9ptil'), new Word('r\u00e9pteis'));\\n        yield new Substitution(new Word('sacrist\u00e3o'), new Word('sacrist\u00e3es'));\\n        yield new Substitution(new Word('sot\u00e3o'), new Word('sot\u00e3os'));\\n        yield new Substitution(new Word('tabeli\u00e3o'), new Word('tabeli\u00e3es'));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Portuguese\/Rules.php\",\"ext\":\"php\",\"size\":877,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Portuguese;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Portuguese\/Uninflected.php\",\"ext\":\"php\",\"size\":688,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Portuguese;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('t\u00f3rax');\\n        yield new Pattern('t\u00eanis');\\n        yield new Pattern('\u00f4nibus');\\n        yield new Pattern('l\u00e1pis');\\n        yield new Pattern('f\u00eanix');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Portuguese\/InflectorFactory.php\",\"ext\":\"php\",\"size\":464,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Portuguese;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Pattern.php\",\"ext\":\"php\",\"size\":788,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nuse function preg_match;\\n\\nfinal class Pattern\\n{\\n    \/** @var string *\/\\n    private $pattern;\\n\\n    \/** @var string *\/\\n    private $regex;\\n\\n    public function __construct(string $pattern)\\n    {\\n        $this->pattern = $pattern;\\n\\n        if (isset($this->pattern[0]) && $this->pattern[0] === '\/') {\\n            $this->regex = $this->pattern;\\n        } else {\\n            $this->regex = '\/' . $this->pattern . '\/i';\\n        }\\n    }\\n\\n    public function getPattern(): string\\n    {\\n        return $this->pattern;\\n    }\\n\\n    public function getRegex(): string\\n    {\\n        return $this->regex;\\n    }\\n\\n    public function matches(string $word): bool\\n    {\\n        return preg_match($this->getRegex(), $word) === 1;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Esperanto\/Inflectible.php\",\"ext\":\"php\",\"size\":738,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Esperanto;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('oj$'), 'o');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('o$'), 'oj');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word(''), new Word(''));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Esperanto\/Rules.php\",\"ext\":\"php\",\"size\":876,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Esperanto;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Esperanto\/Uninflected.php\",\"ext\":\"php\",\"size\":532,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Esperanto;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Esperanto\/InflectorFactory.php\",\"ext\":\"php\",\"size\":463,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Esperanto;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Spanish\/Inflectible.php\",\"ext\":\"php\",\"size\":1849,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Spanish;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/ereses$\/'), 'er\u00e9s');\\n        yield new Transformation(new Pattern('\/iones$\/'), 'i\u00f3n');\\n        yield new Transformation(new Pattern('\/ces$\/'), 'z');\\n        yield new Transformation(new Pattern('\/es$\/'), '');\\n        yield new Transformation(new Pattern('\/s$\/'), '');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/\u00fa([sn])$\/i'), 'u\\\\1es');\\n        yield new Transformation(new Pattern('\/\u00f3([sn])$\/i'), 'o\\\\1es');\\n        yield new Transformation(new Pattern('\/\u00ed([sn])$\/i'), 'i\\\\1es');\\n        yield new Transformation(new Pattern('\/\u00e9([sn])$\/i'), 'e\\\\1es');\\n        yield new Transformation(new Pattern('\/\u00e1([sn])$\/i'), 'a\\\\1es');\\n        yield new Transformation(new Pattern('\/z$\/i'), 'ces');\\n        yield new Transformation(new Pattern('\/([aeiou]s)$\/i'), '\\\\1');\\n        yield new Transformation(new Pattern('\/([^ae\u00e9iou])$\/i'), '\\\\1es');\\n        yield new Transformation(new Pattern('\/$\/'), 's');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word('el'), new Word('los'));\\n        yield new Substitution(new Word('pap\u00e1'), new Word('pap\u00e1s'));\\n        yield new Substitution(new Word('mam\u00e1'), new Word('mam\u00e1s'));\\n        yield new Substitution(new Word('sof\u00e1'), new Word('sof\u00e1s'));\\n        yield new Substitution(new Word('mes'), new Word('meses'));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Spanish\/Rules.php\",\"ext\":\"php\",\"size\":874,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Spanish;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Spanish\/Uninflected.php\",\"ext\":\"php\",\"size\":615,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Spanish;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('lunes');\\n        yield new Pattern('rompecabezas');\\n        yield new Pattern('crisis');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Spanish\/InflectorFactory.php\",\"ext\":\"php\",\"size\":461,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Spanish;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Transformation.php\",\"ext\":\"php\",\"size\":790,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nuse Doctrine\\\\Inflector\\\\WordInflector;\\n\\nuse function preg_replace;\\n\\nfinal class Transformation implements WordInflector\\n{\\n    \/** @var Pattern *\/\\n    private $pattern;\\n\\n    \/** @var string *\/\\n    private $replacement;\\n\\n    public function __construct(Pattern $pattern, string $replacement)\\n    {\\n        $this->pattern     = $pattern;\\n        $this->replacement = $replacement;\\n    }\\n\\n    public function getPattern(): Pattern\\n    {\\n        return $this->pattern;\\n    }\\n\\n    public function getReplacement(): string\\n    {\\n        return $this->replacement;\\n    }\\n\\n    public function inflect(string $word): string\\n    {\\n        return (string) preg_replace($this->pattern->getRegex(), $this->replacement, $word);\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Word.php\",\"ext\":\"php\",\"size\":294,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nclass Word\\n{\\n    \/** @var string *\/\\n    private $word;\\n\\n    public function __construct(string $word)\\n    {\\n        $this->word = $word;\\n    }\\n\\n    public function getWord(): string\\n    {\\n        return $this->word;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Ruleset.php\",\"ext\":\"php\",\"size\":777,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nclass Ruleset\\n{\\n    \/** @var Transformations *\/\\n    private $regular;\\n\\n    \/** @var Patterns *\/\\n    private $uninflected;\\n\\n    \/** @var Substitutions *\/\\n    private $irregular;\\n\\n    public function __construct(Transformations $regular, Patterns $uninflected, Substitutions $irregular)\\n    {\\n        $this->regular     = $regular;\\n        $this->uninflected = $uninflected;\\n        $this->irregular   = $irregular;\\n    }\\n\\n    public function getRegular(): Transformations\\n    {\\n        return $this->regular;\\n    }\\n\\n    public function getUninflected(): Patterns\\n    {\\n        return $this->uninflected;\\n    }\\n\\n    public function getIrregular(): Substitutions\\n    {\\n        return $this->irregular;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Turkish\/Inflectible.php\",\"ext\":\"php\",\"size\":1006,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Turkish;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return Transformation[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/l[ae]r$\/i'), '');\\n    }\\n\\n    \/** @return Transformation[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield new Transformation(new Pattern('\/([e\u00f6i\u00fc][^ao\u0131ue\u00f6i\u00fc]{0,6})$\/u'), '\\\\1ler');\\n        yield new Transformation(new Pattern('\/([ao\u0131u][^ao\u0131ue\u00f6i\u00fc]{0,6})$\/u'), '\\\\1lar');\\n    }\\n\\n    \/** @return Substitution[] *\/\\n    public static function getIrregular(): iterable\\n    {\\n        yield new Substitution(new Word('ben'), new Word('biz'));\\n        yield new Substitution(new Word('sen'), new Word('siz'));\\n        yield new Substitution(new Word('o'), new Word('onlar'));\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Turkish\/Rules.php\",\"ext\":\"php\",\"size\":874,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Turkish;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Turkish\/Uninflected.php\",\"ext\":\"php\",\"size\":615,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Turkish;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return Pattern[] *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return Pattern[] *\/\\n    private static function getDefault(): iterable\\n    {\\n        yield new Pattern('lunes');\\n        yield new Pattern('rompecabezas');\\n        yield new Pattern('crisis');\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Turkish\/InflectorFactory.php\",\"ext\":\"php\",\"size\":461,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Turkish;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Substitution.php\",\"ext\":\"php\",\"size\":451,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nfinal class Substitution\\n{\\n    \/** @var Word *\/\\n    private $from;\\n\\n    \/** @var Word *\/\\n    private $to;\\n\\n    public function __construct(Word $from, Word $to)\\n    {\\n        $this->from = $from;\\n        $this->to   = $to;\\n    }\\n\\n    public function getFrom(): Word\\n    {\\n        return $this->from;\\n    }\\n\\n    public function getTo(): Word\\n    {\\n        return $this->to;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Substitutions.php\",\"ext\":\"php\",\"size\":1372,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nuse Doctrine\\\\Inflector\\\\WordInflector;\\n\\nuse function strtolower;\\nuse function strtoupper;\\nuse function substr;\\n\\nclass Substitutions implements WordInflector\\n{\\n    \/** @var Substitution[] *\/\\n    private $substitutions;\\n\\n    public function __construct(Substitution ...$substitutions)\\n    {\\n        foreach ($substitutions as $substitution) {\\n            $this->substitutions[$substitution->getFrom()->getWord()] = $substitution;\\n        }\\n    }\\n\\n    public function getFlippedSubstitutions(): Substitutions\\n    {\\n        $substitutions = [];\\n\\n        foreach ($this->substitutions as $substitution) {\\n            $substitutions[] = new Substitution(\\n                $substitution->getTo(),\\n                $substitution->getFrom()\\n            );\\n        }\\n\\n        return new Substitutions(...$substitutions);\\n    }\\n\\n    public function inflect(string $word): string\\n    {\\n        $lowerWord = strtolower($word);\\n\\n        if (isset($this->substitutions[$lowerWord])) {\\n            $firstLetterUppercase = $lowerWord[0] !== $word[0];\\n\\n            $toWord = $this->substitutions[$lowerWord]->getTo()->getWord();\\n\\n            if ($firstLetterUppercase) {\\n                return strtoupper($toWord[0]) . substr($toWord, 1);\\n            }\\n\\n            return $toWord;\\n        }\\n\\n        return $word;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Italian\/Inflectible.php\",\"ext\":\"php\",\"size\":8458,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Italian;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitution;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformation;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Word;\\n\\nclass Inflectible\\n{\\n    \/** @return iterable<Transformation> *\/\\n    public static function getSingular(): iterable\\n    {\\n        \/\/ Reverse of -sce \u2192 -scia (fasce \u2192 fascia)\\n        yield new Transformation(new Pattern('([aeiou])sce$'), '\\\\\\\\1scia');\\n\\n        \/\/ Reverse of -cie \u2192 -cia (farmacia \u2192 farmacie)\\n        yield new Transformation(new Pattern('cie$'), 'cia');\\n\\n        \/\/ Reverse of -gie \u2192 -gia (bugia \u2192 bugie)\\n        yield new Transformation(new Pattern('gie$'), 'gia');\\n\\n        \/\/ Reverse of -ce \u2192 -cia (arance \u2192 arancia)\\n        yield new Transformation(new Pattern('([^aeiou])ce$'), '\\\\1cia');\\n\\n        \/\/ Reverse of -ge \u2192 -gia (valige \u2192 valigia)\\n        yield new Transformation(new Pattern('([^aeiou])ge$'), '\\\\1gia');\\n\\n        \/\/ Reverse of -chi \u2192 -co (bachi \u2192 baco)\\n        yield new Transformation(new Pattern('([bcdfghjklmnpqrstvwxyz][aeiou])chi$'), '\\\\1co');\\n\\n        \/\/ Reverse of -ghi \u2192 -go (laghi \u2192 lago)\\n        yield new Transformation(new Pattern('([bcdfghjklmnpqrstvwxyz][aeiou])ghi$'), '\\\\1go');\\n\\n        \/\/ Reverse of -ci \u2192 -co (medici \u2192 medico)\\n        yield new Transformation(new Pattern('([aeiou][bcdfghjklmnpqrstvwxyz])ci$'), '\\\\1co');\\n\\n        \/\/ Reverse of -gi \u2192 -go (psicologi \u2192 psicologo)\\n        yield new Transformation(new Pattern('([aeiou][bcdfghjklmnpqrstvwxyz])gi$'), '\\\\1go');\\n\\n        \/\/ Reverse of -i \u2192 -io (zii \u2192 zio, negozi \u2192 negozio)\\n        \/\/ This is more complex due to Italian's stress patterns, but we'll handle the basic case\\n        yield new Transformation(new Pattern('([^aeiou])i$'), '\\\\1io');\\n\\n        \/\/ Handle words that end with -i but should go to -co\/-go (amici \u2192 amico, not amice)\\n        yield new Transformation(new Pattern('([^aeiou])ci$'), '\\\\1co');\\n        yield new Transformation(new Pattern('([^aeiou])gi$'), '\\\\1go');\\n\\n        \/\/ Reverse of -a \u2192 -e\\n        yield new Transformation(new Pattern('e$'), 'a');\\n\\n        \/\/ Reverse of -e \u2192 -i\\n        yield new Transformation(new Pattern('i$'), 'e');\\n\\n        \/\/ Reverse of -o \u2192 -i\\n        yield new Transformation(new Pattern('i$'), 'o');\\n    }\\n\\n    \/** @return iterable<Transformation> *\/\\n    public static function getPlural(): iterable\\n    {\\n        \/\/ Words ending in -scia without stress on 'i' become -sce (e.g. fascia \u2192 fasce)\\n        yield new Transformation(new Pattern('([aeiou])scia$'), '\\\\\\\\1sce');\\n\\n        \/\/ Words ending in -cia\/gia with stress on 'i' keep the 'i' in plural\\n        yield new Transformation(new Pattern('cia$'), 'cie'); \/\/ e.g. farmacia \u2192 farmacie\\n        yield new Transformation(new Pattern('gia$'), 'gie'); \/\/ e.g. bugia \u2192 bugie\\n\\n        \/\/ Words ending in -cia\/gia without stress on 'i' lose the 'i' in plural\\n        yield new Transformation(new Pattern('([^aeiou])cia$'), '\\\\\\\\1ce'); \/\/ e.g. arancia \u2192 arance\\n        yield new Transformation(new Pattern('([^aeiou])gia$'), '\\\\\\\\1ge'); \/\/ e.g. valigia \u2192 valige\\n\\n        \/\/ Words ending in -co\/-go with stress on 'o' become -chi\/-ghi\\n        yield new Transformation(new Pattern('([bcdfghjklmnpqrstvwxyz][aeiou])co$'), '\\\\\\\\1chi'); \/\/ e.g. baco \u2192 bachi\\n        yield new Transformation(new Pattern('([bcdfghjklmnpqrstvwxyz][aeiou])go$'), '\\\\\\\\1ghi'); \/\/ e.g. lago \u2192 laghi\\n\\n        \/\/ Words ending in -co\/-go with stress on the penultimate syllable become -ci\/-gi\\n        yield new Transformation(new Pattern('([aeiou][bcdfghjklmnpqrstvwxyz])co$'), '\\\\\\\\1ci'); \/\/ e.g. medico \u2192 medici\\n        yield new Transformation(new Pattern('([aeiou][bcdfghjklmnpqrstvwxyz])go$'), '\\\\\\\\1gi'); \/\/ e.g. psicologo \u2192 psicologi\\n\\n        \/\/ Words ending in -io with stress on 'i' keep the 'i' in plural\\n        yield new Transformation(new Pattern('([^aeiou])io$'), '\\\\\\\\1i'); \/\/ e.g. zio \u2192 zii\\n\\n        \/\/ Words ending in -io with stress on 'o' lose the 'i' in plural\\n        yield new Transformation(new Pattern('([aeiou])io$'), '\\\\\\\\1i'); \/\/ e.g. negozio \u2192 negozi\\n\\n        \/\/ Standard ending rules\\n        yield new Transformation(new Pattern('a$'), 'e');  \/\/ -a \u2192 -e\\n        yield new Transformation(new Pattern('e$'), 'i');  \/\/ -e \u2192 -i\\n        yield new Transformation(new Pattern('o$'), 'i');  \/\/ -o \u2192 -i\\n    }\\n\\n    \/** @return iterable<Substitution> *\/\\n    public static function getIrregular(): iterable\\n    {\\n        \/\/ Irregular substitutions (singular => plural)\\n        $irregulars = [\\n            'ala' => 'ali',\\n            'albergo' => 'alberghi',\\n            'amica' => 'amiche',\\n            'amico' => 'amici',\\n            'ampio' => 'ampi',\\n            'arancia' => 'arance',\\n            'arma' => 'armi',\\n            'asparago' => 'asparagi',\\n            'banca' => 'banche',\\n            'belga' => 'belgi',\\n            'braccio' => 'braccia',\\n            'budello' => 'budella',\\n            'bue' => 'buoi',\\n            'caccia' => 'cacce',\\n            'calcagno' => 'calcagna',\\n            'camicia' => 'camicie',\\n            'cane' => 'cani',\\n            'capitale' => 'capitali',\\n            'carcere' => 'carceri',\\n            'casa' => 'case',\\n            'cavaliere' => 'cavalieri',\\n            'centinaio' => 'centinaia',\\n            'cerchio' => 'cerchia',\\n            'cervello' => 'cervella',\\n            'chiave' => 'chiavi',\\n            'chirurgo' => 'chirurgi',\\n            'ciglio' => 'ciglia',\\n            'citt\u00e0' => 'citt\u00e0',\\n            'corno' => 'corna',\\n            'corpo' => 'corpi',\\n            'crisi' => 'crisi',\\n            'dente' => 'denti',\\n            'dio' => 'dei',\\n            'dito' => 'dita',\\n            'dottore' => 'dottori',\\n            'fiore' => 'fiori',\\n            'fratello' => 'fratelli',\\n            'fuoco' => 'fuochi',\\n            'gamba' => 'gambe',\\n            'ginocchio' => 'ginocchia',\\n            'gioco' => 'giochi',\\n            'giornale' => 'giornali',\\n            'giraffa' => 'giraffe',\\n            'labbro' => 'labbra',\\n            'lenzuolo' => 'lenzuola',\\n            'libro' => 'libri',\\n            'madre' => 'madri',\\n            'maestro' => 'maestri',\\n            'magico' => 'magici',\\n            'mago' => 'maghi',\\n            'maniaco' => 'maniaci',\\n            'manico' => 'manici',\\n            'mano' => 'mani',\\n            'medico' => 'medici',\\n            'membro' => 'membri',\\n            'metropoli' => 'metropoli',\\n            'migliaio' => 'migliaia',\\n            'miglio' => 'miglia',\\n            'mille' => 'mila',\\n            'mio' => 'miei',\\n            'moglie' => 'mogli',\\n            'mosaico' => 'mosaici',\\n            'muro' => 'muri',\\n            'nemico' => 'nemici',\\n            'nome' => 'nomi',\\n            'occhio' => 'occhi',\\n            'orecchio' => 'orecchi',\\n            'osso' => 'ossa',\\n            'paio' => 'paia',\\n            'pane' => 'pani',\\n            'papa' => 'papi',\\n            'pasta' => 'paste',\\n            'penna' => 'penne',\\n            'pesce' => 'pesci',\\n            'piede' => 'piedi',\\n            'pittore' => 'pittori',\\n            'poeta' => 'poeti',\\n            'porco' => 'porci',\\n            'porto' => 'porti',\\n            'problema' => 'problemi',\\n            'ragazzo' => 'ragazzi',\\n            're' => 're',\\n            'rene' => 'reni',\\n            'riso' => 'risa',\\n            'rosa' => 'rosa',\\n            'sale' => 'sali',\\n            'sarto' => 'sarti',\\n            'scuola' => 'scuole',\\n            'serie' => 'serie',\\n            'serramento' => 'serramenta',\\n            'sorella' => 'sorelle',\\n            'specie' => 'specie',\\n            'staio' => 'staia',\\n            'stazione' => 'stazioni',\\n            'strido' => 'strida',\\n            'strillo' => 'strilla',\\n            'studio' => 'studi',\\n            'suo' => 'suoi',\\n            'superficie' => 'superfici',\\n            'tavolo' => 'tavoli',\\n            'tempio' => 'templi',\\n            'treno' => 'treni',\\n            'tuo' => 'tuoi',\\n            'uomo' => 'uomini',\\n            'uovo' => 'uova',\\n            'urlo' => 'urla',\\n            'valigia' => 'valigie',\\n            'vestigio' => 'vestigia',\\n            'vino' => 'vini',\\n            'viola' => 'viola',\\n            'zio' => 'zii',\\n        ];\\n\\n        foreach ($irregulars as $singular => $plural) {\\n            yield new Substitution(new Word($singular), new Word($plural));\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Italian\/Rules.php\",\"ext\":\"php\",\"size\":874,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Italian;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Patterns;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Substitutions;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Transformations;\\n\\nfinal class Rules\\n{\\n    public static function getSingularRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getSingular()),\\n            new Patterns(...Uninflected::getSingular()),\\n            (new Substitutions(...Inflectible::getIrregular()))->getFlippedSubstitutions()\\n        );\\n    }\\n\\n    public static function getPluralRuleset(): Ruleset\\n    {\\n        return new Ruleset(\\n            new Transformations(...Inflectible::getPlural()),\\n            new Patterns(...Uninflected::getPlural()),\\n            new Substitutions(...Inflectible::getIrregular())\\n        );\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Italian\/Uninflected.php\",\"ext\":\"php\",\"size\":1719,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Italian;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Pattern;\\n\\nfinal class Uninflected\\n{\\n    \/** @return iterable<Pattern> *\/\\n    public static function getSingular(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return iterable<Pattern> *\/\\n    public static function getPlural(): iterable\\n    {\\n        yield from self::getDefault();\\n    }\\n\\n    \/** @return iterable<Pattern> *\/\\n    private static function getDefault(): iterable\\n    {\\n        \/\/ Invariable words (same form in singular and plural)\\n        $invariables = [\\n            'alpaca',\\n            'auto',\\n            'bar',\\n            'blu',\\n            'boia',\\n            'boomerang',\\n            'brindisi',\\n            'campus',\\n            'computer',\\n            'crisi',\\n            'crocevia',\\n            'dopocena',\\n            'film',\\n            'foto',\\n            'fuchsia',\\n            'gnu',\\n            'gorilla',\\n            'gru',\\n            'iguana',\\n            'kamikaze',\\n            'karaoke',\\n            'koala',\\n            'lama',\\n            'menu',\\n            'metropoli',\\n            'moto',\\n            'opossum',\\n            'panda',\\n            'quiz',\\n            'radio',\\n            're',\\n            'scacciapensieri',\\n            'serie',\\n            'smartphone',\\n            'sosia',\\n            'sottoscala',\\n            'specie',\\n            'sport',\\n            'tablet',\\n            'taxi',\\n            'vaglia',\\n            'virt\u00f9',\\n            'virus',\\n            'yogurt',\\n            'foto',\\n            'fuchsia',\\n        ];\\n\\n        foreach ($invariables as $word) {\\n            yield new Pattern($word);\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Italian\/InflectorFactory.php\",\"ext\":\"php\",\"size\":461,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules\\\\Italian;\\n\\nuse Doctrine\\\\Inflector\\\\GenericLanguageInflectorFactory;\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nfinal class InflectorFactory extends GenericLanguageInflectorFactory\\n{\\n    protected function getSingularRuleset(): Ruleset\\n    {\\n        return Rules::getSingularRuleset();\\n    }\\n\\n    protected function getPluralRuleset(): Ruleset\\n    {\\n        return Rules::getPluralRuleset();\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/Rules\/Patterns.php\",\"ext\":\"php\",\"size\":602,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector\\\\Rules;\\n\\nuse function array_map;\\nuse function implode;\\nuse function preg_match;\\n\\nclass Patterns\\n{\\n    \/** @var string *\/\\n    private $regex;\\n\\n    public function __construct(Pattern ...$patterns)\\n    {\\n        $patterns = array_map(static function (Pattern $pattern): string {\\n            return $pattern->getPattern();\\n        }, $patterns);\\n\\n        $this->regex = '\/^(?:' . implode('|', $patterns) . ')$\/i';\\n    }\\n\\n    public function matches(string $word): bool\\n    {\\n        return preg_match($this->regex, $word, $regs) === 1;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/doctrine\/inflector\/src\/RulesetInflector.php\",\"ext\":\"php\",\"size\":1355,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"<?php\\n\\ndeclare(strict_types=1);\\n\\nnamespace Doctrine\\\\Inflector;\\n\\nuse Doctrine\\\\Inflector\\\\Rules\\\\Ruleset;\\n\\nuse function array_merge;\\n\\n\/**\\n * Inflects based on multiple rulesets.\\n *\\n * Rules:\\n * - If the word matches any uninflected word pattern, it is not inflected\\n * - The first ruleset that returns a different value for an irregular word wins\\n * - The first ruleset that returns a different value for a regular word wins\\n * - If none of the above match, the word is left as-is\\n *\/\\nclass RulesetInflector implements WordInflector\\n{\\n    \/** @var Ruleset[] *\/\\n    private $rulesets;\\n\\n    public function __construct(Ruleset $ruleset, Ruleset ...$rulesets)\\n    {\\n        $this->rulesets = array_merge([$ruleset], $rulesets);\\n    }\\n\\n    public function inflect(string $word): string\\n    {\\n        if ($word === '') {\\n            return '';\\n        }\\n\\n        foreach ($this->rulesets as $ruleset) {\\n            if ($ruleset->getUninflected()->matches($word)) {\\n                return $word;\\n            }\\n\\n            $inflected = $ruleset->getIrregular()->inflect($word);\\n\\n            if ($inflected !== $word) {\\n                return $inflected;\\n            }\\n\\n            $inflected = $ruleset->getRegular()->inflect($word);\\n\\n            if ($inflected !== $word) {\\n                return $inflected;\\n            }\\n        }\\n\\n        return $word;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wp-block-converter\/CHANGELOG.md\",\"ext\":\"md\",\"size\":2365,\"mtime\":1756373564,\"type\":\"text\",\"content\":\"\\n# Changelog\\n\\nAll notable changes to `WP Block Converter` will be documented in this file.\\n\\n## 1.6.0\\n\\n### Added\\n\\n- Added `wp_block_converter_pre_sideload_image` hook to allow select images to\\n  be disabled when sideloading.\\n\\n### Changed\\n\\n- Sideloading of images is now opt-in. You can enable it by setting the\\n  `sideload_images` option to `true` when creating the converter instance.\\n\\n## 1.5.2\\n\\n### Fixed\\n\\n- Fixed issue when converting blockquotes with child text nodes.\\n\\n## 1.5.1\\n\\n### Fixed\\n\\n- Fixed bug where macros can be used to modify\/replace any tag.\\n\\n## 1.5.0\\n\\n### Added\\n\\n- Add collection of attachments that are created during the conversion process.\\n  Two methods now exist on the converter to help:\\n  - `get_created_attachment_ids()` - Returns the attachment IDs that were created.\\n  - `assign_parent_to_attachments()` - Assigns a parent post to all attachments.\\n\\n### Changed\\n\\n- Nested images are now properly sideloaded and converted to image blocks where\\n  appropriate. For example, an image inside a figure tag will now be converted\\n  to an image block. An image within a paragraph tag will be sideloaded but\\n  won't be converted to an image block.\\n\\n## 1.4.0\\n\\n- Drops support for PHP 8.0.\\n- Fixes issue with `<embed>` elements.\\n\\n## 1.3.2\\n\\n- Preserve new lines in embed blocks. They are required for proper front end rendering.\\n- Fix aspect ratio calculation when height and width are percentages - which fixes TikTok embeds.\\n\\n## 1.3.1\\n\\n- Fixes embeds of x.com urls (instead of twitter.com)\\n\\n## 1.3.0\\n\\n- Adds macro support to the converter, allowing for custom tags to be added to the\\n  converter.\\n- Adds support for `hr` tags.\\n- Adds support for embeds.\\n\\n## 1.2.0\\n\\n- Enhancement: Adds support for non-standard ports in sanitized URLs (e.g.,\\n  8080).\\n- Enhancement: Added new filter called `wp_block_converter_sanitized_image_url`\\n  which allows the image URL for converted images to be filtered before being\\n  applied.\\n- Bugfix: Changed the behavior of the `create_or_get_attachment` function to\\n  throw an exception instead of returning a `WP_Error`, which wasn't being\\n  handled previously and would result in a crash if a non-string value was\\n  returned by `upload_image`.\\n- Bugfix: Ensure `upload_image` returns the image URL.\\n\\n## 1.1.0\\n\\n- Expands PHP version support from just 8.0 to include 8.1 and 8.2\\n\\n## 1.0.0 - 2022-12-19\\n\\n- Initial release\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wp-block-converter\/src\/concerns\/trait-listens-for-attachments.php\",\"ext\":\"php\",\"size\":1586,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Listens_For_Attachments trait file\\n *\\n * @package wp-block-converter\\n *\/\\n\\nnamespace Alley\\\\WP\\\\Block_Converter\\\\Concerns;\\n\\n\/**\\n * Listens for the creation of attachments.\\n *\/\\ntrait Listens_For_Attachments {\\n\\t\/**\\n\\t * The attachment IDs created during the conversion.\\n\\t *\\n\\t * @var array<int>\\n\\t *\/\\n\\tprotected array $created_attachment_ids = [];\\n\\n\\t\/**\\n\\t * Retrieve the attachment IDs created during the conversion.\\n\\t *\\n\\t * @return array<int>\\n\\t *\/\\n\\tpublic function get_created_attachment_ids(): array {\\n\\t\\treturn $this->created_attachment_ids;\\n\\t}\\n\\n\\t\/**\\n\\t * Assign a parent post ID to the created attachments.\\n\\t *\\n\\t * @param int $parent_post_id Parent post ID.\\n\\t *\/\\n\\tpublic function assign_parent_to_attachments( int $parent_post_id ): void {\\n\\t\\tforeach ( $this->get_created_attachment_ids() as $attachment_id ) {\\n\\t\\t\\twp_update_post( [\\n\\t\\t\\t\\t'ID'          => $attachment_id,\\n\\t\\t\\t\\t'post_parent' => $parent_post_id,\\n\\t\\t\\t] );\\n\\t\\t}\\n\\t}\\n\\n\\t\/**\\n\\t * Listen for the creation of attachments.\\n\\t *\/\\n\\tpublic function listen_for_attachment_creation(): void {\\n\\t\\t$this->created_attachment_ids = [];\\n\\n\\t\\tadd_action( 'add_attachment', [ $this, 'track_attachment_creation' ] );\\n\\t}\\n\\n\\t\/**\\n\\t * Detach the attachment creation listener.\\n\\t *\/\\n\\tpublic function detach_attachment_creation_listener(): void {\\n\\t\\tremove_action( 'add_attachment', [ $this, 'track_attachment_creation' ] );\\n\\t}\\n\\n\\t\/**\\n\\t * Track the creation of an attachment.\\n\\t *\\n\\t * @param int $attachment_id Attachment ID.\\n\\t *\/\\n\\tpublic function track_attachment_creation( int $attachment_id ): void {\\n\\t\\t$this->created_attachment_ids[] = $attachment_id;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wp-block-converter\/src\/helpers.php\",\"ext\":\"php\",\"size\":3462,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * WP Block Converter Helpers\\n *\\n * @package wp-block-converter\\n *\/\\n\\nnamespace Alley\\\\WP\\\\Block_Converter;\\n\\nuse Exception;\\nuse WP_Error;\\n\\n\/**\\n * Create or get an already saved attachment from an external URL.\\n *\\n * @param string $src Image URL.\\n * @param array  $args {\\n *        Arguments for the attachment, optional. Default empty array.\\n *\\n *        @type string      $alt            Alt text.\\n *        @type string      $caption        Caption text.\\n *        @type string      $description    Description text.\\n *        @type array       $meta           Associate array of meta to set.\\n *                                          The value of alt text will\\n *                                          automatically be mapped into\\n *                                          this value and will be\\n *                                          overridden by the alt explicitly\\n *                                          passed into this array.\\n *        @type null|int    $parent_post_id Parent post id.\\n *        @type null|string $title          Title text. Null defaults to the\\n *                                          sanitized filename.\\n * }\\n * @phpstan-param array{\\n *   alt?: string,\\n *   caption?: string,\\n *   description?: string,\\n *   meta?: array<string, string>,\\n *   parent_post_id?: null|int,\\n *   title?: null|string,\\n * } $args\\n * @param string $meta_key Meta key to store the original URL.\\n *\\n * @throws Exception If the image was not able to be uploaded.\\n *\\n * @return int Attachment ID.\\n *\/\\nfunction create_or_get_attachment_from_url( string $src, array $args = [], string $meta_key = 'original_url' ): int {\\n\\t$attachment_ids = get_posts( \/\/ phpcs:ignore WordPressVIPMinimum.Functions.RestrictedFunctions.get_posts_get_posts\\n\\t\\t[\\n\\t\\t\\t'fields'           => 'ids',\\n\\t\\t\\t'meta_key'         => $meta_key,\\n\\t\\t\\t'meta_value'       => $src, \/\/ phpcs:ignore WordPress.DB.SlowDBQuery.slow_db_query_meta_value\\n\\t\\t\\t'post_status'      => 'any',\\n\\t\\t\\t'post_type'        => 'attachment',\\n\\t\\t\\t'posts_per_page'   => 1,\\n\\t\\t\\t'suppress_filters' => false,\\n\\t\\t]\\n\\t);\\n\\n\\tif ( ! empty( $attachment_ids ) ) {\\n\\t\\treturn array_shift( $attachment_ids );\\n\\t}\\n\\n\\tif ( ! function_exists( 'media_sideload_image' ) ) {\\n\\t\\trequire_once ABSPATH . 'wp-admin\/includes\/file.php';\\n\\t\\trequire_once ABSPATH . 'wp-admin\/includes\/image.php';\\n\\t\\trequire_once ABSPATH . 'wp-admin\/includes\/media.php';\\n\\t}\\n\\n\\t$attachment_id = media_sideload_image( $src, $args['parent_post_id'] ?? 0, $args['description'] ?? '', 'id' );\\n\\n\\tif ( is_wp_error( $attachment_id ) ) {\\n\\t\\t\/\/ translators: 1: URL, 2: Error message.\\n\\t\\t$message = sprintf( __( 'media_sideload_image failed for URL %1$s; error message: %2$s', 'wp-block-converter' ), $src, $attachment_id->get_error_message() );\\n\\t\\tthrow new Exception( esc_html( $message ) );\\n\\t}\\n\\n\\t\/\/ Store the original URL for future reference.\\n\\tupdate_post_meta( (int) $attachment_id, $meta_key, $src );\\n\\n\\t$postarr = [\\n\\t\\t'post_content' => $args['description'] ?? '',\\n\\t\\t'post_excerpt' => $args['caption'] ?? '',\\n\\t\\t'post_title'   => $args['title'] ?? '',\\n\\t\\t'meta_input'   => array_filter(\\n\\t\\t\\tarray_merge(\\n\\t\\t\\t\\t(array) ( $args['meta'] ?? [] ),\\n\\t\\t\\t\\t[\\n\\t\\t\\t\\t\\t'_wp_attachment_image_alt' => $args['alt'] ?? null,\\n\\t\\t\\t\\t],\\n\\t\\t\\t),\\n\\t\\t),\\n\\t];\\n\\n\\t\/\/ Update the rest of the arguments if they were passed.\\n\\tif ( ! empty( array_filter( $postarr ) ) ) {\\n\\t\\t$postarr['ID'] = $attachment_id;\\n\\n\\t\\t\\\\wp_update_post( $postarr ); \/\/ @phpstan-ignore-line argument.type\\n\\t}\\n\\n\\treturn (int) $attachment_id;\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wp-block-converter\/src\/class-block-converter.php\",\"ext\":\"php\",\"size\":21761,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Block_Converter class file\\n *\\n * phpcs:disable WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\\n *\\n * @package wp-block-converter\\n *\/\\n\\nnamespace Alley\\\\WP\\\\Block_Converter;\\n\\nuse DOMElement;\\nuse DOMNode;\\nuse DOMNodeList;\\nuse Exception;\\nuse Mantle\\\\Support\\\\Traits\\\\Macroable;\\nuse Psr\\\\Log\\\\LoggerInterface;\\nuse RuntimeException;\\nuse Throwable;\\n\\nuse function Mantle\\\\Support\\\\Helpers\\\\mixed;\\n\\n\/**\\n * Converts a DOMDocument to Gutenberg block HTML.\\n *\\n * Mirrors the `htmlToBlocks()`\/`rawHandler()` from the `@wordpress\/blocks` package.\\n *\/\\nclass Block_Converter {\\n\\tuse Concerns\\\\Listens_For_Attachments, Macroable {\\n\\t\\t__call as macro_call;\\n\\t}\\n\\n\\t\/**\\n\\t * Setup the class.\\n\\t *\\n\\t * @throws RuntimeException If WordPress is not loaded.\\n\\t *\\n\\t * @param string               $html The HTML to parse.\\n\\t * @param bool                 $sideload_images Whether to sideload images or not. Defaults to false.\\n\\t * @param LoggerInterface|null $logger The logger to use.\\n\\t *\/\\n\\tpublic function __construct( public string $html, public bool $sideload_images = false, protected ?LoggerInterface $logger = null ) {\\n\\t\\tif ( ! function_exists( 'do_action' ) ) {\\n\\t\\t\\tthrow new RuntimeException( 'WordPress must be loaded to use the Block_Converter class.' );\\n\\t\\t}\\n\\t}\\n\\n\\t\/**\\n\\t * Convert HTML to Gutenberg blocks.\\n\\t *\\n\\t * @return string The HTML.\\n\\t *\/\\n\\tpublic function convert(): string {\\n\\t\\t$this->listen_for_attachment_creation();\\n\\n\\t\\t\/\/ Get tags from the html.\\n\\t\\t$content = static::get_node_tag_from_html( $this->html );\\n\\n\\t\\t\/\/ Bail early if is empty.\\n\\t\\tif ( empty( $content->item( 0 )->childNodes ) ) {\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\n\\t\\t$html = [];\\n\\n\\t\\tforeach ( $content->item( 0 )->childNodes as $node ) {\\n\\t\\t\\tif ( '#text' === $node->nodeName ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ Merge the block into the HTML collection.\\n\\t\\t\\t$html[] = $this->minify_block( (string) $this->convert_node( $node ) );\\n\\t\\t}\\n\\n\\t\\t$html = implode( \\\"\\\\n\\\\n\\\", $html );\\n\\n\\t\\t\/\/ Remove empty blocks.\\n\\t\\t$html = $this->remove_empty_blocks( $html );\\n\\n\\t\\t\/**\\n\\t\\t * Content converted into blocks.\\n\\t\\t *\\n\\t\\t * @since 1.0.0\\n\\t\\t *\\n\\t\\t * @param string                 $html    HTML converted into Gutenberg blocks.\\n\\t\\t * @param \\\\DOMNodeList<\\\\DOMNode> $content The original DOMNodeList.\\n\\t\\t *\/\\n\\t\\t$html = trim( (string) apply_filters( 'wp_block_converter_document_html', $html, $content ) );\\n\\n\\t\\t$this->detach_attachment_creation_listener();\\n\\n\\t\\treturn $html;\\n\\t}\\n\\n\\t\/**\\n\\t * Convert a node to a block.\\n\\t *\\n\\t * @throws RuntimeException If the block is not an instance of Block or null.\\n\\t *\\n\\t * @param DOMNode $node The node to convert.\\n\\t * @return Block|null\\n\\t *\/\\n\\tpublic function convert_node( DOMNode $node ): ?Block {\\n\\t\\tif ( '#text' === $node->nodeName ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tif ( static::has_macro( $node->nodeName ) ) {\\n\\t\\t\\t$block = static::macro_call( $node->nodeName, [ $node ] );\\n\\t\\t} else {\\n\\t\\t\\t$block = match ( strtolower( $node->nodeName ) ) {\\n\\t\\t\\t\\t'ul' => $this->ul( $node ),\\n\\t\\t\\t\\t'ol' => $this->ol( $node ),\\n\\t\\t\\t\\t'img' => $this->img( $node ),\\n\\t\\t\\t\\t'blockquote' => $this->blockquote( $node ),\\n\\t\\t\\t\\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6' => $this->h( $node ),\\n\\t\\t\\t\\t'p', 'a', 'abbr', 'b', 'code', 'em', 'i', 'strong', 'sub', 'sup', 'span', 'u' => $this->p( $node ),\\n\\t\\t\\t\\t'figure' => $this->figure( $node ),\\n\\t\\t\\t\\t'br', 'cite', 'source' => null,\\n\\t\\t\\t\\t'hr' => $this->separator(),\\n\\t\\t\\t\\tdefault => $this->html( $node ),\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif ( null !== $block && ! $block instanceof Block ) {\\n\\t\\t\\tthrow new RuntimeException( 'Returned block must be an instance of Block or null.' );\\n\\t\\t}\\n\\n\\t\\t\/**\\n\\t\\t * Hook to allow output customizations.\\n\\t\\t *\\n\\t\\t * @since 1.0.0\\n\\t\\t *\\n\\t\\t * @param Block|null $block The generated block object.\\n\\t\\t * @param DOMNode    $node  The node being converted.\\n\\t\\t *\/\\n\\t\\t$block = apply_filters( 'wp_block_converter_block', $block, $node );\\n\\n\\t\\tif ( ! $block instanceof Block ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn $block;\\n\\t}\\n\\n\\t\/**\\n\\t * Sideload any child images of a DOMNode and replace the src with the new URL.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return void\\n\\t *\/\\n\\tprotected function sideload_child_images( DOMNode $node ): void {\\n\\t\\tif ( ! $this->sideload_images ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t$children = $node->childNodes;\\n\\n\\t\\tif ( ! $children->length ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tforeach ( $children as $child_node ) {\\n\\t\\t\\t\/\/ Skip if the node is not an image or is not an instance of DOMElement.\\n\\t\\t\\tif ( 'img' !== $child_node->nodeName || ! $child_node instanceof DOMElement ) {\\n\\t\\t\\t\\t\/\/ Recursively sideload images in child nodes.\\n\\t\\t\\t\\tif ( $child_node->hasChildNodes() ) {\\n\\t\\t\\t\\t\\t$this->sideload_child_images( $child_node );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/**\\n\\t\\t\\t * Filter if the image should be preloaded.\\n\\t\\t\\t *\\n\\t\\t\\t * @since 1.6.0\\n\\t\\t\\t *\\n\\t\\t\\t * @param bool            $pre        Whether to sideload the image.\\n\\t\\t\\t * @param string          $src        The image source URL.\\n\\t\\t\\t * @param DOMNode         $child_node The child node.\\n\\t\\t\\t * @param Block_Converter $converter The converter instance.\\n\\t\\t\\t *\/\\n\\t\\t\\t$pre = apply_filters( 'wp_block_converter_pre_sideload_image', true, $child_node->getAttribute( 'src' ), $child_node, $this );\\n\\n\\t\\t\\t\/\/ Re-read the src attribute in case it was modified by the filter.\\n\\t\\t\\t$src = $child_node->getAttribute( 'src' );\\n\\n\\t\\t\\tif ( ! $pre || empty( $src ) ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\t$previous_src = $src;\\n\\t\\t\\t\\t$src          = $this->upload_image( $src, $child_node->getAttribute( 'alt' ) );\\n\\n\\t\\t\\t\\tif ( $src ) {\\n\\t\\t\\t\\t\\t$child_node->setAttribute( 'src', $src );\\n\\n\\t\\t\\t\\t\\t\/\/ Remove any srcset attributes.\\n\\t\\t\\t\\t\\tif ( $child_node->hasAttribute( 'srcset' ) ) {\\n\\t\\t\\t\\t\\t\\t$child_node->removeAttribute( 'srcset' );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\/\/ Update the parent node with the new link if the parent\\n\\t\\t\\t\\t\\t\/\/ node is an anchor.\\n\\t\\t\\t\\t\\tif ( $node instanceof DOMElement && 'a' === $node->nodeName && $previous_src === $node->getAttribute( 'href' ) ) {\\n\\t\\t\\t\\t\\t\\t$node->setAttribute( 'href', $src );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\/**\\n\\t\\t\\t\\t\\t * Fires after a child image has been sideloaded.\\n\\t\\t\\t\\t\\t *\\n\\t\\t\\t\\t\\t * @since 1.5.0\\n\\t\\t\\t\\t\\t *\\n\\t\\t\\t\\t\\t * @param string  $src        The image source URL.\\n\\t\\t\\t\\t\\t * @param DOMNode $child_node The child node.\\n\\t\\t\\t\\t\\t *\/\\n\\t\\t\\t\\t\\tdo_action( 'wp_block_converter_sideloaded_image', $src, $child_node );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch ( Throwable $e ) { \/\/ phpcs:ignore Squiz.Commenting.EmptyCatchComment.Missing, Generic.CodeAnalysis.EmptyStatement.DetectedCatch\\n\\t\\t\\t\\t$this->logger?->error(\\n\\t\\t\\t\\t\\t\\\"Error sideloading image: {$e->getMessage()}\\\",\\n\\t\\t\\t\\t\\t[\\n\\t\\t\\t\\t\\t\\t'exception' => $e,\\n\\t\\t\\t\\t\\t\\t'node'      => $child_node,\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t\/**\\n\\t * Convert the children of a node to blocks.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return string The children as blocks.\\n\\t *\/\\n\\tpublic function convert_with_children( DOMNode $node ): string {\\n\\t\\t$children = '';\\n\\n\\t\\t\/\/ Recursively convert the children of the node.\\n\\t\\tforeach ( $node->childNodes as $child ) {\\n\\t\\t\\tif ( '#text' === $child->nodeName ) {\\n\\t\\t\\t\\t$children .= $child->nodeValue;\\n\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ Ensure that the cite tag is not converted to a block.\\n\\t\\t\\tif ( 'cite' === strtolower( $child->nodeName ) ) {\\n\\t\\t\\t\\t$children .= trim( static::get_node_html( $child ) );\\n\\t\\t\\t}\\n\\n\\t\\t\\t$child_block = $this->convert_node( $child );\\n\\n\\t\\t\\tif ( ! empty( $child_block ) ) {\\n\\t\\t\\t\\t$children .= $this->minify_block( (string) $child_block );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t$node->nodeValue = '__CHILDREN__';\\n\\n\\t\\t$content = static::get_node_html( $node );\\n\\n\\t\\t\/\/ Replace the placeholder with the children.\\n\\t\\t$content = str_replace( '__CHILDREN__', $children, $content );\\n\\n\\t\\treturn $content;\\n\\t}\\n\\n\\t\/**\\n\\t * Magic function to convert to a string.\\n\\t *\/\\n\\tpublic function __toString(): string {\\n\\t\\treturn $this->convert();\\n\\t}\\n\\n\\t\/**\\n\\t * Create heading blocks.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block|null\\n\\t *\/\\n\\tprotected function h( DOMNode $node ): ?Block {\\n\\t\\t$content = static::get_node_html( $node );\\n\\n\\t\\tif ( empty( $content ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'heading',\\n\\t\\t\\tattributes: [\\n\\t\\t\\t\\t'level' => absint( str_replace( 'h', '', $node->nodeName ) ),\\n\\t\\t\\t],\\n\\t\\t\\tcontent: $content,\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create blockquote block.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block|null\\n\\t *\/\\n\\tprotected function blockquote( DOMNode $node ): ?Block {\\n\\t\\t\/\/ Set the class on the node equal to wp-block-quote.\\n\\t\\tif ( $node instanceof DOMElement && empty( $node->getAttribute( 'class' ) ) ) {\\n\\t\\t\\t$node->setAttribute( 'class', 'wp-block-quote' );\\n\\t\\t}\\n\\n\\t\\t$content = $this->convert_with_children( $node );\\n\\n\\t\\tif ( empty( $content ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'quote',\\n\\t\\t\\tattributes: [],\\n\\t\\t\\tcontent: $content,\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create paragraph blocks.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block|null\\n\\t *\/\\n\\tprotected function p( DOMNode $node ): ?Block {\\n\\t\\tif ( $this->is_anchor_wrapped_image( $node ) ) {\\n\\t\\t\\treturn $this->img( $node );\\n\\t\\t}\\n\\n\\t\\t$this->sideload_child_images( $node );\\n\\n\\t\\t$content = static::get_node_html( $node );\\n\\n\\t\\t\/\/ TODO: Account for Twitter\/Facebook embeds being inline links in\\n\\t\\t\/\/ content and not full embeds.\\n\\t\\tif ( ! empty( filter_var( $node->textContent, FILTER_VALIDATE_URL ) ) ) {\\n\\t\\t\\tif ( \\\\str_contains( $node->textContent, '\/\/x.com' ) || \\\\str_contains( $node->textContent, '\/\/www.x.com' ) ) {\\n\\t\\t\\t\\t$node->textContent = str_replace( 'x.com', 'twitter.com', $node->textContent );\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ Instagram and Facebook embeds require an api key to retrieve oEmbed data.\\n\\t\\t\\tif ( \\\\str_contains( $node->textContent, 'instagram.com' ) ) {\\n\\t\\t\\t\\treturn $this->instagram_embed( $node->textContent );\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( \\\\str_contains( $node->textContent, 'facebook.com' ) ) {\\n\\t\\t\\t\\treturn $this->facebook_embed( $node->textContent );\\n\\t\\t\\t}\\n\\n\\t\\t\\t\/\/ Check if the URL is an oEmbed URL and return the oEmbed block if it is.\\n\\t\\t\\tif ( false !== wp_oembed_get( $node->textContent ) ) {\\n\\t\\t\\t\\treturn $this->oembed( $node->textContent );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( empty( $content ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'paragraph',\\n\\t\\t\\tattributes: [],\\n\\t\\t\\tcontent: $content,\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create figure blocks.\\n\\t *\\n\\t * This method only supports converting a <figure> block that has either a\\n\\t * <img>, <a> or <figcaption> child. If the <figure> block has other children\\n\\t * the block will be converted to a HTML block.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block|null\\n\\t *\/\\n\\tpublic function figure( DOMNode $node ): ?Block {\\n\\t\\tif ( $this->is_supported_figure( $node ) ) {\\n\\t\\t\\t$this->sideload_child_images( $node );\\n\\n\\t\\t\\t\/\/ Ensure it has the \\\"wp-block-image\\\" class.\\n\\t\\t\\tif ( $node instanceof DOMElement ) {\\n\\t\\t\\t\\t$node->setAttribute( 'class', 'wp-block-image' );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn new Block(\\n\\t\\t\\t\\tblock_name: 'image',\\n\\t\\t\\t\\tcontent: static::get_node_html( $node ),\\n\\t\\t\\t);\\n\\t\\t}\\n\\n\\t\\treturn $this->html( $node );\\n\\t}\\n\\n\\t\/**\\n\\t * Check if the figure node is supported for conversion.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return bool\\n\\t *\/\\n\\tprotected function is_supported_figure( DOMNode $node ): bool {\\n\\t\\t$children = $node->childNodes;\\n\\n\\t\\tif ( ! $children->length ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif ( $children->length > 2 ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif ( 2 === $children->length ) {\\n\\t\\t\\tif ( 'figcaption' !== $children->item( 1 )?->nodeName ) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t\/\/ Check if the first child is an <img> or an <a> with an <img> child.\\n\\t\\tif ( 'img' === $children->item( 0 )?->nodeName || $this->is_anchor_wrapped_image( $children->item( 0 ) ) ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/**\\n\\t * Check if the figure node is an anchor wrapped image.\\n\\t *\\n\\t * @param DOMNode|null $node The node.\\n\\t * @return bool\\n\\t *\/\\n\\tprotected function is_anchor_wrapped_image( ?DOMNode $node ): bool {\\n\\t\\tif ( ! $node ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\t$children = $node->childNodes;\\n\\n\\t\\tif ( ! $children->length ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tif ( 1 === $children->length && 'img' === $children->item( 0 )?->nodeName ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n\\n\\t\/**\\n\\t * Create ul blocks.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block\\n\\t *\/\\n\\tprotected function ul( DOMNode $node ): Block {\\n\\t\\t$this->sideload_child_images( $node );\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'list',\\n\\t\\t\\tcontent: static::get_node_html( $node ),\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create img block.\\n\\t *\\n\\t * Supports being passed a element that is a <img> or a parent element that\\n\\t * contains an <img>. If it is passed a parent element that contains an\\n\\t * <img> tag, the resulting block will preserve the parent element and wrap\\n\\t * it in a <figure> tag.\\n\\t *\\n\\t * @param DOMElement|DOMNode $element The node.\\n\\t * @return Block|null\\n\\t *\/\\n\\tprotected function img( DOMElement|DOMNode $element ): ?Block {\\n\\t\\tif ( ! $element instanceof DOMElement ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\t\/\/ If the element passed isn't an <img> attempt to find it from the children.\\n\\t\\tif ( 'img' !== $element->nodeName ) {\\n\\t\\t\\t$image_node = $element->getElementsByTagName( 'img' )->item( 0 );\\n\\n\\t\\t\\t\/\/ Bail early if the image node is not found.\\n\\t\\t\\tif ( ! $image_node ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\t$image_node = $element;\\n\\t\\t}\\n\\n\\t\\t$image_src = $image_node->getAttribute( 'data-srcset' );\\n\\t\\t$alt       = $image_node->getAttribute( 'alt' );\\n\\n\\t\\tif ( empty( $image_src ) && ! empty( $image_node->getAttribute( 'src' ) ) ) {\\n\\t\\t\\t$image_src = $image_node->getAttribute( 'src' );\\n\\t\\t}\\n\\n\\t\\ttry {\\n\\t\\t\\t$image_src = $this->upload_image( $image_src, $alt );\\n\\n\\t\\t\\t\/\/ Update the image src attribute.\\n\\t\\t\\t$image_node->setAttribute( 'src', $image_src );\\n\\n\\t\\t\\t\/\/ Remove any srcset attributes.\\n\\t\\t\\tif ( $image_node->hasAttribute( 'srcset' ) ) {\\n\\t\\t\\t\\t$image_node->removeAttribute( 'srcset' );\\n\\t\\t\\t}\\n\\t\\t} catch ( Exception ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\tif ( empty( $image_src ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'image',\\n\\t\\t\\tcontent: sprintf(\\n\\t\\t\\t\\t'<figure class=\\\"wp-block-image\\\">%s<\/figure>',\\n\\t\\t\\t\\tstatic::get_node_html( $element ),\\n\\t\\t\\t),\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create ol blocks.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block\\n\\t *\/\\n\\tprotected function ol( DOMNode $node ): Block {\\n\\t\\t$this->sideload_child_images( $node );\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'list',\\n\\t\\t\\tattributes: [\\n\\t\\t\\t\\t'ordered' => true,\\n\\t\\t\\t],\\n\\t\\t\\tcontent: static::get_node_html( $node ),\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create embed blocks.\\n\\t *\\n\\t * @param string $url The URL.\\n\\t * @return Block\\n\\t *\/\\n\\tprotected function oembed( string $url ): Block {\\n\\t\\t\/\/ This would probably be better as an internal request to \/wp-json\/oembed\/1.0\/proxy?url=...\\n\\t\\t$data = _wp_oembed_get_object()->get_data( $url, [] );\\n\\n\\t\\t$aspect_ratio = '';\\n\\t\\tif ( ! empty( $data->height ) && ! empty( $data->width ) && is_numeric( $data->height ) && is_numeric( $data->width ) ) {\\n\\t\\t\\tif ( 1.78 === round( $data->width \/ $data->height, 2 ) ) {\\n\\t\\t\\t\\t$aspect_ratio = '16-9';\\n\\t\\t\\t}\\n\\t\\t\\tif ( 1.33 === round( $data->width \/ $data->height, 2 ) ) {\\n\\t\\t\\t\\t$aspect_ratio = '4-3';\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t$atts = [\\n\\t\\t\\t'url'              => $url,\\n\\t\\t\\t'type'             => mixed( $data->type ?? '' )->string(),\\n\\t\\t\\t'providerNameSlug' => sanitize_title( mixed( $data->provider_name ?? '' )->string() ),\\n\\t\\t\\t'responsive'       => true,\\n\\t\\t];\\n\\n\\t\\tif ( ! empty( $aspect_ratio ) ) {\\n\\t\\t\\t$aspect_ratio      = sprintf( 'wp-embed-aspect-%s wp-has-aspect-ratio', $aspect_ratio );\\n\\t\\t\\t$atts['className'] = $aspect_ratio;\\n\\t\\t}\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'embed',\\n\\t\\t\\tattributes: $atts,\\n\\t\\t\\tcontent: sprintf(\\n\\t\\t\\t\\t'<figure class=\\\"wp-block-embed is-type-%s is-provider-%s wp-block-embed-%s%s\\\"><div class=\\\"wp-block-embed__wrapper\\\">\\n\\t\\t\\t\\t%s\\n\\t\\t\\t\\t<\/div><\/figure>',\\n\\t\\t\\t\\tmixed( $data->type ?? '' )->string(),\\n\\t\\t\\t\\tsanitize_title( mixed( $data->provider_name ?? '' )->string() ),\\n\\t\\t\\t\\tsanitize_title( mixed( $data->provider_name ?? '' )->string() ),\\n\\t\\t\\t\\t$aspect_ratio ? ' ' . $aspect_ratio : '',\\n\\t\\t\\t\\t$url\\n\\t\\t\\t),\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create Instagram embed blocks.\\n\\t *\\n\\t * @param string $url The URL.\\n\\t * @return Block\\n\\t *\/\\n\\tprotected function instagram_embed( string $url ): Block {\\n\\t\\t$atts = [\\n\\t\\t\\t'url'              => $url,\\n\\t\\t\\t'type'             => 'rich',\\n\\t\\t\\t'providerNameSlug' => 'instagram',\\n\\t\\t\\t'responsive'       => true,\\n\\t\\t];\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'embed',\\n\\t\\t\\tattributes: $atts,\\n\\t\\t\\tcontent: sprintf(\\n\\t\\t\\t\\t'<figure class=\\\"wp-block-embed is-type-rich is-provider-instagram wp-block-embed-instagram\\\"><div class=\\\"wp-block-embed__wrapper\\\">\\n\\t\\t\\t\\t%s\\n\\t\\t\\t\\t<\/div><\/figure>',\\n\\t\\t\\t\\t$url\\n\\t\\t\\t),\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create Instagram embed blocks.\\n\\t *\\n\\t * @param string $url The URL.\\n\\t * @return Block\\n\\t *\/\\n\\tprotected function facebook_embed( string $url ): Block {\\n\\t\\t$atts = [\\n\\t\\t\\t'url'              => $url,\\n\\t\\t\\t'type'             => 'rich',\\n\\t\\t\\t'providerNameSlug' => 'embed-handler',\\n\\t\\t\\t'responsive'       => true,\\n\\t\\t\\t'previewable'      => false,\\n\\t\\t];\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'embed',\\n\\t\\t\\tattributes: $atts,\\n\\t\\t\\tcontent: sprintf(\\n\\t\\t\\t\\t'<figure class=\\\"wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler\\\"><div class=\\\"wp-block-embed__wrapper\\\">\\n\\t\\t\\t\\t%s\\n\\t\\t\\t\\t<\/div><\/figure>',\\n\\t\\t\\t\\t$url\\n\\t\\t\\t),\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create separator blocks.\\n\\t *\\n\\t * @return Block\\n\\t *\/\\n\\tprotected function separator(): Block {\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'separator',\\n\\t\\t\\tcontent: '<hr class=\\\"wp-block-separator has-alpha-channel-opacity\\\"\/>'\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Create HTML blocks.\\n\\t *\\n\\t * @param DOMNode $node The node.\\n\\t * @return Block|null\\n\\t *\/\\n\\tprotected function html( DOMNode $node ): ?Block {\\n\\t\\t$this->sideload_child_images( $node );\\n\\n\\t\\t\/\/ Get the raw HTML.\\n\\t\\t$html = static::get_node_html( $node );\\n\\n\\t\\tif ( empty( $html ) ) {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\n\\t\\treturn new Block(\\n\\t\\t\\tblock_name: 'html',\\n\\t\\t\\tcontent: $html,\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Get nodes from a specific tag.\\n\\t *\\n\\t * **Note:** This method converts the node to HTML and then gets the nodes.\\n\\t * It cannot be use for DOMNode object modification.\\n\\t *\\n\\t * @deprecated Not used by the library. Will be removed in a future release.\\n\\t *\\n\\t * @param DOMNode $node The current DOMNode.\\n\\t * @param string  $tag The tag to search for.\\n\\t * @return DOMNodeList<DOMNode> The raw HTML.\\n\\t *\/\\n\\tpublic static function get_nodes( DOMNode $node, $tag ) {\\n\\t\\treturn static::get_node_tag_from_html(\\n\\t\\t\\tstatic::get_node_html( $node ),\\n\\t\\t\\t$tag\\n\\t\\t);\\n\\t}\\n\\n\\t\/**\\n\\t * Get the raw HTML from a DOMNode node.\\n\\t *\\n\\t * @param DOMNode $node The current DOMNode.\\n\\t * @return string The raw HTML.\\n\\t *\/\\n\\tpublic static function get_node_html( DOMNode $node ): string {\\n\\t\\treturn $node->ownerDocument?->saveHTML( $node ) ?: '';\\n\\t}\\n\\n\\t\/**\\n\\t * Get the HTML content.\\n\\t *\\n\\t * @param string $html The HTML content.\\n\\t * @param string $tag The tag to search for.\\n\\t * @return \\\\DOMNodeList<\\\\DOMNode> The list of DOMNodes.\\n\\t *\/\\n\\tpublic static function get_node_tag_from_html( $html, $tag = 'body' ) {\\n\\t\\t$dom = new \\\\DOMDocument();\\n\\n\\t\\t$errors = libxml_use_internal_errors( true );\\n\\n\\t\\t$dom->loadHTML( '<?xml encoding=\\\"utf-8\\\" ?>' . $html );\\n\\n\\t\\tlibxml_use_internal_errors( $errors );\\n\\n\\t\\treturn $dom->getElementsByTagName( $tag );\\n\\t}\\n\\n\\t\/**\\n\\t * Removing whitespace between blocks\\n\\t *\\n\\t * @param string $block Gutenberg blocks.\\n\\t * @return string\\n\\t *\/\\n\\tprotected function minify_block( string $block ): string {\\n\\t\\tif ( \\\\str_contains( $block, 'wp-block-embed' ) ) {\\n\\t\\t\\t$pattern = '\/(\\\\h){2,}\/s';\\n\\t\\t} else {\\n\\t\\t\\t$pattern = '\/(\\\\s){2,}\/s';\\n\\t\\t}\\n\\n\\t\\tif ( preg_match( $pattern, $block ) === 1 ) {\\n\\t\\t\\treturn preg_replace( $pattern, '', $block ) ?: '';\\n\\t\\t}\\n\\n\\t\\treturn $block;\\n\\t}\\n\\n\\t\/**\\n\\t * Quick way to remove all URL arguments.\\n\\t *\\n\\t * @param string $url URL.\\n\\t *\\n\\t * @return string A reconstructed image URL containing only the scheme, host, port, and path.\\n\\t *\/\\n\\tpublic function remove_image_args( $url ): string {\\n\\t\\t$url_parts = wp_parse_url( $url );\\n\\t\\t$scheme    = $url_parts['scheme'] ?? 'https';\\n\\t\\t$host      = $url_parts['host'] ?? '';\\n\\t\\t$port      = ! empty( $url_parts['port'] ) ? ':' . $url_parts['port'] : '';\\n\\t\\t$path      = $url_parts['path'] ?? '';\\n\\n\\t\\t\/\/ Ensure we have enough parts to construct a valid URL.\\n\\t\\t$sanitized_url = '';\\n\\t\\tif ( ! empty( $scheme ) && ! empty( $host ) && ! empty( $path ) ) {\\n\\t\\t\\t$sanitized_url = sprintf( '%s:\/\/%s%s%s', $scheme, $host, $port, $path );\\n\\t\\t}\\n\\n\\t\\t\/**\\n\\t\\t * Allow the reconstructed URL to be filtered before being returned.\\n\\t\\t *\\n\\t\\t * @param string $sanitized_url The reconstructed URL.\\n\\t\\t * @param string $original_url  The original URL before sanitization was applied.\\n\\t\\t *\/\\n\\t\\treturn apply_filters( 'wp_block_converter_sanitized_image_url', $sanitized_url, $url );\\n\\t}\\n\\n\\t\/**\\n\\t * Upload image.\\n\\t *\\n\\t * @param string $src Image url.\\n\\t * @param string $alt Image alt.\\n\\t *\\n\\t * @throws Exception If the image was not able to be created.\\n\\t *\\n\\t * @return string The WordPress image URL.\\n\\t *\/\\n\\tpublic function upload_image( string $src, string $alt ): string {\\n\\t\\t$src = $this->remove_image_args( $src );\\n\\n\\t\\treturn (string) wp_get_attachment_url( create_or_get_attachment_from_url( $src, [ 'alt' => $alt ] ) );\\n\\t}\\n\\n\\t\/**\\n\\t * Remove any empty blocks.\\n\\t *\\n\\t * @param string $html The current HTML.\\n\\t * @return string $html The new HTML.\\n\\t *\/\\n\\tpublic function remove_empty_blocks( string $html ): string {\\n\\t\\t$html = str_replace(\\n\\t\\t\\t[\\n\/\/ phpcs:disable\\n'<!-- wp:html -->\\n<div><\/div>\\n<!-- \/wp:html -->',\\n'<!-- wp:paragraph -->\\n<div>\u00a0<\/div>\\n<!-- \/wp:paragraph -->',\\n'<!-- wp:html -->\\n<div>\u00a0<\/div>\\n<!-- \/wp:html -->',\\n'<!-- wp:paragraph -->\\n<div>\u00a0\u00a0<\/div>\\n<!-- \/wp:paragraph -->',\\n'<!-- wp:paragraph --><p><br><\/p><!-- \/wp:paragraph -->',\\n'<!-- wp:paragraph --><p><br><br><br><\/p><!-- \/wp:paragraph -->',\\n'<!-- wp:paragraph -->\\n<p><br><\/p>\\n<!-- \/wp:paragraph -->',\\n'<!-- wp:html -->\\n<div> <\/div>\\n<!-- \/wp:html -->',\\n'<!-- wp:heading {\\\"level\\\":3} -->\\n<h3>\\n                                                        <\/h3>\\n<!-- \/wp:heading -->',\\n\/\/ phpcs:enable\\n\\t\\t\\t],\\n\\t\\t\\t'',\\n\\t\\t\\t$html\\n\\t\\t);\\n\\n\\t\\treturn $this->remove_empty_p_blocks( $html );\\n\\t}\\n\\n\\t\/**\\n\\t * Remove any empty p blocks.\\n\\t *\\n\\t * @param string $html The current HTML.\\n\\t * @return string $html The new HTML.\\n\\t *\/\\n\\tpublic function remove_empty_p_blocks( string $html ): string {\\n\\t\\treturn \\\\preg_replace( '\/(\\\\<\\\\!\\\\-\\\\- wp\\\\:paragraph \\\\-\\\\-\\\\>[\\\\s\\\\n\\\\r]*?\\\\<p\\\\>[\\\\s\\\\n\\\\r]*?\\\\<\\\\\/p\\\\>[\\\\s\\\\n\\\\r]*?\\\\<\\\\!\\\\-\\\\- \\\\\/wp\\\\:paragraph \\\\-\\\\-\\\\>)\/', '', $html ) ?: $html;\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wp-block-converter\/src\/class-block.php\",\"ext\":\"php\",\"size\":784,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\/**\\n * Block class file\\n *\\n * @package wp-block-converter\\n *\/\\n\\nnamespace Alley\\\\WP\\\\Block_Converter;\\n\\n\/**\\n * Block Transfer Object\\n *\/\\nclass Block {\\n\\t\/**\\n\\t * Constructor.\\n\\t *\\n\\t * @param string               $block_name The block name.\\n\\t * @param array<string, mixed> $attributes The block attributes.\\n\\t * @param string|null          $content    The block content.\\n\\t *\/\\n\\tpublic function __construct( public string $block_name, public array $attributes = [], public ?string $content = null ) {\\n\\t}\\n\\n\\t\/**\\n\\t * Render the block.\\n\\t *\/\\n\\tpublic function render(): string {\\n\\t\\treturn get_comment_delimited_block_content( $this->block_name, $this->attributes, $this->content ?? '' );\\n\\t}\\n\\n\\t\/**\\n\\t * Convert the block to HTML.\\n\\t *\/\\n\\tpublic function __toString() {\\n\\t\\treturn $this->render();\\n\\t}\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/composer-wordpress-autoloader\/CHANGELOG.md\",\"ext\":\"md\",\"size\":1602,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"# Changelog\\n\\nAll notable changes to `alleyinteractive\/composer-wordpress-autoloader` will be\\ndocumented in this file.\\n\\n## Unreleased\\n\\n## v1.2.0\\n\\n### Changed\\n\\n- Dropped PHP 8.0 support, added testing for 8.4. New minimum PHP version is 8.1.\\n- Dropped support for Composer 1.\\n\\n## v1.1.0\\n\\n### Changed\\n\\n- Dropped PHP 7.4 support, adding PHP 8.2 and 8.3 support explicitly with testing.\\n- Added testing against Windows.\\n\\n### Fixed\\n\\n- Fixed issue with `wordpress-autoload.php` file not properly loading on Windows.\\n\\n## v1.0.0\\n\\nNo changes, tagging a stable release.\\n\\n## v0.8.0\\n\\n- Automatically translate the `vendor-dir` and set the autoloaded files relative to the root directory of the project.\\n\\n## v0.7.0\\n\\n- Add APCu autoloader.\\n- Bump `alleyinteractive\/wordpress-autoloader` to `v1.1.0`.\\n\\n## v0.6.0\\n\\n- Simplify injection of autoloader.\\n- Automatically load the autoloader inside of `vendor\/autoload.php` without the\\n  need to load `vendor\/wordpress-autoload.php` manually.\\n\\n## v0.4.1\\n\\n### Updated\\n\\n* Fix Composer Injection to `vendor\/autoload.php` in https:\/\/github.com\/alleyinteractive\/composer-wordpress-autoloader\/pull\/10\\n\\n## v0.4.0\\n\\n### Added\\n\\n- Bump alleyinteractive\/wordpress-autoloader to 0.2 by @srtfisher in https:\/\/github.com\/alleyinteractive\/composer-wordpress-autoloader\/pull\/7\\n- Supports PHP 8.1\\n\\n## 0.3.0\\n\\n- Remove specific Composer version dependency.\\n\\n## 0.2.0\\n\\n- Updates autoloader to use non-hard-coded paths.\\n- Adds support for dependencies to autoload files as well, fixes [#3](https:\/\/github.com\/alleyinteractive\/composer-wordpress-autoloader\/issues\/3).\\n\\n## 0.1.0\\n\\n- Initial release.\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/composer-wordpress-autoloader\/src\/AutoloadGenerator.php\",\"ext\":\"php\",\"size\":11211,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace ComposerWordPressAutoloader;\\n\\nuse Composer\\\\Composer;\\nuse Composer\\\\Autoload\\\\AutoloadGenerator as ComposerAutoloadGenerator;\\nuse Composer\\\\IO\\\\IOInterface;\\nuse Composer\\\\Package\\\\PackageInterface;\\nuse Composer\\\\Package\\\\RootPackageInterface;\\nuse Composer\\\\Util\\\\Filesystem;\\n\\n\/**\\n * Composer Autoload Generator\\n *\/\\nclass AutoloadGenerator extends ComposerAutoloadGenerator\\n{\\n    protected Composer $composer;\\n    protected bool $devMode = true;\\n    protected bool $apcu = false;\\n    protected ?string $apcuPrefix = null;\\n\\n    \/**\\n     * Constructor.\\n     *\\n     * @param Composer $composer\\n     * @param IOInterface $io\\n     *\/\\n    public function __construct(Composer $composer, IOInterface $io)\\n    {\\n        parent::__construct($composer->getEventDispatcher(), $io);\\n\\n        $this->composer = $composer;\\n    }\\n\\n    \/**\\n     * @param bool $devMode\\n     * @return void\\n     *\/\\n    public function setDevMode($devMode = true)\\n    {\\n        parent::setDevMode($devMode);\\n\\n        $this->devMode = (bool) $devMode;\\n    }\\n\\n    \/**\\n     * Whether generated autoloader considers APCu caching.\\n     *\\n     * @param bool        $apcu\\n     * @param string|null $apcuPrefix\\n     * @return void\\n     *\/\\n    public function setApcuMode(bool $apcu, ?string $apcuPrefix = null)\\n    {\\n        parent::setApcu($apcu, $apcuPrefix);\\n\\n        $this->apcu = $apcu;\\n        $this->apcuPrefix = $apcuPrefix !== null ? $apcuPrefix : $apcuPrefix;\\n    }\\n\\n    \/**\\n     * Generate the autoload file.\\n     *\\n     * @param boolean $beingInjected Flag if the autoload file is being injected.\\n     * @param boolean $isDevMode Flag if dev dependencies are being included.\\n     * @return string\\n     *\/\\n    public function generate(bool $beingInjected, bool $isDevMode = true): string\\n    {\\n        $filesystem = new Filesystem();\\n        $basePath = $filesystem->normalizePath(realpath(realpath(getcwd())));\\n        $vendorPath = $filesystem->normalizePath(realpath(realpath($this->composer->getConfig()->get('vendor-dir'))));\\n\\n        $vendorPathCode = '__DIR__';\\n\\n        $appBaseDirCode = $filesystem->findShortestPathCode($vendorPath, $basePath, true);\\n        $appBaseDirCode = str_replace('__DIR__', '$vendorDir', $appBaseDirCode);\\n\\n        $this->setDevMode($isDevMode);\\n\\n        \/\/ Collect all the rules from all the packages.\\n        $rules = array_merge_recursive(\\n            $this->collectAutoloaderRules(),\\n            $this->collectExtraAutoloaderRules(),\\n        );\\n\\n        foreach ($rules as $namespace => $paths) {\\n            \/\/ Convert the paths to be relative to the vendor\/wordpress-autoload.php file.\\n            $rules[$namespace] = array_values(array_unique(\\n                array_map(fn ($path) => $this->getPathCode($filesystem, $basePath, $vendorPath, $path), $paths),\\n            ));\\n        }\\n\\n        return $this->getAutoloadFileContents($rules, $beingInjected, $vendorPathCode, $appBaseDirCode);\\n    }\\n\\n    \/**\\n     * Create the autoloader file contents to write to vendor\/wordpress-autoload.php.\\n     *\\n     * @param array $rules The rules to use to generate the autoloader.\\n     * @param boolean $beingInjected Flag if the autoload file is being injected.\\n     * @param string $vendorPathCode Vendor path code.\\n     * @param string $appBaseDirCode App base dir code.\\n     * @return string\\n     *\/\\n    protected function getAutoloadFileContents(\\n        array $rules,\\n        bool $beingInjected,\\n        string $vendorPathCode,\\n        string $appBaseDirCode\\n    ): string {\\n        $autoloadFileContents = <<<FILEHEADER\\n<?php\\n\/* Composer WordPress Autoloader @generated by alleyinteractive\/composer-wordpress-autoloader *\/\\nFILEHEADER;\\n\\n        \/\/ Load the Composer autoloader if this is not being injected.\\n        if (!$beingInjected) {\\n            $autoloadFileContents .= \\\"\\\\n\\\\$autoload = require_once __DIR__ . '\/autoload.php';\\\\n\\\";\\n        }\\n\\n        \/\/ Inject the APCu prefix if it's enabled.\\n        if ($this->apcu) {\\n            $apcuPrefix = var_export(\\n                $this->apcuPrefix !== null\\n                    ? $this->apcuPrefix\\n                    : substr(base64_encode(md5(uniqid('', true), true)), 0, -3),\\n                true,\\n            );\\n            $autoloadFileContents .= \\\"\\\\n\\\\\\\\ComposerWordPressAutoloader\\\\AutoloadFactory::setApcuPrefix($apcuPrefix);\\\\n\\\";\\n        }\\n\\n        \/\/ Inject the file paths for the autoloader.\\n        $autoloadFileContents .= <<<AUTOLOADFILEPATHS\\n\\n\\\\$vendorDir = $vendorPathCode;\\n\\\\$baseDir = $appBaseDirCode;\\n\\nAUTOLOADFILEPATHS;\\n\\n        \/\/ Include the rules for the autoloader.\\n        $autoloadFileContents .= <<<AUTOLOAD\\n\\n\\\\ComposerWordPressAutoloader\\\\AutoloadFactory::registerFromRules(array(\\n\\nAUTOLOAD;\\n\\n        foreach ($rules as $namespace => $paths) {\\n            $autoloadFileContents .= sprintf(\\n                '    %s => array(%s),',\\n                var_export($namespace, true),\\n                implode(', ', $paths),\\n            ) . PHP_EOL;\\n        }\\n\\n        $autoloadFileContents .= \\\"));\\\\n\\\";\\n\\n        if (!$beingInjected) {\\n            $autoloadFileContents .= \\\"\\\\nreturn \\\\$autoload;\\\";\\n        }\\n\\n        return $autoloadFileContents . \\\"\\\\n\\\";\\n    }\\n\\n    \/**\\n     * Collect the autoloader rules from 'autoload' and 'autoload-dev' to\\n     * generate rules for.\\n     *\\n     * @return array<string, string>\\n     *\/\\n    protected function collectAutoloaderRules(): array\\n    {\\n        return $this->parseAutoloads(\\n            $this->buildPackageMap(\\n                $this->composer->getInstallationManager(),\\n                $this->composer->getPackage(),\\n                $this->composer->getRepositoryManager()->getLocalRepository()->getCanonicalPackages(),\\n            ),\\n            $this->composer->getPackage(),\\n            !$this->devMode,\\n        )['wordpress'] ?? [];\\n    }\\n\\n    \/**\\n     * Collect the autoloader rules registered via 'extra' to generate for.\\n     *\\n     * @return array<string, string>\\n     *\/\\n    protected function collectExtraAutoloaderRules(): array\\n    {\\n        return $this->parseExtraAutoloads(\\n            $this->buildPackageMap(\\n                $this->composer->getInstallationManager(),\\n                $this->composer->getPackage(),\\n                $this->composer->getRepositoryManager()->getLocalRepository()->getCanonicalPackages(),\\n            ),\\n            $this->composer->getPackage(),\\n            !$this->devMode,\\n        )['wordpress'] ?? [];\\n    }\\n\\n    \/**\\n     * Compiles an ordered list of namespace => path mappings\\n     *\\n     * @param array $packageMap\\n     * @param PackageInterface $rootPackage\\n     * @param boolean $filteredDevPackages\\n     * @return array<string, array<string>>\\n     *\/\\n    public function parseAutoloads(array $packageMap, PackageInterface $rootPackage, $filteredDevPackages = false)\\n    {\\n        $rootPackageMap = array_shift($packageMap);\\n\\n        \/\/ Mirroring existing logic in the Composer AutoloadGenerator.\\n        if (is_array($filteredDevPackages)) {\\n            $packageMap = array_filter($packageMap, function ($item) use ($filteredDevPackages) {\\n                return !in_array($item[0]->getName(), $filteredDevPackages, true);\\n            });\\n        } elseif ($filteredDevPackages) {\\n            $packageMap = $this->filterPackageMap($packageMap, $rootPackage);\\n        }\\n\\n        if ($filteredDevPackages) {\\n            $packageMap = $this->filterPackageMap($packageMap, $rootPackage);\\n        }\\n\\n        $sortedPackageMap = $this->sortPackageMap($packageMap);\\n        $sortedPackageMap[] = $rootPackageMap;\\n        array_unshift($packageMap, $rootPackageMap);\\n\\n        $wordpress = $this->parseAutoloadsType($sortedPackageMap, 'wordpress', $rootPackage);\\n\\n        krsort($wordpress);\\n\\n        return [\\n            'wordpress' => $wordpress,\\n        ];\\n    }\\n\\n    \/**\\n     * Compiles an ordered list of namespace => path mappings of autoloads defined in the 'extra' part of a package.\\n     *\\n     * @param array $packageMap\\n     * @param PackageInterface $rootPackage\\n     * @param boolean $filteredDevPackages\\n     * @return array\\n     *\/\\n    public function parseExtraAutoloads(array $packageMap, PackageInterface $rootPackage, $filteredDevPackages = false)\\n    {\\n        $rootPackageMap = array_shift($packageMap);\\n\\n        \/\/ Mirroring existing logic in the Composer AutoloadGenerator.\\n        if (is_array($filteredDevPackages)) {\\n            $packageMap = array_filter($packageMap, function ($item) use ($filteredDevPackages) {\\n                return !in_array($item[0]->getName(), $filteredDevPackages, true);\\n            });\\n        } elseif ($filteredDevPackages) {\\n            $packageMap = $this->filterPackageMap($packageMap, $rootPackage);\\n        }\\n\\n        if ($filteredDevPackages) {\\n            $packageMap = $this->filterPackageMap($packageMap, $rootPackage);\\n        }\\n\\n        $sortedPackageMap = $this->sortPackageMap($packageMap);\\n        $sortedPackageMap[] = $rootPackageMap;\\n        array_unshift($packageMap, $rootPackageMap);\\n\\n        return [\\n          'wordpress' => $this->parseExtraAutoloadsType($sortedPackageMap, 'wordpress', $rootPackage),\\n        ];\\n    }\\n\\n    \/**\\n     * A modified port of the {@see AutoloadGenerator::parseAutoloadsType()} method from Composer.\\n     *\\n     * Imports autoload rules from a package's extra path.\\n     *\\n     * @param array<int, array{0: PackageInterface, 1: string}> $packageMap\\n     * @param string $type one of: 'wordpress'\\n     * @return array<int, string>|array<string, array<string>>|array<string, string>\\n     *\/\\n    protected function parseExtraAutoloadsType(array $packageMap, $type, RootPackageInterface $rootPackage)\\n    {\\n        $autoloads = [];\\n\\n        foreach ($packageMap as $item) {\\n            [$package, $installPath] = $item;\\n            $autoload = [\\n              'wordpress' => $package->getExtra()['wordpress-autoloader']['autoload'] ?? [],\\n            ];\\n\\n            \/\/ Include autoload dev if we're in dev mode and this is the root package.\\n            \/\/ Non-root package dev dependencies are not loaded.\\n            if ($this->devMode && $package === $rootPackage) {\\n                $autoload = array_merge_recursive(\\n                    $autoload,\\n                    [\\n                        'wordpress' => $package->getExtra()['wordpress-autoloader']['autoload-dev'] ?? [],\\n                    ],\\n                );\\n            }\\n\\n            \/\/ Skip misconfigured packages.\\n            if (!isset($autoload[$type]) || !is_array($autoload[$type])) {\\n                continue;\\n            }\\n\\n            if (null !== $package->getTargetDir() && $package !== $rootPackage) {\\n                $installPath = substr($installPath, 0, -strlen('\/' . $package->getTargetDir()));\\n            }\\n\\n            if ($package !== $rootPackage && $rootPackage->getTargetDir()) {\\n                $installPath = str_replace($rootPackage->getTargetDir(), '', $installPath);\\n            }\\n\\n            foreach ($autoload[$type] as $namespace => $paths) {\\n                foreach ((array) $paths as $path) {\\n                    $relativePath = empty($installPath) ? (empty($path) ? '.' : $path) : $installPath . '\/' . $path;\\n                    $autoloads[$namespace][] = $relativePath;\\n                }\\n            }\\n        }\\n\\n        return $autoloads;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/composer-wordpress-autoloader\/src\/autoload.php\",\"ext\":\"php\",\"size\":1012,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\n\/**\\n * Autoload the wordpress-autoload.php file from the vendor directory.\\n *\\n * Used to automatically load the file when vendor\/autoload.php is loaded.\\n *\/\\n\\n$autoloadFiles = [\\n    \/\/ Attempt to translate the \/vendor\/ in the directory path to the vendor directory.\\n    preg_replace('#\/vendor\/.*$#', '\/vendor\/wordpress-autoload.php', __DIR__),\\n    preg_replace('\/\\\\\\\\\\\\vendor\\\\\\\\\\\\.*$\/', '\/vendor\/wordpress-autoload.php', __DIR__),\\n\\n    \/\/ Assuming this file is located at\\n    \/\/ vendor\/alleyinteractive\/composer-wordpress-autoloader\/src\/autoload.php,\\n    \/\/ hop up a few directories and try to load the file from there.\\n    dirname(__DIR__, 3) . '\/wordpress-autoload.php',\\n\\n    \/\/ Handle local development of the package where vendor directory is closer\\n    \/\/ to the root.\\n    '..\/..\/..\/vendor\/wordpress-autoload.php',\\n    '..\/..\/vendor\/wordpress-autoload.php',\\n];\\n\\nforeach ($autoloadFiles as $path) {\\n    if ($path && !is_dir($path) && file_exists($path)) {\\n        require_once $path;\\n        break;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/composer-wordpress-autoloader\/src\/Plugin.php\",\"ext\":\"php\",\"size\":6145,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace ComposerWordPressAutoloader;\\n\\nuse Composer\\\\Composer;\\nuse Composer\\\\Script\\\\Event;\\nuse Composer\\\\EventDispatcher\\\\EventSubscriberInterface;\\nuse Composer\\\\IO\\\\IOInterface;\\nuse Composer\\\\Plugin\\\\PluginInterface;\\nuse Composer\\\\Util\\\\Filesystem;\\nuse RuntimeException;\\n\\nclass Plugin implements PluginInterface, EventSubscriberInterface\\n{\\n    protected Composer $composer;\\n    protected IOInterface $io;\\n    protected Filesystem $filesystem;\\n    protected AutoloadGenerator $generator;\\n\\n    \/**\\n     * Apply plugin modifications to Composer\\n     *\\n     * @param Composer    $composer\\n     * @param IOInterface $io\\n     *\\n     * @return void\\n     *\/\\n    public function activate(Composer $composer, IOInterface $io)\\n    {\\n        $this->composer = $composer;\\n        $this->io = $io;\\n        $this->filesystem = new Filesystem();\\n    }\\n\\n    \/**\\n     * Remove any hooks from Composer\\n     *\\n     * This will be called when a plugin is deactivated before being\\n     * uninstalled, but also before it gets upgraded to a new version\\n     * so the old one can be deactivated and the new one activated.\\n     *\\n     * @param Composer    $composer\\n     * @param IOInterface $io\\n     *\\n     * @return void\\n     *\/\\n    public function deactivate(Composer $composer, IOInterface $io)\\n    {\\n    }\\n\\n    \/**\\n     * Prepare the plugin to be uninstalled\\n     *\\n     * This will be called after deactivate.\\n     *\\n     * @param Composer    $composer\\n     * @param IOInterface $io\\n     *\\n     * @return void\\n     *\/\\n    public function uninstall(Composer $composer, IOInterface $io)\\n    {\\n        if ($this->filesystem->remove($this->getAutoloaderFilePath())) {\\n            $this->io->write('<info>Removed WordPress autoloader.<\/info>');\\n        }\\n    }\\n\\n    \/**\\n     * Returns an array of event names this subscriber wants to listen to.\\n     *\\n     * @return array<string, string>\\n     *\/\\n    public static function getSubscribedEvents()\\n    {\\n        return [\\n            'post-autoload-dump' => 'generateAutoloaderFile',\\n        ];\\n    }\\n\\n    \/**\\n     * Generate the autoloader file.\\n     *\\n     * @param Event $event\\n     * @return void\\n     *\/\\n    public function generateAutoloaderFile(Event $event): void\\n    {\\n        $this->filesystem->ensureDirectoryExists($this->composer->getConfig()->get('vendor-dir'));\\n\\n        $this->generator = new AutoloadGenerator(\\n            $this->composer,\\n            $this->io,\\n        );\\n\\n        $this->generator->setApcuMode(\\n            $this->composer->getConfig()->get('apcu-autoloader')\\n        );\\n\\n        \/\/ Merge default configuration with the one provided in the composer.json file.\\n        $extra = array_merge(\\n            [\\n                'inject' => false,\\n            ],\\n            $this->composer->getPackage()->getExtra()['wordpress-autoloader'] ?? [],\\n        );\\n\\n        \/**\\n         * Determine if we should inject our autoloader into the\\n         * vendor\/autoload.php from Composer.\\n         *\\n         * Injecting is not generally necessary any more since the file will\\n         * automatically be loaded. However, it is still possible to inject it\\n         * for circumstances where it is needed such as when dealing with symlinks.\\n         *\/\\n        $injecting = $extra['inject'] ?? false;\\n\\n        $autoloaderFile = $this->generator->generate($injecting, $event->isDevMode());\\n\\n        $partyEmoji = [\\n            '\ud83e\udea9',\\n            '\ud83c\udf89',\\n            '\ud83c\udf8a',\\n            '\ud83c\udf7e',\\n        ];\\n\\n        $partyEmoji = $partyEmoji[array_rand($partyEmoji)];\\n\\n        if (\\n            $this->filesystem->filePutContentsIfModified(\\n                $this->getAutoloaderFilePath(),\\n                $autoloaderFile,\\n            )\\n        ) {\\n            if (!$injecting) {\\n                $this->io->write(\\\"<info>{$partyEmoji} WordPress autoloader generated<\/info>\\\");\\n            }\\n        }\\n\\n        \/\/ Inject the autoloader into the existing autoloader.\\n        if ($injecting) {\\n            if (\\n                $this->filesystem->filePutContentsIfModified(\\n                    $this->composer->getConfig()->get('vendor-dir') . '\/autoload.php',\\n                    $this->getInjectedAutoloaderFileContents($this->getAutoloaderFilePath()),\\n                )\\n            ) {\\n                $this->io->write(\\n                    \\\"<info>{$partyEmoji} WordPress autoloader genearted and injected into vendor\/autoload.php.<\/info>\\\"\\n                );\\n            } else {\\n                $this->io->write('<error>\u26a0\ufe0f Error injecting Wordpress Autoloader.<\/error>');\\n            }\\n        }\\n    }\\n\\n    \/**\\n     * Retrieve the file path for the autoloader file.\\n     *\\n     * @return string\\n     *\/\\n    protected function getAutoloaderFilePath(): string\\n    {\\n        $vendorDir = $this->composer->getConfig()->get('vendor-dir');\\n        return \\\"{$vendorDir}\/wordpress-autoload.php\\\";\\n    }\\n\\n    \/**\\n     * Generate the injected autoloader file.\\n     *\\n     * @param string $autoloaderFileName The path to the WordPress autoloader file.\\n     * @return string\\n     *\/\\n    protected function getInjectedAutoloaderFileContents(string $autoloaderFileName): string\\n    {\\n        $filename = basename($autoloaderFileName);\\n        $autoloader = file_get_contents($this->composer->getConfig()->get('vendor-dir') . '\/autoload.php');\\n\\n        $contents = preg_replace_callback(\\n            '\/^return (.*);$\/m',\\n            function ($matches) use ($filename) {\\n                $autoloader = <<<AUTOLOADER\\n\\\\$loader = {$matches[1]};\\n\\n\/*\\n  Composer WordPress Autoloader injected by alleyinteractive\/composer-wordpress-autoloader\\n\\n  To disable, set the \\\"inject\\\" key in the 'extra -> wordpress-autoloader'\\n  section of your composer.json file to false. Injecting the autoloader is\\n  not generally necessary as the autoloader is automatically loaded for you.\\n*\/\\nrequire_once __DIR__ . '\/{$filename}';\\n\\nreturn \\\\$loader;\\nAUTOLOADER;\\n\\n                return \\\"$autoloader\\\\n\\\";\\n            },\\n            $autoloader,\\n            1,\\n            $count,\\n        );\\n\\n        if (!$count) {\\n            throw new RuntimeException('Error finding proper place to inject autoloader.');\\n        }\\n\\n        return $contents;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/composer-wordpress-autoloader\/src\/AutoloadFactory.php\",\"ext\":\"php\",\"size\":1485,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\nnamespace ComposerWordPressAutoloader;\\n\\nuse Alley_Interactive\\\\Autoloader\\\\Autoloader;\\n\\nclass AutoloadFactory\\n{\\n    protected static ?string $apcuPrefix = null;\\n\\n    \/**\\n     * Set the APCu prefix to use.\\n     *\\n     * @param string|null $apcuPrefix|\\n     *\/\\n    public static function setApcuPrefix(?string $apcuPrefix): void\\n    {\\n        static::$apcuPrefix = $apcuPrefix;\\n    }\\n\\n    \/**\\n     * Generate an autoloader from a set of rules.\\n     *\\n     * @param array<string, array<string>> $rules Array of rules.\\n     * @return array<Autoloader>\\n     *\/\\n    public static function generateFromRules(array $rules)\\n    {\\n        $loaders = [];\\n\\n        foreach ($rules as $namespace => $paths) {\\n            $loaders = array_merge(\\n                $loaders,\\n                array_map(function ($path) use ($namespace) {\\n                    $loader = new Autoloader($namespace, $path);\\n\\n                    if (static::$apcuPrefix) {\\n                        $loader->set_apcu_prefix(static::$apcuPrefix);\\n                    }\\n\\n                    return $loader;\\n                }, $paths),\\n            );\\n        }\\n\\n        return $loaders;\\n    }\\n\\n    \/**\\n     * Register autoloaders from rules.\\n     *\\n     * @param array<string, string> $rules Array of rules.\\n     * @return void\\n     *\/\\n    public static function registerFromRules(array $rules)\\n    {\\n        foreach (static::generateFromRules($rules) as $autoloader) {\\n            $autoloader->register();\\n        }\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wordpress-autoloader\/CHANGELOG.md\",\"ext\":\"md\",\"size\":1014,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"# Changelog\\n\\nAll notable changes to `alleyinteractive\/wordpress-autoloader` will be\\ndocumented in this file.\\n\\n## [Unreleased]\\n\\n## 1.2.1\\n\\n- Reverts the file rename from `Autoload.php` to `class-autoload.php` that is causing issues downstream.\\n\\n## 1.2.0\\n\\n- Dropped PHP 8.0 support, added testing for 8.4. New minimum PHP version is 8.1.\\n- Renamed `is_missing_class()` to `isMissingClass()` and `get_apcu_prefix()` to `getApcuPrefix()`.\\n- Deprecated `set_apcu_prefix()` but method still exists for backwards\\n  compatibility. `setApcuPrefix()` is the new method name.\\n\\n## 1.1.1 - 2022-08-31\\n\\n- Ensure file is still loaded with APCu.\\n\\n## 1.1.0 - 2022-08-09\\n\\n- Adding APCu caching of autoloaded classes.\\n- Adds check to prevent multiple failed calls to autoload a class.\\n\\n## 1.0.0 - 2022-05-25\\n\\n## 0.2.0\\n\\n- Supporting PHP 8.1\\n- Removing `preg_replace` with `str_*` functions.\\n\\n## 0.1.2\\n\\n- Small performance improvement.\\n\\n## 0.1.1\\n\\n- Ensure autoloader root path always has a trailing slash.\\n\\n## 0.1.0\\n\\n- Initial release.\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/alleyinteractive\/wordpress-autoloader\/src\/class-autoloader.php\",\"ext\":\"php\",\"size\":5715,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\n\/**\\n * Autoloader file\\n *\\n * @package WordPress_Autoloader\\n *\/\\n\\nnamespace Alley_Interactive\\\\Autoloader;\\n\\n\/**\\n * WordPress Autoload Generator\\n *\/\\nclass Autoloader\\n{\\n    \/**\\n     * Missing classes for the autoloader.\\n     *\\n     * @var array<string, bool>\\n     *\/\\n    protected array $missing_classes = [];\\n\\n    \/**\\n     * APCu cache key prefix.\\n     *\\n     * @var ?string\\n     *\/\\n    protected ?string $apcu_prefix;\\n\\n    \/**\\n     * Generate an autoloader for the WordPress file naming conventions.\\n     *\\n     * @param string $namespace Namespace to autoload.\\n     * @param string $root_path Root path of the namespace to load from.\\n     * @return static Function for spl_autoload_register().\\n     *\/\\n    public static function generate(string $namespace, string $root_path): callable\\n    {\\n        return new static($namespace, $root_path);\\n    }\\n\\n    \/**\\n     * Constructor.\\n     *\\n     * @param string $namespace Namespace to register.\\n     * @param string $root_path Root path of the namespace.\\n     *\/\\n    public function __construct(protected string $namespace, protected string $root_path)\\n    {\\n        \/\/ Ensure consistent root.\\n        $this->root_path = rtrim($root_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR;\\n    }\\n\\n    \/**\\n     * APCu prefix to use to cache found\/not-found classes, if the extension is enabled.\\n     *\\n     * @deprecated 1.2.0 Renamed to setApcuPrefix().\\n     *\\n     * @param string|null $prefix Prefix to use.\\n     * @return static\\n     *\/\\n    public function set_apcu_prefix(?string $prefix)\\n    {\\n        return $this->setApcuPrefix($prefix);\\n    }\\n\\n    \/**\\n     * APCu prefix to use to cache found\/not-found classes, if the extension is enabled.\\n     *\\n     * @param string|null $prefix Prefix to use.\\n     * @return static\\n     *\/\\n    public function setApcuPrefix(?string $prefix)\\n    {\\n        $this->apcu_prefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN)\\n            ? $prefix\\n            : null;\\n\\n        return $this;\\n    }\\n\\n    \/**\\n     * The APCu prefix in use, or null if APCu caching is not enabled.\\n     *\\n     * @return string|null\\n     *\/\\n    public function getApcuPrefix(): ?string\\n    {\\n        return $this->apcu_prefix;\\n    }\\n\\n    \/**\\n     * Check if a class was missing from the autoloader.\\n     *\\n     * @param string $classname Class to check.\\n     * @return bool\\n     *\/\\n    public function isMissingClass(string $classname): bool\\n    {\\n        return isset($this->missing_classes[ $classname ]);\\n    }\\n\\n    \/**\\n     * Register the autoloader.\\n     *\/\\n    public function register()\\n    {\\n        spl_autoload_register($this);\\n    }\\n\\n    \/**\\n     * Unregister the autoloader.\\n     *\/\\n    public function unregister()\\n    {\\n        spl_autoload_unregister($this);\\n    }\\n\\n    \/**\\n     * Invoke method of the class.\\n     *\\n     * @param string $classname Class being autoloaded.\\n     *\/\\n    public function __invoke(string $classname)\\n    {\\n        \/\/ Ignore if the base namespace doesn't match.\\n        if (0 !== \\\\strpos($classname, $this->namespace)) {\\n            return;\\n        }\\n\\n        \/\/ Check if the class was previously not found.\\n        if (isset($this->missing_classes[ $classname ])) {\\n            return;\\n        }\\n\\n        \/\/ Check if the class was previously found with APCu caching.\\n        if (isset($this->apcu_prefix)) {\\n            $hit  = false;\\n            $file = apcu_fetch($this->apcu_prefix . $classname, $hit);\\n\\n            if ($hit) {\\n                require_once $file; \/\/ phpcs:ignore WordPressVIPMinimum.Files.IncludingFile.UsingVariable\\n                return $file;\\n            }\\n        }\\n\\n        $file = $this->findFile($classname);\\n\\n        if ($file) {\\n            require_once $file; \/\/ phpcs:ignore WordPressVIPMinimum.Files.IncludingFile.UsingVariable\\n\\n            \/\/ Cache the found file with APCu if enabled.\\n            if (isset($this->apcu_prefix)) {\\n                apcu_add($this->apcu_prefix . $classname, $file);\\n            }\\n        } else {\\n            \/\/ Mark the class as not found to save future lookups.\\n            $this->missing_classes[ $classname ] = true;\\n        }\\n    }\\n\\n    \/**\\n     * Find a file for the given class.\\n     *\\n     * @param string $classname Class to find.\\n     * @return string|null\\n     *\/\\n    protected function findFile(string $classname): ?string\\n    {\\n        \/\/ Break up the classname into parts.\\n        $parts = \\\\explode('\\\\\\\\', $classname);\\n\\n        \/\/ Retrieve the class name (last item) and convert it to a filename.\\n        $class = \\\\strtolower(\\\\str_replace('_', '-', \\\\array_pop($parts)));\\n\\n        $base_path = '';\\n\\n        \/\/ Build the base path relative to the sub-namespace.\\n        $sub_namespace = \\\\substr(\\\\implode(DIRECTORY_SEPARATOR, $parts), \\\\strlen($this->namespace));\\n\\n        if (! empty($sub_namespace)) {\\n            $base_path = \\\\str_replace('_', '-', \\\\strtolower($sub_namespace));\\n        }\\n\\n        \/\/ Support multiple locations since the class could be a class, trait or interface.\\n        $paths = [\\n            \\\"class-{$class}.php\\\",\\n            \\\"trait-{$class}.php\\\",\\n            \\\"interface-{$class}.php\\\",\\n            \\\"enum-{$class}.php\\\",\\n        ];\\n\\n        \/*\\n        * Attempt to find the file by looping through the various paths.\\n        *\\n        * Autoloading a class will also cause a trait or interface with the\\n        * same fully qualified name to be autoloaded, as it's impossible to\\n        * tell which was requested.\\n        *\/\\n        foreach ($paths as $path) {\\n            $path = $this->root_path . $base_path . DIRECTORY_SEPARATOR . $path;\\n\\n            if (\\\\file_exists($path)) {\\n                return $path;\\n            }\\n        }\\n\\n        return null;\\n    }\\n}\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/CHANGELOG.md\",\"ext\":\"md\",\"size\":6076,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"# Changelog\\n\\n### 2.0.3 (2024-11-21)\\n\\n- use modern phpdocs e.g. list<int> or conditional-return annotations \\n\\n### 2.0.2 (2024-11-21)\\n\\n- small fix for PHP 8.4 (thanks to @gilbertoalbino)\\n\\n### 2.0.1 (2022-03-08)\\n\\n- \\\"To people of Russia\\\": There is a war in Ukraine right now. The forces of the Russian Federation are attacking civilians.\\n- optimize some phpdocs\\n\\n### 2.0.0 (2022-01-24)\\n\\n- prefer \\\"Russian - Passport (2013), ICAO\\\" instead of \\\"Russian - GOST 7.79-2000(B)\\\"\\n- fix \\\"Ukrainian\\\" char-mapping (thanks to @Andr1yk0)\\n- fix \\\"Persian\\\" char-mapping (thanks to @frost-cyber)\\n\\n### 1.6.1 (2022-01-24)\\n\\n- revert: prefer \\\"Russian - Passport (2013), ICAO\\\" instead of \\\"Russian - GOST 7.79-2000(B)\\\"\\n- revert: fix \\\"Ukrainian\\\" char-mapping (thanks to @Andr1yk0)\\n- revert: fix \\\"Persian\\\" char-mapping (thanks to @frost-cyber)\\n\\n### 1.6.0 (2022-01-24)\\n\\n- prefer \\\"Russian - Passport (2013), ICAO\\\" instead of \\\"Russian - GOST 7.79-2000(B)\\\"\\n- fix \\\"Ukrainian\\\" char-mapping (thanks to @Andr1yk0) \\n- fix \\\"Persian\\\" char-mapping (thanks to @frost-cyber) \\n- fix \\\"ASCII::normalize_whitespace()\\\" -> \\\"CARRIAGE RETURN\\\" is more like \\\"<br>\\\" and no \\\"\\\\n\\\"\\n- add \\\"ASCII::to_ascii_remap()\\\" -> this method will return broken characters and is only for special cases\\n\\n### 1.5.6 (2020-11-12)\\n    \\n- \\\"ASCII::normalize_whitespace()\\\" -> can now also remove \\\"control characters\\\" if needed v2\\n\\n### 1.5.5 (2020-11-12)\\n\\n- fix \\\"Greeklish\\\" char-mapping (thanks @sebdesign)\\n- \\\"ASCII::normalize_whitespace()\\\" -> can now also remove \\\"control characters\\\" if needed\\n\\n### 1.5.4 (2020-11-08)\\n\\n- add some missing replacements in U+23xx page (thanks @marcoffee)\\n- fix \\\"Russian\\\" char-mapping (thanks @ilyahoilik)\\n- running test with PHP 8.0 rc3\\n\\n### 1.5.3 (2020-07-23)\\n\\n- fix \\\"Georgian\\\" char-mapping (thanks @waska14)\\n\\n### 1.5.2 (2020-06-16)\\n\\n- add \\\"Bengali\\\" (bn) language support (thanks @eliyas5044)\\n- fix \\\"Portuguese\\\" char-mapping\\n- reduce the file size (removed extra comments from \\\"avian2\/unidecode\\\")\\n\\n### 1.5.1 (2020-05-26)\\n\\n- fix merge ASCII transliterations from \\\"avian2\/unidecode\\\" (python)\\n  -> https:\/\/github.com\/avian2\/unidecode\/\\n  \\n### 1.5.0 (2020-05-24)\\n\\n- merge ASCII transliterations from \\\"avian2\/unidecode\\\" (python)\\n  -> https:\/\/github.com\/avian2\/unidecode\/\\n\\n### 1.4.11 (2020-05-23)\\n\\n- \\\"composer.json\\\" -> remove \\\"autoload-dev\\\" stuff from \\\"autoload\\\"\\n- \\\"voku\/php-readme-helper\\\" -> auto-generate the API documentation in the README\\n\\n### 1.4.10 (2020-03-13)\\n\\n- ASCII::to_ascii() -> fix extra symbol handling in the regex\\n- ASCII::to_ascii() -> fix for languages with multi-length-special-char (e.g. Greek -> '\u03b5\u03b9' => 'i')\\n\\n### 1.4.9 (2020-03-06)\\n\\n- ASCII::to_slugify() -> fix php warning from empty \\\"separator\\\"\\n\\n### 1.4.8 (2020-02-06)\\n\\n- small optimization for \\\"ASCII::to_ascii()\\\" performance\\n\\n### 1.4.7 (2020-01-27)\\n\\n- fix possible wrong type from \\\"getDataIfExists()\\\" -> e.g. a bug reported where \\\"\/data\/\\\" was modified\\n- inline variables\\n- do not use \\\"=== true\\\" for \\\"bool\\\"-types\\n\\n### 1.4.6 (2019-12-23)\\n\\n- optimize \\\"ASCII::to_ascii()\\\" performance\\n- add \\\"armenian\\\" chars\\n- add \\\"ASCII:getAllLanguages()\\\"\\n\\n### 1.4.5 (2019-12-19)\\n\\n- use \\\"@psalm-pure\\\" v2\\n\\n### 1.4.4 (2019-12-19)\\n\\n- use \\\"@psalm-pure\\\"\\n\\n### 1.4.3 (2019-12-19)\\n\\n- use \\\"@psalm-immutable\\\"\\n\\n### 1.4.2 (2019-12-13)\\n\\n- optimize the performance v2\\n- more fixes for non-ascii regex\\n\\n### 1.4.1 (2019-12-13)\\n\\n- fix regex for non-ascii\\n\\n### 1.4.0 (2019-12-13)\\n\\n- optimize the performance, via single char replacements\\n\\n### 1.3.6 (2019-12-13)\\n\\n- \\\"ascii_extras\\\" -> convert the static content into ascii \\n   -> e.g.: instead of replacing \\\"+\\\" with \\\"pi\u00f9\\\" we use \\\"piu\\\" (Italian), because we want to use ascii anyway\\n\\n### 1.3.5 (2019-11-11)\\n\\n- fix \\\"ASCII::remove_invisible_characters()\\\" -> do not remove invisible encoded url strings by default\\n\\n### 1.3.4 (2019-10-14)\\n\\n- fix static cache for \\\"ASCII::charsArrayWithOneLanguage\\\"\\n\\n### 1.3.3 (2019-10-14)\\n\\n- fix \\\"Turkish\\\" mapping -> '\u00e4' -> 'a'\\n\\n### 1.3.2 (2019-10-14)\\n\\n- fix language parameter usage with e.g. \\\"de_DE\\\"\\n- re-add missing \\\"extra\\\"-mapping chars\\n\\n### 1.3.1 (2019-10-13)\\n\\n- fix \\\"ASCII::to_slugify\\\" -> remove unicode chars\\n- add more test for ascii chars in the mapping\\n- fix non ascii chars in the mapping\\n\\n### 1.3.0 (2019-10-12)\\n\\n- add transliteration \\\"fr\\\" (was supported before, but with chars from other languages)\\n- add transliteration \\\"ru\\\" - Passport (2013), ICAO\\n- add transliteration \\\"ru\\\" - GOST 7.79-2000(B)\\n- add transliteration \\\"el\\\" - greeklish\\n- add transliteration \\\"zh\\\"\\n- add transliteration \\\"nl\\\"\\n- add transliteration \\\"it\\\"\\n- add transliteration \\\"mk\\\"\\n- add transliteration \\\"pt\\\"\\n- add constants -> ASCII::*LANGUAGE_CODES\\n- add more special latin chars \/ (currency) symbols\\n- add simple tests for all supported languages\\n- optimize \\\"Russian\\\" to ASCII (via \\\"translit.ru\\\")\\n- optimize performance of string replacement\\n- optimize performance of array merging\\n- optimize phpdoc comments\\n- \\\"ASCII::to_transliterate\\\" -> use \\\"transliterator_create\\\" + static cache\\n- \\\"ASCII::to_ascii\\\" -> fix \\\"remove unsupported chars\\\"\\n- \\\"ASCII::to_ascii\\\" -> add some more special chars\\n- run\/fix static analyse via \\\"pslam\\\" + \\\"phpstan\\\" \\n- auto fix code style via \\\"php-cs-fixer\\\"\\n- fix transliteration for \\\"german\\\"\\n- fix transliteration for \\\"persian\\\" (thanks @mardep)\\n- fix transliteration for \\\"polish\\\" (thanks @dariusz.drobisz)\\n- fix transliteration for \\\"bulgarian\\\" (thanks @mkosturkov)\\n- fix transliteration for \\\"croatian\\\" (thanks @ludifonovac)\\n- fix transliteration for \\\"serbian\\\" (thanks @ludifonovac)\\n- fix transliteration for \\\"swedish\\\" (thanks @nicholasruunu)\\n- fix transliteration for \\\"france\\\" (thanks @sharptsa)\\n- fix transliteration for \\\"serbian\\\" (thanks @nikolaposa)\\n- fix transliteration for \\\"czech\\\" (thanks @slepic)\\n\\n### 1.2.3 (2019-09-10)\\n\\n- fix language depending ASCII chars (the order matters)\\n\\n### 1.2.2 (2019-09-10)\\n\\n- fix bulgarian ASCII chars | thanks @bgphp\\n\\n### 1.2.1 (2019-09-07)\\n\\n- \\\"charsArray()\\\" -> add access to \\\"ASCII::$ASCII_MAPS*\\\"\\\"\\n\\n### 1.2.0 (2019-09-07)\\n\\n- \\\"to_slugify()\\\" -> use the extra ascii array\\n\\n### 1.1.0 (2019-09-07)\\n\\n- add + split extra ascii replacements\\n\\n### 1.0.0 (2019-09-05)\\n\\n- initial commit\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x067.php\",\"ext\":\"php\",\"size\":2079,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Zui ', 'Can ', 'Xu ', 'Hui ', 'Yin ', 'Qie ', 'Fen ', 'Pi ', 'Yue ', 'You ', 'Ruan ', 'Peng ', 'Ban ', 'Fu ', 'Ling ', 'Fei ', 'Qu ', '[?] ', 'Nu ', 'Tiao ', 'Shuo ', 'Zhen ', 'Lang ', 'Lang ', 'Juan ', 'Ming ', 'Huang ', 'Wang ', 'Tun ', 'Zhao ', 'Ji ', 'Qi ', 'Ying ', 'Zong ', 'Wang ', 'Tong ', 'Lang ', '[?] ', 'Meng ', 'Long ', 'Mu ', 'Deng ', 'Wei ', 'Mo ', 'Ben ', 'Zha ', 'Zhu ', 'Zhu ', '[?] ', 'Zhu ', 'Ren ', 'Ba ', 'Po ', 'Duo ', 'Duo ', 'Dao ', 'Li ', 'Qiu ', 'Ji ', 'Jiu ', 'Bi ', 'Xiu ', 'Ting ', 'Ci ', 'Sha ', 'Eburi ', 'Za ', 'Quan ', 'Qian ', 'Yu ', 'Gan ', 'Wu ', 'Cha ', 'Shan ', 'Xun ', 'Fan ', 'Wu ', 'Zi ', 'Li ', 'Xing ', 'Cai ', 'Cun ', 'Ren ', 'Shao ', 'Tuo ', 'Di ', 'Zhang ', 'Mang ', 'Chi ', 'Yi ', 'Gu ', 'Gong ', 'Du ', 'Yi ', 'Qi ', 'Shu ', 'Gang ', 'Tiao ', 'Moku ', 'Soma ', 'Tochi ', 'Lai ', 'Sugi ', 'Mang ', 'Yang ', 'Ma ', 'Miao ', 'Si ', 'Yuan ', 'Hang ', 'Fei ', 'Bei ', 'Jie ', 'Dong ', 'Gao ', 'Yao ', 'Xian ', 'Chu ', 'Qun ', 'Pa ', 'Shu ', 'Hua ', 'Xin ', 'Chou ', 'Zhu ', 'Chou ', 'Song ', 'Ban ', 'Song ', 'Ji ', 'Yue ', 'Jin ', 'Gou ', 'Ji ', 'Mao ', 'Pi ', 'Bi ', 'Wang ', 'Ang ', 'Fang ', 'Fen ', 'Yi ', 'Fu ', 'Nan ', 'Xi ', 'Hu ', 'Ya ', 'Dou ', 'Xun ', 'Zhen ', 'Yao ', 'Lin ', 'Rui ', 'E ', 'Mei ', 'Zhao ', 'Guo ', 'Zhi ', 'Cong ', 'Yun ', 'Waku ', 'Dou ', 'Shu ', 'Zao ', '[?] ', 'Li ', 'Haze ', 'Jian ', 'Cheng ', 'Matsu ', 'Qiang ', 'Feng ', 'Nan ', 'Xiao ', 'Xian ', 'Ku ', 'Ping ', 'Yi ', 'Xi ', 'Zhi ', 'Guai ', 'Xiao ', 'Jia ', 'Jia ', 'Gou ', 'Fu ', 'Mo ', 'Yi ', 'Ye ', 'Ye ', 'Shi ', 'Nie ', 'Bi ', 'Duo ', 'Yi ', 'Ling ', 'Bing ', 'Ni ', 'La ', 'He ', 'Pan ', 'Fan ', 'Zhong ', 'Dai ', 'Ci ', 'Yang ', 'Fu ', 'Bo ', 'Mou ', 'Gan ', 'Qi ', 'Ran ', 'Rou ', 'Mao ', 'Zhao ', 'Song ', 'Zhe ', 'Xia ', 'You ', 'Shen ', 'Ju ', 'Tuo ', 'Zuo ', 'Nan ', 'Ning ', 'Yong ', 'Di ', 'Zhi ', 'Zha ', 'Cha ', 'Dan ', 'Gu ', 'Pu ', 'Jiu ', 'Ao ', 'Fu ', 'Jian ', 'Bo ', 'Duo ', 'Ke ', 'Nai ', 'Zhu ', 'Bi ', 'Liu ', 'Chai ', 'Zha ', 'Si ', 'Zhu ', 'Pei ', 'Shi ', 'Guai ', 'Cha ', 'Yao ', 'Jue ', 'Jiu ', 'Shi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b2.php\",\"ext\":\"php\",\"size\":2124,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['nyok', 'nyot', 'nyop', 'nyoh', 'nu', 'nug', 'nugg', 'nugs', 'nun', 'nunj', 'nunh', 'nud', 'nul', 'nulg', 'nulm', 'nulb', 'nuls', 'nult', 'nulp', 'nulh', 'num', 'nub', 'nubs', 'nus', 'nuss', 'nung', 'nuj', 'nuc', 'nuk', 'nut', 'nup', 'nuh', 'nweo', 'nweog', 'nweogg', 'nweogs', 'nweon', 'nweonj', 'nweonh', 'nweod', 'nweol', 'nweolg', 'nweolm', 'nweolb', 'nweols', 'nweolt', 'nweolp', 'nweolh', 'nweom', 'nweob', 'nweobs', 'nweos', 'nweoss', 'nweong', 'nweoj', 'nweoc', 'nweok', 'nweot', 'nweop', 'nweoh', 'nwe', 'nweg', 'nwegg', 'nwegs', 'nwen', 'nwenj', 'nwenh', 'nwed', 'nwel', 'nwelg', 'nwelm', 'nwelb', 'nwels', 'nwelt', 'nwelp', 'nwelh', 'nwem', 'nweb', 'nwebs', 'nwes', 'nwess', 'nweng', 'nwej', 'nwec', 'nwek', 'nwet', 'nwep', 'nweh', 'nwi', 'nwig', 'nwigg', 'nwigs', 'nwin', 'nwinj', 'nwinh', 'nwid', 'nwil', 'nwilg', 'nwilm', 'nwilb', 'nwils', 'nwilt', 'nwilp', 'nwilh', 'nwim', 'nwib', 'nwibs', 'nwis', 'nwiss', 'nwing', 'nwij', 'nwic', 'nwik', 'nwit', 'nwip', 'nwih', 'nyu', 'nyug', 'nyugg', 'nyugs', 'nyun', 'nyunj', 'nyunh', 'nyud', 'nyul', 'nyulg', 'nyulm', 'nyulb', 'nyuls', 'nyult', 'nyulp', 'nyulh', 'nyum', 'nyub', 'nyubs', 'nyus', 'nyuss', 'nyung', 'nyuj', 'nyuc', 'nyuk', 'nyut', 'nyup', 'nyuh', 'neu', 'neug', 'neugg', 'neugs', 'neun', 'neunj', 'neunh', 'neud', 'neul', 'neulg', 'neulm', 'neulb', 'neuls', 'neult', 'neulp', 'neulh', 'neum', 'neub', 'neubs', 'neus', 'neuss', 'neung', 'neuj', 'neuc', 'neuk', 'neut', 'neup', 'neuh', 'nyi', 'nyig', 'nyigg', 'nyigs', 'nyin', 'nyinj', 'nyinh', 'nyid', 'nyil', 'nyilg', 'nyilm', 'nyilb', 'nyils', 'nyilt', 'nyilp', 'nyilh', 'nyim', 'nyib', 'nyibs', 'nyis', 'nyiss', 'nying', 'nyij', 'nyic', 'nyik', 'nyit', 'nyip', 'nyih', 'ni', 'nig', 'nigg', 'nigs', 'nin', 'ninj', 'ninh', 'nid', 'nil', 'nilg', 'nilm', 'nilb', 'nils', 'nilt', 'nilp', 'nilh', 'nim', 'nib', 'nibs', 'nis', 'niss', 'ning', 'nij', 'nic', 'nik', 'nit', 'nip', 'nih', 'da', 'dag', 'dagg', 'dags', 'dan', 'danj', 'danh', 'dad', 'dal', 'dalg', 'dalm', 'dalb', 'dals', 'dalt', 'dalp', 'dalh', 'dam', 'dab', 'dabs', 'das', 'dass', 'dang', 'daj', 'dac', 'dak', 'dat', 'dap', 'dah'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x093.php\",\"ext\":\"php\",\"size\":2110,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Lun ', 'Kua ', 'Ling ', 'Bei ', 'Lu ', 'Li ', 'Qiang ', 'Pou ', 'Juan ', 'Min ', 'Zui ', 'Peng ', 'An ', 'Pi ', 'Xian ', 'Ya ', 'Zhui ', 'Lei ', 'A ', 'Kong ', 'Ta ', 'Kun ', 'Du ', 'Wei ', 'Chui ', 'Zi ', 'Zheng ', 'Ben ', 'Nie ', 'Cong ', 'Qun ', 'Tan ', 'Ding ', 'Qi ', 'Qian ', 'Zhuo ', 'Qi ', 'Yu ', 'Jin ', 'Guan ', 'Mao ', 'Chang ', 'Tian ', 'Xi ', 'Lian ', 'Tao ', 'Gu ', 'Cuo ', 'Shu ', 'Zhen ', 'Lu ', 'Meng ', 'Lu ', 'Hua ', 'Biao ', 'Ga ', 'Lai ', 'Ken ', 'Kazari ', 'Bu ', 'Nai ', 'Wan ', 'Zan ', '[?] ', 'De ', 'Xian ', '[?] ', 'Huo ', 'Liang ', '[?] ', 'Men ', 'Kai ', 'Ying ', 'Di ', 'Lian ', 'Guo ', 'Xian ', 'Du ', 'Tu ', 'Wei ', 'Cong ', 'Fu ', 'Rou ', 'Ji ', 'E ', 'Rou ', 'Chen ', 'Ti ', 'Zha ', 'Hong ', 'Yang ', 'Duan ', 'Xia ', 'Yu ', 'Keng ', 'Xing ', 'Huang ', 'Wei ', 'Fu ', 'Zhao ', 'Cha ', 'Qie ', 'She ', 'Hong ', 'Kui ', 'Tian ', 'Mou ', 'Qiao ', 'Qiao ', 'Hou ', 'Tou ', 'Cong ', 'Huan ', 'Ye ', 'Min ', 'Jian ', 'Duan ', 'Jian ', 'Song ', 'Kui ', 'Hu ', 'Xuan ', 'Duo ', 'Jie ', 'Zhen ', 'Bian ', 'Zhong ', 'Zi ', 'Xiu ', 'Ye ', 'Mei ', 'Pai ', 'Ai ', 'Jie ', '[?] ', 'Mei ', 'Chuo ', 'Ta ', 'Bang ', 'Xia ', 'Lian ', 'Suo ', 'Xi ', 'Liu ', 'Zu ', 'Ye ', 'Nou ', 'Weng ', 'Rong ', 'Tang ', 'Suo ', 'Qiang ', 'Ge ', 'Shuo ', 'Chui ', 'Bo ', 'Pan ', 'Sa ', 'Bi ', 'Sang ', 'Gang ', 'Zi ', 'Wu ', 'Ying ', 'Huang ', 'Tiao ', 'Liu ', 'Kai ', 'Sun ', 'Sha ', 'Sou ', 'Wan ', 'Hao ', 'Zhen ', 'Zhen ', 'Luo ', 'Yi ', 'Yuan ', 'Tang ', 'Nie ', 'Xi ', 'Jia ', 'Ge ', 'Ma ', 'Juan ', 'Kasugai ', 'Habaki ', 'Suo ', '[?] ', '[?] ', '[?] ', 'Na ', 'Lu ', 'Suo ', 'Ou ', 'Zu ', 'Tuan ', 'Xiu ', 'Guan ', 'Xuan ', 'Lian ', 'Shou ', 'Ao ', 'Man ', 'Mo ', 'Luo ', 'Bi ', 'Wei ', 'Liu ', 'Di ', 'Qiao ', 'Cong ', 'Yi ', 'Lu ', 'Ao ', 'Keng ', 'Qiang ', 'Cui ', 'Qi ', 'Chang ', 'Tang ', 'Man ', 'Yong ', 'Chan ', 'Feng ', 'Jing ', 'Biao ', 'Shu ', 'Lou ', 'Xiu ', 'Cong ', 'Long ', 'Zan ', 'Jian ', 'Cao ', 'Li ', 'Xia ', 'Xi ', 'Kang ', '[?] ', 'Beng ', '[?] ', '[?] ', 'Zheng ', 'Lu ', 'Hua ', 'Ji ', 'Pu ', 'Hui ', 'Qiang ', 'Po ', 'Lin ', 'Suo ', 'Xiu ', 'San ', 'Cheng '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x073.php\",\"ext\":\"php\",\"size\":2090,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Sha ', 'Li ', 'Han ', 'Xian ', 'Jing ', 'Pai ', 'Fei ', 'Yao ', 'Ba ', 'Qi ', 'Ni ', 'Biao ', 'Yin ', 'Lai ', 'Xi ', 'Jian ', 'Qiang ', 'Kun ', 'Yan ', 'Guo ', 'Zong ', 'Mi ', 'Chang ', 'Yi ', 'Zhi ', 'Zheng ', 'Ya ', 'Meng ', 'Cai ', 'Cu ', 'She ', 'Kari ', 'Cen ', 'Luo ', 'Hu ', 'Zong ', 'Ji ', 'Wei ', 'Feng ', 'Wo ', 'Yuan ', 'Xing ', 'Zhu ', 'Mao ', 'Wei ', 'Yuan ', 'Xian ', 'Tuan ', 'Ya ', 'Nao ', 'Xie ', 'Jia ', 'Hou ', 'Bian ', 'You ', 'You ', 'Mei ', 'Zha ', 'Yao ', 'Sun ', 'Bo ', 'Ming ', 'Hua ', 'Yuan ', 'Sou ', 'Ma ', 'Yuan ', 'Dai ', 'Yu ', 'Shi ', 'Hao ', '[?] ', 'Yi ', 'Zhen ', 'Chuang ', 'Hao ', 'Man ', 'Jing ', 'Jiang ', 'Mu ', 'Zhang ', 'Chan ', 'Ao ', 'Ao ', 'Hao ', 'Cui ', 'Fen ', 'Jue ', 'Bi ', 'Bi ', 'Huang ', 'Pu ', 'Lin ', 'Yu ', 'Tong ', 'Yao ', 'Liao ', 'Shuo ', 'Xiao ', 'Swu ', 'Ton ', 'Xi ', 'Ge ', 'Juan ', 'Du ', 'Hui ', 'Kuai ', 'Xian ', 'Xie ', 'Ta ', 'Xian ', 'Xun ', 'Ning ', 'Pin ', 'Huo ', 'Nou ', 'Meng ', 'Lie ', 'Nao ', 'Guang ', 'Shou ', 'Lu ', 'Ta ', 'Xian ', 'Mi ', 'Rang ', 'Huan ', 'Nao ', 'Luo ', 'Xian ', 'Qi ', 'Jue ', 'Xuan ', 'Miao ', 'Zi ', 'Lu ', 'Lu ', 'Yu ', 'Su ', 'Wang ', 'Qiu ', 'Ga ', 'Ding ', 'Le ', 'Ba ', 'Ji ', 'Hong ', 'Di ', 'Quan ', 'Gan ', 'Jiu ', 'Yu ', 'Ji ', 'Yu ', 'Yang ', 'Ma ', 'Gong ', 'Wu ', 'Fu ', 'Wen ', 'Jie ', 'Ya ', 'Fen ', 'Bian ', 'Beng ', 'Yue ', 'Jue ', 'Yun ', 'Jue ', 'Wan ', 'Jian ', 'Mei ', 'Dan ', 'Pi ', 'Wei ', 'Huan ', 'Xian ', 'Qiang ', 'Ling ', 'Dai ', 'Yi ', 'An ', 'Ping ', 'Dian ', 'Fu ', 'Xuan ', 'Xi ', 'Bo ', 'Ci ', 'Gou ', 'Jia ', 'Shao ', 'Po ', 'Ci ', 'Ke ', 'Ran ', 'Sheng ', 'Shen ', 'Yi ', 'Zu ', 'Jia ', 'Min ', 'Shan ', 'Liu ', 'Bi ', 'Zhen ', 'Zhen ', 'Jue ', 'Fa ', 'Long ', 'Jin ', 'Jiao ', 'Jian ', 'Li ', 'Guang ', 'Xian ', 'Zhou ', 'Gong ', 'Yan ', 'Xiu ', 'Yang ', 'Xu ', 'Luo ', 'Su ', 'Zhu ', 'Qin ', 'Ken ', 'Xun ', 'Bao ', 'Er ', 'Xiang ', 'Yao ', 'Xia ', 'Heng ', 'Gui ', 'Chong ', 'Xu ', 'Ban ', 'Pei ', '[?] ', 'Dang ', 'Ei ', 'Hun ', 'Wen ', 'E ', 'Cheng ', 'Ti ', 'Wu ', 'Wu ', 'Cheng ', 'Jun ', 'Mei ', 'Bei ', 'Ting ', 'Xian ', 'Chuo '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0ba.php\",\"ext\":\"php\",\"size\":2209,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['mya', 'myag', 'myagg', 'myags', 'myan', 'myanj', 'myanh', 'myad', 'myal', 'myalg', 'myalm', 'myalb', 'myals', 'myalt', 'myalp', 'myalh', 'myam', 'myab', 'myabs', 'myas', 'myass', 'myang', 'myaj', 'myac', 'myak', 'myat', 'myap', 'myah', 'myae', 'myaeg', 'myaegg', 'myaegs', 'myaen', 'myaenj', 'myaenh', 'myaed', 'myael', 'myaelg', 'myaelm', 'myaelb', 'myaels', 'myaelt', 'myaelp', 'myaelh', 'myaem', 'myaeb', 'myaebs', 'myaes', 'myaess', 'myaeng', 'myaej', 'myaec', 'myaek', 'myaet', 'myaep', 'myaeh', 'meo', 'meog', 'meogg', 'meogs', 'meon', 'meonj', 'meonh', 'meod', 'meol', 'meolg', 'meolm', 'meolb', 'meols', 'meolt', 'meolp', 'meolh', 'meom', 'meob', 'meobs', 'meos', 'meoss', 'meong', 'meoj', 'meoc', 'meok', 'meot', 'meop', 'meoh', 'me', 'meg', 'megg', 'megs', 'men', 'menj', 'menh', 'med', 'mel', 'melg', 'melm', 'melb', 'mels', 'melt', 'melp', 'melh', 'mem', 'meb', 'mebs', 'mes', 'mess', 'meng', 'mej', 'mec', 'mek', 'met', 'mep', 'meh', 'myeo', 'myeog', 'myeogg', 'myeogs', 'myeon', 'myeonj', 'myeonh', 'myeod', 'myeol', 'myeolg', 'myeolm', 'myeolb', 'myeols', 'myeolt', 'myeolp', 'myeolh', 'myeom', 'myeob', 'myeobs', 'myeos', 'myeoss', 'myeong', 'myeoj', 'myeoc', 'myeok', 'myeot', 'myeop', 'myeoh', 'mye', 'myeg', 'myegg', 'myegs', 'myen', 'myenj', 'myenh', 'myed', 'myel', 'myelg', 'myelm', 'myelb', 'myels', 'myelt', 'myelp', 'myelh', 'myem', 'myeb', 'myebs', 'myes', 'myess', 'myeng', 'myej', 'myec', 'myek', 'myet', 'myep', 'myeh', 'mo', 'mog', 'mogg', 'mogs', 'mon', 'monj', 'monh', 'mod', 'mol', 'molg', 'molm', 'molb', 'mols', 'molt', 'molp', 'molh', 'mom', 'mob', 'mobs', 'mos', 'moss', 'mong', 'moj', 'moc', 'mok', 'mot', 'mop', 'moh', 'mwa', 'mwag', 'mwagg', 'mwags', 'mwan', 'mwanj', 'mwanh', 'mwad', 'mwal', 'mwalg', 'mwalm', 'mwalb', 'mwals', 'mwalt', 'mwalp', 'mwalh', 'mwam', 'mwab', 'mwabs', 'mwas', 'mwass', 'mwang', 'mwaj', 'mwac', 'mwak', 'mwat', 'mwap', 'mwah', 'mwae', 'mwaeg', 'mwaegg', 'mwaegs', 'mwaen', 'mwaenj', 'mwaenh', 'mwaed', 'mwael', 'mwaelg', 'mwaelm', 'mwaelb', 'mwaels', 'mwaelt', 'mwaelp', 'mwaelh', 'mwaem', 'mwaeb', 'mwaebs', 'mwaes', 'mwaess', 'mwaeng', 'mwaej', 'mwaec', 'mwaek', 'mwaet', 'mwaep', 'mwaeh', 'moe', 'moeg', 'moegg', 'moegs'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x08d.php\",\"ext\":\"php\",\"size\":2080,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Wei ', 'Bai ', 'Chen ', 'Zhuan ', 'Zhi ', 'Zhui ', 'Biao ', 'Yun ', 'Zeng ', 'Tan ', 'Zan ', 'Yan ', '[?] ', 'Shan ', 'Wan ', 'Ying ', 'Jin ', 'Gan ', 'Xian ', 'Zang ', 'Bi ', 'Du ', 'Shu ', 'Yan ', '[?] ', 'Xuan ', 'Long ', 'Gan ', 'Zang ', 'Bei ', 'Zhen ', 'Fu ', 'Yuan ', 'Gong ', 'Cai ', 'Ze ', 'Xian ', 'Bai ', 'Zhang ', 'Huo ', 'Zhi ', 'Fan ', 'Tan ', 'Pin ', 'Bian ', 'Gou ', 'Zhu ', 'Guan ', 'Er ', 'Jian ', 'Bi ', 'Shi ', 'Tie ', 'Gui ', 'Kuang ', 'Dai ', 'Mao ', 'Fei ', 'He ', 'Yi ', 'Zei ', 'Zhi ', 'Jia ', 'Hui ', 'Zi ', 'Ren ', 'Lu ', 'Zang ', 'Zi ', 'Gai ', 'Jin ', 'Qiu ', 'Zhen ', 'Lai ', 'She ', 'Fu ', 'Du ', 'Ji ', 'Shu ', 'Shang ', 'Si ', 'Bi ', 'Zhou ', 'Geng ', 'Pei ', 'Tan ', 'Lai ', 'Feng ', 'Zhui ', 'Fu ', 'Zhuan ', 'Sai ', 'Ze ', 'Yan ', 'Zan ', 'Yun ', 'Zeng ', 'Shan ', 'Ying ', 'Gan ', 'Chi ', 'Xi ', 'She ', 'Nan ', 'Xiong ', 'Xi ', 'Cheng ', 'He ', 'Cheng ', 'Zhe ', 'Xia ', 'Tang ', 'Zou ', 'Zou ', 'Li ', 'Jiu ', 'Fu ', 'Zhao ', 'Gan ', 'Qi ', 'Shan ', 'Qiong ', 'Qin ', 'Xian ', 'Ci ', 'Jue ', 'Qin ', 'Chi ', 'Ci ', 'Chen ', 'Chen ', 'Die ', 'Ju ', 'Chao ', 'Di ', 'Se ', 'Zhan ', 'Zhu ', 'Yue ', 'Qu ', 'Jie ', 'Chi ', 'Chu ', 'Gua ', 'Xue ', 'Ci ', 'Tiao ', 'Duo ', 'Lie ', 'Gan ', 'Suo ', 'Cu ', 'Xi ', 'Zhao ', 'Su ', 'Yin ', 'Ju ', 'Jian ', 'Que ', 'Tang ', 'Chuo ', 'Cui ', 'Lu ', 'Qu ', 'Dang ', 'Qiu ', 'Zi ', 'Ti ', 'Qu ', 'Chi ', 'Huang ', 'Qiao ', 'Qiao ', 'Yao ', 'Zao ', 'Ti ', '[?] ', 'Zan ', 'Zan ', 'Zu ', 'Pa ', 'Bao ', 'Ku ', 'Ke ', 'Dun ', 'Jue ', 'Fu ', 'Chen ', 'Jian ', 'Fang ', 'Zhi ', 'Sa ', 'Yue ', 'Pa ', 'Qi ', 'Yue ', 'Qiang ', 'Tuo ', 'Tai ', 'Yi ', 'Nian ', 'Ling ', 'Mei ', 'Ba ', 'Die ', 'Ku ', 'Tuo ', 'Jia ', 'Ci ', 'Pao ', 'Qia ', 'Zhu ', 'Ju ', 'Die ', 'Zhi ', 'Fu ', 'Pan ', 'Ju ', 'Shan ', 'Bo ', 'Ni ', 'Ju ', 'Li ', 'Gen ', 'Yi ', 'Ji ', 'Dai ', 'Xian ', 'Jiao ', 'Duo ', 'Zhu ', 'Zhuan ', 'Kua ', 'Zhuai ', 'Gui ', 'Qiong ', 'Kui ', 'Xiang ', 'Chi ', 'Lu ', 'Beng ', 'Zhi ', 'Jia ', 'Tiao ', 'Cai ', 'Jian ', 'Ta ', 'Qiao ', 'Bi ', 'Xian ', 'Duo ', 'Ji ', 'Ju ', 'Ji ', 'Shu ', 'Tu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0ce.php\",\"ext\":\"php\",\"size\":2152,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['cwik', 'cwit', 'cwip', 'cwih', 'cyu', 'cyug', 'cyugg', 'cyugs', 'cyun', 'cyunj', 'cyunh', 'cyud', 'cyul', 'cyulg', 'cyulm', 'cyulb', 'cyuls', 'cyult', 'cyulp', 'cyulh', 'cyum', 'cyub', 'cyubs', 'cyus', 'cyuss', 'cyung', 'cyuj', 'cyuc', 'cyuk', 'cyut', 'cyup', 'cyuh', 'ceu', 'ceug', 'ceugg', 'ceugs', 'ceun', 'ceunj', 'ceunh', 'ceud', 'ceul', 'ceulg', 'ceulm', 'ceulb', 'ceuls', 'ceult', 'ceulp', 'ceulh', 'ceum', 'ceub', 'ceubs', 'ceus', 'ceuss', 'ceung', 'ceuj', 'ceuc', 'ceuk', 'ceut', 'ceup', 'ceuh', 'cyi', 'cyig', 'cyigg', 'cyigs', 'cyin', 'cyinj', 'cyinh', 'cyid', 'cyil', 'cyilg', 'cyilm', 'cyilb', 'cyils', 'cyilt', 'cyilp', 'cyilh', 'cyim', 'cyib', 'cyibs', 'cyis', 'cyiss', 'cying', 'cyij', 'cyic', 'cyik', 'cyit', 'cyip', 'cyih', 'ci', 'cig', 'cigg', 'cigs', 'cin', 'cinj', 'cinh', 'cid', 'cil', 'cilg', 'cilm', 'cilb', 'cils', 'cilt', 'cilp', 'cilh', 'cim', 'cib', 'cibs', 'cis', 'ciss', 'cing', 'cij', 'cic', 'cik', 'cit', 'cip', 'cih', 'ka', 'kag', 'kagg', 'kags', 'kan', 'kanj', 'kanh', 'kad', 'kal', 'kalg', 'kalm', 'kalb', 'kals', 'kalt', 'kalp', 'kalh', 'kam', 'kab', 'kabs', 'kas', 'kass', 'kang', 'kaj', 'kac', 'kak', 'kat', 'kap', 'kah', 'kae', 'kaeg', 'kaegg', 'kaegs', 'kaen', 'kaenj', 'kaenh', 'kaed', 'kael', 'kaelg', 'kaelm', 'kaelb', 'kaels', 'kaelt', 'kaelp', 'kaelh', 'kaem', 'kaeb', 'kaebs', 'kaes', 'kaess', 'kaeng', 'kaej', 'kaec', 'kaek', 'kaet', 'kaep', 'kaeh', 'kya', 'kyag', 'kyagg', 'kyags', 'kyan', 'kyanj', 'kyanh', 'kyad', 'kyal', 'kyalg', 'kyalm', 'kyalb', 'kyals', 'kyalt', 'kyalp', 'kyalh', 'kyam', 'kyab', 'kyabs', 'kyas', 'kyass', 'kyang', 'kyaj', 'kyac', 'kyak', 'kyat', 'kyap', 'kyah', 'kyae', 'kyaeg', 'kyaegg', 'kyaegs', 'kyaen', 'kyaenj', 'kyaenh', 'kyaed', 'kyael', 'kyaelg', 'kyaelm', 'kyaelb', 'kyaels', 'kyaelt', 'kyaelp', 'kyaelh', 'kyaem', 'kyaeb', 'kyaebs', 'kyaes', 'kyaess', 'kyaeng', 'kyaej', 'kyaec', 'kyaek', 'kyaet', 'kyaep', 'kyaeh', 'keo', 'keog', 'keogg', 'keogs', 'keon', 'keonj', 'keonh', 'keod', 'keol', 'keolg', 'keolm', 'keolb', 'keols', 'keolt', 'keolp', 'keolh', 'keom', 'keob', 'keobs', 'keos', 'keoss', 'keong', 'keoj', 'keoc', 'keok', 'keot', 'keop', 'keoh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0cd.php\",\"ext\":\"php\",\"size\":2182,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['cyess', 'cyeng', 'cyej', 'cyec', 'cyek', 'cyet', 'cyep', 'cyeh', 'co', 'cog', 'cogg', 'cogs', 'con', 'conj', 'conh', 'cod', 'col', 'colg', 'colm', 'colb', 'cols', 'colt', 'colp', 'colh', 'com', 'cob', 'cobs', 'cos', 'coss', 'cong', 'coj', 'coc', 'cok', 'cot', 'cop', 'coh', 'cwa', 'cwag', 'cwagg', 'cwags', 'cwan', 'cwanj', 'cwanh', 'cwad', 'cwal', 'cwalg', 'cwalm', 'cwalb', 'cwals', 'cwalt', 'cwalp', 'cwalh', 'cwam', 'cwab', 'cwabs', 'cwas', 'cwass', 'cwang', 'cwaj', 'cwac', 'cwak', 'cwat', 'cwap', 'cwah', 'cwae', 'cwaeg', 'cwaegg', 'cwaegs', 'cwaen', 'cwaenj', 'cwaenh', 'cwaed', 'cwael', 'cwaelg', 'cwaelm', 'cwaelb', 'cwaels', 'cwaelt', 'cwaelp', 'cwaelh', 'cwaem', 'cwaeb', 'cwaebs', 'cwaes', 'cwaess', 'cwaeng', 'cwaej', 'cwaec', 'cwaek', 'cwaet', 'cwaep', 'cwaeh', 'coe', 'coeg', 'coegg', 'coegs', 'coen', 'coenj', 'coenh', 'coed', 'coel', 'coelg', 'coelm', 'coelb', 'coels', 'coelt', 'coelp', 'coelh', 'coem', 'coeb', 'coebs', 'coes', 'coess', 'coeng', 'coej', 'coec', 'coek', 'coet', 'coep', 'coeh', 'cyo', 'cyog', 'cyogg', 'cyogs', 'cyon', 'cyonj', 'cyonh', 'cyod', 'cyol', 'cyolg', 'cyolm', 'cyolb', 'cyols', 'cyolt', 'cyolp', 'cyolh', 'cyom', 'cyob', 'cyobs', 'cyos', 'cyoss', 'cyong', 'cyoj', 'cyoc', 'cyok', 'cyot', 'cyop', 'cyoh', 'cu', 'cug', 'cugg', 'cugs', 'cun', 'cunj', 'cunh', 'cud', 'cul', 'culg', 'culm', 'culb', 'culs', 'cult', 'culp', 'culh', 'cum', 'cub', 'cubs', 'cus', 'cuss', 'cung', 'cuj', 'cuc', 'cuk', 'cut', 'cup', 'cuh', 'cweo', 'cweog', 'cweogg', 'cweogs', 'cweon', 'cweonj', 'cweonh', 'cweod', 'cweol', 'cweolg', 'cweolm', 'cweolb', 'cweols', 'cweolt', 'cweolp', 'cweolh', 'cweom', 'cweob', 'cweobs', 'cweos', 'cweoss', 'cweong', 'cweoj', 'cweoc', 'cweok', 'cweot', 'cweop', 'cweoh', 'cwe', 'cweg', 'cwegg', 'cwegs', 'cwen', 'cwenj', 'cwenh', 'cwed', 'cwel', 'cwelg', 'cwelm', 'cwelb', 'cwels', 'cwelt', 'cwelp', 'cwelh', 'cwem', 'cweb', 'cwebs', 'cwes', 'cwess', 'cweng', 'cwej', 'cwec', 'cwek', 'cwet', 'cwep', 'cweh', 'cwi', 'cwig', 'cwigg', 'cwigs', 'cwin', 'cwinj', 'cwinh', 'cwid', 'cwil', 'cwilg', 'cwilm', 'cwilb', 'cwils', 'cwilt', 'cwilp', 'cwilh', 'cwim', 'cwib', 'cwibs', 'cwis', 'cwiss', 'cwing', 'cwij', 'cwic'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x016.php\",\"ext\":\"php\",\"size\":1594,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['kka', 'kk', 'nu', 'no', 'ne', 'nee', 'ni', 'na', 'mu', 'mo', 'me', 'mee', 'mi', 'ma', 'yu', 'yo', 'ye', 'yee', 'yi', 'ya', 'ju', 'ju', 'jo', 'je', 'jee', 'ji', 'ji', 'ja', 'jju', 'jjo', 'jje', 'jjee', 'jji', 'jja', 'lu', 'lo', 'le', 'lee', 'li', 'la', 'dlu', 'dlo', 'dle', 'dlee', 'dli', 'dla', 'lhu', 'lho', 'lhe', 'lhee', 'lhi', 'lha', 'tlhu', 'tlho', 'tlhe', 'tlhee', 'tlhi', 'tlha', 'tlu', 'tlo', 'tle', 'tlee', 'tli', 'tla', 'zu', 'zo', 'ze', 'zee', 'zi', 'za', 'z', 'z', 'dzu', 'dzo', 'dze', 'dzee', 'dzi', 'dza', 'su', 'so', 'se', 'see', 'si', 'sa', 'shu', 'sho', 'she', 'shee', 'shi', 'sha', 'sh', 'tsu', 'tso', 'tse', 'tsee', 'tsi', 'tsa', 'chu', 'cho', 'che', 'chee', 'chi', 'cha', 'ttsu', 'ttso', 'ttse', 'ttsee', 'ttsi', 'ttsa', 'X', '.', 'qai', 'ngai', 'nngi', 'nngii', 'nngo', 'nngoo', 'nnga', 'nngaa', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ' ', 'b', 'l', 'f', 's', 'n', 'h', 'd', 't', 'c', 'q', 'm', 'g', 'ng', 'z', 'r', 'a', 'o', 'u', 'e', 'i', 'ch', 'th', 'ph', 'p', 'x', 'p', '<', '>', '[?]', '[?]', '[?]', 'f', 'v', 'u', 'yr', 'y', 'w', 'th', 'th', 'a', 'o', 'ac', 'ae', 'o', 'o', 'o', 'oe', 'on', 'r', 'k', 'c', 'k', 'g', 'ng', 'g', 'g', 'w', 'h', 'h', 'h', 'h', 'n', 'n', 'n', 'i', 'e', 'j', 'g', 'ae', 'a', 'eo', 'p', 'z', 's', 's', 's', 'c', 'z', 't', 't', 'd', 'b', 'b', 'p', 'p', 'e', 'm', 'm', 'm', 'l', 'l', 'ng', 'ng', 'd', 'o', 'ear', 'ior', 'qu', 'qu', 'qu', 's', 'yr', 'yr', 'yr', 'q', 'x', '.', ':', '+', '17', '18', '19', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0d0.php\",\"ext\":\"php\",\"size\":2150,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['kweon', 'kweonj', 'kweonh', 'kweod', 'kweol', 'kweolg', 'kweolm', 'kweolb', 'kweols', 'kweolt', 'kweolp', 'kweolh', 'kweom', 'kweob', 'kweobs', 'kweos', 'kweoss', 'kweong', 'kweoj', 'kweoc', 'kweok', 'kweot', 'kweop', 'kweoh', 'kwe', 'kweg', 'kwegg', 'kwegs', 'kwen', 'kwenj', 'kwenh', 'kwed', 'kwel', 'kwelg', 'kwelm', 'kwelb', 'kwels', 'kwelt', 'kwelp', 'kwelh', 'kwem', 'kweb', 'kwebs', 'kwes', 'kwess', 'kweng', 'kwej', 'kwec', 'kwek', 'kwet', 'kwep', 'kweh', 'kwi', 'kwig', 'kwigg', 'kwigs', 'kwin', 'kwinj', 'kwinh', 'kwid', 'kwil', 'kwilg', 'kwilm', 'kwilb', 'kwils', 'kwilt', 'kwilp', 'kwilh', 'kwim', 'kwib', 'kwibs', 'kwis', 'kwiss', 'kwing', 'kwij', 'kwic', 'kwik', 'kwit', 'kwip', 'kwih', 'kyu', 'kyug', 'kyugg', 'kyugs', 'kyun', 'kyunj', 'kyunh', 'kyud', 'kyul', 'kyulg', 'kyulm', 'kyulb', 'kyuls', 'kyult', 'kyulp', 'kyulh', 'kyum', 'kyub', 'kyubs', 'kyus', 'kyuss', 'kyung', 'kyuj', 'kyuc', 'kyuk', 'kyut', 'kyup', 'kyuh', 'keu', 'keug', 'keugg', 'keugs', 'keun', 'keunj', 'keunh', 'keud', 'keul', 'keulg', 'keulm', 'keulb', 'keuls', 'keult', 'keulp', 'keulh', 'keum', 'keub', 'keubs', 'keus', 'keuss', 'keung', 'keuj', 'keuc', 'keuk', 'keut', 'keup', 'keuh', 'kyi', 'kyig', 'kyigg', 'kyigs', 'kyin', 'kyinj', 'kyinh', 'kyid', 'kyil', 'kyilg', 'kyilm', 'kyilb', 'kyils', 'kyilt', 'kyilp', 'kyilh', 'kyim', 'kyib', 'kyibs', 'kyis', 'kyiss', 'kying', 'kyij', 'kyic', 'kyik', 'kyit', 'kyip', 'kyih', 'ki', 'kig', 'kigg', 'kigs', 'kin', 'kinj', 'kinh', 'kid', 'kil', 'kilg', 'kilm', 'kilb', 'kils', 'kilt', 'kilp', 'kilh', 'kim', 'kib', 'kibs', 'kis', 'kiss', 'king', 'kij', 'kic', 'kik', 'kit', 'kip', 'kih', 'ta', 'tag', 'tagg', 'tags', 'tan', 'tanj', 'tanh', 'tad', 'tal', 'talg', 'talm', 'talb', 'tals', 'talt', 'talp', 'talh', 'tam', 'tab', 'tabs', 'tas', 'tass', 'tang', 'taj', 'tac', 'tak', 'tat', 'tap', 'tah', 'tae', 'taeg', 'taegg', 'taegs', 'taen', 'taenj', 'taenh', 'taed', 'tael', 'taelg', 'taelm', 'taelb', 'taels', 'taelt', 'taelp', 'taelh', 'taem', 'taeb', 'taebs', 'taes', 'taess', 'taeng', 'taej', 'taec', 'taek', 'taet', 'taep', 'taeh', 'tya', 'tyag', 'tyagg', 'tyags', 'tyan', 'tyanj', 'tyanh', 'tyad'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x030.php\",\"ext\":\"php\",\"size\":1613,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return [' ', ', ', '. ', '\\\"', '[JIS]', '\\\"', '\/', '0', '<', '> ', '<<', '>> ', '[', '] ', '{', '} ', '[(', ')] ', '@', 'X ', '[', '] ', '[[', ']] ', '((', ')) ', '[[', ']] ', '~ ', '``', '\\\\'\\\\'', ',,', '@', '1', '2', '3', '4', '5', '6', '7', '8', '9', '', '', '', '', '', '', '~', '+', '+', '+', '+', '', '@', ' \/\/ ', '+10+', '+20+', '+30+', '[?]', '[?]', '[?]', '', '', '[?]', 'a', 'a', 'i', 'i', 'u', 'u', 'e', 'e', 'o', 'o', 'ka', 'ga', 'ki', 'gi', 'ku', 'gu', 'ke', 'ge', 'ko', 'go', 'sa', 'za', 'shi',   \/\/ 0x57\\n    'zi', 'su', 'zu', 'se', 'ze', 'so', 'zo', 'ta', 'da', 'chi',   \/\/ 0x61\\n    'di', 'tsu',   \/\/ 0x63\\n    'tsu',   \/\/ 0x64\\n    'du', 'te', 'de', 'to', 'do', 'na', 'ni', 'nu', 'ne', 'no', 'ha', 'ba', 'pa', 'hi', 'bi', 'pi', 'hu', 'bu', 'pu', 'he', 'be', 'pe', 'ho', 'bo', 'po', 'ma', 'mi', 'mu', 'me', 'mo', 'ya', 'ya', 'yu', 'yu', 'yo', 'yo', 'ra', 'ri', 'ru', 're', 'ro', 'wa', 'wa', 'wi', 'we', 'wo', 'n', 'vu', '[?]', '[?]', '[?]', '[?]', '', '', '', '', '\\\"', '\\\"', '[?]', '[?]', 'a', 'a', 'i', 'i', 'u', 'u', 'e', 'e', 'o', 'o', 'ka', 'ga', 'ki', 'gi', 'ku', 'gu', 'ke', 'ge', 'ko', 'go', 'sa', 'za', 'shi',   \/\/ 0xb7\\n    'zi', 'su', 'zu', 'se', 'ze', 'so', 'zo', 'ta', 'da', 'chi',   \/\/ 0xc1\\n    'di', 'tsu',   \/\/ 0xc3\\n    'tsu',   \/\/ 0xc4\\n    'du', 'te', 'de', 'to', 'do', 'na', 'ni', 'nu', 'ne', 'no', 'ha', 'ba', 'pa', 'hi', 'bi', 'pi', 'hu', 'bu', 'pu', 'he', 'be', 'pe', 'ho', 'bo', 'po', 'ma', 'mi', 'mu', 'me', 'mo', 'ya', 'ya', 'yu', 'yu', 'yo', 'yo', 'ra', 'ri', 'ru', 're', 'ro', 'wa', 'wa', 'wi', 'we', 'wo', 'n', 'vu', 'ka', 'ke', 'va', 'vi', 've', 'vo', '', '', '\\\"', '\\\"', ];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0af.php\",\"ext\":\"php\",\"size\":2456,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ggyeols', 'ggyeolt', 'ggyeolp', 'ggyeolh', 'ggyeom', 'ggyeob', 'ggyeobs', 'ggyeos', 'ggyeoss', 'ggyeong', 'ggyeoj', 'ggyeoc', 'ggyeok', 'ggyeot', 'ggyeop', 'ggyeoh', 'ggye', 'ggyeg', 'ggyegg', 'ggyegs', 'ggyen', 'ggyenj', 'ggyenh', 'ggyed', 'ggyel', 'ggyelg', 'ggyelm', 'ggyelb', 'ggyels', 'ggyelt', 'ggyelp', 'ggyelh', 'ggyem', 'ggyeb', 'ggyebs', 'ggyes', 'ggyess', 'ggyeng', 'ggyej', 'ggyec', 'ggyek', 'ggyet', 'ggyep', 'ggyeh', 'ggo', 'ggog', 'ggogg', 'ggogs', 'ggon', 'ggonj', 'ggonh', 'ggod', 'ggol', 'ggolg', 'ggolm', 'ggolb', 'ggols', 'ggolt', 'ggolp', 'ggolh', 'ggom', 'ggob', 'ggobs', 'ggos', 'ggoss', 'ggong', 'ggoj', 'ggoc', 'ggok', 'ggot', 'ggop', 'ggoh', 'ggwa', 'ggwag', 'ggwagg', 'ggwags', 'ggwan', 'ggwanj', 'ggwanh', 'ggwad', 'ggwal', 'ggwalg', 'ggwalm', 'ggwalb', 'ggwals', 'ggwalt', 'ggwalp', 'ggwalh', 'ggwam', 'ggwab', 'ggwabs', 'ggwas', 'ggwass', 'ggwang', 'ggwaj', 'ggwac', 'ggwak', 'ggwat', 'ggwap', 'ggwah', 'ggwae', 'ggwaeg', 'ggwaegg', 'ggwaegs', 'ggwaen', 'ggwaenj', 'ggwaenh', 'ggwaed', 'ggwael', 'ggwaelg', 'ggwaelm', 'ggwaelb', 'ggwaels', 'ggwaelt', 'ggwaelp', 'ggwaelh', 'ggwaem', 'ggwaeb', 'ggwaebs', 'ggwaes', 'ggwaess', 'ggwaeng', 'ggwaej', 'ggwaec', 'ggwaek', 'ggwaet', 'ggwaep', 'ggwaeh', 'ggoe', 'ggoeg', 'ggoegg', 'ggoegs', 'ggoen', 'ggoenj', 'ggoenh', 'ggoed', 'ggoel', 'ggoelg', 'ggoelm', 'ggoelb', 'ggoels', 'ggoelt', 'ggoelp', 'ggoelh', 'ggoem', 'ggoeb', 'ggoebs', 'ggoes', 'ggoess', 'ggoeng', 'ggoej', 'ggoec', 'ggoek', 'ggoet', 'ggoep', 'ggoeh', 'ggyo', 'ggyog', 'ggyogg', 'ggyogs', 'ggyon', 'ggyonj', 'ggyonh', 'ggyod', 'ggyol', 'ggyolg', 'ggyolm', 'ggyolb', 'ggyols', 'ggyolt', 'ggyolp', 'ggyolh', 'ggyom', 'ggyob', 'ggyobs', 'ggyos', 'ggyoss', 'ggyong', 'ggyoj', 'ggyoc', 'ggyok', 'ggyot', 'ggyop', 'ggyoh', 'ggu', 'ggug', 'ggugg', 'ggugs', 'ggun', 'ggunj', 'ggunh', 'ggud', 'ggul', 'ggulg', 'ggulm', 'ggulb', 'gguls', 'ggult', 'ggulp', 'ggulh', 'ggum', 'ggub', 'ggubs', 'ggus', 'gguss', 'ggung', 'gguj', 'gguc', 'gguk', 'ggut', 'ggup', 'gguh', 'ggweo', 'ggweog', 'ggweogg', 'ggweogs', 'ggweon', 'ggweonj', 'ggweonh', 'ggweod', 'ggweol', 'ggweolg', 'ggweolm', 'ggweolb', 'ggweols', 'ggweolt', 'ggweolp', 'ggweolh', 'ggweom', 'ggweob', 'ggweobs', 'ggweos', 'ggweoss', 'ggweong', 'ggweoj', 'ggweoc', 'ggweok', 'ggweot', 'ggweop', 'ggweoh', 'ggwe', 'ggweg', 'ggwegg', 'ggwegs', 'ggwen', 'ggwenj', 'ggwenh', 'ggwed', 'ggwel', 'ggwelg', 'ggwelm', 'ggwelb', 'ggwels', 'ggwelt', 'ggwelp', 'ggwelh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b4.php\",\"ext\":\"php\",\"size\":2206,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['dwaen', 'dwaenj', 'dwaenh', 'dwaed', 'dwael', 'dwaelg', 'dwaelm', 'dwaelb', 'dwaels', 'dwaelt', 'dwaelp', 'dwaelh', 'dwaem', 'dwaeb', 'dwaebs', 'dwaes', 'dwaess', 'dwaeng', 'dwaej', 'dwaec', 'dwaek', 'dwaet', 'dwaep', 'dwaeh', 'doe', 'doeg', 'doegg', 'doegs', 'doen', 'doenj', 'doenh', 'doed', 'doel', 'doelg', 'doelm', 'doelb', 'doels', 'doelt', 'doelp', 'doelh', 'doem', 'doeb', 'doebs', 'does', 'doess', 'doeng', 'doej', 'doec', 'doek', 'doet', 'doep', 'doeh', 'dyo', 'dyog', 'dyogg', 'dyogs', 'dyon', 'dyonj', 'dyonh', 'dyod', 'dyol', 'dyolg', 'dyolm', 'dyolb', 'dyols', 'dyolt', 'dyolp', 'dyolh', 'dyom', 'dyob', 'dyobs', 'dyos', 'dyoss', 'dyong', 'dyoj', 'dyoc', 'dyok', 'dyot', 'dyop', 'dyoh', 'du', 'dug', 'dugg', 'dugs', 'dun', 'dunj', 'dunh', 'dud', 'dul', 'dulg', 'dulm', 'dulb', 'duls', 'dult', 'dulp', 'dulh', 'dum', 'dub', 'dubs', 'dus', 'duss', 'dung', 'duj', 'duc', 'duk', 'dut', 'dup', 'duh', 'dweo', 'dweog', 'dweogg', 'dweogs', 'dweon', 'dweonj', 'dweonh', 'dweod', 'dweol', 'dweolg', 'dweolm', 'dweolb', 'dweols', 'dweolt', 'dweolp', 'dweolh', 'dweom', 'dweob', 'dweobs', 'dweos', 'dweoss', 'dweong', 'dweoj', 'dweoc', 'dweok', 'dweot', 'dweop', 'dweoh', 'dwe', 'dweg', 'dwegg', 'dwegs', 'dwen', 'dwenj', 'dwenh', 'dwed', 'dwel', 'dwelg', 'dwelm', 'dwelb', 'dwels', 'dwelt', 'dwelp', 'dwelh', 'dwem', 'dweb', 'dwebs', 'dwes', 'dwess', 'dweng', 'dwej', 'dwec', 'dwek', 'dwet', 'dwep', 'dweh', 'dwi', 'dwig', 'dwigg', 'dwigs', 'dwin', 'dwinj', 'dwinh', 'dwid', 'dwil', 'dwilg', 'dwilm', 'dwilb', 'dwils', 'dwilt', 'dwilp', 'dwilh', 'dwim', 'dwib', 'dwibs', 'dwis', 'dwiss', 'dwing', 'dwij', 'dwic', 'dwik', 'dwit', 'dwip', 'dwih', 'dyu', 'dyug', 'dyugg', 'dyugs', 'dyun', 'dyunj', 'dyunh', 'dyud', 'dyul', 'dyulg', 'dyulm', 'dyulb', 'dyuls', 'dyult', 'dyulp', 'dyulh', 'dyum', 'dyub', 'dyubs', 'dyus', 'dyuss', 'dyung', 'dyuj', 'dyuc', 'dyuk', 'dyut', 'dyup', 'dyuh', 'deu', 'deug', 'deugg', 'deugs', 'deun', 'deunj', 'deunh', 'deud', 'deul', 'deulg', 'deulm', 'deulb', 'deuls', 'deult', 'deulp', 'deulh', 'deum', 'deub', 'deubs', 'deus', 'deuss', 'deung', 'deuj', 'deuc', 'deuk', 'deut', 'deup', 'deuh', 'dyi', 'dyig', 'dyigg', 'dyigs', 'dyin', 'dyinj', 'dyinh', 'dyid'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0d1.php\",\"ext\":\"php\",\"size\":2211,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['tyal', 'tyalg', 'tyalm', 'tyalb', 'tyals', 'tyalt', 'tyalp', 'tyalh', 'tyam', 'tyab', 'tyabs', 'tyas', 'tyass', 'tyang', 'tyaj', 'tyac', 'tyak', 'tyat', 'tyap', 'tyah', 'tyae', 'tyaeg', 'tyaegg', 'tyaegs', 'tyaen', 'tyaenj', 'tyaenh', 'tyaed', 'tyael', 'tyaelg', 'tyaelm', 'tyaelb', 'tyaels', 'tyaelt', 'tyaelp', 'tyaelh', 'tyaem', 'tyaeb', 'tyaebs', 'tyaes', 'tyaess', 'tyaeng', 'tyaej', 'tyaec', 'tyaek', 'tyaet', 'tyaep', 'tyaeh', 'teo', 'teog', 'teogg', 'teogs', 'teon', 'teonj', 'teonh', 'teod', 'teol', 'teolg', 'teolm', 'teolb', 'teols', 'teolt', 'teolp', 'teolh', 'teom', 'teob', 'teobs', 'teos', 'teoss', 'teong', 'teoj', 'teoc', 'teok', 'teot', 'teop', 'teoh', 'te', 'teg', 'tegg', 'tegs', 'ten', 'tenj', 'tenh', 'ted', 'tel', 'telg', 'telm', 'telb', 'tels', 'telt', 'telp', 'telh', 'tem', 'teb', 'tebs', 'tes', 'tess', 'teng', 'tej', 'tec', 'tek', 'tet', 'tep', 'teh', 'tyeo', 'tyeog', 'tyeogg', 'tyeogs', 'tyeon', 'tyeonj', 'tyeonh', 'tyeod', 'tyeol', 'tyeolg', 'tyeolm', 'tyeolb', 'tyeols', 'tyeolt', 'tyeolp', 'tyeolh', 'tyeom', 'tyeob', 'tyeobs', 'tyeos', 'tyeoss', 'tyeong', 'tyeoj', 'tyeoc', 'tyeok', 'tyeot', 'tyeop', 'tyeoh', 'tye', 'tyeg', 'tyegg', 'tyegs', 'tyen', 'tyenj', 'tyenh', 'tyed', 'tyel', 'tyelg', 'tyelm', 'tyelb', 'tyels', 'tyelt', 'tyelp', 'tyelh', 'tyem', 'tyeb', 'tyebs', 'tyes', 'tyess', 'tyeng', 'tyej', 'tyec', 'tyek', 'tyet', 'tyep', 'tyeh', 'to', 'tog', 'togg', 'togs', 'ton', 'tonj', 'tonh', 'tod', 'tol', 'tolg', 'tolm', 'tolb', 'tols', 'tolt', 'tolp', 'tolh', 'tom', 'tob', 'tobs', 'tos', 'toss', 'tong', 'toj', 'toc', 'tok', 'tot', 'top', 'toh', 'twa', 'twag', 'twagg', 'twags', 'twan', 'twanj', 'twanh', 'twad', 'twal', 'twalg', 'twalm', 'twalb', 'twals', 'twalt', 'twalp', 'twalh', 'twam', 'twab', 'twabs', 'twas', 'twass', 'twang', 'twaj', 'twac', 'twak', 'twat', 'twap', 'twah', 'twae', 'twaeg', 'twaegg', 'twaegs', 'twaen', 'twaenj', 'twaenh', 'twaed', 'twael', 'twaelg', 'twaelm', 'twaelb', 'twaels', 'twaelt', 'twaelp', 'twaelh', 'twaem', 'twaeb', 'twaebs', 'twaes', 'twaess', 'twaeng', 'twaej', 'twaec', 'twaek', 'twaet', 'twaep', 'twaeh', 'toe', 'toeg', 'toegg', 'toegs', 'toen', 'toenj', 'toenh', 'toed', 'toel', 'toelg', 'toelm', 'toelb'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x059.php\",\"ext\":\"php\",\"size\":2088,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Shou ', 'Yi ', 'Zhi ', 'Gu ', 'Chu ', 'Jiang ', 'Feng ', 'Bei ', 'Cay ', 'Bian ', 'Sui ', 'Qun ', 'Ling ', 'Fu ', 'Zuo ', 'Xia ', 'Xiong ', '[?] ', 'Nao ', 'Xia ', 'Kui ', 'Xi ', 'Wai ', 'Yuan ', 'Mao ', 'Su ', 'Duo ', 'Duo ', 'Ye ', 'Qing ', 'Uys ', 'Gou ', 'Gou ', 'Qi ', 'Meng ', 'Meng ', 'Yin ', 'Huo ', 'Chen ', 'Da ', 'Ze ', 'Tian ', 'Tai ', 'Fu ', 'Guai ', 'Yao ', 'Yang ', 'Hang ', 'Gao ', 'Shi ', 'Ben ', 'Tai ', 'Tou ', 'Yan ', 'Bi ', 'Yi ', 'Kua ', 'Jia ', 'Duo ', 'Kwu ', 'Kuang ', 'Yun ', 'Jia ', 'Pa ', 'En ', 'Lian ', 'Huan ', 'Di ', 'Yan ', 'Pao ', 'Quan ', 'Qi ', 'Nai ', 'Feng ', 'Xie ', 'Fen ', 'Dian ', '[?] ', 'Kui ', 'Zou ', 'Huan ', 'Qi ', 'Kai ', 'Zha ', 'Ben ', 'Yi ', 'Jiang ', 'Tao ', 'Zang ', 'Ben ', 'Xi ', 'Xiang ', 'Fei ', 'Diao ', 'Xun ', 'Keng ', 'Dian ', 'Ao ', 'She ', 'Weng ', 'Pan ', 'Ao ', 'Wu ', 'Ao ', 'Jiang ', 'Lian ', 'Duo ', 'Yun ', 'Jiang ', 'Shi ', 'Fen ', 'Huo ', 'Bi ', 'Lian ', 'Duo ', 'Nu ', 'Nu ', 'Ding ', 'Nai ', 'Qian ', 'Jian ', 'Ta ', 'Jiu ', 'Nan ', 'Cha ', 'Hao ', 'Xian ', 'Fan ', 'Ji ', 'Shuo ', 'Ru ', 'Fei ', 'Wang ', 'Hong ', 'Zhuang ', 'Fu ', 'Ma ', 'Dan ', 'Ren ', 'Fu ', 'Jing ', 'Yan ', 'Xie ', 'Wen ', 'Zhong ', 'Pa ', 'Du ', 'Ji ', 'Keng ', 'Zhong ', 'Yao ', 'Jin ', 'Yun ', 'Miao ', 'Pei ', 'Shi ', 'Yue ', 'Zhuang ', 'Niu ', 'Yan ', 'Na ', 'Xin ', 'Fen ', 'Bi ', 'Yu ', 'Tuo ', 'Feng ', 'Yuan ', 'Fang ', 'Wu ', 'Yu ', 'Gui ', 'Du ', 'Ba ', 'Ni ', 'Zhou ', 'Zhuo ', 'Zhao ', 'Da ', 'Nai ', 'Yuan ', 'Tou ', 'Xuan ', 'Zhi ', 'E ', 'Mei ', 'Mo ', 'Qi ', 'Bi ', 'Shen ', 'Qie ', 'E ', 'He ', 'Xu ', 'Fa ', 'Zheng ', 'Min ', 'Ban ', 'Mu ', 'Fu ', 'Ling ', 'Zi ', 'Zi ', 'Shi ', 'Ran ', 'Shan ', 'Yang ', 'Man ', 'Jie ', 'Gu ', 'Si ', 'Xing ', 'Wei ', 'Zi ', 'Ju ', 'Shan ', 'Pin ', 'Ren ', 'Yao ', 'Tong ', 'Jiang ', 'Shu ', 'Ji ', 'Gai ', 'Shang ', 'Kuo ', 'Juan ', 'Jiao ', 'Gou ', 'Mu ', 'Jian ', 'Jian ', 'Yi ', 'Nian ', 'Zhi ', 'Ji ', 'Ji ', 'Xian ', 'Heng ', 'Guang ', 'Jun ', 'Kua ', 'Yan ', 'Ming ', 'Lie ', 'Pei ', 'Yan ', 'You ', 'Yan ', 'Cha ', 'Shen ', 'Yin ', 'Chi ', 'Gui ', 'Quan ', 'Zi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0f9.php\",\"ext\":\"php\",\"size\":2011,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Kay ', 'Kayng ', 'Ke ', 'Ko ', 'Kol ', 'Koc ', 'Kwi ', 'Kwi ', 'Kyun ', 'Kul ', 'Kum ', 'Na ', 'Na ', 'Na ', 'La ', 'Na ', 'Na ', 'Na ', 'Na ', 'Na ', 'Nak ', 'Nak ', 'Nak ', 'Nak ', 'Nak ', 'Nak ', 'Nak ', 'Nan ', 'Nan ', 'Nan ', 'Nan ', 'Nan ', 'Nan ', 'Nam ', 'Nam ', 'Nam ', 'Nam ', 'Nap ', 'Nap ', 'Nap ', 'Nang ', 'Nang ', 'Nang ', 'Nang ', 'Nang ', 'Nay ', 'Nayng ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'No ', 'Nok ', 'Nok ', 'Nok ', 'Nok ', 'Nok ', 'Nok ', 'Non ', 'Nong ', 'Nong ', 'Nong ', 'Nong ', 'Noy ', 'Noy ', 'Noy ', 'Noy ', 'Nwu ', 'Nwu ', 'Nwu ', 'Nwu ', 'Nwu ', 'Nwu ', 'Nwu ', 'Nwu ', 'Nuk ', 'Nuk ', 'Num ', 'Nung ', 'Nung ', 'Nung ', 'Nung ', 'Nung ', 'Twu ', 'La ', 'Lak ', 'Lak ', 'Lan ', 'Lyeng ', 'Lo ', 'Lyul ', 'Li ', 'Pey ', 'Pen ', 'Pyen ', 'Pwu ', 'Pwul ', 'Pi ', 'Sak ', 'Sak ', 'Sam ', 'Sayk ', 'Sayng ', 'Sep ', 'Sey ', 'Sway ', 'Sin ', 'Sim ', 'Sip ', 'Ya ', 'Yak ', 'Yak ', 'Yang ', 'Yang ', 'Yang ', 'Yang ', 'Yang ', 'Yang ', 'Yang ', 'Yang ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Ye ', 'Yek ', 'Yek ', 'Yek ', 'Yek ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yen ', 'Yel ', 'Yel ', 'Yel ', 'Yel ', 'Yel ', 'Yel ', 'Yem ', 'Yem ', 'Yem ', 'Yem ', 'Yem ', 'Yep ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yeng ', 'Yey ', 'Yey ', 'Yey ', 'Yey ', 'O ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yo ', 'Yong ', 'Wun ', 'Wen ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yu ', 'Yuk ', 'Yuk ', 'Yuk ', 'Yun ', 'Yun ', 'Yun ', 'Yun ', 'Yul ', 'Yul ', 'Yul ', 'Yul ', 'Yung ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'I ', 'Ik ', 'Ik ', 'In ', 'In ', 'In ', 'In ', 'In ', 'In ', 'In ', 'Im ', 'Im ', 'Im ', 'Ip ', 'Ip ', 'Ip ', 'Cang ', 'Cek ', 'Ci ', 'Cip ', 'Cha ', 'Chek '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x013.php\",\"ext\":\"php\",\"size\":1701,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ja', 'ju', 'ji', 'jaa', 'jee', 'je', 'jo', 'jwa', 'ga', 'gu', 'gi', 'gaa', 'gee', 'ge', 'go', '[?]', 'gwa', '[?]', 'gwi', 'gwaa', 'gwee', 'gwe', '[?]', '[?]', 'gga', 'ggu', 'ggi', 'ggaa', 'ggee', 'gge', 'ggo', '[?]', 'tha', 'thu', 'thi', 'thaa', 'thee', 'the', 'tho', 'thwa', 'cha', 'chu', 'chi', 'chaa', 'chee', 'che', 'cho', 'chwa', 'pha', 'phu', 'phi', 'phaa', 'phee', 'phe', 'pho', 'phwa', 'tsa', 'tsu', 'tsi', 'tsaa', 'tsee', 'tse', 'tso', 'tswa', 'tza', 'tzu', 'tzi', 'tzaa', 'tzee', 'tze', 'tzo', '[?]', 'fa', 'fu', 'fi', 'faa', 'fee', 'fe', 'fo', 'fwa', 'pa', 'pu', 'pi', 'paa', 'pee', 'pe', 'po', 'pwa', 'rya', 'mya', 'fya', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ' ', '.', ',', ';', ':', ':: ', '?', '\/\/', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10+', '20+', '30+', '40+', '50+', '60+', '70+', '80+', '90+', '100+', '10,000+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'a', 'e', 'i', 'o', 'u', 'v', 'ga', 'ka', 'ge', 'gi', 'go', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hu', 'hv', 'la', 'le', 'li', 'lo', 'lu', 'lv', 'ma', 'me', 'mi', 'mo', 'mu', 'na', 'hna', 'nah', 'ne', 'ni', 'no', 'nu', 'nv', 'qua', 'que', 'qui', 'quo', 'quu', 'quv', 'sa', 's', 'se', 'si', 'so', 'su', 'sv', 'da', 'ta', 'de', 'te', 'di', 'ti', 'do', 'du', 'dv', 'dla', 'tla', 'tle', 'tli', 'tlo', 'tlu', 'tlv', 'tsa', 'tse', 'tsi', 'tso', 'tsu', 'tsv', 'wa', 'we', 'wi', 'wo', 'wu', 'wv', 'ya', 'ye', 'yi', 'yo', 'yu', 'yv', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x006.php\",\"ext\":\"php\",\"size\":1419,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ',', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ';', '[?]', '[?]', '[?]', '?', '[?]', '', 'a', 'a', 'w\\\\'', '', 'y\\\\'', '', 'b', '@', 't', 'th', 'j', 'H', 'kh', 'd', 'dh', 'r', 'z', 's', 'sh', 'S', 'D', 'T', 'Z', '`', 'G', '[?]', '[?]', '[?]', '[?]', '[?]', '', 'f', 'q', 'k', 'l', 'm', 'n', 'h', 'w', '~', 'y', 'an', 'un', 'in', 'a', 'u', 'i', 'W', '', '', '\\\\'', '\\\\'', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '%', '.', ',', '*', '[?]', '[?]', '', '\\\\'', '\\\\'', '\\\\'', '', '\\\\'', '\\\\'w', '\\\\'u', '\\\\'y', 'tt', 'tth', 'b', 't', 'T', 'p', 'th', 'bh', '\\\\'h', 'H', 'ny', 'dy', 'H', 'ch', 'cch', 'dd', 'D', 'D', 'Dt', 'dh', 'ddh', 'd', 'D', 'D', 'rr', 'R', 'R', 'R', 'R', 'R', 'R', 'j', 'R', 'S', 'S', 'S', 'S', 'S', 'T', 'GH', 'F', 'F', 'F', 'v', 'f', 'ph', 'Q', 'Q', 'kh', 'k', 'K', 'K', 'ng', 'K', 'g', 'G', 'N', 'G', 'G', 'G', 'L', 'L', 'L', 'L', 'N', 'N', 'N', 'N', 'N', 'h', 'Ch', 'hy', 'h', 'H', '@', 'W', 'oe', 'oe', 'u', 'yu', 'yu', 'W', 'v', 'y', 'Y', 'Y', 'W', '', '', 'y', 'y\\\\'', '.', 'ae', '', '', '', '', '', '', '', '@', '#', '', '', '', '', '', '', '', '', '', '', '^', '', '', '', '', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'Sh', 'D', 'Gh', '&', '+m', 'h'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c3.php\",\"ext\":\"php\",\"size\":2419,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ssal', 'ssalg', 'ssalm', 'ssalb', 'ssals', 'ssalt', 'ssalp', 'ssalh', 'ssam', 'ssab', 'ssabs', 'ssas', 'ssass', 'ssang', 'ssaj', 'ssac', 'ssak', 'ssat', 'ssap', 'ssah', 'ssae', 'ssaeg', 'ssaegg', 'ssaegs', 'ssaen', 'ssaenj', 'ssaenh', 'ssaed', 'ssael', 'ssaelg', 'ssaelm', 'ssaelb', 'ssaels', 'ssaelt', 'ssaelp', 'ssaelh', 'ssaem', 'ssaeb', 'ssaebs', 'ssaes', 'ssaess', 'ssaeng', 'ssaej', 'ssaec', 'ssaek', 'ssaet', 'ssaep', 'ssaeh', 'ssya', 'ssyag', 'ssyagg', 'ssyags', 'ssyan', 'ssyanj', 'ssyanh', 'ssyad', 'ssyal', 'ssyalg', 'ssyalm', 'ssyalb', 'ssyals', 'ssyalt', 'ssyalp', 'ssyalh', 'ssyam', 'ssyab', 'ssyabs', 'ssyas', 'ssyass', 'ssyang', 'ssyaj', 'ssyac', 'ssyak', 'ssyat', 'ssyap', 'ssyah', 'ssyae', 'ssyaeg', 'ssyaegg', 'ssyaegs', 'ssyaen', 'ssyaenj', 'ssyaenh', 'ssyaed', 'ssyael', 'ssyaelg', 'ssyaelm', 'ssyaelb', 'ssyaels', 'ssyaelt', 'ssyaelp', 'ssyaelh', 'ssyaem', 'ssyaeb', 'ssyaebs', 'ssyaes', 'ssyaess', 'ssyaeng', 'ssyaej', 'ssyaec', 'ssyaek', 'ssyaet', 'ssyaep', 'ssyaeh', 'sseo', 'sseog', 'sseogg', 'sseogs', 'sseon', 'sseonj', 'sseonh', 'sseod', 'sseol', 'sseolg', 'sseolm', 'sseolb', 'sseols', 'sseolt', 'sseolp', 'sseolh', 'sseom', 'sseob', 'sseobs', 'sseos', 'sseoss', 'sseong', 'sseoj', 'sseoc', 'sseok', 'sseot', 'sseop', 'sseoh', 'sse', 'sseg', 'ssegg', 'ssegs', 'ssen', 'ssenj', 'ssenh', 'ssed', 'ssel', 'sselg', 'sselm', 'sselb', 'ssels', 'sselt', 'sselp', 'sselh', 'ssem', 'sseb', 'ssebs', 'sses', 'ssess', 'sseng', 'ssej', 'ssec', 'ssek', 'sset', 'ssep', 'sseh', 'ssyeo', 'ssyeog', 'ssyeogg', 'ssyeogs', 'ssyeon', 'ssyeonj', 'ssyeonh', 'ssyeod', 'ssyeol', 'ssyeolg', 'ssyeolm', 'ssyeolb', 'ssyeols', 'ssyeolt', 'ssyeolp', 'ssyeolh', 'ssyeom', 'ssyeob', 'ssyeobs', 'ssyeos', 'ssyeoss', 'ssyeong', 'ssyeoj', 'ssyeoc', 'ssyeok', 'ssyeot', 'ssyeop', 'ssyeoh', 'ssye', 'ssyeg', 'ssyegg', 'ssyegs', 'ssyen', 'ssyenj', 'ssyenh', 'ssyed', 'ssyel', 'ssyelg', 'ssyelm', 'ssyelb', 'ssyels', 'ssyelt', 'ssyelp', 'ssyelh', 'ssyem', 'ssyeb', 'ssyebs', 'ssyes', 'ssyess', 'ssyeng', 'ssyej', 'ssyec', 'ssyek', 'ssyet', 'ssyep', 'ssyeh', 'sso', 'ssog', 'ssogg', 'ssogs', 'sson', 'ssonj', 'ssonh', 'ssod', 'ssol', 'ssolg', 'ssolm', 'ssolb', 'ssols', 'ssolt', 'ssolp', 'ssolh', 'ssom', 'ssob', 'ssobs', 'ssos', 'ssoss', 'ssong', 'ssoj', 'ssoc', 'ssok', 'ssot', 'ssop', 'ssoh', 'sswa', 'sswag', 'sswagg', 'sswags', 'sswan', 'sswanj', 'sswanh', 'sswad', 'sswal', 'sswalg', 'sswalm', 'sswalb'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x085.php\",\"ext\":\"php\",\"size\":2080,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Bu ', 'Zhang ', 'Luo ', 'Jiang ', 'Man ', 'Yan ', 'Ling ', 'Ji ', 'Piao ', 'Gun ', 'Han ', 'Di ', 'Su ', 'Lu ', 'She ', 'Shang ', 'Di ', 'Mie ', 'Xun ', 'Man ', 'Bo ', 'Di ', 'Cuo ', 'Zhe ', 'Sen ', 'Xuan ', 'Wei ', 'Hu ', 'Ao ', 'Mi ', 'Lou ', 'Cu ', 'Zhong ', 'Cai ', 'Po ', 'Jiang ', 'Mi ', 'Cong ', 'Niao ', 'Hui ', 'Jun ', 'Yin ', 'Jian ', 'Yan ', 'Shu ', 'Yin ', 'Kui ', 'Chen ', 'Hu ', 'Sha ', 'Kou ', 'Qian ', 'Ma ', 'Zang ', 'Sonoko ', 'Qiang ', 'Dou ', 'Lian ', 'Lin ', 'Kou ', 'Ai ', 'Bi ', 'Li ', 'Wei ', 'Ji ', 'Xun ', 'Sheng ', 'Fan ', 'Meng ', 'Ou ', 'Chan ', 'Dian ', 'Xun ', 'Jiao ', 'Rui ', 'Rui ', 'Lei ', 'Yu ', 'Qiao ', 'Chu ', 'Hua ', 'Jian ', 'Mai ', 'Yun ', 'Bao ', 'You ', 'Qu ', 'Lu ', 'Rao ', 'Hui ', 'E ', 'Teng ', 'Fei ', 'Jue ', 'Zui ', 'Fa ', 'Ru ', 'Fen ', 'Kui ', 'Shun ', 'Rui ', 'Ya ', 'Xu ', 'Fu ', 'Jue ', 'Dang ', 'Wu ', 'Tong ', 'Si ', 'Xiao ', 'Xi ', 'Long ', 'Yun ', '[?] ', 'Qi ', 'Jian ', 'Yun ', 'Sun ', 'Ling ', 'Yu ', 'Xia ', 'Yong ', 'Ji ', 'Hong ', 'Si ', 'Nong ', 'Lei ', 'Xuan ', 'Yun ', 'Yu ', 'Xi ', 'Hao ', 'Bo ', 'Hao ', 'Ai ', 'Wei ', 'Hui ', 'Wei ', 'Ji ', 'Ci ', 'Xiang ', 'Luan ', 'Mie ', 'Yi ', 'Leng ', 'Jiang ', 'Can ', 'Shen ', 'Qiang ', 'Lian ', 'Ke ', 'Yuan ', 'Da ', 'Ti ', 'Tang ', 'Xie ', 'Bi ', 'Zhan ', 'Sun ', 'Lian ', 'Fan ', 'Ding ', 'Jie ', 'Gu ', 'Xie ', 'Shu ', 'Jian ', 'Kao ', 'Hong ', 'Sa ', 'Xin ', 'Xun ', 'Yao ', 'Hie ', 'Sou ', 'Shu ', 'Xun ', 'Dui ', 'Pin ', 'Wei ', 'Neng ', 'Chou ', 'Mai ', 'Ru ', 'Piao ', 'Tai ', 'Qi ', 'Zao ', 'Chen ', 'Zhen ', 'Er ', 'Ni ', 'Ying ', 'Gao ', 'Cong ', 'Xiao ', 'Qi ', 'Fa ', 'Jian ', 'Xu ', 'Kui ', 'Jie ', 'Bian ', 'Diao ', 'Mi ', 'Lan ', 'Jin ', 'Cang ', 'Miao ', 'Qiong ', 'Qie ', 'Xian ', '[?] ', 'Ou ', 'Xian ', 'Su ', 'Lu ', 'Yi ', 'Xu ', 'Xie ', 'Li ', 'Yi ', 'La ', 'Lei ', 'Xiao ', 'Di ', 'Zhi ', 'Bei ', 'Teng ', 'Yao ', 'Mo ', 'Huan ', 'Piao ', 'Fan ', 'Sou ', 'Tan ', 'Tui ', 'Qiong ', 'Qiao ', 'Wei ', 'Liu ', 'Hui ', '[?] ', 'Gao ', 'Yun ', '[?] ', 'Li ', 'Shu ', 'Chu ', 'Ai ', 'Lin ', 'Zao ', 'Xuan ', 'Chen ', 'Lai ', 'Huo '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x04f.php\",\"ext\":\"php\",\"size\":2051,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Zhong ', 'Qi ', 'Pei ', 'Yu ', 'Diao ', 'Dun ', 'Wen ', 'Yi ', 'Xin ', 'Kang ', 'Yi ', 'Ji ', 'Ai ', 'Wu ', 'Ji ', 'Fu ', 'Fa ', 'Xiu ', 'Jin ', 'Bei ', 'Dan ', 'Fu ', 'Tang ', 'Zhong ', 'You ', 'Huo ', 'Hui ', 'Yu ', 'Cui ', 'Chuan ', 'San ', 'Wei ', 'Chuan ', 'Che ', 'Ya ', 'Xian ', 'Shang ', 'Chang ', 'Lun ', 'Cang ', 'Xun ', 'Xin ', 'Wei ', 'Zhu ', '[?] ', 'Xuan ', 'Nu ', 'Bo ', 'Gu ', 'Ni ', 'Ni ', 'Xie ', 'Ban ', 'Xu ', 'Ling ', 'Zhou ', 'Shen ', 'Qu ', 'Si ', 'Beng ', 'Si ', 'Jia ', 'Pi ', 'Yi ', 'Si ', 'Ai ', 'Zheng ', 'Dian ', 'Han ', 'Mai ', 'Dan ', 'Zhu ', 'Bu ', 'Qu ', 'Bi ', 'Shao ', 'Ci ', 'Wei ', 'Di ', 'Zhu ', 'Zuo ', 'You ', 'Yang ', 'Ti ', 'Zhan ', 'He ', 'Bi ', 'Tuo ', 'She ', 'Yu ', 'Yi ', 'Fo ', 'Zuo ', 'Kou ', 'Ning ', 'Tong ', 'Ni ', 'Xuan ', 'Qu ', 'Yong ', 'Wa ', 'Qian ', '[?] ', 'Ka ', '[?] ', 'Pei ', 'Huai ', 'He ', 'Lao ', 'Xiang ', 'Ge ', 'Yang ', 'Bai ', 'Fa ', 'Ming ', 'Jia ', 'Er ', 'Bing ', 'Ji ', 'Hen ', 'Huo ', 'Gui ', 'Quan ', 'Tiao ', 'Jiao ', 'Ci ', 'Yi ', 'Shi ', 'Xing ', 'Shen ', 'Tuo ', 'Kan ', 'Zhi ', 'Gai ', 'Lai ', 'Yi ', 'Chi ', 'Kua ', 'Guang ', 'Li ', 'Yin ', 'Shi ', 'Mi ', 'Zhu ', 'Xu ', 'You ', 'An ', 'Lu ', 'Mou ', 'Er ', 'Lun ', 'Tong ', 'Cha ', 'Chi ', 'Xun ', 'Gong ', 'Zhou ', 'Yi ', 'Ru ', 'Jian ', 'Xia ', 'Jia ', 'Zai ', 'Lu ', 'Ko ', 'Jiao ', 'Zhen ', 'Ce ', 'Qiao ', 'Kuai ', 'Chai ', 'Ning ', 'Nong ', 'Jin ', 'Wu ', 'Hou ', 'Jiong ', 'Cheng ', 'Zhen ', 'Zuo ', 'Chou ', 'Qin ', 'Lu ', 'Ju ', 'Shu ', 'Ting ', 'Shen ', 'Tuo ', 'Bo ', 'Nan ', 'Hao ', 'Bian ', 'Tui ', 'Yu ', 'Xi ', 'Cu ', 'E ', 'Qiu ', 'Xu ', 'Kuang ', 'Ku ', 'Wu ', 'Jun ', 'Yi ', 'Fu ', 'Lang ', 'Zu ', 'Qiao ', 'Li ', 'Yong ', 'Hun ', 'Jing ', 'Xian ', 'San ', 'Pai ', 'Su ', 'Fu ', 'Xi ', 'Li ', 'Fu ', 'Ping ', 'Bao ', 'Yu ', 'Si ', 'Xia ', 'Xin ', 'Xiu ', 'Yu ', 'Ti ', 'Che ', 'Chou ', '[?] ', 'Yan ', 'Lia ', 'Li ', 'Lai ', '[?] ', 'Jian ', 'Xiu ', 'Fu ', 'He ', 'Ju ', 'Xiao ', 'Pai ', 'Jian ', 'Biao ', 'Chu ', 'Fei ', 'Feng ', 'Ya ', 'An ', 'Bei ', 'Yu ', 'Xin ', 'Bi ', 'Jian '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c1.php\",\"ext\":\"php\",\"size\":2209,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['syae', 'syaeg', 'syaegg', 'syaegs', 'syaen', 'syaenj', 'syaenh', 'syaed', 'syael', 'syaelg', 'syaelm', 'syaelb', 'syaels', 'syaelt', 'syaelp', 'syaelh', 'syaem', 'syaeb', 'syaebs', 'syaes', 'syaess', 'syaeng', 'syaej', 'syaec', 'syaek', 'syaet', 'syaep', 'syaeh', 'seo', 'seog', 'seogg', 'seogs', 'seon', 'seonj', 'seonh', 'seod', 'seol', 'seolg', 'seolm', 'seolb', 'seols', 'seolt', 'seolp', 'seolh', 'seom', 'seob', 'seobs', 'seos', 'seoss', 'seong', 'seoj', 'seoc', 'seok', 'seot', 'seop', 'seoh', 'se', 'seg', 'segg', 'segs', 'sen', 'senj', 'senh', 'sed', 'sel', 'selg', 'selm', 'selb', 'sels', 'selt', 'selp', 'selh', 'sem', 'seb', 'sebs', 'ses', 'sess', 'seng', 'sej', 'sec', 'sek', 'set', 'sep', 'seh', 'syeo', 'syeog', 'syeogg', 'syeogs', 'syeon', 'syeonj', 'syeonh', 'syeod', 'syeol', 'syeolg', 'syeolm', 'syeolb', 'syeols', 'syeolt', 'syeolp', 'syeolh', 'syeom', 'syeob', 'syeobs', 'syeos', 'syeoss', 'syeong', 'syeoj', 'syeoc', 'syeok', 'syeot', 'syeop', 'syeoh', 'sye', 'syeg', 'syegg', 'syegs', 'syen', 'syenj', 'syenh', 'syed', 'syel', 'syelg', 'syelm', 'syelb', 'syels', 'syelt', 'syelp', 'syelh', 'syem', 'syeb', 'syebs', 'syes', 'syess', 'syeng', 'syej', 'syec', 'syek', 'syet', 'syep', 'syeh', 'so', 'sog', 'sogg', 'sogs', 'son', 'sonj', 'sonh', 'sod', 'sol', 'solg', 'solm', 'solb', 'sols', 'solt', 'solp', 'solh', 'som', 'sob', 'sobs', 'sos', 'soss', 'song', 'soj', 'soc', 'sok', 'sot', 'sop', 'soh', 'swa', 'swag', 'swagg', 'swags', 'swan', 'swanj', 'swanh', 'swad', 'swal', 'swalg', 'swalm', 'swalb', 'swals', 'swalt', 'swalp', 'swalh', 'swam', 'swab', 'swabs', 'swas', 'swass', 'swang', 'swaj', 'swac', 'swak', 'swat', 'swap', 'swah', 'swae', 'swaeg', 'swaegg', 'swaegs', 'swaen', 'swaenj', 'swaenh', 'swaed', 'swael', 'swaelg', 'swaelm', 'swaelb', 'swaels', 'swaelt', 'swaelp', 'swaelh', 'swaem', 'swaeb', 'swaebs', 'swaes', 'swaess', 'swaeng', 'swaej', 'swaec', 'swaek', 'swaet', 'swaep', 'swaeh', 'soe', 'soeg', 'soegg', 'soegs', 'soen', 'soenj', 'soenh', 'soed', 'soel', 'soelg', 'soelm', 'soelb', 'soels', 'soelt', 'soelp', 'soelh', 'soem', 'soeb', 'soebs', 'soes', 'soess', 'soeng', 'soej', 'soec', 'soek', 'soet', 'soep', 'soeh', 'syo', 'syog', 'syogg', 'syogs'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x027.php\",\"ext\":\"php\",\"size\":1237,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '*', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '|n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x07e.php\",\"ext\":\"php\",\"size\":2126,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Xia ', 'Yuan ', 'Zong ', 'Xu ', 'Nawa ', 'Odoshi ', 'Geng ', 'Sen ', 'Ying ', 'Jin ', 'Yi ', 'Zhui ', 'Ni ', 'Bang ', 'Gu ', 'Pan ', 'Zhou ', 'Jian ', 'Cuo ', 'Quan ', 'Shuang ', 'Yun ', 'Xia ', 'Shuai ', 'Xi ', 'Rong ', 'Tao ', 'Fu ', 'Yun ', 'Zhen ', 'Gao ', 'Ru ', 'Hu ', 'Zai ', 'Teng ', 'Xian ', 'Su ', 'Zhen ', 'Zong ', 'Tao ', 'Horo ', 'Cai ', 'Bi ', 'Feng ', 'Cu ', 'Li ', 'Suo ', 'Yin ', 'Xi ', 'Zong ', 'Lei ', 'Zhuan ', 'Qian ', 'Man ', 'Zhi ', 'Lu ', 'Mo ', 'Piao ', 'Lian ', 'Mi ', 'Xuan ', 'Zong ', 'Ji ', 'Shan ', 'Sui ', 'Fan ', 'Shuai ', 'Beng ', 'Yi ', 'Sao ', 'Mou ', 'Zhou ', 'Qiang ', 'Hun ', 'Sem ', 'Xi ', 'Jung ', 'Xiu ', 'Ran ', 'Xuan ', 'Hui ', 'Qiao ', 'Zeng ', 'Zuo ', 'Zhi ', 'Shan ', 'San ', 'Lin ', 'Yu ', 'Fan ', 'Liao ', 'Chuo ', 'Zun ', 'Jian ', 'Rao ', 'Chan ', 'Rui ', 'Xiu ', 'Hui ', 'Hua ', 'Zuan ', 'Xi ', 'Qiang ', 'Un ', 'Da ', 'Sheng ', 'Hui ', 'Xi ', 'Se ', 'Jian ', 'Jiang ', 'Huan ', 'Zao ', 'Cong ', 'Jie ', 'Jiao ', 'Bo ', 'Chan ', 'Yi ', 'Nao ', 'Sui ', 'Yi ', 'Shai ', 'Xu ', 'Ji ', 'Bin ', 'Qian ', 'Lan ', 'Pu ', 'Xun ', 'Zuan ', 'Qi ', 'Peng ', 'Li ', 'Mo ', 'Lei ', 'Xie ', 'Zuan ', 'Kuang ', 'You ', 'Xu ', 'Lei ', 'Xian ', 'Chan ', 'Kou ', 'Lu ', 'Chan ', 'Ying ', 'Cai ', 'Xiang ', 'Xian ', 'Zui ', 'Zuan ', 'Luo ', 'Xi ', 'Dao ', 'Lan ', 'Lei ', 'Lian ', 'Si ', 'Jiu ', 'Yu ', 'Hong ', 'Zhou ', 'Xian ', 'He ', 'Yue ', 'Ji ', 'Wan ', 'Kuang ', 'Ji ', 'Ren ', 'Wei ', 'Yun ', 'Hong ', 'Chun ', 'Pi ', 'Sha ', 'Gang ', 'Na ', 'Ren ', 'Zong ', 'Lun ', 'Fen ', 'Zhi ', 'Wen ', 'Fang ', 'Zhu ', 'Yin ', 'Niu ', 'Shu ', 'Xian ', 'Gan ', 'Xie ', 'Fu ', 'Lian ', 'Zu ', 'Shen ', 'Xi ', 'Zhi ', 'Zhong ', 'Zhou ', 'Ban ', 'Fu ', 'Zhuo ', 'Shao ', 'Yi ', 'Jing ', 'Dai ', 'Bang ', 'Rong ', 'Jie ', 'Ku ', 'Rao ', 'Die ', 'Heng ', 'Hui ', 'Gei ', 'Xuan ', 'Jiang ', 'Luo ', 'Jue ', 'Jiao ', 'Tong ', 'Geng ', 'Xiao ', 'Juan ', 'Xiu ', 'Xi ', 'Sui ', 'Tao ', 'Ji ', 'Ti ', 'Ji ', 'Xu ', 'Ling ', '[?] ', 'Xu ', 'Qi ', 'Fei ', 'Chuo ', 'Zhang ', 'Gun ', 'Sheng ', 'Wei ', 'Mian ', 'Shou ', 'Beng ', 'Chou ', 'Tao ', 'Liu ', 'Quan ', 'Zong ', 'Zhan ', 'Wan ', 'Lu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x078.php\",\"ext\":\"php\",\"size\":2092,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Dang ', 'Ma ', 'Sha ', 'Dan ', 'Jue ', 'Li ', 'Fu ', 'Min ', 'Nuo ', 'Huo ', 'Kang ', 'Zhi ', 'Qi ', 'Kan ', 'Jie ', 'Fen ', 'E ', 'Ya ', 'Pi ', 'Zhe ', 'Yan ', 'Sui ', 'Zhuan ', 'Che ', 'Dun ', 'Pan ', 'Yan ', '[?] ', 'Feng ', 'Fa ', 'Mo ', 'Zha ', 'Qu ', 'Yu ', 'Luo ', 'Tuo ', 'Tuo ', 'Di ', 'Zhai ', 'Zhen ', 'Ai ', 'Fei ', 'Mu ', 'Zhu ', 'Li ', 'Bian ', 'Nu ', 'Ping ', 'Peng ', 'Ling ', 'Pao ', 'Le ', 'Po ', 'Bo ', 'Po ', 'Shen ', 'Za ', 'Nuo ', 'Li ', 'Long ', 'Tong ', '[?] ', 'Li ', 'Aragane ', 'Chu ', 'Keng ', 'Quan ', 'Zhu ', 'Kuang ', 'Huo ', 'E ', 'Nao ', 'Jia ', 'Lu ', 'Wei ', 'Ai ', 'Luo ', 'Ken ', 'Xing ', 'Yan ', 'Tong ', 'Peng ', 'Xi ', '[?] ', 'Hong ', 'Shuo ', 'Xia ', 'Qiao ', '[?] ', 'Wei ', 'Qiao ', '[?] ', 'Keng ', 'Xiao ', 'Que ', 'Chan ', 'Lang ', 'Hong ', 'Yu ', 'Xiao ', 'Xia ', 'Mang ', 'Long ', 'Iong ', 'Che ', 'Che ', 'E ', 'Liu ', 'Ying ', 'Mang ', 'Que ', 'Yan ', 'Sha ', 'Kun ', 'Yu ', '[?] ', 'Kaki ', 'Lu ', 'Chen ', 'Jian ', 'Nue ', 'Song ', 'Zhuo ', 'Keng ', 'Peng ', 'Yan ', 'Zhui ', 'Kong ', 'Ceng ', 'Qi ', 'Zong ', 'Qing ', 'Lin ', 'Jun ', 'Bo ', 'Ding ', 'Min ', 'Diao ', 'Jian ', 'He ', 'Lu ', 'Ai ', 'Sui ', 'Que ', 'Ling ', 'Bei ', 'Yin ', 'Dui ', 'Wu ', 'Qi ', 'Lun ', 'Wan ', 'Dian ', 'Gang ', 'Pei ', 'Qi ', 'Chen ', 'Ruan ', 'Yan ', 'Die ', 'Ding ', 'Du ', 'Tuo ', 'Jie ', 'Ying ', 'Bian ', 'Ke ', 'Bi ', 'Wei ', 'Shuo ', 'Zhen ', 'Duan ', 'Xia ', 'Dang ', 'Ti ', 'Nao ', 'Peng ', 'Jian ', 'Di ', 'Tan ', 'Cha ', 'Seki ', 'Qi ', '[?] ', 'Feng ', 'Xuan ', 'Que ', 'Que ', 'Ma ', 'Gong ', 'Nian ', 'Su ', 'E ', 'Ci ', 'Liu ', 'Si ', 'Tang ', 'Bang ', 'Hua ', 'Pi ', 'Wei ', 'Sang ', 'Lei ', 'Cuo ', 'Zhen ', 'Xia ', 'Qi ', 'Lian ', 'Pan ', 'Wei ', 'Yun ', 'Dui ', 'Zhe ', 'Ke ', 'La ', '[?] ', 'Qing ', 'Gun ', 'Zhuan ', 'Chan ', 'Qi ', 'Ao ', 'Peng ', 'Lu ', 'Lu ', 'Kan ', 'Qiang ', 'Chen ', 'Yin ', 'Lei ', 'Biao ', 'Qi ', 'Mo ', 'Qi ', 'Cui ', 'Zong ', 'Qing ', 'Chuo ', '[?] ', 'Ji ', 'Shan ', 'Lao ', 'Qu ', 'Zeng ', 'Deng ', 'Jian ', 'Xi ', 'Lin ', 'Ding ', 'Dian ', 'Huang ', 'Pan ', 'Za ', 'Qiao ', 'Di ', 'Li '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x09f.php\",\"ext\":\"php\",\"size\":1963,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Cu ', 'Qu ', 'Chao ', 'Wa ', 'Zhu ', 'Zhi ', 'Mang ', 'Ao ', 'Bie ', 'Tuo ', 'Bi ', 'Yuan ', 'Chao ', 'Tuo ', 'Ding ', 'Mi ', 'Nai ', 'Ding ', 'Zi ', 'Gu ', 'Gu ', 'Dong ', 'Fen ', 'Tao ', 'Yuan ', 'Pi ', 'Chang ', 'Gao ', 'Qi ', 'Yuan ', 'Tang ', 'Teng ', 'Shu ', 'Shu ', 'Fen ', 'Fei ', 'Wen ', 'Ba ', 'Diao ', 'Tuo ', 'Tong ', 'Qu ', 'Sheng ', 'Shi ', 'You ', 'Shi ', 'Ting ', 'Wu ', 'Nian ', 'Jing ', 'Hun ', 'Ju ', 'Yan ', 'Tu ', 'Ti ', 'Xi ', 'Xian ', 'Yan ', 'Lei ', 'Bi ', 'Yao ', 'Qiu ', 'Han ', 'Wu ', 'Wu ', 'Hou ', 'Xi ', 'Ge ', 'Zha ', 'Xiu ', 'Weng ', 'Zha ', 'Nong ', 'Nang ', 'Qi ', 'Zhai ', 'Ji ', 'Zi ', 'Ji ', 'Ji ', 'Qi ', 'Ji ', 'Chi ', 'Chen ', 'Chen ', 'He ', 'Ya ', 'Ken ', 'Xie ', 'Pao ', 'Cuo ', 'Shi ', 'Zi ', 'Chi ', 'Nian ', 'Ju ', 'Tiao ', 'Ling ', 'Ling ', 'Chu ', 'Quan ', 'Xie ', 'Ken ', 'Nie ', 'Jiu ', 'Yao ', 'Chuo ', 'Kun ', 'Yu ', 'Chu ', 'Yi ', 'Ni ', 'Cuo ', 'Zou ', 'Qu ', 'Nen ', 'Xian ', 'Ou ', 'E ', 'Wo ', 'Yi ', 'Chuo ', 'Zou ', 'Dian ', 'Chu ', 'Jin ', 'Ya ', 'Chi ', 'Chen ', 'He ', 'Ken ', 'Ju ', 'Ling ', 'Pao ', 'Tiao ', 'Zi ', 'Ken ', 'Yu ', 'Chuo ', 'Qu ', 'Wo ', 'Long ', 'Pang ', 'Gong ', 'Pang ', 'Yan ', 'Long ', 'Long ', 'Gong ', 'Kan ', 'Ta ', 'Ling ', 'Ta ', 'Long ', 'Gong ', 'Kan ', 'Gui ', 'Qiu ', 'Bie ', 'Gui ', 'Yue ', 'Chui ', 'He ', 'Jue ', 'Xie ', 'Yun\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c0.php\",\"ext\":\"php\",\"size\":2300,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['bbweok', 'bbweot', 'bbweop', 'bbweoh', 'bbwe', 'bbweg', 'bbwegg', 'bbwegs', 'bbwen', 'bbwenj', 'bbwenh', 'bbwed', 'bbwel', 'bbwelg', 'bbwelm', 'bbwelb', 'bbwels', 'bbwelt', 'bbwelp', 'bbwelh', 'bbwem', 'bbweb', 'bbwebs', 'bbwes', 'bbwess', 'bbweng', 'bbwej', 'bbwec', 'bbwek', 'bbwet', 'bbwep', 'bbweh', 'bbwi', 'bbwig', 'bbwigg', 'bbwigs', 'bbwin', 'bbwinj', 'bbwinh', 'bbwid', 'bbwil', 'bbwilg', 'bbwilm', 'bbwilb', 'bbwils', 'bbwilt', 'bbwilp', 'bbwilh', 'bbwim', 'bbwib', 'bbwibs', 'bbwis', 'bbwiss', 'bbwing', 'bbwij', 'bbwic', 'bbwik', 'bbwit', 'bbwip', 'bbwih', 'bbyu', 'bbyug', 'bbyugg', 'bbyugs', 'bbyun', 'bbyunj', 'bbyunh', 'bbyud', 'bbyul', 'bbyulg', 'bbyulm', 'bbyulb', 'bbyuls', 'bbyult', 'bbyulp', 'bbyulh', 'bbyum', 'bbyub', 'bbyubs', 'bbyus', 'bbyuss', 'bbyung', 'bbyuj', 'bbyuc', 'bbyuk', 'bbyut', 'bbyup', 'bbyuh', 'bbeu', 'bbeug', 'bbeugg', 'bbeugs', 'bbeun', 'bbeunj', 'bbeunh', 'bbeud', 'bbeul', 'bbeulg', 'bbeulm', 'bbeulb', 'bbeuls', 'bbeult', 'bbeulp', 'bbeulh', 'bbeum', 'bbeub', 'bbeubs', 'bbeus', 'bbeuss', 'bbeung', 'bbeuj', 'bbeuc', 'bbeuk', 'bbeut', 'bbeup', 'bbeuh', 'bbyi', 'bbyig', 'bbyigg', 'bbyigs', 'bbyin', 'bbyinj', 'bbyinh', 'bbyid', 'bbyil', 'bbyilg', 'bbyilm', 'bbyilb', 'bbyils', 'bbyilt', 'bbyilp', 'bbyilh', 'bbyim', 'bbyib', 'bbyibs', 'bbyis', 'bbyiss', 'bbying', 'bbyij', 'bbyic', 'bbyik', 'bbyit', 'bbyip', 'bbyih', 'bbi', 'bbig', 'bbigg', 'bbigs', 'bbin', 'bbinj', 'bbinh', 'bbid', 'bbil', 'bbilg', 'bbilm', 'bbilb', 'bbils', 'bbilt', 'bbilp', 'bbilh', 'bbim', 'bbib', 'bbibs', 'bbis', 'bbiss', 'bbing', 'bbij', 'bbic', 'bbik', 'bbit', 'bbip', 'bbih', 'sa', 'sag', 'sagg', 'sags', 'san', 'sanj', 'sanh', 'sad', 'sal', 'salg', 'salm', 'salb', 'sals', 'salt', 'salp', 'salh', 'sam', 'sab', 'sabs', 'sas', 'sass', 'sang', 'saj', 'sac', 'sak', 'sat', 'sap', 'sah', 'sae', 'saeg', 'saegg', 'saegs', 'saen', 'saenj', 'saenh', 'saed', 'sael', 'saelg', 'saelm', 'saelb', 'saels', 'saelt', 'saelp', 'saelh', 'saem', 'saeb', 'saebs', 'saes', 'saess', 'saeng', 'saej', 'saec', 'saek', 'saet', 'saep', 'saeh', 'sya', 'syag', 'syagg', 'syags', 'syan', 'syanj', 'syanh', 'syad', 'syal', 'syalg', 'syalm', 'syalb', 'syals', 'syalt', 'syalp', 'syalh', 'syam', 'syab', 'syabs', 'syas', 'syass', 'syang', 'syaj', 'syac', 'syak', 'syat', 'syap', 'syah'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x061.php\",\"ext\":\"php\",\"size\":2106,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Qiao ', 'Chou ', 'Bei ', 'Xuan ', 'Wei ', 'Ge ', 'Qian ', 'Wei ', 'Yu ', 'Yu ', 'Bi ', 'Xuan ', 'Huan ', 'Min ', 'Bi ', 'Yi ', 'Mian ', 'Yong ', 'Kai ', 'Dang ', 'Yin ', 'E ', 'Chen ', 'Mou ', 'Ke ', 'Ke ', 'Yu ', 'Ai ', 'Qie ', 'Yan ', 'Nuo ', 'Gan ', 'Yun ', 'Zong ', 'Sai ', 'Leng ', 'Fen ', '[?] ', 'Kui ', 'Kui ', 'Que ', 'Gong ', 'Yun ', 'Su ', 'Su ', 'Qi ', 'Yao ', 'Song ', 'Huang ', 'Ji ', 'Gu ', 'Ju ', 'Chuang ', 'Ni ', 'Xie ', 'Kai ', 'Zheng ', 'Yong ', 'Cao ', 'Sun ', 'Shen ', 'Bo ', 'Kai ', 'Yuan ', 'Xie ', 'Hun ', 'Yong ', 'Yang ', 'Li ', 'Sao ', 'Tao ', 'Yin ', 'Ci ', 'Xu ', 'Qian ', 'Tai ', 'Huang ', 'Yun ', 'Shen ', 'Ming ', '[?] ', 'She ', 'Cong ', 'Piao ', 'Mo ', 'Mu ', 'Guo ', 'Chi ', 'Can ', 'Can ', 'Can ', 'Cui ', 'Min ', 'Te ', 'Zhang ', 'Tong ', 'Ao ', 'Shuang ', 'Man ', 'Guan ', 'Que ', 'Zao ', 'Jiu ', 'Hui ', 'Kai ', 'Lian ', 'Ou ', 'Song ', 'Jin ', 'Yin ', 'Lu ', 'Shang ', 'Wei ', 'Tuan ', 'Man ', 'Qian ', 'She ', 'Yong ', 'Qing ', 'Kang ', 'Di ', 'Zhi ', 'Lou ', 'Juan ', 'Qi ', 'Qi ', 'Yu ', 'Ping ', 'Liao ', 'Cong ', 'You ', 'Chong ', 'Zhi ', 'Tong ', 'Cheng ', 'Qi ', 'Qu ', 'Peng ', 'Bei ', 'Bie ', 'Chun ', 'Jiao ', 'Zeng ', 'Chi ', 'Lian ', 'Ping ', 'Kui ', 'Hui ', 'Qiao ', 'Cheng ', 'Yin ', 'Yin ', 'Xi ', 'Xi ', 'Dan ', 'Tan ', 'Duo ', 'Dui ', 'Dui ', 'Su ', 'Jue ', 'Ce ', 'Xiao ', 'Fan ', 'Fen ', 'Lao ', 'Lao ', 'Chong ', 'Han ', 'Qi ', 'Xian ', 'Min ', 'Jing ', 'Liao ', 'Wu ', 'Can ', 'Jue ', 'Cu ', 'Xian ', 'Tan ', 'Sheng ', 'Pi ', 'Yi ', 'Chu ', 'Xian ', 'Nao ', 'Dan ', 'Tan ', 'Jing ', 'Song ', 'Han ', 'Jiao ', 'Wai ', 'Huan ', 'Dong ', 'Qin ', 'Qin ', 'Qu ', 'Cao ', 'Ken ', 'Xie ', 'Ying ', 'Ao ', 'Mao ', 'Yi ', 'Lin ', 'Se ', 'Jun ', 'Huai ', 'Men ', 'Lan ', 'Ai ', 'Lin ', 'Yan ', 'Gua ', 'Xia ', 'Chi ', 'Yu ', 'Yin ', 'Dai ', 'Meng ', 'Ai ', 'Meng ', 'Dui ', 'Qi ', 'Mo ', 'Lan ', 'Men ', 'Chou ', 'Zhi ', 'Nuo ', 'Nuo ', 'Yan ', 'Yang ', 'Bo ', 'Zhi ', 'Kuang ', 'Kuang ', 'You ', 'Fu ', 'Liu ', 'Mie ', 'Cheng ', '[?] ', 'Chan ', 'Meng ', 'Lan ', 'Huai ', 'Xuan ', 'Rang ', 'Chan ', 'Ji ', 'Ju ', 'Huan ', 'She ', 'Yi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/ascii_by_languages.php\",\"ext\":\"php\",\"size\":67689,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\n\/\/ https:\/\/en.wikipedia.org\/wiki\/List_of_ISO_639-1_codes\\n\\nreturn [\\n    \/\/ Dutch (Flemish)\\n    'nl' => [\\n        '\u00c1' => 'A',\\n        '\u00e1' => 'a',\\n        '\u00c4' => 'A',\\n        '\u00e4' => 'a',\\n        '\u00c0' => 'A',\\n        '\u00e0' => 'a',\\n        '\u00c2' => 'A',\\n        '\u00e2' => 'a',\\n        '\u00c9' => 'E',\\n        '\u00e9' => 'e',\\n        '\u00cb' => 'E',\\n        '\u00eb' => 'e',\\n        '\u00c8' => 'E',\\n        '\u00e8' => 'e',\\n        '\u00ca' => 'E',\\n        '\u00ea' => 'e',\\n        '\u00cd' => 'I',\\n        '\u00ed' => 'i',\\n        '\u00cf' => 'I',\\n        '\u00ef' => 'i',\\n        '\u00cc' => 'I',\\n        '\u00ec' => 'i',\\n        '\u00ce' => 'I',\\n        '\u00ee' => 'i',\\n        '\u00d3' => 'O',\\n        '\u00f3' => 'o',\\n        '\u00d6' => 'O',\\n        '\u00f6' => 'o',\\n        '\u00d2' => 'O',\\n        '\u00f2' => 'o',\\n        '\u00d4' => 'O',\\n        '\u00f4' => 'o',\\n        '\u00da' => 'U',\\n        '\u00fa' => 'u',\\n        '\u00dc' => 'U',\\n        '\u00fc' => 'u',\\n        '\u00d9' => 'U',\\n        '\u00f9' => 'u',\\n        '\u00db' => 'U',\\n        '\u00fb' => 'u',\\n        '\u00dd' => 'Y',\\n        '\u00fd' => 'y',\\n        '\u0178' => 'Y',\\n    ],\\n    \/\/ Italian\\n    'it' => [\\n        '\u00e0' => 'a',\\n        '\u00c0' => 'A',\\n        '\u00e9' => 'e',\\n        '\u00c9' => 'E',\\n        '\u00e8' => 'e',\\n        '\u00c8' => 'E',\\n        '\u00ec' => 'i',\\n        '\u00cc' => 'I',\\n        '\u00d2' => 'O',\\n        '\u00f2' => 'o',\\n        '\u00f9' => 'u',\\n        '\u00d9' => 'U',\\n    ],\\n    \/\/ Macedonian\\n    'mk' => [\\n        '\u0410' => 'A',\\n        '\u0411' => 'B',\\n        '\u0412' => 'V',\\n        '\u0413' => 'G',\\n        '\u0414' => 'D',\\n        '\u0403' => 'Gj',\\n        '\u0415' => 'E',\\n        '\u0416' => 'Zh',\\n        '\u0417' => 'Z',\\n        '\u0405' => 'Dz',\\n        '\u0418' => 'I',\\n        '\u0408' => 'J',\\n        '\u041a' => 'K',\\n        '\u041b' => 'L',\\n        '\u0409' => 'Lj',\\n        '\u041c' => 'M',\\n        '\u041d' => 'N',\\n        '\u040a' => 'Nj',\\n        '\u041e' => 'O',\\n        '\u041f' => 'P',\\n        '\u0420' => 'R',\\n        '\u0421' => 'S',\\n        '\u0422' => 'T',\\n        '\u040c' => 'Kj',\\n        '\u0423' => 'U',\\n        '\u0424' => 'F',\\n        '\u0425' => 'H',\\n        '\u0426' => 'C',\\n        '\u0427' => 'Ch',\\n        '\u040f' => 'Dj',\\n        '\u0428' => 'Sh',\\n        '\u0430' => 'a',\\n        '\u0431' => 'b',\\n        '\u0432' => 'v',\\n        '\u0433' => 'g',\\n        '\u0434' => 'd',\\n        '\u0453' => 'gj',\\n        '\u0435' => 'e',\\n        '\u0436' => 'zh',\\n        '\u0437' => 'z',\\n        '\u0455' => 'dz',\\n        '\u0438' => 'i',\\n        '\u0458' => 'j',\\n        '\u043a' => 'k',\\n        '\u043b' => 'l',\\n        '\u0459' => 'lj',\\n        '\u043c' => 'm',\\n        '\u043d' => 'n',\\n        '\u045a' => 'nj',\\n        '\u043e' => 'o',\\n        '\u043f' => 'p',\\n        '\u0440' => 'r',\\n        '\u0441' => 's',\\n        '\u0442' => 't',\\n        '\u045c' => 'kj',\\n        '\u0443' => 'u',\\n        '\u0444' => 'f',\\n        '\u0445' => 'h',\\n        '\u0446' => 'c',\\n        '\u0447' => 'ch',\\n        '\u045f' => 'dj',\\n        '\u0448' => 'sh',\\n    ],\\n    \/\/ Portuguese (Brazil)\\n    'pt' => [\\n        '\u00e6' => 'ae',\\n        '\u01fd' => 'ae',\\n        '\u00c0' => 'A',\\n        '\u00c1' => 'A',\\n        '\u00c2' => 'A',\\n        '\u00c3' => 'A',\\n        '\u00c5' => 'AA',\\n        '\u01fa' => 'A',\\n        '\u0102' => 'A',\\n        '\u01cd' => 'A',\\n        '\u00c6' => 'AE',\\n        '\u01fc' => 'AE',\\n        '\u00e0' => 'a',\\n        '\u00e1' => 'a',\\n        '\u00e2' => 'a',\\n        '\u00e3' => 'a',\\n        '\u00e5' => 'aa',\\n        '\u01fb' => 'a',\\n        '\u0103' => 'a',\\n        '\u01ce' => 'a',\\n        '\u00aa' => 'a',\\n        '\u0108' => 'C',\\n        '\u010a' => 'C',\\n        '\u00c7' => 'C',\\n        '\u00e7' => 'c',\\n        '\u0109' => 'c',\\n        '\u010b' => 'c',\\n        '\u00d0' => 'Dj',\\n        '\u0110' => 'D',\\n        '\u00f0' => 'dj',\\n        '\u0111' => 'd',\\n        '\u00c8' => 'E',\\n        '\u00c9' => 'E',\\n        '\u00ca' => 'E',\\n        '\u00cb' => 'E',\\n        '\u0114' => 'E',\\n        '\u0116' => 'E',\\n        '\u00e8' => 'e',\\n        '\u00e9' => 'e',\\n        '\u00ea' => 'e',\\n        '\u00eb' => 'e',\\n        '\u0115' => 'e',\\n        '\u0117' => 'e',\\n        '\u0192' => 'f',\\n        '\u011c' => 'G',\\n        '\u0120' => 'G',\\n        '\u011d' => 'g',\\n        '\u0121' => 'g',\\n        '\u0124' => 'H',\\n        '\u0126' => 'H',\\n        '\u0125' => 'h',\\n        '\u0127' => 'h',\\n        '\u00cc' => 'I',\\n        '\u00cd' => 'I',\\n        '\u00ce' => 'I',\\n        '\u00cf' => 'I',\\n        '\u0128' => 'I',\\n        '\u012c' => 'I',\\n        '\u01cf' => 'I',\\n        '\u012e' => 'I',\\n        '\u0132' => 'IJ',\\n        '\u00ec' => 'i',\\n        '\u00ed' => 'i',\\n        '\u00ee' => 'i',\\n        '\u00ef' => 'i',\\n        '\u0129' => 'i',\\n        '\u012d' => 'i',\\n        '\u01d0' => 'i',\\n        '\u012f' => 'i',\\n        '\u0133' => 'ij',\\n        '\u0134' => 'J',\\n        '\u0135' => 'j',\\n        '\u0139' => 'L',\\n        '\u013d' => 'L',\\n        '\u013f' => 'L',\\n        '\u013a' => 'l',\\n        '\u013e' => 'l',\\n        '\u0140' => 'l',\\n        '\u00d1' => 'N',\\n        '\u00f1' => 'n',\\n        '\u0149' => 'n',\\n        '\u00d2' => 'O',\\n        '\u00d3' => 'O',\\n        '\u00d4' => 'O',\\n        '\u00d5' => 'O',\\n        '\u014c' => 'O',\\n        '\u014e' => 'O',\\n        '\u01d1' => 'O',\\n        '\u0150' => 'O',\\n        '\u01a0' => 'O',\\n        '\u00d8' => 'OE',\\n        '\u01fe' => 'O',\\n        '\u0152' => 'OE',\\n        '\u00f2' => 'o',\\n        '\u00f3' => 'o',\\n        '\u00f4' => 'o',\\n        '\u00f5' => 'o',\\n        '\u014d' => 'o',\\n        '\u014f' => 'o',\\n        '\u01d2' => 'o',\\n        '\u0151' => 'o',\\n        '\u01a1' => 'o',\\n        '\u00f8' => 'oe',\\n        '\u01ff' => 'o',\\n        '\u00ba' => 'o',\\n        '\u0153' => 'oe',\\n        '\u0154' => 'R',\\n        '\u0156' => 'R',\\n        '\u0155' => 'r',\\n        '\u0157' => 'r',\\n        '\u015c' => 'S',\\n        '\u0218' => 'S',\\n        '\u015d' => 's',\\n        '\u0219' => 's',\\n        '\u017f' => 's',\\n        '\u0162' => 'T',\\n        '\u021a' => 'T',\\n        '\u0166' => 'T',\\n        '\u00de' => 'TH',\\n        '\u0163' => 't',\\n        '\u021b' => 't',\\n        '\u0167' => 't',\\n        '\u00fe' => 'th',\\n        '\u00d9' => 'U',\\n        '\u00da' => 'U',\\n        '\u00db' => 'U',\\n        '\u00dc' => 'U',\\n        '\u0168' => 'U',\\n        '\u016c' => 'U',\\n        '\u0170' => 'U',\\n        '\u0172' => 'U',\\n        '\u01af' => 'U',\\n        '\u01d3' => 'U',\\n        '\u01d5' => 'U',\\n        '\u01d7' => 'U',\\n        '\u01d9' => 'U',\\n        '\u01db' => 'U',\\n        '\u00f9' => 'u',\\n        '\u00fa' => 'u',\\n        '\u00fb' => 'u',\\n        '\u00fc' => 'u',\\n        '\u0169' => 'u',\\n        '\u016d' => 'u',\\n        '\u0171' => 'u',\\n        '\u0173' => 'u',\\n        '\u01b0' => 'u',\\n        '\u01d4' => 'u',\\n        '\u01d6' => 'u',\\n        '\u01d8' => 'u',\\n        '\u01da' => 'u',\\n        '\u01dc' => 'u',\\n        '\u0174' => 'W',\\n        '\u0175' => 'w',\\n        '\u00dd' => 'Y',\\n        '\u0178' => 'Y',\\n        '\u0176' => 'Y',\\n        '\u00fd' => 'y',\\n        '\u00ff' => 'y',\\n        '\u0177' => 'y',\\n    ],\\n    \/\/ Greek(lish) (Ell\u00e1da)\\n    'el__greeklish' => [\\n        '\u0391\u03a5' => 'AU',\\n        '\u0391\u038e' => 'AU',\\n        '\u0391\u03c5' => 'Au',\\n        '\u0391\u03cd' => 'Au',\\n        '\u0395\u038a' => 'EI',\\n        '\u0395\u0399' => 'EI',\\n        '\u0395\u03b9' => 'EI',\\n        '\u0395\u03a5' => 'EU',\\n        '\u0395\u038e' => 'EU',\\n        '\u0395\u03af' => 'Ei',\\n        '\u0395\u03c5' => 'Eu',\\n        '\u0395\u03cd' => 'Eu',\\n        '\u039f\u0399' => 'OI',\\n        '\u039f\u038a' => 'OI',\\n        '\u039f\u03a5' => 'OU',\\n        '\u039f\u038e' => 'OU',\\n        '\u039f\u03b9' => 'Oi',\\n        '\u039f\u03af' => 'Oi',\\n        '\u039f\u03c5' => 'Ou',\\n        '\u039f\u03cd' => 'Ou',\\n        '\u03a5\u0399' => 'YI',\\n        '\u038e\u0399' => 'YI',\\n        '\u03a5\u03b9' => 'Yi',\\n        '\u038e\u03b9' => 'Yi',\\n        '\u03a5\u038a' => 'Yi',\\n        '\u03a5\u03af' => 'Yi',\\n        '\u03b1\u03c5' => 'au',\\n        '\u03b1\u03cd' => 'au',\\n        '\u03b5\u03af' => 'ei',\\n        '\u03b5\u03b9' => 'ei',\\n        '\u03b5\u03c5' => 'eu',\\n        '\u03b5\u03cd' => 'eu',\\n        '\u03bf\u03b9' => 'oi',\\n        '\u03bf\u03af' => 'oi',\\n        '\u03bf\u03c5' => 'ou',\\n        '\u03bf\u03cd' => 'ou',\\n        '\u03c5\u03b9' => 'yi',\\n        '\u03cd\u03b9' => 'yi',\\n        '\u03c5\u03af' => 'yi',\\n        '\u0391'  => 'A',\\n        '\u0386'  => 'A',\\n        '\u0392'  => 'B',\\n        '\u0394'  => 'D',\\n        '\u0395'  => 'E',\\n        '\u0388'  => 'E',\\n        '\u03a6'  => 'F',\\n        '\u0393'  => 'G',\\n        '\u0397'  => 'H',\\n        '\u0389'  => 'H',\\n        '\u0399'  => 'I',\\n        '\u038a'  => 'I',\\n        '\u03aa'  => 'I',\\n        '\u039a'  => 'K',\\n        '\u039e'  => 'Ks',\\n        '\u039b'  => 'L',\\n        '\u039c'  => 'M',\\n        '\u039d'  => 'N',\\n        '\u03a0'  => 'N',\\n        '\u039f'  => 'O',\\n        '\u038c'  => 'O',\\n        '\u03a8'  => 'Ps',\\n        '\u03a1'  => 'R',\\n        '\u03a3'  => 'S',\\n        '\u03a4'  => 'T',\\n        '\u0398'  => 'Th',\\n        '\u03a9'  => 'W',\\n        '\u038f'  => 'W',\\n        '\u03a7'  => 'X',\\n        '\u03d2'  => 'Y',\\n        '\u03a5'  => 'Y',\\n        '\u038e'  => 'Y',\\n        '\u03ab'  => 'Y',\\n        '\u0396'  => 'Z',\\n        '\u03b1'  => 'a',\\n        '\u03ac'  => 'a',\\n        '\u03b2'  => 'b',\\n        '\u03b4'  => 'd',\\n        '\u03b5'  => 'e',\\n        '\u03ad'  => 'e',\\n        '\u03c6'  => 'f',\\n        '\u03b3'  => 'g',\\n        '\u03b7'  => 'h',\\n        '\u03ae'  => 'h',\\n        '\u03b9'  => 'i',\\n        '\u03af'  => 'i',\\n        '\u03ca'  => 'i',\\n        '\u0390'  => 'i',\\n        '\u03ba'  => 'k',\\n        '\u03be'  => 'ks',\\n        '\u03bb'  => 'l',\\n        '\u03bc'  => 'm',\\n        '\u03bd'  => 'n',\\n        '\u03bf'  => 'o',\\n        '\u03cc'  => 'o',\\n        '\u03c0'  => 'p',\\n        '\u03c8'  => 'ps',\\n        '\u03c1'  => 'r',\\n        '\u03c3'  => 's',\\n        '\u03c2'  => 's',\\n        '\u03c4'  => 't',\\n        '\u03d1'  => 'th',\\n        '\u03b8'  => 'th',\\n        '\u03d0'  => 'v',\\n        '\u03c9'  => 'w',\\n        '\u03ce'  => 'w',\\n        '\u03c7'  => 'x',\\n        '\u03c5'  => 'y',\\n        '\u03cd'  => 'y',\\n        '\u03b0'  => 'y',\\n        '\u03cb'  => 'y',\\n        '\u03b6'  => 'z',\\n    ],\\n    \/\/ Greek (Ell\u00e1da)\\n    'el' => [\\n        '\u0391\u03a5' => 'AU',\\n        '\u0391\u03c5' => 'Au',\\n        '\u039f\u03a5' => 'U',\\n        '\u039f\u03c5' => 'u',\\n        '\u0395\u03a5' => 'EF',\\n        '\u0395\u03c5' => 'Ef',\\n        '\u0395\u0399' => 'I',\\n        '\u0395\u03b9' => 'I',\\n        '\u039f\u0399' => 'I',\\n        '\u039f\u03b9' => 'I',\\n        '\u03a5\u0399' => 'I',\\n        '\u03a5\u03b9' => 'I',\\n        '\u0391\u038e' => 'AU',\\n        '\u0391\u03cd' => 'Au',\\n        '\u039f\u038e' => 'OU',\\n        '\u039f\u03cd' => 'Ou',\\n        '\u0395\u038e' => 'EU',\\n        '\u0395\u03cd' => 'Eu',\\n        '\u0395\u038a' => 'I',\\n        '\u0395\u03af' => 'I',\\n        '\u039f\u038a' => 'I',\\n        '\u039f\u03af' => 'I',\\n        '\u038e\u0399' => 'I',\\n        '\u038e\u03b9' => 'I',\\n        '\u03a5\u038a' => 'I',\\n        '\u03a5\u03af' => 'I',\\n        '\u03b1\u03c5' => 'au',\\n        '\u03bf\u03c5' => 'u',\\n        '\u03b5\u03c5' => 'ef',\\n        '\u03b5\u03b9' => 'i',\\n        '\u03bf\u03b9' => 'i',\\n        '\u03c5\u03b9' => 'i',\\n        '\u03b1\u03cd' => 'au',\\n        '\u03bf\u03cd' => 'ou',\\n        '\u03b5\u03cd' => 'eu',\\n        '\u03b5\u03af' => 'i',\\n        '\u03bf\u03af' => 'i',\\n        '\u03cd\u03b9' => 'i',\\n        '\u03c5\u03af' => 'i',\\n        '\u03b1'  => 'a',\\n        '\u03b2'  => 'v',\\n        '\u03b3'  => 'gh',\\n        '\u03b4'  => 'd',\\n        '\u03b5'  => 'e',\\n        '\u03b6'  => 'z',\\n        '\u03b7'  => 'i',\\n        '\u03b8'  => 'th',\\n        '\u03b9'  => 'i',\\n        '\u03ba'  => 'k',\\n        '\u03bb'  => 'l',\\n        '\u03bc'  => 'm',\\n        '\u03bd'  => 'n',\\n        '\u03be'  => 'ks',\\n        '\u03bf'  => 'o',\\n        '\u03c0'  => 'p',\\n        '\u03c1'  => 'r',\\n        '\u03c3'  => 's',\\n        '\u03c4'  => 't',\\n        '\u03c5'  => 'i',\\n        '\u03c6'  => 'f',\\n        '\u03c7'  => 'kh',\\n        '\u03c8'  => 'ps',\\n        '\u03c9'  => 'o',\\n        '\u03ac'  => 'a',\\n        '\u03ad'  => 'e',\\n        '\u03af'  => 'i',\\n        '\u03cc'  => 'o',\\n        '\u03d2'  => 'Y',\\n        '\u03cd'  => 'y',\\n        '\u03ae'  => 'i',\\n        '\u03ce'  => 'w',\\n        '\u03c2'  => 's',\\n        '\u03ca'  => 'i',\\n        '\u03b0'  => 'y',\\n        '\u03cb'  => 'y',\\n        '\u0390'  => 'i',\\n        '\u0391'  => 'A',\\n        '\u0392'  => 'B',\\n        '\u0393'  => 'G',\\n        '\u0394'  => 'D',\\n        '\u0395'  => 'E',\\n        '\u0396'  => 'Z',\\n        '\u0397'  => 'H',\\n        '\u0398'  => 'Th',\\n        '\u0399'  => 'I',\\n        '\u039a'  => 'K',\\n        '\u039b'  => 'L',\\n        '\u039c'  => 'M',\\n        '\u039d'  => 'N',\\n        '\u039e'  => 'Ks',\\n        '\u039f'  => 'O',\\n        '\u03a0'  => 'P',\\n        '\u03a1'  => 'R',\\n        '\u03a3'  => 'S',\\n        '\u03a4'  => 'T',\\n        '\u03a5'  => 'Y',\\n        '\u03a6'  => 'F',\\n        '\u03a7'  => 'X',\\n        '\u03a8'  => 'Ps',\\n        '\u03a9'  => 'O',\\n        '\u0386'  => 'A',\\n        '\u0388'  => 'E',\\n        '\u038a'  => 'I',\\n        '\u038c'  => 'O',\\n        '\u038e'  => 'Y',\\n        '\u0389'  => 'I',\\n        '\u038f'  => 'W',\\n        '\u03aa'  => 'I',\\n        '\u03ab'  => 'Y',\\n        '\u03d0'  => 'v',\\n        '\u03d1'  => 'th',\\n    ],\\n    \/\/ Hindi\\n    'hi' => [\\n        '\u0905'  => 'a',\\n        '\u0906'  => 'aa',\\n        '\u090f'  => 'e',\\n        '\u0908'  => 'ii',\\n        '\u090d'  => 'ei',\\n        '\u090e'  => 'ae',\\n        '\u0910'  => 'ai',\\n        '\u0907'  => 'i',\\n        '\u0913'  => 'o',\\n        '\u0911'  => 'oi',\\n        '\u0912'  => 'oii',\\n        '\u090a'  => 'uu',\\n        '\u0914'  => 'ou',\\n        '\u0909'  => 'u',\\n        '\u092c'  => 'B',\\n        '\u092d'  => 'Bha',\\n        '\u091a'  => 'Ca',\\n        '\u091b'  => 'Chha',\\n        '\u0921'  => 'Da',\\n        '\u0922'  => 'Dha',\\n        '\u092b'  => 'Fa',\\n        '\u092b\u093c' => 'Fi',\\n        '\u0917'  => 'Ga',\\n        '\u0918'  => 'Gha',\\n        '\u0917\u093c' => 'Ghi',\\n        '\u0939'  => 'Ha',\\n        '\u091c'  => 'Ja',\\n        '\u091d'  => 'Jha',\\n        '\u0915'  => 'Ka',\\n        '\u0916'  => 'Kha',\\n        '\u0916\u093c' => 'Khi',\\n        '\u0932'  => 'L',\\n        '\u0933'  => 'Li',\\n        '\u090c'  => 'Li',\\n        '\u0934'  => 'Lii',\\n        '\u0961'  => 'Lii',\\n        '\u092e'  => 'Ma',\\n        '\u0928'  => 'Na',\\n        '\u0919'  => 'Na',\\n        '\u091e'  => 'Nia',\\n        '\u0923'  => 'Nae',\\n        '\u0929'  => 'Ni',\\n        '\u0950'  => 'oms',\\n        '\u092a'  => 'Pa',\\n        '\u0915\u093c' => 'Qi',\\n        '\u0930'  => 'Ra',\\n        '\u090b'  => 'Ri',\\n        '\u0960'  => 'Ri',\\n        '\u0931'  => 'Ri',\\n        '\u0938'  => 'Sa',\\n        '\u0936'  => 'Sha',\\n        '\u0937'  => 'Shha',\\n        '\u091f'  => 'Ta',\\n        '\u0924'  => 'Ta',\\n        '\u0920'  => 'Tha',\\n        '\u0926'  => 'Tha',\\n        '\u0925'  => 'Tha',\\n        '\u0927'  => 'Thha',\\n        '\u0921\u093c' => 'ugDha',\\n        '\u0922\u093c' => 'ugDhha',\\n        '\u0935'  => 'Va',\\n        '\u092f'  => 'Ya',\\n        '\u092f\u093c' => 'Yi',\\n        '\u091c\u093c' => 'Za',\\n    ],\\n    \/\/ Armenian\\n    'hy' => [\\n        '\u0531' => 'A',\\n        '\u0532' => 'B',\\n        '\u0533' => 'G',\\n        '\u0534' => 'D',\\n        '\u0535' => 'E',\\n        '\u0536' => 'Z',\\n        '\u0537' => 'E',\\n        '\u0538' => 'Y',\\n        '\u0539' => 'Th',\\n        '\u053a' => 'Zh',\\n        '\u053b' => 'I',\\n        '\u053c' => 'L',\\n        '\u053d' => 'Kh',\\n        '\u053e' => 'Ts',\\n        '\u053f' => 'K',\\n        '\u0540' => 'H',\\n        '\u0541' => 'Dz',\\n        '\u0542' => 'Gh',\\n        '\u0543' => 'Tch',\\n        '\u0544' => 'M',\\n        '\u0545' => 'Y',\\n        '\u0546' => 'N',\\n        '\u0547' => 'Sh',\\n        '\u0548' => 'Vo',\\n        '\u0549' => 'Ch',\\n        '\u054a' => 'P',\\n        '\u054b' => 'J',\\n        '\u054c' => 'R',\\n        '\u054d' => 'S',\\n        '\u054e' => 'V',\\n        '\u054f' => 'T',\\n        '\u0550' => 'R',\\n        '\u0551' => 'C',\\n        '\u0552' => 'u',\\n        '\u0553' => 'Ph',\\n        '\u0554' => 'Q',\\n        '\u0587' => 'ev',\\n        '\u0555' => 'O',\\n        '\u0556' => 'F',\\n        '\u0561' => 'a',\\n        '\u0562' => 'b',\\n        '\u0563' => 'g',\\n        '\u0564' => 'd',\\n        '\u0565' => 'e',\\n        '\u0566' => 'z',\\n        '\u0567' => 'e',\\n        '\u0568' => 'y',\\n        '\u0569' => 'th',\\n        '\u056a' => 'zh',\\n        '\u056b' => 'i',\\n        '\u056c' => 'l',\\n        '\u056d' => 'kh',\\n        '\u056e' => 'ts',\\n        '\u056f' => 'k',\\n        '\u0570' => 'h',\\n        '\u0571' => 'dz',\\n        '\u0572' => 'gh',\\n        '\u0573' => 'tch',\\n        '\u0574' => 'm',\\n        '\u0575' => 'y',\\n        '\u0576' => 'n',\\n        '\u0577' => 'sh',\\n        '\u0578' => 'vo',\\n        '\u0579' => 'ch',\\n        '\u057a' => 'p',\\n        '\u057b' => 'j',\\n        '\u057c' => 'r',\\n        '\u057d' => 's',\\n        '\u057e' => 'v',\\n        '\u057f' => 't',\\n        '\u0580' => 'r',\\n        '\u0581' => 'c',\\n        '\u0582' => 'u',\\n        '\u0583' => 'ph',\\n        '\u0584' => 'q',\\n        '\u0585' => 'o',\\n        '\u0586' => 'f',\\n    ],\\n    \/\/ Swedish\\n    'sv' => [\\n        '\u00c4' => 'A',\\n        '\u00e4' => 'a',\\n        '\u00c5' => 'A',\\n        '\u00e5' => 'a',\\n        '\u00d6' => 'O',\\n        '\u00f6' => 'o',\\n    ],\\n    \/\/ Turkmen\\n    'tk' => [\\n        '\u00c7' => 'C',\\n        '\u00c4' => 'A',\\n        '\u017d' => 'Z',\\n        '\u0147' => 'N',\\n        '\u00d6' => 'O',\\n        '\u015e' => 'S',\\n        '\u00dc' => 'U',\\n        '\u00dd' => 'Y',\\n        '\u00e7' => 'c',\\n        '\u00e4' => 'a',\\n        '\u017e' => 'z',\\n        '\u0148' => 'n',\\n        '\u00f6' => 'o',\\n        '\u015f' => 's',\\n        '\u00fc' => 'u',\\n        '\u00fd' => 'y',\\n    ],\\n    \/\/ Turkish\\n    'tr' => [\\n        '\u0148' => 'n',\\n        '\u0147' => 'N',\\n        '\u015f' => 's',\\n        '\u015e' => 'S',\\n        '\u0131' => 'i',\\n        '\u0130' => 'I',\\n        '\u00e7' => 'c',\\n        '\u00c7' => 'C',\\n        '\u00e4' => 'a',\\n        '\u00c4' => 'A',\\n        '\u00fc' => 'u',\\n        '\u00dc' => 'U',\\n        '\u00f6' => 'o',\\n        '\u00d6' => 'O',\\n        '\u011f' => 'g',\\n        '\u011e' => 'G',\\n        '\u00fd' => 'y',\\n        '\u00dd' => 'Y',\\n        '\u017e' => 'z',\\n        '\u017d' => 'Z',\\n    ],\\n    \/\/ Bulgarian\\n    'bg' => [\\n        '\u044c\u043e' => 'yo',\\n        '\u0410'  => 'A',\\n        '\u0411'  => 'B',\\n        '\u0412'  => 'V',\\n        '\u0413'  => 'G',\\n        '\u0414'  => 'D',\\n        '\u0415'  => 'E',\\n        '\u0416'  => 'Zh',\\n        '\u0417'  => 'Z',\\n        '\u0418'  => 'I',\\n        '\u0419'  => 'Y',\\n        '\u041a'  => 'K',\\n        '\u041b'  => 'L',\\n        '\u041c'  => 'M',\\n        '\u041d'  => 'N',\\n        '\u041e'  => 'O',\\n        '\u041f'  => 'P',\\n        '\u0420'  => 'R',\\n        '\u0421'  => 'S',\\n        '\u0422'  => 'T',\\n        '\u0423'  => 'U',\\n        '\u0424'  => 'F',\\n        '\u0425'  => 'H',\\n        '\u0426'  => 'C',\\n        '\u0427'  => 'Ch',\\n        '\u0428'  => 'Sh',\\n        '\u0429'  => 'Sht',\\n        '\u042a'  => 'A',\\n        '\u042c'  => '',\\n        '\u042e'  => 'Yu',\\n        '\u042f'  => 'Ya',\\n        '\u0430'  => 'a',\\n        '\u0431'  => 'b',\\n        '\u0432'  => 'v',\\n        '\u0433'  => 'g',\\n        '\u0434'  => 'd',\\n        '\u0435'  => 'e',\\n        '\u0436'  => 'zh',\\n        '\u0437'  => 'z',\\n        '\u0438'  => 'i',\\n        '\u0439'  => 'y',\\n        '\u043a'  => 'k',\\n        '\u043b'  => 'l',\\n        '\u043c'  => 'm',\\n        '\u043d'  => 'n',\\n        '\u043e'  => 'o',\\n        '\u043f'  => 'p',\\n        '\u0440'  => 'r',\\n        '\u0441'  => 's',\\n        '\u0442'  => 't',\\n        '\u0443'  => 'u',\\n        '\u0444'  => 'f',\\n        '\u0445'  => 'h',\\n        '\u0446'  => 'c',\\n        '\u0447'  => 'ch',\\n        '\u0448'  => 'sh',\\n        '\u0449'  => 'sht',\\n        '\u044a'  => 'a',\\n        '\u044c'  => '',\\n        '\u044e'  => 'yu',\\n        '\u044f'  => 'ya',\\n    ],\\n    \/\/ Hungarian\\n    'hu' => [\\n        '\u00c1' => 'A',\\n        '\u0112' => 'E',\\n        '\u00c9' => 'E',\\n        '\u00cd' => 'I',\\n        '\u00d3' => 'O',\\n        '\u00d6' => 'O',\\n        '\u0150' => 'O',\\n        '\u00da' => 'U',\\n        '\u00dc' => 'U',\\n        '\u0170' => 'U',\\n        '\u00e1' => 'a',\\n        '\u0113' => 'e',\\n        '\u00e9' => 'e',\\n        '\u00ed' => 'i',\\n        '\u00f3' => 'o',\\n        '\u00f6' => 'o',\\n        '\u0151' => 'o',\\n        '\u00fa' => 'u',\\n        '\u00fc' => 'u',\\n        '\u0171' => 'u',\\n    ],\\n    \/\/ Myanmar (Burmese)\\n    'my' => [\\n        '\u1014\u103a\u102f\u1015\u103a' => 'nub',\\n        '\u1031\u102c\u1004\u103a'  => 'aung',\\n        '\u102d\u102f\u1000\u103a'  => 'aik',\\n        '\u102d\u102f\u1012\u103a'  => 'ok',\\n        '\u102d\u102f\u1004\u103a'  => 'aing',\\n        '\u102d\u102f\u101c\u103a'  => 'ol',\\n        '\u1031\u102b\u1004\u103a'  => 'aung',\\n        '\u101e\u103c\u1031\u102c'  => 'aw',\\n        '\u1031\u102c\u1000\u103a'  => 'auk',\\n        '\u102d\u1010\u103a'   => 'eik',\\n        '\u102f\u1010\u103a'   => 'ok',\\n        '\u102f\u1014\u103a'   => 'on',\\n        '\u1031\u1010\u103a'   => 'it',\\n        '\u102f\u1012\u103a'   => 'ait',\\n        '\u102c\u1014\u103a'   => 'an',\\n        '\u102d\u1014\u103a'   => 'ein',\\n        '\u103d\u1010\u103a'   => 'ut',\\n        '\u1031\u102b\u103a'   => 'aw',\\n        '\u103d\u1014\u103a'   => 'un',\\n        '\u102d\u1015\u103a'   => 'eik',\\n        '\u102f\u1015\u103a'   => 'ok',\\n        '\u103d\u1015\u103a'   => 'ut',\\n        '\u102d\u1019\u103a'   => 'ein',\\n        '\u102f\u1019\u103a'   => 'on',\\n        '\u1031\u102c\u103a'   => 'aw',\\n        '\u103d\u1019\u103a'   => 'un',\\n        '\u1000\u103a'    => 'et',\\n        '\u1031\u102b'    => 'aw',\\n        '\u1031\u102c'    => 'aw',\\n        '\u103b\u103d'    => 'ywa',\\n        '\u103c\u103d'    => 'yw',\\n        '\u102d\u102f'    => 'o',\\n        '\u102f\u1036'    => 'on',\\n        '\u1010\u103a'    => 'at',\\n        '\u1004\u103a'    => 'in',\\n        '\u100a\u103a'    => 'i',\\n        '\u1012\u103a'    => 'd',\\n        '\u1014\u103a'    => 'an',\\n        '\u1015\u103a'    => 'at',\\n        '\u1019\u103a'    => 'an',\\n        '\u1005\u103b'    => 'za',\\n        '\u101a\u103a'    => 'e',\\n        '\u1009\u103a'    => 'in',\\n        '\u1005\u103a'    => 'it',\\n        '\u102d\u1036'    => 'ein',\\n        '\u1032'     => 'e',\\n        '\u1038'     => '',\\n        '\u102c'     => 'a',\\n        '\u102b'     => 'a',\\n        '\u1031'     => 'e',\\n        '\u1036'     => 'an',\\n        '\u102d'     => 'i',\\n        '\u102e'     => 'i',\\n        '\u102f'     => 'u',\\n        '\u1030'     => 'u',\\n        '\u103a'     => 'at',\\n        '\u1039'     => '',\\n        '\u1037'     => '',\\n        '\u1000'     => 'k',\\n        '\u1049'     => '9',\\n        '\u1010'     => 't',\\n        '\u101b'     => 'ya',\\n        '\u101a'     => 'y',\\n        '\u1019'     => 'm',\\n        '\u1018'     => 'ba',\\n        '\u1017'     => 'b',\\n        '\u1016'     => 'pa',\\n        '\u1015'     => 'p',\\n        '\u1014'     => 'n',\\n        '\u1013'     => 'da',\\n        '\u1012'     => 'd',\\n        '\u1011'     => 'ta',\\n        '\u100f'     => 'na',\\n        '\u101d'     => 'w',\\n        '\u100e'     => 'da',\\n        '\u100d'     => 'd',\\n        '\u100c'     => 'ta',\\n        '\u100b'     => 't',\\n        '\u100a'     => 'ny',\\n        '\u1007'     => 'z',\\n        '\u1006'     => 'sa',\\n        '\u1005'     => 's',\\n        '\u1004'     => 'ng',\\n        '\u1003'     => 'ga',\\n        '\u1002'     => 'g',\\n        '\u101c'     => 'l',\\n        '\u101e'     => 'th',\\n        '\u1048'     => '8',\\n        '\u1029'     => 'aw',\\n        '\u1001'     => 'kh',\\n        '\u1046'     => '6',\\n        '\u1045'     => '5',\\n        '\u1044'     => '4',\\n        '\u1043'     => '3',\\n        '\u1042'     => '2',\\n        '\u1041'     => '1',\\n        '\u1040'     => '0',\\n        '\u104c'     => 'hnaik',\\n        '\u104d'     => 'ywae',\\n        '\u102a'     => 'aw',\\n        '\u1026'     => '-u',\\n        '\u101f'     => 'h',\\n        '\u1009'     => 'u',\\n        '\u1024'     => '-i',\\n        '\u1023'     => 'i',\\n        '\u104f'     => '-e',\\n        '\u1027'     => 'e',\\n        '\u103e'     => 'h',\\n        '\u103d'     => 'w',\\n        '\u103b'     => 'ya',\\n        '\u103c'     => 'y',\\n        '\u1021'     => 'a',\\n        '\u1020'     => 'la',\\n        '\u1047'     => '7',\\n    ],\\n    \/\/ Croatian (Hrvatska)\\n    'hr' => [\\n        'D\u017d' => 'DZ',\\n        'D\u017e' => 'Dz',\\n        'd\u017e' => 'dz',\\n        '\u01f1'  => 'DZ',\\n        '\u01f2'  => 'Dz',\\n        '\u01f3'  => 'dz',\\n        '\u0132'  => 'IJ',\\n        '\u0133'  => 'ij',\\n        '\u01c7'  => 'LJ',\\n        '\u01c8'  => 'Lj',\\n        '\u01c9'  => 'lj',\\n        '\u01ca'  => 'NJ',\\n        '\u01cb'  => 'Nj',\\n        '\u01cc'  => 'nj',\\n        '\u017e'  => 'z',\\n        '\u017d'  => 'Z',\\n        '\u0111'  => 'dj',\\n        '\u0110'  => 'Dj',\\n        '\u010d'  => 'c',\\n        '\u010c'  => 'C',\\n        '\u0107'  => 'c',\\n        '\u0106'  => 'C',\\n        '\u0161'  => 's',\\n        '\u0160'  => 'S',\\n    ],\\n    \/\/ Finnish\\n    'fi' => [\\n        '\u00c4' => 'A',\\n        '\u00d6' => 'O',\\n        '\u00e4' => 'a',\\n        '\u00f6' => 'o',\\n    ],\\n    \/\/ Georgian (Kartvelian)\\n    'ka' => [\\n        '\u10d0' => 'a',\\n        '\u10d1' => 'b',\\n        '\u10d2' => 'g',\\n        '\u10d3' => 'd',\\n        '\u10d4' => 'e',\\n        '\u10d5' => 'v',\\n        '\u10d6' => 'z',\\n        '\u10d7' => 't',\\n        '\u10d8' => 'i',\\n        '\u10d9' => 'k',\\n        '\u10da' => 'l',\\n        '\u10db' => 'm',\\n        '\u10dc' => 'n',\\n        '\u10dd' => 'o',\\n        '\u10de' => 'p',\\n        '\u10df' => 'zh',\\n        '\u10e0' => 'r',\\n        '\u10e1' => 's',\\n        '\u10e2' => 't',\\n        '\u10e3' => 'u',\\n        '\u10e4' => 'f',\\n        '\u10e5' => 'q',\\n        '\u10e6' => 'gh',\\n        '\u10e7' => 'y',\\n        '\u10e8' => 'sh',\\n        '\u10e9' => 'ch',\\n        '\u10ea' => 'ts',\\n        '\u10eb' => 'dz',\\n        '\u10ec' => 'ts',\\n        '\u10ed' => 'ch',\\n        '\u10ee' => 'kh',\\n        '\u10ef' => 'j',\\n        '\u10f0' => 'h',\\n    ],\\n    \/\/ Russian\\n    'ru' => [\\n        '\u0410' => 'A',\\n        '\u0430' => 'a',\\n        '\u0411' => 'B',\\n        '\u0431' => 'b',\\n        '\u0412' => 'V',\\n        '\u0432' => 'v',\\n        '\u0413' => 'G',\\n        '\u0433' => 'g',\\n        '\u0414' => 'D',\\n        '\u0434' => 'd',\\n        '\u0415' => 'E',\\n        '\u0435' => 'e',\\n        '\u0401' => 'Yo',\\n        '\u0451' => 'yo',\\n        '\u0416' => 'Zh',\\n        '\u0436' => 'zh',\\n        '\u0417' => 'Z',\\n        '\u0437' => 'z',\\n        '\u0418' => 'I',\\n        '\u0438' => 'i',\\n        '\u0419' => 'Y',\\n        '\u0439' => 'y',\\n        '\u041a' => 'K',\\n        '\u043a' => 'k',\\n        '\u041b' => 'L',\\n        '\u043b' => 'l',\\n        '\u041c' => 'M',\\n        '\u043c' => 'm',\\n        '\u041d' => 'N',\\n        '\u043d' => 'n',\\n        '\u041e' => 'O',\\n        '\u043e' => 'o',\\n        '\u041f' => 'P',\\n        '\u043f' => 'p',\\n        '\u0420' => 'R',\\n        '\u0440' => 'r',\\n        '\u0421' => 'S',\\n        '\u0441' => 's',\\n        '\u0422' => 'T',\\n        '\u0442' => 't',\\n        '\u0423' => 'U',\\n        '\u0443' => 'u',\\n        '\u0424' => 'F',\\n        '\u0444' => 'f',\\n        '\u0425' => 'H',\\n        '\u0445' => 'h',\\n        '\u0426' => 'Ts',\\n        '\u0446' => 'ts',\\n        '\u0427' => 'Ch',\\n        '\u0447' => 'ch',\\n        '\u0448' => 'sh',\\n        '\u0428' => 'Sh',\\n        '\u0429' => 'Sch',\\n        '\u0449' => 'sch',\\n        '\u042a' => '',\\n        '\u044a' => '',\\n        '\u042b' => 'Y',\\n        '\u044b' => 'y',\\n        '\u042c' => '',\\n        '\u044c' => '',\\n        '\u042d' => 'E',\\n        '\u044d' => 'e',\\n        '\u042e' => 'Yu',\\n        '\u044e' => 'yu',\\n        '\u042f' => 'Ya',\\n        '\u044f' => 'ya',\\n    ],\\n    \/\/ Russian - GOST 7.79-2000(B)\\n    \/\/ -> https:\/\/en.m.wikipedia.org\/wiki\/Romanization_of_Russian#content-collapsible-block-1\\n    'ru__gost_2000_b' => [\\n        '\u0410' => 'A',\\n        '\u0430' => 'a',\\n        '\u0411' => 'B',\\n        '\u0431' => 'b',\\n        '\u0412' => 'V',\\n        '\u0432' => 'v',\\n        '\u0413' => 'G',\\n        '\u0433' => 'g',\\n        '\u0414' => 'D',\\n        '\u0434' => 'd',\\n        '\u0415' => 'E',\\n        '\u0435' => 'e',\\n        '\u0401' => 'Yo',\\n        '\u0451' => 'yo',\\n        '\u0416' => 'Zh',\\n        '\u0436' => 'zh',\\n        '\u0417' => 'Z',\\n        '\u0437' => 'z',\\n        '\u0418' => 'i',\\n        '\u0438' => 'i',\\n        '\u0419' => 'i',\\n        '\u0439' => 'i',\\n        '\u041a' => 'K',\\n        '\u043a' => 'k',\\n        '\u041b' => 'L',\\n        '\u043b' => 'l',\\n        '\u041c' => 'M',\\n        '\u043c' => 'm',\\n        '\u041d' => 'N',\\n        '\u043d' => 'n',\\n        '\u041e' => 'O',\\n        '\u043e' => 'o',\\n        '\u041f' => 'P',\\n        '\u043f' => 'p',\\n        '\u0420' => 'R',\\n        '\u0440' => 'r',\\n        '\u0421' => 'S',\\n        '\u0441' => 's',\\n        '\u0422' => 'T',\\n        '\u0442' => 't',\\n        '\u0423' => 'U',\\n        '\u0443' => 'u',\\n        '\u0424' => 'F',\\n        '\u0444' => 'f',\\n        '\u0425' => 'X',\\n        '\u0445' => 'x',\\n        '\u0426' => 'Cz',\\n        '\u0446' => 'cz',\\n        '\u0427' => 'Ch',\\n        '\u0447' => 'ch',\\n        '\u0448' => 'sh',\\n        '\u0428' => 'Sh',\\n        '\u0429' => 'Shh',\\n        '\u0449' => 'shh',\\n        '\u042a' => '',\\n        '\u044a' => '',\\n        '\u042b' => 'Y\\\\'',\\n        '\u044b' => 'y\\\\'',\\n        '\u042c' => '',\\n        '\u044c' => '',\\n        '\u042d' => 'E\\\\'',\\n        '\u044d' => 'e\\\\'',\\n        '\u042e' => 'Yu',\\n        '\u044e' => 'yu',\\n        '\u042f' => 'Ya',\\n        '\u044f' => 'ya',\\n        '\u0406' => 'I',\\n        '\u0456' => 'i',\\n        '\u0472' => 'Fh',\\n        '\u0473' => 'fh',\\n        '\u0462' => 'Ye',\\n        '\u0463' => 'ye',\\n        '\u0474' => 'Yh',\\n        '\u0475' => 'yh',\\n        '\u0404' => '',\\n        '\u0454' => '',\\n        '\u0464' => '',\\n        '\u0465' => '',\\n        '\u0405' => 'Js',\\n        '\u0455' => 'js',\\n        '\ua64a' => '',\\n        '\ua64b' => '',\\n        '\u0460' => '',\\n        '\u0461' => '',\\n        '\u047e' => '',\\n        '\u047f' => '',\\n        '\u046a' => '',\\n        '\u046b' => '',\\n        '\u0466' => '',\\n        '\u0467' => '',\\n        '\u046c' => '',\\n        '\u046d' => '',\\n        '\u0468' => '',\\n        '\u0469' => '',\\n        '\u046e' => '',\\n        '\u046f' => '',\\n        '\u0470' => '',\\n        '\u0471' => '',\\n    ],\\n    \/\/ Russian - Passport (2013), ICAO\\n    \/\/ -> https:\/\/en.m.wikipedia.org\/wiki\/Romanization_of_Russian#content-collapsible-block-1\\n    'ru__passport_2013' => [\\n        '\u0410' => 'A',\\n        '\u0430' => 'a',\\n        '\u0411' => 'B',\\n        '\u0431' => 'b',\\n        '\u0412' => 'V',\\n        '\u0432' => 'v',\\n        '\u0413' => 'G',\\n        '\u0433' => 'g',\\n        '\u0414' => 'D',\\n        '\u0434' => 'd',\\n        '\u0415' => 'E',\\n        '\u0435' => 'e',\\n        '\u0401' => 'E',\\n        '\u0451' => 'e',\\n        '\u0416' => 'Zh',\\n        '\u0436' => 'zh',\\n        '\u0417' => 'Z',\\n        '\u0437' => 'z',\\n        '\u0418' => 'i',\\n        '\u0438' => 'i',\\n        '\u0419' => 'i',\\n        '\u0439' => 'i',\\n        '\u041a' => 'K',\\n        '\u043a' => 'k',\\n        '\u041b' => 'L',\\n        '\u043b' => 'l',\\n        '\u041c' => 'M',\\n        '\u043c' => 'm',\\n        '\u041d' => 'N',\\n        '\u043d' => 'n',\\n        '\u041e' => 'O',\\n        '\u043e' => 'o',\\n        '\u041f' => 'P',\\n        '\u043f' => 'p',\\n        '\u0420' => 'R',\\n        '\u0440' => 'r',\\n        '\u0421' => 'S',\\n        '\u0441' => 's',\\n        '\u0422' => 'T',\\n        '\u0442' => 't',\\n        '\u0423' => 'U',\\n        '\u0443' => 'u',\\n        '\u0424' => 'F',\\n        '\u0444' => 'f',\\n        '\u0425' => 'Kh',\\n        '\u0445' => 'kh',\\n        '\u0426' => 'Ts',\\n        '\u0446' => 'ts',\\n        '\u0427' => 'Ch',\\n        '\u0447' => 'ch',\\n        '\u0448' => 'sh',\\n        '\u0428' => 'Sh',\\n        '\u0429' => 'Shch',\\n        '\u0449' => 'shch',\\n        '\u042a' => 'Ie',\\n        '\u044a' => 'ie',\\n        '\u042b' => 'Y',\\n        '\u044b' => 'y',\\n        '\u042c' => '',\\n        '\u044c' => '',\\n        '\u042d' => 'E',\\n        '\u044d' => 'e',\\n        '\u042e' => 'Iu',\\n        '\u044e' => 'iu',\\n        '\u042f' => 'Ia',\\n        '\u044f' => 'ia',\\n        '\u0406' => '',\\n        '\u0456' => '',\\n        '\u0472' => '',\\n        '\u0473' => '',\\n        '\u0462' => '',\\n        '\u0463' => '',\\n        '\u0474' => '',\\n        '\u0475' => '',\\n        '\u0404' => '',\\n        '\u0454' => '',\\n        '\u0464' => '',\\n        '\u0465' => '',\\n        '\u0405' => '',\\n        '\u0455' => '',\\n        '\ua64a' => '',\\n        '\ua64b' => '',\\n        '\u0460' => '',\\n        '\u0461' => '',\\n        '\u047e' => '',\\n        '\u047f' => '',\\n        '\u046a' => '',\\n        '\u046b' => '',\\n        '\u0466' => '',\\n        '\u0467' => '',\\n        '\u046c' => '',\\n        '\u046d' => '',\\n        '\u0468' => '',\\n        '\u0469' => '',\\n        '\u046e' => '',\\n        '\u046f' => '',\\n        '\u0470' => '',\\n        '\u0471' => '',\\n    ],\\n    \/\/ Ukrainian\\n    \/\/ -> https:\/\/zakon.rada.gov.ua\/laws\/show\/55-2010-%D0%BF?lang=en\\n    'uk' => [\\n        '\u0413' => 'H',\\n        '\u0433' => 'h',\\n        '\u0490' => 'G',\\n        '\u0491' => 'g',\\n        '\u0404' => 'Ye',\\n        '\u0454' => 'ye',\\n        '\u0418' => 'Y',\\n        '\u0438' => 'y',\\n        '\u0406' => 'I',\\n        '\u0456' => 'i',\\n        '\u0407' => 'Yi',\\n        '\u0457' => 'yi',\\n        '\u0419' => 'Y',\\n        '\u0439' => 'y',\\n        '\u0425' => 'Kh',\\n        '\u0445' => 'kh',\\n        '\u0426' => 'Ts',\\n        '\u0446' => 'ts',\\n        '\u0427' => 'Ch',\\n        '\u0447' => 'ch',\\n        '\u0428' => 'Sh',\\n        '\u0448' => 'sh',\\n        '\u0429' => 'Shch',\\n        '\u0449' => 'shch',\\n    ],\\n    \/\/ Kazakh\\n    'kk' => [\\n        '\u04d8' => 'A',\\n        '\u0492' => 'G',\\n        '\u049a' => 'Q',\\n        '\u04a2' => 'N',\\n        '\u04e8' => 'O',\\n        '\u04b0' => 'U',\\n        '\u04ae' => 'U',\\n        '\u04ba' => 'H',\\n        '\u04d9' => 'a',\\n        '\u0493' => 'g',\\n        '\u049b' => 'q',\\n        '\u04a3' => 'n',\\n        '\u04e9' => 'o',\\n        '\u04b1' => 'u',\\n        '\u04af' => 'u',\\n        '\u04bb' => 'h',\\n    ],\\n    \/\/ Czech\\n    'cs' => [\\n        '\u00e1' => 'a',\\n        '\u00c1' => 'A',\\n        '\u010d' => 'c',\\n        '\u010c' => 'C',\\n        '\u010f' => 'd',\\n        '\u010e' => 'D',\\n        '\u00e9' => 'e',\\n        '\u00c9' => 'E',\\n        '\u011b' => 'e',\\n        '\u011a' => 'E',\\n        '\u00ed' => 'i',\\n        '\u00cd' => 'I',\\n        '\u0148' => 'n',\\n        '\u0147' => 'N',\\n        '\u00f3' => 'o',\\n        '\u00d3' => 'O',\\n        '\u0159' => 'r',\\n        '\u0158' => 'R',\\n        '\u0161' => 's',\\n        '\u0160' => 'S',\\n        '\u0165' => 't',\\n        '\u0164' => 'T',\\n        '\u00fa' => 'u',\\n        '\u00da' => 'U',\\n        '\u016f' => 'u',\\n        '\u016e' => 'U',\\n        '\u00fd' => 'y',\\n        '\u00dd' => 'Y',\\n        '\u017e' => 'z',\\n        '\u017d' => 'Z',\\n    ],\\n    \/\/ Danish\\n    'da' => [\\n        '\u00c6' => 'Ae',\\n        '\u00e6' => 'ae',\\n        '\u00d8' => 'Oe',\\n        '\u00f8' => 'oe',\\n        '\u00c5' => 'Aa',\\n        '\u00e5' => 'aa',\\n        '\u00c9' => 'E',\\n        '\u00e9' => 'e',\\n    ],\\n    \/\/ Polish\\n    'pl' => [\\n        '\u0105' => 'a',\\n        '\u0107' => 'c',\\n        '\u0119' => 'e',\\n        '\u0142' => 'l',\\n        '\u0144' => 'n',\\n        '\u00f3' => 'o',\\n        '\u015b' => 's',\\n        '\u017a' => 'z',\\n        '\u017c' => 'z',\\n        '\u0104' => 'A',\\n        '\u0106' => 'C',\\n        '\u0118' => 'E',\\n        '\u0141' => 'L',\\n        '\u0143' => 'N',\\n        '\u00d3' => 'O',\\n        '\u015a' => 'S',\\n        '\u0179' => 'Z',\\n        '\u017b' => 'Z',\\n    ],\\n    \/\/ Romanian\\n    'ro' => [\\n        '\u0103' => 'a',\\n        '\u00e2' => 'a',\\n        '\u0102' => 'A',\\n        '\u00c2' => 'A',\\n        '\u00ee' => 'i',\\n        '\u00ce' => 'I',\\n        '\u0219' => 's',\\n        '\u015f' => 's',\\n        '\u015e' => 'S',\\n        '\u0218' => 'S',\\n        '\u021b' => 't',\\n        '\u0163' => 't',\\n        '\u0162' => 'T',\\n        '\u021a' => 'T',\\n    ],\\n    \/\/ Esperanto\\n    'eo' => [\\n        '\u0109' => 'cx',\\n        '\u011d' => 'gx',\\n        '\u0125' => 'hx',\\n        '\u0135' => 'jx',\\n        '\u015d' => 'sx',\\n        '\u016d' => 'ux',\\n        '\u0108' => 'CX',\\n        '\u011c' => 'GX',\\n        '\u0124' => 'HX',\\n        '\u0134' => 'JX',\\n        '\u015c' => 'SX',\\n        '\u016c' => 'UX',\\n    ],\\n    \/\/ Estonian\\n    'et' => [\\n        '\u0160' => 'S',\\n        '\u017d' => 'Z',\\n        '\u00d5' => 'O',\\n        '\u00c4' => 'A',\\n        '\u00d6' => 'O',\\n        '\u00dc' => 'U',\\n        '\u0161' => 's',\\n        '\u017e' => 'z',\\n        '\u00f5' => 'o',\\n        '\u00e4' => 'a',\\n        '\u00f6' => 'o',\\n        '\u00fc' => 'u',\\n    ],\\n    \/\/ Latvian\\n    'lv' => [\\n        '\u0101' => 'a',\\n        '\u010d' => 'c',\\n        '\u0113' => 'e',\\n        '\u0123' => 'g',\\n        '\u012b' => 'i',\\n        '\u0137' => 'k',\\n        '\u013c' => 'l',\\n        '\u0146' => 'n',\\n        '\u0161' => 's',\\n        '\u016b' => 'u',\\n        '\u017e' => 'z',\\n        '\u0100' => 'A',\\n        '\u010c' => 'C',\\n        '\u0112' => 'E',\\n        '\u0122' => 'G',\\n        '\u012a' => 'i',\\n        '\u0136' => 'k',\\n        '\u013b' => 'L',\\n        '\u0145' => 'N',\\n        '\u0160' => 'S',\\n        '\u016a' => 'u',\\n        '\u017d' => 'Z',\\n    ],\\n    \/\/ Lithuanian\\n    'lt' => [\\n        '\u0105' => 'a',\\n        '\u010d' => 'c',\\n        '\u0119' => 'e',\\n        '\u0117' => 'e',\\n        '\u012f' => 'i',\\n        '\u0161' => 's',\\n        '\u0173' => 'u',\\n        '\u016b' => 'u',\\n        '\u017e' => 'z',\\n        '\u0104' => 'A',\\n        '\u010c' => 'C',\\n        '\u0118' => 'E',\\n        '\u0116' => 'E',\\n        '\u012e' => 'I',\\n        '\u0160' => 'S',\\n        '\u0172' => 'U',\\n        '\u016a' => 'U',\\n        '\u017d' => 'Z',\\n    ],\\n    \/\/ Norwegian\\n    'no' => [\\n        '\u00c6' => 'AE',\\n        '\u00e6' => 'ae',\\n        '\u00d8' => 'OE',\\n        '\u00f8' => 'oe',\\n        '\u00c5' => 'AA',\\n        '\u00e5' => 'aa',\\n    ],\\n    \/\/ Vietnamese\\n    'vi' => [\\n        '\u00c1' => 'A',\\n        '\u00c0' => 'A',\\n        '\u1ea2' => 'A',\\n        '\u00c3' => 'A',\\n        '\u1ea0' => 'A',\\n        '\u0102' => 'A',\\n        '\u1eae' => 'A',\\n        '\u1eb0' => 'A',\\n        '\u1eb2' => 'A',\\n        '\u1eb4' => 'A',\\n        '\u1eb6' => 'A',\\n        '\u00c2' => 'A',\\n        '\u1ea4' => 'A',\\n        '\u1ea6' => 'A',\\n        '\u1ea8' => 'A',\\n        '\u1eaa' => 'A',\\n        '\u1eac' => 'A',\\n        '\u00e1' => 'a',\\n        '\u00e0' => 'a',\\n        '\u1ea3' => 'a',\\n        '\u00e3' => 'a',\\n        '\u1ea1' => 'a',\\n        '\u0103' => 'a',\\n        '\u1eaf' => 'a',\\n        '\u1eb1' => 'a',\\n        '\u1eb3' => 'a',\\n        '\u1eb5' => 'a',\\n        '\u1eb7' => 'a',\\n        '\u00e2' => 'a',\\n        '\u1ea5' => 'a',\\n        '\u1ea7' => 'a',\\n        '\u1ea9' => 'a',\\n        '\u1eab' => 'a',\\n        '\u1ead' => 'a',\\n        '\u00c9' => 'E',\\n        '\u00c8' => 'E',\\n        '\u1eba' => 'E',\\n        '\u1ebc' => 'E',\\n        '\u1eb8' => 'E',\\n        '\u00ca' => 'E',\\n        '\u1ebe' => 'E',\\n        '\u1ec0' => 'E',\\n        '\u1ec2' => 'E',\\n        '\u1ec4' => 'E',\\n        '\u1ec6' => 'E',\\n        '\u00e9' => 'e',\\n        '\u00e8' => 'e',\\n        '\u1ebb' => 'e',\\n        '\u1ebd' => 'e',\\n        '\u1eb9' => 'e',\\n        '\u00ea' => 'e',\\n        '\u1ebf' => 'e',\\n        '\u1ec1' => 'e',\\n        '\u1ec3' => 'e',\\n        '\u1ec5' => 'e',\\n        '\u1ec7' => 'e',\\n        '\u00cd' => 'I',\\n        '\u00cc' => 'I',\\n        '\u1ec8' => 'I',\\n        '\u0128' => 'I',\\n        '\u1eca' => 'I',\\n        '\u00ed' => 'i',\\n        '\u00ec' => 'i',\\n        '\u1ec9' => 'i',\\n        '\u0129' => 'i',\\n        '\u1ecb' => 'i',\\n        '\u00d3' => 'O',\\n        '\u00d2' => 'O',\\n        '\u1ece' => 'O',\\n        '\u00d5' => 'O',\\n        '\u1ecc' => 'O',\\n        '\u00d4' => 'O',\\n        '\u1ed0' => 'O',\\n        '\u1ed2' => 'O',\\n        '\u1ed4' => 'O',\\n        '\u1ed6' => 'O',\\n        '\u1ed8' => 'O',\\n        '\u01a0' => 'O',\\n        '\u1eda' => 'O',\\n        '\u1edc' => 'O',\\n        '\u1ede' => 'O',\\n        '\u1ee0' => 'O',\\n        '\u1ee2' => 'O',\\n        '\u00f3' => 'o',\\n        '\u00f2' => 'o',\\n        '\u1ecf' => 'o',\\n        '\u00f5' => 'o',\\n        '\u1ecd' => 'o',\\n        '\u00f4' => 'o',\\n        '\u1ed1' => 'o',\\n        '\u1ed3' => 'o',\\n        '\u1ed5' => 'o',\\n        '\u1ed7' => 'o',\\n        '\u1ed9' => 'o',\\n        '\u01a1' => 'o',\\n        '\u1edb' => 'o',\\n        '\u1edd' => 'o',\\n        '\u1edf' => 'o',\\n        '\u1ee1' => 'o',\\n        '\u1ee3' => 'o',\\n        '\u00da' => 'U',\\n        '\u00d9' => 'U',\\n        '\u1ee6' => 'U',\\n        '\u0168' => 'U',\\n        '\u1ee4' => 'U',\\n        '\u01af' => 'U',\\n        '\u1ee8' => 'U',\\n        '\u1eea' => 'U',\\n        '\u1eec' => 'U',\\n        '\u1eee' => 'U',\\n        '\u1ef0' => 'U',\\n        '\u00fa' => 'u',\\n        '\u00f9' => 'u',\\n        '\u1ee7' => 'u',\\n        '\u0169' => 'u',\\n        '\u1ee5' => 'u',\\n        '\u01b0' => 'u',\\n        '\u1ee9' => 'u',\\n        '\u1eeb' => 'u',\\n        '\u1eed' => 'u',\\n        '\u1eef' => 'u',\\n        '\u1ef1' => 'u',\\n        '\u00dd' => 'Y',\\n        '\u1ef2' => 'Y',\\n        '\u1ef6' => 'Y',\\n        '\u1ef8' => 'Y',\\n        '\u1ef4' => 'Y',\\n        '\u00fd' => 'y',\\n        '\u1ef3' => 'y',\\n        '\u1ef7' => 'y',\\n        '\u1ef9' => 'y',\\n        '\u1ef5' => 'y',\\n        '\u0110' => 'D',\\n        '\u0111' => 'd',\\n    ],\\n    \/\/ Persian (Farsi)\\n    'fa' => [\\n        '\u0627' => 'a',\\n        '\u0628' => 'b',\\n        '\u067e' => 'p',\\n        '\u062a' => 't',\\n        '\u062b' => 's',\\n        '\u062c' => 'j',\\n        '\u0686' => 'ch',\\n        '\u062d' => 'h',\\n        '\u062e' => 'kh',\\n        '\u062f' => 'd',\\n        '\u0630' => 'z',\\n        '\u0631' => 'r',\\n        '\u0632' => 'z',\\n        '\u0633' => 's',\\n        '\u0634' => 'sh',\\n        '\u0635' => 's',\\n        '\u0636' => 'z',\\n        '\u0637' => 't',\\n        '\u0638' => 'z',\\n        '\u0639' => 'a',\\n        '\u063a' => 'gh',\\n        '\u0641' => 'f',\\n        '\u0642' => 'gh',\\n        '\u06a9' => 'k',\\n        '\u06af' => 'g',\\n        '\u0644' => 'l',\\n        '\u0698' => 'zh',\\n        '\u0643' => 'k',\\n        '\u0645' => 'm',\\n        '\u0646' => 'n',\\n        '\u0647' => 'h',\\n        '\u0648' => 'o',\\n        '\u06cc' => 'y',\\n        '\u0622' => 'a',\\n        '\u0660' => '0',\\n        '\u0661' => '1',\\n        '\u0662' => '2',\\n        '\u0663' => '3',\\n        '\u0664' => '4',\\n        '\u0665' => '5',\\n        '\u0666' => '6',\\n        '\u0667' => '7',\\n        '\u0668' => '8',\\n        '\u0669' => '9',\\n    ],\\n    \/\/ Arabic\\n    'ar' => [\\n        '\u0623' => 'a',\\n        '\u0628' => 'b',\\n        '\u062a' => 't',\\n        '\u062b' => 'th',\\n        '\u062c' => 'g',\\n        '\u062d' => 'h',\\n        '\u062e' => 'kh',\\n        '\u062f' => 'd',\\n        '\u0630' => 'th',\\n        '\u0631' => 'r',\\n        '\u0632' => 'z',\\n        '\u0633' => 's',\\n        '\u0634' => 'sh',\\n        '\u0635' => 's',\\n        '\u0636' => 'd',\\n        '\u0637' => 't',\\n        '\u0638' => 'th',\\n        '\u0639' => 'aa',\\n        '\u063a' => 'gh',\\n        '\u0641' => 'f',\\n        '\u0642' => 'k',\\n        '\u0643' => 'k',\\n        '\u0644' => 'l',\\n        '\u0645' => 'm',\\n        '\u0646' => 'n',\\n        '\u0647' => 'h',\\n        '\u0648' => 'o',\\n        '\u064a' => 'y',\\n        '\u0627' => 'a',\\n        '\u0625' => 'a',\\n        '\u0622' => 'a',\\n        '\u0624' => 'o',\\n        '\u0626' => 'y',\\n        '\u0621' => 'aa',\\n        '\u0660' => '0',\\n        '\u0661' => '1',\\n        '\u0662' => '2',\\n        '\u0663' => '3',\\n        '\u0664' => '4',\\n        '\u0665' => '5',\\n        '\u0666' => '6',\\n        '\u0667' => '7',\\n        '\u0668' => '8',\\n        '\u0669' => '9',\\n    ],\\n    \/\/ Serbian\\n    'sr' => [\\n        '\u0111' => 'dj',\\n        '\u017e' => 'z',\\n        '\u0107' => 'c',\\n        '\u010d' => 'c',\\n        '\u0161' => 's',\\n        '\u0110' => 'Dj',\\n        '\u017d' => 'Z',\\n        '\u0106' => 'C',\\n        '\u010c' => 'C',\\n        '\u0160' => 'S',\\n        '\u0430' => 'a',\\n        '\u0431' => 'b',\\n        '\u0432' => 'v',\\n        '\u0433' => 'g',\\n        '\u0434' => 'd',\\n        '\u0452' => 'dj',\\n        '\u0435' => 'e',\\n        '\u0436' => 'z',\\n        '\u0437' => 'z',\\n        '\u0438' => 'i',\\n        '\u0458' => 'j',\\n        '\u043a' => 'k',\\n        '\u043b' => 'l',\\n        '\u0459' => 'lj',\\n        '\u043c' => 'm',\\n        '\u043d' => 'n',\\n        '\u045a' => 'nj',\\n        '\u043e' => 'o',\\n        '\u043f' => 'p',\\n        '\u0440' => 'r',\\n        '\u0441' => 's',\\n        '\u0442' => 't',\\n        '\u045b' => 'c',\\n        '\u0443' => 'u',\\n        '\u0444' => 'f',\\n        '\u0445' => 'h',\\n        '\u0446' => 'c',\\n        '\u0447' => 'c',\\n        '\u045f' => 'dz',\\n        '\u0448' => 's',\\n        '\u0410' => 'A',\\n        '\u0411' => 'B',\\n        '\u0412' => 'V',\\n        '\u0413' => 'G',\\n        '\u0414' => 'D',\\n        '\u0402' => 'Dj',\\n        '\u0415' => 'E',\\n        '\u0416' => 'Z',\\n        '\u0417' => 'Z',\\n        '\u0418' => 'I',\\n        '\u0408' => 'j',\\n        '\u041a' => 'K',\\n        '\u041b' => 'L',\\n        '\u0409' => 'Lj',\\n        '\u041c' => 'M',\\n        '\u041d' => 'N',\\n        '\u040a' => 'Nj',\\n        '\u041e' => 'O',\\n        '\u041f' => 'P',\\n        '\u0420' => 'R',\\n        '\u0421' => 'S',\\n        '\u0422' => 'T',\\n        '\u040b' => 'C',\\n        '\u0423' => 'U',\\n        '\u0424' => 'F',\\n        '\u0425' => 'H',\\n        '\u0426' => 'C',\\n        '\u0427' => 'C',\\n        '\u040f' => 'Dz',\\n        '\u0428' => 'S',\\n    ],\\n    \/\/ Serbian - Cyrillic\\n    'sr__cyr' => [\\n        '\u0430' => 'a',\\n        '\u0431' => 'b',\\n        '\u0432' => 'v',\\n        '\u0433' => 'g',\\n        '\u0434' => 'd',\\n        '\u0452' => 'dj',\\n        '\u0435' => 'e',\\n        '\u0436' => 'z',\\n        '\u0437' => 'z',\\n        '\u0438' => 'i',\\n        '\u0458' => 'j',\\n        '\u043a' => 'k',\\n        '\u043b' => 'l',\\n        '\u0459' => 'lj',\\n        '\u043c' => 'm',\\n        '\u043d' => 'n',\\n        '\u045a' => 'nj',\\n        '\u043e' => 'o',\\n        '\u043f' => 'p',\\n        '\u0440' => 'r',\\n        '\u0441' => 's',\\n        '\u0442' => 't',\\n        '\u045b' => 'c',\\n        '\u0443' => 'u',\\n        '\u0444' => 'f',\\n        '\u0445' => 'h',\\n        '\u0446' => 'c',\\n        '\u0447' => 'c',\\n        '\u045f' => 'dz',\\n        '\u0448' => 's',\\n        '\u0410' => 'A',\\n        '\u0411' => 'B',\\n        '\u0412' => 'V',\\n        '\u0413' => 'G',\\n        '\u0414' => 'D',\\n        '\u0402' => 'Dj',\\n        '\u0415' => 'E',\\n        '\u0416' => 'Z',\\n        '\u0417' => 'Z',\\n        '\u0418' => 'I',\\n        '\u0408' => 'j',\\n        '\u041a' => 'K',\\n        '\u041b' => 'L',\\n        '\u0409' => 'Lj',\\n        '\u041c' => 'M',\\n        '\u041d' => 'N',\\n        '\u040a' => 'Nj',\\n        '\u041e' => 'O',\\n        '\u041f' => 'P',\\n        '\u0420' => 'R',\\n        '\u0421' => 'S',\\n        '\u0422' => 'T',\\n        '\u040b' => 'C',\\n        '\u0423' => 'U',\\n        '\u0424' => 'F',\\n        '\u0425' => 'H',\\n        '\u0426' => 'C',\\n        '\u0427' => 'C',\\n        '\u040f' => 'Dz',\\n        '\u0428' => 'S',\\n    ],\\n    \/\/ Serbian - Latin\\n    'sr__lat' => [\\n        '\u0111' => 'dj',\\n        '\u017e' => 'z',\\n        '\u0107' => 'c',\\n        '\u010d' => 'c',\\n        '\u0161' => 's',\\n        '\u0110' => 'Dj',\\n        '\u017d' => 'Z',\\n        '\u0106' => 'C',\\n        '\u010c' => 'C',\\n        '\u0160' => 'S',\\n    ],\\n    \/\/ Azerbaijani\\n    'az' => [\\n        '\u00e7' => 'c',\\n        '\u0259' => 'e',\\n        '\u011f' => 'g',\\n        '\u0131' => 'i',\\n        '\u00f6' => 'o',\\n        '\u015f' => 's',\\n        '\u00fc' => 'u',\\n        '\u00c7' => 'C',\\n        '\u018f' => 'E',\\n        '\u011e' => 'G',\\n        '\u0130' => 'I',\\n        '\u00d6' => 'O',\\n        '\u015e' => 'S',\\n        '\u00dc' => 'U',\\n    ],\\n    \/\/ Slovak\\n    'sk' => [\\n        '\u00e1' => 'a',\\n        '\u00e4' => 'a',\\n        '\u010d' => 'c',\\n        '\u010f' => 'd',\\n        '\u00e9' => 'e',\\n        '\u00ed' => 'i',\\n        '\u013e' => 'l',\\n        '\u013a' => 'l',\\n        '\u0148' => 'n',\\n        '\u00f3' => 'o',\\n        '\u00f4' => 'o',\\n        '\u0155' => 'r',\\n        '\u0161' => 's',\\n        '\u0165' => 't',\\n        '\u00fa' => 'u',\\n        '\u00fd' => 'y',\\n        '\u017e' => 'z',\\n        '\u00c1' => 'A',\\n        '\u00c4' => 'A',\\n        '\u010c' => 'C',\\n        '\u010e' => 'D',\\n        '\u00c9' => 'E',\\n        '\u00cd' => 'I',\\n        '\u013d' => 'L',\\n        '\u0139' => 'L',\\n        '\u0147' => 'N',\\n        '\u00d3' => 'O',\\n        '\u00d4' => 'O',\\n        '\u0154' => 'R',\\n        '\u0160' => 'S',\\n        '\u0164' => 'T',\\n        '\u00da' => 'U',\\n        '\u00dd' => 'Y',\\n        '\u017d' => 'Z',\\n    ],\\n    \/\/ French\\n    'fr' => [\\n        '\u00c6' => 'AE',\\n        '\u00e6' => 'ae',\\n        '\u0152' => 'OE',\\n        '\u0153' => 'oe',\\n        '\u00e2' => 'a',\\n        '\u00c2' => 'A',\\n        '\u00e0' => 'a',\\n        '\u00c0' => 'A',\\n        '\u00e4' => 'a',\\n        '\u00c4' => 'A',\\n        '\u00e7' => 'c',\\n        '\u00c7' => 'C',\\n        '\u00e9' => 'e',\\n        '\u00c9' => 'E',\\n        '\u00ea' => 'e',\\n        '\u00ca' => 'E',\\n        '\u00eb' => 'e',\\n        '\u00cb' => 'E',\\n        '\u00e8' => 'e',\\n        '\u00c8' => 'E',\\n        '\u00ef' => 'i',\\n        '\u00ee' => 'i',\\n        '\u00cf' => 'I',\\n        '\u00ce' => 'I',\\n        '\u00ff' => 'y',\\n        '\u0178' => 'Y',\\n        '\u00f4' => 'o',\\n        '\u00d4' => 'O',\\n        '\u00f6' => 'o',\\n        '\u00d6' => 'O',\\n        '\u00fb' => 'u',\\n        '\u00db' => 'U',\\n        '\u00f9' => 'u',\\n        '\u00d9' => 'U',\\n        '\u00fc' => 'u',\\n        '\u00dc' => 'U',\\n    ],\\n    \/\/ Austrian (French)\\n    'fr_at' => [\\n        '\u00df' => 'sz',\\n        '\u1e9e' => 'SZ',\\n        '\u00c6' => 'AE',\\n        '\u00e6' => 'ae',\\n        '\u0152' => 'OE',\\n        '\u0153' => 'oe',\\n        '\u00e2' => 'a',\\n        '\u00c2' => 'A',\\n        '\u00e0' => 'a',\\n        '\u00c0' => 'A',\\n        '\u00e4' => 'a',\\n        '\u00c4' => 'A',\\n        '\u00e7' => 'c',\\n        '\u00c7' => 'C',\\n        '\u00e9' => 'e',\\n        '\u00c9' => 'E',\\n        '\u00ea' => 'e',\\n        '\u00ca' => 'E',\\n        '\u00eb' => 'e',\\n        '\u00cb' => 'E',\\n        '\u00e8' => 'e',\\n        '\u00c8' => 'E',\\n        '\u00ef' => 'i',\\n        '\u00ee' => 'i',\\n        '\u00cf' => 'I',\\n        '\u00ce' => 'I',\\n        '\u00ff' => 'y',\\n        '\u0178' => 'Y',\\n        '\u00f4' => 'o',\\n        '\u00d4' => 'O',\\n        '\u00f6' => 'o',\\n        '\u00d6' => 'O',\\n        '\u00fb' => 'u',\\n        '\u00db' => 'U',\\n        '\u00f9' => 'u',\\n        '\u00d9' => 'U',\\n        '\u00fc' => 'u',\\n        '\u00dc' => 'U',\\n    ],\\n    \/\/ Switzerland (French)\\n    'fr_ch' => [\\n        '\u00df' => 'ss',\\n        '\u1e9e' => 'SS',\\n        '\u00c6' => 'AE',\\n        '\u00e6' => 'ae',\\n        '\u0152' => 'OE',\\n        '\u0153' => 'oe',\\n        '\u00e2' => 'a',\\n        '\u00c2' => 'A',\\n        '\u00e0' => 'a',\\n        '\u00c0' => 'A',\\n        '\u00e4' => 'a',\\n        '\u00c4' => 'A',\\n        '\u00e7' => 'c',\\n        '\u00c7' => 'C',\\n        '\u00e9' => 'e',\\n        '\u00c9' => 'E',\\n        '\u00ea' => 'e',\\n        '\u00ca' => 'E',\\n        '\u00eb' => 'e',\\n        '\u00cb' => 'E',\\n        '\u00e8' => 'e',\\n        '\u00c8' => 'E',\\n        '\u00ef' => 'i',\\n        '\u00ee' => 'i',\\n        '\u00cf' => 'I',\\n        '\u00ce' => 'I',\\n        '\u00ff' => 'y',\\n        '\u0178' => 'Y',\\n        '\u00f4' => 'o',\\n        '\u00d4' => 'O',\\n        '\u00f6' => 'o',\\n        '\u00d6' => 'O',\\n        '\u00fb' => 'u',\\n        '\u00db' => 'U',\\n        '\u00f9' => 'u',\\n        '\u00d9' => 'U',\\n        '\u00fc' => 'u',\\n        '\u00dc' => 'U',\\n    ],\\n    \/\/ German\\n    'de' => [\\n        '\u00c4' => 'Ae',\\n        '\u00d6' => 'Oe',\\n        '\u00dc' => 'Ue',\\n        '\u00e4' => 'ae',\\n        '\u00f6' => 'oe',\\n        '\u00fc' => 'ue',\\n        '\u00df' => 'ss',\\n        '\u1e9e' => 'SS',\\n    ],\\n    \/\/ Austrian (German)\\n    'de_at' => [\\n        '\u00c4' => 'Ae',\\n        '\u00d6' => 'Oe',\\n        '\u00dc' => 'Ue',\\n        '\u00e4' => 'ae',\\n        '\u00f6' => 'oe',\\n        '\u00fc' => 'ue',\\n        '\u00df' => 'sz',\\n        '\u1e9e' => 'SZ',\\n    ],\\n    \/\/ Switzerland (German)\\n    'de_ch' => [\\n        '\u00c4' => 'Ae',\\n        '\u00d6' => 'Oe',\\n        '\u00dc' => 'Ue',\\n        '\u00e4' => 'ae',\\n        '\u00f6' => 'oe',\\n        '\u00fc' => 'ue',\\n        '\u00df' => 'ss',\\n        '\u1e9e' => 'SS',\\n    ],\\n    \/\/ Bengali (Bangla)\\n    'bn' => [\\n        '\u09ad\u09cd\u09b2'   => 'vl',\\n        '\u09aa\u09b6'    => 'psh',\\n        '\u09ac\u09cd\u09a7'   => 'bdh',\\n        '\u09ac\u09cd\u099c'   => 'bj',\\n        '\u09ac\u09cd\u09a6'   => 'bd',\\n        '\u09ac\u09cd\u09ac'   => 'bb',\\n        '\u09ac\u09cd\u09b2'   => 'bl',\\n        '\u09ad'     => 'v',\\n        '\u09ac'     => 'b',\\n        '\u099a\u09cd\u099e'   => 'cNG',\\n        '\u099a\u09cd\u099b'   => 'cch',\\n        '\u099a\u09cd\u099a'   => 'cc',\\n        '\u099b'     => 'ch',\\n        '\u099a'     => 'c',\\n        '\u09a7\u09cd\u09a8'   => 'dhn',\\n        '\u09a7\u09cd\u09ae'   => 'dhm',\\n        '\u09a6\u09cd\u0998'   => 'dgh',\\n        '\u09a6\u09cd\u09a7'   => 'ddh',\\n        '\u09a6\u09cd\u09ad'   => 'dv',\\n        '\u09a6\u09cd\u09ae'   => 'dm',\\n        '\u09a1\u09cd\u09a1'   => 'DD',\\n        '\u09a2'     => 'Dh',\\n        '\u09a7'     => 'dh',\\n        '\u09a6\u09cd\u0997'   => 'dg',\\n        '\u09a6\u09cd\u09a6'   => 'dd',\\n        '\u09a1'     => 'D',\\n        '\u09a6'     => 'd',\\n        '\u0964'     => '.',\\n        '\u0998\u09cd\u09a8'   => 'Ghn',\\n        '\u0997\u09cd\u09a7'   => 'Gdh',\\n        '\u0997\u09cd\u09a3'   => 'GN',\\n        '\u0997\u09cd\u09a8'   => 'Gn',\\n        '\u0997\u09cd\u09ae'   => 'Gm',\\n        '\u0997\u09cd\u09b2'   => 'Gl',\\n        '\u099c\u09cd\u099e'   => 'jNG',\\n        '\u0998'     => 'Gh',\\n        '\u0997'     => 'g',\\n        '\u09b9\u09cd\u09a3'   => 'hN',\\n        '\u09b9\u09cd\u09a8'   => 'hn',\\n        '\u09b9\u09cd\u09ae'   => 'hm',\\n        '\u09b9\u09cd\u09b2'   => 'hl',\\n        '\u09b9'     => 'h',\\n        '\u099c\u09cd\u099d'   => 'jjh',\\n        '\u099d'     => 'jh',\\n        '\u099c\u09cd\u099c'   => 'jj',\\n        '\u099c'     => 'j',\\n        '\u0995\u09cd\u09b7\u09cd\u09a3' => 'kxN',\\n        '\u0995\u09cd\u09b7\u09cd\u09ae' => 'kxm',\\n        '\u0995\u09cd\u09b7'   => 'ksh',\\n        '\u0995\u09b6'    => 'ksh',\\n        '\u0995\u09cd\u0995'   => 'kk',\\n        '\u0995\u09cd\u099f'   => 'kT',\\n        '\u0995\u09cd\u09a4'   => 'kt',\\n        '\u0995\u09cd\u09b2'   => 'kl',\\n        '\u0995\u09cd\u09b8'   => 'ks',\\n        '\u0996'     => 'kh',\\n        '\u0995'     => 'k',\\n        '\u09b2\u09cd\u09ad'   => 'lv',\\n        '\u09b2\u09cd\u09a7'   => 'ldh',\\n        '\u09b2\u0996'    => 'lkh',\\n        '\u09b2\u0998'    => 'lgh',\\n        '\u09b2\u09ab'    => 'lph',\\n        '\u09b2\u09cd\u0995'   => 'lk',\\n        '\u09b2\u09cd\u0997'   => 'lg',\\n        '\u09b2\u09cd\u099f'   => 'lT',\\n        '\u09b2\u09cd\u09a1'   => 'lD',\\n        '\u09b2\u09cd\u09aa'   => 'lp',\\n        '\u09b2\u09cd\u09ae'   => 'lm',\\n        '\u09b2\u09cd\u09b2'   => 'll',\\n        '\u09b2\u09cd\u09ac'   => 'lb',\\n        '\u09b2'     => 'l',\\n        '\u09ae\u09cd\u09a5'   => 'mth',\\n        '\u09ae\u09cd\u09ab'   => 'mf',\\n        '\u09ae\u09cd\u09ad'   => 'mv',\\n        '\u09ae\u09aa\u09cd\u09b2'  => 'mpl',\\n        '\u09ae\u09cd\u09a8'   => 'mn',\\n        '\u09ae\u09cd\u09aa'   => 'mp',\\n        '\u09ae\u09cd\u09ae'   => 'mm',\\n        '\u09ae\u09cd\u09b2'   => 'ml',\\n        '\u09ae\u09cd\u09ac'   => 'mb',\\n        '\u09ae'     => 'm',\\n        '\u09e6'     => '0',\\n        '\u09e7'     => '1',\\n        '\u09e8'     => '2',\\n        '\u09e9'     => '3',\\n        '\u09ea'     => '4',\\n        '\u09eb'     => '5',\\n        '\u09ec'     => '6',\\n        '\u09ed'     => '7',\\n        '\u09ee'     => '8',\\n        '\u09ef'     => '9',\\n        '\u0999\u09cd\u0995\u09cd\u09b7' => 'Ngkx',\\n        '\u099e\u09cd\u099b'   => 'nch',\\n        '\u0999\u09cd\u0998'   => 'ngh',\\n        '\u0999\u09cd\u0996'   => 'nkh',\\n        '\u099e\u09cd\u099d'   => 'njh',\\n        '\u0999\u09cd\u0997\u09cc'  => 'ngOU',\\n        '\u0999\u09cd\u0997\u09c8'  => 'ngOI',\\n        '\u099e\u09cd\u099a'   => 'nc',\\n        '\u0999\u09cd\u0995'   => 'nk',\\n        '\u0999\u09cd\u09b7'   => 'Ngx',\\n        '\u0999\u09cd\u0997'   => 'ngo',\\n        '\u0999\u09cd\u09ae'   => 'Ngm',\\n        '\u099e\u09cd\u099c'   => 'nj',\\n        '\u09a8\u09cd\u09a7'   => 'ndh',\\n        '\u09a8\u09cd\u09a0'   => 'nTh',\\n        '\u09a3\u09cd\u09a0'   => 'NTh',\\n        '\u09a8\u09cd\u09a5'   => 'nth',\\n        '\u0999\u09cd\u0997\u09be'  => 'nga',\\n        '\u0999\u09cd\u0997\u09bf'  => 'ngi',\\n        '\u0999\u09cd\u0997\u09c0'  => 'ngI',\\n        '\u0999\u09cd\u0997\u09c1'  => 'ngu',\\n        '\u0999\u09cd\u0997\u09c2'  => 'ngU',\\n        '\u0999\u09cd\u0997\u09c7'  => 'nge',\\n        '\u0999\u09cd\u0997\u09cb'  => 'ngO',\\n        '\u09a3\u09cd\u09a2'   => 'NDh',\\n        '\u09a8\u09b6'    => 'nsh',\\n        '\u0999\u09b0'    => 'Ngr',\\n        '\u099e\u09b0'    => 'NGr',\\n        '\u0982\u09b0'    => 'ngr',\\n        '\u0999'     => 'Ng',\\n        '\u099e'     => 'NG',\\n        '\u0982'     => 'ng',\\n        '\u09a8\u09cd\u09a8'   => 'nn',\\n        '\u09a3\u09cd\u09a3'   => 'NN',\\n        '\u09a3\u09cd\u09a8'   => 'Nn',\\n        '\u09a8\u09cd\u09ae'   => 'nm',\\n        '\u09a3\u09cd\u09ae'   => 'Nm',\\n        '\u09a8\u09cd\u09a6'   => 'nd',\\n        '\u09a8\u09cd\u099f'   => 'nT',\\n        '\u09a3\u09cd\u099f'   => 'NT',\\n        '\u09a8\u09cd\u09a1'   => 'nD',\\n        '\u09a3\u09cd\u09a1'   => 'ND',\\n        '\u09a8\u09cd\u09a4'   => 'nt',\\n        '\u09a8\u09cd\u09b8'   => 'ns',\\n        '\u09a8'     => 'n',\\n        '\u09a3'     => 'N',\\n        '\u09c8'     => 'OI',\\n        '\u09cc'     => 'OU',\\n        '\u09cb'     => 'O',\\n        '\u0990'     => 'OI',\\n        '\u0994'     => 'OU',\\n        '\u0985'     => 'o',\\n        '\u0993'     => 'oo',\\n        '\u09ab\u09cd\u09b2'   => 'fl',\\n        '\u09aa\u09cd\u099f'   => 'pT',\\n        '\u09aa\u09cd\u09a4'   => 'pt',\\n        '\u09aa\u09cd\u09a8'   => 'pn',\\n        '\u09aa\u09cd\u09aa'   => 'pp',\\n        '\u09aa\u09cd\u09b2'   => 'pl',\\n        '\u09aa\u09cd\u09b8'   => 'ps',\\n        '\u09ab'     => 'f',\\n        '\u09aa'     => 'p',\\n        '\u09c3'     => 'rri',\\n        '\u098b'     => 'rri',\\n        '\u09b0\u09b0\u200d\u09cd\u09af' => 'rry',\\n        '\u09cd\u09b0\u09cd\u09af'  => 'ry',\\n        '\u09cd\u09b0\u09b0'   => 'rr',\\n        '\u09dc\u09cd\u0997'   => 'Rg',\\n        '\u09dd'     => 'Rh',\\n        '\u09dc'     => 'R',\\n        '\u09b0'     => 'r',\\n        '\u09cd\u09b0'    => 'r',\\n        '\u09b6\u09cd\u099b'   => 'Sch',\\n        '\u09b7\u09cd\u09a0'   => 'ShTh',\\n        '\u09b7\u09cd\u09ab'   => 'Shf',\\n        '\u09b8\u09cd\u0995\u09cd\u09b2' => 'skl',\\n        '\u09b8\u09cd\u0996'   => 'skh',\\n        '\u09b8\u09cd\u09a5'   => 'sth',\\n        '\u09b8\u09cd\u09ab'   => 'sf',\\n        '\u09b6\u09cd\u099a'   => 'Sc',\\n        '\u09b6\u09cd\u09a4'   => 'St',\\n        '\u09b6\u09cd\u09a8'   => 'Sn',\\n        '\u09b6\u09cd\u09ae'   => 'Sm',\\n        '\u09b6\u09cd\u09b2'   => 'Sl',\\n        '\u09b7\u09cd\u0995'   => 'Shk',\\n        '\u09b7\u09cd\u099f'   => 'ShT',\\n        '\u09b7\u09cd\u09a3'   => 'ShN',\\n        '\u09b7\u09cd\u09aa'   => 'Shp',\\n        '\u09b7\u09cd\u09ae'   => 'Shm',\\n        '\u09b8\u09cd\u09aa\u09cd\u09b2' => 'spl',\\n        '\u09b8\u09cd\u0995'   => 'sk',\\n        '\u09b8\u09cd\u099f'   => 'sT',\\n        '\u09b8\u09cd\u09a4'   => 'st',\\n        '\u09b8\u09cd\u09a8'   => 'sn',\\n        '\u09b8\u09cd\u09aa'   => 'sp',\\n        '\u09b8\u09cd\u09ae'   => 'sm',\\n        '\u09b8\u09cd\u09b2'   => 'sl',\\n        '\u09b6'     => 'S',\\n        '\u09b7'     => 'Sh',\\n        '\u09b8'     => 's',\\n        '\u09c1'     => 'u',\\n        '\u0989'     => 'u',\\n        '\u0985\u09cd\u09af'   => 'oZ',\\n        '\u09a4\u09cd\u09a5'   => 'tth',\\n        '\u09ce'     => 'tt',\\n        '\u099f\u09cd\u099f'   => 'TT',\\n        '\u099f\u09cd\u09ae'   => 'Tm',\\n        '\u09a0'     => 'Th',\\n        '\u09a4\u09cd\u09a8'   => 'tn',\\n        '\u09a4\u09cd\u09ae'   => 'tm',\\n        '\u09a5'     => 'th',\\n        '\u09a4\u09cd\u09a4'   => 'tt',\\n        '\u099f'     => 'T',\\n        '\u09a4'     => 't',\\n        '\u0985\u09cd\u09af\u09be'  => 'AZ',\\n        '\u09be'     => 'a',\\n        '\u0986'     => 'a',\\n        '\u09df\u09be'    => 'ya',\\n        '\u09df'     => 'y',\\n        '\u09bf'     => 'i',\\n        '\u0987'     => 'i',\\n        '\u09c0'     => 'ee',\\n        '\u0988'     => 'ee',\\n        '\u09c2'     => 'uu',\\n        '\u098a'     => 'uu',\\n        '\u09c7'     => 'e',\\n        '\u098f'     => 'e',\\n        '\u09af'     => 'z',\\n        '\u09cd\u09af'    => 'Z',\\n        '\u0987\u09df'    => 'y',\\n        '\u0993\u09df'    => 'w',\\n        '\u09cd\u09ac'    => 'w',\\n        '\u098f\u0995\u09cd\u09b8'  => 'x',\\n        '\u0983'     => ':',\\n        '\u0981'     => 'nn',\\n        '\u09cd\u200c'    => '',\\n    ],\\n    \/\/ English\\n    'en' => [\\n    ],\\n    \/\/ Latin (+ Cyrillic ?) chars\\n    \/\/\\n    \/\/ -> Mix of languages, but we need to keep this here, so that different languages can handle there own behavior.\\n    'latin' => [\\n        '\u02da'   => '0',\\n        '\u00b9'   => '1',\\n        '\u00b2'   => '2',\\n        '\u00b3'   => '3',\\n        '\u2074'   => '4',\\n        '\u2075'   => '5',\\n        '\u2076'   => '6',\\n        '\u2077'   => '7',\\n        '\u2078'   => '8',\\n        '\u2079'   => '9',\\n        '\u2080'   => '0',\\n        '\u2081'   => '1',\\n        '\u2082'   => '2',\\n        '\u2083'   => '3',\\n        '\u2084'   => '4',\\n        '\u2085'   => '5',\\n        '\u2086'   => '6',\\n        '\u2087'   => '7',\\n        '\u2088'   => '8',\\n        '\u2089'   => '9',\\n        '\u0be6'   => '0',\\n        '\u0be7'   => '1',\\n        '\u0be8'   => '2',\\n        '\u0be9'   => '3',\\n        '\u0bea'   => '4',\\n        '\u0beb'   => '5',\\n        '\u0bec'   => '6',\\n        '\u0bed'   => '7',\\n        '\u0bee'   => '8',\\n        '\u0bef'   => '9',\\n        '\u0bf0'   => '10',\\n        '\u0bf1'   => '100',\\n        '\u0bf2'   => '1000',\\n        '\ua732'   => 'AA',\\n        '\ua733'   => 'aa',\\n        '\u00c6'   => 'AE',\\n        '\u00e6'   => 'ae',\\n        '\u01fc'   => 'AE',\\n        '\u01fd'   => 'ae',\\n        '\ua734'   => 'AO',\\n        '\ua735'   => 'ao',\\n        '\ua736'   => 'AU',\\n        '\ua737'   => 'au',\\n        '\ua738'   => 'AV',\\n        '\ua739'   => 'av',\\n        '\ua73a'   => 'av',\\n        '\ua73b'   => 'av',\\n        '\ua73c'   => 'AY',\\n        '\ua73d'   => 'ay',\\n        '\u0238'   => 'db',\\n        '\u02a3'   => 'dz',\\n        '\u02a5'   => 'dz',\\n        '\u02a4'   => 'dezh',\\n        '\ud83d\ude70'   => 'et',\\n        '\ufb00'   => 'ff',\\n        '\ufb03'   => 'ffi',\\n        '\ufb04'   => 'ffl',\\n        '\ufb01'   => 'fi',\\n        '\ufb02'   => 'fl',\\n        '\u02a9'   => 'feng',\\n        '\u0132'   => 'IJ',\\n        '\u0133'   => 'ij',\\n        '\u02aa'   => 'ls',\\n        '\u02ab'   => 'lz',\\n        '\u026e'   => 'lezh',\\n        '\u0239'   => 'qp',\\n        '\u02a8'   => 'tc',\\n        '\u02a6'   => 'ts',\\n        '\u02a7'   => 'tesh',\\n        '\u0152'   => 'OE',\\n        '\u0153'   => 'oe',\\n        '\ua74e'   => 'OO',\\n        '\ua74f'   => 'oo',\\n        '\u1e9e'   => 'SS',\\n        '\u00df'   => 'ss',\\n        '\ufb06'   => 'st',\\n        '\ufb05'   => 'st',\\n        '\ua728'   => 'TZ',\\n        '\ua729'   => 'tz',\\n        '\u1d6b'   => 'ue',\\n        'A\u03b9'  => 'Ai',\\n        '\u03b1\u03b9'  => 'ai',\\n        '\u0395\u03b9'  => 'Ei',\\n        '\u03b5\u03b9'  => 'ei',\\n        '\u039f\u03b9'  => 'Oi',\\n        '\u03bf\u03b9'  => 'oi',\\n        '\u039f\u03c5'  => 'Oy',\\n        '\u03bf\u03c5'  => 'oy',\\n        '\u03a5\u03b9'  => 'Yi',\\n        '\u03c5\u03b9'  => 'yi',\\n        '\u1f00'   => 'a',\\n        '\u1f01'   => 'a',\\n        '\u1f02'   => 'a',\\n        '\u1f03'   => 'a',\\n        '\u1f04'   => 'a',\\n        '\u1f05'   => 'a',\\n        '\u1f06'   => 'a',\\n        '\u1f07'   => 'a',\\n        '\u1f08'   => 'A',\\n        '\u1f09'   => 'A',\\n        '\u1f0a'   => 'A',\\n        '\u1f0b'   => 'A',\\n        '\u1f0c'   => 'A',\\n        '\u1f0d'   => 'A',\\n        '\u1f0e'   => 'A',\\n        '\u1f0f'   => 'A',\\n        '\u1fb0'   => 'a',\\n        '\u1fb1'   => 'a',\\n        '\u1fb2'   => 'a',\\n        '\u1fb3'   => 'a',\\n        '\u1fb4'   => 'a',\\n        '\u1fb6'   => 'a',\\n        '\u1fb7'   => 'a',\\n        '\u1fb8'   => 'A',\\n        '\u1fb9'   => 'A',\\n        '\u1fba'   => 'A',\\n        '\u1fbb'   => 'A',\\n        '\u1fbc'   => 'A',\\n        '\u00c4'   => 'A',\\n        '\u00e4'   => 'a',\\n        '\u00c0'   => 'A',\\n        '\u00e0'   => 'a',\\n        '\u00c1'   => 'A',\\n        '\u00e1'   => 'a',\\n        '\u00c2'   => 'A',\\n        '\u00e2'   => 'a',\\n        '\u00c3'   => 'A',\\n        '\u00e3'   => 'a',\\n        'A\u0327'  => 'A',\\n        'a\u0327'  => 'a',\\n        '\u0104'   => 'A',\\n        '\u0105'   => 'a',\\n        '\u023a'   => 'A',\\n        '\u2c65'   => 'a',\\n        '\u00c5'   => 'A',\\n        '\u00e5'   => 'a',\\n        '\u01fa'   => 'A',\\n        '\u01fb'   => 'a',\\n        '\u0102'   => 'A',\\n        '\u0103'   => 'a',\\n        '\u01cd'   => 'A',\\n        '\u01ce'   => 'a',\\n        '\u0226'   => 'A',\\n        '\u0227'   => 'a',\\n        '\u1ea0'   => 'A',\\n        '\u1ea1'   => 'a',\\n        '\u0100'   => 'A',\\n        '\u0101'   => 'a',\\n        '\u00aa'   => 'a',\\n        '\u0181'   => 'B',\\n        '\u0462'   => 'E',\\n        '\u0463'   => 'e',\\n        '\u00c7'   => 'C',\\n        '\u00e7'   => 'c',\\n        '\u0108'   => 'C',\\n        '\u0109'   => 'c',\\n        'C\u0308'  => 'C',\\n        'c\u0308'  => 'c',\\n        'C\u0328'  => 'C',\\n        'c\u0328'  => 'c',\\n        '\u023b'   => 'C',\\n        '\u023c'   => 'c',\\n        '\u010c'   => 'C',\\n        '\u010d'   => 'c',\\n        '\u0106'   => 'C',\\n        '\u0107'   => 'c',\\n        'C\u0300'  => 'C',\\n        'c\u0300'  => 'c',\\n        '\u010a'   => 'C',\\n        '\u010b'   => 'c',\\n        'C\u0323'  => 'C',\\n        'c\u0323'  => 'c',\\n        'C\u0304'  => 'C',\\n        'c\u0304'  => 'c',\\n        'C\u0303'  => 'C',\\n        'c\u0303'  => 'c',\\n        '\u00d0'   => 'D',\\n        '\u0110'   => 'D',\\n        '\u00f0'   => 'd',\\n        '\u0111'   => 'd',\\n        '\u00c8'   => 'E',\\n        '\u00c9'   => 'E',\\n        '\u00ca'   => 'E',\\n        '\u00cb'   => 'E',\\n        '\u0114'   => 'E',\\n        '\u0116'   => 'E',\\n        '\u0228'   => 'E',\\n        '\u0229'   => 'e',\\n        '\u0118'   => 'E',\\n        '\u0119'   => 'e',\\n        '\u0246'   => 'E',\\n        '\u0247'   => 'e',\\n        '\u011a'   => 'E',\\n        '\u011b'   => 'e',\\n        '\u1eb8'   => 'E',\\n        '\u1eb9'   => 'e',\\n        '\u0112'   => 'E',\\n        '\u0113'   => 'e',\\n        '\u1ebc'   => 'E',\\n        '\u1ebd'   => 'e',\\n        '\u00e8'   => 'e',\\n        '\u00e9'   => 'e',\\n        '\u00ea'   => 'e',\\n        '\u00eb'   => 'e',\\n        '\u0115'   => 'e',\\n        '\u0117'   => 'e',\\n        '\u0192'   => 'f',\\n        '\u0472'   => 'F',\\n        '\u0473'   => 'f',\\n        '\u011c'   => 'G',\\n        '\u0120'   => 'G',\\n        '\u011d'   => 'g',\\n        '\u0121'   => 'g',\\n        '\u0124'   => 'H',\\n        '\u0126'   => 'H',\\n        '\u0125'   => 'h',\\n        '\u0127'   => 'h',\\n        '\u00cc'   => 'I',\\n        '\u00cd'   => 'I',\\n        '\u00ce'   => 'I',\\n        '\u00cf'   => 'I',\\n        '\u0128'   => 'I',\\n        '\u012c'   => 'I',\\n        '\u01cf'   => 'I',\\n        '\u012e'   => 'I',\\n        '\u00ec'   => 'i',\\n        '\u00ed'   => 'i',\\n        '\u00ee'   => 'i',\\n        '\u00ef'   => 'i',\\n        '\u0129'   => 'i',\\n        '\u012d'   => 'i',\\n        '\u01d0'   => 'i',\\n        '\u012f'   => 'i',\\n        '\u0406'   => 'I',\\n        '\u0456'   => 'i',\\n        'I\u0327'  => 'I',\\n        'i\u0327'  => 'i',\\n        '\u0197'   => 'I',\\n        '\u0268'   => 'i',\\n        '\u0130'   => 'I',\\n        'i'   => 'i',\\n        '\u1eca'   => 'I',\\n        '\u1ecb'   => 'i',\\n        '\u012a'   => 'I',\\n        '\u012b'   => 'i',\\n        '\u0134'   => 'J',\\n        '\u0135'   => 'j',\\n        'J\u0301\u0301' => 'J',\\n        'j\u0301'  => 'j',\\n        'J\u0300\u0300' => 'J',\\n        'j\u0300'  => 'j',\\n        'J\u0308'  => 'J',\\n        'j\u0308'  => 'j',\\n        'J\u0327'  => 'J',\\n        'j\u0327'  => 'j',\\n        'J\u0328'  => 'J',\\n        'j\u0328'  => 'j',\\n        '\u0248'   => 'J',\\n        '\u0249'   => 'j',\\n        'J\u030c'  => 'J',\\n        '\u01f0'   => 'j',\\n        'J\u0307'  => 'J',\\n        'j'   => 'j',\\n        'J\u0323'  => 'J',\\n        'j\u0323'  => 'j',\\n        'J\u0304'  => 'J',\\n        'j\u0304'  => 'j',\\n        'J\u0303'  => 'J',\\n        'j\u0303'  => 'j',\\n        '\u0419' => 'i',\\n        '\u0439' => 'i',\\n        '\u0138'   => 'k',\\n        '\u0139'   => 'L',\\n        '\u013d'   => 'L',\\n        '\u013f'   => 'L',\\n        '\u013a'   => 'l',\\n        '\u013e'   => 'l',\\n        '\u0140'   => 'l',\\n        'L\u0300'  => 'L',\\n        'l\u0300'  => 'l',\\n        'L\u0302'  => 'L',\\n        'l\u0302'  => 'l',\\n        'L\u0308'  => 'L',\\n        'l\u0308'  => 'l',\\n        '\u013b'   => 'L',\\n        '\u013c'   => 'l',\\n        'L\u0328'  => 'L',\\n        'l\u0328'  => 'l',\\n        '\u0141'   => 'L',\\n        '\u0142'   => 'l',\\n        '\u023d'   => 'L',\\n        '\u019a'   => 'l',\\n        'L\u0307'  => 'L',\\n        'l\u0307'  => 'l',\\n        '\u1e36'   => 'L',\\n        '\u1e37'   => 'l',\\n        'L\u0304'  => 'L',\\n        'l\u0304'  => 'l',\\n        'L\u0303'  => 'L',\\n        'l\u0303'  => 'l',\\n        '\u00d1'   => 'N',\\n        '\u00f1'   => 'n',\\n        '\u014a'   => 'N',\\n        '\u014b'   => 'n',\\n        '\u0149'   => 'n',\\n        '\u0143'   => 'N',\\n        '\u0144'   => 'n',\\n        '\u01f8'   => 'N',\\n        '\u01f9'   => 'n',\\n        'N\u0302'  => 'N',\\n        'n\u0302'  => 'n',\\n        'N\u0308'  => 'N',\\n        'n\u0308'  => 'n',\\n        '\u0145'   => 'N',\\n        '\u0146'   => 'n',\\n        'N\u0328'  => 'N',\\n        'n\u0328'  => 'n',\\n        '\ua7a4'   => 'N',\\n        '\ua7a5'   => 'n',\\n        '\u0147'   => 'N',\\n        '\u0148'   => 'n',\\n        '\u1e44'   => 'N',\\n        '\u1e45'   => 'n',\\n        '\u1e46'   => 'N',\\n        '\u1e47'   => 'n',\\n        'N\u0304'  => 'N',\\n        'n\u0304'  => 'n',\\n        '\u00d6'   => 'O',\\n        '\u00d2'   => 'O',\\n        '\u00d3'   => 'O',\\n        '\u00d4'   => 'O',\\n        '\u00d5'   => 'O',\\n        '\u014c'   => 'O',\\n        '\u014e'   => 'O',\\n        '\u01d1'   => 'O',\\n        '\u0150'   => 'O',\\n        '\u01a0'   => 'O',\\n        '\u00d8'   => 'O',\\n        '\u01fe'   => 'O',\\n        '\u00f6'   => 'o',\\n        '\u00f2'   => 'o',\\n        '\u00f3'   => 'o',\\n        '\u00f4'   => 'o',\\n        '\u00f5'   => 'o',\\n        '\u014d'   => 'o',\\n        '\u014f'   => 'o',\\n        '\u01d2'   => 'o',\\n        '\u0151'   => 'o',\\n        '\u01a1'   => 'o',\\n        '\u00f8'   => 'o',\\n        '\u01ff'   => 'o',\\n        '\u00ba'   => 'o',\\n        'O\u0327'  => 'O',\\n        'o\u0327'  => 'o',\\n        '\u01ea'   => 'O',\\n        '\u01eb'   => 'o',\\n        '\u019f'   => 'O',\\n        '\u0275'   => 'o',\\n        '\u022e'   => 'O',\\n        '\u022f'   => 'o',\\n        '\u1ecc'   => 'O',\\n        '\u1ecd'   => 'o',\\n        '\u0154'   => 'R',\\n        '\u0156'   => 'R',\\n        '\u0155'   => 'r',\\n        '\u0157'   => 'r',\\n        '\u015c'   => 'S',\\n        '\u0218'   => 'S',\\n        '\u0219'   => 's',\\n        '\u015a'   => 'S',\\n        '\u015b'   => 's',\\n        'S\u0300'  => 'S',\\n        's\u0300'  => 's',\\n        '\u015c\u0300'  => 'S',\\n        '\u015d'   => 's',\\n        'S\u0308'  => 'S',\\n        's\u0308'  => 's',\\n        '\u015e'   => 'S',\\n        '\u015f'   => 's',\\n        'S\u0328'  => 'S',\\n        's\u0328'  => 's',\\n        '\ua7a8'   => 'S',\\n        '\ua7a9'   => 's',\\n        '\u0160'   => 'S',\\n        '\u0161'   => 's',\\n        '\u1e60'   => 'S',\\n        '\u1e61'   => 's',\\n        '\u1e62'   => 'S',\\n        '\u1e63'   => 's',\\n        'S\u0304'  => 'S',\\n        's\u0304'  => 's',\\n        'S\u0303'  => 'S',\\n        's\u0303'  => 's',\\n        '\u017f'   => 's',\\n        '\u0162'   => 'T',\\n        '\u021a'   => 'T',\\n        '\u0166'   => 'T',\\n        '\u00de'   => 'TH',\\n        '\u0163'   => 't',\\n        '\u021b'   => 't',\\n        '\u0167'   => 't',\\n        '\u00fe'   => 'th',\\n        'T\u0301'  => 'T',\\n        't\u0301'  => 't',\\n        'T\u0300'  => 'T',\\n        't\u0300'  => 't',\\n        'T\u0302'  => 'T',\\n        't\u0302'  => 't',\\n        'T\u0308'  => 'T',\\n        '\u1e97'   => 't',\\n        'T\u0328'  => 'T',\\n        't\u0328'  => 't',\\n        '\u023e'   => 'T',\\n        '\u2c66'   => 't',\\n        '\u0164'   => 'T',\\n        '\u0165'   => 't',\\n        '\u1e6a'   => 'T',\\n        '\u1e6b'   => 't',\\n        '\u1e6c'   => 'T',\\n        '\u1e6d'   => 't',\\n        'T\u0304'  => 'T',\\n        't\u0304'  => 't',\\n        'T\u0303'  => 'T',\\n        't\u0303'  => 't',\\n        '\u00dc'   => 'U',\\n        '\u00d9'   => 'U',\\n        '\u00da'   => 'U',\\n        '\u00db'   => 'U',\\n        '\u0168'   => 'U',\\n        '\u016c'   => 'U',\\n        '\u0170'   => 'U',\\n        '\u0172'   => 'U',\\n        '\u01af'   => 'U',\\n        '\u01d3'   => 'U',\\n        '\u01d5'   => 'U',\\n        '\u01d7'   => 'U',\\n        '\u01d9'   => 'U',\\n        '\u01db'   => 'U',\\n        '\u00fc'   => 'u',\\n        '\u00f9'   => 'u',\\n        '\u00fa'   => 'u',\\n        '\u00fb'   => 'u',\\n        '\u0169'   => 'u',\\n        '\u016d'   => 'u',\\n        '\u0171'   => 'u',\\n        '\u0173'   => 'u',\\n        '\u01b0'   => 'u',\\n        '\u01d4'   => 'u',\\n        '\u01d6'   => 'u',\\n        '\u01d8'   => 'u',\\n        '\u01da'   => 'u',\\n        '\u01dc'   => 'u',\\n        'U\u0327'  => 'U',\\n        'u\u0327'  => 'u',\\n        '\u0244'   => 'U',\\n        '\u0289'   => 'u',\\n        'U\u0307'  => 'U',\\n        'u\u0307'  => 'u',\\n        '\u1ee4'   => 'U',\\n        '\u1ee5'   => 'u',\\n        '\u016a'   => 'U',\\n        '\u016b'   => 'u',\\n        '\u01b1'   => 'U',\\n        '\u028a'   => 'u',\\n        '\u0174'   => 'W',\\n        '\u0175'   => 'w',\\n        '\u1e80'   => 'W',\\n        '\u1e81'   => 'w',\\n        '\u1e82'   => 'W',\\n        '\u1e83'   => 'w',\\n        '\u1e84'   => 'W',\\n        '\u1e85'   => 'w',\\n        '\u0474'   => 'I',\\n        '\u0475'   => 'i',\\n        '\ua656'   => 'Ja',\\n        '\ua657'   => 'ja',\\n        '\u0404'   => 'Je',\\n        '\u0454'   => 'je',\\n        '\u0464'   => 'Je',\\n        '\u0465'   => 'je',\\n        '\u0405'   => 'Dz',\\n        '\u0455'   => 'dz',\\n        '\ua64a'   => 'U',\\n        '\ua64b'   => 'u',\\n        '\u0460'   => 'O',\\n        '\u0461'   => 'o',\\n        '\u047e'   => 'Ot',\\n        '\u047f'   => 'ot',\\n        '\u046a'   => 'U',\\n        '\u046b'   => 'u',\\n        '\u0466'   => 'Ja',\\n        '\u0467'   => 'ja',\\n        '\u046c'   => 'Ju',\\n        '\u046d'   => 'ju',\\n        '\u0468'   => 'Ja',\\n        '\u0469'   => 'Ja',\\n        '\u046e'   => 'Ks',\\n        '\u046f'   => 'ks',\\n        '\u0470'   => 'Ps',\\n        '\u0471'   => 'ps',\\n        '\u0425'   => 'X',\\n        '\u0445'   => 'x',\\n        '\u00dd'   => 'Y',\\n        '\u0178'   => 'Y',\\n        '\u0176'   => 'Y',\\n        '\u00fd'   => 'y',\\n        '\u00ff'   => 'y',\\n        '\u0177'   => 'y',\\n        '\u1ef2'   => 'Y',\\n        '\u1ef3'   => 'y',\\n        'Y\u0327'  => 'Y',\\n        'y\u0327'  => 'y',\\n        'Y\u0328'  => 'Y',\\n        'y\u0328'  => 'y',\\n        '\u024e'   => 'Y',\\n        '\u024f'   => 'y',\\n        'Y\u030c'  => 'Y',\\n        'y\u030c'  => 'y',\\n        '\u1e8e'   => 'Y',\\n        '\u1e8f'   => 'y',\\n        '\u1ef4'   => 'Y',\\n        '\u1ef5'   => 'y',\\n        '\u0232'   => 'Y',\\n        '\u0233'   => 'y',\\n        '\u1ef8'   => 'Y',\\n        '\u1ef9'   => 'y',\\n        '\u0429' => 'Shh',\\n        '\u0449' => 'shh',\\n        '\u0179'   => 'Z',\\n        '\u017a'   => 'z',\\n        'Z\u0300'  => 'Z',\\n        'z\u0300'  => 'z',\\n        '\u1e90'   => 'Z',\\n        '\u1e91'   => 'z',\\n        'Z\u0308'  => 'Z',\\n        'z\u0308'  => 'z',\\n        'Z\u0327'  => 'Z',\\n        'z\u0327'  => 'z',\\n        'Z\u0328'  => 'Z',\\n        'z\u0328'  => 'z',\\n        '\u01b5'   => 'Z',\\n        '\u01b6'   => 'z',\\n        '\u017d'   => 'Z',\\n        '\u017e'   => 'z',\\n        '\u017b'   => 'Z',\\n        '\u017c'   => 'z',\\n        '\u1e92'   => 'Z',\\n        '\u1e93'   => 'z',\\n        'Z\u0304'  => 'Z',\\n        'z\u0304'  => 'z',\\n        'Z\u0303'  => 'Z',\\n        'z\u0303'  => 'z',\\n    ],\\n    \/\/ whitespace chars\\n    ' ' => [\\n        \\\"\\\\xc2\\\\xa0\\\"     => ' ', \/\/ 'NO-BREAK SPACE'\\n        \\\"\\\\xe1\\\\x9a\\\\x80\\\" => ' ', \/\/ 'OGHAM SPACE MARK'\\n        \\\"\\\\xe2\\\\x80\\\\x80\\\" => ' ', \/\/ 'EN QUAD'\\n        \\\"\\\\xe2\\\\x80\\\\x81\\\" => ' ', \/\/ 'EM QUAD'\\n        \\\"\\\\xe2\\\\x80\\\\x82\\\" => ' ', \/\/ 'EN SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x83\\\" => ' ', \/\/ 'EM SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x84\\\" => ' ', \/\/ 'THREE-PER-EM SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x85\\\" => ' ', \/\/ 'FOUR-PER-EM SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x86\\\" => ' ', \/\/ 'SIX-PER-EM SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x87\\\" => ' ', \/\/ 'FIGURE SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x88\\\" => ' ', \/\/ 'PUNCTUATION SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x89\\\" => ' ', \/\/ 'THIN SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\x8a\\\" => ' ', \/\/ 'HAIR SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\xa8\\\" => ' ', \/\/ 'LINE SEPARATOR'\\n        \\\"\\\\xe2\\\\x80\\\\xa9\\\" => ' ', \/\/ 'PARAGRAPH SEPARATOR'\\n        \\\"\\\\xe2\\\\x80\\\\x8b\\\" => ' ', \/\/ 'ZERO WIDTH SPACE'\\n        \\\"\\\\xe2\\\\x80\\\\xaf\\\" => ' ', \/\/ 'NARROW NO-BREAK SPACE'\\n        \\\"\\\\xe2\\\\x81\\\\x9f\\\" => ' ', \/\/ 'MEDIUM MATHEMATICAL SPACE'\\n        \\\"\\\\xe3\\\\x80\\\\x80\\\" => ' ', \/\/ 'IDEOGRAPHIC SPACE'\\n        \\\"\\\\xef\\\\xbe\\\\xa0\\\" => ' ', \/\/ 'HALFWIDTH HANGUL FILLER'\\n    ],\\n    \/\/ commonly used in Word documents\\n    'msword' => [\\n        \\\"\\\\xc2\\\\xab\\\"     => '<<', \/\/ \u00ab (U+00AB) in UTF-8\\n        \\\"\\\\xc2\\\\xbb\\\"     => '>>', \/\/ \u00bb (U+00BB) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x98\\\" => \\\"'\\\", \/\/ \u2018 (U+2018) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x99\\\" => \\\"'\\\", \/\/ \u2019 (U+2019) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x9a\\\" => \\\"'\\\", \/\/ \u201a (U+201A) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x9b\\\" => \\\"'\\\", \/\/ \u201b (U+201B) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x9c\\\" => '\\\"', \/\/ \u201c (U+201C) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x9d\\\" => '\\\"', \/\/ \u201d (U+201D) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x9e\\\" => '\\\"', \/\/ \u201e (U+201E) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x9f\\\" => '\\\"', \/\/ \u201f (U+201F) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\xb9\\\" => \\\"'\\\", \/\/ \u2039 (U+2039) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\xba\\\" => \\\"'\\\", \/\/ \u203a (U+203A) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x93\\\" => '-', \/\/ \u2013 (U+2013) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\x94\\\" => '-', \/\/ \u2014 (U+2014) in UTF-8\\n        \\\"\\\\xe2\\\\x80\\\\xa6\\\" => '...', \/\/ \u2026 (U+2026) in UTF-8\\n    ],\\n    \/\/ Currency\\n    \/\/\\n    \/\/ url => https:\/\/en.wikipedia.org\/wiki\/Currency_symbol\\n    'currency_short' => [\\n        '\u20ac'  => 'EUR',\\n        '$'  => '$',\\n        '\u20a2'  => 'Cr',\\n        '\u20a3'  => 'Fr.',\\n        '\u00a3'  => 'PS',\\n        '\u20a4'  => 'L.',\\n        '\u2133'  => 'M',\\n        '\u20a5'  => 'mil',\\n        '\u20a6'  => 'N',\\n        '\u20a7'  => 'Pts',\\n        '\u20a8'  => 'Rs',\\n        '\u0dbb\u0dd4' => 'LKR',\\n        '\u0bb0\u0bc2' => 'LKR',\\n        '\u0bf9'  => 'Rs',\\n        '\u0930\u0942' => 'NPR',\\n        '\u20b9'  => 'Rs',\\n        '\u0af1'  => 'Rs',\\n        '\u20a9'  => 'W',\\n        '\u20aa'  => 'NS',\\n        '\u20b8'  => 'KZT',\\n        '\u20ab'  => 'D',\\n        '\u058f'  => 'AMD',\\n        '\u20ad'  => 'K',\\n        '\u20ba'  => 'TL',\\n        '\u20bc'  => 'AZN',\\n        '\u20ae'  => 'T',\\n        '\u20af'  => 'Dr',\\n        '\u20b2'  => 'PYG',\\n        '\u20be'  => 'GEL',\\n        '\u20b3'  => 'ARA',\\n        '\u20b4'  => 'UAH',\\n        '\u20bd'  => 'RUB',\\n        '\u20b5'  => 'GHS',\\n        '\u20a1'  => 'CL',\\n        '\u00a2'  => 'c',\\n        '\u00a5'  => 'YEN',\\n        '\u5186'  => 'JPY',\\n        '\u09f3'  => 'BDT',\\n        '\u5143'  => 'CNY',\\n        '\ufdfc'  => 'SAR',\\n        '\u17db'  => 'KR',\\n        '\u20a0'  => 'ECU',\\n        '\u00a4'  => '$?',\\n        '\u0e3f'  => 'THB',\\n        '\u060b'  => 'AFN',\\n    ],\\n];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x09d.php\",\"ext\":\"php\",\"size\":2076,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Fou ', 'Yiao ', 'Jue ', 'Jue ', 'Pi ', 'Huan ', 'Zhen ', 'Bao ', 'Yan ', 'Ya ', 'Zheng ', 'Fang ', 'Feng ', 'Wen ', 'Ou ', 'Te ', 'Jia ', 'Nu ', 'Ling ', 'Mie ', 'Fu ', 'Tuo ', 'Wen ', 'Li ', 'Bian ', 'Zhi ', 'Ge ', 'Yuan ', 'Zi ', 'Qu ', 'Xiao ', 'Zhi ', 'Dan ', 'Ju ', 'You ', 'Gu ', 'Zhong ', 'Yu ', 'Yang ', 'Rong ', 'Ya ', 'Tie ', 'Yu ', 'Shigi ', 'Ying ', 'Zhui ', 'Wu ', 'Er ', 'Gua ', 'Ai ', 'Zhi ', 'Yan ', 'Heng ', 'Jiao ', 'Ji ', 'Lie ', 'Zhu ', 'Ren ', 'Yi ', 'Hong ', 'Luo ', 'Ru ', 'Mou ', 'Ge ', 'Ren ', 'Jiao ', 'Xiu ', 'Zhou ', 'Zhi ', 'Luo ', 'Chidori ', 'Toki ', 'Ten ', 'Luan ', 'Jia ', 'Ji ', 'Yu ', 'Huan ', 'Tuo ', 'Bu ', 'Wu ', 'Juan ', 'Yu ', 'Bo ', 'Xun ', 'Xun ', 'Bi ', 'Xi ', 'Jun ', 'Ju ', 'Tu ', 'Jing ', 'Ti ', 'E ', 'E ', 'Kuang ', 'Hu ', 'Wu ', 'Shen ', 'Lai ', 'Ikaruga ', 'Kakesu ', 'Lu ', 'Ping ', 'Shu ', 'Fu ', 'An ', 'Zhao ', 'Peng ', 'Qin ', 'Qian ', 'Bei ', 'Diao ', 'Lu ', 'Que ', 'Jian ', 'Ju ', 'Tu ', 'Ya ', 'Yuan ', 'Qi ', 'Li ', 'Ye ', 'Zhui ', 'Kong ', 'Zhui ', 'Kun ', 'Sheng ', 'Qi ', 'Jing ', 'Yi ', 'Yi ', 'Jing ', 'Zi ', 'Lai ', 'Dong ', 'Qi ', 'Chun ', 'Geng ', 'Ju ', 'Qu ', 'Isuka ', 'Kikuitadaki ', 'Ji ', 'Shu ', '[?] ', 'Chi ', 'Miao ', 'Rou ', 'An ', 'Qiu ', 'Ti ', 'Hu ', 'Ti ', 'E ', 'Jie ', 'Mao ', 'Fu ', 'Chun ', 'Tu ', 'Yan ', 'He ', 'Yuan ', 'Pian ', 'Yun ', 'Mei ', 'Hu ', 'Ying ', 'Dun ', 'Mu ', 'Ju ', 'Tsugumi ', 'Cang ', 'Fang ', 'Gu ', 'Ying ', 'Yuan ', 'Xuan ', 'Weng ', 'Shi ', 'He ', 'Chu ', 'Tang ', 'Xia ', 'Ruo ', 'Liu ', 'Ji ', 'Gu ', 'Jian ', 'Zhun ', 'Han ', 'Zi ', 'Zi ', 'Ni ', 'Yao ', 'Yan ', 'Ji ', 'Li ', 'Tian ', 'Kou ', 'Ti ', 'Ti ', 'Ni ', 'Tu ', 'Ma ', 'Jiao ', 'Gao ', 'Tian ', 'Chen ', 'Li ', 'Zhuan ', 'Zhe ', 'Ao ', 'Yao ', 'Yi ', 'Ou ', 'Chi ', 'Zhi ', 'Liao ', 'Rong ', 'Lou ', 'Bi ', 'Shuang ', 'Zhuo ', 'Yu ', 'Wu ', 'Jue ', 'Yin ', 'Quan ', 'Si ', 'Jiao ', 'Yi ', 'Hua ', 'Bi ', 'Ying ', 'Su ', 'Huang ', 'Fan ', 'Jiao ', 'Liao ', 'Yan ', 'Kao ', 'Jiu ', 'Xian ', 'Xian ', 'Tu ', 'Mai ', 'Zun ', 'Yu ', 'Ying ', 'Lu ', 'Tuan ', 'Xian ', 'Xue ', 'Yi ', 'Pi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x094.php\",\"ext\":\"php\",\"size\":2105,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Kui ', 'Si ', 'Liu ', 'Nao ', 'Heng ', 'Pie ', 'Sui ', 'Fan ', 'Qiao ', 'Quan ', 'Yang ', 'Tang ', 'Xiang ', 'Jue ', 'Jiao ', 'Zun ', 'Liao ', 'Jie ', 'Lao ', 'Dui ', 'Tan ', 'Zan ', 'Ji ', 'Jian ', 'Zhong ', 'Deng ', 'Ya ', 'Ying ', 'Dui ', 'Jue ', 'Nou ', 'Ti ', 'Pu ', 'Tie ', '[?] ', '[?] ', 'Ding ', 'Shan ', 'Kai ', 'Jian ', 'Fei ', 'Sui ', 'Lu ', 'Juan ', 'Hui ', 'Yu ', 'Lian ', 'Zhuo ', 'Qiao ', 'Qian ', 'Zhuo ', 'Lei ', 'Bi ', 'Tie ', 'Huan ', 'Ye ', 'Duo ', 'Guo ', 'Dang ', 'Ju ', 'Fen ', 'Da ', 'Bei ', 'Yi ', 'Ai ', 'Zong ', 'Xun ', 'Diao ', 'Zhu ', 'Heng ', 'Zhui ', 'Ji ', 'Nie ', 'Ta ', 'Huo ', 'Qing ', 'Bin ', 'Ying ', 'Kui ', 'Ning ', 'Xu ', 'Jian ', 'Jian ', 'Yari ', 'Cha ', 'Zhi ', 'Mie ', 'Li ', 'Lei ', 'Ji ', 'Zuan ', 'Kuang ', 'Shang ', 'Peng ', 'La ', 'Du ', 'Shuo ', 'Chuo ', 'Lu ', 'Biao ', 'Bao ', 'Lu ', '[?] ', '[?] ', 'Long ', 'E ', 'Lu ', 'Xin ', 'Jian ', 'Lan ', 'Bo ', 'Jian ', 'Yao ', 'Chan ', 'Xiang ', 'Jian ', 'Xi ', 'Guan ', 'Cang ', 'Nie ', 'Lei ', 'Cuan ', 'Qu ', 'Pan ', 'Luo ', 'Zuan ', 'Luan ', 'Zao ', 'Nie ', 'Jue ', 'Tang ', 'Shu ', 'Lan ', 'Jin ', 'Qiu ', 'Yi ', 'Zhen ', 'Ding ', 'Zhao ', 'Po ', 'Diao ', 'Tu ', 'Qian ', 'Chuan ', 'Shan ', 'Ji ', 'Fan ', 'Diao ', 'Men ', 'Nu ', 'Xi ', 'Chai ', 'Xing ', 'Gai ', 'Bu ', 'Tai ', 'Ju ', 'Dun ', 'Chao ', 'Zhong ', 'Na ', 'Bei ', 'Gang ', 'Ban ', 'Qian ', 'Yao ', 'Qin ', 'Jun ', 'Wu ', 'Gou ', 'Kang ', 'Fang ', 'Huo ', 'Tou ', 'Niu ', 'Ba ', 'Yu ', 'Qian ', 'Zheng ', 'Qian ', 'Gu ', 'Bo ', 'E ', 'Po ', 'Bu ', 'Ba ', 'Yue ', 'Zuan ', 'Mu ', 'Dan ', 'Jia ', 'Dian ', 'You ', 'Tie ', 'Bo ', 'Ling ', 'Shuo ', 'Qian ', 'Liu ', 'Bao ', 'Shi ', 'Xuan ', 'She ', 'Bi ', 'Ni ', 'Pi ', 'Duo ', 'Xing ', 'Kao ', 'Lao ', 'Er ', 'Mang ', 'Ya ', 'You ', 'Cheng ', 'Jia ', 'Ye ', 'Nao ', 'Zhi ', 'Dang ', 'Tong ', 'Lu ', 'Diao ', 'Yin ', 'Kai ', 'Zha ', 'Zhu ', 'Xian ', 'Ting ', 'Diu ', 'Xian ', 'Hua ', 'Quan ', 'Sha ', 'Jia ', 'Yao ', 'Ge ', 'Ming ', 'Zheng ', 'Se ', 'Jiao ', 'Yi ', 'Chan ', 'Chong ', 'Tang ', 'An ', 'Yin ', 'Ru ', 'Zhu ', 'Lao ', 'Pu ', 'Wu ', 'Lai ', 'Te ', 'Lian ', 'Keng '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c8.php\",\"ext\":\"php\",\"size\":2177,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['jeo', 'jeog', 'jeogg', 'jeogs', 'jeon', 'jeonj', 'jeonh', 'jeod', 'jeol', 'jeolg', 'jeolm', 'jeolb', 'jeols', 'jeolt', 'jeolp', 'jeolh', 'jeom', 'jeob', 'jeobs', 'jeos', 'jeoss', 'jeong', 'jeoj', 'jeoc', 'jeok', 'jeot', 'jeop', 'jeoh', 'je', 'jeg', 'jegg', 'jegs', 'jen', 'jenj', 'jenh', 'jed', 'jel', 'jelg', 'jelm', 'jelb', 'jels', 'jelt', 'jelp', 'jelh', 'jem', 'jeb', 'jebs', 'jes', 'jess', 'jeng', 'jej', 'jec', 'jek', 'jet', 'jep', 'jeh', 'jyeo', 'jyeog', 'jyeogg', 'jyeogs', 'jyeon', 'jyeonj', 'jyeonh', 'jyeod', 'jyeol', 'jyeolg', 'jyeolm', 'jyeolb', 'jyeols', 'jyeolt', 'jyeolp', 'jyeolh', 'jyeom', 'jyeob', 'jyeobs', 'jyeos', 'jyeoss', 'jyeong', 'jyeoj', 'jyeoc', 'jyeok', 'jyeot', 'jyeop', 'jyeoh', 'jye', 'jyeg', 'jyegg', 'jyegs', 'jyen', 'jyenj', 'jyenh', 'jyed', 'jyel', 'jyelg', 'jyelm', 'jyelb', 'jyels', 'jyelt', 'jyelp', 'jyelh', 'jyem', 'jyeb', 'jyebs', 'jyes', 'jyess', 'jyeng', 'jyej', 'jyec', 'jyek', 'jyet', 'jyep', 'jyeh', 'jo', 'jog', 'jogg', 'jogs', 'jon', 'jonj', 'jonh', 'jod', 'jol', 'jolg', 'jolm', 'jolb', 'jols', 'jolt', 'jolp', 'jolh', 'jom', 'job', 'jobs', 'jos', 'joss', 'jong', 'joj', 'joc', 'jok', 'jot', 'jop', 'joh', 'jwa', 'jwag', 'jwagg', 'jwags', 'jwan', 'jwanj', 'jwanh', 'jwad', 'jwal', 'jwalg', 'jwalm', 'jwalb', 'jwals', 'jwalt', 'jwalp', 'jwalh', 'jwam', 'jwab', 'jwabs', 'jwas', 'jwass', 'jwang', 'jwaj', 'jwac', 'jwak', 'jwat', 'jwap', 'jwah', 'jwae', 'jwaeg', 'jwaegg', 'jwaegs', 'jwaen', 'jwaenj', 'jwaenh', 'jwaed', 'jwael', 'jwaelg', 'jwaelm', 'jwaelb', 'jwaels', 'jwaelt', 'jwaelp', 'jwaelh', 'jwaem', 'jwaeb', 'jwaebs', 'jwaes', 'jwaess', 'jwaeng', 'jwaej', 'jwaec', 'jwaek', 'jwaet', 'jwaep', 'jwaeh', 'joe', 'joeg', 'joegg', 'joegs', 'joen', 'joenj', 'joenh', 'joed', 'joel', 'joelg', 'joelm', 'joelb', 'joels', 'joelt', 'joelp', 'joelh', 'joem', 'joeb', 'joebs', 'joes', 'joess', 'joeng', 'joej', 'joec', 'joek', 'joet', 'joep', 'joeh', 'jyo', 'jyog', 'jyogg', 'jyogs', 'jyon', 'jyonj', 'jyonh', 'jyod', 'jyol', 'jyolg', 'jyolm', 'jyolb', 'jyols', 'jyolt', 'jyolp', 'jyolh', 'jyom', 'jyob', 'jyobs', 'jyos', 'jyoss', 'jyong', 'jyoj', 'jyoc', 'jyok', 'jyot', 'jyop', 'jyoh', 'ju', 'jug', 'jugg', 'jugs'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0a2.php\",\"ext\":\"php\",\"size\":1947,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['kax', 'ka', 'kap', 'kuox', 'kuo', 'kuop', 'kot', 'kox', 'ko', 'kop', 'ket', 'kex', 'ke', 'kep', 'kut', 'kux', 'ku', 'kup', 'kurx', 'kur', 'ggit', 'ggix', 'ggi', 'ggiex', 'ggie', 'ggiep', 'ggat', 'ggax', 'gga', 'ggap', 'gguot', 'gguox', 'gguo', 'gguop', 'ggot', 'ggox', 'ggo', 'ggop', 'gget', 'ggex', 'gge', 'ggep', 'ggut', 'ggux', 'ggu', 'ggup', 'ggurx', 'ggur', 'mgiex', 'mgie', 'mgat', 'mgax', 'mga', 'mgap', 'mguox', 'mguo', 'mguop', 'mgot', 'mgox', 'mgo', 'mgop', 'mgex', 'mge', 'mgep', 'mgut', 'mgux', 'mgu', 'mgup', 'mgurx', 'mgur', 'hxit', 'hxix', 'hxi', 'hxip', 'hxiet', 'hxiex', 'hxie', 'hxiep', 'hxat', 'hxax', 'hxa', 'hxap', 'hxuot', 'hxuox', 'hxuo', 'hxuop', 'hxot', 'hxox', 'hxo', 'hxop', 'hxex', 'hxe', 'hxep', 'ngiex', 'ngie', 'ngiep', 'ngat', 'ngax', 'nga', 'ngap', 'nguot', 'nguox', 'nguo', 'ngot', 'ngox', 'ngo', 'ngop', 'ngex', 'nge', 'ngep', 'hit', 'hiex', 'hie', 'hat', 'hax', 'ha', 'hap', 'huot', 'huox', 'huo', 'huop', 'hot', 'hox', 'ho', 'hop', 'hex', 'he', 'hep', 'wat', 'wax', 'wa', 'wap', 'wuox', 'wuo', 'wuop', 'wox', 'wo', 'wop', 'wex', 'we', 'wep', 'zit', 'zix', 'zi', 'zip', 'ziex', 'zie', 'ziep', 'zat', 'zax', 'za', 'zap', 'zuox', 'zuo', 'zuop', 'zot', 'zox', 'zo', 'zop', 'zex', 'ze', 'zep', 'zut', 'zux', 'zu', 'zup', 'zurx', 'zur', 'zyt', 'zyx', 'zy', 'zyp', 'zyrx', 'zyr', 'cit', 'cix', 'ci', 'cip', 'ciet', 'ciex', 'cie', 'ciep', 'cat', 'cax', 'ca', 'cap', 'cuox', 'cuo', 'cuop', 'cot', 'cox', 'co', 'cop', 'cex', 'ce', 'cep', 'cut', 'cux', 'cu', 'cup', 'curx', 'cur', 'cyt', 'cyx', 'cy', 'cyp', 'cyrx', 'cyr', 'zzit', 'zzix', 'zzi', 'zzip', 'zziet', 'zziex', 'zzie', 'zziep', 'zzat', 'zzax', 'zza', 'zzap', 'zzox', 'zzo', 'zzop', 'zzex', 'zze', 'zzep', 'zzux', 'zzu', 'zzup', 'zzurx', 'zzur', 'zzyt', 'zzyx', 'zzy', 'zzyp', 'zzyrx', 'zzyr', 'nzit', 'nzix', 'nzi', 'nzip', 'nziex', 'nzie', 'nziep', 'nzat', 'nzax', 'nza', 'nzap', 'nzuox', 'nzuo', 'nzox', 'nzop', 'nzex', 'nze', 'nzux', 'nzu'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0cb.php\",\"ext\":\"php\",\"size\":2456,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['jjwaels', 'jjwaelt', 'jjwaelp', 'jjwaelh', 'jjwaem', 'jjwaeb', 'jjwaebs', 'jjwaes', 'jjwaess', 'jjwaeng', 'jjwaej', 'jjwaec', 'jjwaek', 'jjwaet', 'jjwaep', 'jjwaeh', 'jjoe', 'jjoeg', 'jjoegg', 'jjoegs', 'jjoen', 'jjoenj', 'jjoenh', 'jjoed', 'jjoel', 'jjoelg', 'jjoelm', 'jjoelb', 'jjoels', 'jjoelt', 'jjoelp', 'jjoelh', 'jjoem', 'jjoeb', 'jjoebs', 'jjoes', 'jjoess', 'jjoeng', 'jjoej', 'jjoec', 'jjoek', 'jjoet', 'jjoep', 'jjoeh', 'jjyo', 'jjyog', 'jjyogg', 'jjyogs', 'jjyon', 'jjyonj', 'jjyonh', 'jjyod', 'jjyol', 'jjyolg', 'jjyolm', 'jjyolb', 'jjyols', 'jjyolt', 'jjyolp', 'jjyolh', 'jjyom', 'jjyob', 'jjyobs', 'jjyos', 'jjyoss', 'jjyong', 'jjyoj', 'jjyoc', 'jjyok', 'jjyot', 'jjyop', 'jjyoh', 'jju', 'jjug', 'jjugg', 'jjugs', 'jjun', 'jjunj', 'jjunh', 'jjud', 'jjul', 'jjulg', 'jjulm', 'jjulb', 'jjuls', 'jjult', 'jjulp', 'jjulh', 'jjum', 'jjub', 'jjubs', 'jjus', 'jjuss', 'jjung', 'jjuj', 'jjuc', 'jjuk', 'jjut', 'jjup', 'jjuh', 'jjweo', 'jjweog', 'jjweogg', 'jjweogs', 'jjweon', 'jjweonj', 'jjweonh', 'jjweod', 'jjweol', 'jjweolg', 'jjweolm', 'jjweolb', 'jjweols', 'jjweolt', 'jjweolp', 'jjweolh', 'jjweom', 'jjweob', 'jjweobs', 'jjweos', 'jjweoss', 'jjweong', 'jjweoj', 'jjweoc', 'jjweok', 'jjweot', 'jjweop', 'jjweoh', 'jjwe', 'jjweg', 'jjwegg', 'jjwegs', 'jjwen', 'jjwenj', 'jjwenh', 'jjwed', 'jjwel', 'jjwelg', 'jjwelm', 'jjwelb', 'jjwels', 'jjwelt', 'jjwelp', 'jjwelh', 'jjwem', 'jjweb', 'jjwebs', 'jjwes', 'jjwess', 'jjweng', 'jjwej', 'jjwec', 'jjwek', 'jjwet', 'jjwep', 'jjweh', 'jjwi', 'jjwig', 'jjwigg', 'jjwigs', 'jjwin', 'jjwinj', 'jjwinh', 'jjwid', 'jjwil', 'jjwilg', 'jjwilm', 'jjwilb', 'jjwils', 'jjwilt', 'jjwilp', 'jjwilh', 'jjwim', 'jjwib', 'jjwibs', 'jjwis', 'jjwiss', 'jjwing', 'jjwij', 'jjwic', 'jjwik', 'jjwit', 'jjwip', 'jjwih', 'jjyu', 'jjyug', 'jjyugg', 'jjyugs', 'jjyun', 'jjyunj', 'jjyunh', 'jjyud', 'jjyul', 'jjyulg', 'jjyulm', 'jjyulb', 'jjyuls', 'jjyult', 'jjyulp', 'jjyulh', 'jjyum', 'jjyub', 'jjyubs', 'jjyus', 'jjyuss', 'jjyung', 'jjyuj', 'jjyuc', 'jjyuk', 'jjyut', 'jjyup', 'jjyuh', 'jjeu', 'jjeug', 'jjeugg', 'jjeugs', 'jjeun', 'jjeunj', 'jjeunh', 'jjeud', 'jjeul', 'jjeulg', 'jjeulm', 'jjeulb', 'jjeuls', 'jjeult', 'jjeulp', 'jjeulh', 'jjeum', 'jjeub', 'jjeubs', 'jjeus', 'jjeuss', 'jjeung', 'jjeuj', 'jjeuc', 'jjeuk', 'jjeut', 'jjeup', 'jjeuh', 'jjyi', 'jjyig', 'jjyigg', 'jjyigs', 'jjyin', 'jjyinj', 'jjyinh', 'jjyid', 'jjyil', 'jjyilg', 'jjyilm', 'jjyilb', 'jjyils', 'jjyilt', 'jjyilp', 'jjyilh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x05d.php\",\"ext\":\"php\",\"size\":2114,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Lang ', 'Kan ', 'Lao ', 'Lai ', 'Xian ', 'Que ', 'Kong ', 'Chong ', 'Chong ', 'Ta ', 'Lin ', 'Hua ', 'Ju ', 'Lai ', 'Qi ', 'Min ', 'Kun ', 'Kun ', 'Zu ', 'Gu ', 'Cui ', 'Ya ', 'Ya ', 'Gang ', 'Lun ', 'Lun ', 'Leng ', 'Jue ', 'Duo ', 'Zheng ', 'Guo ', 'Yin ', 'Dong ', 'Han ', 'Zheng ', 'Wei ', 'Yao ', 'Pi ', 'Yan ', 'Song ', 'Jie ', 'Beng ', 'Zu ', 'Jue ', 'Dong ', 'Zhan ', 'Gu ', 'Yin ', '[?] ', 'Ze ', 'Huang ', 'Yu ', 'Wei ', 'Yang ', 'Feng ', 'Qiu ', 'Dun ', 'Ti ', 'Yi ', 'Zhi ', 'Shi ', 'Zai ', 'Yao ', 'E ', 'Zhu ', 'Kan ', 'Lu ', 'Yan ', 'Mei ', 'Gan ', 'Ji ', 'Ji ', 'Huan ', 'Ting ', 'Sheng ', 'Mei ', 'Qian ', 'Wu ', 'Yu ', 'Zong ', 'Lan ', 'Jue ', 'Yan ', 'Yan ', 'Wei ', 'Zong ', 'Cha ', 'Sui ', 'Rong ', 'Yamashina ', 'Qin ', 'Yu ', 'Kewashii ', 'Lou ', 'Tu ', 'Dui ', 'Xi ', 'Weng ', 'Cang ', 'Dang ', 'Hong ', 'Jie ', 'Ai ', 'Liu ', 'Wu ', 'Song ', 'Qiao ', 'Zi ', 'Wei ', 'Beng ', 'Dian ', 'Cuo ', 'Qian ', 'Yong ', 'Nie ', 'Cuo ', 'Ji ', '[?] ', 'Tao ', 'Song ', 'Zong ', 'Jiang ', 'Liao ', 'Kang ', 'Chan ', 'Die ', 'Cen ', 'Ding ', 'Tu ', 'Lou ', 'Zhang ', 'Zhan ', 'Zhan ', 'Ao ', 'Cao ', 'Qu ', 'Qiang ', 'Zui ', 'Zui ', 'Dao ', 'Dao ', 'Xi ', 'Yu ', 'Bo ', 'Long ', 'Xiang ', 'Ceng ', 'Bo ', 'Qin ', 'Jiao ', 'Yan ', 'Lao ', 'Zhan ', 'Lin ', 'Liao ', 'Liao ', 'Jin ', 'Deng ', 'Duo ', 'Zun ', 'Jiao ', 'Gui ', 'Yao ', 'Qiao ', 'Yao ', 'Jue ', 'Zhan ', 'Yi ', 'Xue ', 'Nao ', 'Ye ', 'Ye ', 'Yi ', 'E ', 'Xian ', 'Ji ', 'Xie ', 'Ke ', 'Xi ', 'Di ', 'Ao ', 'Zui ', '[?] ', 'Ni ', 'Rong ', 'Dao ', 'Ling ', 'Za ', 'Yu ', 'Yue ', 'Yin ', '[?] ', 'Jie ', 'Li ', 'Sui ', 'Long ', 'Long ', 'Dian ', 'Ying ', 'Xi ', 'Ju ', 'Chan ', 'Ying ', 'Kui ', 'Yan ', 'Wei ', 'Nao ', 'Quan ', 'Chao ', 'Cuan ', 'Luan ', 'Dian ', 'Dian ', '[?] ', 'Yan ', 'Yan ', 'Yan ', 'Nao ', 'Yan ', 'Chuan ', 'Gui ', 'Chuan ', 'Zhou ', 'Huang ', 'Jing ', 'Xun ', 'Chao ', 'Chao ', 'Lie ', 'Gong ', 'Zuo ', 'Qiao ', 'Ju ', 'Gong ', 'Kek ', 'Wu ', 'Pwu ', 'Pwu ', 'Chai ', 'Qiu ', 'Qiu ', 'Ji ', 'Yi ', 'Si ', 'Ba ', 'Zhi ', 'Zhao ', 'Xiang ', 'Yi ', 'Jin ', 'Xun ', 'Juan ', 'Phas ', 'Xun ', 'Jin ', 'Fu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b1.php\",\"ext\":\"php\",\"size\":2190,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['nyaess', 'nyaeng', 'nyaej', 'nyaec', 'nyaek', 'nyaet', 'nyaep', 'nyaeh', 'neo', 'neog', 'neogg', 'neogs', 'neon', 'neonj', 'neonh', 'neod', 'neol', 'neolg', 'neolm', 'neolb', 'neols', 'neolt', 'neolp', 'neolh', 'neom', 'neob', 'neobs', 'neos', 'neoss', 'neong', 'neoj', 'neoc', 'neok', 'neot', 'neop', 'neoh', 'ne', 'neg', 'negg', 'negs', 'nen', 'nenj', 'nenh', 'ned', 'nel', 'nelg', 'nelm', 'nelb', 'nels', 'nelt', 'nelp', 'nelh', 'nem', 'neb', 'nebs', 'nes', 'ness', 'neng', 'nej', 'nec', 'nek', 'net', 'nep', 'neh', 'nyeo', 'nyeog', 'nyeogg', 'nyeogs', 'nyeon', 'nyeonj', 'nyeonh', 'nyeod', 'nyeol', 'nyeolg', 'nyeolm', 'nyeolb', 'nyeols', 'nyeolt', 'nyeolp', 'nyeolh', 'nyeom', 'nyeob', 'nyeobs', 'nyeos', 'nyeoss', 'nyeong', 'nyeoj', 'nyeoc', 'nyeok', 'nyeot', 'nyeop', 'nyeoh', 'nye', 'nyeg', 'nyegg', 'nyegs', 'nyen', 'nyenj', 'nyenh', 'nyed', 'nyel', 'nyelg', 'nyelm', 'nyelb', 'nyels', 'nyelt', 'nyelp', 'nyelh', 'nyem', 'nyeb', 'nyebs', 'nyes', 'nyess', 'nyeng', 'nyej', 'nyec', 'nyek', 'nyet', 'nyep', 'nyeh', 'no', 'nog', 'nogg', 'nogs', 'non', 'nonj', 'nonh', 'nod', 'nol', 'nolg', 'nolm', 'nolb', 'nols', 'nolt', 'nolp', 'nolh', 'nom', 'nob', 'nobs', 'nos', 'noss', 'nong', 'noj', 'noc', 'nok', 'not', 'nop', 'noh', 'nwa', 'nwag', 'nwagg', 'nwags', 'nwan', 'nwanj', 'nwanh', 'nwad', 'nwal', 'nwalg', 'nwalm', 'nwalb', 'nwals', 'nwalt', 'nwalp', 'nwalh', 'nwam', 'nwab', 'nwabs', 'nwas', 'nwass', 'nwang', 'nwaj', 'nwac', 'nwak', 'nwat', 'nwap', 'nwah', 'nwae', 'nwaeg', 'nwaegg', 'nwaegs', 'nwaen', 'nwaenj', 'nwaenh', 'nwaed', 'nwael', 'nwaelg', 'nwaelm', 'nwaelb', 'nwaels', 'nwaelt', 'nwaelp', 'nwaelh', 'nwaem', 'nwaeb', 'nwaebs', 'nwaes', 'nwaess', 'nwaeng', 'nwaej', 'nwaec', 'nwaek', 'nwaet', 'nwaep', 'nwaeh', 'noe', 'noeg', 'noegg', 'noegs', 'noen', 'noenj', 'noenh', 'noed', 'noel', 'noelg', 'noelm', 'noelb', 'noels', 'noelt', 'noelp', 'noelh', 'noem', 'noeb', 'noebs', 'noes', 'noess', 'noeng', 'noej', 'noec', 'noek', 'noet', 'noep', 'noeh', 'nyo', 'nyog', 'nyogg', 'nyogs', 'nyon', 'nyonj', 'nyonh', 'nyod', 'nyol', 'nyolg', 'nyolm', 'nyolb', 'nyols', 'nyolt', 'nyolp', 'nyolh', 'nyom', 'nyob', 'nyobs', 'nyos', 'nyoss', 'nyong', 'nyoj', 'nyoc'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b0.php\",\"ext\":\"php\",\"size\":2297,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ggwem', 'ggweb', 'ggwebs', 'ggwes', 'ggwess', 'ggweng', 'ggwej', 'ggwec', 'ggwek', 'ggwet', 'ggwep', 'ggweh', 'ggwi', 'ggwig', 'ggwigg', 'ggwigs', 'ggwin', 'ggwinj', 'ggwinh', 'ggwid', 'ggwil', 'ggwilg', 'ggwilm', 'ggwilb', 'ggwils', 'ggwilt', 'ggwilp', 'ggwilh', 'ggwim', 'ggwib', 'ggwibs', 'ggwis', 'ggwiss', 'ggwing', 'ggwij', 'ggwic', 'ggwik', 'ggwit', 'ggwip', 'ggwih', 'ggyu', 'ggyug', 'ggyugg', 'ggyugs', 'ggyun', 'ggyunj', 'ggyunh', 'ggyud', 'ggyul', 'ggyulg', 'ggyulm', 'ggyulb', 'ggyuls', 'ggyult', 'ggyulp', 'ggyulh', 'ggyum', 'ggyub', 'ggyubs', 'ggyus', 'ggyuss', 'ggyung', 'ggyuj', 'ggyuc', 'ggyuk', 'ggyut', 'ggyup', 'ggyuh', 'ggeu', 'ggeug', 'ggeugg', 'ggeugs', 'ggeun', 'ggeunj', 'ggeunh', 'ggeud', 'ggeul', 'ggeulg', 'ggeulm', 'ggeulb', 'ggeuls', 'ggeult', 'ggeulp', 'ggeulh', 'ggeum', 'ggeub', 'ggeubs', 'ggeus', 'ggeuss', 'ggeung', 'ggeuj', 'ggeuc', 'ggeuk', 'ggeut', 'ggeup', 'ggeuh', 'ggyi', 'ggyig', 'ggyigg', 'ggyigs', 'ggyin', 'ggyinj', 'ggyinh', 'ggyid', 'ggyil', 'ggyilg', 'ggyilm', 'ggyilb', 'ggyils', 'ggyilt', 'ggyilp', 'ggyilh', 'ggyim', 'ggyib', 'ggyibs', 'ggyis', 'ggyiss', 'ggying', 'ggyij', 'ggyic', 'ggyik', 'ggyit', 'ggyip', 'ggyih', 'ggi', 'ggig', 'ggigg', 'ggigs', 'ggin', 'gginj', 'gginh', 'ggid', 'ggil', 'ggilg', 'ggilm', 'ggilb', 'ggils', 'ggilt', 'ggilp', 'ggilh', 'ggim', 'ggib', 'ggibs', 'ggis', 'ggiss', 'gging', 'ggij', 'ggic', 'ggik', 'ggit', 'ggip', 'ggih', 'na', 'nag', 'nagg', 'nags', 'nan', 'nanj', 'nanh', 'nad', 'nal', 'nalg', 'nalm', 'nalb', 'nals', 'nalt', 'nalp', 'nalh', 'nam', 'nab', 'nabs', 'nas', 'nass', 'nang', 'naj', 'nac', 'nak', 'nat', 'nap', 'nah', 'nae', 'naeg', 'naegg', 'naegs', 'naen', 'naenj', 'naenh', 'naed', 'nael', 'naelg', 'naelm', 'naelb', 'naels', 'naelt', 'naelp', 'naelh', 'naem', 'naeb', 'naebs', 'naes', 'naess', 'naeng', 'naej', 'naec', 'naek', 'naet', 'naep', 'naeh', 'nya', 'nyag', 'nyagg', 'nyags', 'nyan', 'nyanj', 'nyanh', 'nyad', 'nyal', 'nyalg', 'nyalm', 'nyalb', 'nyals', 'nyalt', 'nyalp', 'nyalh', 'nyam', 'nyab', 'nyabs', 'nyas', 'nyass', 'nyang', 'nyaj', 'nyac', 'nyak', 'nyat', 'nyap', 'nyah', 'nyae', 'nyaeg', 'nyaegg', 'nyaegs', 'nyaen', 'nyaenj', 'nyaenh', 'nyaed', 'nyael', 'nyaelg', 'nyaelm', 'nyaelb', 'nyaels', 'nyaelt', 'nyaelp', 'nyaelh', 'nyaem', 'nyaeb', 'nyaebs', 'nyaes'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x02a.php\",\"ext\":\"php\",\"size\":1043,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php returnn\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0fb.php\",\"ext\":\"php\",\"size\":1282,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ff', 'fi', 'fl', 'ffi', 'ffl', 'st', 'st', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'mn', 'me', 'mi', 'vn', 'mkh', '[?]', '[?]', '[?]', '[?]', '[?]', 'yi', '', 'ay', '`', '', 'd', 'h', 'k', 'l', 'm', 'm', 't', '+', 'sh', 's', 'sh', 's', 'a', 'a', '', 'b', 'g', 'd', 'h', 'v', 'z', '[?]', 't', 'y', 'k', 'k', 'l', '[?]', 'l', '[?]', 'n', 'n', '[?]', 'p', 'p', '[?]', 'ts', 'ts', 'r', 'sh', 't', 'vo', 'b', 'k', 'p', 'ln\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x025.php\",\"ext\":\"php\",\"size\":1322,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['-', '-', '|', '|', '-', '-', '|', '|', '-', '-', '|', '|', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '-', '-', '|', '|', '-', '|', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '+', '\/', '\\\\\\\\', 'X', '-', '|', '-', '|', '-', '|', '-', '|', '-', '|', '-', '|', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '-', '|n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x054.php\",\"ext\":\"php\",\"size\":2027,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Mie ', 'Xu ', 'Mang ', 'Chi ', 'Ge ', 'Xuan ', 'Yao ', 'Zi ', 'He ', 'Ji ', 'Diao ', 'Cun ', 'Tong ', 'Ming ', 'Hou ', 'Li ', 'Tu ', 'Xiang ', 'Zha ', 'Xia ', 'Ye ', 'Lu ', 'A ', 'Ma ', 'Ou ', 'Xue ', 'Yi ', 'Jun ', 'Chou ', 'Lin ', 'Tun ', 'Yin ', 'Fei ', 'Bi ', 'Qin ', 'Qin ', 'Jie ', 'Bu ', 'Fou ', 'Ba ', 'Dun ', 'Fen ', 'E ', 'Han ', 'Ting ', 'Hang ', 'Shun ', 'Qi ', 'Hong ', 'Zhi ', 'Shen ', 'Wu ', 'Wu ', 'Chao ', 'Ne ', 'Xue ', 'Xi ', 'Chui ', 'Dou ', 'Wen ', 'Hou ', 'Ou ', 'Wu ', 'Gao ', 'Ya ', 'Jun ', 'Lu ', 'E ', 'Ge ', 'Mei ', 'Ai ', 'Qi ', 'Cheng ', 'Wu ', 'Gao ', 'Fu ', 'Jiao ', 'Hong ', 'Chi ', 'Sheng ', 'Ne ', 'Tun ', 'Fu ', 'Yi ', 'Dai ', 'Ou ', 'Li ', 'Bai ', 'Yuan ', 'Kuai ', '[?] ', 'Qiang ', 'Wu ', 'E ', 'Shi ', 'Quan ', 'Pen ', 'Wen ', 'Ni ', 'M ', 'Ling ', 'Ran ', 'You ', 'Di ', 'Zhou ', 'Shi ', 'Zhou ', 'Tie ', 'Xi ', 'Yi ', 'Qi ', 'Ping ', 'Zi ', 'Gu ', 'Zi ', 'Wei ', 'Xu ', 'He ', 'Nao ', 'Xia ', 'Pei ', 'Yi ', 'Xiao ', 'Shen ', 'Hu ', 'Ming ', 'Da ', 'Qu ', 'Ju ', 'Gem ', 'Za ', 'Tuo ', 'Duo ', 'Pou ', 'Pao ', 'Bi ', 'Fu ', 'Yang ', 'He ', 'Zha ', 'He ', 'Hai ', 'Jiu ', 'Yong ', 'Fu ', 'Que ', 'Zhou ', 'Wa ', 'Ka ', 'Gu ', 'Ka ', 'Zuo ', 'Bu ', 'Long ', 'Dong ', 'Ning ', 'Tha ', 'Si ', 'Xian ', 'Huo ', 'Qi ', 'Er ', 'E ', 'Guang ', 'Zha ', 'Xi ', 'Yi ', 'Lie ', 'Zi ', 'Mie ', 'Mi ', 'Zhi ', 'Yao ', 'Ji ', 'Zhou ', 'Ge ', 'Shuai ', 'Zan ', 'Xiao ', 'Ke ', 'Hui ', 'Kua ', 'Huai ', 'Tao ', 'Xian ', 'E ', 'Xuan ', 'Xiu ', 'Wai ', 'Yan ', 'Lao ', 'Yi ', 'Ai ', 'Pin ', 'Shen ', 'Tong ', 'Hong ', 'Xiong ', 'Chi ', 'Wa ', 'Ha ', 'Zai ', 'Yu ', 'Di ', 'Pai ', 'Xiang ', 'Ai ', 'Hen ', 'Kuang ', 'Ya ', 'Da ', 'Xiao ', 'Bi ', 'Yue ', '[?] ', 'Hua ', 'Sasou ', 'Kuai ', 'Duo ', '[?] ', 'Ji ', 'Nong ', 'Mou ', 'Yo ', 'Hao ', 'Yuan ', 'Long ', 'Pou ', 'Mang ', 'Ge ', 'E ', 'Chi ', 'Shao ', 'Li ', 'Na ', 'Zu ', 'He ', 'Ku ', 'Xiao ', 'Xian ', 'Lao ', 'Bo ', 'Zhe ', 'Zha ', 'Liang ', 'Ba ', 'Mie ', 'Le ', 'Sui ', 'Fou ', 'Bu ', 'Han ', 'Heng ', 'Geng ', 'Shuo ', 'Ge '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x099.php\",\"ext\":\"php\",\"size\":2073,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Hai ', 'Ren ', 'Tian ', 'Jiao ', 'Jia ', 'Bing ', 'Yao ', 'Tong ', 'Ci ', 'Xiang ', 'Yang ', 'Yang ', 'Er ', 'Yan ', 'Le ', 'Yi ', 'Can ', 'Bo ', 'Nei ', 'E ', 'Bu ', 'Jun ', 'Dou ', 'Su ', 'Yu ', 'Shi ', 'Yao ', 'Hun ', 'Guo ', 'Shi ', 'Jian ', 'Zhui ', 'Bing ', 'Xian ', 'Bu ', 'Ye ', 'Tan ', 'Fei ', 'Zhang ', 'Wei ', 'Guan ', 'E ', 'Nuan ', 'Hun ', 'Hu ', 'Huang ', 'Tie ', 'Hui ', 'Jian ', 'Hou ', 'He ', 'Xing ', 'Fen ', 'Wei ', 'Gu ', 'Cha ', 'Song ', 'Tang ', 'Bo ', 'Gao ', 'Xi ', 'Kui ', 'Liu ', 'Sou ', 'Tao ', 'Ye ', 'Yun ', 'Mo ', 'Tang ', 'Man ', 'Bi ', 'Yu ', 'Xiu ', 'Jin ', 'San ', 'Kui ', 'Zhuan ', 'Shan ', 'Chi ', 'Dan ', 'Yi ', 'Ji ', 'Rao ', 'Cheng ', 'Yong ', 'Tao ', 'Hui ', 'Xiang ', 'Zhan ', 'Fen ', 'Hai ', 'Meng ', 'Yan ', 'Mo ', 'Chan ', 'Xiang ', 'Luo ', 'Zuan ', 'Nang ', 'Shi ', 'Ding ', 'Ji ', 'Tuo ', 'Xing ', 'Tun ', 'Xi ', 'Ren ', 'Yu ', 'Chi ', 'Fan ', 'Yin ', 'Jian ', 'Shi ', 'Bao ', 'Si ', 'Duo ', 'Yi ', 'Er ', 'Rao ', 'Xiang ', 'Jia ', 'Le ', 'Jiao ', 'Yi ', 'Bing ', 'Bo ', 'Dou ', 'E ', 'Yu ', 'Nei ', 'Jun ', 'Guo ', 'Hun ', 'Xian ', 'Guan ', 'Cha ', 'Kui ', 'Gu ', 'Sou ', 'Chan ', 'Ye ', 'Mo ', 'Bo ', 'Liu ', 'Xiu ', 'Jin ', 'Man ', 'San ', 'Zhuan ', 'Nang ', 'Shou ', 'Kui ', 'Guo ', 'Xiang ', 'Fen ', 'Ba ', 'Ni ', 'Bi ', 'Bo ', 'Tu ', 'Han ', 'Fei ', 'Jian ', 'An ', 'Ai ', 'Fu ', 'Xian ', 'Wen ', 'Xin ', 'Fen ', 'Bin ', 'Xing ', 'Ma ', 'Yu ', 'Feng ', 'Han ', 'Di ', 'Tuo ', 'Tuo ', 'Chi ', 'Xun ', 'Zhu ', 'Zhi ', 'Pei ', 'Xin ', 'Ri ', 'Sa ', 'Yin ', 'Wen ', 'Zhi ', 'Dan ', 'Lu ', 'You ', 'Bo ', 'Bao ', 'Kuai ', 'Tuo ', 'Yi ', 'Qu ', '[?] ', 'Qu ', 'Jiong ', 'Bo ', 'Zhao ', 'Yuan ', 'Peng ', 'Zhou ', 'Ju ', 'Zhu ', 'Nu ', 'Ju ', 'Pi ', 'Zang ', 'Jia ', 'Ling ', 'Zhen ', 'Tai ', 'Fu ', 'Yang ', 'Shi ', 'Bi ', 'Tuo ', 'Tuo ', 'Si ', 'Liu ', 'Ma ', 'Pian ', 'Tao ', 'Zhi ', 'Rong ', 'Teng ', 'Dong ', 'Xun ', 'Quan ', 'Shen ', 'Jiong ', 'Er ', 'Hai ', 'Bo ', 'Zhu ', 'Yin ', 'Luo ', 'Shuu ', 'Dan ', 'Xie ', 'Liu ', 'Ju ', 'Song ', 'Qin ', 'Mang ', 'Liang ', 'Han ', 'Tu ', 'Xuan ', 'Tui ', 'Jun '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x092.php\",\"ext\":\"php\",\"size\":2092,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ba ', 'Fang ', 'Chen ', 'Xing ', 'Tou ', 'Yue ', 'Yan ', 'Fu ', 'Pi ', 'Na ', 'Xin ', 'E ', 'Jue ', 'Dun ', 'Gou ', 'Yin ', 'Qian ', 'Ban ', 'Ji ', 'Ren ', 'Chao ', 'Niu ', 'Fen ', 'Yun ', 'Ji ', 'Qin ', 'Pi ', 'Guo ', 'Hong ', 'Yin ', 'Jun ', 'Shi ', 'Yi ', 'Zhong ', 'Nie ', 'Gai ', 'Ri ', 'Huo ', 'Tai ', 'Kang ', 'Habaki ', 'Irori ', 'Ngaak ', '[?] ', 'Duo ', 'Zi ', 'Ni ', 'Tu ', 'Shi ', 'Min ', 'Gu ', 'E ', 'Ling ', 'Bing ', 'Yi ', 'Gu ', 'Ba ', 'Pi ', 'Yu ', 'Si ', 'Zuo ', 'Bu ', 'You ', 'Dian ', 'Jia ', 'Zhen ', 'Shi ', 'Shi ', 'Tie ', 'Ju ', 'Zhan ', 'Shi ', 'She ', 'Xuan ', 'Zhao ', 'Bao ', 'He ', 'Bi ', 'Sheng ', 'Chu ', 'Shi ', 'Bo ', 'Zhu ', 'Chi ', 'Za ', 'Po ', 'Tong ', 'Qian ', 'Fu ', 'Zhai ', 'Liu ', 'Qian ', 'Fu ', 'Li ', 'Yue ', 'Pi ', 'Yang ', 'Ban ', 'Bo ', 'Jie ', 'Gou ', 'Shu ', 'Zheng ', 'Mu ', 'Ni ', 'Nie ', 'Di ', 'Jia ', 'Mu ', 'Dan ', 'Shen ', 'Yi ', 'Si ', 'Kuang ', 'Ka ', 'Bei ', 'Jian ', 'Tong ', 'Xing ', 'Hong ', 'Jiao ', 'Chi ', 'Er ', 'Ge ', 'Bing ', 'Shi ', 'Mou ', 'Jia ', 'Yin ', 'Jun ', 'Zhou ', 'Chong ', 'Shang ', 'Tong ', 'Mo ', 'Lei ', 'Ji ', 'Yu ', 'Xu ', 'Ren ', 'Zun ', 'Zhi ', 'Qiong ', 'Shan ', 'Chi ', 'Xian ', 'Xing ', 'Quan ', 'Pi ', 'Tie ', 'Zhu ', 'Hou ', 'Ming ', 'Kua ', 'Yao ', 'Xian ', 'Xian ', 'Xiu ', 'Jun ', 'Cha ', 'Lao ', 'Ji ', 'Pi ', 'Ru ', 'Mi ', 'Yi ', 'Yin ', 'Guang ', 'An ', 'Diou ', 'You ', 'Se ', 'Kao ', 'Qian ', 'Luan ', 'Kasugai ', 'Ai ', 'Diao ', 'Han ', 'Rui ', 'Shi ', 'Keng ', 'Qiu ', 'Xiao ', 'Zhe ', 'Xiu ', 'Zang ', 'Ti ', 'Cuo ', 'Gua ', 'Gong ', 'Zhong ', 'Dou ', 'Lu ', 'Mei ', 'Lang ', 'Wan ', 'Xin ', 'Yun ', 'Bei ', 'Wu ', 'Su ', 'Yu ', 'Chan ', 'Ting ', 'Bo ', 'Han ', 'Jia ', 'Hong ', 'Cuan ', 'Feng ', 'Chan ', 'Wan ', 'Zhi ', 'Si ', 'Xuan ', 'Wu ', 'Wu ', 'Tiao ', 'Gong ', 'Zhuo ', 'Lue ', 'Xing ', 'Qian ', 'Shen ', 'Han ', 'Lue ', 'Xie ', 'Chu ', 'Zheng ', 'Ju ', 'Xian ', 'Tie ', 'Mang ', 'Pu ', 'Li ', 'Pan ', 'Rui ', 'Cheng ', 'Gao ', 'Li ', 'Te ', 'Pyeng ', 'Zhu ', '[?] ', 'Tu ', 'Liu ', 'Zui ', 'Ju ', 'Chang ', 'Yuan ', 'Jian ', 'Gang ', 'Diao ', 'Tao ', 'Chang '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0fe.php\",\"ext\":\"php\",\"size\":1269,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', '', '~', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '..', '--', '-', '_', '_', '(', ') ', '{', '} ', '[', '] ', '[(', ')] ', '<<', '>> ', '<', '> ', '[', '] ', '{', '}', '[?]', '[?]', '[?]', '[?]', '', '', '', '', '', '', '', ',', ',', '.', '', ';', ':', '?', '!', '-', '(', ')', '{', '}', '{', '}n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x076.php\",\"ext\":\"php\",\"size\":2083,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yu ', 'Cui ', 'Ya ', 'Zhu ', 'Cu ', 'Dan ', 'Shen ', 'Zhung ', 'Ji ', 'Yu ', 'Hou ', 'Feng ', 'La ', 'Yang ', 'Shen ', 'Tu ', 'Yu ', 'Gua ', 'Wen ', 'Huan ', 'Ku ', 'Jia ', 'Yin ', 'Yi ', 'Lu ', 'Sao ', 'Jue ', 'Chi ', 'Xi ', 'Guan ', 'Yi ', 'Wen ', 'Ji ', 'Chuang ', 'Ban ', 'Lei ', 'Liu ', 'Chai ', 'Shou ', 'Nue ', 'Dian ', 'Da ', 'Pie ', 'Tan ', 'Zhang ', 'Biao ', 'Shen ', 'Cu ', 'Luo ', 'Yi ', 'Zong ', 'Chou ', 'Zhang ', 'Zhai ', 'Sou ', 'Suo ', 'Que ', 'Diao ', 'Lou ', 'Lu ', 'Mo ', 'Jin ', 'Yin ', 'Ying ', 'Huang ', 'Fu ', 'Liao ', 'Long ', 'Qiao ', 'Liu ', 'Lao ', 'Xian ', 'Fei ', 'Dan ', 'Yin ', 'He ', 'Yan ', 'Ban ', 'Xian ', 'Guan ', 'Guai ', 'Nong ', 'Yu ', 'Wei ', 'Yi ', 'Yong ', 'Pi ', 'Lei ', 'Li ', 'Shu ', 'Dan ', 'Lin ', 'Dian ', 'Lin ', 'Lai ', 'Pie ', 'Ji ', 'Chi ', 'Yang ', 'Xian ', 'Jie ', 'Zheng ', '[?] ', 'Li ', 'Huo ', 'Lai ', 'Shaku ', 'Dian ', 'Xian ', 'Ying ', 'Yin ', 'Qu ', 'Yong ', 'Tan ', 'Dian ', 'Luo ', 'Luan ', 'Luan ', 'Bo ', '[?] ', 'Gui ', 'Po ', 'Fa ', 'Deng ', 'Fa ', 'Bai ', 'Bai ', 'Qie ', 'Bi ', 'Zao ', 'Zao ', 'Mao ', 'De ', 'Pa ', 'Jie ', 'Huang ', 'Gui ', 'Ci ', 'Ling ', 'Gao ', 'Mo ', 'Ji ', 'Jiao ', 'Peng ', 'Gao ', 'Ai ', 'E ', 'Hao ', 'Han ', 'Bi ', 'Wan ', 'Chou ', 'Qian ', 'Xi ', 'Ai ', 'Jiong ', 'Hao ', 'Huang ', 'Hao ', 'Ze ', 'Cui ', 'Hao ', 'Xiao ', 'Ye ', 'Po ', 'Hao ', 'Jiao ', 'Ai ', 'Xing ', 'Huang ', 'Li ', 'Piao ', 'He ', 'Jiao ', 'Pi ', 'Gan ', 'Pao ', 'Zhou ', 'Jun ', 'Qiu ', 'Cun ', 'Que ', 'Zha ', 'Gu ', 'Jun ', 'Jun ', 'Zhou ', 'Zha ', 'Gu ', 'Zhan ', 'Du ', 'Min ', 'Qi ', 'Ying ', 'Yu ', 'Bei ', 'Zhao ', 'Zhong ', 'Pen ', 'He ', 'Ying ', 'He ', 'Yi ', 'Bo ', 'Wan ', 'He ', 'Ang ', 'Zhan ', 'Yan ', 'Jian ', 'He ', 'Yu ', 'Kui ', 'Fan ', 'Gai ', 'Dao ', 'Pan ', 'Fu ', 'Qiu ', 'Sheng ', 'Dao ', 'Lu ', 'Zhan ', 'Meng ', 'Li ', 'Jin ', 'Xu ', 'Jian ', 'Pan ', 'Guan ', 'An ', 'Lu ', 'Shu ', 'Zhou ', 'Dang ', 'An ', 'Gu ', 'Li ', 'Mu ', 'Cheng ', 'Gan ', 'Xu ', 'Mang ', 'Mang ', 'Zhi ', 'Qi ', 'Ruan ', 'Tian ', 'Xiang ', 'Dun ', 'Xin ', 'Xi ', 'Pan ', 'Feng ', 'Dun ', 'Min '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x050.php\",\"ext\":\"php\",\"size\":2126,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Chang ', 'Chi ', 'Bing ', 'Zan ', 'Yao ', 'Cui ', 'Lia ', 'Wan ', 'Lai ', 'Cang ', 'Zong ', 'Ge ', 'Guan ', 'Bei ', 'Tian ', 'Shu ', 'Shu ', 'Men ', 'Dao ', 'Tan ', 'Jue ', 'Chui ', 'Xing ', 'Peng ', 'Tang ', 'Hou ', 'Yi ', 'Qi ', 'Ti ', 'Gan ', 'Jing ', 'Jie ', 'Sui ', 'Chang ', 'Jie ', 'Fang ', 'Zhi ', 'Kong ', 'Juan ', 'Zong ', 'Ju ', 'Qian ', 'Ni ', 'Lun ', 'Zhuo ', 'Wei ', 'Luo ', 'Song ', 'Leng ', 'Hun ', 'Dong ', 'Zi ', 'Ben ', 'Wu ', 'Ju ', 'Nai ', 'Cai ', 'Jian ', 'Zhai ', 'Ye ', 'Zhi ', 'Sha ', 'Qing ', '[?] ', 'Ying ', 'Cheng ', 'Jian ', 'Yan ', 'Nuan ', 'Zhong ', 'Chun ', 'Jia ', 'Jie ', 'Wei ', 'Yu ', 'Bing ', 'Ruo ', 'Ti ', 'Wei ', 'Pian ', 'Yan ', 'Feng ', 'Tang ', 'Wo ', 'E ', 'Xie ', 'Che ', 'Sheng ', 'Kan ', 'Di ', 'Zuo ', 'Cha ', 'Ting ', 'Bei ', 'Ye ', 'Huang ', 'Yao ', 'Zhan ', 'Chou ', 'Yan ', 'You ', 'Jian ', 'Xu ', 'Zha ', 'Ci ', 'Fu ', 'Bi ', 'Zhi ', 'Zong ', 'Mian ', 'Ji ', 'Yi ', 'Xie ', 'Xun ', 'Si ', 'Duan ', 'Ce ', 'Zhen ', 'Ou ', 'Tou ', 'Tou ', 'Bei ', 'Za ', 'Lu ', 'Jie ', 'Wei ', 'Fen ', 'Chang ', 'Gui ', 'Sou ', 'Zhi ', 'Su ', 'Xia ', 'Fu ', 'Yuan ', 'Rong ', 'Li ', 'Ru ', 'Yun ', 'Gou ', 'Ma ', 'Bang ', 'Dian ', 'Tang ', 'Hao ', 'Jie ', 'Xi ', 'Shan ', 'Qian ', 'Jue ', 'Cang ', 'Chu ', 'San ', 'Bei ', 'Xiao ', 'Yong ', 'Yao ', 'Tan ', 'Suo ', 'Yang ', 'Fa ', 'Bing ', 'Jia ', 'Dai ', 'Zai ', 'Tang ', '[?] ', 'Bin ', 'Chu ', 'Nuo ', 'Can ', 'Lei ', 'Cui ', 'Yong ', 'Zao ', 'Zong ', 'Peng ', 'Song ', 'Ao ', 'Chuan ', 'Yu ', 'Zhai ', 'Cou ', 'Shang ', 'Qiang ', 'Jing ', 'Chi ', 'Sha ', 'Han ', 'Zhang ', 'Qing ', 'Yan ', 'Di ', 'Xi ', 'Lu ', 'Bei ', 'Piao ', 'Jin ', 'Lian ', 'Lu ', 'Man ', 'Qian ', 'Xian ', 'Tan ', 'Ying ', 'Dong ', 'Zhuan ', 'Xiang ', 'Shan ', 'Qiao ', 'Jiong ', 'Tui ', 'Zun ', 'Pu ', 'Xi ', 'Lao ', 'Chang ', 'Guang ', 'Liao ', 'Qi ', 'Deng ', 'Chan ', 'Wei ', 'Ji ', 'Fan ', 'Hui ', 'Chuan ', 'Jian ', 'Dan ', 'Jiao ', 'Jiu ', 'Seng ', 'Fen ', 'Xian ', 'Jue ', 'E ', 'Jiao ', 'Jian ', 'Tong ', 'Lin ', 'Bo ', 'Gu ', '[?] ', 'Su ', 'Xian ', 'Jiang ', 'Min ', 'Ye ', 'Jin ', 'Jia ', 'Qiao ', 'Pi ', 'Feng ', 'Zhou ', 'Ai ', 'Sai '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x072.php\",\"ext\":\"php\",\"size\":2103,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['He ', 'Lan ', 'Biao ', 'Rong ', 'Li ', 'Mo ', 'Bao ', 'Ruo ', 'Lu ', 'La ', 'Ao ', 'Xun ', 'Kuang ', 'Shuo ', '[?] ', 'Li ', 'Lu ', 'Jue ', 'Liao ', 'Yan ', 'Xi ', 'Xie ', 'Long ', 'Ye ', '[?] ', 'Rang ', 'Yue ', 'Lan ', 'Cong ', 'Jue ', 'Tong ', 'Guan ', '[?] ', 'Che ', 'Mi ', 'Tang ', 'Lan ', 'Zhu ', '[?] ', 'Ling ', 'Cuan ', 'Yu ', 'Zhua ', 'Tsumekanmuri ', 'Pa ', 'Zheng ', 'Pao ', 'Cheng ', 'Yuan ', 'Ai ', 'Wei ', '[?] ', 'Jue ', 'Jue ', 'Fu ', 'Ye ', 'Ba ', 'Die ', 'Ye ', 'Yao ', 'Zu ', 'Shuang ', 'Er ', 'Qiang ', 'Chuang ', 'Ge ', 'Zang ', 'Die ', 'Qiang ', 'Yong ', 'Qiang ', 'Pian ', 'Ban ', 'Pan ', 'Shao ', 'Jian ', 'Pai ', 'Du ', 'Chuang ', 'Tou ', 'Zha ', 'Bian ', 'Die ', 'Bang ', 'Bo ', 'Chuang ', 'You ', '[?] ', 'Du ', 'Ya ', 'Cheng ', 'Niu ', 'Ushihen ', 'Pin ', 'Jiu ', 'Mou ', 'Tuo ', 'Mu ', 'Lao ', 'Ren ', 'Mang ', 'Fang ', 'Mao ', 'Mu ', 'Gang ', 'Wu ', 'Yan ', 'Ge ', 'Bei ', 'Si ', 'Jian ', 'Gu ', 'You ', 'Ge ', 'Sheng ', 'Mu ', 'Di ', 'Qian ', 'Quan ', 'Quan ', 'Zi ', 'Te ', 'Xi ', 'Mang ', 'Keng ', 'Qian ', 'Wu ', 'Gu ', 'Xi ', 'Li ', 'Li ', 'Pou ', 'Ji ', 'Gang ', 'Zhi ', 'Ben ', 'Quan ', 'Run ', 'Du ', 'Ju ', 'Jia ', 'Jian ', 'Feng ', 'Pian ', 'Ke ', 'Ju ', 'Kao ', 'Chu ', 'Xi ', 'Bei ', 'Luo ', 'Jie ', 'Ma ', 'San ', 'Wei ', 'Li ', 'Dun ', 'Tong ', '[?] ', 'Jiang ', 'Ikenie ', 'Li ', 'Du ', 'Lie ', 'Pi ', 'Piao ', 'Bao ', 'Xi ', 'Chou ', 'Wei ', 'Kui ', 'Chou ', 'Quan ', 'Fan ', 'Ba ', 'Fan ', 'Qiu ', 'Ji ', 'Cai ', 'Chuo ', 'An ', 'Jie ', 'Zhuang ', 'Guang ', 'Ma ', 'You ', 'Kang ', 'Bo ', 'Hou ', 'Ya ', 'Yin ', 'Huan ', 'Zhuang ', 'Yun ', 'Kuang ', 'Niu ', 'Di ', 'Qing ', 'Zhong ', 'Mu ', 'Bei ', 'Pi ', 'Ju ', 'Ni ', 'Sheng ', 'Pao ', 'Xia ', 'Tuo ', 'Hu ', 'Ling ', 'Fei ', 'Pi ', 'Ni ', 'Ao ', 'You ', 'Gou ', 'Yue ', 'Ju ', 'Dan ', 'Po ', 'Gu ', 'Xian ', 'Ning ', 'Huan ', 'Hen ', 'Jiao ', 'He ', 'Zhao ', 'Ji ', 'Xun ', 'Shan ', 'Ta ', 'Rong ', 'Shou ', 'Tong ', 'Lao ', 'Du ', 'Xia ', 'Shi ', 'Hua ', 'Zheng ', 'Yu ', 'Sun ', 'Yu ', 'Bi ', 'Mang ', 'Xi ', 'Juan ', 'Li ', 'Xia ', 'Yin ', 'Suan ', 'Lang ', 'Bei ', 'Zhi ', 'Yan '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c7.php\",\"ext\":\"php\",\"size\":2008,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['wek', 'wet', 'wep', 'weh', 'wi', 'wig', 'wigg', 'wigs', 'win', 'winj', 'winh', 'wid', 'wil', 'wilg', 'wilm', 'wilb', 'wils', 'wilt', 'wilp', 'wilh', 'wim', 'wib', 'wibs', 'wis', 'wiss', 'wing', 'wij', 'wic', 'wik', 'wit', 'wip', 'wih', 'yu', 'yug', 'yugg', 'yugs', 'yun', 'yunj', 'yunh', 'yud', 'yul', 'yulg', 'yulm', 'yulb', 'yuls', 'yult', 'yulp', 'yulh', 'yum', 'yub', 'yubs', 'yus', 'yuss', 'yung', 'yuj', 'yuc', 'yuk', 'yut', 'yup', 'yuh', 'eu', 'eug', 'eugg', 'eugs', 'eun', 'eunj', 'eunh', 'eud', 'eul', 'eulg', 'eulm', 'eulb', 'euls', 'eult', 'eulp', 'eulh', 'eum', 'eub', 'eubs', 'eus', 'euss', 'eung', 'euj', 'euc', 'euk', 'eut', 'eup', 'euh', 'yi', 'yig', 'yigg', 'yigs', 'yin', 'yinj', 'yinh', 'yid', 'yil', 'yilg', 'yilm', 'yilb', 'yils', 'yilt', 'yilp', 'yilh', 'yim', 'yib', 'yibs', 'yis', 'yiss', 'ying', 'yij', 'yic', 'yik', 'yit', 'yip', 'yih', 'i', 'ig', 'igg', 'igs', 'in', 'inj', 'inh', 'id', 'il', 'ilg', 'ilm', 'ilb', 'ils', 'ilt', 'ilp', 'ilh', 'im', 'ib', 'ibs', 'is', 'iss', 'ing', 'ij', 'ic', 'ik', 'it', 'ip', 'ih', 'ja', 'jag', 'jagg', 'jags', 'jan', 'janj', 'janh', 'jad', 'jal', 'jalg', 'jalm', 'jalb', 'jals', 'jalt', 'jalp', 'jalh', 'jam', 'jab', 'jabs', 'jas', 'jass', 'jang', 'jaj', 'jac', 'jak', 'jat', 'jap', 'jah', 'jae', 'jaeg', 'jaegg', 'jaegs', 'jaen', 'jaenj', 'jaenh', 'jaed', 'jael', 'jaelg', 'jaelm', 'jaelb', 'jaels', 'jaelt', 'jaelp', 'jaelh', 'jaem', 'jaeb', 'jaebs', 'jaes', 'jaess', 'jaeng', 'jaej', 'jaec', 'jaek', 'jaet', 'jaep', 'jaeh', 'jya', 'jyag', 'jyagg', 'jyags', 'jyan', 'jyanj', 'jyanh', 'jyad', 'jyal', 'jyalg', 'jyalm', 'jyalb', 'jyals', 'jyalt', 'jyalp', 'jyalh', 'jyam', 'jyab', 'jyabs', 'jyas', 'jyass', 'jyang', 'jyaj', 'jyac', 'jyak', 'jyat', 'jyap', 'jyah', 'jyae', 'jyaeg', 'jyaegg', 'jyaegs', 'jyaen', 'jyaenj', 'jyaenh', 'jyaed', 'jyael', 'jyaelg', 'jyaelm', 'jyaelb', 'jyaels', 'jyaelt', 'jyaelp', 'jyaelh', 'jyaem', 'jyaeb', 'jyaebs', 'jyaes', 'jyaess', 'jyaeng', 'jyaej', 'jyaec', 'jyaek', 'jyaet', 'jyaep', 'jyaeh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x031.php\",\"ext\":\"php\",\"size\":1579,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', '[?]', '[?]', '[?]', 'B', 'P', 'M', 'F', 'D', 'T', 'N', 'L', 'G', 'K', 'H', 'J', 'Q', 'X', 'ZH', 'CH', 'SH', 'R', 'Z', 'C', 'S', 'A', 'O', 'E', 'EH', 'AI', 'EI', 'AU', 'OU', 'AN', 'EN', 'ANG', 'ENG', 'ER', 'I', 'U', 'IU', 'V', 'NG', 'GN', '[?]', '[?]', '[?]', '[?]', 'g', 'gg', 'gs', 'n', 'nj', 'nh', 'd', 'dd', 'r', 'lg', 'lm', 'lb', 'ls', 'lt', 'lp', 'rh', 'm', 'b', 'bb', 'bs', 's', 'ss', '', 'j', 'jj', 'c', 'k', 't', 'p', 'h', 'a', 'ae', 'ya', 'yae', 'eo', 'e', 'yeo', 'ye', 'o', 'wa', 'wae', 'oe', 'yo', 'u', 'weo', 'we', 'wi', 'yu', 'eu', 'yi', 'i', '', 'nn', 'nd', 'ns', 'nZ', 'lgs', 'ld', 'lbs', 'lZ', 'lQ', 'mb', 'ms', 'mZ', 'mN', 'bg', '', 'bsg', 'bst', 'bj', 'bt', 'bN', 'bbN', 'sg', 'sn', 'sd', 'sb', 'sj', 'Z', '', 'N', 'Ns', 'NZ', 'pN', 'hh', 'Q', 'yo-ya', 'yo-yae', 'yo-i', 'yu-yeo', 'yu-ye', 'yu-i', 'U', 'U-i', '[?]', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'BU', 'ZI', 'JI', 'GU', 'EE', 'ENN', 'OO', 'ONN', 'IR', 'ANN', 'INN', 'UNN', 'IM', 'NGG', 'AINN', 'AUNN', 'AM', 'OM', 'ONG', 'INNN', 'P', 'T', 'K', 'H', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x06f.php\",\"ext\":\"php\",\"size\":2094,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Qing ', 'Yu ', 'Piao ', 'Ji ', 'Ya ', 'Jiao ', 'Qi ', 'Xi ', 'Ji ', 'Lu ', 'Lu ', 'Long ', 'Jin ', 'Guo ', 'Cong ', 'Lou ', 'Zhi ', 'Gai ', 'Qiang ', 'Li ', 'Yan ', 'Cao ', 'Jiao ', 'Cong ', 'Qun ', 'Tuan ', 'Ou ', 'Teng ', 'Ye ', 'Xi ', 'Mi ', 'Tang ', 'Mo ', 'Shang ', 'Han ', 'Lian ', 'Lan ', 'Wa ', 'Li ', 'Qian ', 'Feng ', 'Xuan ', 'Yi ', 'Man ', 'Zi ', 'Mang ', 'Kang ', 'Lei ', 'Peng ', 'Shu ', 'Zhang ', 'Zhang ', 'Chong ', 'Xu ', 'Huan ', 'Kuo ', 'Jian ', 'Yan ', 'Chuang ', 'Liao ', 'Cui ', 'Ti ', 'Yang ', 'Jiang ', 'Cong ', 'Ying ', 'Hong ', 'Xun ', 'Shu ', 'Guan ', 'Ying ', 'Xiao ', '[?] ', '[?] ', 'Xu ', 'Lian ', 'Zhi ', 'Wei ', 'Pi ', 'Jue ', 'Jiao ', 'Po ', 'Dang ', 'Hui ', 'Jie ', 'Wu ', 'Pa ', 'Ji ', 'Pan ', 'Gui ', 'Xiao ', 'Qian ', 'Qian ', 'Xi ', 'Lu ', 'Xi ', 'Xuan ', 'Dun ', 'Huang ', 'Min ', 'Run ', 'Su ', 'Liao ', 'Zhen ', 'Zhong ', 'Yi ', 'Di ', 'Wan ', 'Dan ', 'Tan ', 'Chao ', 'Xun ', 'Kui ', 'Yie ', 'Shao ', 'Tu ', 'Zhu ', 'San ', 'Hei ', 'Bi ', 'Shan ', 'Chan ', 'Chan ', 'Shu ', 'Tong ', 'Pu ', 'Lin ', 'Wei ', 'Se ', 'Se ', 'Cheng ', 'Jiong ', 'Cheng ', 'Hua ', 'Jiao ', 'Lao ', 'Che ', 'Gan ', 'Cun ', 'Heng ', 'Si ', 'Shu ', 'Peng ', 'Han ', 'Yun ', 'Liu ', 'Hong ', 'Fu ', 'Hao ', 'He ', 'Xian ', 'Jian ', 'Shan ', 'Xi ', 'Oki ', '[?] ', 'Lan ', '[?] ', 'Yu ', 'Lin ', 'Min ', 'Zao ', 'Dang ', 'Wan ', 'Ze ', 'Xie ', 'Yu ', 'Li ', 'Shi ', 'Xue ', 'Ling ', 'Man ', 'Zi ', 'Yong ', 'Kuai ', 'Can ', 'Lian ', 'Dian ', 'Ye ', 'Ao ', 'Huan ', 'Zhen ', 'Chan ', 'Man ', 'Dan ', 'Dan ', 'Yi ', 'Sui ', 'Pi ', 'Ju ', 'Ta ', 'Qin ', 'Ji ', 'Zhuo ', 'Lian ', 'Nong ', 'Guo ', 'Jin ', 'Fen ', 'Se ', 'Ji ', 'Sui ', 'Hui ', 'Chu ', 'Ta ', 'Song ', 'Ding ', '[?] ', 'Zhu ', 'Lai ', 'Bin ', 'Lian ', 'Mi ', 'Shi ', 'Shu ', 'Mi ', 'Ning ', 'Ying ', 'Ying ', 'Meng ', 'Jin ', 'Qi ', 'Pi ', 'Ji ', 'Hao ', 'Ru ', 'Zui ', 'Wo ', 'Tao ', 'Yin ', 'Yin ', 'Dui ', 'Ci ', 'Huo ', 'Jing ', 'Lan ', 'Jun ', 'Ai ', 'Pu ', 'Zhuo ', 'Wei ', 'Bin ', 'Gu ', 'Qian ', 'Xing ', 'Hama ', 'Kuo ', 'Fei ', '[?] ', 'Boku ', 'Jian ', 'Wei ', 'Luo ', 'Zan ', 'Lu ', 'Li '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0a1.php\",\"ext\":\"php\",\"size\":1913,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['dit', 'dix', 'di', 'dip', 'diex', 'die', 'diep', 'dat', 'dax', 'da', 'dap', 'duox', 'duo', 'dot', 'dox', 'do', 'dop', 'dex', 'de', 'dep', 'dut', 'dux', 'du', 'dup', 'durx', 'dur', 'tit', 'tix', 'ti', 'tip', 'tiex', 'tie', 'tiep', 'tat', 'tax', 'ta', 'tap', 'tuot', 'tuox', 'tuo', 'tuop', 'tot', 'tox', 'to', 'top', 'tex', 'te', 'tep', 'tut', 'tux', 'tu', 'tup', 'turx', 'tur', 'ddit', 'ddix', 'ddi', 'ddip', 'ddiex', 'ddie', 'ddiep', 'ddat', 'ddax', 'dda', 'ddap', 'dduox', 'dduo', 'dduop', 'ddot', 'ddox', 'ddo', 'ddop', 'ddex', 'dde', 'ddep', 'ddut', 'ddux', 'ddu', 'ddup', 'ddurx', 'ddur', 'ndit', 'ndix', 'ndi', 'ndip', 'ndiex', 'ndie', 'ndat', 'ndax', 'nda', 'ndap', 'ndot', 'ndox', 'ndo', 'ndop', 'ndex', 'nde', 'ndep', 'ndut', 'ndux', 'ndu', 'ndup', 'ndurx', 'ndur', 'hnit', 'hnix', 'hni', 'hnip', 'hniet', 'hniex', 'hnie', 'hniep', 'hnat', 'hnax', 'hna', 'hnap', 'hnuox', 'hnuo', 'hnot', 'hnox', 'hnop', 'hnex', 'hne', 'hnep', 'hnut', 'nit', 'nix', 'ni', 'nip', 'niex', 'nie', 'niep', 'nax', 'na', 'nap', 'nuox', 'nuo', 'nuop', 'not', 'nox', 'no', 'nop', 'nex', 'ne', 'nep', 'nut', 'nux', 'nu', 'nup', 'nurx', 'nur', 'hlit', 'hlix', 'hli', 'hlip', 'hliex', 'hlie', 'hliep', 'hlat', 'hlax', 'hla', 'hlap', 'hluox', 'hluo', 'hluop', 'hlox', 'hlo', 'hlop', 'hlex', 'hle', 'hlep', 'hlut', 'hlux', 'hlu', 'hlup', 'hlurx', 'hlur', 'hlyt', 'hlyx', 'hly', 'hlyp', 'hlyrx', 'hlyr', 'lit', 'lix', 'li', 'lip', 'liet', 'liex', 'lie', 'liep', 'lat', 'lax', 'la', 'lap', 'luot', 'luox', 'luo', 'luop', 'lot', 'lox', 'lo', 'lop', 'lex', 'le', 'lep', 'lut', 'lux', 'lu', 'lup', 'lurx', 'lur', 'lyt', 'lyx', 'ly', 'lyp', 'lyrx', 'lyr', 'git', 'gix', 'gi', 'gip', 'giet', 'giex', 'gie', 'giep', 'gat', 'gax', 'ga', 'gap', 'guot', 'guox', 'guo', 'guop', 'got', 'gox', 'go', 'gop', 'get', 'gex', 'ge', 'gep', 'gut', 'gux', 'gu', 'gup', 'gurx', 'gur', 'kit', 'kix', 'ki', 'kip', 'kiex', 'kie', 'kiep', 'kat'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x00a.php\",\"ext\":\"php\",\"size\":1575,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', 'N', '[?]', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', '[?]', '[?]', '[?]', '[?]', 'ee', 'ai', '[?]', '[?]', 'oo', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bb', 'm', 'y', 'r', '[?]', 'l', 'll', '[?]', 'v', 'sh', '[?]', 's', 'h', '[?]', '[?]', '\\\\'', '[?]', 'aa', 'i', 'ii', 'u', 'uu', '[?]', '[?]', '[?]', '[?]', 'ee', 'ai', '[?]', '[?]', 'oo', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'khh', 'ghh', 'z', 'rr', '[?]', 'f', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'N', 'H', '', '', 'G.E.O.', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'N', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', '[?]', 'eN', '[?]', 'e', 'ai', 'oN', '[?]', 'o', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bh', 'm', 'ya', 'r', '[?]', 'l', 'll', '[?]', 'v', 'sh', 'ss', 's', 'h', '[?]', '[?]', '\\\\'', '\\\\'', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', 'eN', '[?]', 'e', 'ai', 'oN', '[?]', 'o', 'au', '', '[?]', '[?]', 'AUM', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'RR', '[?]', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0ac.php\",\"ext\":\"php\",\"size\":2153,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ga', 'gag', 'gagg', 'gags', 'gan', 'ganj', 'ganh', 'gad', 'gal', 'galg', 'galm', 'galb', 'gals', 'galt', 'galp', 'galh', 'gam', 'gab', 'gabs', 'gas', 'gass', 'gang', 'gaj', 'gac', 'gak', 'gat', 'gap', 'gah', 'gae', 'gaeg', 'gaegg', 'gaegs', 'gaen', 'gaenj', 'gaenh', 'gaed', 'gael', 'gaelg', 'gaelm', 'gaelb', 'gaels', 'gaelt', 'gaelp', 'gaelh', 'gaem', 'gaeb', 'gaebs', 'gaes', 'gaess', 'gaeng', 'gaej', 'gaec', 'gaek', 'gaet', 'gaep', 'gaeh', 'gya', 'gyag', 'gyagg', 'gyags', 'gyan', 'gyanj', 'gyanh', 'gyad', 'gyal', 'gyalg', 'gyalm', 'gyalb', 'gyals', 'gyalt', 'gyalp', 'gyalh', 'gyam', 'gyab', 'gyabs', 'gyas', 'gyass', 'gyang', 'gyaj', 'gyac', 'gyak', 'gyat', 'gyap', 'gyah', 'gyae', 'gyaeg', 'gyaegg', 'gyaegs', 'gyaen', 'gyaenj', 'gyaenh', 'gyaed', 'gyael', 'gyaelg', 'gyaelm', 'gyaelb', 'gyaels', 'gyaelt', 'gyaelp', 'gyaelh', 'gyaem', 'gyaeb', 'gyaebs', 'gyaes', 'gyaess', 'gyaeng', 'gyaej', 'gyaec', 'gyaek', 'gyaet', 'gyaep', 'gyaeh', 'geo', 'geog', 'geogg', 'geogs', 'geon', 'geonj', 'geonh', 'geod', 'geol', 'geolg', 'geolm', 'geolb', 'geols', 'geolt', 'geolp', 'geolh', 'geom', 'geob', 'geobs', 'geos', 'geoss', 'geong', 'geoj', 'geoc', 'geok', 'geot', 'geop', 'geoh', 'ge', 'geg', 'gegg', 'gegs', 'gen', 'genj', 'genh', 'ged', 'gel', 'gelg', 'gelm', 'gelb', 'gels', 'gelt', 'gelp', 'gelh', 'gem', 'geb', 'gebs', 'ges', 'gess', 'geng', 'gej', 'gec', 'gek', 'get', 'gep', 'geh', 'gyeo', 'gyeog', 'gyeogg', 'gyeogs', 'gyeon', 'gyeonj', 'gyeonh', 'gyeod', 'gyeol', 'gyeolg', 'gyeolm', 'gyeolb', 'gyeols', 'gyeolt', 'gyeolp', 'gyeolh', 'gyeom', 'gyeob', 'gyeobs', 'gyeos', 'gyeoss', 'gyeong', 'gyeoj', 'gyeoc', 'gyeok', 'gyeot', 'gyeop', 'gyeoh', 'gye', 'gyeg', 'gyegg', 'gyegs', 'gyen', 'gyenj', 'gyenh', 'gyed', 'gyel', 'gyelg', 'gyelm', 'gyelb', 'gyels', 'gyelt', 'gyelp', 'gyelh', 'gyem', 'gyeb', 'gyebs', 'gyes', 'gyess', 'gyeng', 'gyej', 'gyec', 'gyek', 'gyet', 'gyep', 'gyeh', 'go', 'gog', 'gogg', 'gogs', 'gon', 'gonj', 'gonh', 'god', 'gol', 'golg', 'golm', 'golb', 'gols', 'golt', 'golp', 'golh', 'gom', 'gob', 'gobs', 'gos', 'goss', 'gong', 'goj', 'goc', 'gok', 'got', 'gop', 'goh', 'gwa', 'gwag', 'gwagg', 'gwags'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x081.php\",\"ext\":\"php\",\"size\":2117,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Cheng ', 'Tiao ', 'Zhi ', 'Cui ', 'Mei ', 'Xie ', 'Cui ', 'Xie ', 'Mo ', 'Mai ', 'Ji ', 'Obiyaakasu ', '[?] ', 'Kuai ', 'Sa ', 'Zang ', 'Qi ', 'Nao ', 'Mi ', 'Nong ', 'Luan ', 'Wan ', 'Bo ', 'Wen ', 'Guan ', 'Qiu ', 'Jiao ', 'Jing ', 'Rou ', 'Heng ', 'Cuo ', 'Lie ', 'Shan ', 'Ting ', 'Mei ', 'Chun ', 'Shen ', 'Xie ', 'De ', 'Zui ', 'Cu ', 'Xiu ', 'Xin ', 'Tuo ', 'Pao ', 'Cheng ', 'Nei ', 'Fu ', 'Dou ', 'Tuo ', 'Niao ', 'Noy ', 'Pi ', 'Gu ', 'Gua ', 'Li ', 'Lian ', 'Zhang ', 'Cui ', 'Jie ', 'Liang ', 'Zhou ', 'Pi ', 'Biao ', 'Lun ', 'Pian ', 'Guo ', 'Kui ', 'Chui ', 'Dan ', 'Tian ', 'Nei ', 'Jing ', 'Jie ', 'La ', 'Yi ', 'An ', 'Ren ', 'Shen ', 'Chuo ', 'Fu ', 'Fu ', 'Ju ', 'Fei ', 'Qiang ', 'Wan ', 'Dong ', 'Pi ', 'Guo ', 'Zong ', 'Ding ', 'Wu ', 'Mei ', 'Ruan ', 'Zhuan ', 'Zhi ', 'Cou ', 'Gua ', 'Ou ', 'Di ', 'An ', 'Xing ', 'Nao ', 'Yu ', 'Chuan ', 'Nan ', 'Yun ', 'Zhong ', 'Rou ', 'E ', 'Sai ', 'Tu ', 'Yao ', 'Jian ', 'Wei ', 'Jiao ', 'Yu ', 'Jia ', 'Duan ', 'Bi ', 'Chang ', 'Fu ', 'Xian ', 'Ni ', 'Mian ', 'Wa ', 'Teng ', 'Tui ', 'Bang ', 'Qian ', 'Lu ', 'Wa ', 'Sou ', 'Tang ', 'Su ', 'Zhui ', 'Ge ', 'Yi ', 'Bo ', 'Liao ', 'Ji ', 'Pi ', 'Xie ', 'Gao ', 'Lu ', 'Bin ', 'Ou ', 'Chang ', 'Lu ', 'Guo ', 'Pang ', 'Chuai ', 'Piao ', 'Jiang ', 'Fu ', 'Tang ', 'Mo ', 'Xi ', 'Zhuan ', 'Lu ', 'Jiao ', 'Ying ', 'Lu ', 'Zhi ', 'Tara ', 'Chun ', 'Lian ', 'Tong ', 'Peng ', 'Ni ', 'Zha ', 'Liao ', 'Cui ', 'Gui ', 'Xiao ', 'Teng ', 'Fan ', 'Zhi ', 'Jiao ', 'Shan ', 'Wu ', 'Cui ', 'Run ', 'Xiang ', 'Sui ', 'Fen ', 'Ying ', 'Tan ', 'Zhua ', 'Dan ', 'Kuai ', 'Nong ', 'Tun ', 'Lian ', 'Bi ', 'Yong ', 'Jue ', 'Chu ', 'Yi ', 'Juan ', 'La ', 'Lian ', 'Sao ', 'Tun ', 'Gu ', 'Qi ', 'Cui ', 'Bin ', 'Xun ', 'Ru ', 'Huo ', 'Zang ', 'Xian ', 'Biao ', 'Xing ', 'Kuan ', 'La ', 'Yan ', 'Lu ', 'Huo ', 'Zang ', 'Luo ', 'Qu ', 'Zang ', 'Luan ', 'Ni ', 'Zang ', 'Chen ', 'Qian ', 'Wo ', 'Guang ', 'Zang ', 'Lin ', 'Guang ', 'Zi ', 'Jiao ', 'Nie ', 'Chou ', 'Ji ', 'Gao ', 'Chou ', 'Mian ', 'Nie ', 'Zhi ', 'Zhi ', 'Ge ', 'Jian ', 'Die ', 'Zhi ', 'Xiu ', 'Tai ', 'Zhen ', 'Jiu ', 'Xian ', 'Yu ', 'Cha '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0cf.php\",\"ext\":\"php\",\"size\":2157,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ke', 'keg', 'kegg', 'kegs', 'ken', 'kenj', 'kenh', 'ked', 'kel', 'kelg', 'kelm', 'kelb', 'kels', 'kelt', 'kelp', 'kelh', 'kem', 'keb', 'kebs', 'kes', 'kess', 'keng', 'kej', 'kec', 'kek', 'ket', 'kep', 'keh', 'kyeo', 'kyeog', 'kyeogg', 'kyeogs', 'kyeon', 'kyeonj', 'kyeonh', 'kyeod', 'kyeol', 'kyeolg', 'kyeolm', 'kyeolb', 'kyeols', 'kyeolt', 'kyeolp', 'kyeolh', 'kyeom', 'kyeob', 'kyeobs', 'kyeos', 'kyeoss', 'kyeong', 'kyeoj', 'kyeoc', 'kyeok', 'kyeot', 'kyeop', 'kyeoh', 'kye', 'kyeg', 'kyegg', 'kyegs', 'kyen', 'kyenj', 'kyenh', 'kyed', 'kyel', 'kyelg', 'kyelm', 'kyelb', 'kyels', 'kyelt', 'kyelp', 'kyelh', 'kyem', 'kyeb', 'kyebs', 'kyes', 'kyess', 'kyeng', 'kyej', 'kyec', 'kyek', 'kyet', 'kyep', 'kyeh', 'ko', 'kog', 'kogg', 'kogs', 'kon', 'konj', 'konh', 'kod', 'kol', 'kolg', 'kolm', 'kolb', 'kols', 'kolt', 'kolp', 'kolh', 'kom', 'kob', 'kobs', 'kos', 'koss', 'kong', 'koj', 'koc', 'kok', 'kot', 'kop', 'koh', 'kwa', 'kwag', 'kwagg', 'kwags', 'kwan', 'kwanj', 'kwanh', 'kwad', 'kwal', 'kwalg', 'kwalm', 'kwalb', 'kwals', 'kwalt', 'kwalp', 'kwalh', 'kwam', 'kwab', 'kwabs', 'kwas', 'kwass', 'kwang', 'kwaj', 'kwac', 'kwak', 'kwat', 'kwap', 'kwah', 'kwae', 'kwaeg', 'kwaegg', 'kwaegs', 'kwaen', 'kwaenj', 'kwaenh', 'kwaed', 'kwael', 'kwaelg', 'kwaelm', 'kwaelb', 'kwaels', 'kwaelt', 'kwaelp', 'kwaelh', 'kwaem', 'kwaeb', 'kwaebs', 'kwaes', 'kwaess', 'kwaeng', 'kwaej', 'kwaec', 'kwaek', 'kwaet', 'kwaep', 'kwaeh', 'koe', 'koeg', 'koegg', 'koegs', 'koen', 'koenj', 'koenh', 'koed', 'koel', 'koelg', 'koelm', 'koelb', 'koels', 'koelt', 'koelp', 'koelh', 'koem', 'koeb', 'koebs', 'koes', 'koess', 'koeng', 'koej', 'koec', 'koek', 'koet', 'koep', 'koeh', 'kyo', 'kyog', 'kyogg', 'kyogs', 'kyon', 'kyonj', 'kyonh', 'kyod', 'kyol', 'kyolg', 'kyolm', 'kyolb', 'kyols', 'kyolt', 'kyolp', 'kyolh', 'kyom', 'kyob', 'kyobs', 'kyos', 'kyoss', 'kyong', 'kyoj', 'kyoc', 'kyok', 'kyot', 'kyop', 'kyoh', 'ku', 'kug', 'kugg', 'kugs', 'kun', 'kunj', 'kunh', 'kud', 'kul', 'kulg', 'kulm', 'kulb', 'kuls', 'kult', 'kulp', 'kulh', 'kum', 'kub', 'kubs', 'kus', 'kuss', 'kung', 'kuj', 'kuc', 'kuk', 'kut', 'kup', 'kuh', 'kweo', 'kweog', 'kweogg', 'kweogs'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x062.php\",\"ext\":\"php\",\"size\":2064,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Lian ', 'Nan ', 'Mi ', 'Tang ', 'Jue ', 'Gang ', 'Gang ', 'Gang ', 'Ge ', 'Yue ', 'Wu ', 'Jian ', 'Xu ', 'Shu ', 'Rong ', 'Xi ', 'Cheng ', 'Wo ', 'Jie ', 'Ge ', 'Jian ', 'Qiang ', 'Huo ', 'Qiang ', 'Zhan ', 'Dong ', 'Qi ', 'Jia ', 'Die ', 'Zei ', 'Jia ', 'Ji ', 'Shi ', 'Kan ', 'Ji ', 'Kui ', 'Gai ', 'Deng ', 'Zhan ', 'Chuang ', 'Ge ', 'Jian ', 'Jie ', 'Yu ', 'Jian ', 'Yan ', 'Lu ', 'Xi ', 'Zhan ', 'Xi ', 'Xi ', 'Chuo ', 'Dai ', 'Qu ', 'Hu ', 'Hu ', 'Hu ', 'E ', 'Shi ', 'Li ', 'Mao ', 'Hu ', 'Li ', 'Fang ', 'Suo ', 'Bian ', 'Dian ', 'Jiong ', 'Shang ', 'Yi ', 'Yi ', 'Shan ', 'Hu ', 'Fei ', 'Yan ', 'Shou ', 'T ', 'Cai ', 'Zha ', 'Qiu ', 'Le ', 'Bu ', 'Ba ', 'Da ', 'Reng ', 'Fu ', 'Hameru ', 'Zai ', 'Tuo ', 'Zhang ', 'Diao ', 'Kang ', 'Yu ', 'Ku ', 'Han ', 'Shen ', 'Cha ', 'Yi ', 'Gu ', 'Kou ', 'Wu ', 'Tuo ', 'Qian ', 'Zhi ', 'Ren ', 'Kuo ', 'Men ', 'Sao ', 'Yang ', 'Niu ', 'Ban ', 'Che ', 'Rao ', 'Xi ', 'Qian ', 'Ban ', 'Jia ', 'Yu ', 'Fu ', 'Ao ', 'Xi ', 'Pi ', 'Zhi ', 'Zi ', 'E ', 'Dun ', 'Zhao ', 'Cheng ', 'Ji ', 'Yan ', 'Kuang ', 'Bian ', 'Chao ', 'Ju ', 'Wen ', 'Hu ', 'Yue ', 'Jue ', 'Ba ', 'Qin ', 'Zhen ', 'Zheng ', 'Yun ', 'Wan ', 'Nu ', 'Yi ', 'Shu ', 'Zhua ', 'Pou ', 'Tou ', 'Dou ', 'Kang ', 'Zhe ', 'Pou ', 'Fu ', 'Pao ', 'Ba ', 'Ao ', 'Ze ', 'Tuan ', 'Kou ', 'Lun ', 'Qiang ', '[?] ', 'Hu ', 'Bao ', 'Bing ', 'Zhi ', 'Peng ', 'Tan ', 'Pu ', 'Pi ', 'Tai ', 'Yao ', 'Zhen ', 'Zha ', 'Yang ', 'Bao ', 'He ', 'Ni ', 'Yi ', 'Di ', 'Chi ', 'Pi ', 'Za ', 'Mo ', 'Mo ', 'Shen ', 'Ya ', 'Chou ', 'Qu ', 'Min ', 'Chu ', 'Jia ', 'Fu ', 'Zhan ', 'Zhu ', 'Dan ', 'Chai ', 'Mu ', 'Nian ', 'La ', 'Fu ', 'Pao ', 'Ban ', 'Pai ', 'Ling ', 'Na ', 'Guai ', 'Qian ', 'Ju ', 'Tuo ', 'Ba ', 'Tuo ', 'Tuo ', 'Ao ', 'Ju ', 'Zhuo ', 'Pan ', 'Zhao ', 'Bai ', 'Bai ', 'Di ', 'Ni ', 'Ju ', 'Kuo ', 'Long ', 'Jian ', '[?] ', 'Yong ', 'Lan ', 'Ning ', 'Bo ', 'Ze ', 'Qian ', 'Hen ', 'Gua ', 'Shi ', 'Jie ', 'Zheng ', 'Nin ', 'Gong ', 'Gong ', 'Quan ', 'Shuan ', 'Cun ', 'Zan ', 'Kao ', 'Chi ', 'Xie ', 'Ce ', 'Hui ', 'Pin ', 'Zhuai ', 'Shi ', 'Na '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x011.php\",\"ext\":\"php\",\"size\":1589,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['g', 'gg', 'n', 'd', 'dd', 'r', 'm', 'b', 'bb', 's', 'ss', '', 'j', 'jj', 'c', 'k', 't', 'p', 'h', 'ng', 'nn', 'nd', 'nb', 'dg', 'rn', 'rr', 'rh', 'rN', 'mb', 'mN', 'bg', 'bn', '', 'bs', 'bsg', 'bst', 'bsb', 'bss', 'bsj', 'bj', 'bc', 'bt', 'bp', 'bN', 'bbN', 'sg', 'sn', 'sd', 'sr', 'sm', 'sb', 'sbg', 'sss', 's', 'sj', 'sc', 'sk', 'st', 'sp', 'sh', '', '', '', '', 'Z', 'g', 'd', 'm', 'b', 's', 'Z', '', 'j', 'c', 't', 'p', 'N', 'j', '', '', '', '', 'ck', 'ch', '', '', 'pb', 'pN', 'hh', 'Q', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', 'a', 'ae', 'ya', 'yae', 'eo', 'e', 'yeo', 'ye', 'o', 'wa', 'wae', 'oe', 'yo', 'u', 'weo', 'we', 'wi', 'yu', 'eu', 'yi', 'i', 'a-o', 'a-u', 'ya-o', 'ya-yo', 'eo-o', 'eo-u', 'eo-eu', 'yeo-o', 'yeo-u', 'o-eo', 'o-e', 'o-ye', 'o-o', 'o-u', 'yo-ya', 'yo-yae', 'yo-yeo', 'yo-o', 'yo-i', 'u-a', 'u-ae', 'u-eo-eu', 'u-ye', 'u-u', 'yu-a', 'yu-eo', 'yu-e', 'yu-yeo', 'yu-ye', 'yu-u', 'yu-i', 'eu-u', 'eu-eu', 'yi-u', 'i-a', 'i-ya', 'i-o', 'i-u', 'i-eu', 'i-U', 'U', 'U-eo', 'U-u', 'U-i', 'UU', '[?]', '[?]', '[?]', '[?]', '[?]', 'g', 'gg', 'gs', 'n', 'nj', 'nh', 'd', 'l', 'lg', 'lm', 'lb', 'ls', 'lt', 'lp', 'lh', 'm', 'b', 'bs', 's', 'ss', 'ng', 'j', 'c', 'k', 't', 'p', 'h', 'gl', 'gsg', 'ng', 'nd', 'ns', 'nZ', 'nt', 'dg', 'tl', 'lgs', 'ln', 'ld', 'lth', 'll', 'lmg', 'lms', 'lbs', 'lbh', 'rNp', 'lss', 'lZ', 'lk', 'lQ', 'mg', 'ml', 'mb', 'ms', 'mss', 'mZ', 'mc', 'mh', 'mN', 'bl', 'bp', 'ph', 'pN', 'sg', 'sd', 'sl', 'sb', 'Z', 'g', 'ss', '', 'kh', 'N', 'Ns', 'NZ', 'pb', 'pN', 'hn', 'hl', 'hm', 'hb', 'Q', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c5.php\",\"ext\":\"php\",\"size\":2025,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['sseum', 'sseub', 'sseubs', 'sseus', 'sseuss', 'sseung', 'sseuj', 'sseuc', 'sseuk', 'sseut', 'sseup', 'sseuh', 'ssyi', 'ssyig', 'ssyigg', 'ssyigs', 'ssyin', 'ssyinj', 'ssyinh', 'ssyid', 'ssyil', 'ssyilg', 'ssyilm', 'ssyilb', 'ssyils', 'ssyilt', 'ssyilp', 'ssyilh', 'ssyim', 'ssyib', 'ssyibs', 'ssyis', 'ssyiss', 'ssying', 'ssyij', 'ssyic', 'ssyik', 'ssyit', 'ssyip', 'ssyih', 'ssi', 'ssig', 'ssigg', 'ssigs', 'ssin', 'ssinj', 'ssinh', 'ssid', 'ssil', 'ssilg', 'ssilm', 'ssilb', 'ssils', 'ssilt', 'ssilp', 'ssilh', 'ssim', 'ssib', 'ssibs', 'ssis', 'ssiss', 'ssing', 'ssij', 'ssic', 'ssik', 'ssit', 'ssip', 'ssih', 'a', 'ag', 'agg', 'ags', 'an', 'anj', 'anh', 'ad', 'al', 'alg', 'alm', 'alb', 'als', 'alt', 'alp', 'alh', 'am', 'ab', 'abs', 'as', 'ass', 'ang', 'aj', 'ac', 'ak', 'at', 'ap', 'ah', 'ae', 'aeg', 'aegg', 'aegs', 'aen', 'aenj', 'aenh', 'aed', 'ael', 'aelg', 'aelm', 'aelb', 'aels', 'aelt', 'aelp', 'aelh', 'aem', 'aeb', 'aebs', 'aes', 'aess', 'aeng', 'aej', 'aec', 'aek', 'aet', 'aep', 'aeh', 'ya', 'yag', 'yagg', 'yags', 'yan', 'yanj', 'yanh', 'yad', 'yal', 'yalg', 'yalm', 'yalb', 'yals', 'yalt', 'yalp', 'yalh', 'yam', 'yab', 'yabs', 'yas', 'yass', 'yang', 'yaj', 'yac', 'yak', 'yat', 'yap', 'yah', 'yae', 'yaeg', 'yaegg', 'yaegs', 'yaen', 'yaenj', 'yaenh', 'yaed', 'yael', 'yaelg', 'yaelm', 'yaelb', 'yaels', 'yaelt', 'yaelp', 'yaelh', 'yaem', 'yaeb', 'yaebs', 'yaes', 'yaess', 'yaeng', 'yaej', 'yaec', 'yaek', 'yaet', 'yaep', 'yaeh', 'eo', 'eog', 'eogg', 'eogs', 'eon', 'eonj', 'eonh', 'eod', 'eol', 'eolg', 'eolm', 'eolb', 'eols', 'eolt', 'eolp', 'eolh', 'eom', 'eob', 'eobs', 'eos', 'eoss', 'eong', 'eoj', 'eoc', 'eok', 'eot', 'eop', 'eoh', 'e', 'eg', 'egg', 'egs', 'en', 'enj', 'enh', 'ed', 'el', 'elg', 'elm', 'elb', 'els', 'elt', 'elp', 'elh', 'em', 'eb', 'ebs', 'es', 'ess', 'eng', 'ej', 'ec', 'ek', 'et', 'ep', 'eh', 'yeo', 'yeog', 'yeogg', 'yeogs', 'yeon', 'yeonj', 'yeonh', 'yeod', 'yeol', 'yeolg', 'yeolm', 'yeolb', 'yeols', 'yeolt', 'yeolp', 'yeolh', 'yeom', 'yeob', 'yeobs', 'yeos'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0ff.php\",\"ext\":\"php\",\"size\":1427,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '!', '\\\"', '#', '$', '%', '&', '\\\\'', '(', ')', '*', '+', ',', '-', '.', '\/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '[?]', '[?]', '.', '[', ']', ',', '*', 'wo', 'a', 'i', 'u', 'e', 'o', 'ya', 'yu', 'yo', 'tu', '+', 'a', 'i', 'u', 'e', 'o', 'ka', 'ki', 'ku', 'ke', 'ko', 'sa', 'si', 'su', 'se', 'so', 'ta', 'ti', 'tu', 'te', 'to', 'na', 'ni', 'nu', 'ne', 'no', 'ha', 'hi', 'hu', 'he', 'ho', 'ma', 'mi', 'mu', 'me', 'mo', 'ya', 'yu', 'yo', 'ra', 'ri', 'ru', 're', 'ro', 'wa', 'n', ':', ';', '', 'g', 'gg', 'gs', 'n', 'nj', 'nh', 'd', 'dd', 'r', 'lg', 'lm', 'lb', 'ls', 'lt', 'lp', 'rh', 'm', 'b', 'bb', 'bs', 's', 'ss', '', 'j', 'jj', 'c', 'k', 't', 'p', 'h', '[?]', '[?]', '[?]', 'a', 'ae', 'ya', 'yae', 'eo', 'e', '[?]', '[?]', 'yeo', 'ye', 'o', 'wa', 'wae', 'oe', '[?]', '[?]', 'yo', 'u', 'weo', 'we', 'wi', 'yu', '[?]', '[?]', 'eu', 'yi', 'i', '[?]', '[?]', '[?]', '\/C', 'PS', '!', '-', '|', 'Y=', 'W=', '[?]', '|', '-', '|', '-', '|', '#', 'O', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '{', '|', '}', '', '', '', ''];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x05a.php\",\"ext\":\"php\",\"size\":2080,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Song ', 'Wei ', 'Hong ', 'Wa ', 'Lou ', 'Ya ', 'Rao ', 'Jiao ', 'Luan ', 'Ping ', 'Xian ', 'Shao ', 'Li ', 'Cheng ', 'Xiao ', 'Mang ', 'Fu ', 'Suo ', 'Wu ', 'Wei ', 'Ke ', 'Lai ', 'Chuo ', 'Ding ', 'Niang ', 'Xing ', 'Nan ', 'Yu ', 'Nuo ', 'Pei ', 'Nei ', 'Juan ', 'Shen ', 'Zhi ', 'Han ', 'Di ', 'Zhuang ', 'E ', 'Pin ', 'Tui ', 'Han ', 'Mian ', 'Wu ', 'Yan ', 'Wu ', 'Xi ', 'Yan ', 'Yu ', 'Si ', 'Yu ', 'Wa ', '[?] ', 'Xian ', 'Ju ', 'Qu ', 'Shui ', 'Qi ', 'Xian ', 'Zhui ', 'Dong ', 'Chang ', 'Lu ', 'Ai ', 'E ', 'E ', 'Lou ', 'Mian ', 'Cong ', 'Pou ', 'Ju ', 'Po ', 'Cai ', 'Ding ', 'Wan ', 'Biao ', 'Xiao ', 'Shu ', 'Qi ', 'Hui ', 'Fu ', 'E ', 'Wo ', 'Tan ', 'Fei ', 'Wei ', 'Jie ', 'Tian ', 'Ni ', 'Quan ', 'Jing ', 'Hun ', 'Jing ', 'Qian ', 'Dian ', 'Xing ', 'Hu ', 'Wa ', 'Lai ', 'Bi ', 'Yin ', 'Chou ', 'Chuo ', 'Fu ', 'Jing ', 'Lun ', 'Yan ', 'Lan ', 'Kun ', 'Yin ', 'Ya ', 'Ju ', 'Li ', 'Dian ', 'Xian ', 'Hwa ', 'Hua ', 'Ying ', 'Chan ', 'Shen ', 'Ting ', 'Dang ', 'Yao ', 'Wu ', 'Nan ', 'Ruo ', 'Jia ', 'Tou ', 'Xu ', 'Yu ', 'Wei ', 'Ti ', 'Rou ', 'Mei ', 'Dan ', 'Ruan ', 'Qin ', 'Hui ', 'Wu ', 'Qian ', 'Chun ', 'Mao ', 'Fu ', 'Jie ', 'Duan ', 'Xi ', 'Zhong ', 'Mei ', 'Huang ', 'Mian ', 'An ', 'Ying ', 'Xuan ', 'Jie ', 'Wei ', 'Mei ', 'Yuan ', 'Zhen ', 'Qiu ', 'Ti ', 'Xie ', 'Tuo ', 'Lian ', 'Mao ', 'Ran ', 'Si ', 'Pian ', 'Wei ', 'Wa ', 'Jiu ', 'Hu ', 'Ao ', '[?] ', 'Bou ', 'Xu ', 'Tou ', 'Gui ', 'Zou ', 'Yao ', 'Pi ', 'Xi ', 'Yuan ', 'Ying ', 'Rong ', 'Ru ', 'Chi ', 'Liu ', 'Mei ', 'Pan ', 'Ao ', 'Ma ', 'Gou ', 'Kui ', 'Qin ', 'Jia ', 'Sao ', 'Zhen ', 'Yuan ', 'Cha ', 'Yong ', 'Ming ', 'Ying ', 'Ji ', 'Su ', 'Niao ', 'Xian ', 'Tao ', 'Pang ', 'Lang ', 'Nao ', 'Bao ', 'Ai ', 'Pi ', 'Pin ', 'Yi ', 'Piao ', 'Yu ', 'Lei ', 'Xuan ', 'Man ', 'Yi ', 'Zhang ', 'Kang ', 'Yong ', 'Ni ', 'Li ', 'Di ', 'Gui ', 'Yan ', 'Jin ', 'Zhuan ', 'Chang ', 'Ce ', 'Han ', 'Nen ', 'Lao ', 'Mo ', 'Zhe ', 'Hu ', 'Hu ', 'Ao ', 'Nen ', 'Qiang ', 'Ma ', 'Pie ', 'Gu ', 'Wu ', 'Jiao ', 'Tuo ', 'Zhan ', 'Mao ', 'Xian ', 'Xian ', 'Mo ', 'Liao ', 'Lian ', 'Hua '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x066.php\",\"ext\":\"php\",\"size\":2121,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yun ', 'Bei ', 'Ang ', 'Ze ', 'Ban ', 'Jie ', 'Kun ', 'Sheng ', 'Hu ', 'Fang ', 'Hao ', 'Gui ', 'Chang ', 'Xuan ', 'Ming ', 'Hun ', 'Fen ', 'Qin ', 'Hu ', 'Yi ', 'Xi ', 'Xin ', 'Yan ', 'Ze ', 'Fang ', 'Tan ', 'Shen ', 'Ju ', 'Yang ', 'Zan ', 'Bing ', 'Xing ', 'Ying ', 'Xuan ', 'Pei ', 'Zhen ', 'Ling ', 'Chun ', 'Hao ', 'Mei ', 'Zuo ', 'Mo ', 'Bian ', 'Xu ', 'Hun ', 'Zhao ', 'Zong ', 'Shi ', 'Shi ', 'Yu ', 'Fei ', 'Die ', 'Mao ', 'Ni ', 'Chang ', 'Wen ', 'Dong ', 'Ai ', 'Bing ', 'Ang ', 'Zhou ', 'Long ', 'Xian ', 'Kuang ', 'Tiao ', 'Chao ', 'Shi ', 'Huang ', 'Huang ', 'Xuan ', 'Kui ', 'Xu ', 'Jiao ', 'Jin ', 'Zhi ', 'Jin ', 'Shang ', 'Tong ', 'Hong ', 'Yan ', 'Gai ', 'Xiang ', 'Shai ', 'Xiao ', 'Ye ', 'Yun ', 'Hui ', 'Han ', 'Han ', 'Jun ', 'Wan ', 'Xian ', 'Kun ', 'Zhou ', 'Xi ', 'Cheng ', 'Sheng ', 'Bu ', 'Zhe ', 'Zhe ', 'Wu ', 'Han ', 'Hui ', 'Hao ', 'Chen ', 'Wan ', 'Tian ', 'Zhuo ', 'Zui ', 'Zhou ', 'Pu ', 'Jing ', 'Xi ', 'Shan ', 'Yi ', 'Xi ', 'Qing ', 'Qi ', 'Jing ', 'Gui ', 'Zhen ', 'Yi ', 'Zhi ', 'An ', 'Wan ', 'Lin ', 'Liang ', 'Chang ', 'Wang ', 'Xiao ', 'Zan ', 'Hi ', 'Xuan ', 'Xuan ', 'Yi ', 'Xia ', 'Yun ', 'Hui ', 'Fu ', 'Min ', 'Kui ', 'He ', 'Ying ', 'Du ', 'Wei ', 'Shu ', 'Qing ', 'Mao ', 'Nan ', 'Jian ', 'Nuan ', 'An ', 'Yang ', 'Chun ', 'Yao ', 'Suo ', 'Jin ', 'Ming ', 'Jiao ', 'Kai ', 'Gao ', 'Weng ', 'Chang ', 'Qi ', 'Hao ', 'Yan ', 'Li ', 'Ai ', 'Ji ', 'Gui ', 'Men ', 'Zan ', 'Xie ', 'Hao ', 'Mu ', 'Mo ', 'Cong ', 'Ni ', 'Zhang ', 'Hui ', 'Bao ', 'Han ', 'Xuan ', 'Chuan ', 'Liao ', 'Xian ', 'Dan ', 'Jing ', 'Pie ', 'Lin ', 'Tun ', 'Xi ', 'Yi ', 'Ji ', 'Huang ', 'Tai ', 'Ye ', 'Ye ', 'Li ', 'Tan ', 'Tong ', 'Xiao ', 'Fei ', 'Qin ', 'Zhao ', 'Hao ', 'Yi ', 'Xiang ', 'Xing ', 'Sen ', 'Jiao ', 'Bao ', 'Jing ', 'Yian ', 'Ai ', 'Ye ', 'Ru ', 'Shu ', 'Meng ', 'Xun ', 'Yao ', 'Pu ', 'Li ', 'Chen ', 'Kuang ', 'Die ', '[?] ', 'Yan ', 'Huo ', 'Lu ', 'Xi ', 'Rong ', 'Long ', 'Nang ', 'Luo ', 'Luan ', 'Shai ', 'Tang ', 'Yan ', 'Chu ', 'Yue ', 'Yue ', 'Qu ', 'Yi ', 'Geng ', 'Ye ', 'Hu ', 'He ', 'Shu ', 'Cao ', 'Cao ', 'Noboru ', 'Man ', 'Ceng ', 'Ceng ', 'Ti '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x00e.php\",\"ext\":\"php\",\"size\":1546,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', 'k', 'kh', 'kh', 'kh', 'kh', 'kh', 'ng', 'cch', 'ch', 'ch', 'ch', 'ch', 'y', 'd', 't', 'th', 'th', 'th', 'n', 'd', 't', 'th', 'th', 'th', 'n', 'b', 'p', 'ph', 'f', 'ph', 'f', 'ph', 'm', 'y', 'r', 'R', 'l', 'L', 'w', 's', 's', 's', 'h', 'l', '`', 'h', '~', 'a', 'a', 'aa', 'am', 'i', 'ii', 'ue', 'uue', 'u', 'uu', '\\\\'', '[?]', '[?]', '[?]', '[?]', 'Bh.', 'e', 'ae', 'o', 'ai', 'ai', 'ao', '+', '', '', '', '', '', '', 'M', '', ' * ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' \/\/ ', ' \/\/\/ ', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'k', 'kh', '[?]', 'kh', '[?]', '[?]', 'ng', 'ch', '[?]', 's', '[?]', '[?]', 'ny', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'd', 'h', 'th', 'th', '[?]', 'n', 'b', 'p', 'ph', 'f', 'ph', 'f', '[?]', 'm', 'y', 'r', '[?]', 'l', '[?]', 'w', '[?]', '[?]', 's', 'h', '[?]', '`', '', '~', 'a', '', 'aa', 'am', 'i', 'ii', 'y', 'yy', 'u', 'uu', '[?]', 'o', 'l', 'ny', '[?]', '[?]', 'e', 'ei', 'o', 'ay', 'ai', '[?]', '+', '[?]', '', '', '', '', '', 'M', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[?]', '[?]', 'hn', 'hm', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x055.php\",\"ext\":\"php\",\"size\":2043,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['You ', 'Yan ', 'Gu ', 'Gu ', 'Bai ', 'Han ', 'Suo ', 'Chun ', 'Yi ', 'Ai ', 'Jia ', 'Tu ', 'Xian ', 'Huan ', 'Li ', 'Xi ', 'Tang ', 'Zuo ', 'Qiu ', 'Che ', 'Wu ', 'Zao ', 'Ya ', 'Dou ', 'Qi ', 'Di ', 'Qin ', 'Ma ', 'Mal ', 'Hong ', 'Dou ', 'Kes ', 'Lao ', 'Liang ', 'Suo ', 'Zao ', 'Huan ', 'Lang ', 'Sha ', 'Ji ', 'Zuo ', 'Wo ', 'Feng ', 'Yin ', 'Hu ', 'Qi ', 'Shou ', 'Wei ', 'Shua ', 'Chang ', 'Er ', 'Li ', 'Qiang ', 'An ', 'Jie ', 'Yo ', 'Nian ', 'Yu ', 'Tian ', 'Lai ', 'Sha ', 'Xi ', 'Tuo ', 'Hu ', 'Ai ', 'Zhou ', 'Nou ', 'Ken ', 'Zhuo ', 'Zhuo ', 'Shang ', 'Di ', 'Heng ', 'Lan ', 'A ', 'Xiao ', 'Xiang ', 'Tun ', 'Wu ', 'Wen ', 'Cui ', 'Sha ', 'Hu ', 'Qi ', 'Qi ', 'Tao ', 'Dan ', 'Dan ', 'Ye ', 'Zi ', 'Bi ', 'Cui ', 'Chuo ', 'He ', 'Ya ', 'Qi ', 'Zhe ', 'Pei ', 'Liang ', 'Xian ', 'Pi ', 'Sha ', 'La ', 'Ze ', 'Qing ', 'Gua ', 'Pa ', 'Zhe ', 'Se ', 'Zhuan ', 'Nie ', 'Guo ', 'Luo ', 'Yan ', 'Di ', 'Quan ', 'Tan ', 'Bo ', 'Ding ', 'Lang ', 'Xiao ', '[?] ', 'Tang ', 'Chi ', 'Ti ', 'An ', 'Jiu ', 'Dan ', 'Ke ', 'Yong ', 'Wei ', 'Nan ', 'Shan ', 'Yu ', 'Zhe ', 'La ', 'Jie ', 'Hou ', 'Han ', 'Die ', 'Zhou ', 'Chai ', 'Wai ', 'Re ', 'Yu ', 'Yin ', 'Zan ', 'Yao ', 'Wo ', 'Mian ', 'Hu ', 'Yun ', 'Chuan ', 'Hui ', 'Huan ', 'Huan ', 'Xi ', 'He ', 'Ji ', 'Kui ', 'Zhong ', 'Wei ', 'Sha ', 'Xu ', 'Huang ', 'Du ', 'Nie ', 'Xuan ', 'Liang ', 'Yu ', 'Sang ', 'Chi ', 'Qiao ', 'Yan ', 'Dan ', 'Pen ', 'Can ', 'Li ', 'Yo ', 'Zha ', 'Wei ', 'Miao ', 'Ying ', 'Pen ', 'Phos ', 'Kui ', 'Xi ', 'Yu ', 'Jie ', 'Lou ', 'Ku ', 'Sao ', 'Huo ', 'Ti ', 'Yao ', 'He ', 'A ', 'Xiu ', 'Qiang ', 'Se ', 'Yong ', 'Su ', 'Hong ', 'Xie ', 'Yi ', 'Suo ', 'Ma ', 'Cha ', 'Hai ', 'Ke ', 'Ta ', 'Sang ', 'Tian ', 'Ru ', 'Sou ', 'Wa ', 'Ji ', 'Pang ', 'Wu ', 'Xian ', 'Shi ', 'Ge ', 'Zi ', 'Jie ', 'Luo ', 'Weng ', 'Wa ', 'Si ', 'Chi ', 'Hao ', 'Suo ', 'Jia ', 'Hai ', 'Suo ', 'Qin ', 'Nie ', 'He ', 'Cis ', 'Sai ', 'Ng ', 'Ge ', 'Na ', 'Dia ', 'Ai ', '[?] ', 'Tong ', 'Bi ', 'Ao ', 'Ao ', 'Lian ', 'Cui ', 'Zhe ', 'Mo ', 'Sou ', 'Sou ', 'Tan '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0bf.php\",\"ext\":\"php\",\"size\":2454,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['bbess', 'bbeng', 'bbej', 'bbec', 'bbek', 'bbet', 'bbep', 'bbeh', 'bbyeo', 'bbyeog', 'bbyeogg', 'bbyeogs', 'bbyeon', 'bbyeonj', 'bbyeonh', 'bbyeod', 'bbyeol', 'bbyeolg', 'bbyeolm', 'bbyeolb', 'bbyeols', 'bbyeolt', 'bbyeolp', 'bbyeolh', 'bbyeom', 'bbyeob', 'bbyeobs', 'bbyeos', 'bbyeoss', 'bbyeong', 'bbyeoj', 'bbyeoc', 'bbyeok', 'bbyeot', 'bbyeop', 'bbyeoh', 'bbye', 'bbyeg', 'bbyegg', 'bbyegs', 'bbyen', 'bbyenj', 'bbyenh', 'bbyed', 'bbyel', 'bbyelg', 'bbyelm', 'bbyelb', 'bbyels', 'bbyelt', 'bbyelp', 'bbyelh', 'bbyem', 'bbyeb', 'bbyebs', 'bbyes', 'bbyess', 'bbyeng', 'bbyej', 'bbyec', 'bbyek', 'bbyet', 'bbyep', 'bbyeh', 'bbo', 'bbog', 'bbogg', 'bbogs', 'bbon', 'bbonj', 'bbonh', 'bbod', 'bbol', 'bbolg', 'bbolm', 'bbolb', 'bbols', 'bbolt', 'bbolp', 'bbolh', 'bbom', 'bbob', 'bbobs', 'bbos', 'bboss', 'bbong', 'bboj', 'bboc', 'bbok', 'bbot', 'bbop', 'bboh', 'bbwa', 'bbwag', 'bbwagg', 'bbwags', 'bbwan', 'bbwanj', 'bbwanh', 'bbwad', 'bbwal', 'bbwalg', 'bbwalm', 'bbwalb', 'bbwals', 'bbwalt', 'bbwalp', 'bbwalh', 'bbwam', 'bbwab', 'bbwabs', 'bbwas', 'bbwass', 'bbwang', 'bbwaj', 'bbwac', 'bbwak', 'bbwat', 'bbwap', 'bbwah', 'bbwae', 'bbwaeg', 'bbwaegg', 'bbwaegs', 'bbwaen', 'bbwaenj', 'bbwaenh', 'bbwaed', 'bbwael', 'bbwaelg', 'bbwaelm', 'bbwaelb', 'bbwaels', 'bbwaelt', 'bbwaelp', 'bbwaelh', 'bbwaem', 'bbwaeb', 'bbwaebs', 'bbwaes', 'bbwaess', 'bbwaeng', 'bbwaej', 'bbwaec', 'bbwaek', 'bbwaet', 'bbwaep', 'bbwaeh', 'bboe', 'bboeg', 'bboegg', 'bboegs', 'bboen', 'bboenj', 'bboenh', 'bboed', 'bboel', 'bboelg', 'bboelm', 'bboelb', 'bboels', 'bboelt', 'bboelp', 'bboelh', 'bboem', 'bboeb', 'bboebs', 'bboes', 'bboess', 'bboeng', 'bboej', 'bboec', 'bboek', 'bboet', 'bboep', 'bboeh', 'bbyo', 'bbyog', 'bbyogg', 'bbyogs', 'bbyon', 'bbyonj', 'bbyonh', 'bbyod', 'bbyol', 'bbyolg', 'bbyolm', 'bbyolb', 'bbyols', 'bbyolt', 'bbyolp', 'bbyolh', 'bbyom', 'bbyob', 'bbyobs', 'bbyos', 'bbyoss', 'bbyong', 'bbyoj', 'bbyoc', 'bbyok', 'bbyot', 'bbyop', 'bbyoh', 'bbu', 'bbug', 'bbugg', 'bbugs', 'bbun', 'bbunj', 'bbunh', 'bbud', 'bbul', 'bbulg', 'bbulm', 'bbulb', 'bbuls', 'bbult', 'bbulp', 'bbulh', 'bbum', 'bbub', 'bbubs', 'bbus', 'bbuss', 'bbung', 'bbuj', 'bbuc', 'bbuk', 'bbut', 'bbup', 'bbuh', 'bbweo', 'bbweog', 'bbweogg', 'bbweogs', 'bbweon', 'bbweonj', 'bbweonh', 'bbweod', 'bbweol', 'bbweolg', 'bbweolm', 'bbweolb', 'bbweols', 'bbweolt', 'bbweolp', 'bbweolh', 'bbweom', 'bbweob', 'bbweobs', 'bbweos', 'bbweoss', 'bbweong', 'bbweoj', 'bbweoc'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x08a.php\",\"ext\":\"php\",\"size\":2091,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yan ', 'Yan ', 'Ding ', 'Fu ', 'Qiu ', 'Qiu ', 'Jiao ', 'Hong ', 'Ji ', 'Fan ', 'Xun ', 'Diao ', 'Hong ', 'Cha ', 'Tao ', 'Xu ', 'Jie ', 'Yi ', 'Ren ', 'Xun ', 'Yin ', 'Shan ', 'Qi ', 'Tuo ', 'Ji ', 'Xun ', 'Yin ', 'E ', 'Fen ', 'Ya ', 'Yao ', 'Song ', 'Shen ', 'Yin ', 'Xin ', 'Jue ', 'Xiao ', 'Ne ', 'Chen ', 'You ', 'Zhi ', 'Xiong ', 'Fang ', 'Xin ', 'Chao ', 'She ', 'Xian ', 'Sha ', 'Tun ', 'Xu ', 'Yi ', 'Yi ', 'Su ', 'Chi ', 'He ', 'Shen ', 'He ', 'Xu ', 'Zhen ', 'Zhu ', 'Zheng ', 'Gou ', 'Zi ', 'Zi ', 'Zhan ', 'Gu ', 'Fu ', 'Quan ', 'Die ', 'Ling ', 'Di ', 'Yang ', 'Li ', 'Nao ', 'Pan ', 'Zhou ', 'Gan ', 'Yi ', 'Ju ', 'Ao ', 'Zha ', 'Tuo ', 'Yi ', 'Qu ', 'Zhao ', 'Ping ', 'Bi ', 'Xiong ', 'Qu ', 'Ba ', 'Da ', 'Zu ', 'Tao ', 'Zhu ', 'Ci ', 'Zhe ', 'Yong ', 'Xu ', 'Xun ', 'Yi ', 'Huang ', 'He ', 'Shi ', 'Cha ', 'Jiao ', 'Shi ', 'Hen ', 'Cha ', 'Gou ', 'Gui ', 'Quan ', 'Hui ', 'Jie ', 'Hua ', 'Gai ', 'Xiang ', 'Wei ', 'Shen ', 'Chou ', 'Tong ', 'Mi ', 'Zhan ', 'Ming ', 'E ', 'Hui ', 'Yan ', 'Xiong ', 'Gua ', 'Er ', 'Beng ', 'Tiao ', 'Chi ', 'Lei ', 'Zhu ', 'Kuang ', 'Kua ', 'Wu ', 'Yu ', 'Teng ', 'Ji ', 'Zhi ', 'Ren ', 'Su ', 'Lang ', 'E ', 'Kuang ', 'E ', 'Shi ', 'Ting ', 'Dan ', 'Bo ', 'Chan ', 'You ', 'Heng ', 'Qiao ', 'Qin ', 'Shua ', 'An ', 'Yu ', 'Xiao ', 'Cheng ', 'Jie ', 'Xian ', 'Wu ', 'Wu ', 'Gao ', 'Song ', 'Pu ', 'Hui ', 'Jing ', 'Shuo ', 'Zhen ', 'Shuo ', 'Du ', 'Yasashi ', 'Chang ', 'Shui ', 'Jie ', 'Ke ', 'Qu ', 'Cong ', 'Xiao ', 'Sui ', 'Wang ', 'Xuan ', 'Fei ', 'Chi ', 'Ta ', 'Yi ', 'Na ', 'Yin ', 'Diao ', 'Pi ', 'Chuo ', 'Chan ', 'Chen ', 'Zhun ', 'Ji ', 'Qi ', 'Tan ', 'Zhui ', 'Wei ', 'Ju ', 'Qing ', 'Jian ', 'Zheng ', 'Ze ', 'Zou ', 'Qian ', 'Zhuo ', 'Liang ', 'Jian ', 'Zhu ', 'Hao ', 'Lun ', 'Shen ', 'Biao ', 'Huai ', 'Pian ', 'Yu ', 'Die ', 'Xu ', 'Pian ', 'Shi ', 'Xuan ', 'Shi ', 'Hun ', 'Hua ', 'E ', 'Zhong ', 'Di ', 'Xie ', 'Fu ', 'Pu ', 'Ting ', 'Jian ', 'Qi ', 'Yu ', 'Zi ', 'Chuan ', 'Xi ', 'Hui ', 'Yin ', 'An ', 'Xian ', 'Nan ', 'Chen ', 'Feng ', 'Zhu ', 'Yang ', 'Yan ', 'Heng ', 'Xuan ', 'Ge ', 'Nuo ', 'Qi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x022.php\",\"ext\":\"php\",\"size\":1783,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '-', '[?]', '[?]', '\/', '\\\\\\\\', '*', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '|', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ':', '[?]', '[?]', '[?]', '[?]', '[?]', '~n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x08e.php\",\"ext\":\"php\",\"size\":2103,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Chu ', 'Jing ', 'Nie ', 'Xiao ', 'Bo ', 'Chi ', 'Qun ', 'Mou ', 'Shu ', 'Lang ', 'Yong ', 'Jiao ', 'Chou ', 'Qiao ', '[?] ', 'Ta ', 'Jian ', 'Qi ', 'Wo ', 'Wei ', 'Zhuo ', 'Jie ', 'Ji ', 'Nie ', 'Ju ', 'Ju ', 'Lun ', 'Lu ', 'Leng ', 'Huai ', 'Ju ', 'Chi ', 'Wan ', 'Quan ', 'Ti ', 'Bo ', 'Zu ', 'Qie ', 'Ji ', 'Cu ', 'Zong ', 'Cai ', 'Zong ', 'Peng ', 'Zhi ', 'Zheng ', 'Dian ', 'Zhi ', 'Yu ', 'Duo ', 'Dun ', 'Chun ', 'Yong ', 'Zhong ', 'Di ', 'Zhe ', 'Chen ', 'Chuai ', 'Jian ', 'Gua ', 'Tang ', 'Ju ', 'Fu ', 'Zu ', 'Die ', 'Pian ', 'Rou ', 'Nuo ', 'Ti ', 'Cha ', 'Tui ', 'Jian ', 'Dao ', 'Cuo ', 'Xi ', 'Ta ', 'Qiang ', 'Zhan ', 'Dian ', 'Ti ', 'Ji ', 'Nie ', 'Man ', 'Liu ', 'Zhan ', 'Bi ', 'Chong ', 'Lu ', 'Liao ', 'Cu ', 'Tang ', 'Dai ', 'Suo ', 'Xi ', 'Kui ', 'Ji ', 'Zhi ', 'Qiang ', 'Di ', 'Man ', 'Zong ', 'Lian ', 'Beng ', 'Zao ', 'Nian ', 'Bie ', 'Tui ', 'Ju ', 'Deng ', 'Ceng ', 'Xian ', 'Fan ', 'Chu ', 'Zhong ', 'Dun ', 'Bo ', 'Cu ', 'Zu ', 'Jue ', 'Jue ', 'Lin ', 'Ta ', 'Qiao ', 'Qiao ', 'Pu ', 'Liao ', 'Dun ', 'Cuan ', 'Kuang ', 'Zao ', 'Ta ', 'Bi ', 'Bi ', 'Zhu ', 'Ju ', 'Chu ', 'Qiao ', 'Dun ', 'Chou ', 'Ji ', 'Wu ', 'Yue ', 'Nian ', 'Lin ', 'Lie ', 'Zhi ', 'Li ', 'Zhi ', 'Chan ', 'Chu ', 'Duan ', 'Wei ', 'Long ', 'Lin ', 'Xian ', 'Wei ', 'Zuan ', 'Lan ', 'Xie ', 'Rang ', 'Xie ', 'Nie ', 'Ta ', 'Qu ', 'Jie ', 'Cuan ', 'Zuan ', 'Xi ', 'Kui ', 'Jue ', 'Lin ', 'Shen ', 'Gong ', 'Dan ', 'Segare ', 'Qu ', 'Ti ', 'Duo ', 'Duo ', 'Gong ', 'Lang ', 'Nerau ', 'Luo ', 'Ai ', 'Ji ', 'Ju ', 'Tang ', 'Utsuke ', '[?] ', 'Yan ', 'Shitsuke ', 'Kang ', 'Qu ', 'Lou ', 'Lao ', 'Tuo ', 'Zhi ', 'Yagate ', 'Ti ', 'Dao ', 'Yagate ', 'Yu ', 'Che ', 'Ya ', 'Gui ', 'Jun ', 'Wei ', 'Yue ', 'Xin ', 'Di ', 'Xuan ', 'Fan ', 'Ren ', 'Shan ', 'Qiang ', 'Shu ', 'Tun ', 'Chen ', 'Dai ', 'E ', 'Na ', 'Qi ', 'Mao ', 'Ruan ', 'Ren ', 'Fan ', 'Zhuan ', 'Hong ', 'Hu ', 'Qu ', 'Huang ', 'Di ', 'Ling ', 'Dai ', 'Ao ', 'Zhen ', 'Fan ', 'Kuang ', 'Ang ', 'Peng ', 'Bei ', 'Gu ', 'Ku ', 'Pao ', 'Zhu ', 'Rong ', 'E ', 'Ba ', 'Zhou ', 'Zhi ', 'Yao ', 'Ke ', 'Yi ', 'Qing ', 'Shi ', 'Ping '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x090.php\",\"ext\":\"php\",\"size\":2075,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Tui ', 'Song ', 'Gua ', 'Tao ', 'Pang ', 'Hou ', 'Ni ', 'Dun ', 'Jiong ', 'Xuan ', 'Xun ', 'Bu ', 'You ', 'Xiao ', 'Qiu ', 'Tou ', 'Zhu ', 'Qiu ', 'Di ', 'Di ', 'Tu ', 'Jing ', 'Ti ', 'Dou ', 'Yi ', 'Zhe ', 'Tong ', 'Guang ', 'Wu ', 'Shi ', 'Cheng ', 'Su ', 'Zao ', 'Qun ', 'Feng ', 'Lian ', 'Suo ', 'Hui ', 'Li ', 'Sako ', 'Lai ', 'Ben ', 'Cuo ', 'Jue ', 'Beng ', 'Huan ', 'Dai ', 'Lu ', 'You ', 'Zhou ', 'Jin ', 'Yu ', 'Chuo ', 'Kui ', 'Wei ', 'Ti ', 'Yi ', 'Da ', 'Yuan ', 'Luo ', 'Bi ', 'Nuo ', 'Yu ', 'Dang ', 'Sui ', 'Dun ', 'Sui ', 'Yan ', 'Chuan ', 'Chi ', 'Ti ', 'Yu ', 'Shi ', 'Zhen ', 'You ', 'Yun ', 'E ', 'Bian ', 'Guo ', 'E ', 'Xia ', 'Huang ', 'Qiu ', 'Dao ', 'Da ', 'Wei ', 'Appare ', 'Yi ', 'Gou ', 'Yao ', 'Chu ', 'Liu ', 'Xun ', 'Ta ', 'Di ', 'Chi ', 'Yuan ', 'Su ', 'Ta ', 'Qian ', '[?] ', 'Yao ', 'Guan ', 'Zhang ', 'Ao ', 'Shi ', 'Ce ', 'Chi ', 'Su ', 'Zao ', 'Zhe ', 'Dun ', 'Di ', 'Lou ', 'Chi ', 'Cuo ', 'Lin ', 'Zun ', 'Rao ', 'Qian ', 'Xuan ', 'Yu ', 'Yi ', 'Wu ', 'Liao ', 'Ju ', 'Shi ', 'Bi ', 'Yao ', 'Mai ', 'Xie ', 'Sui ', 'Huan ', 'Zhan ', 'Teng ', 'Er ', 'Miao ', 'Bian ', 'Bian ', 'La ', 'Li ', 'Yuan ', 'Yao ', 'Luo ', 'Li ', 'Yi ', 'Ting ', 'Deng ', 'Qi ', 'Yong ', 'Shan ', 'Han ', 'Yu ', 'Mang ', 'Ru ', 'Qiong ', '[?] ', 'Kuang ', 'Fu ', 'Kang ', 'Bin ', 'Fang ', 'Xing ', 'Na ', 'Xin ', 'Shen ', 'Bang ', 'Yuan ', 'Cun ', 'Huo ', 'Xie ', 'Bang ', 'Wu ', 'Ju ', 'You ', 'Han ', 'Tai ', 'Qiu ', 'Bi ', 'Pei ', 'Bing ', 'Shao ', 'Bei ', 'Wa ', 'Di ', 'Zou ', 'Ye ', 'Lin ', 'Kuang ', 'Gui ', 'Zhu ', 'Shi ', 'Ku ', 'Yu ', 'Gai ', 'Ge ', 'Xi ', 'Zhi ', 'Ji ', 'Xun ', 'Hou ', 'Xing ', 'Jiao ', 'Xi ', 'Gui ', 'Nuo ', 'Lang ', 'Jia ', 'Kuai ', 'Zheng ', 'Otoko ', 'Yun ', 'Yan ', 'Cheng ', 'Dou ', 'Chi ', 'Lu ', 'Fu ', 'Wu ', 'Fu ', 'Gao ', 'Hao ', 'Lang ', 'Jia ', 'Geng ', 'Jun ', 'Ying ', 'Bo ', 'Xi ', 'Bei ', 'Li ', 'Yun ', 'Bu ', 'Xiao ', 'Qi ', 'Pi ', 'Qing ', 'Guo ', 'Zhou ', 'Tan ', 'Zou ', 'Ping ', 'Lai ', 'Ni ', 'Chen ', 'You ', 'Bu ', 'Xiang ', 'Dan ', 'Ju ', 'Yong ', 'Qiao ', 'Yi ', 'Du ', 'Yan ', 'Mei '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x091.php\",\"ext\":\"php\",\"size\":2099,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ruo ', 'Bei ', 'E ', 'Yu ', 'Juan ', 'Yu ', 'Yun ', 'Hou ', 'Kui ', 'Xiang ', 'Xiang ', 'Sou ', 'Tang ', 'Ming ', 'Xi ', 'Ru ', 'Chu ', 'Zi ', 'Zou ', 'Ju ', 'Wu ', 'Xiang ', 'Yun ', 'Hao ', 'Yong ', 'Bi ', 'Mo ', 'Chao ', 'Fu ', 'Liao ', 'Yin ', 'Zhuan ', 'Hu ', 'Qiao ', 'Yan ', 'Zhang ', 'Fan ', 'Qiao ', 'Xu ', 'Deng ', 'Bi ', 'Xin ', 'Bi ', 'Ceng ', 'Wei ', 'Zheng ', 'Mao ', 'Shan ', 'Lin ', 'Po ', 'Dan ', 'Meng ', 'Ye ', 'Cao ', 'Kuai ', 'Feng ', 'Meng ', 'Zou ', 'Kuang ', 'Lian ', 'Zan ', 'Chan ', 'You ', 'Qi ', 'Yan ', 'Chan ', 'Zan ', 'Ling ', 'Huan ', 'Xi ', 'Feng ', 'Zan ', 'Li ', 'You ', 'Ding ', 'Qiu ', 'Zhuo ', 'Pei ', 'Zhou ', 'Yi ', 'Hang ', 'Yu ', 'Jiu ', 'Yan ', 'Zui ', 'Mao ', 'Dan ', 'Xu ', 'Tou ', 'Zhen ', 'Fen ', 'Sakenomoto ', '[?] ', 'Yun ', 'Tai ', 'Tian ', 'Qia ', 'Tuo ', 'Zuo ', 'Han ', 'Gu ', 'Su ', 'Po ', 'Chou ', 'Zai ', 'Ming ', 'Luo ', 'Chuo ', 'Chou ', 'You ', 'Tong ', 'Zhi ', 'Xian ', 'Jiang ', 'Cheng ', 'Yin ', 'Tu ', 'Xiao ', 'Mei ', 'Ku ', 'Suan ', 'Lei ', 'Pu ', 'Zui ', 'Hai ', 'Yan ', 'Xi ', 'Niang ', 'Wei ', 'Lu ', 'Lan ', 'Yan ', 'Tao ', 'Pei ', 'Zhan ', 'Chun ', 'Tan ', 'Zui ', 'Chuo ', 'Cu ', 'Kun ', 'Ti ', 'Mian ', 'Du ', 'Hu ', 'Xu ', 'Xing ', 'Tan ', 'Jiu ', 'Chun ', 'Yun ', 'Po ', 'Ke ', 'Sou ', 'Mi ', 'Quan ', 'Chou ', 'Cuo ', 'Yun ', 'Yong ', 'Ang ', 'Zha ', 'Hai ', 'Tang ', 'Jiang ', 'Piao ', 'Shan ', 'Yu ', 'Li ', 'Zao ', 'Lao ', 'Yi ', 'Jiang ', 'Pu ', 'Jiao ', 'Xi ', 'Tan ', 'Po ', 'Nong ', 'Yi ', 'Li ', 'Ju ', 'Jiao ', 'Yi ', 'Niang ', 'Ru ', 'Xun ', 'Chou ', 'Yan ', 'Ling ', 'Mi ', 'Mi ', 'Niang ', 'Xin ', 'Jiao ', 'Xi ', 'Mi ', 'Yan ', 'Bian ', 'Cai ', 'Shi ', 'You ', 'Shi ', 'Shi ', 'Li ', 'Zhong ', 'Ye ', 'Liang ', 'Li ', 'Jin ', 'Jin ', 'Qiu ', 'Yi ', 'Diao ', 'Dao ', 'Zhao ', 'Ding ', 'Po ', 'Qiu ', 'He ', 'Fu ', 'Zhen ', 'Zhi ', 'Ba ', 'Luan ', 'Fu ', 'Nai ', 'Diao ', 'Shan ', 'Qiao ', 'Kou ', 'Chuan ', 'Zi ', 'Fan ', 'Yu ', 'Hua ', 'Han ', 'Gong ', 'Qi ', 'Mang ', 'Ri ', 'Di ', 'Si ', 'Xi ', 'Yi ', 'Chai ', 'Shi ', 'Tu ', 'Xi ', 'Nu ', 'Qian ', 'Ishiyumi ', 'Jian ', 'Pi ', 'Ye ', 'Yin '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0fd.php\",\"ext\":\"php\",\"size\":1365,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return{Salla}', '{Qala}', 'Allah', 'Akbar', 'Mohammed', 'SL`M', 'Rasul', '{Alayhi}', '{WaSallam}', '{Salla}', '{Salla Llahu Alayhi WaSallam}', '{Jalla Jalalahu}', 'Rial ', '{Bismillah Ar-Rahman Ar-Rahimi}', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x087.php\",\"ext\":\"php\",\"size\":2093,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Shu ', 'Xuan ', 'Feng ', 'Shen ', 'Zhen ', 'Fu ', 'Xian ', 'Zhe ', 'Wu ', 'Fu ', 'Li ', 'Lang ', 'Bi ', 'Chu ', 'Yuan ', 'You ', 'Jie ', 'Dan ', 'Yan ', 'Ting ', 'Dian ', 'Shui ', 'Hui ', 'Gua ', 'Zhi ', 'Song ', 'Fei ', 'Ju ', 'Mi ', 'Qi ', 'Qi ', 'Yu ', 'Jun ', 'Zha ', 'Meng ', 'Qiang ', 'Si ', 'Xi ', 'Lun ', 'Li ', 'Die ', 'Tiao ', 'Tao ', 'Kun ', 'Gan ', 'Han ', 'Yu ', 'Bang ', 'Fei ', 'Pi ', 'Wei ', 'Dun ', 'Yi ', 'Yuan ', 'Su ', 'Quan ', 'Qian ', 'Rui ', 'Ni ', 'Qing ', 'Wei ', 'Liang ', 'Guo ', 'Wan ', 'Dong ', 'E ', 'Ban ', 'Di ', 'Wang ', 'Can ', 'Yang ', 'Ying ', 'Guo ', 'Chan ', '[?] ', 'La ', 'Ke ', 'Ji ', 'He ', 'Ting ', 'Mai ', 'Xu ', 'Mian ', 'Yu ', 'Jie ', 'Shi ', 'Xuan ', 'Huang ', 'Yan ', 'Bian ', 'Rou ', 'Wei ', 'Fu ', 'Yuan ', 'Mei ', 'Wei ', 'Fu ', 'Ruan ', 'Xie ', 'You ', 'Qiu ', 'Mao ', 'Xia ', 'Ying ', 'Shi ', 'Chong ', 'Tang ', 'Zhu ', 'Zong ', 'Ti ', 'Fu ', 'Yuan ', 'Hui ', 'Meng ', 'La ', 'Du ', 'Hu ', 'Qiu ', 'Die ', 'Li ', 'Gua ', 'Yun ', 'Ju ', 'Nan ', 'Lou ', 'Qun ', 'Rong ', 'Ying ', 'Jiang ', '[?] ', 'Lang ', 'Pang ', 'Si ', 'Xi ', 'Ci ', 'Xi ', 'Yuan ', 'Weng ', 'Lian ', 'Sou ', 'Ban ', 'Rong ', 'Rong ', 'Ji ', 'Wu ', 'Qiu ', 'Han ', 'Qin ', 'Yi ', 'Bi ', 'Hua ', 'Tang ', 'Yi ', 'Du ', 'Nai ', 'He ', 'Hu ', 'Hui ', 'Ma ', 'Ming ', 'Yi ', 'Wen ', 'Ying ', 'Teng ', 'Yu ', 'Cang ', 'So ', 'Ebi ', 'Man ', '[?] ', 'Shang ', 'Zhe ', 'Cao ', 'Chi ', 'Di ', 'Ao ', 'Lu ', 'Wei ', 'Zhi ', 'Tang ', 'Chen ', 'Piao ', 'Qu ', 'Pi ', 'Yu ', 'Jian ', 'Luo ', 'Lou ', 'Qin ', 'Zhong ', 'Yin ', 'Jiang ', 'Shuai ', 'Wen ', 'Jiao ', 'Wan ', 'Zhi ', 'Zhe ', 'Ma ', 'Ma ', 'Guo ', 'Liu ', 'Mao ', 'Xi ', 'Cong ', 'Li ', 'Man ', 'Xiao ', 'Kamakiri ', 'Zhang ', 'Mang ', 'Xiang ', 'Mo ', 'Zui ', 'Si ', 'Qiu ', 'Te ', 'Zhi ', 'Peng ', 'Peng ', 'Jiao ', 'Qu ', 'Bie ', 'Liao ', 'Pan ', 'Gui ', 'Xi ', 'Ji ', 'Zhuan ', 'Huang ', 'Fei ', 'Lao ', 'Jue ', 'Jue ', 'Hui ', 'Yin ', 'Chan ', 'Jiao ', 'Shan ', 'Rao ', 'Xiao ', 'Mou ', 'Chong ', 'Xun ', 'Si ', '[?] ', 'Cheng ', 'Dang ', 'Li ', 'Xie ', 'Shan ', 'Yi ', 'Jing ', 'Da ', 'Chan ', 'Qi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x09e.php\",\"ext\":\"php\",\"size\":2059,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Shu ', 'Luo ', 'Qi ', 'Yi ', 'Ji ', 'Zhe ', 'Yu ', 'Zhan ', 'Ye ', 'Yang ', 'Pi ', 'Ning ', 'Huo ', 'Mi ', 'Ying ', 'Meng ', 'Di ', 'Yue ', 'Yu ', 'Lei ', 'Bao ', 'Lu ', 'He ', 'Long ', 'Shuang ', 'Yue ', 'Ying ', 'Guan ', 'Qu ', 'Li ', 'Luan ', 'Niao ', 'Jiu ', 'Ji ', 'Yuan ', 'Ming ', 'Shi ', 'Ou ', 'Ya ', 'Cang ', 'Bao ', 'Zhen ', 'Gu ', 'Dong ', 'Lu ', 'Ya ', 'Xiao ', 'Yang ', 'Ling ', 'Zhi ', 'Qu ', 'Yuan ', 'Xue ', 'Tuo ', 'Si ', 'Zhi ', 'Er ', 'Gua ', 'Xiu ', 'Heng ', 'Zhou ', 'Ge ', 'Luan ', 'Hong ', 'Wu ', 'Bo ', 'Li ', 'Juan ', 'Hu ', 'E ', 'Yu ', 'Xian ', 'Ti ', 'Wu ', 'Que ', 'Miao ', 'An ', 'Kun ', 'Bei ', 'Peng ', 'Qian ', 'Chun ', 'Geng ', 'Yuan ', 'Su ', 'Hu ', 'He ', 'E ', 'Gu ', 'Qiu ', 'Zi ', 'Mei ', 'Mu ', 'Ni ', 'Yao ', 'Weng ', 'Liu ', 'Ji ', 'Ni ', 'Jian ', 'He ', 'Yi ', 'Ying ', 'Zhe ', 'Liao ', 'Liao ', 'Jiao ', 'Jiu ', 'Yu ', 'Lu ', 'Xuan ', 'Zhan ', 'Ying ', 'Huo ', 'Meng ', 'Guan ', 'Shuang ', 'Lu ', 'Jin ', 'Ling ', 'Jian ', 'Xian ', 'Cuo ', 'Jian ', 'Jian ', 'Yan ', 'Cuo ', 'Lu ', 'You ', 'Cu ', 'Ji ', 'Biao ', 'Cu ', 'Biao ', 'Zhu ', 'Jun ', 'Zhu ', 'Jian ', 'Mi ', 'Mi ', 'Wu ', 'Liu ', 'Chen ', 'Jun ', 'Lin ', 'Ni ', 'Qi ', 'Lu ', 'Jiu ', 'Jun ', 'Jing ', 'Li ', 'Xiang ', 'Yan ', 'Jia ', 'Mi ', 'Li ', 'She ', 'Zhang ', 'Lin ', 'Jing ', 'Ji ', 'Ling ', 'Yan ', 'Cu ', 'Mai ', 'Mai ', 'Ge ', 'Chao ', 'Fu ', 'Mian ', 'Mian ', 'Fu ', 'Pao ', 'Qu ', 'Qu ', 'Mou ', 'Fu ', 'Xian ', 'Lai ', 'Qu ', 'Mian ', '[?] ', 'Feng ', 'Fu ', 'Qu ', 'Mian ', 'Ma ', 'Mo ', 'Mo ', 'Hui ', 'Ma ', 'Zou ', 'Nen ', 'Fen ', 'Huang ', 'Huang ', 'Jin ', 'Guang ', 'Tian ', 'Tou ', 'Heng ', 'Xi ', 'Kuang ', 'Heng ', 'Shu ', 'Li ', 'Nian ', 'Chi ', 'Hei ', 'Hei ', 'Yi ', 'Qian ', 'Dan ', 'Xi ', 'Tuan ', 'Mo ', 'Mo ', 'Qian ', 'Dai ', 'Chu ', 'You ', 'Dian ', 'Yi ', 'Xia ', 'Yan ', 'Qu ', 'Mei ', 'Yan ', 'Jing ', 'Yu ', 'Li ', 'Dang ', 'Du ', 'Can ', 'Yin ', 'An ', 'Yan ', 'Tan ', 'An ', 'Zhen ', 'Dai ', 'Can ', 'Yi ', 'Mei ', 'Dan ', 'Yan ', 'Du ', 'Lu ', 'Zhi ', 'Fen ', 'Fu ', 'Fu ', 'Min ', 'Min ', 'Yuan '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x068.php\",\"ext\":\"php\",\"size\":2118,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Zhi ', 'Liu ', 'Mei ', 'Hoy ', 'Rong ', 'Zha ', '[?] ', 'Biao ', 'Zhan ', 'Jie ', 'Long ', 'Dong ', 'Lu ', 'Sayng ', 'Li ', 'Lan ', 'Yong ', 'Shu ', 'Xun ', 'Shuan ', 'Qi ', 'Zhen ', 'Qi ', 'Li ', 'Yi ', 'Xiang ', 'Zhen ', 'Li ', 'Su ', 'Gua ', 'Kan ', 'Bing ', 'Ren ', 'Xiao ', 'Bo ', 'Ren ', 'Bing ', 'Zi ', 'Chou ', 'Yi ', 'Jie ', 'Xu ', 'Zhu ', 'Jian ', 'Zui ', 'Er ', 'Er ', 'You ', 'Fa ', 'Gong ', 'Kao ', 'Lao ', 'Zhan ', 'Li ', 'Yin ', 'Yang ', 'He ', 'Gen ', 'Zhi ', 'Chi ', 'Ge ', 'Zai ', 'Luan ', 'Fu ', 'Jie ', 'Hang ', 'Gui ', 'Tao ', 'Guang ', 'Wei ', 'Kuang ', 'Ru ', 'An ', 'An ', 'Juan ', 'Yi ', 'Zhuo ', 'Ku ', 'Zhi ', 'Qiong ', 'Tong ', 'Sang ', 'Sang ', 'Huan ', 'Jie ', 'Jiu ', 'Xue ', 'Duo ', 'Zhui ', 'Yu ', 'Zan ', 'Kasei ', 'Ying ', 'Masu ', '[?] ', 'Zhan ', 'Ya ', 'Nao ', 'Zhen ', 'Dang ', 'Qi ', 'Qiao ', 'Hua ', 'Kuai ', 'Jiang ', 'Zhuang ', 'Xun ', 'Suo ', 'Sha ', 'Zhen ', 'Bei ', 'Ting ', 'Gua ', 'Jing ', 'Bo ', 'Ben ', 'Fu ', 'Rui ', 'Tong ', 'Jue ', 'Xi ', 'Lang ', 'Liu ', 'Feng ', 'Qi ', 'Wen ', 'Jun ', 'Gan ', 'Cu ', 'Liang ', 'Qiu ', 'Ting ', 'You ', 'Mei ', 'Bang ', 'Long ', 'Peng ', 'Zhuang ', 'Di ', 'Xuan ', 'Tu ', 'Zao ', 'Ao ', 'Gu ', 'Bi ', 'Di ', 'Han ', 'Zi ', 'Zhi ', 'Ren ', 'Bei ', 'Geng ', 'Jian ', 'Huan ', 'Wan ', 'Nuo ', 'Jia ', 'Tiao ', 'Ji ', 'Xiao ', 'Lu ', 'Huan ', 'Shao ', 'Cen ', 'Fen ', 'Song ', 'Meng ', 'Wu ', 'Li ', 'Li ', 'Dou ', 'Cen ', 'Ying ', 'Suo ', 'Ju ', 'Ti ', 'Jie ', 'Kun ', 'Zhuo ', 'Shu ', 'Chan ', 'Fan ', 'Wei ', 'Jing ', 'Li ', 'Bing ', 'Fumoto ', 'Shikimi ', 'Tao ', 'Zhi ', 'Lai ', 'Lian ', 'Jian ', 'Zhuo ', 'Ling ', 'Li ', 'Qi ', 'Bing ', 'Zhun ', 'Cong ', 'Qian ', 'Mian ', 'Qi ', 'Qi ', 'Cai ', 'Gun ', 'Chan ', 'Te ', 'Fei ', 'Pai ', 'Bang ', 'Pou ', 'Hun ', 'Zong ', 'Cheng ', 'Zao ', 'Ji ', 'Li ', 'Peng ', 'Yu ', 'Yu ', 'Gu ', 'Hun ', 'Dong ', 'Tang ', 'Gang ', 'Wang ', 'Di ', 'Xi ', 'Fan ', 'Cheng ', 'Zhan ', 'Qi ', 'Yuan ', 'Yan ', 'Yu ', 'Quan ', 'Yi ', 'Sen ', 'Ren ', 'Chui ', 'Leng ', 'Qi ', 'Zhuo ', 'Fu ', 'Ke ', 'Lai ', 'Zou ', 'Zou ', 'Zhuo ', 'Guan ', 'Fen ', 'Fen ', 'Chen ', 'Qiong ', 'Nie '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x05b.php\",\"ext\":\"php\",\"size\":2112,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Gui ', 'Deng ', 'Zhi ', 'Xu ', 'Yi ', 'Hua ', 'Xi ', 'Hui ', 'Rao ', 'Xi ', 'Yan ', 'Chan ', 'Jiao ', 'Mei ', 'Fan ', 'Fan ', 'Xian ', 'Yi ', 'Wei ', 'Jiao ', 'Fu ', 'Shi ', 'Bi ', 'Shan ', 'Sui ', 'Qiang ', 'Lian ', 'Huan ', 'Xin ', 'Niao ', 'Dong ', 'Yi ', 'Can ', 'Ai ', 'Niang ', 'Neng ', 'Ma ', 'Tiao ', 'Chou ', 'Jin ', 'Ci ', 'Yu ', 'Pin ', 'Yong ', 'Xu ', 'Nai ', 'Yan ', 'Tai ', 'Ying ', 'Can ', 'Niao ', 'Wo ', 'Ying ', 'Mian ', 'Kaka ', 'Ma ', 'Shen ', 'Xing ', 'Ni ', 'Du ', 'Liu ', 'Yuan ', 'Lan ', 'Yan ', 'Shuang ', 'Ling ', 'Jiao ', 'Niang ', 'Lan ', 'Xian ', 'Ying ', 'Shuang ', 'Shuai ', 'Quan ', 'Mi ', 'Li ', 'Luan ', 'Yan ', 'Zhu ', 'Lan ', 'Zi ', 'Jie ', 'Jue ', 'Jue ', 'Kong ', 'Yun ', 'Zi ', 'Zi ', 'Cun ', 'Sun ', 'Fu ', 'Bei ', 'Zi ', 'Xiao ', 'Xin ', 'Meng ', 'Si ', 'Tai ', 'Bao ', 'Ji ', 'Gu ', 'Nu ', 'Xue ', '[?] ', 'Zhuan ', 'Hai ', 'Luan ', 'Sun ', 'Huai ', 'Mie ', 'Cong ', 'Qian ', 'Shu ', 'Chan ', 'Ya ', 'Zi ', 'Ni ', 'Fu ', 'Zi ', 'Li ', 'Xue ', 'Bo ', 'Ru ', 'Lai ', 'Nie ', 'Nie ', 'Ying ', 'Luan ', 'Mian ', 'Zhu ', 'Rong ', 'Ta ', 'Gui ', 'Zhai ', 'Qiong ', 'Yu ', 'Shou ', 'An ', 'Tu ', 'Song ', 'Wan ', 'Rou ', 'Yao ', 'Hong ', 'Yi ', 'Jing ', 'Zhun ', 'Mi ', 'Zhu ', 'Dang ', 'Hong ', 'Zong ', 'Guan ', 'Zhou ', 'Ding ', 'Wan ', 'Yi ', 'Bao ', 'Shi ', 'Shi ', 'Chong ', 'Shen ', 'Ke ', 'Xuan ', 'Shi ', 'You ', 'Huan ', 'Yi ', 'Tiao ', 'Shi ', 'Xian ', 'Gong ', 'Cheng ', 'Qun ', 'Gong ', 'Xiao ', 'Zai ', 'Zha ', 'Bao ', 'Hai ', 'Yan ', 'Xiao ', 'Jia ', 'Shen ', 'Chen ', 'Rong ', 'Huang ', 'Mi ', 'Kou ', 'Kuan ', 'Bin ', 'Su ', 'Cai ', 'Zan ', 'Ji ', 'Yuan ', 'Ji ', 'Yin ', 'Mi ', 'Kou ', 'Qing ', 'Que ', 'Zhen ', 'Jian ', 'Fu ', 'Ning ', 'Bing ', 'Huan ', 'Mei ', 'Qin ', 'Han ', 'Yu ', 'Shi ', 'Ning ', 'Qin ', 'Ning ', 'Zhi ', 'Yu ', 'Bao ', 'Kuan ', 'Ning ', 'Qin ', 'Mo ', 'Cha ', 'Ju ', 'Gua ', 'Qin ', 'Hu ', 'Wu ', 'Liao ', 'Shi ', 'Zhu ', 'Zhai ', 'Shen ', 'Wei ', 'Xie ', 'Kuan ', 'Hui ', 'Liao ', 'Jun ', 'Huan ', 'Yi ', 'Yi ', 'Bao ', 'Qin ', 'Chong ', 'Bao ', 'Feng ', 'Cun ', 'Dui ', 'Si ', 'Xun ', 'Dao ', 'Lu ', 'Dui ', 'Shou '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c6.php\",\"ext\":\"php\",\"size\":1934,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['yeoss', 'yeong', 'yeoj', 'yeoc', 'yeok', 'yeot', 'yeop', 'yeoh', 'ye', 'yeg', 'yegg', 'yegs', 'yen', 'yenj', 'yenh', 'yed', 'yel', 'yelg', 'yelm', 'yelb', 'yels', 'yelt', 'yelp', 'yelh', 'yem', 'yeb', 'yebs', 'yes', 'yess', 'yeng', 'yej', 'yec', 'yek', 'yet', 'yep', 'yeh', 'o', 'og', 'ogg', 'ogs', 'on', 'onj', 'onh', 'od', 'ol', 'olg', 'olm', 'olb', 'ols', 'olt', 'olp', 'olh', 'om', 'ob', 'obs', 'os', 'oss', 'ong', 'oj', 'oc', 'ok', 'ot', 'op', 'oh', 'wa', 'wag', 'wagg', 'wags', 'wan', 'wanj', 'wanh', 'wad', 'wal', 'walg', 'walm', 'walb', 'wals', 'walt', 'walp', 'walh', 'wam', 'wab', 'wabs', 'was', 'wass', 'wang', 'waj', 'wac', 'wak', 'wat', 'wap', 'wah', 'wae', 'waeg', 'waegg', 'waegs', 'waen', 'waenj', 'waenh', 'waed', 'wael', 'waelg', 'waelm', 'waelb', 'waels', 'waelt', 'waelp', 'waelh', 'waem', 'waeb', 'waebs', 'waes', 'waess', 'waeng', 'waej', 'waec', 'waek', 'waet', 'waep', 'waeh', 'oe', 'oeg', 'oegg', 'oegs', 'oen', 'oenj', 'oenh', 'oed', 'oel', 'oelg', 'oelm', 'oelb', 'oels', 'oelt', 'oelp', 'oelh', 'oem', 'oeb', 'oebs', 'oes', 'oess', 'oeng', 'oej', 'oec', 'oek', 'oet', 'oep', 'oeh', 'yo', 'yog', 'yogg', 'yogs', 'yon', 'yonj', 'yonh', 'yod', 'yol', 'yolg', 'yolm', 'yolb', 'yols', 'yolt', 'yolp', 'yolh', 'yom', 'yob', 'yobs', 'yos', 'yoss', 'yong', 'yoj', 'yoc', 'yok', 'yot', 'yop', 'yoh', 'u', 'ug', 'ugg', 'ugs', 'un', 'unj', 'unh', 'ud', 'ul', 'ulg', 'ulm', 'ulb', 'uls', 'ult', 'ulp', 'ulh', 'um', 'ub', 'ubs', 'us', 'uss', 'ung', 'uj', 'uc', 'uk', 'ut', 'up', 'uh', 'weo', 'weog', 'weogg', 'weogs', 'weon', 'weonj', 'weonh', 'weod', 'weol', 'weolg', 'weolm', 'weolb', 'weols', 'weolt', 'weolp', 'weolh', 'weom', 'weob', 'weobs', 'weos', 'weoss', 'weong', 'weoj', 'weoc', 'weok', 'weot', 'weop', 'weoh', 'we', 'weg', 'wegg', 'wegs', 'wen', 'wenj', 'wenh', 'wed', 'wel', 'welg', 'welm', 'welb', 'wels', 'welt', 'welp', 'welh', 'wem', 'web', 'webs', 'wes', 'wess', 'weng', 'wej', 'wec'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x095.php\",\"ext\":\"php\",\"size\":2115,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Xiao ', 'Suo ', 'Li ', 'Zheng ', 'Chu ', 'Guo ', 'Gao ', 'Tie ', 'Xiu ', 'Cuo ', 'Lue ', 'Feng ', 'Xin ', 'Liu ', 'Kai ', 'Jian ', 'Rui ', 'Ti ', 'Lang ', 'Qian ', 'Ju ', 'A ', 'Qiang ', 'Duo ', 'Tian ', 'Cuo ', 'Mao ', 'Ben ', 'Qi ', 'De ', 'Kua ', 'Kun ', 'Chang ', 'Xi ', 'Gu ', 'Luo ', 'Chui ', 'Zhui ', 'Jin ', 'Zhi ', 'Xian ', 'Juan ', 'Huo ', 'Pou ', 'Tan ', 'Ding ', 'Jian ', 'Ju ', 'Meng ', 'Zi ', 'Qie ', 'Ying ', 'Kai ', 'Qiang ', 'Song ', 'E ', 'Cha ', 'Qiao ', 'Zhong ', 'Duan ', 'Sou ', 'Huang ', 'Huan ', 'Ai ', 'Du ', 'Mei ', 'Lou ', 'Zi ', 'Fei ', 'Mei ', 'Mo ', 'Zhen ', 'Bo ', 'Ge ', 'Nie ', 'Tang ', 'Juan ', 'Nie ', 'Na ', 'Liu ', 'Hao ', 'Bang ', 'Yi ', 'Jia ', 'Bin ', 'Rong ', 'Biao ', 'Tang ', 'Man ', 'Luo ', 'Beng ', 'Yong ', 'Jing ', 'Di ', 'Zu ', 'Xuan ', 'Liu ', 'Tan ', 'Jue ', 'Liao ', 'Pu ', 'Lu ', 'Dui ', 'Lan ', 'Pu ', 'Cuan ', 'Qiang ', 'Deng ', 'Huo ', 'Lei ', 'Huan ', 'Zhuo ', 'Lian ', 'Yi ', 'Cha ', 'Biao ', 'La ', 'Chan ', 'Xiang ', 'Chang ', 'Chang ', 'Jiu ', 'Ao ', 'Die ', 'Qu ', 'Liao ', 'Mi ', 'Chang ', 'Men ', 'Ma ', 'Shuan ', 'Shan ', 'Huo ', 'Men ', 'Yan ', 'Bi ', 'Han ', 'Bi ', 'San ', 'Kai ', 'Kang ', 'Beng ', 'Hong ', 'Run ', 'San ', 'Xian ', 'Xian ', 'Jian ', 'Min ', 'Xia ', 'Yuru ', 'Dou ', 'Zha ', 'Nao ', 'Jian ', 'Peng ', 'Xia ', 'Ling ', 'Bian ', 'Bi ', 'Run ', 'He ', 'Guan ', 'Ge ', 'Ge ', 'Fa ', 'Chu ', 'Hong ', 'Gui ', 'Min ', 'Se ', 'Kun ', 'Lang ', 'Lu ', 'Ting ', 'Sha ', 'Ju ', 'Yue ', 'Yue ', 'Chan ', 'Qu ', 'Lin ', 'Chang ', 'Shai ', 'Kun ', 'Yan ', 'Min ', 'Yan ', 'E ', 'Hun ', 'Yu ', 'Wen ', 'Xiang ', 'Bao ', 'Xiang ', 'Qu ', 'Yao ', 'Wen ', 'Ban ', 'An ', 'Wei ', 'Yin ', 'Kuo ', 'Que ', 'Lan ', 'Du ', '[?] ', 'Phwung ', 'Tian ', 'Nie ', 'Ta ', 'Kai ', 'He ', 'Que ', 'Chuang ', 'Guan ', 'Dou ', 'Qi ', 'Kui ', 'Tang ', 'Guan ', 'Piao ', 'Kan ', 'Xi ', 'Hui ', 'Chan ', 'Pi ', 'Dang ', 'Huan ', 'Ta ', 'Wen ', '[?] ', 'Men ', 'Shuan ', 'Shan ', 'Yan ', 'Han ', 'Bi ', 'Wen ', 'Chuang ', 'Run ', 'Wei ', 'Xian ', 'Hong ', 'Jian ', 'Min ', 'Kang ', 'Men ', 'Zha ', 'Nao ', 'Gui ', 'Wen ', 'Ta ', 'Min ', 'Lu ', 'Kai '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x012.php\",\"ext\":\"php\",\"size\":1762,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ha', 'hu', 'hi', 'haa', 'hee', 'he', 'ho', '[?]', 'la', 'lu', 'li', 'laa', 'lee', 'le', 'lo', 'lwa', 'hha', 'hhu', 'hhi', 'hhaa', 'hhee', 'hhe', 'hho', 'hhwa', 'ma', 'mu', 'mi', 'maa', 'mee', 'me', 'mo', 'mwa', 'sza', 'szu', 'szi', 'szaa', 'szee', 'sze', 'szo', 'szwa', 'ra', 'ru', 'ri', 'raa', 'ree', 're', 'ro', 'rwa', 'sa', 'su', 'si', 'saa', 'see', 'se', 'so', 'swa', 'sha', 'shu', 'shi', 'shaa', 'shee', 'she', 'sho', 'shwa', 'qa', 'qu', 'qi', 'qaa', 'qee', 'qe', 'qo', '[?]', 'qwa', '[?]', 'qwi', 'qwaa', 'qwee', 'qwe', '[?]', '[?]', 'qha', 'qhu', 'qhi', 'qhaa', 'qhee', 'qhe', 'qho', '[?]', 'qhwa', '[?]', 'qhwi', 'qhwaa', 'qhwee', 'qhwe', '[?]', '[?]', 'ba', 'bu', 'bi', 'baa', 'bee', 'be', 'bo', 'bwa', 'va', 'vu', 'vi', 'vaa', 'vee', 've', 'vo', 'vwa', 'ta', 'tu', 'ti', 'taa', 'tee', 'te', 'to', 'twa', 'ca', 'cu', 'ci', 'caa', 'cee', 'ce', 'co', 'cwa', 'xa', 'xu', 'xi', 'xaa', 'xee', 'xe', 'xo', '[?]', 'xwa', '[?]', 'xwi', 'xwaa', 'xwee', 'xwe', '[?]', '[?]', 'na', 'nu', 'ni', 'naa', 'nee', 'ne', 'no', 'nwa', 'nya', 'nyu', 'nyi', 'nyaa', 'nyee', 'nye', 'nyo', 'nywa', '\\\\'a', '\\\\'u', '[?]', '\\\\'aa', '\\\\'ee', '\\\\'e', '\\\\'o', '\\\\'wa', 'ka', 'ku', 'ki', 'kaa', 'kee', 'ke', 'ko', '[?]', 'kwa', '[?]', 'kwi', 'kwaa', 'kwee', 'kwe', '[?]', '[?]', 'kxa', 'kxu', 'kxi', 'kxaa', 'kxee', 'kxe', 'kxo', '[?]', 'kxwa', '[?]', 'kxwi', 'kxwaa', 'kxwee', 'kxwe', '[?]', '[?]', 'wa', 'wu', 'wi', 'waa', 'wee', 'we', 'wo', '[?]', '`a', '`u', '`i', '`aa', '`ee', '`e', '`o', '[?]', 'za', 'zu', 'zi', 'zaa', 'zee', 'ze', 'zo', 'zwa', 'zha', 'zhu', 'zhi', 'zhaa', 'zhee', 'zhe', 'zho', 'zhwa', 'ya', 'yu', 'yi', 'yaa', 'yee', 'ye', 'yo', '[?]', 'da', 'du', 'di', 'daa', 'dee', 'de', 'do', 'dwa', 'dda', 'ddu', 'ddi', 'ddaa', 'ddee', 'dde', 'ddo', 'ddwa'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x058.php\",\"ext\":\"php\",\"size\":2122,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ku ', 'Ke ', 'Tang ', 'Kun ', 'Ni ', 'Jian ', 'Dui ', 'Jin ', 'Gang ', 'Yu ', 'E ', 'Peng ', 'Gu ', 'Tu ', 'Leng ', '[?] ', 'Ya ', 'Qian ', '[?] ', 'An ', '[?] ', 'Duo ', 'Nao ', 'Tu ', 'Cheng ', 'Yin ', 'Hun ', 'Bi ', 'Lian ', 'Guo ', 'Die ', 'Zhuan ', 'Hou ', 'Bao ', 'Bao ', 'Yu ', 'Di ', 'Mao ', 'Jie ', 'Ruan ', 'E ', 'Geng ', 'Kan ', 'Zong ', 'Yu ', 'Huang ', 'E ', 'Yao ', 'Yan ', 'Bao ', 'Ji ', 'Mei ', 'Chang ', 'Du ', 'Tuo ', 'Yin ', 'Feng ', 'Zhong ', 'Jie ', 'Zhen ', 'Feng ', 'Gang ', 'Chuan ', 'Jian ', 'Pyeng ', 'Toride ', 'Xiang ', 'Huang ', 'Leng ', 'Duan ', '[?] ', 'Xuan ', 'Ji ', 'Ji ', 'Kuai ', 'Ying ', 'Ta ', 'Cheng ', 'Yong ', 'Kai ', 'Su ', 'Su ', 'Shi ', 'Mi ', 'Ta ', 'Weng ', 'Cheng ', 'Tu ', 'Tang ', 'Que ', 'Zhong ', 'Li ', 'Peng ', 'Bang ', 'Sai ', 'Zang ', 'Dui ', 'Tian ', 'Wu ', 'Cheng ', 'Xun ', 'Ge ', 'Zhen ', 'Ai ', 'Gong ', 'Yan ', 'Kan ', 'Tian ', 'Yuan ', 'Wen ', 'Xie ', 'Liu ', 'Ama ', 'Lang ', 'Chang ', 'Peng ', 'Beng ', 'Chen ', 'Cu ', 'Lu ', 'Ou ', 'Qian ', 'Mei ', 'Mo ', 'Zhuan ', 'Shuang ', 'Shu ', 'Lou ', 'Chi ', 'Man ', 'Biao ', 'Jing ', 'Qi ', 'Shu ', 'Di ', 'Zhang ', 'Kan ', 'Yong ', 'Dian ', 'Chen ', 'Zhi ', 'Xi ', 'Guo ', 'Qiang ', 'Jin ', 'Di ', 'Shang ', 'Mu ', 'Cui ', 'Yan ', 'Ta ', 'Zeng ', 'Qi ', 'Qiang ', 'Liang ', '[?] ', 'Zhui ', 'Qiao ', 'Zeng ', 'Xu ', 'Shan ', 'Shan ', 'Ba ', 'Pu ', 'Kuai ', 'Dong ', 'Fan ', 'Que ', 'Mo ', 'Dun ', 'Dun ', 'Dun ', 'Di ', 'Sheng ', 'Duo ', 'Duo ', 'Tan ', 'Deng ', 'Wu ', 'Fen ', 'Huang ', 'Tan ', 'Da ', 'Ye ', 'Sho ', 'Mama ', 'Yu ', 'Qiang ', 'Ji ', 'Qiao ', 'Ken ', 'Yi ', 'Pi ', 'Bi ', 'Dian ', 'Jiang ', 'Ye ', 'Yong ', 'Bo ', 'Tan ', 'Lan ', 'Ju ', 'Huai ', 'Dang ', 'Rang ', 'Qian ', 'Xun ', 'Lan ', 'Xi ', 'He ', 'Ai ', 'Ya ', 'Dao ', 'Hao ', 'Ruan ', 'Mama ', 'Lei ', 'Kuang ', 'Lu ', 'Yan ', 'Tan ', 'Wei ', 'Huai ', 'Long ', 'Long ', 'Rui ', 'Li ', 'Lin ', 'Rang ', 'Ten ', 'Xun ', 'Yan ', 'Lei ', 'Ba ', '[?] ', 'Shi ', 'Ren ', '[?] ', 'Zhuang ', 'Zhuang ', 'Sheng ', 'Yi ', 'Mai ', 'Ke ', 'Zhu ', 'Zhuang ', 'Hu ', 'Hu ', 'Kun ', 'Yi ', 'Hu ', 'Xu ', 'Kun ', 'Shou ', 'Mang ', 'Zun '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x033.php\",\"ext\":\"php\",\"size\":2017,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['apartment', 'alpha', 'ampere', 'are', 'inning', 'inch', 'won', 'escudo', 'acre', 'ounce', 'ohm', 'kai-ri', 'carat', 'calorie', 'gallon', 'gamma', 'giga', 'guinea', 'curie', 'guilder', 'kilo', 'kilogram', 'kilometer', 'kilowatt', 'gram', 'gram ton', 'cruzeiro', 'krone', 'case', 'koruna', 'co-op', 'cycle', 'centime', 'shilling', 'centi', 'cent', 'dozen', 'desi', 'dollar', 'ton', 'nano', 'knot', 'heights', 'percent', 'parts', 'barrel', 'piaster', 'picul', 'pico', 'building', 'farad', 'feet', 'bushel', 'franc', 'hectare', 'peso', 'pfennig', 'hertz', 'pence', 'page', 'beta', 'point', 'volt', 'hon', 'pound', 'hall', 'horn', 'micro', 'mile', 'mach', 'mark', 'mansion', 'micron', 'milli', 'millibar', 'mega', 'megaton', 'meter', 'yard', 'yard', 'yuan', 'liter', 'lira', 'rupee', 'ruble', 'rem', 'roentgen', 'watt', '0h', '1h', '2h', '3h', '4h', '5h', '6h', '7h', '8h', '9h', '10h', '11h', '12h', '13h', '14h', '15h', '16h', '17h', '18h', '19h', '20h', '21h', '22h', '23h', '24h', 'hPa', 'da', 'AU', 'bar', 'oV', 'pc', 'dm', 'dm^2', 'dm^3', 'IU', 'Heisei', 'Syouwa', 'Taisyou', 'Meiji', 'Inc.', 'pA', 'nA', 'microamp', 'mA', 'kA', 'kB', 'MB', 'GB', 'cal', 'kcal', 'pF', 'nF', 'microFarad', 'microgram', 'mg', 'kg', 'Hz', 'kHz', 'MHz', 'GHz', 'THz', 'microliter', 'ml', 'dl', 'kl', 'fm', 'nm', 'micrometer', 'mm', 'cm', 'km', 'mm^2', 'cm^2', 'm^2', 'km^2', 'mm^3', 'cm^3', 'm^3', 'km^3', 'm\/s', 'm\/s^2', 'Pa', 'kPa', 'MPa', 'GPa', 'rad', 'rad\/s', 'rad\/s^2', 'ps', 'ns', 'microsecond', 'ms', 'pV', 'nV', 'microvolt', 'mV', 'kV', 'MV', 'pW', 'nW', 'microwatt', 'mW', 'kW', 'MW', 'kOhm', 'MOhm', 'a.m.', 'Bq', 'cc', 'cd', 'C\/kg', 'Co.', 'dB', 'Gy', 'ha', 'HP', 'in', 'K.K.', 'KM', 'kt', 'lm', 'ln', 'log', 'lx', 'mb', 'mil', 'mol', 'pH', 'p.m.', 'PPM', 'PR', 'sr', 'Sv', 'Wb', '[?]', '[?]', '1d', '2d', '3d', '4d', '5d', '6d', '7d', '8d', '9d', '10d', '11d', '12d', '13d', '14d', '15d', '16d', '17d', '18d', '19d', '20d', '21d', '22d', '23d', '24d', '25d', '26d', '27d', '28d', '29d', '30d', '31d', 'gal'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0ad.php\",\"ext\":\"php\",\"size\":2210,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['gwan', 'gwanj', 'gwanh', 'gwad', 'gwal', 'gwalg', 'gwalm', 'gwalb', 'gwals', 'gwalt', 'gwalp', 'gwalh', 'gwam', 'gwab', 'gwabs', 'gwas', 'gwass', 'gwang', 'gwaj', 'gwac', 'gwak', 'gwat', 'gwap', 'gwah', 'gwae', 'gwaeg', 'gwaegg', 'gwaegs', 'gwaen', 'gwaenj', 'gwaenh', 'gwaed', 'gwael', 'gwaelg', 'gwaelm', 'gwaelb', 'gwaels', 'gwaelt', 'gwaelp', 'gwaelh', 'gwaem', 'gwaeb', 'gwaebs', 'gwaes', 'gwaess', 'gwaeng', 'gwaej', 'gwaec', 'gwaek', 'gwaet', 'gwaep', 'gwaeh', 'goe', 'goeg', 'goegg', 'goegs', 'goen', 'goenj', 'goenh', 'goed', 'goel', 'goelg', 'goelm', 'goelb', 'goels', 'goelt', 'goelp', 'goelh', 'goem', 'goeb', 'goebs', 'goes', 'goess', 'goeng', 'goej', 'goec', 'goek', 'goet', 'goep', 'goeh', 'gyo', 'gyog', 'gyogg', 'gyogs', 'gyon', 'gyonj', 'gyonh', 'gyod', 'gyol', 'gyolg', 'gyolm', 'gyolb', 'gyols', 'gyolt', 'gyolp', 'gyolh', 'gyom', 'gyob', 'gyobs', 'gyos', 'gyoss', 'gyong', 'gyoj', 'gyoc', 'gyok', 'gyot', 'gyop', 'gyoh', 'gu', 'gug', 'gugg', 'gugs', 'gun', 'gunj', 'gunh', 'gud', 'gul', 'gulg', 'gulm', 'gulb', 'guls', 'gult', 'gulp', 'gulh', 'gum', 'gub', 'gubs', 'gus', 'guss', 'gung', 'guj', 'guc', 'guk', 'gut', 'gup', 'guh', 'gweo', 'gweog', 'gweogg', 'gweogs', 'gweon', 'gweonj', 'gweonh', 'gweod', 'gweol', 'gweolg', 'gweolm', 'gweolb', 'gweols', 'gweolt', 'gweolp', 'gweolh', 'gweom', 'gweob', 'gweobs', 'gweos', 'gweoss', 'gweong', 'gweoj', 'gweoc', 'gweok', 'gweot', 'gweop', 'gweoh', 'gwe', 'gweg', 'gwegg', 'gwegs', 'gwen', 'gwenj', 'gwenh', 'gwed', 'gwel', 'gwelg', 'gwelm', 'gwelb', 'gwels', 'gwelt', 'gwelp', 'gwelh', 'gwem', 'gweb', 'gwebs', 'gwes', 'gwess', 'gweng', 'gwej', 'gwec', 'gwek', 'gwet', 'gwep', 'gweh', 'gwi', 'gwig', 'gwigg', 'gwigs', 'gwin', 'gwinj', 'gwinh', 'gwid', 'gwil', 'gwilg', 'gwilm', 'gwilb', 'gwils', 'gwilt', 'gwilp', 'gwilh', 'gwim', 'gwib', 'gwibs', 'gwis', 'gwiss', 'gwing', 'gwij', 'gwic', 'gwik', 'gwit', 'gwip', 'gwih', 'gyu', 'gyug', 'gyugg', 'gyugs', 'gyun', 'gyunj', 'gyunh', 'gyud', 'gyul', 'gyulg', 'gyulm', 'gyulb', 'gyuls', 'gyult', 'gyulp', 'gyulh', 'gyum', 'gyub', 'gyubs', 'gyus', 'gyuss', 'gyung', 'gyuj', 'gyuc', 'gyuk', 'gyut', 'gyup', 'gyuh', 'geu', 'geug', 'geugg', 'geugs', 'geun', 'geunj', 'geunh', 'geud'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x001.php\",\"ext\":\"php\",\"size\":1335,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['A', 'a', 'A', 'a', 'A', 'a', 'C', 'c', 'C', 'c', 'C', 'c', 'C', 'c', 'D', 'd', 'D', 'd', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'G', 'g', 'G', 'g', 'G', 'g', 'G', 'g', 'H', 'h', 'H', 'h', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'IJ', 'ij', 'J', 'j', 'K', 'k', 'k', 'L', 'l', 'L', 'l', 'L', 'l', 'L', 'l', 'L', 'l', 'N', 'n', 'N', 'n', 'N', 'n', '\\\\'n', 'ng', 'NG', 'O', 'o', 'O', 'o', 'O', 'o', 'OE', 'oe', 'R', 'r', 'R', 'r', 'R', 'r', 'S', 's', 'S', 's', 'S', 's', 'S', 's', 'T', 't', 'T', 't', 'T', 't', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'W', 'w', 'Y', 'y', 'Y', 'Z', 'z', 'Z', 'z', 'Z', 'z', 's', 'b', 'B', 'B', 'b', '6', '6', 'O', 'C', 'c', 'D', 'D', 'D', 'd', 'd', '3', '@', 'E', 'F', 'f', 'G', 'G', 'hv', 'I', 'I', 'K', 'k', 'l', 'l', 'W', 'N', 'n', 'O', 'O', 'o', 'OI', 'oi', 'P', 'p', 'YR', '2', '2', 'SH', 'sh', 't', 'T', 't', 'T', 'U', 'u', 'Y', 'V', 'Y', 'y', 'Z', 'z', 'ZH', 'ZH', 'zh', 'zh', '2', '5', '5', 'ts', 'w', '|', '||', '|=', '!', 'DZ', 'Dz', 'dz', 'LJ', 'Lj', 'lj', 'NJ', 'Nj', 'nj', 'A', 'a', 'I', 'i', 'O', 'o', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', '@', 'A', 'a', 'A', 'a', 'AE', 'ae', 'G', 'g', 'G', 'g', 'K', 'k', 'O', 'o', 'O', 'o', 'ZH', 'zh', 'j', 'DZ', 'Dz', 'dz', 'G', 'g', 'HV', 'W', 'N', 'n', 'A', 'a', 'AE', 'ae', 'O', 'o'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x004.php\",\"ext\":\"php\",\"size\":1525,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ie', 'Io', 'Dj', 'Gj', 'Ie', 'Dz', 'I', 'Yi', 'J', 'Lj', 'Nj', 'Tsh', 'Kj', 'I', 'U', 'Dzh', 'A', 'B', 'V', 'G', 'D', 'E', 'Zh', 'Z', 'I', 'I', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F', 'Kh', 'Ts', 'Ch', 'Sh', 'Shch', '\\\\'', 'Y', '\\\\'', 'E', 'Iu', 'Ia', 'a', 'b', 'v', 'g', 'd', 'e', 'zh', 'z', 'i', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f', 'kh', 'ts', 'ch', 'sh', 'shch', '\\\\'', 'y', '\\\\'', 'e', 'iu', 'ia', 'ie', 'io', 'dj', 'gj', 'ie', 'dz', 'i', 'yi', 'j', 'lj', 'nj', 'tsh', 'kj', 'i', 'u', 'dzh', 'O', 'o', 'E', 'e', 'Ie', 'ie', 'E', 'e', 'Ie', 'ie', 'O', 'o', 'Io', 'io', 'Ks', 'ks', 'Ps', 'ps', 'F', 'f', 'Y', 'y', 'Y', 'y', 'u', 'u', 'O', 'o', 'O', 'o', 'Ot', 'ot', 'Q', 'q', '*1000*', '', '', '', '', '[?]', '*100.000*', '*1.000.000*', '[?]', '[?]', '\\\"', '\\\"', 'R\\\\'', 'r\\\\'', 'G\\\\'', 'g\\\\'', 'G\\\\'', 'g\\\\'', 'G\\\\'', 'g\\\\'', 'Zh\\\\'', 'zh\\\\'', 'Z\\\\'', 'z\\\\'', 'K\\\\'', 'k\\\\'', 'K\\\\'', 'k\\\\'', 'K\\\\'', 'k\\\\'', 'K\\\\'', 'k\\\\'', 'N\\\\'', 'n\\\\'', 'Ng', 'ng', 'P\\\\'', 'p\\\\'', 'Kh', 'kh', 'S\\\\'', 's\\\\'', 'T\\\\'', 't\\\\'', 'U', 'u', 'U\\\\'', 'u\\\\'', 'Kh\\\\'', 'kh\\\\'', 'Tts', 'tts', 'Ch\\\\'', 'ch\\\\'', 'Ch\\\\'', 'ch\\\\'', 'H', 'h', 'Ch', 'ch', 'Ch\\\\'', 'ch\\\\'', '`', 'Zh', 'zh', 'K\\\\'', 'k\\\\'', '[?]', '[?]', 'N\\\\'', 'n\\\\'', '[?]', '[?]', 'Ch', 'ch', '[?]', '[?]', '[?]', 'a', 'a', 'A', 'a', 'Ae', 'ae', 'Ie', 'ie', '@', '@', '@', '@', 'Zh', 'zh', 'Z', 'z', 'Dz', 'dz', 'I', 'i', 'I', 'i', 'O', 'o', 'O', 'o', 'O', 'o', 'E', 'e', 'U', 'u', 'U', 'u', 'U', 'u', 'Ch', 'ch', '[?]', '[?]', 'Y', 'y', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0bd.php\",\"ext\":\"php\",\"size\":2196,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['bols', 'bolt', 'bolp', 'bolh', 'bom', 'bob', 'bobs', 'bos', 'boss', 'bong', 'boj', 'boc', 'bok', 'bot', 'bop', 'boh', 'bwa', 'bwag', 'bwagg', 'bwags', 'bwan', 'bwanj', 'bwanh', 'bwad', 'bwal', 'bwalg', 'bwalm', 'bwalb', 'bwals', 'bwalt', 'bwalp', 'bwalh', 'bwam', 'bwab', 'bwabs', 'bwas', 'bwass', 'bwang', 'bwaj', 'bwac', 'bwak', 'bwat', 'bwap', 'bwah', 'bwae', 'bwaeg', 'bwaegg', 'bwaegs', 'bwaen', 'bwaenj', 'bwaenh', 'bwaed', 'bwael', 'bwaelg', 'bwaelm', 'bwaelb', 'bwaels', 'bwaelt', 'bwaelp', 'bwaelh', 'bwaem', 'bwaeb', 'bwaebs', 'bwaes', 'bwaess', 'bwaeng', 'bwaej', 'bwaec', 'bwaek', 'bwaet', 'bwaep', 'bwaeh', 'boe', 'boeg', 'boegg', 'boegs', 'boen', 'boenj', 'boenh', 'boed', 'boel', 'boelg', 'boelm', 'boelb', 'boels', 'boelt', 'boelp', 'boelh', 'boem', 'boeb', 'boebs', 'boes', 'boess', 'boeng', 'boej', 'boec', 'boek', 'boet', 'boep', 'boeh', 'byo', 'byog', 'byogg', 'byogs', 'byon', 'byonj', 'byonh', 'byod', 'byol', 'byolg', 'byolm', 'byolb', 'byols', 'byolt', 'byolp', 'byolh', 'byom', 'byob', 'byobs', 'byos', 'byoss', 'byong', 'byoj', 'byoc', 'byok', 'byot', 'byop', 'byoh', 'bu', 'bug', 'bugg', 'bugs', 'bun', 'bunj', 'bunh', 'bud', 'bul', 'bulg', 'bulm', 'bulb', 'buls', 'bult', 'bulp', 'bulh', 'bum', 'bub', 'bubs', 'bus', 'buss', 'bung', 'buj', 'buc', 'buk', 'but', 'bup', 'buh', 'bweo', 'bweog', 'bweogg', 'bweogs', 'bweon', 'bweonj', 'bweonh', 'bweod', 'bweol', 'bweolg', 'bweolm', 'bweolb', 'bweols', 'bweolt', 'bweolp', 'bweolh', 'bweom', 'bweob', 'bweobs', 'bweos', 'bweoss', 'bweong', 'bweoj', 'bweoc', 'bweok', 'bweot', 'bweop', 'bweoh', 'bwe', 'bweg', 'bwegg', 'bwegs', 'bwen', 'bwenj', 'bwenh', 'bwed', 'bwel', 'bwelg', 'bwelm', 'bwelb', 'bwels', 'bwelt', 'bwelp', 'bwelh', 'bwem', 'bweb', 'bwebs', 'bwes', 'bwess', 'bweng', 'bwej', 'bwec', 'bwek', 'bwet', 'bwep', 'bweh', 'bwi', 'bwig', 'bwigg', 'bwigs', 'bwin', 'bwinj', 'bwinh', 'bwid', 'bwil', 'bwilg', 'bwilm', 'bwilb', 'bwils', 'bwilt', 'bwilp', 'bwilh', 'bwim', 'bwib', 'bwibs', 'bwis', 'bwiss', 'bwing', 'bwij', 'bwic', 'bwik', 'bwit', 'bwip', 'bwih', 'byu', 'byug', 'byugg', 'byugs', 'byun', 'byunj', 'byunh', 'byud', 'byul', 'byulg', 'byulm', 'byulb', 'byuls', 'byult', 'byulp', 'byulh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x04d.php\",\"ext\":\"php\",\"size\":1982,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?] ', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x060.php\",\"ext\":\"php\",\"size\":2086,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Huai ', 'Tai ', 'Song ', 'Wu ', 'Ou ', 'Chang ', 'Chuang ', 'Ju ', 'Yi ', 'Bao ', 'Chao ', 'Min ', 'Pei ', 'Zuo ', 'Zen ', 'Yang ', 'Kou ', 'Ban ', 'Nu ', 'Nao ', 'Zheng ', 'Pa ', 'Bu ', 'Tie ', 'Gu ', 'Hu ', 'Ju ', 'Da ', 'Lian ', 'Si ', 'Chou ', 'Di ', 'Dai ', 'Yi ', 'Tu ', 'You ', 'Fu ', 'Ji ', 'Peng ', 'Xing ', 'Yuan ', 'Ni ', 'Guai ', 'Fu ', 'Xi ', 'Bi ', 'You ', 'Qie ', 'Xuan ', 'Cong ', 'Bing ', 'Huang ', 'Xu ', 'Chu ', 'Pi ', 'Xi ', 'Xi ', 'Tan ', 'Koraeru ', 'Zong ', 'Dui ', '[?] ', 'Ki ', 'Yi ', 'Chi ', 'Ren ', 'Xun ', 'Shi ', 'Xi ', 'Lao ', 'Heng ', 'Kuang ', 'Mu ', 'Zhi ', 'Xie ', 'Lian ', 'Tiao ', 'Huang ', 'Die ', 'Hao ', 'Kong ', 'Gui ', 'Heng ', 'Xi ', 'Xiao ', 'Shu ', 'S ', 'Kua ', 'Qiu ', 'Yang ', 'Hui ', 'Hui ', 'Chi ', 'Jia ', 'Yi ', 'Xiong ', 'Guai ', 'Lin ', 'Hui ', 'Zi ', 'Xu ', 'Chi ', 'Xiang ', 'Nu ', 'Hen ', 'En ', 'Ke ', 'Tong ', 'Tian ', 'Gong ', 'Quan ', 'Xi ', 'Qia ', 'Yue ', 'Peng ', 'Ken ', 'De ', 'Hui ', 'E ', 'Kyuu ', 'Tong ', 'Yan ', 'Kai ', 'Ce ', 'Nao ', 'Yun ', 'Mang ', 'Yong ', 'Yong ', 'Yuan ', 'Pi ', 'Kun ', 'Qiao ', 'Yue ', 'Yu ', 'Yu ', 'Jie ', 'Xi ', 'Zhe ', 'Lin ', 'Ti ', 'Han ', 'Hao ', 'Qie ', 'Ti ', 'Bu ', 'Yi ', 'Qian ', 'Hui ', 'Xi ', 'Bei ', 'Man ', 'Yi ', 'Heng ', 'Song ', 'Quan ', 'Cheng ', 'Hui ', 'Wu ', 'Wu ', 'You ', 'Li ', 'Liang ', 'Huan ', 'Cong ', 'Yi ', 'Yue ', 'Li ', 'Nin ', 'Nao ', 'E ', 'Que ', 'Xuan ', 'Qian ', 'Wu ', 'Min ', 'Cong ', 'Fei ', 'Bei ', 'Duo ', 'Cui ', 'Chang ', 'Men ', 'Li ', 'Ji ', 'Guan ', 'Guan ', 'Xing ', 'Dao ', 'Qi ', 'Kong ', 'Tian ', 'Lun ', 'Xi ', 'Kan ', 'Kun ', 'Ni ', 'Qing ', 'Chou ', 'Dun ', 'Guo ', 'Chan ', 'Liang ', 'Wan ', 'Yuan ', 'Jin ', 'Ji ', 'Lin ', 'Yu ', 'Huo ', 'He ', 'Quan ', 'Tan ', 'Ti ', 'Ti ', 'Nie ', 'Wang ', 'Chuo ', 'Bu ', 'Hun ', 'Xi ', 'Tang ', 'Xin ', 'Wei ', 'Hui ', 'E ', 'Rui ', 'Zong ', 'Jian ', 'Yong ', 'Dian ', 'Ju ', 'Can ', 'Cheng ', 'De ', 'Bei ', 'Qie ', 'Can ', 'Dan ', 'Guan ', 'Duo ', 'Nao ', 'Yun ', 'Xiang ', 'Zhui ', 'Die ', 'Huang ', 'Chun ', 'Qiong ', 'Re ', 'Xing ', 'Ce ', 'Bian ', 'Hun ', 'Zong ', 'Ti '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0fa.php\",\"ext\":\"php\",\"size\":1860,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Chey ', 'Thak ', 'Thak ', 'Thang ', 'Thayk ', 'Thong ', 'Pho ', 'Phok ', 'Hang ', 'Hang ', 'Hyen ', 'Hwak ', 'Wu ', 'Huo ', '[?] ', '[?] ', 'Zhong ', '[?] ', 'Qing ', '[?] ', '[?] ', 'Xi ', 'Zhu ', 'Yi ', 'Li ', 'Shen ', 'Xiang ', 'Fu ', 'Jing ', 'Jing ', 'Yu ', '[?] ', 'Hagi ', '[?] ', 'Zhu ', '[?] ', '[?] ', 'Yi ', 'Du ', '[?] ', '[?] ', '[?] ', 'Fan ', 'Si ', 'Guan ', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x063.php\",\"ext\":\"php\",\"size\":2100,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Bo ', 'Chi ', 'Gua ', 'Zhi ', 'Kuo ', 'Duo ', 'Duo ', 'Zhi ', 'Qie ', 'An ', 'Nong ', 'Zhen ', 'Ge ', 'Jiao ', 'Ku ', 'Dong ', 'Ru ', 'Tiao ', 'Lie ', 'Zha ', 'Lu ', 'Die ', 'Wa ', 'Jue ', 'Mushiru ', 'Ju ', 'Zhi ', 'Luan ', 'Ya ', 'Zhua ', 'Ta ', 'Xie ', 'Nao ', 'Dang ', 'Jiao ', 'Zheng ', 'Ji ', 'Hui ', 'Xun ', 'Ku ', 'Ai ', 'Tuo ', 'Nuo ', 'Cuo ', 'Bo ', 'Geng ', 'Ti ', 'Zhen ', 'Cheng ', 'Suo ', 'Suo ', 'Keng ', 'Mei ', 'Long ', 'Ju ', 'Peng ', 'Jian ', 'Yi ', 'Ting ', 'Shan ', 'Nuo ', 'Wan ', 'Xie ', 'Cha ', 'Feng ', 'Jiao ', 'Wu ', 'Jun ', 'Jiu ', 'Tong ', 'Kun ', 'Huo ', 'Tu ', 'Zhuo ', 'Pou ', 'Le ', 'Ba ', 'Han ', 'Shao ', 'Nie ', 'Juan ', 'Ze ', 'Song ', 'Ye ', 'Jue ', 'Bu ', 'Huan ', 'Bu ', 'Zun ', 'Yi ', 'Zhai ', 'Lu ', 'Sou ', 'Tuo ', 'Lao ', 'Sun ', 'Bang ', 'Jian ', 'Huan ', 'Dao ', '[?] ', 'Wan ', 'Qin ', 'Peng ', 'She ', 'Lie ', 'Min ', 'Men ', 'Fu ', 'Bai ', 'Ju ', 'Dao ', 'Wo ', 'Ai ', 'Juan ', 'Yue ', 'Zong ', 'Chen ', 'Chui ', 'Jie ', 'Tu ', 'Ben ', 'Na ', 'Nian ', 'Nuo ', 'Zu ', 'Wo ', 'Xi ', 'Xian ', 'Cheng ', 'Dian ', 'Sao ', 'Lun ', 'Qing ', 'Gang ', 'Duo ', 'Shou ', 'Diao ', 'Pou ', 'Di ', 'Zhang ', 'Gun ', 'Ji ', 'Tao ', 'Qia ', 'Qi ', 'Pai ', 'Shu ', 'Qian ', 'Ling ', 'Yi ', 'Ya ', 'Jue ', 'Zheng ', 'Liang ', 'Gua ', 'Yi ', 'Huo ', 'Shan ', 'Zheng ', 'Lue ', 'Cai ', 'Tan ', 'Che ', 'Bing ', 'Jie ', 'Ti ', 'Kong ', 'Tui ', 'Yan ', 'Cuo ', 'Zou ', 'Ju ', 'Tian ', 'Qian ', 'Ken ', 'Bai ', 'Shou ', 'Jie ', 'Lu ', 'Guo ', 'Haba ', '[?] ', 'Zhi ', 'Dan ', 'Mang ', 'Xian ', 'Sao ', 'Guan ', 'Peng ', 'Yuan ', 'Nuo ', 'Jian ', 'Zhen ', 'Jiu ', 'Jian ', 'Yu ', 'Yan ', 'Kui ', 'Nan ', 'Hong ', 'Rou ', 'Pi ', 'Wei ', 'Sai ', 'Zou ', 'Xuan ', 'Miao ', 'Ti ', 'Nie ', 'Cha ', 'Shi ', 'Zong ', 'Zhen ', 'Yi ', 'Shun ', 'Heng ', 'Bian ', 'Yang ', 'Huan ', 'Yan ', 'Zuan ', 'An ', 'Xu ', 'Ya ', 'Wo ', 'Ke ', 'Chuai ', 'Ji ', 'Ti ', 'La ', 'La ', 'Cheng ', 'Kai ', 'Jiu ', 'Jiu ', 'Tu ', 'Jie ', 'Hui ', 'Geng ', 'Chong ', 'Shuo ', 'She ', 'Xie ', 'Yuan ', 'Qian ', 'Ye ', 'Cha ', 'Zha ', 'Bei ', 'Yao ', '[?] ', '[?] ', 'Lan ', 'Wen ', 'Qin '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x09b.php\",\"ext\":\"php\",\"size\":2099,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ti ', 'Li ', 'Bin ', 'Zong ', 'Ti ', 'Peng ', 'Song ', 'Zheng ', 'Quan ', 'Zong ', 'Shun ', 'Jian ', 'Duo ', 'Hu ', 'La ', 'Jiu ', 'Qi ', 'Lian ', 'Zhen ', 'Bin ', 'Peng ', 'Mo ', 'San ', 'Man ', 'Man ', 'Seng ', 'Xu ', 'Lie ', 'Qian ', 'Qian ', 'Nong ', 'Huan ', 'Kuai ', 'Ning ', 'Bin ', 'Lie ', 'Rang ', 'Dou ', 'Dou ', 'Nao ', 'Hong ', 'Xi ', 'Dou ', 'Han ', 'Dou ', 'Dou ', 'Jiu ', 'Chang ', 'Yu ', 'Yu ', 'Li ', 'Juan ', 'Fu ', 'Qian ', 'Gui ', 'Zong ', 'Liu ', 'Gui ', 'Shang ', 'Yu ', 'Gui ', 'Mei ', 'Ji ', 'Qi ', 'Jie ', 'Kui ', 'Hun ', 'Ba ', 'Po ', 'Mei ', 'Xu ', 'Yan ', 'Xiao ', 'Liang ', 'Yu ', 'Tui ', 'Qi ', 'Wang ', 'Liang ', 'Wei ', 'Jian ', 'Chi ', 'Piao ', 'Bi ', 'Mo ', 'Ji ', 'Xu ', 'Chou ', 'Yan ', 'Zhan ', 'Yu ', 'Dao ', 'Ren ', 'Ji ', 'Eri ', 'Gong ', 'Tuo ', 'Diao ', 'Ji ', 'Xu ', 'E ', 'E ', 'Sha ', 'Hang ', 'Tun ', 'Mo ', 'Jie ', 'Shen ', 'Fan ', 'Yuan ', 'Bi ', 'Lu ', 'Wen ', 'Hu ', 'Lu ', 'Za ', 'Fang ', 'Fen ', 'Na ', 'You ', 'Namazu ', 'Todo ', 'He ', 'Xia ', 'Qu ', 'Han ', 'Pi ', 'Ling ', 'Tuo ', 'Bo ', 'Qiu ', 'Ping ', 'Fu ', 'Bi ', 'Ji ', 'Wei ', 'Ju ', 'Diao ', 'Bo ', 'You ', 'Gun ', 'Pi ', 'Nian ', 'Xing ', 'Tai ', 'Bao ', 'Fu ', 'Zha ', 'Ju ', 'Gu ', 'Kajika ', 'Tong ', '[?] ', 'Ta ', 'Jie ', 'Shu ', 'Hou ', 'Xiang ', 'Er ', 'An ', 'Wei ', 'Tiao ', 'Zhu ', 'Yin ', 'Lie ', 'Luo ', 'Tong ', 'Yi ', 'Qi ', 'Bing ', 'Wei ', 'Jiao ', 'Bu ', 'Gui ', 'Xian ', 'Ge ', 'Hui ', 'Bora ', 'Mate ', 'Kao ', 'Gori ', 'Duo ', 'Jun ', 'Ti ', 'Man ', 'Xiao ', 'Za ', 'Sha ', 'Qin ', 'Yu ', 'Nei ', 'Zhe ', 'Gun ', 'Geng ', 'Su ', 'Wu ', 'Qiu ', 'Ting ', 'Fu ', 'Wan ', 'You ', 'Li ', 'Sha ', 'Sha ', 'Gao ', 'Meng ', 'Ugui ', 'Asari ', 'Subashiri ', 'Kazunoko ', 'Yong ', 'Ni ', 'Zi ', 'Qi ', 'Qing ', 'Xiang ', 'Nei ', 'Chun ', 'Ji ', 'Diao ', 'Qie ', 'Gu ', 'Zhou ', 'Dong ', 'Lai ', 'Fei ', 'Ni ', 'Yi ', 'Kun ', 'Lu ', 'Jiu ', 'Chang ', 'Jing ', 'Lun ', 'Ling ', 'Zou ', 'Li ', 'Meng ', 'Zong ', 'Zhi ', 'Nian ', 'Shachi ', 'Dojou ', 'Sukesou ', 'Shi ', 'Shen ', 'Hun ', 'Shi ', 'Hou ', 'Xing ', 'Zhu ', 'La ', 'Zong ', 'Ji ', 'Bian ', 'Bian '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x051.php\",\"ext\":\"php\",\"size\":2129,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yi ', 'Jun ', 'Nong ', 'Chan ', 'Yi ', 'Dang ', 'Jing ', 'Xuan ', 'Kuai ', 'Jian ', 'Chu ', 'Dan ', 'Jiao ', 'Sha ', 'Zai ', '[?] ', 'Bin ', 'An ', 'Ru ', 'Tai ', 'Chou ', 'Chai ', 'Lan ', 'Ni ', 'Jin ', 'Qian ', 'Meng ', 'Wu ', 'Ning ', 'Qiong ', 'Ni ', 'Chang ', 'Lie ', 'Lei ', 'Lu ', 'Kuang ', 'Bao ', 'Du ', 'Biao ', 'Zan ', 'Zhi ', 'Si ', 'You ', 'Hao ', 'Chen ', 'Chen ', 'Li ', 'Teng ', 'Wei ', 'Long ', 'Chu ', 'Chan ', 'Rang ', 'Shu ', 'Hui ', 'Li ', 'Luo ', 'Zan ', 'Nuo ', 'Tang ', 'Yan ', 'Lei ', 'Nang ', 'Er ', 'Wu ', 'Yun ', 'Zan ', 'Yuan ', 'Xiong ', 'Chong ', 'Zhao ', 'Xiong ', 'Xian ', 'Guang ', 'Dui ', 'Ke ', 'Dui ', 'Mian ', 'Tu ', 'Chang ', 'Er ', 'Dui ', 'Er ', 'Xin ', 'Tu ', 'Si ', 'Yan ', 'Yan ', 'Shi ', 'Shi ', 'Dang ', 'Qian ', 'Dou ', 'Fen ', 'Mao ', 'Shen ', 'Dou ', 'Bai ', 'Jing ', 'Li ', 'Huang ', 'Ru ', 'Wang ', 'Nei ', 'Quan ', 'Liang ', 'Yu ', 'Ba ', 'Gong ', 'Liu ', 'Xi ', '[?] ', 'Lan ', 'Gong ', 'Tian ', 'Guan ', 'Xing ', 'Bing ', 'Qi ', 'Ju ', 'Dian ', 'Zi ', 'Ppwun ', 'Yang ', 'Jian ', 'Shou ', 'Ji ', 'Yi ', 'Ji ', 'Chan ', 'Jiong ', 'Mao ', 'Ran ', 'Nei ', 'Yuan ', 'Mao ', 'Gang ', 'Ran ', 'Ce ', 'Jiong ', 'Ce ', 'Zai ', 'Gua ', 'Jiong ', 'Mao ', 'Zhou ', 'Mou ', 'Gou ', 'Xu ', 'Mian ', 'Mi ', 'Rong ', 'Yin ', 'Xie ', 'Kan ', 'Jun ', 'Nong ', 'Yi ', 'Mi ', 'Shi ', 'Guan ', 'Meng ', 'Zhong ', 'Ju ', 'Yuan ', 'Ming ', 'Kou ', 'Lam ', 'Fu ', 'Xie ', 'Mi ', 'Bing ', 'Dong ', 'Tai ', 'Gang ', 'Feng ', 'Bing ', 'Hu ', 'Chong ', 'Jue ', 'Hu ', 'Kuang ', 'Ye ', 'Leng ', 'Pan ', 'Fu ', 'Min ', 'Dong ', 'Xian ', 'Lie ', 'Xia ', 'Jian ', 'Jing ', 'Shu ', 'Mei ', 'Tu ', 'Qi ', 'Gu ', 'Zhun ', 'Song ', 'Jing ', 'Liang ', 'Qing ', 'Diao ', 'Ling ', 'Dong ', 'Gan ', 'Jian ', 'Yin ', 'Cou ', 'Yi ', 'Li ', 'Cang ', 'Ming ', 'Zhuen ', 'Cui ', 'Si ', 'Duo ', 'Jin ', 'Lin ', 'Lin ', 'Ning ', 'Xi ', 'Du ', 'Ji ', 'Fan ', 'Fan ', 'Fan ', 'Feng ', 'Ju ', 'Chu ', 'Tako ', 'Feng ', 'Mok ', 'Ci ', 'Fu ', 'Feng ', 'Ping ', 'Feng ', 'Kai ', 'Huang ', 'Kai ', 'Gan ', 'Deng ', 'Ping ', 'Qu ', 'Xiong ', 'Kuai ', 'Tu ', 'Ao ', 'Chu ', 'Ji ', 'Dang ', 'Han ', 'Han ', 'Zao '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x014.php\",\"ext\":\"php\",\"size\":1744,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', 'e', 'aai', 'i', 'ii', 'o', 'oo', 'oo', 'ee', 'i', 'a', 'aa', 'we', 'we', 'wi', 'wi', 'wii', 'wii', 'wo', 'wo', 'woo', 'woo', 'woo', 'wa', 'wa', 'waa', 'waa', 'waa', 'ai', 'w', '\\\\'', 't', 'k', 'sh', 's', 'n', 'w', 'n', '[?]', 'w', 'c', '?', 'l', 'en', 'in', 'on', 'an', 'pe', 'paai', 'pi', 'pii', 'po', 'poo', 'poo', 'hee', 'hi', 'pa', 'paa', 'pwe', 'pwe', 'pwi', 'pwi', 'pwii', 'pwii', 'pwo', 'pwo', 'pwoo', 'pwoo', 'pwa', 'pwa', 'pwaa', 'pwaa', 'pwaa', 'p', 'p', 'h', 'te', 'taai', 'ti', 'tii', 'to', 'too', 'too', 'dee', 'di', 'ta', 'taa', 'twe', 'twe', 'twi', 'twi', 'twii', 'twii', 'two', 'two', 'twoo', 'twoo', 'twa', 'twa', 'twaa', 'twaa', 'twaa', 't', 'tte', 'tti', 'tto', 'tta', 'ke', 'kaai', 'ki', 'kii', 'ko', 'koo', 'koo', 'ka', 'kaa', 'kwe', 'kwe', 'kwi', 'kwi', 'kwii', 'kwii', 'kwo', 'kwo', 'kwoo', 'kwoo', 'kwa', 'kwa', 'kwaa', 'kwaa', 'kwaa', 'k', 'kw', 'keh', 'kih', 'koh', 'kah', 'ce', 'caai', 'ci', 'cii', 'co', 'coo', 'coo', 'ca', 'caa', 'cwe', 'cwe', 'cwi', 'cwi', 'cwii', 'cwii', 'cwo', 'cwo', 'cwoo', 'cwoo', 'cwa', 'cwa', 'cwaa', 'cwaa', 'cwaa', 'c', 'th', 'me', 'maai', 'mi', 'mii', 'mo', 'moo', 'moo', 'ma', 'maa', 'mwe', 'mwe', 'mwi', 'mwi', 'mwii', 'mwii', 'mwo', 'mwo', 'mwoo', 'mwoo', 'mwa', 'mwa', 'mwaa', 'mwaa', 'mwaa', 'm', 'm', 'mh', 'm', 'm', 'ne', 'naai', 'ni', 'nii', 'no', 'noo', 'noo', 'na', 'naa', 'nwe', 'nwe', 'nwa', 'nwa', 'nwaa', 'nwaa', 'nwaa', 'n', 'ng', 'nh', 'le', 'laai', 'li', 'lii', 'lo', 'loo', 'loo', 'la', 'laa', 'lwe', 'lwe', 'lwi', 'lwi', 'lwii', 'lwii', 'lwo', 'lwo', 'lwoo', 'lwoo', 'lwa', 'lwa', 'lwaa', 'lwaa', 'l', 'l', 'l', 'se', 'saai', 'si', 'sii', 'so', 'soo', 'soo', 'sa', 'saa', 'swe', 'swe', 'swi', 'swi', 'swii', 'swii', 'swo', 'swo', 'swoo', 'swoo'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x05c.php\",\"ext\":\"php\",\"size\":2056,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Po ', 'Feng ', 'Zhuan ', 'Fu ', 'She ', 'Ke ', 'Jiang ', 'Jiang ', 'Zhuan ', 'Wei ', 'Zun ', 'Xun ', 'Shu ', 'Dui ', 'Dao ', 'Xiao ', 'Ji ', 'Shao ', 'Er ', 'Er ', 'Er ', 'Ga ', 'Jian ', 'Shu ', 'Chen ', 'Shang ', 'Shang ', 'Mo ', 'Ga ', 'Chang ', 'Liao ', 'Xian ', 'Xian ', '[?] ', 'Wang ', 'Wang ', 'You ', 'Liao ', 'Liao ', 'Yao ', 'Mang ', 'Wang ', 'Wang ', 'Wang ', 'Ga ', 'Yao ', 'Duo ', 'Kui ', 'Zhong ', 'Jiu ', 'Gan ', 'Gu ', 'Gan ', 'Tui ', 'Gan ', 'Gan ', 'Shi ', 'Yin ', 'Chi ', 'Kao ', 'Ni ', 'Jin ', 'Wei ', 'Niao ', 'Ju ', 'Pi ', 'Ceng ', 'Xi ', 'Bi ', 'Ju ', 'Jie ', 'Tian ', 'Qu ', 'Ti ', 'Jie ', 'Wu ', 'Diao ', 'Shi ', 'Shi ', 'Ping ', 'Ji ', 'Xie ', 'Chen ', 'Xi ', 'Ni ', 'Zhan ', 'Xi ', '[?] ', 'Man ', 'E ', 'Lou ', 'Ping ', 'Ti ', 'Fei ', 'Shu ', 'Xie ', 'Tu ', 'Lu ', 'Lu ', 'Xi ', 'Ceng ', 'Lu ', 'Ju ', 'Xie ', 'Ju ', 'Jue ', 'Liao ', 'Jue ', 'Shu ', 'Xi ', 'Che ', 'Tun ', 'Ni ', 'Shan ', '[?] ', 'Xian ', 'Li ', 'Xue ', 'Nata ', '[?] ', 'Long ', 'Yi ', 'Qi ', 'Ren ', 'Wu ', 'Han ', 'Shen ', 'Yu ', 'Chu ', 'Sui ', 'Qi ', '[?] ', 'Yue ', 'Ban ', 'Yao ', 'Ang ', 'Ya ', 'Wu ', 'Jie ', 'E ', 'Ji ', 'Qian ', 'Fen ', 'Yuan ', 'Qi ', 'Cen ', 'Qian ', 'Qi ', 'Cha ', 'Jie ', 'Qu ', 'Gang ', 'Xian ', 'Ao ', 'Lan ', 'Dao ', 'Ba ', 'Zuo ', 'Zuo ', 'Yang ', 'Ju ', 'Gang ', 'Ke ', 'Gou ', 'Xue ', 'Bei ', 'Li ', 'Tiao ', 'Ju ', 'Yan ', 'Fu ', 'Xiu ', 'Jia ', 'Ling ', 'Tuo ', 'Pei ', 'You ', 'Dai ', 'Kuang ', 'Yue ', 'Qu ', 'Hu ', 'Po ', 'Min ', 'An ', 'Tiao ', 'Ling ', 'Chi ', 'Yuri ', 'Dong ', 'Cem ', 'Kui ', 'Xiu ', 'Mao ', 'Tong ', 'Xue ', 'Yi ', 'Kura ', 'He ', 'Ke ', 'Luo ', 'E ', 'Fu ', 'Xun ', 'Die ', 'Lu ', 'An ', 'Er ', 'Gai ', 'Quan ', 'Tong ', 'Yi ', 'Mu ', 'Shi ', 'An ', 'Wei ', 'Hu ', 'Zhi ', 'Mi ', 'Li ', 'Ji ', 'Tong ', 'Wei ', 'You ', 'Sang ', 'Xia ', 'Li ', 'Yao ', 'Jiao ', 'Zheng ', 'Luan ', 'Jiao ', 'E ', 'E ', 'Yu ', 'Ye ', 'Bu ', 'Qiao ', 'Qun ', 'Feng ', 'Feng ', 'Nao ', 'Li ', 'You ', 'Xian ', 'Hong ', 'Dao ', 'Shen ', 'Cheng ', 'Tu ', 'Geng ', 'Jun ', 'Hao ', 'Xia ', 'Yin ', 'Yu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x082.php\",\"ext\":\"php\",\"size\":2093,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yao ', 'Yu ', 'Chong ', 'Xi ', 'Xi ', 'Jiu ', 'Yu ', 'Yu ', 'Xing ', 'Ju ', 'Jiu ', 'Xin ', 'She ', 'She ', 'Yadoru ', 'Jiu ', 'Shi ', 'Tan ', 'Shu ', 'Shi ', 'Tian ', 'Dan ', 'Pu ', 'Pu ', 'Guan ', 'Hua ', 'Tan ', 'Chuan ', 'Shun ', 'Xia ', 'Wu ', 'Zhou ', 'Dao ', 'Gang ', 'Shan ', 'Yi ', '[?] ', 'Pa ', 'Tai ', 'Fan ', 'Ban ', 'Chuan ', 'Hang ', 'Fang ', 'Ban ', 'Que ', 'Hesaki ', 'Zhong ', 'Jian ', 'Cang ', 'Ling ', 'Zhu ', 'Ze ', 'Duo ', 'Bo ', 'Xian ', 'Ge ', 'Chuan ', 'Jia ', 'Lu ', 'Hong ', 'Pang ', 'Xi ', '[?] ', 'Fu ', 'Zao ', 'Feng ', 'Li ', 'Shao ', 'Yu ', 'Lang ', 'Ting ', '[?] ', 'Wei ', 'Bo ', 'Meng ', 'Nian ', 'Ju ', 'Huang ', 'Shou ', 'Zong ', 'Bian ', 'Mao ', 'Die ', '[?] ', 'Bang ', 'Cha ', 'Yi ', 'Sao ', 'Cang ', 'Cao ', 'Lou ', 'Dai ', 'Sori ', 'Yao ', 'Tong ', 'Yofune ', 'Dang ', 'Tan ', 'Lu ', 'Yi ', 'Jie ', 'Jian ', 'Huo ', 'Meng ', 'Qi ', 'Lu ', 'Lu ', 'Chan ', 'Shuang ', 'Gen ', 'Liang ', 'Jian ', 'Jian ', 'Se ', 'Yan ', 'Fu ', 'Ping ', 'Yan ', 'Yan ', 'Cao ', 'Cao ', 'Yi ', 'Le ', 'Ting ', 'Qiu ', 'Ai ', 'Nai ', 'Tiao ', 'Jiao ', 'Jie ', 'Peng ', 'Wan ', 'Yi ', 'Chai ', 'Mian ', 'Mie ', 'Gan ', 'Qian ', 'Yu ', 'Yu ', 'Shuo ', 'Qiong ', 'Tu ', 'Xia ', 'Qi ', 'Mang ', 'Zi ', 'Hui ', 'Sui ', 'Zhi ', 'Xiang ', 'Bi ', 'Fu ', 'Tun ', 'Wei ', 'Wu ', 'Zhi ', 'Qi ', 'Shan ', 'Wen ', 'Qian ', 'Ren ', 'Fou ', 'Kou ', 'Jie ', 'Lu ', 'Xu ', 'Ji ', 'Qin ', 'Qi ', 'Yuan ', 'Fen ', 'Ba ', 'Rui ', 'Xin ', 'Ji ', 'Hua ', 'Hua ', 'Fang ', 'Wu ', 'Jue ', 'Gou ', 'Zhi ', 'Yun ', 'Qin ', 'Ao ', 'Chu ', 'Mao ', 'Ya ', 'Fei ', 'Reng ', 'Hang ', 'Cong ', 'Yin ', 'You ', 'Bian ', 'Yi ', 'Susa ', 'Wei ', 'Li ', 'Pi ', 'E ', 'Xian ', 'Chang ', 'Cang ', 'Meng ', 'Su ', 'Yi ', 'Yuan ', 'Ran ', 'Ling ', 'Tai ', 'Tiao ', 'Di ', 'Miao ', 'Qiong ', 'Li ', 'Yong ', 'Ke ', 'Mu ', 'Pei ', 'Bao ', 'Gou ', 'Min ', 'Yi ', 'Yi ', 'Ju ', 'Pi ', 'Ruo ', 'Ku ', 'Zhu ', 'Ni ', 'Bo ', 'Bing ', 'Shan ', 'Qiu ', 'Yao ', 'Xian ', 'Ben ', 'Hong ', 'Ying ', 'Zha ', 'Dong ', 'Ju ', 'Die ', 'Nie ', 'Gan ', 'Hu ', 'Ping ', 'Mei ', 'Fu ', 'Sheng ', 'Gu ', 'Bi ', 'Wei '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x065.php\",\"ext\":\"php\",\"size\":2082,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Pan ', 'Yang ', 'Lei ', 'Sa ', 'Shu ', 'Zan ', 'Nian ', 'Xian ', 'Jun ', 'Huo ', 'Li ', 'La ', 'Han ', 'Ying ', 'Lu ', 'Long ', 'Qian ', 'Qian ', 'Zan ', 'Qian ', 'Lan ', 'San ', 'Ying ', 'Mei ', 'Rang ', 'Chan ', '[?] ', 'Cuan ', 'Xi ', 'She ', 'Luo ', 'Jun ', 'Mi ', 'Li ', 'Zan ', 'Luan ', 'Tan ', 'Zuan ', 'Li ', 'Dian ', 'Wa ', 'Dang ', 'Jiao ', 'Jue ', 'Lan ', 'Li ', 'Nang ', 'Zhi ', 'Gui ', 'Gui ', 'Qi ', 'Xin ', 'Pu ', 'Sui ', 'Shou ', 'Kao ', 'You ', 'Gai ', 'Yi ', 'Gong ', 'Gan ', 'Ban ', 'Fang ', 'Zheng ', 'Bo ', 'Dian ', 'Kou ', 'Min ', 'Wu ', 'Gu ', 'He ', 'Ce ', 'Xiao ', 'Mi ', 'Chu ', 'Ge ', 'Di ', 'Xu ', 'Jiao ', 'Min ', 'Chen ', 'Jiu ', 'Zhen ', 'Duo ', 'Yu ', 'Chi ', 'Ao ', 'Bai ', 'Xu ', 'Jiao ', 'Duo ', 'Lian ', 'Nie ', 'Bi ', 'Chang ', 'Dian ', 'Duo ', 'Yi ', 'Gan ', 'San ', 'Ke ', 'Yan ', 'Dun ', 'Qi ', 'Dou ', 'Xiao ', 'Duo ', 'Jiao ', 'Jing ', 'Yang ', 'Xia ', 'Min ', 'Shu ', 'Ai ', 'Qiao ', 'Ai ', 'Zheng ', 'Di ', 'Zhen ', 'Fu ', 'Shu ', 'Liao ', 'Qu ', 'Xiong ', 'Xi ', 'Jiao ', 'Sen ', 'Jiao ', 'Zhuo ', 'Yi ', 'Lian ', 'Bi ', 'Li ', 'Xiao ', 'Xiao ', 'Wen ', 'Xue ', 'Qi ', 'Qi ', 'Zhai ', 'Bin ', 'Jue ', 'Zhai ', '[?] ', 'Fei ', 'Ban ', 'Ban ', 'Lan ', 'Yu ', 'Lan ', 'Wei ', 'Dou ', 'Sheng ', 'Liao ', 'Jia ', 'Hu ', 'Xie ', 'Jia ', 'Yu ', 'Zhen ', 'Jiao ', 'Wo ', 'Tou ', 'Chu ', 'Jin ', 'Chi ', 'Yin ', 'Fu ', 'Qiang ', 'Zhan ', 'Qu ', 'Zhuo ', 'Zhan ', 'Duan ', 'Zhuo ', 'Si ', 'Xin ', 'Zhuo ', 'Zhuo ', 'Qin ', 'Lin ', 'Zhuo ', 'Chu ', 'Duan ', 'Zhu ', 'Fang ', 'Xie ', 'Hang ', 'Yu ', 'Shi ', 'Pei ', 'You ', 'Mye ', 'Pang ', 'Qi ', 'Zhan ', 'Mao ', 'Lu ', 'Pei ', 'Pi ', 'Liu ', 'Fu ', 'Fang ', 'Xuan ', 'Jing ', 'Jing ', 'Ni ', 'Zu ', 'Zhao ', 'Yi ', 'Liu ', 'Shao ', 'Jian ', 'Es ', 'Yi ', 'Qi ', 'Zhi ', 'Fan ', 'Piao ', 'Fan ', 'Zhan ', 'Guai ', 'Sui ', 'Yu ', 'Wu ', 'Ji ', 'Ji ', 'Ji ', 'Huo ', 'Ri ', 'Dan ', 'Jiu ', 'Zhi ', 'Zao ', 'Xie ', 'Tiao ', 'Xun ', 'Xu ', 'Xu ', 'Xu ', 'Gan ', 'Han ', 'Tai ', 'Di ', 'Xu ', 'Chan ', 'Shi ', 'Kuang ', 'Yang ', 'Shi ', 'Wang ', 'Min ', 'Min ', 'Tun ', 'Chun ', 'Wu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0ca.php\",\"ext\":\"php\",\"size\":2451,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['jjael', 'jjaelg', 'jjaelm', 'jjaelb', 'jjaels', 'jjaelt', 'jjaelp', 'jjaelh', 'jjaem', 'jjaeb', 'jjaebs', 'jjaes', 'jjaess', 'jjaeng', 'jjaej', 'jjaec', 'jjaek', 'jjaet', 'jjaep', 'jjaeh', 'jjya', 'jjyag', 'jjyagg', 'jjyags', 'jjyan', 'jjyanj', 'jjyanh', 'jjyad', 'jjyal', 'jjyalg', 'jjyalm', 'jjyalb', 'jjyals', 'jjyalt', 'jjyalp', 'jjyalh', 'jjyam', 'jjyab', 'jjyabs', 'jjyas', 'jjyass', 'jjyang', 'jjyaj', 'jjyac', 'jjyak', 'jjyat', 'jjyap', 'jjyah', 'jjyae', 'jjyaeg', 'jjyaegg', 'jjyaegs', 'jjyaen', 'jjyaenj', 'jjyaenh', 'jjyaed', 'jjyael', 'jjyaelg', 'jjyaelm', 'jjyaelb', 'jjyaels', 'jjyaelt', 'jjyaelp', 'jjyaelh', 'jjyaem', 'jjyaeb', 'jjyaebs', 'jjyaes', 'jjyaess', 'jjyaeng', 'jjyaej', 'jjyaec', 'jjyaek', 'jjyaet', 'jjyaep', 'jjyaeh', 'jjeo', 'jjeog', 'jjeogg', 'jjeogs', 'jjeon', 'jjeonj', 'jjeonh', 'jjeod', 'jjeol', 'jjeolg', 'jjeolm', 'jjeolb', 'jjeols', 'jjeolt', 'jjeolp', 'jjeolh', 'jjeom', 'jjeob', 'jjeobs', 'jjeos', 'jjeoss', 'jjeong', 'jjeoj', 'jjeoc', 'jjeok', 'jjeot', 'jjeop', 'jjeoh', 'jje', 'jjeg', 'jjegg', 'jjegs', 'jjen', 'jjenj', 'jjenh', 'jjed', 'jjel', 'jjelg', 'jjelm', 'jjelb', 'jjels', 'jjelt', 'jjelp', 'jjelh', 'jjem', 'jjeb', 'jjebs', 'jjes', 'jjess', 'jjeng', 'jjej', 'jjec', 'jjek', 'jjet', 'jjep', 'jjeh', 'jjyeo', 'jjyeog', 'jjyeogg', 'jjyeogs', 'jjyeon', 'jjyeonj', 'jjyeonh', 'jjyeod', 'jjyeol', 'jjyeolg', 'jjyeolm', 'jjyeolb', 'jjyeols', 'jjyeolt', 'jjyeolp', 'jjyeolh', 'jjyeom', 'jjyeob', 'jjyeobs', 'jjyeos', 'jjyeoss', 'jjyeong', 'jjyeoj', 'jjyeoc', 'jjyeok', 'jjyeot', 'jjyeop', 'jjyeoh', 'jjye', 'jjyeg', 'jjyegg', 'jjyegs', 'jjyen', 'jjyenj', 'jjyenh', 'jjyed', 'jjyel', 'jjyelg', 'jjyelm', 'jjyelb', 'jjyels', 'jjyelt', 'jjyelp', 'jjyelh', 'jjyem', 'jjyeb', 'jjyebs', 'jjyes', 'jjyess', 'jjyeng', 'jjyej', 'jjyec', 'jjyek', 'jjyet', 'jjyep', 'jjyeh', 'jjo', 'jjog', 'jjogg', 'jjogs', 'jjon', 'jjonj', 'jjonh', 'jjod', 'jjol', 'jjolg', 'jjolm', 'jjolb', 'jjols', 'jjolt', 'jjolp', 'jjolh', 'jjom', 'jjob', 'jjobs', 'jjos', 'jjoss', 'jjong', 'jjoj', 'jjoc', 'jjok', 'jjot', 'jjop', 'jjoh', 'jjwa', 'jjwag', 'jjwagg', 'jjwags', 'jjwan', 'jjwanj', 'jjwanh', 'jjwad', 'jjwal', 'jjwalg', 'jjwalm', 'jjwalb', 'jjwals', 'jjwalt', 'jjwalp', 'jjwalh', 'jjwam', 'jjwab', 'jjwabs', 'jjwas', 'jjwass', 'jjwang', 'jjwaj', 'jjwac', 'jjwak', 'jjwat', 'jjwap', 'jjwah', 'jjwae', 'jjwaeg', 'jjwaegg', 'jjwaegs', 'jjwaen', 'jjwaenj', 'jjwaenh', 'jjwaed', 'jjwael', 'jjwaelg', 'jjwaelm', 'jjwaelb'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x01d.php\",\"ext\":\"php\",\"size\":1155,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['A', 'AE', 'ae', 'B', 'C', 'D', 'D', 'E', 'e', 'i', 'J', 'K', 'L', 'M', 'N', 'O', '', 'O', '', 'O', 'Oe', 'Ou', '', '', 'P', 'R', 'R', 'T', 'U', 'u', 'u', 'm', 'V', 'W', 'Z', '', '', '', '', '', '', '', '', '', 'A', 'AE', 'B', 'B', 'D', 'E', 'E', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'N', 'O', 'Ou', 'P', 'R', 'T', 'U', 'W', 'a', 'a', 'a', 'ae', 'b', 'd', 'e', '', 'e', 'e', 'g', 'i', 'k', 'm', '', 'o', '', '', '', 'p', 't', 'u', 'u', 'm', 'v', '', 'b', 'g', 'd', 'f', '', 'i', 'r', 'u', 'v', 'b', 'g', 'r', 'f', '', '', 'b', 'd', 'f', 'm', 'n', 'p', 'r', 'r', 's', 't', 'z', 'g', '', '', '', '', '', 'p', '', '', 'b', 'd', 'f', 'g', 'k', 'l', 'm', 'n', 'p', 'r', 's', '', 'v', 'x', 'z', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/ascii_ord.php\",\"ext\":\"php\",\"size\":3754,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['' => 0, \\\"\\\\x00\\\" => 0, \\\"\\\\x01\\\" => 1, \\\"\\\\x02\\\" => 2, \\\"\\\\x03\\\" => 3, \\\"\\\\x04\\\" => 4, \\\"\\\\x05\\\" => 5, \\\"\\\\x06\\\" => 6, \\\"\\\\x07\\\" => 7, \\\"\\\\x08\\\" => 8, \\\"\\\\x09\\\" => 9, \\\"\\\\x0A\\\" => 10, \\\"\\\\x0B\\\" => 11, \\\"\\\\x0C\\\" => 12, \\\"\\\\x0D\\\" => 13, \\\"\\\\x0E\\\" => 14, \\\"\\\\x0F\\\" => 15, \\\"\\\\x10\\\" => 16, \\\"\\\\x11\\\" => 17, \\\"\\\\x12\\\" => 18, \\\"\\\\x13\\\" => 19, \\\"\\\\x14\\\" => 20, \\\"\\\\x15\\\" => 21, \\\"\\\\x16\\\" => 22, \\\"\\\\x17\\\" => 23, \\\"\\\\x18\\\" => 24, \\\"\\\\x19\\\" => 25, \\\"\\\\x1A\\\" => 26, \\\"\\\\x1B\\\" => 27, \\\"\\\\x1C\\\" => 28, \\\"\\\\x1D\\\" => 29, \\\"\\\\x1E\\\" => 30, \\\"\\\\x1F\\\" => 31, \\\"\\\\x20\\\" => 32, \\\"\\\\x21\\\" => 33, \\\"\\\\x22\\\" => 34, \\\"\\\\x23\\\" => 35, \\\"\\\\x24\\\" => 36, \\\"\\\\x25\\\" => 37, \\\"\\\\x26\\\" => 38, \\\"\\\\x27\\\" => 39, \\\"\\\\x28\\\" => 40, \\\"\\\\x29\\\" => 41, \\\"\\\\x2A\\\" => 42, \\\"\\\\x2B\\\" => 43, \\\"\\\\x2C\\\" => 44, \\\"\\\\x2D\\\" => 45, \\\"\\\\x2E\\\" => 46, \\\"\\\\x2F\\\" => 47, \\\"\\\\x30\\\" => 48, \\\"\\\\x31\\\" => 49, \\\"\\\\x32\\\" => 50, \\\"\\\\x33\\\" => 51, \\\"\\\\x34\\\" => 52, \\\"\\\\x35\\\" => 53, \\\"\\\\x36\\\" => 54, \\\"\\\\x37\\\" => 55, \\\"\\\\x38\\\" => 56, \\\"\\\\x39\\\" => 57, \\\"\\\\x3A\\\" => 58, \\\"\\\\x3B\\\" => 59, \\\"\\\\x3C\\\" => 60, \\\"\\\\x3D\\\" => 61, \\\"\\\\x3E\\\" => 62, \\\"\\\\x3F\\\" => 63, \\\"\\\\x40\\\" => 64, \\\"\\\\x41\\\" => 65, \\\"\\\\x42\\\" => 66, \\\"\\\\x43\\\" => 67, \\\"\\\\x44\\\" => 68, \\\"\\\\x45\\\" => 69, \\\"\\\\x46\\\" => 70, \\\"\\\\x47\\\" => 71, \\\"\\\\x48\\\" => 72, \\\"\\\\x49\\\" => 73, \\\"\\\\x4A\\\" => 74, \\\"\\\\x4B\\\" => 75, \\\"\\\\x4C\\\" => 76, \\\"\\\\x4D\\\" => 77, \\\"\\\\x4E\\\" => 78, \\\"\\\\x4F\\\" => 79, \\\"\\\\x50\\\" => 80, \\\"\\\\x51\\\" => 81, \\\"\\\\x52\\\" => 82, \\\"\\\\x53\\\" => 83, \\\"\\\\x54\\\" => 84, \\\"\\\\x55\\\" => 85, \\\"\\\\x56\\\" => 86, \\\"\\\\x57\\\" => 87, \\\"\\\\x58\\\" => 88, \\\"\\\\x59\\\" => 89, \\\"\\\\x5A\\\" => 90, \\\"\\\\x5B\\\" => 91, \\\"\\\\x5C\\\" => 92, \\\"\\\\x5D\\\" => 93, \\\"\\\\x5E\\\" => 94, \\\"\\\\x5F\\\" => 95, \\\"\\\\x60\\\" => 96, \\\"\\\\x61\\\" => 97, \\\"\\\\x62\\\" => 98, \\\"\\\\x63\\\" => 99, \\\"\\\\x64\\\" => 100, \\\"\\\\x65\\\" => 101, \\\"\\\\x66\\\" => 102, \\\"\\\\x67\\\" => 103, \\\"\\\\x68\\\" => 104, \\\"\\\\x69\\\" => 105, \\\"\\\\x6A\\\" => 106, \\\"\\\\x6B\\\" => 107, \\\"\\\\x6C\\\" => 108, \\\"\\\\x6D\\\" => 109, \\\"\\\\x6E\\\" => 110, \\\"\\\\x6F\\\" => 111, \\\"\\\\x70\\\" => 112, \\\"\\\\x71\\\" => 113, \\\"\\\\x72\\\" => 114, \\\"\\\\x73\\\" => 115, \\\"\\\\x74\\\" => 116, \\\"\\\\x75\\\" => 117, \\\"\\\\x76\\\" => 118, \\\"\\\\x77\\\" => 119, \\\"\\\\x78\\\" => 120, \\\"\\\\x79\\\" => 121, \\\"\\\\x7A\\\" => 122, \\\"\\\\x7B\\\" => 123, \\\"\\\\x7C\\\" => 124, \\\"\\\\x7D\\\" => 125, \\\"\\\\x7E\\\" => 126, \\\"\\\\x7F\\\" => 127, \\\"\\\\x80\\\" => 128, \\\"\\\\x81\\\" => 129, \\\"\\\\x82\\\" => 130, \\\"\\\\x83\\\" => 131, \\\"\\\\x84\\\" => 132, \\\"\\\\x85\\\" => 133, \\\"\\\\x86\\\" => 134, \\\"\\\\x87\\\" => 135, \\\"\\\\x88\\\" => 136, \\\"\\\\x89\\\" => 137, \\\"\\\\x8A\\\" => 138, \\\"\\\\x8B\\\" => 139, \\\"\\\\x8C\\\" => 140, \\\"\\\\x8D\\\" => 141, \\\"\\\\x8E\\\" => 142, \\\"\\\\x8F\\\" => 143, \\\"\\\\x90\\\" => 144, \\\"\\\\x91\\\" => 145, \\\"\\\\x92\\\" => 146, \\\"\\\\x93\\\" => 147, \\\"\\\\x94\\\" => 148, \\\"\\\\x95\\\" => 149, \\\"\\\\x96\\\" => 150, \\\"\\\\x97\\\" => 151, \\\"\\\\x98\\\" => 152, \\\"\\\\x99\\\" => 153, \\\"\\\\x9A\\\" => 154, \\\"\\\\x9B\\\" => 155, \\\"\\\\x9C\\\" => 156, \\\"\\\\x9D\\\" => 157, \\\"\\\\x9E\\\" => 158, \\\"\\\\x9F\\\" => 159, \\\"\\\\xA0\\\" => 160, \\\"\\\\xA1\\\" => 161, \\\"\\\\xA2\\\" => 162, \\\"\\\\xA3\\\" => 163, \\\"\\\\xA4\\\" => 164, \\\"\\\\xA5\\\" => 165, \\\"\\\\xA6\\\" => 166, \\\"\\\\xA7\\\" => 167, \\\"\\\\xA8\\\" => 168, \\\"\\\\xA9\\\" => 169, \\\"\\\\xAA\\\" => 170, \\\"\\\\xAB\\\" => 171, \\\"\\\\xAC\\\" => 172, \\\"\\\\xAD\\\" => 173, \\\"\\\\xAE\\\" => 174, \\\"\\\\xAF\\\" => 175, \\\"\\\\xB0\\\" => 176, \\\"\\\\xB1\\\" => 177, \\\"\\\\xB2\\\" => 178, \\\"\\\\xB3\\\" => 179, \\\"\\\\xB4\\\" => 180, \\\"\\\\xB5\\\" => 181, \\\"\\\\xB6\\\" => 182, \\\"\\\\xB7\\\" => 183, \\\"\\\\xB8\\\" => 184, \\\"\\\\xB9\\\" => 185, \\\"\\\\xBA\\\" => 186, \\\"\\\\xBB\\\" => 187, \\\"\\\\xBC\\\" => 188, \\\"\\\\xBD\\\" => 189, \\\"\\\\xBE\\\" => 190, \\\"\\\\xBF\\\" => 191, \\\"\\\\xC0\\\" => 192, \\\"\\\\xC1\\\" => 193, \\\"\\\\xC2\\\" => 194, \\\"\\\\xC3\\\" => 195, \\\"\\\\xC4\\\" => 196, \\\"\\\\xC5\\\" => 197, \\\"\\\\xC6\\\" => 198, \\\"\\\\xC7\\\" => 199, \\\"\\\\xC8\\\" => 200, \\\"\\\\xC9\\\" => 201, \\\"\\\\xCA\\\" => 202, \\\"\\\\xCB\\\" => 203, \\\"\\\\xCC\\\" => 204, \\\"\\\\xCD\\\" => 205, \\\"\\\\xCE\\\" => 206, \\\"\\\\xCF\\\" => 207, \\\"\\\\xD0\\\" => 208, \\\"\\\\xD1\\\" => 209, \\\"\\\\xD2\\\" => 210, \\\"\\\\xD3\\\" => 211, \\\"\\\\xD4\\\" => 212, \\\"\\\\xD5\\\" => 213, \\\"\\\\xD6\\\" => 214, \\\"\\\\xD7\\\" => 215, \\\"\\\\xD8\\\" => 216, \\\"\\\\xD9\\\" => 217, \\\"\\\\xDA\\\" => 218, \\\"\\\\xDB\\\" => 219, \\\"\\\\xDC\\\" => 220, \\\"\\\\xDD\\\" => 221, \\\"\\\\xDE\\\" => 222, \\\"\\\\xDF\\\" => 223, \\\"\\\\xE0\\\" => 224, \\\"\\\\xE1\\\" => 225, \\\"\\\\xE2\\\" => 226, \\\"\\\\xE3\\\" => 227, \\\"\\\\xE4\\\" => 228, \\\"\\\\xE5\\\" => 229, \\\"\\\\xE6\\\" => 230, \\\"\\\\xE7\\\" => 231, \\\"\\\\xE8\\\" => 232, \\\"\\\\xE9\\\" => 233, \\\"\\\\xEA\\\" => 234, \\\"\\\\xEB\\\" => 235, \\\"\\\\xEC\\\" => 236, \\\"\\\\xED\\\" => 237, \\\"\\\\xEE\\\" => 238, \\\"\\\\xEF\\\" => 239, \\\"\\\\xF0\\\" => 240, \\\"\\\\xF1\\\" => 241, \\\"\\\\xF2\\\" => 242, \\\"\\\\xF3\\\" => 243, \\\"\\\\xF4\\\" => 244, \\\"\\\\xF5\\\" => 245, \\\"\\\\xF6\\\" => 246, \\\"\\\\xF7\\\" => 247, \\\"\\\\xF8\\\" => 248, \\\"\\\\xF9\\\" => 249, \\\"\\\\xFA\\\" => 250, \\\"\\\\xFB\\\" => 251, \\\"\\\\xFC\\\" => 252, \\\"\\\\xFD\\\" => 253, \\\"\\\\xFE\\\" => 254, \\\"\\\\xFF\\\" => 255];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x057.php\",\"ext\":\"php\",\"size\":2075,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Guo ', 'Yin ', 'Hun ', 'Pu ', 'Yu ', 'Han ', 'Yuan ', 'Lun ', 'Quan ', 'Yu ', 'Qing ', 'Guo ', 'Chuan ', 'Wei ', 'Yuan ', 'Quan ', 'Ku ', 'Fu ', 'Yuan ', 'Yuan ', 'E ', 'Tu ', 'Tu ', 'Tu ', 'Tuan ', 'Lue ', 'Hui ', 'Yi ', 'Yuan ', 'Luan ', 'Luan ', 'Tu ', 'Ya ', 'Tu ', 'Ting ', 'Sheng ', 'Pu ', 'Lu ', 'Iri ', 'Ya ', 'Zai ', 'Wei ', 'Ge ', 'Yu ', 'Wu ', 'Gui ', 'Pi ', 'Yi ', 'Di ', 'Qian ', 'Qian ', 'Zhen ', 'Zhuo ', 'Dang ', 'Qia ', 'Akutsu ', 'Yama ', 'Kuang ', 'Chang ', 'Qi ', 'Nie ', 'Mo ', 'Ji ', 'Jia ', 'Zhi ', 'Zhi ', 'Ban ', 'Xun ', 'Tou ', 'Qin ', 'Fen ', 'Jun ', 'Keng ', 'Tun ', 'Fang ', 'Fen ', 'Ben ', 'Tan ', 'Kan ', 'Pi ', 'Zuo ', 'Keng ', 'Bi ', 'Xing ', 'Di ', 'Jing ', 'Ji ', 'Kuai ', 'Di ', 'Jing ', 'Jian ', 'Tan ', 'Li ', 'Ba ', 'Wu ', 'Fen ', 'Zhui ', 'Po ', 'Pan ', 'Tang ', 'Kun ', 'Qu ', 'Tan ', 'Zhi ', 'Tuo ', 'Gan ', 'Ping ', 'Dian ', 'Gua ', 'Ni ', 'Tai ', 'Pi ', 'Jiong ', 'Yang ', 'Fo ', 'Ao ', 'Liu ', 'Qiu ', 'Mu ', 'Ke ', 'Gou ', 'Xue ', 'Ba ', 'Chi ', 'Che ', 'Ling ', 'Zhu ', 'Fu ', 'Hu ', 'Zhi ', 'Chui ', 'La ', 'Long ', 'Long ', 'Lu ', 'Ao ', 'Tay ', 'Pao ', '[?] ', 'Xing ', 'Dong ', 'Ji ', 'Ke ', 'Lu ', 'Ci ', 'Chi ', 'Lei ', 'Gai ', 'Yin ', 'Hou ', 'Dui ', 'Zhao ', 'Fu ', 'Guang ', 'Yao ', 'Duo ', 'Duo ', 'Gui ', 'Cha ', 'Yang ', 'Yin ', 'Fa ', 'Gou ', 'Yuan ', 'Die ', 'Xie ', 'Ken ', 'Jiong ', 'Shou ', 'E ', 'Ha ', 'Dian ', 'Hong ', 'Wu ', 'Kua ', '[?] ', 'Tao ', 'Dang ', 'Kai ', 'Gake ', 'Nao ', 'An ', 'Xing ', 'Xian ', 'Huan ', 'Bang ', 'Pei ', 'Ba ', 'Yi ', 'Yin ', 'Han ', 'Xu ', 'Chui ', 'Cen ', 'Geng ', 'Ai ', 'Peng ', 'Fang ', 'Que ', 'Yong ', 'Xun ', 'Jia ', 'Di ', 'Mai ', 'Lang ', 'Xuan ', 'Cheng ', 'Yan ', 'Jin ', 'Zhe ', 'Lei ', 'Lie ', 'Bu ', 'Cheng ', 'Gomi ', 'Bu ', 'Shi ', 'Xun ', 'Guo ', 'Jiong ', 'Ye ', 'Nian ', 'Di ', 'Yu ', 'Bu ', 'Ya ', 'Juan ', 'Sui ', 'Pi ', 'Cheng ', 'Wan ', 'Ju ', 'Lun ', 'Zheng ', 'Kong ', 'Chong ', 'Dong ', 'Dai ', 'Tan ', 'An ', 'Cai ', 'Shu ', 'Beng ', 'Kan ', 'Zhi ', 'Duo ', 'Yi ', 'Zhi ', 'Yi ', 'Pei ', 'Ji ', 'Zhun ', 'Qi ', 'Sao ', 'Ju ', 'Ni '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c9.php\",\"ext\":\"php\",\"size\":2166,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['jun', 'junj', 'junh', 'jud', 'jul', 'julg', 'julm', 'julb', 'juls', 'jult', 'julp', 'julh', 'jum', 'jub', 'jubs', 'jus', 'juss', 'jung', 'juj', 'juc', 'juk', 'jut', 'jup', 'juh', 'jweo', 'jweog', 'jweogg', 'jweogs', 'jweon', 'jweonj', 'jweonh', 'jweod', 'jweol', 'jweolg', 'jweolm', 'jweolb', 'jweols', 'jweolt', 'jweolp', 'jweolh', 'jweom', 'jweob', 'jweobs', 'jweos', 'jweoss', 'jweong', 'jweoj', 'jweoc', 'jweok', 'jweot', 'jweop', 'jweoh', 'jwe', 'jweg', 'jwegg', 'jwegs', 'jwen', 'jwenj', 'jwenh', 'jwed', 'jwel', 'jwelg', 'jwelm', 'jwelb', 'jwels', 'jwelt', 'jwelp', 'jwelh', 'jwem', 'jweb', 'jwebs', 'jwes', 'jwess', 'jweng', 'jwej', 'jwec', 'jwek', 'jwet', 'jwep', 'jweh', 'jwi', 'jwig', 'jwigg', 'jwigs', 'jwin', 'jwinj', 'jwinh', 'jwid', 'jwil', 'jwilg', 'jwilm', 'jwilb', 'jwils', 'jwilt', 'jwilp', 'jwilh', 'jwim', 'jwib', 'jwibs', 'jwis', 'jwiss', 'jwing', 'jwij', 'jwic', 'jwik', 'jwit', 'jwip', 'jwih', 'jyu', 'jyug', 'jyugg', 'jyugs', 'jyun', 'jyunj', 'jyunh', 'jyud', 'jyul', 'jyulg', 'jyulm', 'jyulb', 'jyuls', 'jyult', 'jyulp', 'jyulh', 'jyum', 'jyub', 'jyubs', 'jyus', 'jyuss', 'jyung', 'jyuj', 'jyuc', 'jyuk', 'jyut', 'jyup', 'jyuh', 'jeu', 'jeug', 'jeugg', 'jeugs', 'jeun', 'jeunj', 'jeunh', 'jeud', 'jeul', 'jeulg', 'jeulm', 'jeulb', 'jeuls', 'jeult', 'jeulp', 'jeulh', 'jeum', 'jeub', 'jeubs', 'jeus', 'jeuss', 'jeung', 'jeuj', 'jeuc', 'jeuk', 'jeut', 'jeup', 'jeuh', 'jyi', 'jyig', 'jyigg', 'jyigs', 'jyin', 'jyinj', 'jyinh', 'jyid', 'jyil', 'jyilg', 'jyilm', 'jyilb', 'jyils', 'jyilt', 'jyilp', 'jyilh', 'jyim', 'jyib', 'jyibs', 'jyis', 'jyiss', 'jying', 'jyij', 'jyic', 'jyik', 'jyit', 'jyip', 'jyih', 'ji', 'jig', 'jigg', 'jigs', 'jin', 'jinj', 'jinh', 'jid', 'jil', 'jilg', 'jilm', 'jilb', 'jils', 'jilt', 'jilp', 'jilh', 'jim', 'jib', 'jibs', 'jis', 'jiss', 'jing', 'jij', 'jic', 'jik', 'jit', 'jip', 'jih', 'jja', 'jjag', 'jjagg', 'jjags', 'jjan', 'jjanj', 'jjanh', 'jjad', 'jjal', 'jjalg', 'jjalm', 'jjalb', 'jjals', 'jjalt', 'jjalp', 'jjalh', 'jjam', 'jjab', 'jjabs', 'jjas', 'jjass', 'jjang', 'jjaj', 'jjac', 'jjak', 'jjat', 'jjap', 'jjah', 'jjae', 'jjaeg', 'jjaegg', 'jjaegs', 'jjaen', 'jjaenj', 'jjaenh', 'jjaed'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x07c.php\",\"ext\":\"php\",\"size\":2107,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ze ', 'Xi ', 'Guo ', 'Yi ', 'Hu ', 'Chan ', 'Kou ', 'Cu ', 'Ping ', 'Chou ', 'Ji ', 'Gui ', 'Su ', 'Lou ', 'Zha ', 'Lu ', 'Nian ', 'Suo ', 'Cuan ', 'Sasara ', 'Suo ', 'Le ', 'Duan ', 'Yana ', 'Xiao ', 'Bo ', 'Mi ', 'Si ', 'Dang ', 'Liao ', 'Dan ', 'Dian ', 'Fu ', 'Jian ', 'Min ', 'Kui ', 'Dai ', 'Qiao ', 'Deng ', 'Huang ', 'Sun ', 'Lao ', 'Zan ', 'Xiao ', 'Du ', 'Shi ', 'Zan ', '[?] ', 'Pai ', 'Hata ', 'Pai ', 'Gan ', 'Ju ', 'Du ', 'Lu ', 'Yan ', 'Bo ', 'Dang ', 'Sai ', 'Ke ', 'Long ', 'Qian ', 'Lian ', 'Bo ', 'Zhou ', 'Lai ', '[?] ', 'Lan ', 'Kui ', 'Yu ', 'Yue ', 'Hao ', 'Zhen ', 'Tai ', 'Ti ', 'Mi ', 'Chou ', 'Ji ', '[?] ', 'Hata ', 'Teng ', 'Zhuan ', 'Zhou ', 'Fan ', 'Sou ', 'Zhou ', 'Kuji ', 'Zhuo ', 'Teng ', 'Lu ', 'Lu ', 'Jian ', 'Tuo ', 'Ying ', 'Yu ', 'Lai ', 'Long ', 'Shinshi ', 'Lian ', 'Lan ', 'Qian ', 'Yue ', 'Zhong ', 'Qu ', 'Lian ', 'Bian ', 'Duan ', 'Zuan ', 'Li ', 'Si ', 'Luo ', 'Ying ', 'Yue ', 'Zhuo ', 'Xu ', 'Mi ', 'Di ', 'Fan ', 'Shen ', 'Zhe ', 'Shen ', 'Nu ', 'Xie ', 'Lei ', 'Xian ', 'Zi ', 'Ni ', 'Cun ', '[?] ', 'Qian ', 'Kume ', 'Bi ', 'Ban ', 'Wu ', 'Sha ', 'Kang ', 'Rou ', 'Fen ', 'Bi ', 'Cui ', '[?] ', 'Li ', 'Chi ', 'Nukamiso ', 'Ro ', 'Ba ', 'Li ', 'Gan ', 'Ju ', 'Po ', 'Mo ', 'Cu ', 'Nian ', 'Zhou ', 'Li ', 'Su ', 'Tiao ', 'Li ', 'Qi ', 'Su ', 'Hong ', 'Tong ', 'Zi ', 'Ce ', 'Yue ', 'Zhou ', 'Lin ', 'Zhuang ', 'Bai ', '[?] ', 'Fen ', 'Ji ', '[?] ', 'Sukumo ', 'Liang ', 'Xian ', 'Fu ', 'Liang ', 'Can ', 'Geng ', 'Li ', 'Yue ', 'Lu ', 'Ju ', 'Qi ', 'Cui ', 'Bai ', 'Zhang ', 'Lin ', 'Zong ', 'Jing ', 'Guo ', 'Kouji ', 'San ', 'San ', 'Tang ', 'Bian ', 'Rou ', 'Mian ', 'Hou ', 'Xu ', 'Zong ', 'Hu ', 'Jian ', 'Zan ', 'Ci ', 'Li ', 'Xie ', 'Fu ', 'Ni ', 'Bei ', 'Gu ', 'Xiu ', 'Gao ', 'Tang ', 'Qiu ', 'Sukumo ', 'Cao ', 'Zhuang ', 'Tang ', 'Mi ', 'San ', 'Fen ', 'Zao ', 'Kang ', 'Jiang ', 'Mo ', 'San ', 'San ', 'Nuo ', 'Xi ', 'Liang ', 'Jiang ', 'Kuai ', 'Bo ', 'Huan ', '[?] ', 'Zong ', 'Xian ', 'Nuo ', 'Tuan ', 'Nie ', 'Li ', 'Zuo ', 'Di ', 'Nie ', 'Tiao ', 'Lan ', 'Mi ', 'Jiao ', 'Jiu ', 'Xi ', 'Gong ', 'Zheng ', 'Jiu ', 'You '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b7.php\",\"ext\":\"php\",\"size\":2277,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ddwim', 'ddwib', 'ddwibs', 'ddwis', 'ddwiss', 'ddwing', 'ddwij', 'ddwic', 'ddwik', 'ddwit', 'ddwip', 'ddwih', 'ddyu', 'ddyug', 'ddyugg', 'ddyugs', 'ddyun', 'ddyunj', 'ddyunh', 'ddyud', 'ddyul', 'ddyulg', 'ddyulm', 'ddyulb', 'ddyuls', 'ddyult', 'ddyulp', 'ddyulh', 'ddyum', 'ddyub', 'ddyubs', 'ddyus', 'ddyuss', 'ddyung', 'ddyuj', 'ddyuc', 'ddyuk', 'ddyut', 'ddyup', 'ddyuh', 'ddeu', 'ddeug', 'ddeugg', 'ddeugs', 'ddeun', 'ddeunj', 'ddeunh', 'ddeud', 'ddeul', 'ddeulg', 'ddeulm', 'ddeulb', 'ddeuls', 'ddeult', 'ddeulp', 'ddeulh', 'ddeum', 'ddeub', 'ddeubs', 'ddeus', 'ddeuss', 'ddeung', 'ddeuj', 'ddeuc', 'ddeuk', 'ddeut', 'ddeup', 'ddeuh', 'ddyi', 'ddyig', 'ddyigg', 'ddyigs', 'ddyin', 'ddyinj', 'ddyinh', 'ddyid', 'ddyil', 'ddyilg', 'ddyilm', 'ddyilb', 'ddyils', 'ddyilt', 'ddyilp', 'ddyilh', 'ddyim', 'ddyib', 'ddyibs', 'ddyis', 'ddyiss', 'ddying', 'ddyij', 'ddyic', 'ddyik', 'ddyit', 'ddyip', 'ddyih', 'ddi', 'ddig', 'ddigg', 'ddigs', 'ddin', 'ddinj', 'ddinh', 'ddid', 'ddil', 'ddilg', 'ddilm', 'ddilb', 'ddils', 'ddilt', 'ddilp', 'ddilh', 'ddim', 'ddib', 'ddibs', 'ddis', 'ddiss', 'dding', 'ddij', 'ddic', 'ddik', 'ddit', 'ddip', 'ddih', 'ra', 'rag', 'ragg', 'rags', 'ran', 'ranj', 'ranh', 'rad', 'ral', 'ralg', 'ralm', 'ralb', 'rals', 'ralt', 'ralp', 'ralh', 'ram', 'rab', 'rabs', 'ras', 'rass', 'rang', 'raj', 'rac', 'rak', 'rat', 'rap', 'rah', 'rae', 'raeg', 'raegg', 'raegs', 'raen', 'raenj', 'raenh', 'raed', 'rael', 'raelg', 'raelm', 'raelb', 'raels', 'raelt', 'raelp', 'raelh', 'raem', 'raeb', 'raebs', 'raes', 'raess', 'raeng', 'raej', 'raec', 'raek', 'raet', 'raep', 'raeh', 'rya', 'ryag', 'ryagg', 'ryags', 'ryan', 'ryanj', 'ryanh', 'ryad', 'ryal', 'ryalg', 'ryalm', 'ryalb', 'ryals', 'ryalt', 'ryalp', 'ryalh', 'ryam', 'ryab', 'ryabs', 'ryas', 'ryass', 'ryang', 'ryaj', 'ryac', 'ryak', 'ryat', 'ryap', 'ryah', 'ryae', 'ryaeg', 'ryaegg', 'ryaegs', 'ryaen', 'ryaenj', 'ryaenh', 'ryaed', 'ryael', 'ryaelg', 'ryaelm', 'ryaelb', 'ryaels', 'ryaelt', 'ryaelp', 'ryaelh', 'ryaem', 'ryaeb', 'ryaebs', 'ryaes', 'ryaess', 'ryaeng', 'ryaej', 'ryaec', 'ryaek', 'ryaet', 'ryaep', 'ryaeh', 'reo', 'reog', 'reogg', 'reogs', 'reon', 'reonj', 'reonh', 'reod', 'reol', 'reolg', 'reolm', 'reolb', 'reols', 'reolt', 'reolp', 'reolh', 'reom', 'reob', 'reobs', 'reos'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x053.php\",\"ext\":\"php\",\"size\":2060,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yun ', 'Mwun ', 'Nay ', 'Gai ', 'Gai ', 'Bao ', 'Cong ', '[?] ', 'Xiong ', 'Peng ', 'Ju ', 'Tao ', 'Ge ', 'Pu ', 'An ', 'Pao ', 'Fu ', 'Gong ', 'Da ', 'Jiu ', 'Qiong ', 'Bi ', 'Hua ', 'Bei ', 'Nao ', 'Chi ', 'Fang ', 'Jiu ', 'Yi ', 'Za ', 'Jiang ', 'Kang ', 'Jiang ', 'Kuang ', 'Hu ', 'Xia ', 'Qu ', 'Bian ', 'Gui ', 'Qie ', 'Zang ', 'Kuang ', 'Fei ', 'Hu ', 'Tou ', 'Gui ', 'Gui ', 'Hui ', 'Dan ', 'Gui ', 'Lian ', 'Lian ', 'Suan ', 'Du ', 'Jiu ', 'Qu ', 'Xi ', 'Pi ', 'Qu ', 'Yi ', 'Qia ', 'Yan ', 'Bian ', 'Ni ', 'Qu ', 'Shi ', 'Xin ', 'Qian ', 'Nian ', 'Sa ', 'Zu ', 'Sheng ', 'Wu ', 'Hui ', 'Ban ', 'Shi ', 'Xi ', 'Wan ', 'Hua ', 'Xie ', 'Wan ', 'Bei ', 'Zu ', 'Zhuo ', 'Xie ', 'Dan ', 'Mai ', 'Nan ', 'Dan ', 'Ji ', 'Bo ', 'Shuai ', 'Bu ', 'Kuang ', 'Bian ', 'Bu ', 'Zhan ', 'Qia ', 'Lu ', 'You ', 'Lu ', 'Xi ', 'Gua ', 'Wo ', 'Xie ', 'Jie ', 'Jie ', 'Wei ', 'Ang ', 'Qiong ', 'Zhi ', 'Mao ', 'Yin ', 'Wei ', 'Shao ', 'Ji ', 'Que ', 'Luan ', 'Shi ', 'Juan ', 'Xie ', 'Xu ', 'Jin ', 'Que ', 'Wu ', 'Ji ', 'E ', 'Qing ', 'Xi ', '[?] ', 'Han ', 'Zhan ', 'E ', 'Ting ', 'Li ', 'Zhe ', 'Han ', 'Li ', 'Ya ', 'Ya ', 'Yan ', 'She ', 'Zhi ', 'Zha ', 'Pang ', '[?] ', 'He ', 'Ya ', 'Zhi ', 'Ce ', 'Pang ', 'Ti ', 'Li ', 'She ', 'Hou ', 'Ting ', 'Zui ', 'Cuo ', 'Fei ', 'Yuan ', 'Ce ', 'Yuan ', 'Xiang ', 'Yan ', 'Li ', 'Jue ', 'Sha ', 'Dian ', 'Chu ', 'Jiu ', 'Qin ', 'Ao ', 'Gui ', 'Yan ', 'Si ', 'Li ', 'Chang ', 'Lan ', 'Li ', 'Yan ', 'Yan ', 'Yuan ', 'Si ', 'Gong ', 'Lin ', 'Qiu ', 'Qu ', 'Qu ', 'Uk ', 'Lei ', 'Du ', 'Xian ', 'Zhuan ', 'San ', 'Can ', 'Can ', 'Can ', 'Can ', 'Ai ', 'Dai ', 'You ', 'Cha ', 'Ji ', 'You ', 'Shuang ', 'Fan ', 'Shou ', 'Guai ', 'Ba ', 'Fa ', 'Ruo ', 'Shi ', 'Shu ', 'Zhuo ', 'Qu ', 'Shou ', 'Bian ', 'Xu ', 'Jia ', 'Pan ', 'Sou ', 'Gao ', 'Wei ', 'Sou ', 'Die ', 'Rui ', 'Cong ', 'Kou ', 'Gu ', 'Ju ', 'Ling ', 'Gua ', 'Tao ', 'Kou ', 'Zhi ', 'Jiao ', 'Zhao ', 'Ba ', 'Ding ', 'Ke ', 'Tai ', 'Chi ', 'Shi ', 'You ', 'Qiu ', 'Po ', 'Xie ', 'Hao ', 'Si ', 'Tan ', 'Chi ', 'Le ', 'Diao ', 'Ji ', '[?] ', 'Hong '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x028.php\",\"ext\":\"php\",\"size\":2513,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return [' ', 'a', '1', 'b', '\\\\'', 'k', '2', 'l', '@', 'c', 'i', 'f', '\/', 'm', 's', 'p', '\\\"', 'e', '3', 'h', '9', 'o', '6', 'r', '^', 'd', 'j', 'g', '>', 'n', 't', 'q', ',', '*', '5', '<', '-', 'u', '8', 'v', '.', '%', '[', '$', '+', 'x', '!', '&', ';', ':', '4', '\\\\\\\\', '0', 'z', '7', '(', '_', '?', 'w', ']', '#', 'y', ')', '=', '[d7]', '[d17]', '[d27]', '[d127]', '[d37]', '[d137]', '[d237]', '[d1237]', '[d47]', '[d147]', '[d247]', '[d1247]', '[d347]', '[d1347]', '[d2347]', '[d12347]', '[d57]', '[d157]', '[d257]', '[d1257]', '[d357]', '[d1357]', '[d2357]', '[d12357]', '[d457]', '[d1457]', '[d2457]', '[d12457]', '[d3457]', '[d13457]', '[d23457]', '[d123457]', '[d67]', '[d167]', '[d267]', '[d1267]', '[d367]', '[d1367]', '[d2367]', '[d12367]', '[d467]', '[d1467]', '[d2467]', '[d12467]', '[d3467]', '[d13467]', '[d23467]', '[d123467]', '[d567]', '[d1567]', '[d2567]', '[d12567]', '[d3567]', '[d13567]', '[d23567]', '[d123567]', '[d4567]', '[d14567]', '[d24567]', '[d124567]', '[d34567]', '[d134567]', '[d234567]', '[d1234567]', '[d8]', '[d18]', '[d28]', '[d128]', '[d38]', '[d138]', '[d238]', '[d1238]', '[d48]', '[d148]', '[d248]', '[d1248]', '[d348]', '[d1348]', '[d2348]', '[d12348]', '[d58]', '[d158]', '[d258]', '[d1258]', '[d358]', '[d1358]', '[d2358]', '[d12358]', '[d458]', '[d1458]', '[d2458]', '[d12458]', '[d3458]', '[d13458]', '[d23458]', '[d123458]', '[d68]', '[d168]', '[d268]', '[d1268]', '[d368]', '[d1368]', '[d2368]', '[d12368]', '[d468]', '[d1468]', '[d2468]', '[d12468]', '[d3468]', '[d13468]', '[d23468]', '[d123468]', '[d568]', '[d1568]', '[d2568]', '[d12568]', '[d3568]', '[d13568]', '[d23568]', '[d123568]', '[d4568]', '[d14568]', '[d24568]', '[d124568]', '[d34568]', '[d134568]', '[d234568]', '[d1234568]', '[d78]', '[d178]', '[d278]', '[d1278]', '[d378]', '[d1378]', '[d2378]', '[d12378]', '[d478]', '[d1478]', '[d2478]', '[d12478]', '[d3478]', '[d13478]', '[d23478]', '[d123478]', '[d578]', '[d1578]', '[d2578]', '[d12578]', '[d3578]', '[d13578]', '[d23578]', '[d123578]', '[d4578]', '[d14578]', '[d24578]', '[d124578]', '[d34578]', '[d134578]', '[d234578]', '[d1234578]', '[d678]', '[d1678]', '[d2678]', '[d12678]', '[d3678]', '[d13678]', '[d23678]', '[d123678]', '[d4678]', '[d14678]', '[d24678]', '[d124678]', '[d34678]', '[d134678]', '[d234678]', '[d1234678]', '[d5678]', '[d15678]', '[d25678]', '[d125678]', '[d35678]', '[d135678]', '[d235678]', '[d1235678]', '[d45678]', '[d145678]', '[d245678]', '[d1245678]', '[d345678]', '[d1345678]', '[d2345678]', '[d12345678]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0d3.php\",\"ext\":\"php\",\"size\":2149,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['tim', 'tib', 'tibs', 'tis', 'tiss', 'ting', 'tij', 'tic', 'tik', 'tit', 'tip', 'tih', 'pa', 'pag', 'pagg', 'pags', 'pan', 'panj', 'panh', 'pad', 'pal', 'palg', 'palm', 'palb', 'pals', 'palt', 'palp', 'palh', 'pam', 'pab', 'pabs', 'pas', 'pass', 'pang', 'paj', 'pac', 'pak', 'pat', 'pap', 'pah', 'pae', 'paeg', 'paegg', 'paegs', 'paen', 'paenj', 'paenh', 'paed', 'pael', 'paelg', 'paelm', 'paelb', 'paels', 'paelt', 'paelp', 'paelh', 'paem', 'paeb', 'paebs', 'paes', 'paess', 'paeng', 'paej', 'paec', 'paek', 'paet', 'paep', 'paeh', 'pya', 'pyag', 'pyagg', 'pyags', 'pyan', 'pyanj', 'pyanh', 'pyad', 'pyal', 'pyalg', 'pyalm', 'pyalb', 'pyals', 'pyalt', 'pyalp', 'pyalh', 'pyam', 'pyab', 'pyabs', 'pyas', 'pyass', 'pyang', 'pyaj', 'pyac', 'pyak', 'pyat', 'pyap', 'pyah', 'pyae', 'pyaeg', 'pyaegg', 'pyaegs', 'pyaen', 'pyaenj', 'pyaenh', 'pyaed', 'pyael', 'pyaelg', 'pyaelm', 'pyaelb', 'pyaels', 'pyaelt', 'pyaelp', 'pyaelh', 'pyaem', 'pyaeb', 'pyaebs', 'pyaes', 'pyaess', 'pyaeng', 'pyaej', 'pyaec', 'pyaek', 'pyaet', 'pyaep', 'pyaeh', 'peo', 'peog', 'peogg', 'peogs', 'peon', 'peonj', 'peonh', 'peod', 'peol', 'peolg', 'peolm', 'peolb', 'peols', 'peolt', 'peolp', 'peolh', 'peom', 'peob', 'peobs', 'peos', 'peoss', 'peong', 'peoj', 'peoc', 'peok', 'peot', 'peop', 'peoh', 'pe', 'peg', 'pegg', 'pegs', 'pen', 'penj', 'penh', 'ped', 'pel', 'pelg', 'pelm', 'pelb', 'pels', 'pelt', 'pelp', 'pelh', 'pem', 'peb', 'pebs', 'pes', 'pess', 'peng', 'pej', 'pec', 'pek', 'pet', 'pep', 'peh', 'pyeo', 'pyeog', 'pyeogg', 'pyeogs', 'pyeon', 'pyeonj', 'pyeonh', 'pyeod', 'pyeol', 'pyeolg', 'pyeolm', 'pyeolb', 'pyeols', 'pyeolt', 'pyeolp', 'pyeolh', 'pyeom', 'pyeob', 'pyeobs', 'pyeos', 'pyeoss', 'pyeong', 'pyeoj', 'pyeoc', 'pyeok', 'pyeot', 'pyeop', 'pyeoh', 'pye', 'pyeg', 'pyegg', 'pyegs', 'pyen', 'pyenj', 'pyenh', 'pyed', 'pyel', 'pyelg', 'pyelm', 'pyelb', 'pyels', 'pyelt', 'pyelp', 'pyelh', 'pyem', 'pyeb', 'pyebs', 'pyes', 'pyess', 'pyeng', 'pyej', 'pyec', 'pyek', 'pyet', 'pyep', 'pyeh', 'po', 'pog', 'pogg', 'pogs', 'pon', 'ponj', 'ponh', 'pod', 'pol', 'polg', 'polm', 'polb', 'pols', 'polt', 'polp', 'polh', 'pom', 'pob', 'pobs', 'pos'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x089.php\",\"ext\":\"php\",\"size\":2072,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ji ', 'Zhi ', 'Gua ', 'Ken ', 'Che ', 'Ti ', 'Ti ', 'Fu ', 'Chong ', 'Xie ', 'Bian ', 'Die ', 'Kun ', 'Duan ', 'Xiu ', 'Xiu ', 'He ', 'Yuan ', 'Bao ', 'Bao ', 'Fu ', 'Yu ', 'Tuan ', 'Yan ', 'Hui ', 'Bei ', 'Chu ', 'Lu ', 'Ena ', 'Hitoe ', 'Yun ', 'Da ', 'Gou ', 'Da ', 'Huai ', 'Rong ', 'Yuan ', 'Ru ', 'Nai ', 'Jiong ', 'Suo ', 'Ban ', 'Tun ', 'Chi ', 'Sang ', 'Niao ', 'Ying ', 'Jie ', 'Qian ', 'Huai ', 'Ku ', 'Lian ', 'Bao ', 'Li ', 'Zhe ', 'Shi ', 'Lu ', 'Yi ', 'Die ', 'Xie ', 'Xian ', 'Wei ', 'Biao ', 'Cao ', 'Ji ', 'Jiang ', 'Sen ', 'Bao ', 'Xiang ', 'Chihaya ', 'Pu ', 'Jian ', 'Zhuan ', 'Jian ', 'Zui ', 'Ji ', 'Dan ', 'Za ', 'Fan ', 'Bo ', 'Xiang ', 'Xin ', 'Bie ', 'Rao ', 'Man ', 'Lan ', 'Ao ', 'Duo ', 'Gui ', 'Cao ', 'Sui ', 'Nong ', 'Chan ', 'Lian ', 'Bi ', 'Jin ', 'Dang ', 'Shu ', 'Tan ', 'Bi ', 'Lan ', 'Pu ', 'Ru ', 'Zhi ', '[?] ', 'Shu ', 'Wa ', 'Shi ', 'Bai ', 'Xie ', 'Bo ', 'Chen ', 'Lai ', 'Long ', 'Xi ', 'Xian ', 'Lan ', 'Zhe ', 'Dai ', 'Tasuki ', 'Zan ', 'Shi ', 'Jian ', 'Pan ', 'Yi ', 'Ran ', 'Ya ', 'Xi ', 'Xi ', 'Yao ', 'Feng ', 'Tan ', '[?] ', 'Biao ', 'Fu ', 'Ba ', 'He ', 'Ji ', 'Ji ', 'Jian ', 'Guan ', 'Bian ', 'Yan ', 'Gui ', 'Jue ', 'Pian ', 'Mao ', 'Mi ', 'Mi ', 'Mie ', 'Shi ', 'Si ', 'Zhan ', 'Luo ', 'Jue ', 'Mi ', 'Tiao ', 'Lian ', 'Yao ', 'Zhi ', 'Jun ', 'Xi ', 'Shan ', 'Wei ', 'Xi ', 'Tian ', 'Yu ', 'Lan ', 'E ', 'Du ', 'Qin ', 'Pang ', 'Ji ', 'Ming ', 'Ying ', 'Gou ', 'Qu ', 'Zhan ', 'Jin ', 'Guan ', 'Deng ', 'Jian ', 'Luo ', 'Qu ', 'Jian ', 'Wei ', 'Jue ', 'Qu ', 'Luo ', 'Lan ', 'Shen ', 'Di ', 'Guan ', 'Jian ', 'Guan ', 'Yan ', 'Gui ', 'Mi ', 'Shi ', 'Zhan ', 'Lan ', 'Jue ', 'Ji ', 'Xi ', 'Di ', 'Tian ', 'Yu ', 'Gou ', 'Jin ', 'Qu ', 'Jiao ', 'Jiu ', 'Jin ', 'Cu ', 'Jue ', 'Zhi ', 'Chao ', 'Ji ', 'Gu ', 'Dan ', 'Zui ', 'Di ', 'Shang ', 'Hua ', 'Quan ', 'Ge ', 'Chi ', 'Jie ', 'Gui ', 'Gong ', 'Hong ', 'Jie ', 'Hun ', 'Qiu ', 'Xing ', 'Su ', 'Ni ', 'Ji ', 'Lu ', 'Zhi ', 'Zha ', 'Bi ', 'Xing ', 'Hu ', 'Shang ', 'Gong ', 'Zhi ', 'Xue ', 'Chu ', 'Xi ', 'Yi ', 'Lu ', 'Jue ', 'Xi ', 'Yan ', 'Xi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x020.php\",\"ext\":\"php\",\"size\":1485,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '', '', '', '', '-', '-', '-', '-', '--', '--', '||', '_', '\\\\'', '\\\\'', ',', '\\\\'', '\\\"', '\\\"', ',,', '\\\"', '+', '++', '*', '*>', '.', '..', '...', '.', \\\"\\\\n\\\",\\n    \\\"\\\\n\\\\n\\\",\\n    '', '', '', '', '', ' ', '%0', '%00', '\\\\'', '\\\\'\\\\'', '\\\\'\\\\'\\\\'', '`', '``', '```', '^', '<', '>', '*', '!!', '!?', '-', '_', '-', '^', '***', '--', '\/', '-[', ']-', '??', '?!', '!?', '7', 'PP', '(]', '[)', '*', '[?]', '[?]', '[?]', '%', '~', '[?]', '[?]', '[?]', \\\"''''\\\",    \/\/ 0x57\\n    '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ' ', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', '', '', '', '', '0', 'i', '', '', '4', '5', '6', '7', '8', '9', '+', '-', '=', '(', ')', 'n', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '-', '=', '(', ')', '[?]', 'a', 'e', 'o', 'x', '[?]', 'h', 'k', 'l', 'm', 'n', 'p', 's', 't', '[?]', '[?]', '[?]', 'ECU', 'CL', 'Cr', 'Fr.', 'L.', 'mil', 'N', 'Pts', 'Rs', 'W', 'NS', 'D', 'EUR', 'K', 'T', 'Dr', 'Pf', 'P', 'G', 'A', 'UAH', 'C|', 'L', 'Sm', 'T', 'Rs', 'L', 'M', 'm', 'R', 'l', 'BTC', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[?]', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', ];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x1f1.php\",\"ext\":\"php\",\"size\":845,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['0.', '0,', '1,', '2,', '3,', '4,', '5,', '6,', '7,', '8,', '9,', '', '', '', '', '', '(A)', '(B)', '(C)', '(D)', '(E)', '(F)', '(G)', '(H)', '(I)', '(J)', '(K)',   \/\/ 0x1a\\n    '(L)', '(M)', '(N)', '(O)', '(P)', '(Q)', '(R)', '(S)', '(T)', '(U)', '(V)', '(W)', '(X)', '(Y)', '(Z)', 48 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 80 => 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 112 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 230 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x070.php\",\"ext\":\"php\",\"size\":2137,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['You ', 'Yang ', 'Lu ', 'Si ', 'Jie ', 'Ying ', 'Du ', 'Wang ', 'Hui ', 'Xie ', 'Pan ', 'Shen ', 'Biao ', 'Chan ', 'Mo ', 'Liu ', 'Jian ', 'Pu ', 'Se ', 'Cheng ', 'Gu ', 'Bin ', 'Huo ', 'Xian ', 'Lu ', 'Qin ', 'Han ', 'Ying ', 'Yong ', 'Li ', 'Jing ', 'Xiao ', 'Ying ', 'Sui ', 'Wei ', 'Xie ', 'Huai ', 'Hao ', 'Zhu ', 'Long ', 'Lai ', 'Dui ', 'Fan ', 'Hu ', 'Lai ', '[?] ', '[?] ', 'Ying ', 'Mi ', 'Ji ', 'Lian ', 'Jian ', 'Ying ', 'Fen ', 'Lin ', 'Yi ', 'Jian ', 'Yue ', 'Chan ', 'Dai ', 'Rang ', 'Jian ', 'Lan ', 'Fan ', 'Shuang ', 'Yuan ', 'Zhuo ', 'Feng ', 'She ', 'Lei ', 'Lan ', 'Cong ', 'Qu ', 'Yong ', 'Qian ', 'Fa ', 'Guan ', 'Que ', 'Yan ', 'Hao ', 'Hyeng ', 'Sa ', 'Zan ', 'Luan ', 'Yan ', 'Li ', 'Mi ', 'Shan ', 'Tan ', 'Dang ', 'Jiao ', 'Chan ', '[?] ', 'Hao ', 'Ba ', 'Zhu ', 'Lan ', 'Lan ', 'Nang ', 'Wan ', 'Luan ', 'Xun ', 'Xian ', 'Yan ', 'Gan ', 'Yan ', 'Yu ', 'Huo ', 'Si ', 'Mie ', 'Guang ', 'Deng ', 'Hui ', 'Xiao ', 'Xiao ', 'Hu ', 'Hong ', 'Ling ', 'Zao ', 'Zhuan ', 'Jiu ', 'Zha ', 'Xie ', 'Chi ', 'Zhuo ', 'Zai ', 'Zai ', 'Can ', 'Yang ', 'Qi ', 'Zhong ', 'Fen ', 'Niu ', 'Jiong ', 'Wen ', 'Po ', 'Yi ', 'Lu ', 'Chui ', 'Pi ', 'Kai ', 'Pan ', 'Yan ', 'Kai ', 'Pang ', 'Mu ', 'Chao ', 'Liao ', 'Gui ', 'Kang ', 'Tun ', 'Guang ', 'Xin ', 'Zhi ', 'Guang ', 'Guang ', 'Wei ', 'Qiang ', '[?] ', 'Da ', 'Xia ', 'Zheng ', 'Zhu ', 'Ke ', 'Zhao ', 'Fu ', 'Ba ', 'Duo ', 'Duo ', 'Ling ', 'Zhuo ', 'Xuan ', 'Ju ', 'Tan ', 'Pao ', 'Jiong ', 'Pao ', 'Tai ', 'Tai ', 'Bing ', 'Yang ', 'Tong ', 'Han ', 'Zhu ', 'Zha ', 'Dian ', 'Wei ', 'Shi ', 'Lian ', 'Chi ', 'Huang ', '[?] ', 'Hu ', 'Shuo ', 'Lan ', 'Jing ', 'Jiao ', 'Xu ', 'Xing ', 'Quan ', 'Lie ', 'Huan ', 'Yang ', 'Xiao ', 'Xiu ', 'Xian ', 'Yin ', 'Wu ', 'Zhou ', 'Yao ', 'Shi ', 'Wei ', 'Tong ', 'Xue ', 'Zai ', 'Kai ', 'Hong ', 'Luo ', 'Xia ', 'Zhu ', 'Xuan ', 'Zheng ', 'Po ', 'Yan ', 'Hui ', 'Guang ', 'Zhe ', 'Hui ', 'Kao ', '[?] ', 'Fan ', 'Shao ', 'Ye ', 'Hui ', '[?] ', 'Tang ', 'Jin ', 'Re ', '[?] ', 'Xi ', 'Fu ', 'Jiong ', 'Che ', 'Pu ', 'Jing ', 'Zhuo ', 'Ting ', 'Wan ', 'Hai ', 'Peng ', 'Lang ', 'Shan ', 'Hu ', 'Feng ', 'Chi ', 'Rong '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x01f.php\",\"ext\":\"php\",\"size\":1360,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'e', 'e', 'e', 'e', 'e', 'e', '[?]', '[?]', 'E', 'E', 'E', 'E', 'E', 'E', '[?]', '[?]', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'i', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'o', 'o', 'o', 'o', 'o', 'o', '[?]', '[?]', 'O', 'O', 'O', 'O', 'O', 'O', '[?]', '[?]', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', '[?]', 'U', '[?]', 'U', '[?]', 'U', '[?]', 'U', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'a', 'a', 'e', 'e', 'e', 'e', 'i', 'i', 'o', 'o', 'u', 'u', 'o', 'o', '[?]', '[?]', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'A', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'e', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'a', 'a', 'a', 'a', 'a', '[?]', 'a', 'a', 'A', 'A', 'A', 'A', 'A', '\\\\'', 'i', '\\\\'', '~', '\\\"~', 'e', 'e', 'e', '[?]', 'e', 'e', 'E', 'E', 'E', 'E', 'E', '\\\\'`', '\\\\'\\\\'', '\\\\'~', 'i', 'i', 'i', 'i', '[?]', '[?]', 'i', 'i', 'I', 'I', 'I', 'I', '[?]', '`\\\\'', '`\\\\'', '`~', 'u', 'u', 'u', 'u', 'R', 'R', 'u', 'u', 'U', 'U', 'U', 'U', 'R', '\\\"`', '\\\"\\\\'', '`', '[?]', '[?]', 'o', 'o', 'o', '[?]', 'o', 'o', 'O', 'O', 'O', 'O', 'O', '\\\\'', '`', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0d7.php\",\"ext\":\"php\",\"size\":2013,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['hwen', 'hwenj', 'hwenh', 'hwed', 'hwel', 'hwelg', 'hwelm', 'hwelb', 'hwels', 'hwelt', 'hwelp', 'hwelh', 'hwem', 'hweb', 'hwebs', 'hwes', 'hwess', 'hweng', 'hwej', 'hwec', 'hwek', 'hwet', 'hwep', 'hweh', 'hwi', 'hwig', 'hwigg', 'hwigs', 'hwin', 'hwinj', 'hwinh', 'hwid', 'hwil', 'hwilg', 'hwilm', 'hwilb', 'hwils', 'hwilt', 'hwilp', 'hwilh', 'hwim', 'hwib', 'hwibs', 'hwis', 'hwiss', 'hwing', 'hwij', 'hwic', 'hwik', 'hwit', 'hwip', 'hwih', 'hyu', 'hyug', 'hyugg', 'hyugs', 'hyun', 'hyunj', 'hyunh', 'hyud', 'hyul', 'hyulg', 'hyulm', 'hyulb', 'hyuls', 'hyult', 'hyulp', 'hyulh', 'hyum', 'hyub', 'hyubs', 'hyus', 'hyuss', 'hyung', 'hyuj', 'hyuc', 'hyuk', 'hyut', 'hyup', 'hyuh', 'heu', 'heug', 'heugg', 'heugs', 'heun', 'heunj', 'heunh', 'heud', 'heul', 'heulg', 'heulm', 'heulb', 'heuls', 'heult', 'heulp', 'heulh', 'heum', 'heub', 'heubs', 'heus', 'heuss', 'heung', 'heuj', 'heuc', 'heuk', 'heut', 'heup', 'heuh', 'hyi', 'hyig', 'hyigg', 'hyigs', 'hyin', 'hyinj', 'hyinh', 'hyid', 'hyil', 'hyilg', 'hyilm', 'hyilb', 'hyils', 'hyilt', 'hyilp', 'hyilh', 'hyim', 'hyib', 'hyibs', 'hyis', 'hyiss', 'hying', 'hyij', 'hyic', 'hyik', 'hyit', 'hyip', 'hyih', 'hi', 'hig', 'higg', 'higs', 'hin', 'hinj', 'hinh', 'hid', 'hil', 'hilg', 'hilm', 'hilb', 'hils', 'hilt', 'hilp', 'hilh', 'him', 'hib', 'hibs', 'his', 'hiss', 'hing', 'hij', 'hic', 'hik', 'hit', 'hip', 'hih', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x003.php\",\"ext\":\"php\",\"size\":1329,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', '', 'a', 'e', 'i', 'o', 'u', 'c', 'd', 'h', 'm', 'r', 't', 'v', 'x', '[?]', '[?]', '[?]', '[?]', '\\\\'', ',', '[?]', '[?]', '[?]', '[?]', '', '[?]', '[?]', '[?]', '?', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', 'A', ';', 'E', 'E', 'I', '[?]', 'O', '[?]', 'U', 'O', 'I', 'A', 'B', 'G', 'D', 'E', 'Z', 'E', 'Th', 'I', 'K', 'L', 'M', 'N', 'Ks', 'O', 'P', 'R', '[?]', 'S', 'T', 'U', 'Ph', 'Kh', 'Ps', 'O', 'I', 'U', 'a', 'e', 'e', 'i', 'u', 'a', 'b', 'g', 'd', 'e', 'z', 'e', 'th', 'i', 'k', 'l', 'm', 'n', 'x', 'o', 'p', 'r', 's', 's', 't', 'u', 'ph', 'kh', 'ps', 'o', 'i', 'u', 'o', 'u', 'o', '[?]', 'b', 'th', 'U', 'U', 'U', 'ph', 'p', '&', '[?]', '[?]', 'St', 'st', 'W', 'w', 'Q', 'q', 'Sp', 'sp', 'Sh', 'sh', 'F', 'f', 'Kh', 'kh', 'H', 'h', 'G', 'g', 'CH', 'ch', 'Ti', 'ti', 'k', 'r', 'c', 'j', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x08c.php\",\"ext\":\"php\",\"size\":2074,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yu ', 'Shui ', 'Shen ', 'Diao ', 'Chan ', 'Liang ', 'Zhun ', 'Sui ', 'Tan ', 'Shen ', 'Yi ', 'Mou ', 'Chen ', 'Die ', 'Huang ', 'Jian ', 'Xie ', 'Nue ', 'Ye ', 'Wei ', 'E ', 'Yu ', 'Xuan ', 'Chan ', 'Zi ', 'An ', 'Yan ', 'Di ', 'Mi ', 'Pian ', 'Xu ', 'Mo ', 'Dang ', 'Su ', 'Xie ', 'Yao ', 'Bang ', 'Shi ', 'Qian ', 'Mi ', 'Jin ', 'Man ', 'Zhe ', 'Jian ', 'Miu ', 'Tan ', 'Zen ', 'Qiao ', 'Lan ', 'Pu ', 'Jue ', 'Yan ', 'Qian ', 'Zhan ', 'Chen ', 'Gu ', 'Qian ', 'Hong ', 'Xia ', 'Jue ', 'Hong ', 'Han ', 'Hong ', 'Xi ', 'Xi ', 'Huo ', 'Liao ', 'Han ', 'Du ', 'Long ', 'Dou ', 'Jiang ', 'Qi ', 'Shi ', 'Li ', 'Deng ', 'Wan ', 'Bi ', 'Shu ', 'Xian ', 'Feng ', 'Zhi ', 'Zhi ', 'Yan ', 'Yan ', 'Shi ', 'Chu ', 'Hui ', 'Tun ', 'Yi ', 'Tun ', 'Yi ', 'Jian ', 'Ba ', 'Hou ', 'E ', 'Cu ', 'Xiang ', 'Huan ', 'Jian ', 'Ken ', 'Gai ', 'Qu ', 'Fu ', 'Xi ', 'Bin ', 'Hao ', 'Yu ', 'Zhu ', 'Jia ', '[?] ', 'Xi ', 'Bo ', 'Wen ', 'Huan ', 'Bin ', 'Di ', 'Zong ', 'Fen ', 'Yi ', 'Zhi ', 'Bao ', 'Chai ', 'Han ', 'Pi ', 'Na ', 'Pi ', 'Gou ', 'Na ', 'You ', 'Diao ', 'Mo ', 'Si ', 'Xiu ', 'Huan ', 'Kun ', 'He ', 'He ', 'Mo ', 'Han ', 'Mao ', 'Li ', 'Ni ', 'Bi ', 'Yu ', 'Jia ', 'Tuan ', 'Mao ', 'Pi ', 'Xi ', 'E ', 'Ju ', 'Mo ', 'Chu ', 'Tan ', 'Huan ', 'Jue ', 'Bei ', 'Zhen ', 'Yuan ', 'Fu ', 'Cai ', 'Gong ', 'Te ', 'Yi ', 'Hang ', 'Wan ', 'Pin ', 'Huo ', 'Fan ', 'Tan ', 'Guan ', 'Ze ', 'Zhi ', 'Er ', 'Zhu ', 'Shi ', 'Bi ', 'Zi ', 'Er ', 'Gui ', 'Pian ', 'Bian ', 'Mai ', 'Dai ', 'Sheng ', 'Kuang ', 'Fei ', 'Tie ', 'Yi ', 'Chi ', 'Mao ', 'He ', 'Bi ', 'Lu ', 'Ren ', 'Hui ', 'Gai ', 'Pian ', 'Zi ', 'Jia ', 'Xu ', 'Zei ', 'Jiao ', 'Gai ', 'Zang ', 'Jian ', 'Ying ', 'Xun ', 'Zhen ', 'She ', 'Bin ', 'Bin ', 'Qiu ', 'She ', 'Chuan ', 'Zang ', 'Zhou ', 'Lai ', 'Zan ', 'Si ', 'Chen ', 'Shang ', 'Tian ', 'Pei ', 'Geng ', 'Xian ', 'Mai ', 'Jian ', 'Sui ', 'Fu ', 'Tan ', 'Cong ', 'Cong ', 'Zhi ', 'Ji ', 'Zhang ', 'Du ', 'Jin ', 'Xiong ', 'Shun ', 'Yun ', 'Bao ', 'Zai ', 'Lai ', 'Feng ', 'Cang ', 'Ji ', 'Sheng ', 'Ai ', 'Zhuan ', 'Fu ', 'Gou ', 'Sai ', 'Ze ', 'Liao '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x00d.php\",\"ext\":\"php\",\"size\":1575,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'L', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bh', 'm', 'y', 'r', 'rr', 'l', 'll', 'lll', 'v', 'sh', 'ss', 's', 'h', '[?]', '[?]', '[?]', '[?]', 'aa', 'i', 'ii', 'u', 'uu', 'R', '[?]', '[?]', 'e', 'ee', 'ai', '', 'o', 'oo', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'RR', 'LL', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'N', 'H', '[?]', 'a', 'aa', 'ae', 'aae', 'i', 'ii', 'u', 'uu', 'R', 'RR', 'L', 'LL', 'e', 'ee', 'ai', 'o', 'oo', 'au', '[?]', '[?]', '[?]', 'k', 'kh', 'g', 'gh', 'ng', 'nng', 'c', 'ch', 'j', 'jh', 'ny', 'jny', 'nyj', 'tt', 'tth', 'dd', 'ddh', 'nn', 'nndd', 't', 'th', 'd', 'dh', 'n', '[?]', 'nd', 'p', 'ph', 'b', 'bh', 'm', 'mb', 'y', 'r', '[?]', 'l', '[?]', '[?]', 'v', 'sh', 'ss', 's', 'h', 'll', 'f', '[?]', '[?]', '[?]', '', '[?]', '[?]', '[?]', '[?]', 'aa', 'ae', 'aae', 'i', 'ii', 'u', '[?]', 'uu', '[?]', 'R', 'e', 'ee', 'ai', 'o', 'oo', 'au', 'L', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'RR', 'LL', ' . ', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0d6.php\",\"ext\":\"php\",\"size\":2209,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['hyeo', 'hyeog', 'hyeogg', 'hyeogs', 'hyeon', 'hyeonj', 'hyeonh', 'hyeod', 'hyeol', 'hyeolg', 'hyeolm', 'hyeolb', 'hyeols', 'hyeolt', 'hyeolp', 'hyeolh', 'hyeom', 'hyeob', 'hyeobs', 'hyeos', 'hyeoss', 'hyeong', 'hyeoj', 'hyeoc', 'hyeok', 'hyeot', 'hyeop', 'hyeoh', 'hye', 'hyeg', 'hyegg', 'hyegs', 'hyen', 'hyenj', 'hyenh', 'hyed', 'hyel', 'hyelg', 'hyelm', 'hyelb', 'hyels', 'hyelt', 'hyelp', 'hyelh', 'hyem', 'hyeb', 'hyebs', 'hyes', 'hyess', 'hyeng', 'hyej', 'hyec', 'hyek', 'hyet', 'hyep', 'hyeh', 'ho', 'hog', 'hogg', 'hogs', 'hon', 'honj', 'honh', 'hod', 'hol', 'holg', 'holm', 'holb', 'hols', 'holt', 'holp', 'holh', 'hom', 'hob', 'hobs', 'hos', 'hoss', 'hong', 'hoj', 'hoc', 'hok', 'hot', 'hop', 'hoh', 'hwa', 'hwag', 'hwagg', 'hwags', 'hwan', 'hwanj', 'hwanh', 'hwad', 'hwal', 'hwalg', 'hwalm', 'hwalb', 'hwals', 'hwalt', 'hwalp', 'hwalh', 'hwam', 'hwab', 'hwabs', 'hwas', 'hwass', 'hwang', 'hwaj', 'hwac', 'hwak', 'hwat', 'hwap', 'hwah', 'hwae', 'hwaeg', 'hwaegg', 'hwaegs', 'hwaen', 'hwaenj', 'hwaenh', 'hwaed', 'hwael', 'hwaelg', 'hwaelm', 'hwaelb', 'hwaels', 'hwaelt', 'hwaelp', 'hwaelh', 'hwaem', 'hwaeb', 'hwaebs', 'hwaes', 'hwaess', 'hwaeng', 'hwaej', 'hwaec', 'hwaek', 'hwaet', 'hwaep', 'hwaeh', 'hoe', 'hoeg', 'hoegg', 'hoegs', 'hoen', 'hoenj', 'hoenh', 'hoed', 'hoel', 'hoelg', 'hoelm', 'hoelb', 'hoels', 'hoelt', 'hoelp', 'hoelh', 'hoem', 'hoeb', 'hoebs', 'hoes', 'hoess', 'hoeng', 'hoej', 'hoec', 'hoek', 'hoet', 'hoep', 'hoeh', 'hyo', 'hyog', 'hyogg', 'hyogs', 'hyon', 'hyonj', 'hyonh', 'hyod', 'hyol', 'hyolg', 'hyolm', 'hyolb', 'hyols', 'hyolt', 'hyolp', 'hyolh', 'hyom', 'hyob', 'hyobs', 'hyos', 'hyoss', 'hyong', 'hyoj', 'hyoc', 'hyok', 'hyot', 'hyop', 'hyoh', 'hu', 'hug', 'hugg', 'hugs', 'hun', 'hunj', 'hunh', 'hud', 'hul', 'hulg', 'hulm', 'hulb', 'huls', 'hult', 'hulp', 'hulh', 'hum', 'hub', 'hubs', 'hus', 'huss', 'hung', 'huj', 'huc', 'huk', 'hut', 'hup', 'huh', 'hweo', 'hweog', 'hweogg', 'hweogs', 'hweon', 'hweonj', 'hweonh', 'hweod', 'hweol', 'hweolg', 'hweolm', 'hweolb', 'hweols', 'hweolt', 'hweolp', 'hweolh', 'hweom', 'hweob', 'hweobs', 'hweos', 'hweoss', 'hweong', 'hweoj', 'hweoc', 'hweok', 'hweot', 'hweop', 'hweoh', 'hwe', 'hweg', 'hwegg', 'hwegs'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x07a.php\",\"ext\":\"php\",\"size\":2113,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Xi ', 'Kao ', 'Lang ', 'Fu ', 'Ze ', 'Shui ', 'Lu ', 'Kun ', 'Gan ', 'Geng ', 'Ti ', 'Cheng ', 'Tu ', 'Shao ', 'Shui ', 'Ya ', 'Lun ', 'Lu ', 'Gu ', 'Zuo ', 'Ren ', 'Zhun ', 'Bang ', 'Bai ', 'Ji ', 'Zhi ', 'Zhi ', 'Kun ', 'Leng ', 'Peng ', 'Ke ', 'Bing ', 'Chou ', 'Zu ', 'Yu ', 'Su ', 'Lue ', '[?] ', 'Yi ', 'Xi ', 'Bian ', 'Ji ', 'Fu ', 'Bi ', 'Nuo ', 'Jie ', 'Zhong ', 'Zong ', 'Xu ', 'Cheng ', 'Dao ', 'Wen ', 'Lian ', 'Zi ', 'Yu ', 'Ji ', 'Xu ', 'Zhen ', 'Zhi ', 'Dao ', 'Jia ', 'Ji ', 'Gao ', 'Gao ', 'Gu ', 'Rong ', 'Sui ', 'You ', 'Ji ', 'Kang ', 'Mu ', 'Shan ', 'Men ', 'Zhi ', 'Ji ', 'Lu ', 'Su ', 'Ji ', 'Ying ', 'Wen ', 'Qiu ', 'Se ', '[?] ', 'Yi ', 'Huang ', 'Qie ', 'Ji ', 'Sui ', 'Xiao ', 'Pu ', 'Jiao ', 'Zhuo ', 'Tong ', 'Sai ', 'Lu ', 'Sui ', 'Nong ', 'Se ', 'Hui ', 'Rang ', 'Nuo ', 'Yu ', 'Bin ', 'Ji ', 'Tui ', 'Wen ', 'Cheng ', 'Huo ', 'Gong ', 'Lu ', 'Biao ', '[?] ', 'Rang ', 'Zhuo ', 'Li ', 'Zan ', 'Xue ', 'Wa ', 'Jiu ', 'Qiong ', 'Xi ', 'Qiong ', 'Kong ', 'Yu ', 'Sen ', 'Jing ', 'Yao ', 'Chuan ', 'Zhun ', 'Tu ', 'Lao ', 'Qie ', 'Zhai ', 'Yao ', 'Bian ', 'Bao ', 'Yao ', 'Bing ', 'Wa ', 'Zhu ', 'Jiao ', 'Qiao ', 'Diao ', 'Wu ', 'Gui ', 'Yao ', 'Zhi ', 'Chuang ', 'Yao ', 'Tiao ', 'Jiao ', 'Chuang ', 'Jiong ', 'Xiao ', 'Cheng ', 'Kou ', 'Cuan ', 'Wo ', 'Dan ', 'Ku ', 'Ke ', 'Zhui ', 'Xu ', 'Su ', 'Guan ', 'Kui ', 'Dou ', '[?] ', 'Yin ', 'Wo ', 'Wa ', 'Ya ', 'Yu ', 'Ju ', 'Qiong ', 'Yao ', 'Yao ', 'Tiao ', 'Chao ', 'Yu ', 'Tian ', 'Diao ', 'Ju ', 'Liao ', 'Xi ', 'Wu ', 'Kui ', 'Chuang ', 'Zhao ', '[?] ', 'Kuan ', 'Long ', 'Cheng ', 'Cui ', 'Piao ', 'Zao ', 'Cuan ', 'Qiao ', 'Qiong ', 'Dou ', 'Zao ', 'Long ', 'Qie ', 'Li ', 'Chu ', 'Shi ', 'Fou ', 'Qian ', 'Chu ', 'Hong ', 'Qi ', 'Qian ', 'Gong ', 'Shi ', 'Shu ', 'Miao ', 'Ju ', 'Zhan ', 'Zhu ', 'Ling ', 'Long ', 'Bing ', 'Jing ', 'Jing ', 'Zhang ', 'Yi ', 'Si ', 'Jun ', 'Hong ', 'Tong ', 'Song ', 'Jing ', 'Diao ', 'Yi ', 'Shu ', 'Jing ', 'Qu ', 'Jie ', 'Ping ', 'Duan ', 'Shao ', 'Zhuan ', 'Ceng ', 'Deng ', 'Cui ', 'Huai ', 'Jing ', 'Kan ', 'Jing ', 'Zhu ', 'Zhu ', 'Le ', 'Peng ', 'Yu ', 'Chi ', 'Gan '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x015.php\",\"ext\":\"php\",\"size\":1773,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['swa', 'swa', 'swaa', 'swaa', 'swaa', 's', 's', 'sw', 's', 'sk', 'skw', 'sW', 'spwa', 'stwa', 'skwa', 'scwa', 'she', 'shi', 'shii', 'sho', 'shoo', 'sha', 'shaa', 'shwe', 'shwe', 'shwi', 'shwi', 'shwii', 'shwii', 'shwo', 'shwo', 'shwoo', 'shwoo', 'shwa', 'shwa', 'shwaa', 'shwaa', 'sh', 'ye', 'yaai', 'yi', 'yii', 'yo', 'yoo', 'yoo', 'ya', 'yaa', 'ywe', 'ywe', 'ywi', 'ywi', 'ywii', 'ywii', 'ywo', 'ywo', 'ywoo', 'ywoo', 'ywa', 'ywa', 'ywaa', 'ywaa', 'ywaa', 'y', 'y', 'y', 'yi', 're', 're', 'le', 'raai', 'ri', 'rii', 'ro', 'roo', 'lo', 'ra', 'raa', 'la', 'rwaa', 'rwaa', 'r', 'r', 'r', 'fe', 'faai', 'fi', 'fii', 'fo', 'foo', 'fa', 'faa', 'fwaa', 'fwaa', 'f', 'the', 'the', 'thi', 'thi', 'thii', 'thii', 'tho', 'thoo', 'tha', 'thaa', 'thwaa', 'thwaa', 'th', 'tthe', 'tthi', 'ttho', 'ttha', 'tth', 'tye', 'tyi', 'tyo', 'tya', 'he', 'hi', 'hii', 'ho', 'hoo', 'ha', 'haa', 'h', 'h', 'hk', 'qaai', 'qi', 'qii', 'qo', 'qoo', 'qa', 'qaa', 'q', 'tlhe', 'tlhi', 'tlho', 'tlha', 're', 'ri', 'ro', 'ra', 'ngaai', 'ngi', 'ngii', 'ngo', 'ngoo', 'nga', 'ngaa', 'ng', 'nng', 'she', 'shi', 'sho', 'sha', 'the', 'thi', 'tho', 'tha', 'th', 'lhi', 'lhii', 'lho', 'lhoo', 'lha', 'lhaa', 'lh', 'the', 'thi', 'thii', 'tho', 'thoo', 'tha', 'thaa', 'th', 'b', 'e', 'i', 'o', 'a', 'we', 'wi', 'wo', 'wa', 'ne', 'ni', 'no', 'na', 'ke', 'ki', 'ko', 'ka', 'he', 'hi', 'ho', 'ha', 'ghu', 'gho', 'ghe', 'ghee', 'ghi', 'gha', 'ru', 'ro', 're', 'ree', 'ri', 'ra', 'wu', 'wo', 'we', 'wee', 'wi', 'wa', 'hwu', 'hwo', 'hwe', 'hwee', 'hwi', 'hwa', 'thu', 'tho', 'the', 'thee', 'thi', 'tha', 'ttu', 'tto', 'tte', 'ttee', 'tti', 'tta', 'pu', 'po', 'pe', 'pee', 'pi', 'pa', 'p', 'gu', 'go', 'ge', 'gee', 'gi', 'ga', 'khu', 'kho', 'khe', 'khee', 'khi', 'kha', 'kku', 'kko', 'kke', 'kkee', 'kki'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x007.php\",\"ext\":\"php\",\"size\":1576,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['\/\/', '\/', ',', '!', '!', '-', ',', ',', ';', '?', '~', '{', '}', '*', '[?]', '', '\\\\'', '', 'b', 'g', 'g', 'd', 'd', 'h', 'w', 'z', 'H', 't', 't', 'y', 'yh', 'k', 'l', 'm', 'n', 's', 's', '`', 'p', 'p', 'S', 'q', 'r', 'sh', 't', '[?]', '[?]', '[?]', 'a', 'a', 'a', 'A', 'A', 'A', 'e', 'e', 'e', 'E', 'i', 'i', 'u', 'u', 'u', 'o', '', '`', '\\\\'', '', '', 'X', 'Q', '@', '@', '|', '+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'h', 'sh', 'n', 'r', 'b', 'L', 'k', '\\\\'', 'v', 'm', 'f', 'dh', 'th', 'l', 'g', 'ny', 's', 'd', 'z', 't', 'y', 'p', 'j', 'ch', 'tt', 'hh', 'kh', 'th', 'z', 'sh', 's', 'd', 't', 'z', '`', 'gh', 'q', 'w', 'a', 'aa', 'i', 'ee', 'u', 'oo', 'e', 'ey', 'o', 'oan\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x098.php\",\"ext\":\"php\",\"size\":2089,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Hu ', 'Ye ', 'Ding ', 'Qing ', 'Pan ', 'Xiang ', 'Shun ', 'Han ', 'Xu ', 'Yi ', 'Xu ', 'Gu ', 'Song ', 'Kui ', 'Qi ', 'Hang ', 'Yu ', 'Wan ', 'Ban ', 'Dun ', 'Di ', 'Dan ', 'Pan ', 'Po ', 'Ling ', 'Ce ', 'Jing ', 'Lei ', 'He ', 'Qiao ', 'E ', 'E ', 'Wei ', 'Jie ', 'Gua ', 'Shen ', 'Yi ', 'Shen ', 'Hai ', 'Dui ', 'Pian ', 'Ping ', 'Lei ', 'Fu ', 'Jia ', 'Tou ', 'Hui ', 'Kui ', 'Jia ', 'Le ', 'Tian ', 'Cheng ', 'Ying ', 'Jun ', 'Hu ', 'Han ', 'Jing ', 'Tui ', 'Tui ', 'Pin ', 'Lai ', 'Tui ', 'Zi ', 'Zi ', 'Chui ', 'Ding ', 'Lai ', 'Yan ', 'Han ', 'Jian ', 'Ke ', 'Cui ', 'Jiong ', 'Qin ', 'Yi ', 'Sai ', 'Ti ', 'E ', 'E ', 'Yan ', 'Hun ', 'Kan ', 'Yong ', 'Zhuan ', 'Yan ', 'Xian ', 'Xin ', 'Yi ', 'Yuan ', 'Sang ', 'Dian ', 'Dian ', 'Jiang ', 'Ku ', 'Lei ', 'Liao ', 'Piao ', 'Yi ', 'Man ', 'Qi ', 'Rao ', 'Hao ', 'Qiao ', 'Gu ', 'Xun ', 'Qian ', 'Hui ', 'Zhan ', 'Ru ', 'Hong ', 'Bin ', 'Xian ', 'Pin ', 'Lu ', 'Lan ', 'Nie ', 'Quan ', 'Ye ', 'Ding ', 'Qing ', 'Han ', 'Xiang ', 'Shun ', 'Xu ', 'Xu ', 'Wan ', 'Gu ', 'Dun ', 'Qi ', 'Ban ', 'Song ', 'Hang ', 'Yu ', 'Lu ', 'Ling ', 'Po ', 'Jing ', 'Jie ', 'Jia ', 'Tian ', 'Han ', 'Ying ', 'Jiong ', 'Hai ', 'Yi ', 'Pin ', 'Hui ', 'Tui ', 'Han ', 'Ying ', 'Ying ', 'Ke ', 'Ti ', 'Yong ', 'E ', 'Zhuan ', 'Yan ', 'E ', 'Nie ', 'Man ', 'Dian ', 'Sang ', 'Hao ', 'Lei ', 'Zhan ', 'Ru ', 'Pin ', 'Quan ', 'Feng ', 'Biao ', 'Oroshi ', 'Fu ', 'Xia ', 'Zhan ', 'Biao ', 'Sa ', 'Ba ', 'Tai ', 'Lie ', 'Gua ', 'Xuan ', 'Shao ', 'Ju ', 'Bi ', 'Si ', 'Wei ', 'Yang ', 'Yao ', 'Sou ', 'Kai ', 'Sao ', 'Fan ', 'Liu ', 'Xi ', 'Liao ', 'Piao ', 'Piao ', 'Liu ', 'Biao ', 'Biao ', 'Biao ', 'Liao ', '[?] ', 'Se ', 'Feng ', 'Biao ', 'Feng ', 'Yang ', 'Zhan ', 'Biao ', 'Sa ', 'Ju ', 'Si ', 'Sou ', 'Yao ', 'Liu ', 'Piao ', 'Biao ', 'Biao ', 'Fei ', 'Fan ', 'Fei ', 'Fei ', 'Shi ', 'Shi ', 'Can ', 'Ji ', 'Ding ', 'Si ', 'Tuo ', 'Zhan ', 'Sun ', 'Xiang ', 'Tun ', 'Ren ', 'Yu ', 'Juan ', 'Chi ', 'Yin ', 'Fan ', 'Fan ', 'Sun ', 'Yin ', 'Zhu ', 'Yi ', 'Zhai ', 'Bi ', 'Jie ', 'Tao ', 'Liu ', 'Ci ', 'Tie ', 'Si ', 'Bao ', 'Shi ', 'Duo '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x080.php\",\"ext\":\"php\",\"size\":2095,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Yao ', 'Lao ', '[?] ', 'Kao ', 'Mao ', 'Zhe ', 'Qi ', 'Gou ', 'Gou ', 'Gou ', 'Die ', 'Die ', 'Er ', 'Shua ', 'Ruan ', 'Er ', 'Nai ', 'Zhuan ', 'Lei ', 'Ting ', 'Zi ', 'Geng ', 'Chao ', 'Hao ', 'Yun ', 'Pa ', 'Pi ', 'Chi ', 'Si ', 'Chu ', 'Jia ', 'Ju ', 'He ', 'Chu ', 'Lao ', 'Lun ', 'Ji ', 'Tang ', 'Ou ', 'Lou ', 'Nou ', 'Gou ', 'Pang ', 'Ze ', 'Lou ', 'Ji ', 'Lao ', 'Huo ', 'You ', 'Mo ', 'Huai ', 'Er ', 'Zhe ', 'Ting ', 'Ye ', 'Da ', 'Song ', 'Qin ', 'Yun ', 'Chi ', 'Dan ', 'Dan ', 'Hong ', 'Geng ', 'Zhi ', '[?] ', 'Nie ', 'Dan ', 'Zhen ', 'Che ', 'Ling ', 'Zheng ', 'You ', 'Wa ', 'Liao ', 'Long ', 'Zhi ', 'Ning ', 'Tiao ', 'Er ', 'Ya ', 'Die ', 'Gua ', '[?] ', 'Lian ', 'Hao ', 'Sheng ', 'Lie ', 'Pin ', 'Jing ', 'Ju ', 'Bi ', 'Di ', 'Guo ', 'Wen ', 'Xu ', 'Ping ', 'Cong ', 'Shikato ', '[?] ', 'Ting ', 'Yu ', 'Cong ', 'Kui ', 'Tsuraneru ', 'Kui ', 'Cong ', 'Lian ', 'Weng ', 'Kui ', 'Lian ', 'Lian ', 'Cong ', 'Ao ', 'Sheng ', 'Song ', 'Ting ', 'Kui ', 'Nie ', 'Zhi ', 'Dan ', 'Ning ', 'Qie ', 'Ji ', 'Ting ', 'Ting ', 'Long ', 'Yu ', 'Yu ', 'Zhao ', 'Si ', 'Su ', 'Yi ', 'Su ', 'Si ', 'Zhao ', 'Zhao ', 'Rou ', 'Yi ', 'Le ', 'Ji ', 'Qiu ', 'Ken ', 'Cao ', 'Ge ', 'Di ', 'Huan ', 'Huang ', 'Yi ', 'Ren ', 'Xiao ', 'Ru ', 'Zhou ', 'Yuan ', 'Du ', 'Gang ', 'Rong ', 'Gan ', 'Cha ', 'Wo ', 'Chang ', 'Gu ', 'Zhi ', 'Han ', 'Fu ', 'Fei ', 'Fen ', 'Pei ', 'Pang ', 'Jian ', 'Fang ', 'Zhun ', 'You ', 'Na ', 'Hang ', 'Ken ', 'Ran ', 'Gong ', 'Yu ', 'Wen ', 'Yao ', 'Jin ', 'Pi ', 'Qian ', 'Xi ', 'Xi ', 'Fei ', 'Ken ', 'Jing ', 'Tai ', 'Shen ', 'Zhong ', 'Zhang ', 'Xie ', 'Shen ', 'Wei ', 'Zhou ', 'Die ', 'Dan ', 'Fei ', 'Ba ', 'Bo ', 'Qu ', 'Tian ', 'Bei ', 'Gua ', 'Tai ', 'Zi ', 'Ku ', 'Zhi ', 'Ni ', 'Ping ', 'Zi ', 'Fu ', 'Pang ', 'Zhen ', 'Xian ', 'Zuo ', 'Pei ', 'Jia ', 'Sheng ', 'Zhi ', 'Bao ', 'Mu ', 'Qu ', 'Hu ', 'Ke ', 'Yi ', 'Yin ', 'Xu ', 'Yang ', 'Long ', 'Dong ', 'Ka ', 'Lu ', 'Jing ', 'Nu ', 'Yan ', 'Pang ', 'Kua ', 'Yi ', 'Guang ', 'Gai ', 'Ge ', 'Dong ', 'Zhi ', 'Xiao ', 'Xiong ', 'Xiong ', 'Er ', 'E ', 'Xing ', 'Pian ', 'Neng ', 'Zi ', 'Gui '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x084.php\",\"ext\":\"php\",\"size\":2090,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Hu ', 'Qi ', 'He ', 'Cui ', 'Tao ', 'Chun ', 'Bei ', 'Chang ', 'Huan ', 'Fei ', 'Lai ', 'Qi ', 'Meng ', 'Ping ', 'Wei ', 'Dan ', 'Sha ', 'Huan ', 'Yan ', 'Yi ', 'Tiao ', 'Qi ', 'Wan ', 'Ce ', 'Nai ', 'Kutabireru ', 'Tuo ', 'Jiu ', 'Tie ', 'Luo ', '[?] ', '[?] ', 'Meng ', '[?] ', 'Yaji ', '[?] ', 'Ying ', 'Ying ', 'Ying ', 'Xiao ', 'Sa ', 'Qiu ', 'Ke ', 'Xiang ', 'Wan ', 'Yu ', 'Yu ', 'Fu ', 'Lian ', 'Xuan ', 'Yuan ', 'Nan ', 'Ze ', 'Wo ', 'Chun ', 'Xiao ', 'Yu ', 'Pian ', 'Mao ', 'An ', 'E ', 'Luo ', 'Ying ', 'Huo ', 'Gua ', 'Jiang ', 'Mian ', 'Zuo ', 'Zuo ', 'Ju ', 'Bao ', 'Rou ', 'Xi ', 'Xie ', 'An ', 'Qu ', 'Jian ', 'Fu ', 'Lu ', 'Jing ', 'Pen ', 'Feng ', 'Hong ', 'Hong ', 'Hou ', 'Yan ', 'Tu ', 'Zhu ', 'Zi ', 'Xiang ', 'Shen ', 'Ge ', 'Jie ', 'Jing ', 'Mi ', 'Huang ', 'Shen ', 'Pu ', 'Gai ', 'Dong ', 'Zhou ', 'Qian ', 'Wei ', 'Bo ', 'Wei ', 'Pa ', 'Ji ', 'Hu ', 'Zang ', 'Jia ', 'Duan ', 'Yao ', 'Jun ', 'Cong ', 'Quan ', 'Wei ', 'Xian ', 'Kui ', 'Ting ', 'Hun ', 'Xi ', 'Shi ', 'Qi ', 'Lan ', 'Zong ', 'Yao ', 'Yuan ', 'Mei ', 'Yun ', 'Shu ', 'Di ', 'Zhuan ', 'Guan ', 'Sukumo ', 'Xue ', 'Chan ', 'Kai ', 'Kui ', '[?] ', 'Jiang ', 'Lou ', 'Wei ', 'Pai ', '[?] ', 'Sou ', 'Yin ', 'Shi ', 'Chun ', 'Shi ', 'Yun ', 'Zhen ', 'Lang ', 'Nu ', 'Meng ', 'He ', 'Que ', 'Suan ', 'Yuan ', 'Li ', 'Ju ', 'Xi ', 'Pang ', 'Chu ', 'Xu ', 'Tu ', 'Liu ', 'Wo ', 'Zhen ', 'Qian ', 'Zu ', 'Po ', 'Cuo ', 'Yuan ', 'Chu ', 'Yu ', 'Kuai ', 'Pan ', 'Pu ', 'Pu ', 'Na ', 'Shuo ', 'Xi ', 'Fen ', 'Yun ', 'Zheng ', 'Jian ', 'Ji ', 'Ruo ', 'Cang ', 'En ', 'Mi ', 'Hao ', 'Sun ', 'Zhen ', 'Ming ', 'Sou ', 'Xu ', 'Liu ', 'Xi ', 'Gu ', 'Lang ', 'Rong ', 'Weng ', 'Gai ', 'Cuo ', 'Shi ', 'Tang ', 'Luo ', 'Ru ', 'Suo ', 'Xian ', 'Bei ', 'Yao ', 'Gui ', 'Bi ', 'Zong ', 'Gun ', 'Za ', 'Xiu ', 'Ce ', 'Hai ', 'Lan ', '[?] ', 'Ji ', 'Li ', 'Can ', 'Lang ', 'Yu ', '[?] ', 'Ying ', 'Mo ', 'Diao ', 'Tiao ', 'Mao ', 'Tong ', 'Zhu ', 'Peng ', 'An ', 'Lian ', 'Cong ', 'Xi ', 'Ping ', 'Qiu ', 'Jin ', 'Chun ', 'Jie ', 'Wei ', 'Tui ', 'Cao ', 'Yu ', 'Yi ', 'Ji ', 'Liao ', 'Bi ', 'Lu ', 'Su '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0a3.php\",\"ext\":\"php\",\"size\":1965,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['nzup', 'nzurx', 'nzur', 'nzyt', 'nzyx', 'nzy', 'nzyp', 'nzyrx', 'nzyr', 'sit', 'six', 'si', 'sip', 'siex', 'sie', 'siep', 'sat', 'sax', 'sa', 'sap', 'suox', 'suo', 'suop', 'sot', 'sox', 'so', 'sop', 'sex', 'se', 'sep', 'sut', 'sux', 'su', 'sup', 'surx', 'sur', 'syt', 'syx', 'sy', 'syp', 'syrx', 'syr', 'ssit', 'ssix', 'ssi', 'ssip', 'ssiex', 'ssie', 'ssiep', 'ssat', 'ssax', 'ssa', 'ssap', 'ssot', 'ssox', 'sso', 'ssop', 'ssex', 'sse', 'ssep', 'ssut', 'ssux', 'ssu', 'ssup', 'ssyt', 'ssyx', 'ssy', 'ssyp', 'ssyrx', 'ssyr', 'zhat', 'zhax', 'zha', 'zhap', 'zhuox', 'zhuo', 'zhuop', 'zhot', 'zhox', 'zho', 'zhop', 'zhet', 'zhex', 'zhe', 'zhep', 'zhut', 'zhux', 'zhu', 'zhup', 'zhurx', 'zhur', 'zhyt', 'zhyx', 'zhy', 'zhyp', 'zhyrx', 'zhyr', 'chat', 'chax', 'cha', 'chap', 'chuot', 'chuox', 'chuo', 'chuop', 'chot', 'chox', 'cho', 'chop', 'chet', 'chex', 'che', 'chep', 'chux', 'chu', 'chup', 'churx', 'chur', 'chyt', 'chyx', 'chy', 'chyp', 'chyrx', 'chyr', 'rrax', 'rra', 'rruox', 'rruo', 'rrot', 'rrox', 'rro', 'rrop', 'rret', 'rrex', 'rre', 'rrep', 'rrut', 'rrux', 'rru', 'rrup', 'rrurx', 'rrur', 'rryt', 'rryx', 'rry', 'rryp', 'rryrx', 'rryr', 'nrat', 'nrax', 'nra', 'nrap', 'nrox', 'nro', 'nrop', 'nret', 'nrex', 'nre', 'nrep', 'nrut', 'nrux', 'nru', 'nrup', 'nrurx', 'nrur', 'nryt', 'nryx', 'nry', 'nryp', 'nryrx', 'nryr', 'shat', 'shax', 'sha', 'shap', 'shuox', 'shuo', 'shuop', 'shot', 'shox', 'sho', 'shop', 'shet', 'shex', 'she', 'shep', 'shut', 'shux', 'shu', 'shup', 'shurx', 'shur', 'shyt', 'shyx', 'shy', 'shyp', 'shyrx', 'shyr', 'rat', 'rax', 'ra', 'rap', 'ruox', 'ruo', 'ruop', 'rot', 'rox', 'ro', 'rop', 'rex', 're', 'rep', 'rut', 'rux', 'ru', 'rup', 'rurx', 'rur', 'ryt', 'ryx', 'ry', 'ryp', 'ryrx', 'ryr', 'jit', 'jix', 'ji', 'jip', 'jiet', 'jiex', 'jie', 'jiep', 'juot', 'juox', 'juo', 'juop', 'jot', 'jox', 'jo', 'jop', 'jut', 'jux', 'ju', 'jup', 'jurx', 'jur', 'jyt', 'jyx', 'jy', 'jyp', 'jyrx', 'jyr', 'qit', 'qix', 'qi', 'qip'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x021.php\",\"ext\":\"php\",\"size\":1466,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return [' a\/c ', ' a\/s ', 'C', '', '', ' c\/o ', ' c\/u ', '', '', '', 'g', 'H', 'H', 'H', 'h', '', 'I', 'I', 'L', 'l', '', 'N', 'No. ', '', '', 'P', 'Q', 'R', 'R', 'R', '', '', '(sm)', 'TEL', '(tm)', '', 'Z', '', '', '', 'Z', '', 'K', 'A', 'B', 'C', 'e', 'e', 'E', 'F', 'F', 'M', 'o', '', '', '', '', 'i', '', 'FAX', '', '', '', '', '[?]', '[?]', '[?]', '[?]', '[?]', 'D', 'd', 'e', 'i', 'j', '[?]', '[?]', '[?]', '[?]', 'F', '[?]', ' 1\/7 ', ' 1\/9 ', ' 1\/10 ', ' 1\/3 ', ' 2\/3 ', ' 1\/5 ', ' 2\/5 ', ' 3\/5 ', ' 4\/5 ', ' 1\/6 ', ' 5\/6 ', ' 1\/8 ', ' 3\/8 ', ' 5\/8 ', ' 7\/8 ', ' 1\/', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'L', 'C', 'D', 'M', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix', 'x', 'xi', 'xii', 'l', 'c', 'd', 'm', '(D', 'D)', '((|))', ')', '[?]', '[?]', '[?]', '[?]', '[?]', ' 0\/3 ', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '-', '|', '-', '|', '-', '|', '\\\\\\\\', '\/', '\\\\\\\\', '\/', '-', '-', '~', '~', '-', '|', '-', '|', '-', '-', '-', '|', '-', '|', '|', '-', '-', '-', '-', '-', '-', '|', '|', '|', '|', '|', '|', '|', '^', 'V', '\\\\\\\\', '=', 'V', '^', '-', '-', '|', '|', '-', '-', '|', '|', '=', '|', '=', '=', '|', '=', '|', '=', '=', '=', '=', '=', '=', '|', '=', '|', '=', '|', '\\\\\\\\', '\/', '\\\\\\\\', '\/', '=', '=', '~', '~', '|', '|', '-', '|', '-', '|', '-', '-', '-', '|', '-', '|', '|', '|', '|', '|', '|', '|', '-', '\\\\\\\\', '\\\\\\\\', '|', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x08f.php\",\"ext\":\"php\",\"size\":2095,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Er ', 'Qiong ', 'Ju ', 'Jiao ', 'Guang ', 'Lu ', 'Kai ', 'Quan ', 'Zhou ', 'Zai ', 'Zhi ', 'She ', 'Liang ', 'Yu ', 'Shao ', 'You ', 'Huan ', 'Yun ', 'Zhe ', 'Wan ', 'Fu ', 'Qing ', 'Zhou ', 'Ni ', 'Ling ', 'Zhe ', 'Zhan ', 'Liang ', 'Zi ', 'Hui ', 'Wang ', 'Chuo ', 'Guo ', 'Kan ', 'Yi ', 'Peng ', 'Qian ', 'Gun ', 'Nian ', 'Pian ', 'Guan ', 'Bei ', 'Lun ', 'Pai ', 'Liang ', 'Ruan ', 'Rou ', 'Ji ', 'Yang ', 'Xian ', 'Chuan ', 'Cou ', 'Qun ', 'Ge ', 'You ', 'Hong ', 'Shu ', 'Fu ', 'Zi ', 'Fu ', 'Wen ', 'Ben ', 'Zhan ', 'Yu ', 'Wen ', 'Tao ', 'Gu ', 'Zhen ', 'Xia ', 'Yuan ', 'Lu ', 'Jiu ', 'Chao ', 'Zhuan ', 'Wei ', 'Hun ', 'Sori ', 'Che ', 'Jiao ', 'Zhan ', 'Pu ', 'Lao ', 'Fen ', 'Fan ', 'Lin ', 'Ge ', 'Se ', 'Kan ', 'Huan ', 'Yi ', 'Ji ', 'Dui ', 'Er ', 'Yu ', 'Xian ', 'Hong ', 'Lei ', 'Pei ', 'Li ', 'Li ', 'Lu ', 'Lin ', 'Che ', 'Ya ', 'Gui ', 'Xuan ', 'Di ', 'Ren ', 'Zhuan ', 'E ', 'Lun ', 'Ruan ', 'Hong ', 'Ku ', 'Ke ', 'Lu ', 'Zhou ', 'Zhi ', 'Yi ', 'Hu ', 'Zhen ', 'Li ', 'Yao ', 'Qing ', 'Shi ', 'Zai ', 'Zhi ', 'Jiao ', 'Zhou ', 'Quan ', 'Lu ', 'Jiao ', 'Zhe ', 'Fu ', 'Liang ', 'Nian ', 'Bei ', 'Hui ', 'Gun ', 'Wang ', 'Liang ', 'Chuo ', 'Zi ', 'Cou ', 'Fu ', 'Ji ', 'Wen ', 'Shu ', 'Pei ', 'Yuan ', 'Xia ', 'Zhan ', 'Lu ', 'Che ', 'Lin ', 'Xin ', 'Gu ', 'Ci ', 'Ci ', 'Pi ', 'Zui ', 'Bian ', 'La ', 'La ', 'Ci ', 'Xue ', 'Ban ', 'Bian ', 'Bian ', 'Bian ', '[?] ', 'Bian ', 'Ban ', 'Ci ', 'Bian ', 'Bian ', 'Chen ', 'Ru ', 'Nong ', 'Nong ', 'Zhen ', 'Chuo ', 'Chuo ', 'Suberu ', 'Reng ', 'Bian ', 'Bian ', 'Sip ', 'Ip ', 'Liao ', 'Da ', 'Chan ', 'Gan ', 'Qian ', 'Yu ', 'Yu ', 'Qi ', 'Xun ', 'Yi ', 'Guo ', 'Mai ', 'Qi ', 'Za ', 'Wang ', 'Jia ', 'Zhun ', 'Ying ', 'Ti ', 'Yun ', 'Jin ', 'Hang ', 'Ya ', 'Fan ', 'Wu ', 'Da ', 'E ', 'Huan ', 'Zhe ', 'Totemo ', 'Jin ', 'Yuan ', 'Wei ', 'Lian ', 'Chi ', 'Che ', 'Ni ', 'Tiao ', 'Zhi ', 'Yi ', 'Jiong ', 'Jia ', 'Chen ', 'Dai ', 'Er ', 'Di ', 'Po ', 'Wang ', 'Die ', 'Ze ', 'Tao ', 'Shu ', 'Tuo ', 'Kep ', 'Jing ', 'Hui ', 'Tong ', 'You ', 'Mi ', 'Beng ', 'Ji ', 'Nai ', 'Yi ', 'Jie ', 'Zhui ', 'Lie ', 'Xun '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x069.php\",\"ext\":\"php\",\"size\":2117,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Wan ', 'Guo ', 'Lu ', 'Hao ', 'Jie ', 'Yi ', 'Chou ', 'Ju ', 'Ju ', 'Cheng ', 'Zuo ', 'Liang ', 'Qiang ', 'Zhi ', 'Zhui ', 'Ya ', 'Ju ', 'Bei ', 'Jiao ', 'Zhuo ', 'Zi ', 'Bin ', 'Peng ', 'Ding ', 'Chu ', 'Chang ', 'Kunugi ', 'Momiji ', 'Jian ', 'Gui ', 'Xi ', 'Du ', 'Qian ', 'Kunugi ', 'Soko ', 'Shide ', 'Luo ', 'Zhi ', 'Ken ', 'Myeng ', 'Tafu ', '[?] ', 'Peng ', 'Zhan ', '[?] ', 'Tuo ', 'Sen ', 'Duo ', 'Ye ', 'Fou ', 'Wei ', 'Wei ', 'Duan ', 'Jia ', 'Zong ', 'Jian ', 'Yi ', 'Shen ', 'Xi ', 'Yan ', 'Yan ', 'Chuan ', 'Zhan ', 'Chun ', 'Yu ', 'He ', 'Zha ', 'Wo ', 'Pian ', 'Bi ', 'Yao ', 'Huo ', 'Xu ', 'Ruo ', 'Yang ', 'La ', 'Yan ', 'Ben ', 'Hun ', 'Kui ', 'Jie ', 'Kui ', 'Si ', 'Feng ', 'Xie ', 'Tuo ', 'Zhi ', 'Jian ', 'Mu ', 'Mao ', 'Chu ', 'Hu ', 'Hu ', 'Lian ', 'Leng ', 'Ting ', 'Nan ', 'Yu ', 'You ', 'Mei ', 'Song ', 'Xuan ', 'Xuan ', 'Ying ', 'Zhen ', 'Pian ', 'Ye ', 'Ji ', 'Jie ', 'Ye ', 'Chu ', 'Shun ', 'Yu ', 'Cou ', 'Wei ', 'Mei ', 'Di ', 'Ji ', 'Jie ', 'Kai ', 'Qiu ', 'Ying ', 'Rou ', 'Heng ', 'Lou ', 'Le ', 'Hazou ', 'Katsura ', 'Pin ', 'Muro ', 'Gai ', 'Tan ', 'Lan ', 'Yun ', 'Yu ', 'Chen ', 'Lu ', 'Ju ', 'Sakaki ', '[?] ', 'Pi ', 'Xie ', 'Jia ', 'Yi ', 'Zhan ', 'Fu ', 'Nai ', 'Mi ', 'Lang ', 'Rong ', 'Gu ', 'Jian ', 'Ju ', 'Ta ', 'Yao ', 'Zhen ', 'Bang ', 'Sha ', 'Yuan ', 'Zi ', 'Ming ', 'Su ', 'Jia ', 'Yao ', 'Jie ', 'Huang ', 'Gan ', 'Fei ', 'Zha ', 'Qian ', 'Ma ', 'Sun ', 'Yuan ', 'Xie ', 'Rong ', 'Shi ', 'Zhi ', 'Cui ', 'Yun ', 'Ting ', 'Liu ', 'Rong ', 'Tang ', 'Que ', 'Zhai ', 'Si ', 'Sheng ', 'Ta ', 'Ke ', 'Xi ', 'Gu ', 'Qi ', 'Kao ', 'Gao ', 'Sun ', 'Pan ', 'Tao ', 'Ge ', 'Xun ', 'Dian ', 'Nou ', 'Ji ', 'Shuo ', 'Gou ', 'Chui ', 'Qiang ', 'Cha ', 'Qian ', 'Huai ', 'Mei ', 'Xu ', 'Gang ', 'Gao ', 'Zhuo ', 'Tuo ', 'Hashi ', 'Yang ', 'Dian ', 'Jia ', 'Jian ', 'Zui ', 'Kashi ', 'Ori ', 'Bin ', 'Zhu ', '[?] ', 'Xi ', 'Qi ', 'Lian ', 'Hui ', 'Yong ', 'Qian ', 'Guo ', 'Gai ', 'Gai ', 'Tuan ', 'Hua ', 'Cu ', 'Sen ', 'Cui ', 'Beng ', 'You ', 'Hu ', 'Jiang ', 'Hu ', 'Huan ', 'Kui ', 'Yi ', 'Nie ', 'Gao ', 'Kang ', 'Gui ', 'Gui ', 'Cao ', 'Man ', 'Jin '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0a4.php\",\"ext\":\"php\",\"size\":1891,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['qiet', 'qiex', 'qie', 'qiep', 'quot', 'quox', 'quo', 'quop', 'qot', 'qox', 'qo', 'qop', 'qut', 'qux', 'qu', 'qup', 'qurx', 'qur', 'qyt', 'qyx', 'qy', 'qyp', 'qyrx', 'qyr', 'jjit', 'jjix', 'jji', 'jjip', 'jjiet', 'jjiex', 'jjie', 'jjiep', 'jjuox', 'jjuo', 'jjuop', 'jjot', 'jjox', 'jjo', 'jjop', 'jjut', 'jjux', 'jju', 'jjup', 'jjurx', 'jjur', 'jjyt', 'jjyx', 'jjy', 'jjyp', 'njit', 'njix', 'nji', 'njip', 'njiet', 'njiex', 'njie', 'njiep', 'njuox', 'njuo', 'njot', 'njox', 'njo', 'njop', 'njux', 'nju', 'njup', 'njurx', 'njur', 'njyt', 'njyx', 'njy', 'njyp', 'njyrx', 'njyr', 'nyit', 'nyix', 'nyi', 'nyip', 'nyiet', 'nyiex', 'nyie', 'nyiep', 'nyuox', 'nyuo', 'nyuop', 'nyot', 'nyox', 'nyo', 'nyop', 'nyut', 'nyux', 'nyu', 'nyup', 'xit', 'xix', 'xi', 'xip', 'xiet', 'xiex', 'xie', 'xiep', 'xuox', 'xuo', 'xot', 'xox', 'xo', 'xop', 'xyt', 'xyx', 'xy', 'xyp', 'xyrx', 'xyr', 'yit', 'yix', 'yi', 'yip', 'yiet', 'yiex', 'yie', 'yiep', 'yuot', 'yuox', 'yuo', 'yuop', 'yot', 'yox', 'yo', 'yop', 'yut', 'yux', 'yu', 'yup', 'yurx', 'yur', 'yyt', 'yyx', 'yy', 'yyp', 'yyrx', 'yyr', '[?]', '[?]', '[?]', 'Qot', 'Li', 'Kit', 'Nyip', 'Cyp', 'Ssi', 'Ggop', 'Gep', 'Mi', 'Hxit', 'Lyr', 'Bbut', 'Mop', 'Yo', 'Put', 'Hxuo', 'Tat', 'Ga', '[?]', '[?]', 'Ddur', 'Bur', 'Gguo', 'Nyop', 'Tu', 'Op', 'Jjut', 'Zot', 'Pyt', 'Hmo', 'Yit', 'Vur', 'Shy', 'Vep', 'Za', 'Jo', '[?]', 'Jjy', 'Got', 'Jjie', 'Wo', 'Du', 'Shur', 'Lie', 'Cy', 'Cuop', 'Cip', 'Hxop', 'Shat', '[?]', 'Shop', 'Che', 'Zziet', '[?]', 'Ke', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x00f.php\",\"ext\":\"php\",\"size\":1515,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['AUM', '', '', '', '', '', '', '', ' \/\/ ', ' * ', '', '-', ' \/ ', ' \/ ', ' \/\/ ', ' -\/ ', ' +\/ ', ' X\/ ', ' \/XX\/ ', ' \/X\/ ', ', ', '', '', '', '', '', '', '', '', '', '', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.5', '1.5', '2.5', '3.5', '4.5', '5.5', '6.5', '7.5', '8.5', '-.5', '+', '*', '^', '_', '', '~', '[?]', ']', '[[', ']]', '', '', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', '[?]', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', 'p', 'ph', 'b', 'bh', 'm', 'ts', 'tsh', 'dz', 'dzh', 'w', 'zh', 'z', '\\\\'', 'y', 'r', 'l', 'sh', 'ssh', 's', 'h', 'a', 'kss', 'r', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', 'L', 'LL', 'e', 'ee', 'o', 'oo', 'M', 'H', 'i', 'ii', '', '', '', '', '', '', '', '', '', '', '[?]', '[?]', '[?]', '[?]', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', '[?]', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', 'p', 'ph', 'b', 'bh', 'm', 'ts', 'tsh', 'dz', 'dzh', 'w', 'zh', 'z', '\\\\'', 'y', 'r', 'l', 'sh', 'ss', 's', 'h', 'a', 'kss', 'w', 'y', 'r', '[?]', 'X', ' :X: ', ' \/O\/ ', ' \/o\/ ', ' \\\\\\\\o\\\\\\\\ ', ' (O) ', '', '', '', '', '', '', '', '', '', '[?]', '[?]', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x086.php\",\"ext\":\"php\",\"size\":2058,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Tuo ', 'Wu ', 'Rui ', 'Rui ', 'Qi ', 'Heng ', 'Lu ', 'Su ', 'Tui ', 'Mang ', 'Yun ', 'Pin ', 'Yu ', 'Xun ', 'Ji ', 'Jiong ', 'Xian ', 'Mo ', 'Hagi ', 'Su ', 'Jiong ', '[?] ', 'Nie ', 'Bo ', 'Rang ', 'Yi ', 'Xian ', 'Yu ', 'Ju ', 'Lian ', 'Lian ', 'Yin ', 'Qiang ', 'Ying ', 'Long ', 'Tong ', 'Wei ', 'Yue ', 'Ling ', 'Qu ', 'Yao ', 'Fan ', 'Mi ', 'Lan ', 'Kui ', 'Lan ', 'Ji ', 'Dang ', 'Katsura ', 'Lei ', 'Lei ', 'Hua ', 'Feng ', 'Zhi ', 'Wei ', 'Kui ', 'Zhan ', 'Huai ', 'Li ', 'Ji ', 'Mi ', 'Lei ', 'Huai ', 'Luo ', 'Ji ', 'Kui ', 'Lu ', 'Jian ', 'San ', '[?] ', 'Lei ', 'Quan ', 'Xiao ', 'Yi ', 'Luan ', 'Men ', 'Bie ', 'Hu ', 'Hu ', 'Lu ', 'Nue ', 'Lu ', 'Si ', 'Xiao ', 'Qian ', 'Chu ', 'Hu ', 'Xu ', 'Cuo ', 'Fu ', 'Xu ', 'Xu ', 'Lu ', 'Hu ', 'Yu ', 'Hao ', 'Jiao ', 'Ju ', 'Guo ', 'Bao ', 'Yan ', 'Zhan ', 'Zhan ', 'Kui ', 'Ban ', 'Xi ', 'Shu ', 'Chong ', 'Qiu ', 'Diao ', 'Ji ', 'Qiu ', 'Cheng ', 'Shi ', '[?] ', 'Di ', 'Zhe ', 'She ', 'Yu ', 'Gan ', 'Zi ', 'Hong ', 'Hui ', 'Meng ', 'Ge ', 'Sui ', 'Xia ', 'Chai ', 'Shi ', 'Yi ', 'Ma ', 'Xiang ', 'Fang ', 'E ', 'Pa ', 'Chi ', 'Qian ', 'Wen ', 'Wen ', 'Rui ', 'Bang ', 'Bi ', 'Yue ', 'Yue ', 'Jun ', 'Qi ', 'Ran ', 'Yin ', 'Qi ', 'Tian ', 'Yuan ', 'Jue ', 'Hui ', 'Qin ', 'Qi ', 'Zhong ', 'Ya ', 'Ci ', 'Mu ', 'Wang ', 'Fen ', 'Fen ', 'Hang ', 'Gong ', 'Zao ', 'Fu ', 'Ran ', 'Jie ', 'Fu ', 'Chi ', 'Dou ', 'Piao ', 'Xian ', 'Ni ', 'Te ', 'Qiu ', 'You ', 'Zha ', 'Ping ', 'Chi ', 'You ', 'He ', 'Han ', 'Ju ', 'Li ', 'Fu ', 'Ran ', 'Zha ', 'Gou ', 'Pi ', 'Bo ', 'Xian ', 'Zhu ', 'Diao ', 'Bie ', 'Bing ', 'Gu ', 'Ran ', 'Qu ', 'She ', 'Tie ', 'Ling ', 'Gu ', 'Dan ', 'Gu ', 'Ying ', 'Li ', 'Cheng ', 'Qu ', 'Mou ', 'Ge ', 'Ci ', 'Hui ', 'Hui ', 'Mang ', 'Fu ', 'Yang ', 'Wa ', 'Lie ', 'Zhu ', 'Yi ', 'Xian ', 'Kuo ', 'Jiao ', 'Li ', 'Yi ', 'Ping ', 'Ji ', 'Ha ', 'She ', 'Yi ', 'Wang ', 'Mo ', 'Qiong ', 'Qie ', 'Gui ', 'Gong ', 'Zhi ', 'Man ', 'Ebi ', 'Zhi ', 'Jia ', 'Rao ', 'Si ', 'Qi ', 'Xing ', 'Lie ', 'Qiu ', 'Shao ', 'Yong ', 'Jia ', 'Shui ', 'Che ', 'Bai ', 'E ', 'Han '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x06d.php\",\"ext\":\"php\",\"size\":2095,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Zhou ', 'Ji ', 'Yi ', 'Hui ', 'Hui ', 'Zui ', 'Cheng ', 'Yin ', 'Wei ', 'Hou ', 'Jian ', 'Yang ', 'Lie ', 'Si ', 'Ji ', 'Er ', 'Xing ', 'Fu ', 'Sa ', 'Suo ', 'Zhi ', 'Yin ', 'Wu ', 'Xi ', 'Kao ', 'Zhu ', 'Jiang ', 'Luo ', '[?] ', 'An ', 'Dong ', 'Yi ', 'Mou ', 'Lei ', 'Yi ', 'Mi ', 'Quan ', 'Jin ', 'Mo ', 'Wei ', 'Xiao ', 'Xie ', 'Hong ', 'Xu ', 'Shuo ', 'Kuang ', 'Tao ', 'Qie ', 'Ju ', 'Er ', 'Zhou ', 'Ru ', 'Ping ', 'Xun ', 'Xiong ', 'Zhi ', 'Guang ', 'Huan ', 'Ming ', 'Huo ', 'Wa ', 'Qia ', 'Pai ', 'Wu ', 'Qu ', 'Liu ', 'Yi ', 'Jia ', 'Jing ', 'Qian ', 'Jiang ', 'Jiao ', 'Cheng ', 'Shi ', 'Zhuo ', 'Ce ', 'Pal ', 'Kuai ', 'Ji ', 'Liu ', 'Chan ', 'Hun ', 'Hu ', 'Nong ', 'Xun ', 'Jin ', 'Lie ', 'Qiu ', 'Wei ', 'Zhe ', 'Jun ', 'Han ', 'Bang ', 'Mang ', 'Zhuo ', 'You ', 'Xi ', 'Bo ', 'Dou ', 'Wan ', 'Hong ', 'Yi ', 'Pu ', 'Ying ', 'Lan ', 'Hao ', 'Lang ', 'Han ', 'Li ', 'Geng ', 'Fu ', 'Wu ', 'Lian ', 'Chun ', 'Feng ', 'Yi ', 'Yu ', 'Tong ', 'Lao ', 'Hai ', 'Jin ', 'Jia ', 'Chong ', 'Weng ', 'Mei ', 'Sui ', 'Cheng ', 'Pei ', 'Xian ', 'Shen ', 'Tu ', 'Kun ', 'Pin ', 'Nie ', 'Han ', 'Jing ', 'Xiao ', 'She ', 'Nian ', 'Tu ', 'Yong ', 'Xiao ', 'Xian ', 'Ting ', 'E ', 'Su ', 'Tun ', 'Juan ', 'Cen ', 'Ti ', 'Li ', 'Shui ', 'Si ', 'Lei ', 'Shui ', 'Tao ', 'Du ', 'Lao ', 'Lai ', 'Lian ', 'Wei ', 'Wo ', 'Yun ', 'Huan ', 'Di ', '[?] ', 'Run ', 'Jian ', 'Zhang ', 'Se ', 'Fu ', 'Guan ', 'Xing ', 'Shou ', 'Shuan ', 'Ya ', 'Chuo ', 'Zhang ', 'Ye ', 'Kong ', 'Wo ', 'Han ', 'Tuo ', 'Dong ', 'He ', 'Wo ', 'Ju ', 'Gan ', 'Liang ', 'Hun ', 'Ta ', 'Zhuo ', 'Dian ', 'Qie ', 'De ', 'Juan ', 'Zi ', 'Xi ', 'Yao ', 'Qi ', 'Gu ', 'Guo ', 'Han ', 'Lin ', 'Tang ', 'Zhou ', 'Peng ', 'Hao ', 'Chang ', 'Shu ', 'Qi ', 'Fang ', 'Chi ', 'Lu ', 'Nao ', 'Ju ', 'Tao ', 'Cong ', 'Lei ', 'Zhi ', 'Peng ', 'Fei ', 'Song ', 'Tian ', 'Pi ', 'Dan ', 'Yu ', 'Ni ', 'Yu ', 'Lu ', 'Gan ', 'Mi ', 'Jing ', 'Ling ', 'Lun ', 'Yin ', 'Cui ', 'Qu ', 'Huai ', 'Yu ', 'Nian ', 'Shen ', 'Piao ', 'Chun ', 'Wa ', 'Yuan ', 'Lai ', 'Hun ', 'Qing ', 'Yan ', 'Qian ', 'Tian ', 'Miao ', 'Zhi ', 'Yin ', 'Mi '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b6.php\",\"ext\":\"php\",\"size\":2440,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['ddyels', 'ddyelt', 'ddyelp', 'ddyelh', 'ddyem', 'ddyeb', 'ddyebs', 'ddyes', 'ddyess', 'ddyeng', 'ddyej', 'ddyec', 'ddyek', 'ddyet', 'ddyep', 'ddyeh', 'ddo', 'ddog', 'ddogg', 'ddogs', 'ddon', 'ddonj', 'ddonh', 'ddod', 'ddol', 'ddolg', 'ddolm', 'ddolb', 'ddols', 'ddolt', 'ddolp', 'ddolh', 'ddom', 'ddob', 'ddobs', 'ddos', 'ddoss', 'ddong', 'ddoj', 'ddoc', 'ddok', 'ddot', 'ddop', 'ddoh', 'ddwa', 'ddwag', 'ddwagg', 'ddwags', 'ddwan', 'ddwanj', 'ddwanh', 'ddwad', 'ddwal', 'ddwalg', 'ddwalm', 'ddwalb', 'ddwals', 'ddwalt', 'ddwalp', 'ddwalh', 'ddwam', 'ddwab', 'ddwabs', 'ddwas', 'ddwass', 'ddwang', 'ddwaj', 'ddwac', 'ddwak', 'ddwat', 'ddwap', 'ddwah', 'ddwae', 'ddwaeg', 'ddwaegg', 'ddwaegs', 'ddwaen', 'ddwaenj', 'ddwaenh', 'ddwaed', 'ddwael', 'ddwaelg', 'ddwaelm', 'ddwaelb', 'ddwaels', 'ddwaelt', 'ddwaelp', 'ddwaelh', 'ddwaem', 'ddwaeb', 'ddwaebs', 'ddwaes', 'ddwaess', 'ddwaeng', 'ddwaej', 'ddwaec', 'ddwaek', 'ddwaet', 'ddwaep', 'ddwaeh', 'ddoe', 'ddoeg', 'ddoegg', 'ddoegs', 'ddoen', 'ddoenj', 'ddoenh', 'ddoed', 'ddoel', 'ddoelg', 'ddoelm', 'ddoelb', 'ddoels', 'ddoelt', 'ddoelp', 'ddoelh', 'ddoem', 'ddoeb', 'ddoebs', 'ddoes', 'ddoess', 'ddoeng', 'ddoej', 'ddoec', 'ddoek', 'ddoet', 'ddoep', 'ddoeh', 'ddyo', 'ddyog', 'ddyogg', 'ddyogs', 'ddyon', 'ddyonj', 'ddyonh', 'ddyod', 'ddyol', 'ddyolg', 'ddyolm', 'ddyolb', 'ddyols', 'ddyolt', 'ddyolp', 'ddyolh', 'ddyom', 'ddyob', 'ddyobs', 'ddyos', 'ddyoss', 'ddyong', 'ddyoj', 'ddyoc', 'ddyok', 'ddyot', 'ddyop', 'ddyoh', 'ddu', 'ddug', 'ddugg', 'ddugs', 'ddun', 'ddunj', 'ddunh', 'ddud', 'ddul', 'ddulg', 'ddulm', 'ddulb', 'dduls', 'ddult', 'ddulp', 'ddulh', 'ddum', 'ddub', 'ddubs', 'ddus', 'dduss', 'ddung', 'dduj', 'dduc', 'dduk', 'ddut', 'ddup', 'dduh', 'ddweo', 'ddweog', 'ddweogg', 'ddweogs', 'ddweon', 'ddweonj', 'ddweonh', 'ddweod', 'ddweol', 'ddweolg', 'ddweolm', 'ddweolb', 'ddweols', 'ddweolt', 'ddweolp', 'ddweolh', 'ddweom', 'ddweob', 'ddweobs', 'ddweos', 'ddweoss', 'ddweong', 'ddweoj', 'ddweoc', 'ddweok', 'ddweot', 'ddweop', 'ddweoh', 'ddwe', 'ddweg', 'ddwegg', 'ddwegs', 'ddwen', 'ddwenj', 'ddwenh', 'ddwed', 'ddwel', 'ddwelg', 'ddwelm', 'ddwelb', 'ddwels', 'ddwelt', 'ddwelp', 'ddwelh', 'ddwem', 'ddweb', 'ddwebs', 'ddwes', 'ddwess', 'ddweng', 'ddwej', 'ddwec', 'ddwek', 'ddwet', 'ddwep', 'ddweh', 'ddwi', 'ddwig', 'ddwigg', 'ddwigs', 'ddwin', 'ddwinj', 'ddwinh', 'ddwid', 'ddwil', 'ddwilg', 'ddwilm', 'ddwilb', 'ddwils', 'ddwilt', 'ddwilp', 'ddwilh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x06b.php\",\"ext\":\"php\",\"size\":2052,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Xiang ', 'Nong ', 'Bo ', 'Chan ', 'Lan ', 'Ju ', 'Shuang ', 'She ', 'Wei ', 'Cong ', 'Quan ', 'Qu ', 'Cang ', '[?] ', 'Yu ', 'Luo ', 'Li ', 'Zan ', 'Luan ', 'Dang ', 'Jue ', 'Em ', 'Lan ', 'Lan ', 'Zhu ', 'Lei ', 'Li ', 'Ba ', 'Nang ', 'Yu ', 'Ling ', 'Tsuki ', 'Qian ', 'Ci ', 'Huan ', 'Xin ', 'Yu ', 'Yu ', 'Qian ', 'Ou ', 'Xu ', 'Chao ', 'Chu ', 'Chi ', 'Kai ', 'Yi ', 'Jue ', 'Xi ', 'Xu ', 'Xia ', 'Yu ', 'Kuai ', 'Lang ', 'Kuan ', 'Shuo ', 'Xi ', 'Ai ', 'Yi ', 'Qi ', 'Hu ', 'Chi ', 'Qin ', 'Kuan ', 'Kan ', 'Kuan ', 'Kan ', 'Chuan ', 'Sha ', 'Gua ', 'Yin ', 'Xin ', 'Xie ', 'Yu ', 'Qian ', 'Xiao ', 'Yi ', 'Ge ', 'Wu ', 'Tan ', 'Jin ', 'Ou ', 'Hu ', 'Ti ', 'Huan ', 'Xu ', 'Pen ', 'Xi ', 'Xiao ', 'Xu ', 'Xi ', 'Sen ', 'Lian ', 'Chu ', 'Yi ', 'Kan ', 'Yu ', 'Chuo ', 'Huan ', 'Zhi ', 'Zheng ', 'Ci ', 'Bu ', 'Wu ', 'Qi ', 'Bu ', 'Bu ', 'Wai ', 'Ju ', 'Qian ', 'Chi ', 'Se ', 'Chi ', 'Se ', 'Zhong ', 'Sui ', 'Sui ', 'Li ', 'Cuo ', 'Yu ', 'Li ', 'Gui ', 'Dai ', 'Dai ', 'Si ', 'Jian ', 'Zhe ', 'Mo ', 'Mo ', 'Yao ', 'Mo ', 'Cu ', 'Yang ', 'Tian ', 'Sheng ', 'Dai ', 'Shang ', 'Xu ', 'Xun ', 'Shu ', 'Can ', 'Jue ', 'Piao ', 'Qia ', 'Qiu ', 'Su ', 'Qing ', 'Yun ', 'Lian ', 'Yi ', 'Fou ', 'Zhi ', 'Ye ', 'Can ', 'Hun ', 'Dan ', 'Ji ', 'Ye ', 'Zhen ', 'Yun ', 'Wen ', 'Chou ', 'Bin ', 'Ti ', 'Jin ', 'Shang ', 'Yin ', 'Diao ', 'Cu ', 'Hui ', 'Cuan ', 'Yi ', 'Dan ', 'Du ', 'Jiang ', 'Lian ', 'Bin ', 'Du ', 'Tsukusu ', 'Jian ', 'Shu ', 'Ou ', 'Duan ', 'Zhu ', 'Yin ', 'Qing ', 'Yi ', 'Sha ', 'Que ', 'Ke ', 'Yao ', 'Jun ', 'Dian ', 'Hui ', 'Hui ', 'Gu ', 'Que ', 'Ji ', 'Yi ', 'Ou ', 'Hui ', 'Duan ', 'Yi ', 'Xiao ', 'Wu ', 'Guan ', 'Mu ', 'Mei ', 'Mei ', 'Ai ', 'Zuo ', 'Du ', 'Yu ', 'Bi ', 'Bi ', 'Bi ', 'Pi ', 'Pi ', 'Bi ', 'Chan ', 'Mao ', '[?] ', '[?] ', 'Pu ', 'Mushiru ', 'Jia ', 'Zhan ', 'Sai ', 'Mu ', 'Tuo ', 'Xun ', 'Er ', 'Rong ', 'Xian ', 'Ju ', 'Mu ', 'Hao ', 'Qiu ', 'Dou ', 'Mushiru ', 'Tan ', 'Pei ', 'Ju ', 'Duo ', 'Cui ', 'Bi ', 'San ', '[?] ', 'Mao ', 'Sui ', 'Yu ', 'Yu ', 'Tuo ', 'He ', 'Jian ', 'Ta ', 'San '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x07d.php\",\"ext\":\"php\",\"size\":2122,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ji ', 'Cha ', 'Zhou ', 'Xun ', 'Yue ', 'Hong ', 'Yu ', 'He ', 'Wan ', 'Ren ', 'Wen ', 'Wen ', 'Qiu ', 'Na ', 'Zi ', 'Tou ', 'Niu ', 'Fou ', 'Jie ', 'Shu ', 'Chun ', 'Pi ', 'Yin ', 'Sha ', 'Hong ', 'Zhi ', 'Ji ', 'Fen ', 'Yun ', 'Ren ', 'Dan ', 'Jin ', 'Su ', 'Fang ', 'Suo ', 'Cui ', 'Jiu ', 'Zha ', 'Kinu ', 'Jin ', 'Fu ', 'Zhi ', 'Ci ', 'Zi ', 'Chou ', 'Hong ', 'Zha ', 'Lei ', 'Xi ', 'Fu ', 'Xie ', 'Shen ', 'Bei ', 'Zhu ', 'Qu ', 'Ling ', 'Zhu ', 'Shao ', 'Gan ', 'Yang ', 'Fu ', 'Tuo ', 'Zhen ', 'Dai ', 'Zhuo ', 'Shi ', 'Zhong ', 'Xian ', 'Zu ', 'Jiong ', 'Ban ', 'Ju ', 'Mo ', 'Shu ', 'Zui ', 'Wata ', 'Jing ', 'Ren ', 'Heng ', 'Xie ', 'Jie ', 'Zhu ', 'Chou ', 'Gua ', 'Bai ', 'Jue ', 'Kuang ', 'Hu ', 'Ci ', 'Geng ', 'Geng ', 'Tao ', 'Xie ', 'Ku ', 'Jiao ', 'Quan ', 'Gai ', 'Luo ', 'Xuan ', 'Bing ', 'Xian ', 'Fu ', 'Gei ', 'Tong ', 'Rong ', 'Tiao ', 'Yin ', 'Lei ', 'Xie ', 'Quan ', 'Xu ', 'Lun ', 'Die ', 'Tong ', 'Si ', 'Jiang ', 'Xiang ', 'Hui ', 'Jue ', 'Zhi ', 'Jian ', 'Juan ', 'Chi ', 'Mian ', 'Zhen ', 'Lu ', 'Cheng ', 'Qiu ', 'Shu ', 'Bang ', 'Tong ', 'Xiao ', 'Wan ', 'Qin ', 'Geng ', 'Xiu ', 'Ti ', 'Xiu ', 'Xie ', 'Hong ', 'Xi ', 'Fu ', 'Ting ', 'Sui ', 'Dui ', 'Kun ', 'Fu ', 'Jing ', 'Hu ', 'Zhi ', 'Yan ', 'Jiong ', 'Feng ', 'Ji ', 'Sok ', 'Kase ', 'Zong ', 'Lin ', 'Duo ', 'Li ', 'Lu ', 'Liang ', 'Chou ', 'Quan ', 'Shao ', 'Qi ', 'Qi ', 'Zhun ', 'Qi ', 'Wan ', 'Qian ', 'Xian ', 'Shou ', 'Wei ', 'Qi ', 'Tao ', 'Wan ', 'Gang ', 'Wang ', 'Beng ', 'Zhui ', 'Cai ', 'Guo ', 'Cui ', 'Lun ', 'Liu ', 'Qi ', 'Zhan ', 'Bei ', 'Chuo ', 'Ling ', 'Mian ', 'Qi ', 'Qie ', 'Tan ', 'Zong ', 'Gun ', 'Zou ', 'Yi ', 'Zi ', 'Xing ', 'Liang ', 'Jin ', 'Fei ', 'Rui ', 'Min ', 'Yu ', 'Zong ', 'Fan ', 'Lu ', 'Xu ', 'Yingl ', 'Zhang ', 'Kasuri ', 'Xu ', 'Xiang ', 'Jian ', 'Ke ', 'Xian ', 'Ruan ', 'Mian ', 'Qi ', 'Duan ', 'Zhong ', 'Di ', 'Min ', 'Miao ', 'Yuan ', 'Xie ', 'Bao ', 'Si ', 'Qiu ', 'Bian ', 'Huan ', 'Geng ', 'Cong ', 'Mian ', 'Wei ', 'Fu ', 'Wei ', 'Yu ', 'Gou ', 'Miao ', 'Xie ', 'Lian ', 'Zong ', 'Bian ', 'Yun ', 'Yin ', 'Ti ', 'Gua ', 'Zhi ', 'Yun ', 'Cheng ', 'Chan ', 'Dai '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x00b.php\",\"ext\":\"php\",\"size\":1586,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', 'N', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'L', '[?]', '[?]', 'e', 'ai', '[?]', '[?]', 'o', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bh', 'm', 'y', 'r', '[?]', 'l', 'll', '[?]', '', 'sh', 'ss', 's', 'h', '[?]', '[?]', '\\\\'', '\\\\'', 'aa', 'i', 'ii', 'u', 'uu', 'R', '[?]', '[?]', '[?]', 'e', 'ai', '[?]', '[?]', 'o', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '+', '+', '[?]', '[?]', '[?]', '[?]', 'rr', 'rh', '[?]', 'yy', 'RR', 'LL', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', '[?]', '[?]', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', 'k', '[?]', '[?]', '[?]', 'ng', 'c', '[?]', 'j', '[?]', 'ny', 'tt', '[?]', '[?]', '[?]', 'nn', 't', '[?]', '[?]', '[?]', 'n', 'nnn', 'p', '[?]', '[?]', '[?]', 'm', 'y', 'r', 'rr', 'l', 'll', 'lll', 'v', '[?]', 'ss', 's', 'h', '[?]', '[?]', '[?]', '[?]', 'aa', 'i', 'ii', 'u', 'uu', '[?]', '[?]', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+10+', '+100+', '+1000+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x02f.php\",\"ext\":\"php\",\"size\":2026,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php returnn\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0cc.php\",\"ext\":\"php\",\"size\":2193,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['jjyim', 'jjyib', 'jjyibs', 'jjyis', 'jjyiss', 'jjying', 'jjyij', 'jjyic', 'jjyik', 'jjyit', 'jjyip', 'jjyih', 'jji', 'jjig', 'jjigg', 'jjigs', 'jjin', 'jjinj', 'jjinh', 'jjid', 'jjil', 'jjilg', 'jjilm', 'jjilb', 'jjils', 'jjilt', 'jjilp', 'jjilh', 'jjim', 'jjib', 'jjibs', 'jjis', 'jjiss', 'jjing', 'jjij', 'jjic', 'jjik', 'jjit', 'jjip', 'jjih', 'ca', 'cag', 'cagg', 'cags', 'can', 'canj', 'canh', 'cad', 'cal', 'calg', 'calm', 'calb', 'cals', 'calt', 'calp', 'calh', 'cam', 'cab', 'cabs', 'cas', 'cass', 'cang', 'caj', 'cac', 'cak', 'cat', 'cap', 'cah', 'cae', 'caeg', 'caegg', 'caegs', 'caen', 'caenj', 'caenh', 'caed', 'cael', 'caelg', 'caelm', 'caelb', 'caels', 'caelt', 'caelp', 'caelh', 'caem', 'caeb', 'caebs', 'caes', 'caess', 'caeng', 'caej', 'caec', 'caek', 'caet', 'caep', 'caeh', 'cya', 'cyag', 'cyagg', 'cyags', 'cyan', 'cyanj', 'cyanh', 'cyad', 'cyal', 'cyalg', 'cyalm', 'cyalb', 'cyals', 'cyalt', 'cyalp', 'cyalh', 'cyam', 'cyab', 'cyabs', 'cyas', 'cyass', 'cyang', 'cyaj', 'cyac', 'cyak', 'cyat', 'cyap', 'cyah', 'cyae', 'cyaeg', 'cyaegg', 'cyaegs', 'cyaen', 'cyaenj', 'cyaenh', 'cyaed', 'cyael', 'cyaelg', 'cyaelm', 'cyaelb', 'cyaels', 'cyaelt', 'cyaelp', 'cyaelh', 'cyaem', 'cyaeb', 'cyaebs', 'cyaes', 'cyaess', 'cyaeng', 'cyaej', 'cyaec', 'cyaek', 'cyaet', 'cyaep', 'cyaeh', 'ceo', 'ceog', 'ceogg', 'ceogs', 'ceon', 'ceonj', 'ceonh', 'ceod', 'ceol', 'ceolg', 'ceolm', 'ceolb', 'ceols', 'ceolt', 'ceolp', 'ceolh', 'ceom', 'ceob', 'ceobs', 'ceos', 'ceoss', 'ceong', 'ceoj', 'ceoc', 'ceok', 'ceot', 'ceop', 'ceoh', 'ce', 'ceg', 'cegg', 'cegs', 'cen', 'cenj', 'cenh', 'ced', 'cel', 'celg', 'celm', 'celb', 'cels', 'celt', 'celp', 'celh', 'cem', 'ceb', 'cebs', 'ces', 'cess', 'ceng', 'cej', 'cec', 'cek', 'cet', 'cep', 'ceh', 'cyeo', 'cyeog', 'cyeogg', 'cyeogs', 'cyeon', 'cyeonj', 'cyeonh', 'cyeod', 'cyeol', 'cyeolg', 'cyeolm', 'cyeolb', 'cyeols', 'cyeolt', 'cyeolp', 'cyeolh', 'cyeom', 'cyeob', 'cyeobs', 'cyeos', 'cyeoss', 'cyeong', 'cyeoj', 'cyeoc', 'cyeok', 'cyeot', 'cyeop', 'cyeoh', 'cye', 'cyeg', 'cyegg', 'cyegs', 'cyen', 'cyenj', 'cyenh', 'cyed', 'cyel', 'cyelg', 'cyelm', 'cyelb', 'cyels', 'cyelt', 'cyelp', 'cyelh', 'cyem', 'cyeb', 'cyebs', 'cyes'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0c4.php\",\"ext\":\"php\",\"size\":2468,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['sswals', 'sswalt', 'sswalp', 'sswalh', 'sswam', 'sswab', 'sswabs', 'sswas', 'sswass', 'sswang', 'sswaj', 'sswac', 'sswak', 'sswat', 'sswap', 'sswah', 'sswae', 'sswaeg', 'sswaegg', 'sswaegs', 'sswaen', 'sswaenj', 'sswaenh', 'sswaed', 'sswael', 'sswaelg', 'sswaelm', 'sswaelb', 'sswaels', 'sswaelt', 'sswaelp', 'sswaelh', 'sswaem', 'sswaeb', 'sswaebs', 'sswaes', 'sswaess', 'sswaeng', 'sswaej', 'sswaec', 'sswaek', 'sswaet', 'sswaep', 'sswaeh', 'ssoe', 'ssoeg', 'ssoegg', 'ssoegs', 'ssoen', 'ssoenj', 'ssoenh', 'ssoed', 'ssoel', 'ssoelg', 'ssoelm', 'ssoelb', 'ssoels', 'ssoelt', 'ssoelp', 'ssoelh', 'ssoem', 'ssoeb', 'ssoebs', 'ssoes', 'ssoess', 'ssoeng', 'ssoej', 'ssoec', 'ssoek', 'ssoet', 'ssoep', 'ssoeh', 'ssyo', 'ssyog', 'ssyogg', 'ssyogs', 'ssyon', 'ssyonj', 'ssyonh', 'ssyod', 'ssyol', 'ssyolg', 'ssyolm', 'ssyolb', 'ssyols', 'ssyolt', 'ssyolp', 'ssyolh', 'ssyom', 'ssyob', 'ssyobs', 'ssyos', 'ssyoss', 'ssyong', 'ssyoj', 'ssyoc', 'ssyok', 'ssyot', 'ssyop', 'ssyoh', 'ssu', 'ssug', 'ssugg', 'ssugs', 'ssun', 'ssunj', 'ssunh', 'ssud', 'ssul', 'ssulg', 'ssulm', 'ssulb', 'ssuls', 'ssult', 'ssulp', 'ssulh', 'ssum', 'ssub', 'ssubs', 'ssus', 'ssuss', 'ssung', 'ssuj', 'ssuc', 'ssuk', 'ssut', 'ssup', 'ssuh', 'ssweo', 'ssweog', 'ssweogg', 'ssweogs', 'ssweon', 'ssweonj', 'ssweonh', 'ssweod', 'ssweol', 'ssweolg', 'ssweolm', 'ssweolb', 'ssweols', 'ssweolt', 'ssweolp', 'ssweolh', 'ssweom', 'ssweob', 'ssweobs', 'ssweos', 'ssweoss', 'ssweong', 'ssweoj', 'ssweoc', 'ssweok', 'ssweot', 'ssweop', 'ssweoh', 'sswe', 'ssweg', 'sswegg', 'sswegs', 'sswen', 'sswenj', 'sswenh', 'sswed', 'sswel', 'sswelg', 'sswelm', 'sswelb', 'sswels', 'sswelt', 'sswelp', 'sswelh', 'sswem', 'ssweb', 'sswebs', 'sswes', 'sswess', 'ssweng', 'sswej', 'sswec', 'sswek', 'sswet', 'sswep', 'ssweh', 'sswi', 'sswig', 'sswigg', 'sswigs', 'sswin', 'sswinj', 'sswinh', 'sswid', 'sswil', 'sswilg', 'sswilm', 'sswilb', 'sswils', 'sswilt', 'sswilp', 'sswilh', 'sswim', 'sswib', 'sswibs', 'sswis', 'sswiss', 'sswing', 'sswij', 'sswic', 'sswik', 'sswit', 'sswip', 'sswih', 'ssyu', 'ssyug', 'ssyugg', 'ssyugs', 'ssyun', 'ssyunj', 'ssyunh', 'ssyud', 'ssyul', 'ssyulg', 'ssyulm', 'ssyulb', 'ssyuls', 'ssyult', 'ssyulp', 'ssyulh', 'ssyum', 'ssyub', 'ssyubs', 'ssyus', 'ssyuss', 'ssyung', 'ssyuj', 'ssyuc', 'ssyuk', 'ssyut', 'ssyup', 'ssyuh', 'sseu', 'sseug', 'sseugg', 'sseugs', 'sseun', 'sseunj', 'sseunh', 'sseud', 'sseul', 'sseulg', 'sseulm', 'sseulb', 'sseuls', 'sseult', 'sseulp', 'sseulh'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x018.php\",\"ext\":\"php\",\"size\":1553,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return [' @ ', ' ... ', ', ', '. ', ': ', ' \/\/ ', '', '-', ', ', '. ', '', '', '', '', '', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'a', 'e', 'i', 'o', 'u', 'O', 'U', 'ee', 'n', 'ng', 'b', 'p', 'q', 'g', 'm', 'l', 's', 'sh', 't', 'd', 'ch', 'j', 'y', 'r', 'w', 'f', 'k', 'kha', 'ts', 'z', 'h', 'zr', 'lh', 'zh', 'ch', '-', 'e', 'i', 'o', 'u', 'O', 'U', 'ng', 'b', 'p', 'q', 'g', 'm', 't', 'd', 'ch', 'j', 'ts', 'y', 'w', 'k', 'g', 'h', 'jy', 'ny', 'dz', 'e', 'i', 'iy', 'U', 'u', 'ng', 'k', 'g', 'h', 'p', 'sh', 't', 'd', 'j', 'f', 'g', 'h', 'ts', 'z', 'r', 'ch', 'zh', 'i', 'k', 'r', 'f', 'zh', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'H', 'X', 'W', 'M', ' 3 ', ' 333 ', 'a', 'i', 'k', 'ng', 'c', 'tt', 'tth', 'dd', 'nn', 't', 'd', 'p', 'ph', 'ss', 'zh', 'z', 'a', 't', 'zh', 'gh', 'ng', 'c', 'jh', 'tta', 'ddh', 't', 'dh', 'ss', 'cy', 'zh', 'z', 'u', 'y', 'bhn\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x08b.php\",\"ext\":\"php\",\"size\":2087,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Mou ', 'Ye ', 'Wei ', '[?] ', 'Teng ', 'Zou ', 'Shan ', 'Jian ', 'Bo ', 'Ku ', 'Huang ', 'Huo ', 'Ge ', 'Ying ', 'Mi ', 'Xiao ', 'Mi ', 'Xi ', 'Qiang ', 'Chen ', 'Nue ', 'Ti ', 'Su ', 'Bang ', 'Chi ', 'Qian ', 'Shi ', 'Jiang ', 'Yuan ', 'Xie ', 'Xue ', 'Tao ', 'Yao ', 'Yao ', '[?] ', 'Yu ', 'Biao ', 'Cong ', 'Qing ', 'Li ', 'Mo ', 'Mo ', 'Shang ', 'Zhe ', 'Miu ', 'Jian ', 'Ze ', 'Jie ', 'Lian ', 'Lou ', 'Can ', 'Ou ', 'Guan ', 'Xi ', 'Zhuo ', 'Ao ', 'Ao ', 'Jin ', 'Zhe ', 'Yi ', 'Hu ', 'Jiang ', 'Man ', 'Chao ', 'Han ', 'Hua ', 'Chan ', 'Xu ', 'Zeng ', 'Se ', 'Xi ', 'She ', 'Dui ', 'Zheng ', 'Nao ', 'Lan ', 'E ', 'Ying ', 'Jue ', 'Ji ', 'Zun ', 'Jiao ', 'Bo ', 'Hui ', 'Zhuan ', 'Mu ', 'Zen ', 'Zha ', 'Shi ', 'Qiao ', 'Tan ', 'Zen ', 'Pu ', 'Sheng ', 'Xuan ', 'Zao ', 'Tan ', 'Dang ', 'Sui ', 'Qian ', 'Ji ', 'Jiao ', 'Jing ', 'Lian ', 'Nou ', 'Yi ', 'Ai ', 'Zhan ', 'Pi ', 'Hui ', 'Hua ', 'Yi ', 'Yi ', 'Shan ', 'Rang ', 'Nou ', 'Qian ', 'Zhui ', 'Ta ', 'Hu ', 'Zhou ', 'Hao ', 'Ye ', 'Ying ', 'Jian ', 'Yu ', 'Jian ', 'Hui ', 'Du ', 'Zhe ', 'Xuan ', 'Zan ', 'Lei ', 'Shen ', 'Wei ', 'Chan ', 'Li ', 'Yi ', 'Bian ', 'Zhe ', 'Yan ', 'E ', 'Chou ', 'Wei ', 'Chou ', 'Yao ', 'Chan ', 'Rang ', 'Yin ', 'Lan ', 'Chen ', 'Huo ', 'Zhe ', 'Huan ', 'Zan ', 'Yi ', 'Dang ', 'Zhan ', 'Yan ', 'Du ', 'Yan ', 'Ji ', 'Ding ', 'Fu ', 'Ren ', 'Ji ', 'Jie ', 'Hong ', 'Tao ', 'Rang ', 'Shan ', 'Qi ', 'Tuo ', 'Xun ', 'Yi ', 'Xun ', 'Ji ', 'Ren ', 'Jiang ', 'Hui ', 'Ou ', 'Ju ', 'Ya ', 'Ne ', 'Xu ', 'E ', 'Lun ', 'Xiong ', 'Song ', 'Feng ', 'She ', 'Fang ', 'Jue ', 'Zheng ', 'Gu ', 'He ', 'Ping ', 'Zu ', 'Shi ', 'Xiong ', 'Zha ', 'Su ', 'Zhen ', 'Di ', 'Zou ', 'Ci ', 'Qu ', 'Zhao ', 'Bi ', 'Yi ', 'Yi ', 'Kuang ', 'Lei ', 'Shi ', 'Gua ', 'Shi ', 'Jie ', 'Hui ', 'Cheng ', 'Zhu ', 'Shen ', 'Hua ', 'Dan ', 'Gou ', 'Quan ', 'Gui ', 'Xun ', 'Yi ', 'Zheng ', 'Gai ', 'Xiang ', 'Cha ', 'Hun ', 'Xu ', 'Zhou ', 'Jie ', 'Wu ', 'Yu ', 'Qiao ', 'Wu ', 'Gao ', 'You ', 'Hui ', 'Kuang ', 'Shuo ', 'Song ', 'Ai ', 'Qing ', 'Zhu ', 'Zou ', 'Nuo ', 'Du ', 'Zhuo ', 'Fei ', 'Ke ', 'Wei '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x1d5.php\",\"ext\":\"php\",\"size\":1413,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php\\n\\nreturn [\\n    0 => 'w', 'x', 'y', 'z', 4 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 30 => 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 56 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 82 => 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 108 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 134 => 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 160 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 186 => 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 212 => 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 238 => 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x075.php\",\"ext\":\"php\",\"size\":2119,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Zhui ', 'Ping ', 'Bian ', 'Zhou ', 'Zhen ', 'Senchigura ', 'Ci ', 'Ying ', 'Qi ', 'Xian ', 'Lou ', 'Di ', 'Ou ', 'Meng ', 'Zhuan ', 'Peng ', 'Lin ', 'Zeng ', 'Wu ', 'Pi ', 'Dan ', 'Weng ', 'Ying ', 'Yan ', 'Gan ', 'Dai ', 'Shen ', 'Tian ', 'Tian ', 'Han ', 'Chang ', 'Sheng ', 'Qing ', 'Sheng ', 'Chan ', 'Chan ', 'Rui ', 'Sheng ', 'Su ', 'Sen ', 'Yong ', 'Shuai ', 'Lu ', 'Fu ', 'Yong ', 'Beng ', 'Feng ', 'Ning ', 'Tian ', 'You ', 'Jia ', 'Shen ', 'Zha ', 'Dian ', 'Fu ', 'Nan ', 'Dian ', 'Ping ', 'Ting ', 'Hua ', 'Ting ', 'Quan ', 'Zi ', 'Meng ', 'Bi ', 'Qi ', 'Liu ', 'Xun ', 'Liu ', 'Chang ', 'Mu ', 'Yun ', 'Fan ', 'Fu ', 'Geng ', 'Tian ', 'Jie ', 'Jie ', 'Quan ', 'Wei ', 'Fu ', 'Tian ', 'Mu ', 'Tap ', 'Pan ', 'Jiang ', 'Wa ', 'Da ', 'Nan ', 'Liu ', 'Ben ', 'Zhen ', 'Chu ', 'Mu ', 'Mu ', 'Ce ', 'Cen ', 'Gai ', 'Bi ', 'Da ', 'Zhi ', 'Lue ', 'Qi ', 'Lue ', 'Pan ', 'Kesa ', 'Fan ', 'Hua ', 'Yu ', 'Yu ', 'Mu ', 'Jun ', 'Yi ', 'Liu ', 'Yu ', 'Die ', 'Chou ', 'Hua ', 'Dang ', 'Chuo ', 'Ji ', 'Wan ', 'Jiang ', 'Sheng ', 'Chang ', 'Tuan ', 'Lei ', 'Ji ', 'Cha ', 'Liu ', 'Tatamu ', 'Tuan ', 'Lin ', 'Jiang ', 'Jiang ', 'Chou ', 'Bo ', 'Die ', 'Die ', 'Pi ', 'Nie ', 'Dan ', 'Shu ', 'Shu ', 'Zhi ', 'Yi ', 'Chuang ', 'Nai ', 'Ding ', 'Bi ', 'Jie ', 'Liao ', 'Gong ', 'Ge ', 'Jiu ', 'Zhou ', 'Xia ', 'Shan ', 'Xu ', 'Nue ', 'Li ', 'Yang ', 'Chen ', 'You ', 'Ba ', 'Jie ', 'Jue ', 'Zhi ', 'Xia ', 'Cui ', 'Bi ', 'Yi ', 'Li ', 'Zong ', 'Chuang ', 'Feng ', 'Zhu ', 'Pao ', 'Pi ', 'Gan ', 'Ke ', 'Ci ', 'Xie ', 'Qi ', 'Dan ', 'Zhen ', 'Fa ', 'Zhi ', 'Teng ', 'Ju ', 'Ji ', 'Fei ', 'Qu ', 'Dian ', 'Jia ', 'Xian ', 'Cha ', 'Bing ', 'Ni ', 'Zheng ', 'Yong ', 'Jing ', 'Quan ', 'Chong ', 'Tong ', 'Yi ', 'Kai ', 'Wei ', 'Hui ', 'Duo ', 'Yang ', 'Chi ', 'Zhi ', 'Hen ', 'Ya ', 'Mei ', 'Dou ', 'Jing ', 'Xiao ', 'Tong ', 'Tu ', 'Mang ', 'Pi ', 'Xiao ', 'Suan ', 'Pu ', 'Li ', 'Zhi ', 'Cuo ', 'Duo ', 'Wu ', 'Sha ', 'Lao ', 'Shou ', 'Huan ', 'Xian ', 'Yi ', 'Peng ', 'Zhang ', 'Guan ', 'Tan ', 'Fei ', 'Ma ', 'Lin ', 'Chi ', 'Ji ', 'Dian ', 'An ', 'Chi ', 'Bi ', 'Bei ', 'Min ', 'Gu ', 'Dui ', 'E ', 'Wei '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x096.php\",\"ext\":\"php\",\"size\":2054,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Fa ', 'Ge ', 'He ', 'Kun ', 'Jiu ', 'Yue ', 'Lang ', 'Du ', 'Yu ', 'Yan ', 'Chang ', 'Xi ', 'Wen ', 'Hun ', 'Yan ', 'E ', 'Chan ', 'Lan ', 'Qu ', 'Hui ', 'Kuo ', 'Que ', 'Ge ', 'Tian ', 'Ta ', 'Que ', 'Kan ', 'Huan ', 'Fu ', 'Fu ', 'Le ', 'Dui ', 'Xin ', 'Qian ', 'Wu ', 'Yi ', 'Tuo ', 'Yin ', 'Yang ', 'Dou ', 'E ', 'Sheng ', 'Ban ', 'Pei ', 'Keng ', 'Yun ', 'Ruan ', 'Zhi ', 'Pi ', 'Jing ', 'Fang ', 'Yang ', 'Yin ', 'Zhen ', 'Jie ', 'Cheng ', 'E ', 'Qu ', 'Di ', 'Zu ', 'Zuo ', 'Dian ', 'Ling ', 'A ', 'Tuo ', 'Tuo ', 'Po ', 'Bing ', 'Fu ', 'Ji ', 'Lu ', 'Long ', 'Chen ', 'Xing ', 'Duo ', 'Lou ', 'Mo ', 'Jiang ', 'Shu ', 'Duo ', 'Xian ', 'Er ', 'Gui ', 'Yu ', 'Gai ', 'Shan ', 'Xun ', 'Qiao ', 'Xing ', 'Chun ', 'Fu ', 'Bi ', 'Xia ', 'Shan ', 'Sheng ', 'Zhi ', 'Pu ', 'Dou ', 'Yuan ', 'Zhen ', 'Chu ', 'Xian ', 'Tou ', 'Nie ', 'Yun ', 'Xian ', 'Pei ', 'Pei ', 'Zou ', 'Yi ', 'Dui ', 'Lun ', 'Yin ', 'Ju ', 'Chui ', 'Chen ', 'Pi ', 'Ling ', 'Tao ', 'Xian ', 'Lu ', 'Sheng ', 'Xian ', 'Yin ', 'Zhu ', 'Yang ', 'Reng ', 'Shan ', 'Chong ', 'Yan ', 'Yin ', 'Yu ', 'Ti ', 'Yu ', 'Long ', 'Wei ', 'Wei ', 'Nie ', 'Dui ', 'Sui ', 'An ', 'Huang ', 'Jie ', 'Sui ', 'Yin ', 'Gai ', 'Yan ', 'Hui ', 'Ge ', 'Yun ', 'Wu ', 'Wei ', 'Ai ', 'Xi ', 'Tang ', 'Ji ', 'Zhang ', 'Dao ', 'Ao ', 'Xi ', 'Yin ', '[?] ', 'Rao ', 'Lin ', 'Tui ', 'Deng ', 'Pi ', 'Sui ', 'Sui ', 'Yu ', 'Xian ', 'Fen ', 'Ni ', 'Er ', 'Ji ', 'Dao ', 'Xi ', 'Yin ', 'E ', 'Hui ', 'Long ', 'Xi ', 'Li ', 'Li ', 'Li ', 'Zhui ', 'He ', 'Zhi ', 'Zhun ', 'Jun ', 'Nan ', 'Yi ', 'Que ', 'Yan ', 'Qian ', 'Ya ', 'Xiong ', 'Ya ', 'Ji ', 'Gu ', 'Huan ', 'Zhi ', 'Gou ', 'Jun ', 'Ci ', 'Yong ', 'Ju ', 'Chu ', 'Hu ', 'Za ', 'Luo ', 'Yu ', 'Chou ', 'Diao ', 'Sui ', 'Han ', 'Huo ', 'Shuang ', 'Guan ', 'Chu ', 'Za ', 'Yong ', 'Ji ', 'Xi ', 'Chou ', 'Liu ', 'Li ', 'Nan ', 'Xue ', 'Za ', 'Ji ', 'Ji ', 'Yu ', 'Yu ', 'Xue ', 'Na ', 'Fou ', 'Se ', 'Mu ', 'Wen ', 'Fen ', 'Pang ', 'Yun ', 'Li ', 'Li ', 'Ang ', 'Ling ', 'Lei ', 'An ', 'Bao ', 'Meng ', 'Dian ', 'Dang ', 'Xing ', 'Wu ', 'Zhao '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0b8.php\",\"ext\":\"php\",\"size\":2158,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['reoss', 'reong', 'reoj', 'reoc', 'reok', 'reot', 'reop', 'reoh', 're', 'reg', 'regg', 'regs', 'ren', 'renj', 'renh', 'red', 'rel', 'relg', 'relm', 'relb', 'rels', 'relt', 'relp', 'relh', 'rem', 'reb', 'rebs', 'res', 'ress', 'reng', 'rej', 'rec', 'rek', 'ret', 'rep', 'reh', 'ryeo', 'ryeog', 'ryeogg', 'ryeogs', 'ryeon', 'ryeonj', 'ryeonh', 'ryeod', 'ryeol', 'ryeolg', 'ryeolm', 'ryeolb', 'ryeols', 'ryeolt', 'ryeolp', 'ryeolh', 'ryeom', 'ryeob', 'ryeobs', 'ryeos', 'ryeoss', 'ryeong', 'ryeoj', 'ryeoc', 'ryeok', 'ryeot', 'ryeop', 'ryeoh', 'rye', 'ryeg', 'ryegg', 'ryegs', 'ryen', 'ryenj', 'ryenh', 'ryed', 'ryel', 'ryelg', 'ryelm', 'ryelb', 'ryels', 'ryelt', 'ryelp', 'ryelh', 'ryem', 'ryeb', 'ryebs', 'ryes', 'ryess', 'ryeng', 'ryej', 'ryec', 'ryek', 'ryet', 'ryep', 'ryeh', 'ro', 'rog', 'rogg', 'rogs', 'ron', 'ronj', 'ronh', 'rod', 'rol', 'rolg', 'rolm', 'rolb', 'rols', 'rolt', 'rolp', 'rolh', 'rom', 'rob', 'robs', 'ros', 'ross', 'rong', 'roj', 'roc', 'rok', 'rot', 'rop', 'roh', 'rwa', 'rwag', 'rwagg', 'rwags', 'rwan', 'rwanj', 'rwanh', 'rwad', 'rwal', 'rwalg', 'rwalm', 'rwalb', 'rwals', 'rwalt', 'rwalp', 'rwalh', 'rwam', 'rwab', 'rwabs', 'rwas', 'rwass', 'rwang', 'rwaj', 'rwac', 'rwak', 'rwat', 'rwap', 'rwah', 'rwae', 'rwaeg', 'rwaegg', 'rwaegs', 'rwaen', 'rwaenj', 'rwaenh', 'rwaed', 'rwael', 'rwaelg', 'rwaelm', 'rwaelb', 'rwaels', 'rwaelt', 'rwaelp', 'rwaelh', 'rwaem', 'rwaeb', 'rwaebs', 'rwaes', 'rwaess', 'rwaeng', 'rwaej', 'rwaec', 'rwaek', 'rwaet', 'rwaep', 'rwaeh', 'roe', 'roeg', 'roegg', 'roegs', 'roen', 'roenj', 'roenh', 'roed', 'roel', 'roelg', 'roelm', 'roelb', 'roels', 'roelt', 'roelp', 'roelh', 'roem', 'roeb', 'roebs', 'roes', 'roess', 'roeng', 'roej', 'roec', 'roek', 'roet', 'roep', 'roeh', 'ryo', 'ryog', 'ryogg', 'ryogs', 'ryon', 'ryonj', 'ryonh', 'ryod', 'ryol', 'ryolg', 'ryolm', 'ryolb', 'ryols', 'ryolt', 'ryolp', 'ryolh', 'ryom', 'ryob', 'ryobs', 'ryos', 'ryoss', 'ryong', 'ryoj', 'ryoc', 'ryok', 'ryot', 'ryop', 'ryoh', 'ru', 'rug', 'rugg', 'rugs', 'run', 'runj', 'runh', 'rud', 'rul', 'rulg', 'rulm', 'rulb', 'ruls', 'rult', 'rulp', 'rulh', 'rum', 'rub', 'rubs', 'rus', 'russ', 'rung', 'ruj', 'ruc'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x005.php\",\"ext\":\"php\",\"size\":1451,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'A', 'B', 'G', 'D', 'E', 'Z', 'E', 'E', 'T`', 'Zh', 'I', 'L', 'Kh', 'Ts', 'K', 'H', 'Dz', 'Gh', 'Ch', 'M', 'Y', 'N', 'Sh', 'O', 'Ch`', 'P', 'J', 'Rh', 'S', 'V', 'T', 'R', 'Ts`', 'W', 'P`', 'K`', 'O', 'F', '[?]', '[?]', '<', '\\\\'', '\/', '!', ',', '?', '.', '[?]', 'a', 'b', 'g', 'd', 'e', 'z', 'e', 'e', 't`', 'zh', 'i', 'l', 'kh', 'ts', 'k', 'h', 'dz', 'gh', 'ch', 'm', 'y', 'n', 'sh', 'o', 'ch`', 'p', 'j', 'rh', 's', 'v', 't', 'r', 'ts`', 'w', 'p`', 'k`', 'o', 'f', 'ew', '[?]', ':', '-', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '@', 'e', 'a', 'o', 'i', 'e', 'e', 'a', 'a', 'o', 'o', 'u', '\\\\'', '', '-', '-', '|', '', '', ':', '', '', 'n', 'o', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'A', 'b', 'g', 'd', 'h', 'v', 'z', 'KH', 't', 'y', 'k', 'k', 'l', 'm', 'm', 'n', 'n', 's', '`', 'p', 'p', 'TS', 'TS', 'q', 'r', 'SH', 't', '[?]', '[?]', '[?]', '[?]', '[?]', 'V', 'OY', 'i', '\\\\'', '\\\"', 'v', 'n', 'q', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0d4.php\",\"ext\":\"php\",\"size\":2202,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['poss', 'pong', 'poj', 'poc', 'pok', 'pot', 'pop', 'poh', 'pwa', 'pwag', 'pwagg', 'pwags', 'pwan', 'pwanj', 'pwanh', 'pwad', 'pwal', 'pwalg', 'pwalm', 'pwalb', 'pwals', 'pwalt', 'pwalp', 'pwalh', 'pwam', 'pwab', 'pwabs', 'pwas', 'pwass', 'pwang', 'pwaj', 'pwac', 'pwak', 'pwat', 'pwap', 'pwah', 'pwae', 'pwaeg', 'pwaegg', 'pwaegs', 'pwaen', 'pwaenj', 'pwaenh', 'pwaed', 'pwael', 'pwaelg', 'pwaelm', 'pwaelb', 'pwaels', 'pwaelt', 'pwaelp', 'pwaelh', 'pwaem', 'pwaeb', 'pwaebs', 'pwaes', 'pwaess', 'pwaeng', 'pwaej', 'pwaec', 'pwaek', 'pwaet', 'pwaep', 'pwaeh', 'poe', 'poeg', 'poegg', 'poegs', 'poen', 'poenj', 'poenh', 'poed', 'poel', 'poelg', 'poelm', 'poelb', 'poels', 'poelt', 'poelp', 'poelh', 'poem', 'poeb', 'poebs', 'poes', 'poess', 'poeng', 'poej', 'poec', 'poek', 'poet', 'poep', 'poeh', 'pyo', 'pyog', 'pyogg', 'pyogs', 'pyon', 'pyonj', 'pyonh', 'pyod', 'pyol', 'pyolg', 'pyolm', 'pyolb', 'pyols', 'pyolt', 'pyolp', 'pyolh', 'pyom', 'pyob', 'pyobs', 'pyos', 'pyoss', 'pyong', 'pyoj', 'pyoc', 'pyok', 'pyot', 'pyop', 'pyoh', 'pu', 'pug', 'pugg', 'pugs', 'pun', 'punj', 'punh', 'pud', 'pul', 'pulg', 'pulm', 'pulb', 'puls', 'pult', 'pulp', 'pulh', 'pum', 'pub', 'pubs', 'pus', 'puss', 'pung', 'puj', 'puc', 'puk', 'put', 'pup', 'puh', 'pweo', 'pweog', 'pweogg', 'pweogs', 'pweon', 'pweonj', 'pweonh', 'pweod', 'pweol', 'pweolg', 'pweolm', 'pweolb', 'pweols', 'pweolt', 'pweolp', 'pweolh', 'pweom', 'pweob', 'pweobs', 'pweos', 'pweoss', 'pweong', 'pweoj', 'pweoc', 'pweok', 'pweot', 'pweop', 'pweoh', 'pwe', 'pweg', 'pwegg', 'pwegs', 'pwen', 'pwenj', 'pwenh', 'pwed', 'pwel', 'pwelg', 'pwelm', 'pwelb', 'pwels', 'pwelt', 'pwelp', 'pwelh', 'pwem', 'pweb', 'pwebs', 'pwes', 'pwess', 'pweng', 'pwej', 'pwec', 'pwek', 'pwet', 'pwep', 'pweh', 'pwi', 'pwig', 'pwigg', 'pwigs', 'pwin', 'pwinj', 'pwinh', 'pwid', 'pwil', 'pwilg', 'pwilm', 'pwilb', 'pwils', 'pwilt', 'pwilp', 'pwilh', 'pwim', 'pwib', 'pwibs', 'pwis', 'pwiss', 'pwing', 'pwij', 'pwic', 'pwik', 'pwit', 'pwip', 'pwih', 'pyu', 'pyug', 'pyugg', 'pyugs', 'pyun', 'pyunj', 'pyunh', 'pyud', 'pyul', 'pyulg', 'pyulm', 'pyulb', 'pyuls', 'pyult', 'pyulp', 'pyulh', 'pyum', 'pyub', 'pyubs', 'pyus', 'pyuss', 'pyung', 'pyuj', 'pyuc'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x09c.php\",\"ext\":\"php\",\"size\":2103,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Huan ', 'Quan ', 'Ze ', 'Wei ', 'Wei ', 'Yu ', 'Qun ', 'Rou ', 'Die ', 'Huang ', 'Lian ', 'Yan ', 'Qiu ', 'Qiu ', 'Jian ', 'Bi ', 'E ', 'Yang ', 'Fu ', 'Sai ', 'Jian ', 'Xia ', 'Tuo ', 'Hu ', 'Muroaji ', 'Ruo ', 'Haraka ', 'Wen ', 'Jian ', 'Hao ', 'Wu ', 'Fang ', 'Sao ', 'Liu ', 'Ma ', 'Shi ', 'Shi ', 'Yin ', 'Z ', 'Teng ', 'Ta ', 'Yao ', 'Ge ', 'Rong ', 'Qian ', 'Qi ', 'Wen ', 'Ruo ', 'Hatahata ', 'Lian ', 'Ao ', 'Le ', 'Hui ', 'Min ', 'Ji ', 'Tiao ', 'Qu ', 'Jian ', 'Sao ', 'Man ', 'Xi ', 'Qiu ', 'Biao ', 'Ji ', 'Ji ', 'Zhu ', 'Jiang ', 'Qiu ', 'Zhuan ', 'Yong ', 'Zhang ', 'Kang ', 'Xue ', 'Bie ', 'Jue ', 'Qu ', 'Xiang ', 'Bo ', 'Jiao ', 'Xun ', 'Su ', 'Huang ', 'Zun ', 'Shan ', 'Shan ', 'Fan ', 'Jue ', 'Lin ', 'Xun ', 'Miao ', 'Xi ', 'Eso ', 'Kyou ', 'Fen ', 'Guan ', 'Hou ', 'Kuai ', 'Zei ', 'Sao ', 'Zhan ', 'Gan ', 'Gui ', 'Sheng ', 'Li ', 'Chang ', 'Hatahata ', 'Shiira ', 'Mutsu ', 'Ru ', 'Ji ', 'Xu ', 'Huo ', 'Shiira ', 'Li ', 'Lie ', 'Li ', 'Mie ', 'Zhen ', 'Xiang ', 'E ', 'Lu ', 'Guan ', 'Li ', 'Xian ', 'Yu ', 'Dao ', 'Ji ', 'You ', 'Tun ', 'Lu ', 'Fang ', 'Ba ', 'He ', 'Bo ', 'Ping ', 'Nian ', 'Lu ', 'You ', 'Zha ', 'Fu ', 'Bo ', 'Bao ', 'Hou ', 'Pi ', 'Tai ', 'Gui ', 'Jie ', 'Kao ', 'Wei ', 'Er ', 'Tong ', 'Ze ', 'Hou ', 'Kuai ', 'Ji ', 'Jiao ', 'Xian ', 'Za ', 'Xiang ', 'Xun ', 'Geng ', 'Li ', 'Lian ', 'Jian ', 'Li ', 'Shi ', 'Tiao ', 'Gun ', 'Sha ', 'Wan ', 'Jun ', 'Ji ', 'Yong ', 'Qing ', 'Ling ', 'Qi ', 'Zou ', 'Fei ', 'Kun ', 'Chang ', 'Gu ', 'Ni ', 'Nian ', 'Diao ', 'Jing ', 'Shen ', 'Shi ', 'Zi ', 'Fen ', 'Die ', 'Bi ', 'Chang ', 'Shi ', 'Wen ', 'Wei ', 'Sai ', 'E ', 'Qiu ', 'Fu ', 'Huang ', 'Quan ', 'Jiang ', 'Bian ', 'Sao ', 'Ao ', 'Qi ', 'Ta ', 'Yin ', 'Yao ', 'Fang ', 'Jian ', 'Le ', 'Biao ', 'Xue ', 'Bie ', 'Man ', 'Min ', 'Yong ', 'Wei ', 'Xi ', 'Jue ', 'Shan ', 'Lin ', 'Zun ', 'Huo ', 'Gan ', 'Li ', 'Zhan ', 'Guan ', 'Niao ', 'Yi ', 'Fu ', 'Li ', 'Jiu ', 'Bu ', 'Yan ', 'Fu ', 'Diao ', 'Ji ', 'Feng ', 'Nio ', 'Gan ', 'Shi ', 'Feng ', 'Ming ', 'Bao ', 'Yuan ', 'Zhi ', 'Hu ', 'Qin ', 'Fu ', 'Fen ', 'Wen ', 'Jian ', 'Shi ', 'Yu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x00c.php\",\"ext\":\"php\",\"size\":1556,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', 'N', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'L', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bh', 'm', 'y', 'r', 'rr', 'l', 'll', '[?]', 'v', 'sh', 'ss', 's', 'h', '[?]', '[?]', '[?]', '[?]', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '+', '+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'RR', 'LL', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'L', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bh', 'm', 'y', 'r', 'rr', 'l', 'll', '[?]', 'v', 'sh', 'ss', 's', 'h', '[?]', '[?]', '[?]', '[?]', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', '[?]', 'e', 'ee', 'ai', '[?]', 'o', 'oo', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '+', '+', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'lll', '[?]', 'RR', 'LL', '[?]', '[?]', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x1d6.php\",\"ext\":\"php\",\"size\":1418,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['s', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'i', 'j', '', '', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lamda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Theta', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'nabla', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lamda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'sigma', 'tai', 'upsilon', 'phi', 'chi', 'psi', 'omega', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x056.php\",\"ext\":\"php\",\"size\":2059,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Di ', 'Qi ', 'Jiao ', 'Chong ', 'Jiao ', 'Kai ', 'Tan ', 'San ', 'Cao ', 'Jia ', 'Ai ', 'Xiao ', 'Piao ', 'Lou ', 'Ga ', 'Gu ', 'Xiao ', 'Hu ', 'Hui ', 'Guo ', 'Ou ', 'Xian ', 'Ze ', 'Chang ', 'Xu ', 'Po ', 'De ', 'Ma ', 'Ma ', 'Hu ', 'Lei ', 'Du ', 'Ga ', 'Tang ', 'Ye ', 'Beng ', 'Ying ', 'Saai ', 'Jiao ', 'Mi ', 'Xiao ', 'Hua ', 'Mai ', 'Ran ', 'Zuo ', 'Peng ', 'Lao ', 'Xiao ', 'Ji ', 'Zhu ', 'Chao ', 'Kui ', 'Zui ', 'Xiao ', 'Si ', 'Hao ', 'Fu ', 'Liao ', 'Qiao ', 'Xi ', 'Xiu ', 'Tan ', 'Tan ', 'Mo ', 'Xun ', 'E ', 'Zun ', 'Fan ', 'Chi ', 'Hui ', 'Zan ', 'Chuang ', 'Cu ', 'Dan ', 'Yu ', 'Tun ', 'Cheng ', 'Jiao ', 'Ye ', 'Xi ', 'Qi ', 'Hao ', 'Lian ', 'Xu ', 'Deng ', 'Hui ', 'Yin ', 'Pu ', 'Jue ', 'Qin ', 'Xun ', 'Nie ', 'Lu ', 'Si ', 'Yan ', 'Ying ', 'Da ', 'Dan ', 'Yu ', 'Zhou ', 'Jin ', 'Nong ', 'Yue ', 'Hui ', 'Qi ', 'E ', 'Zao ', 'Yi ', 'Shi ', 'Jiao ', 'Yuan ', 'Ai ', 'Yong ', 'Jue ', 'Kuai ', 'Yu ', 'Pen ', 'Dao ', 'Ge ', 'Xin ', 'Dun ', 'Dang ', 'Sin ', 'Sai ', 'Pi ', 'Pi ', 'Yin ', 'Zui ', 'Ning ', 'Di ', 'Lan ', 'Ta ', 'Huo ', 'Ru ', 'Hao ', 'Xia ', 'Ya ', 'Duo ', 'Xi ', 'Chou ', 'Ji ', 'Jin ', 'Hao ', 'Ti ', 'Chang ', '[?] ', '[?] ', 'Ca ', 'Ti ', 'Lu ', 'Hui ', 'Bo ', 'You ', 'Nie ', 'Yin ', 'Hu ', 'Mo ', 'Huang ', 'Zhe ', 'Li ', 'Liu ', 'Haai ', 'Nang ', 'Xiao ', 'Mo ', 'Yan ', 'Li ', 'Lu ', 'Long ', 'Fu ', 'Dan ', 'Chen ', 'Pin ', 'Pi ', 'Xiang ', 'Huo ', 'Mo ', 'Xi ', 'Duo ', 'Ku ', 'Yan ', 'Chan ', 'Ying ', 'Rang ', 'Dian ', 'La ', 'Ta ', 'Xiao ', 'Jiao ', 'Chuo ', 'Huan ', 'Huo ', 'Zhuan ', 'Nie ', 'Xiao ', 'Ca ', 'Li ', 'Chan ', 'Chai ', 'Li ', 'Yi ', 'Luo ', 'Nang ', 'Zan ', 'Su ', 'Xi ', 'So ', 'Jian ', 'Za ', 'Zhu ', 'Lan ', 'Nie ', 'Nang ', '[?] ', '[?] ', 'Wei ', 'Hui ', 'Yin ', 'Qiu ', 'Si ', 'Nin ', 'Jian ', 'Hui ', 'Xin ', 'Yin ', 'Nan ', 'Tuan ', 'Tuan ', 'Dun ', 'Kang ', 'Yuan ', 'Jiong ', 'Pian ', 'Yun ', 'Cong ', 'Hu ', 'Hui ', 'Yuan ', 'You ', 'Guo ', 'Kun ', 'Cong ', 'Wei ', 'Tu ', 'Wei ', 'Lun ', 'Guo ', 'Qun ', 'Ri ', 'Ling ', 'Gu ', 'Guo ', 'Tai ', 'Guo ', 'Tu ', 'You '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x09a.php\",\"ext\":\"php\",\"size\":2067,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['E ', 'Cheng ', 'Xin ', 'Ai ', 'Lu ', 'Zhui ', 'Zhou ', 'She ', 'Pian ', 'Kun ', 'Tao ', 'Lai ', 'Zong ', 'Ke ', 'Qi ', 'Qi ', 'Yan ', 'Fei ', 'Sao ', 'Yan ', 'Jie ', 'Yao ', 'Wu ', 'Pian ', 'Cong ', 'Pian ', 'Qian ', 'Fei ', 'Huang ', 'Jian ', 'Huo ', 'Yu ', 'Ti ', 'Quan ', 'Xia ', 'Zong ', 'Kui ', 'Rou ', 'Si ', 'Gua ', 'Tuo ', 'Kui ', 'Sou ', 'Qian ', 'Cheng ', 'Zhi ', 'Liu ', 'Pang ', 'Teng ', 'Xi ', 'Cao ', 'Du ', 'Yan ', 'Yuan ', 'Zou ', 'Sao ', 'Shan ', 'Li ', 'Zhi ', 'Shuang ', 'Lu ', 'Xi ', 'Luo ', 'Zhang ', 'Mo ', 'Ao ', 'Can ', 'Piao ', 'Cong ', 'Qu ', 'Bi ', 'Zhi ', 'Yu ', 'Xu ', 'Hua ', 'Bo ', 'Su ', 'Xiao ', 'Lin ', 'Chan ', 'Dun ', 'Liu ', 'Tuo ', 'Zeng ', 'Tan ', 'Jiao ', 'Tie ', 'Yan ', 'Luo ', 'Zhan ', 'Jing ', 'Yi ', 'Ye ', 'Tuo ', 'Bin ', 'Zou ', 'Yan ', 'Peng ', 'Lu ', 'Teng ', 'Xiang ', 'Ji ', 'Shuang ', 'Ju ', 'Xi ', 'Huan ', 'Li ', 'Biao ', 'Ma ', 'Yu ', 'Tuo ', 'Xun ', 'Chi ', 'Qu ', 'Ri ', 'Bo ', 'Lu ', 'Zang ', 'Shi ', 'Si ', 'Fu ', 'Ju ', 'Zou ', 'Zhu ', 'Tuo ', 'Nu ', 'Jia ', 'Yi ', 'Tai ', 'Xiao ', 'Ma ', 'Yin ', 'Jiao ', 'Hua ', 'Luo ', 'Hai ', 'Pian ', 'Biao ', 'Li ', 'Cheng ', 'Yan ', 'Xin ', 'Qin ', 'Jun ', 'Qi ', 'Qi ', 'Ke ', 'Zhui ', 'Zong ', 'Su ', 'Can ', 'Pian ', 'Zhi ', 'Kui ', 'Sao ', 'Wu ', 'Ao ', 'Liu ', 'Qian ', 'Shan ', 'Piao ', 'Luo ', 'Cong ', 'Chan ', 'Zou ', 'Ji ', 'Shuang ', 'Xiang ', 'Gu ', 'Wei ', 'Wei ', 'Wei ', 'Yu ', 'Gan ', 'Yi ', 'Ang ', 'Tou ', 'Xie ', 'Bao ', 'Bi ', 'Chi ', 'Ti ', 'Di ', 'Ku ', 'Hai ', 'Qiao ', 'Gou ', 'Kua ', 'Ge ', 'Tui ', 'Geng ', 'Pian ', 'Bi ', 'Ke ', 'Ka ', 'Yu ', 'Sui ', 'Lou ', 'Bo ', 'Xiao ', 'Pang ', 'Bo ', 'Ci ', 'Kuan ', 'Bin ', 'Mo ', 'Liao ', 'Lou ', 'Nao ', 'Du ', 'Zang ', 'Sui ', 'Ti ', 'Bin ', 'Kuan ', 'Lu ', 'Gao ', 'Gao ', 'Qiao ', 'Kao ', 'Qiao ', 'Lao ', 'Zao ', 'Biao ', 'Kun ', 'Kun ', 'Ti ', 'Fang ', 'Xiu ', 'Ran ', 'Mao ', 'Dan ', 'Kun ', 'Bin ', 'Fa ', 'Tiao ', 'Peng ', 'Zi ', 'Fa ', 'Ran ', 'Ti ', 'Pao ', 'Pi ', 'Mao ', 'Fu ', 'Er ', 'Rong ', 'Qu ', 'Gong ', 'Xiu ', 'Gua ', 'Ji ', 'Peng ', 'Zhua ', 'Shao ', 'Sha '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x052.php\",\"ext\":\"php\",\"size\":2098,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Dao ', 'Diao ', 'Dao ', 'Ren ', 'Ren ', 'Chuang ', 'Fen ', 'Qie ', 'Yi ', 'Ji ', 'Kan ', 'Qian ', 'Cun ', 'Chu ', 'Wen ', 'Ji ', 'Dan ', 'Xing ', 'Hua ', 'Wan ', 'Jue ', 'Li ', 'Yue ', 'Lie ', 'Liu ', 'Ze ', 'Gang ', 'Chuang ', 'Fu ', 'Chu ', 'Qu ', 'Ju ', 'Shan ', 'Min ', 'Ling ', 'Zhong ', 'Pan ', 'Bie ', 'Jie ', 'Jie ', 'Bao ', 'Li ', 'Shan ', 'Bie ', 'Chan ', 'Jing ', 'Gua ', 'Gen ', 'Dao ', 'Chuang ', 'Kui ', 'Ku ', 'Duo ', 'Er ', 'Zhi ', 'Shua ', 'Quan ', 'Cha ', 'Ci ', 'Ke ', 'Jie ', 'Gui ', 'Ci ', 'Gui ', 'Kai ', 'Duo ', 'Ji ', 'Ti ', 'Jing ', 'Lou ', 'Gen ', 'Ze ', 'Yuan ', 'Cuo ', 'Xue ', 'Ke ', 'La ', 'Qian ', 'Cha ', 'Chuang ', 'Gua ', 'Jian ', 'Cuo ', 'Li ', 'Ti ', 'Fei ', 'Pou ', 'Chan ', 'Qi ', 'Chuang ', 'Zi ', 'Gang ', 'Wan ', 'Bo ', 'Ji ', 'Duo ', 'Qing ', 'Yan ', 'Zhuo ', 'Jian ', 'Ji ', 'Bo ', 'Yan ', 'Ju ', 'Huo ', 'Sheng ', 'Jian ', 'Duo ', 'Duan ', 'Wu ', 'Gua ', 'Fu ', 'Sheng ', 'Jian ', 'Ge ', 'Zha ', 'Kai ', 'Chuang ', 'Juan ', 'Chan ', 'Tuan ', 'Lu ', 'Li ', 'Fou ', 'Shan ', 'Piao ', 'Kou ', 'Jiao ', 'Gua ', 'Qiao ', 'Jue ', 'Hua ', 'Zha ', 'Zhuo ', 'Lian ', 'Ju ', 'Pi ', 'Liu ', 'Gui ', 'Jiao ', 'Gui ', 'Jian ', 'Jian ', 'Tang ', 'Huo ', 'Ji ', 'Jian ', 'Yi ', 'Jian ', 'Zhi ', 'Chan ', 'Cuan ', 'Mo ', 'Li ', 'Zhu ', 'Li ', 'Ya ', 'Quan ', 'Ban ', 'Gong ', 'Jia ', 'Wu ', 'Mai ', 'Lie ', 'Jin ', 'Keng ', 'Xie ', 'Zhi ', 'Dong ', 'Zhu ', 'Nu ', 'Jie ', 'Qu ', 'Shao ', 'Yi ', 'Zhu ', 'Miao ', 'Li ', 'Jing ', 'Lao ', 'Lao ', 'Juan ', 'Kou ', 'Yang ', 'Wa ', 'Xiao ', 'Mou ', 'Kuang ', 'Jie ', 'Lie ', 'He ', 'Shi ', 'Ke ', 'Jing ', 'Hao ', 'Bo ', 'Min ', 'Chi ', 'Lang ', 'Yong ', 'Yong ', 'Mian ', 'Ke ', 'Xun ', 'Juan ', 'Qing ', 'Lu ', 'Pou ', 'Meng ', 'Lai ', 'Le ', 'Kai ', 'Mian ', 'Dong ', 'Xu ', 'Xu ', 'Kan ', 'Wu ', 'Yi ', 'Xun ', 'Weng ', 'Sheng ', 'Lao ', 'Mu ', 'Lu ', 'Piao ', 'Shi ', 'Ji ', 'Qin ', 'Qiang ', 'Jiao ', 'Quan ', 'Yang ', 'Yi ', 'Jue ', 'Fan ', 'Juan ', 'Tong ', 'Ju ', 'Dan ', 'Xie ', 'Mai ', 'Xun ', 'Xun ', 'Lu ', 'Li ', 'Che ', 'Rang ', 'Quan ', 'Bao ', 'Shao ', 'Yun ', 'Jiu ', 'Bao ', 'Gou ', 'Wu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x05f.php\",\"ext\":\"php\",\"size\":2104,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Kai ', 'Bian ', 'Yi ', 'Qi ', 'Nong ', 'Fen ', 'Ju ', 'Yan ', 'Yi ', 'Zang ', 'Bi ', 'Yi ', 'Yi ', 'Er ', 'San ', 'Shi ', 'Er ', 'Shi ', 'Shi ', 'Gong ', 'Diao ', 'Yin ', 'Hu ', 'Fu ', 'Hong ', 'Wu ', 'Tui ', 'Chi ', 'Jiang ', 'Ba ', 'Shen ', 'Di ', 'Zhang ', 'Jue ', 'Tao ', 'Fu ', 'Di ', 'Mi ', 'Xian ', 'Hu ', 'Chao ', 'Nu ', 'Jing ', 'Zhen ', 'Yi ', 'Mi ', 'Quan ', 'Wan ', 'Shao ', 'Ruo ', 'Xuan ', 'Jing ', 'Dun ', 'Zhang ', 'Jiang ', 'Qiang ', 'Peng ', 'Dan ', 'Qiang ', 'Bi ', 'Bi ', 'She ', 'Dan ', 'Jian ', 'Gou ', 'Sei ', 'Fa ', 'Bi ', 'Kou ', 'Nagi ', 'Bie ', 'Xiao ', 'Dan ', 'Kuo ', 'Qiang ', 'Hong ', 'Mi ', 'Kuo ', 'Wan ', 'Jue ', 'Ji ', 'Ji ', 'Gui ', 'Dang ', 'Lu ', 'Lu ', 'Tuan ', 'Hui ', 'Zhi ', 'Hui ', 'Hui ', 'Yi ', 'Yi ', 'Yi ', 'Yi ', 'Huo ', 'Huo ', 'Shan ', 'Xing ', 'Wen ', 'Tong ', 'Yan ', 'Yan ', 'Yu ', 'Chi ', 'Cai ', 'Biao ', 'Diao ', 'Bin ', 'Peng ', 'Yong ', 'Piao ', 'Zhang ', 'Ying ', 'Chi ', 'Chi ', 'Zhuo ', 'Tuo ', 'Ji ', 'Pang ', 'Zhong ', 'Yi ', 'Wang ', 'Che ', 'Bi ', 'Chi ', 'Ling ', 'Fu ', 'Wang ', 'Zheng ', 'Cu ', 'Wang ', 'Jing ', 'Dai ', 'Xi ', 'Xun ', 'Hen ', 'Yang ', 'Huai ', 'Lu ', 'Hou ', 'Wa ', 'Cheng ', 'Zhi ', 'Xu ', 'Jing ', 'Tu ', 'Cong ', '[?] ', 'Lai ', 'Cong ', 'De ', 'Pai ', 'Xi ', '[?] ', 'Qi ', 'Chang ', 'Zhi ', 'Cong ', 'Zhou ', 'Lai ', 'Yu ', 'Xie ', 'Jie ', 'Jian ', 'Chi ', 'Jia ', 'Bian ', 'Huang ', 'Fu ', 'Xun ', 'Wei ', 'Pang ', 'Yao ', 'Wei ', 'Xi ', 'Zheng ', 'Piao ', 'Chi ', 'De ', 'Zheng ', 'Zheng ', 'Bie ', 'De ', 'Chong ', 'Che ', 'Jiao ', 'Wei ', 'Jiao ', 'Hui ', 'Mei ', 'Long ', 'Xiang ', 'Bao ', 'Qu ', 'Xin ', 'Shu ', 'Bi ', 'Yi ', 'Le ', 'Ren ', 'Dao ', 'Ding ', 'Gai ', 'Ji ', 'Ren ', 'Ren ', 'Chan ', 'Tan ', 'Te ', 'Te ', 'Gan ', 'Qi ', 'Shi ', 'Cun ', 'Zhi ', 'Wang ', 'Mang ', 'Xi ', 'Fan ', 'Ying ', 'Tian ', 'Min ', 'Min ', 'Zhong ', 'Chong ', 'Wu ', 'Ji ', 'Wu ', 'Xi ', 'Ye ', 'You ', 'Wan ', 'Cong ', 'Zhong ', 'Kuai ', 'Yu ', 'Bian ', 'Zhi ', 'Qi ', 'Cui ', 'Chen ', 'Tai ', 'Tun ', 'Qian ', 'Nian ', 'Hun ', 'Xiong ', 'Niu ', 'Wang ', 'Xian ', 'Xin ', 'Kang ', 'Hu ', 'Kai ', 'Fen '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x074.php\",\"ext\":\"php\",\"size\":2140,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Han ', 'Xuan ', 'Yan ', 'Qiu ', 'Quan ', 'Lang ', 'Li ', 'Xiu ', 'Fu ', 'Liu ', 'Ye ', 'Xi ', 'Ling ', 'Li ', 'Jin ', 'Lian ', 'Suo ', 'Chiisai ', '[?] ', 'Wan ', 'Dian ', 'Pin ', 'Zhan ', 'Cui ', 'Min ', 'Yu ', 'Ju ', 'Chen ', 'Lai ', 'Wen ', 'Sheng ', 'Wei ', 'Dian ', 'Chu ', 'Zhuo ', 'Pei ', 'Cheng ', 'Hu ', 'Qi ', 'E ', 'Kun ', 'Chang ', 'Qi ', 'Beng ', 'Wan ', 'Lu ', 'Cong ', 'Guan ', 'Yan ', 'Diao ', 'Bei ', 'Lin ', 'Qin ', 'Pi ', 'Pa ', 'Que ', 'Zhuo ', 'Qin ', 'Fa ', '[?] ', 'Qiong ', 'Du ', 'Jie ', 'Hun ', 'Yu ', 'Mao ', 'Mei ', 'Chun ', 'Xuan ', 'Ti ', 'Xing ', 'Dai ', 'Rou ', 'Min ', 'Zhen ', 'Wei ', 'Ruan ', 'Huan ', 'Jie ', 'Chuan ', 'Jian ', 'Zhuan ', 'Yang ', 'Lian ', 'Quan ', 'Xia ', 'Duan ', 'Yuan ', 'Ye ', 'Nao ', 'Hu ', 'Ying ', 'Yu ', 'Huang ', 'Rui ', 'Se ', 'Liu ', 'Shi ', 'Rong ', 'Suo ', 'Yao ', 'Wen ', 'Wu ', 'Jin ', 'Jin ', 'Ying ', 'Ma ', 'Tao ', 'Liu ', 'Tang ', 'Li ', 'Lang ', 'Gui ', 'Zhen ', 'Qiang ', 'Cuo ', 'Jue ', 'Zhao ', 'Yao ', 'Ai ', 'Bin ', 'Tu ', 'Chang ', 'Kun ', 'Zhuan ', 'Cong ', 'Jin ', 'Yi ', 'Cui ', 'Cong ', 'Qi ', 'Li ', 'Ying ', 'Suo ', 'Qiu ', 'Xuan ', 'Ao ', 'Lian ', 'Man ', 'Zhang ', 'Yin ', '[?] ', 'Ying ', 'Zhi ', 'Lu ', 'Wu ', 'Deng ', 'Xiou ', 'Zeng ', 'Xun ', 'Qu ', 'Dang ', 'Lin ', 'Liao ', 'Qiong ', 'Su ', 'Huang ', 'Gui ', 'Pu ', 'Jing ', 'Fan ', 'Jin ', 'Liu ', 'Ji ', '[?] ', 'Jing ', 'Ai ', 'Bi ', 'Can ', 'Qu ', 'Zao ', 'Dang ', 'Jiao ', 'Gun ', 'Tan ', 'Hui ', 'Huan ', 'Se ', 'Sui ', 'Tian ', '[?] ', 'Yu ', 'Jin ', 'Lu ', 'Bin ', 'Shou ', 'Wen ', 'Zui ', 'Lan ', 'Xi ', 'Ji ', 'Xuan ', 'Ruan ', 'Huo ', 'Gai ', 'Lei ', 'Du ', 'Li ', 'Zhi ', 'Rou ', 'Li ', 'Zan ', 'Qiong ', 'Zhe ', 'Gui ', 'Sui ', 'La ', 'Long ', 'Lu ', 'Li ', 'Zan ', 'Lan ', 'Ying ', 'Mi ', 'Xiang ', 'Xi ', 'Guan ', 'Dao ', 'Zan ', 'Huan ', 'Gua ', 'Bo ', 'Die ', 'Bao ', 'Hu ', 'Zhi ', 'Piao ', 'Ban ', 'Rang ', 'Li ', 'Wa ', 'Dekaguramu ', 'Jiang ', 'Qian ', 'Fan ', 'Pen ', 'Fang ', 'Dan ', 'Weng ', 'Ou ', 'Deshiguramu ', 'Miriguramu ', 'Thon ', 'Hu ', 'Ling ', 'Yi ', 'Ping ', 'Ci ', 'Hekutogura ', 'Juan ', 'Chang ', 'Chi ', 'Sarake ', 'Dang ', 'Meng ', 'Pou '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x1d7.php\",\"ext\":\"php\",\"size\":1089,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php returnn\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x077.php\",\"ext\":\"php\",\"size\":2119,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Ming ', 'Sheng ', 'Shi ', 'Yun ', 'Mian ', 'Pan ', 'Fang ', 'Miao ', 'Dan ', 'Mei ', 'Mao ', 'Kan ', 'Xian ', 'Ou ', 'Shi ', 'Yang ', 'Zheng ', 'Yao ', 'Shen ', 'Huo ', 'Da ', 'Zhen ', 'Kuang ', 'Ju ', 'Shen ', 'Chi ', 'Sheng ', 'Mei ', 'Mo ', 'Zhu ', 'Zhen ', 'Zhen ', 'Mian ', 'Di ', 'Yuan ', 'Die ', 'Yi ', 'Zi ', 'Zi ', 'Chao ', 'Zha ', 'Xuan ', 'Bing ', 'Mi ', 'Long ', 'Sui ', 'Dong ', 'Mi ', 'Die ', 'Yi ', 'Er ', 'Ming ', 'Xuan ', 'Chi ', 'Kuang ', 'Juan ', 'Mou ', 'Zhen ', 'Tiao ', 'Yang ', 'Yan ', 'Mo ', 'Zhong ', 'Mai ', 'Zhao ', 'Zheng ', 'Mei ', 'Jun ', 'Shao ', 'Han ', 'Huan ', 'Di ', 'Cheng ', 'Cuo ', 'Juan ', 'E ', 'Wan ', 'Xian ', 'Xi ', 'Kun ', 'Lai ', 'Jian ', 'Shan ', 'Tian ', 'Hun ', 'Wan ', 'Ling ', 'Shi ', 'Qiong ', 'Lie ', 'Yai ', 'Jing ', 'Zheng ', 'Li ', 'Lai ', 'Sui ', 'Juan ', 'Shui ', 'Sui ', 'Du ', 'Bi ', 'Bi ', 'Mu ', 'Hun ', 'Ni ', 'Lu ', 'Yi ', 'Jie ', 'Cai ', 'Zhou ', 'Yu ', 'Hun ', 'Ma ', 'Xia ', 'Xing ', 'Xi ', 'Gun ', 'Cai ', 'Chun ', 'Jian ', 'Mei ', 'Du ', 'Hou ', 'Xuan ', 'Ti ', 'Kui ', 'Gao ', 'Rui ', 'Mou ', 'Xu ', 'Fa ', 'Wen ', 'Miao ', 'Chou ', 'Kui ', 'Mi ', 'Weng ', 'Kou ', 'Dang ', 'Chen ', 'Ke ', 'Sou ', 'Xia ', 'Qiong ', 'Mao ', 'Ming ', 'Man ', 'Shui ', 'Ze ', 'Zhang ', 'Yi ', 'Diao ', 'Ou ', 'Mo ', 'Shun ', 'Cong ', 'Lou ', 'Chi ', 'Man ', 'Piao ', 'Cheng ', 'Ji ', 'Meng ', '[?] ', 'Run ', 'Pie ', 'Xi ', 'Qiao ', 'Pu ', 'Zhu ', 'Deng ', 'Shen ', 'Shun ', 'Liao ', 'Che ', 'Xian ', 'Kan ', 'Ye ', 'Xu ', 'Tong ', 'Mou ', 'Lin ', 'Kui ', 'Xian ', 'Ye ', 'Ai ', 'Hui ', 'Zhan ', 'Jian ', 'Gu ', 'Zhao ', 'Qu ', 'Wei ', 'Chou ', 'Sao ', 'Ning ', 'Xun ', 'Yao ', 'Huo ', 'Meng ', 'Mian ', 'Bin ', 'Mian ', 'Li ', 'Kuang ', 'Jue ', 'Xuan ', 'Mian ', 'Huo ', 'Lu ', 'Meng ', 'Long ', 'Guan ', 'Man ', 'Xi ', 'Chu ', 'Tang ', 'Kan ', 'Zhu ', 'Mao ', 'Jin ', 'Lin ', 'Yu ', 'Shuo ', 'Ce ', 'Jue ', 'Shi ', 'Yi ', 'Shen ', 'Zhi ', 'Hou ', 'Shen ', 'Ying ', 'Ju ', 'Zhou ', 'Jiao ', 'Cuo ', 'Duan ', 'Ai ', 'Jiao ', 'Zeng ', 'Huo ', 'Bai ', 'Shi ', 'Ding ', 'Qi ', 'Ji ', 'Zi ', 'Gan ', 'Wu ', 'Tuo ', 'Ku ', 'Qiang ', 'Xi ', 'Fan ', 'Kuang '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x079.php\",\"ext\":\"php\",\"size\":2046,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Tani ', 'Jiao ', '[?] ', 'Zhang ', 'Qiao ', 'Dun ', 'Xian ', 'Yu ', 'Zhui ', 'He ', 'Huo ', 'Zhai ', 'Lei ', 'Ke ', 'Chu ', 'Ji ', 'Que ', 'Dang ', 'Yi ', 'Jiang ', 'Pi ', 'Pi ', 'Yu ', 'Pin ', 'Qi ', 'Ai ', 'Kai ', 'Jian ', 'Yu ', 'Ruan ', 'Meng ', 'Pao ', 'Ci ', '[?] ', '[?] ', 'Mie ', 'Ca ', 'Xian ', 'Kuang ', 'Lei ', 'Lei ', 'Zhi ', 'Li ', 'Li ', 'Fan ', 'Que ', 'Pao ', 'Ying ', 'Li ', 'Long ', 'Long ', 'Mo ', 'Bo ', 'Shuang ', 'Guan ', 'Lan ', 'Zan ', 'Yan ', 'Shi ', 'Shi ', 'Li ', 'Reng ', 'She ', 'Yue ', 'Si ', 'Qi ', 'Ta ', 'Ma ', 'Xie ', 'Xian ', 'Xian ', 'Zhi ', 'Qi ', 'Zhi ', 'Beng ', 'Dui ', 'Zhong ', '[?] ', 'Yi ', 'Shi ', 'You ', 'Zhi ', 'Tiao ', 'Fu ', 'Fu ', 'Mi ', 'Zu ', 'Zhi ', 'Suan ', 'Mei ', 'Zuo ', 'Qu ', 'Hu ', 'Zhu ', 'Shen ', 'Sui ', 'Ci ', 'Chai ', 'Mi ', 'Lu ', 'Yu ', 'Xiang ', 'Wu ', 'Tiao ', 'Piao ', 'Zhu ', 'Gui ', 'Xia ', 'Zhi ', 'Ji ', 'Gao ', 'Zhen ', 'Gao ', 'Shui ', 'Jin ', 'Chen ', 'Gai ', 'Kun ', 'Di ', 'Dao ', 'Huo ', 'Tao ', 'Qi ', 'Gu ', 'Guan ', 'Zui ', 'Ling ', 'Lu ', 'Bing ', 'Jin ', 'Dao ', 'Zhi ', 'Lu ', 'Shan ', 'Bei ', 'Zhe ', 'Hui ', 'You ', 'Xi ', 'Yin ', 'Zi ', 'Huo ', 'Zhen ', 'Fu ', 'Yuan ', 'Wu ', 'Xian ', 'Yang ', 'Ti ', 'Yi ', 'Mei ', 'Si ', 'Di ', '[?] ', 'Zhuo ', 'Zhen ', 'Yong ', 'Ji ', 'Gao ', 'Tang ', 'Si ', 'Ma ', 'Ta ', '[?] ', 'Xuan ', 'Qi ', 'Yu ', 'Xi ', 'Ji ', 'Si ', 'Chan ', 'Tan ', 'Kuai ', 'Sui ', 'Li ', 'Nong ', 'Ni ', 'Dao ', 'Li ', 'Rang ', 'Yue ', 'Ti ', 'Zan ', 'Lei ', 'Rou ', 'Yu ', 'Yu ', 'Chi ', 'Xie ', 'Qin ', 'He ', 'Tu ', 'Xiu ', 'Si ', 'Ren ', 'Tu ', 'Zi ', 'Cha ', 'Gan ', 'Yi ', 'Xian ', 'Bing ', 'Nian ', 'Qiu ', 'Qiu ', 'Chong ', 'Fen ', 'Hao ', 'Yun ', 'Ke ', 'Miao ', 'Zhi ', 'Geng ', 'Bi ', 'Zhi ', 'Yu ', 'Mi ', 'Ku ', 'Ban ', 'Pi ', 'Ni ', 'Li ', 'You ', 'Zu ', 'Pi ', 'Ba ', 'Ling ', 'Mo ', 'Cheng ', 'Nian ', 'Qin ', 'Yang ', 'Zuo ', 'Zhi ', 'Zhi ', 'Shu ', 'Ju ', 'Zi ', 'Huo ', 'Ji ', 'Cheng ', 'Tong ', 'Zhi ', 'Huo ', 'He ', 'Yin ', 'Zi ', 'Zhi ', 'Jie ', 'Ren ', 'Du ', 'Yi ', 'Zhu ', 'Hui ', 'Nong ', 'Fu '];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x026.php\",\"ext\":\"php\",\"size\":1474,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php returnn\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x0fc.php\",\"ext\":\"php\",\"size\":1039,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php returnn\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x009.php\",\"ext\":\"php\",\"size\":1529,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['[?]', 'N', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'L', 'eN', 'e', 'e', 'ai', 'oN', 'o', 'o', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', 'nnn', 'p', 'ph', 'b', 'bh', 'm', 'y', 'r', 'rr', 'l', 'l', 'lll', 'v', 'sh', 'ss', 's', 'h', '[?]', '[?]', '\\\\'', '\\\\'', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', 'eN', 'e', 'e', 'ai', 'oN', 'o', 'o', 'au', '', '[?]', '[?]', 'AUM', '\\\\'', '\\\\'', '`', '\\\\'', '[?]', '[?]', '[?]', 'q', 'khh', 'ghh', 'z', 'dddh', 'rh', 'f', 'yy', 'RR', 'LL', 'L', 'LL', ' \/ ', ' \/\/ ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', 'N', 'N', 'H', '[?]', 'a', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', '[?]', '[?]', 'e', 'ai', '[?]', '[?]', 'o', 'au', 'k', 'kh', 'g', 'gh', 'ng', 'c', 'ch', 'j', 'jh', 'ny', 'tt', 'tth', 'dd', 'ddh', 'nn', 't', 'th', 'd', 'dh', 'n', '[?]', 'p', 'ph', 'b', 'bh', 'm', 'y', 'r', '[?]', 'l', '[?]', '[?]', '[?]', 'sh', 'ss', 's', 'h', '[?]', '[?]', '\\\\'', '[?]', 'aa', 'i', 'ii', 'u', 'uu', 'R', 'RR', '[?]', '[?]', 'e', 'ai', '[?]', '[?]', 'o', 'au', '', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '[?]', '+', '[?]', '[?]', '[?]', '[?]', 'rr', 'rh', '[?]', 'yy', 'RR', 'LL', 'L', 'LL', '[?]', '[?]', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'r\\\\'', 'r`', 'Rs', 'Rs', '1\/', '2\/', '3\/', '4\/', ' 1 - 1\/', '\/16', '', '[?]', '[?]', '[?]', '[?]'];\\n\"},{\"base\":\"plugins\",\"rel\":\"hostinger-ai-assistant\/vendor\/voku\/portable-ascii\/src\/voku\/helper\/data\/x06a.php\",\"ext\":\"php\",\"size\":2118,\"mtime\":1756373565,\"type\":\"text\",\"content\":\"<?php return ['Di ', 'Zhuang ', 'Le ', 'Lang ', 'Chen ', 'Cong ', 'Li ', 'Xiu ', 'Qing ', 'Shuang ', 'Fan ', 'Tong ', 'Guan ', 'Ji ', 'Suo ', 'Lei ', 'Lu ', 'Liang ', 'Mi ', 'Lou ', 'Chao ', 'Su ', 'Ke ', 'Shu ', 'Tang ', 'Biao ', 'Lu ', 'Jiu ', 'Shu ', 'Zha ', 'Shu ', 'Zhang ', 'Men ', 'Mo ', 'Niao ', 'Yang ', 'Tiao ', 'Peng ', 'Zhu ', 'Sha ', 'Xi ', 'Quan ', 'Heng ', 'Jian ', 'Cong ', '[?] ', 'Hokuso ', 'Qiang ', 'Tara ', 'Ying ', 'Er ', 'Xin ', 'Zhi ', 'Qiao ', 'Zui ', 'Cong ', 'Pu ', 'Shu ', 'Hua ', 'Kui ', 'Zhen ', 'Zun ', 'Yue ', 'Zhan ', 'Xi ', 'Xun ', 'Dian ', 'Fa ', 'Gan ', 'Mo ', 'Wu ', 'Qiao ', 'Nao ', 'Lin ', 'Liu ', 'Qiao ', 'Xian ', 'Run ', 'Fan ', 'Zhan ', 'Tuo ', 'Lao ', 'Yun ', 'Shun ', 'Tui ', 'Cheng ', 'Tang ', 'Meng ', 'Ju ', 'Cheng ', 'Su ', 'Jue ', 'Jue ', 'Tan ', 'Hui ', 'Ji ', 'Nuo ', 'Xiang ', 'Tuo ', 'Ning ', 'Rui ', 'Zhu ', 'Chuang ', 'Zeng ', 'Fen ', 'Qiong ', 'Ran ', 'Heng ', 'Cen ', 'Gu ', 'Liu ', 'Lao ', 'Gao ', 'Chu ', 'Zusa ', 'Nude ', 'Ca ', 'San ', 'Ji ', 'Dou ', 'Shou ', 'Lu ', '[?] ', '[?] ', 'Yuan ', 'Ta ', 'Shu ', 'Jiang ', 'Tan ', 'Lin ', 'Nong ', 'Yin ', 'Xi ', 'Sui ', 'Shan ', 'Zui ', 'Xuan ', 'Cheng ', 'Gan ', 'Ju ', 'Zui ', 'Yi ', 'Qin ', 'Pu ', 'Yan ', 'Lei ', 'Feng ', 'Hui ', 'Dang ', 'Ji ', 'Sui ', 'Bo ', 'Bi ', 'Ding ', 'Chu ', 'Zhua ', 'Kuai ', 'Ji ', 'Jie ', 'Jia ', 'Qing ', 'Zhe ', 'Jian ', 'Qiang ', 'Dao ', 'Yi ', 'Biao ', 'Song ', 'She ', 'Lin ', 'Kunugi ', 'Cha ', 'Meng ', 'Yin ', 'Tao ', 'Tai ', 'Mian ', 'Qi ', 'Toan ', 'Bin ', 'Huo ', 'Ji ', 'Qian ', 'Mi ', 'Ning ', 'Yi ', 'Gao ', 'Jian ', 'Yin ', 'Er ', 'Qing ', 'Yan ', 'Qi ', 'Mi ', 'Zhao ', 'Gui ', 'Chun ', 'Ji ', 'Kui ', 'Po ', 'Deng ', 'Chu ', '[?] ', 'Mian ', 'You ', 'Zhi ', 'Guang ', 'Qian ', 'Lei ', 'Lei ', 'Sa ', 'Lu ', 'Li ', 'Cuan ', 'Lu ', 'Mie ', 'Hui ', 'Ou ', 'Lu ', 'Jie ', 'Gao ', 'Du ', 'Yuan ', 'Li ', 'Fei ', 'Zhuo ', 'Sou ', 'Lian ', 'Tamo ', 'Chu ', '[?] ', 'Zhu ', 'Lu ', 'Yan ', 'Li ', 'Zhu ', 'Chen ', 'Jie ', 'E ', 'Su ', 'Huai ', 'Nie ', 'Yu ', 'Long ', 'Lai ', '[?] ', 'Xian ', 'Kwi ', 'Ju ', 'Xiao ', 'Ling ', 'Ying ', 'Jian ', 'Yin ', 'You ', 'Ying '];\\n\"}]"